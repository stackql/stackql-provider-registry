openapi: 3.0.0
info:
  title: GroundStation
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    JsonString:
      type: string
      pattern: ^[{}\[\]:.,"0-9A-z\-_\s]{1,8192}$
    ConfigData:
      type: object
      minProperties: 1
      maxProperties: 1
      properties:
        AntennaDownlinkConfig:
          $ref: '#/components/schemas/AntennaDownlinkConfig'
        TrackingConfig:
          $ref: '#/components/schemas/TrackingConfig'
        DataflowEndpointConfig:
          $ref: '#/components/schemas/DataflowEndpointConfig'
        AntennaDownlinkDemodDecodeConfig:
          $ref: '#/components/schemas/AntennaDownlinkDemodDecodeConfig'
        AntennaUplinkConfig:
          $ref: '#/components/schemas/AntennaUplinkConfig'
        UplinkEchoConfig:
          $ref: '#/components/schemas/UplinkEchoConfig'
        S3RecordingConfig:
          $ref: '#/components/schemas/S3RecordingConfig'
      additionalProperties: false
    EirpUnits:
      type: string
      enum:
        - dBW
    Eirp:
      type: object
      properties:
        Value:
          type: number
        Units:
          $ref: '#/components/schemas/EirpUnits'
      additionalProperties: false
    FrequencyUnits:
      type: string
      enum:
        - GHz
        - MHz
        - kHz
    BandwidthUnits:
      type: string
      enum:
        - GHz
        - MHz
        - kHz
    FrequencyBandwidth:
      type: object
      properties:
        Value:
          type: number
        Units:
          $ref: '#/components/schemas/BandwidthUnits'
      additionalProperties: false
    Frequency:
      type: object
      properties:
        Value:
          type: number
        Units:
          $ref: '#/components/schemas/FrequencyUnits'
      additionalProperties: false
    Polarization:
      type: string
      enum:
        - LEFT_HAND
        - RIGHT_HAND
        - NONE
    S3KeyPrefix:
      type: string
      pattern: ^([a-zA-Z0-9_\-=/]|\{satellite_id\}|\{config\-name}|\{s3\-config-id}|\{year\}|\{month\}|\{day\}){1,900}$
    BucketArn:
      type: string
      pattern: ^arn:aws[A-Za-z0-9-]{0,64}:s3:::[A-Za-z0-9-]{1,64}$
    RoleArn:
      type: string
      pattern: ^arn:[^:\n]+:iam::[^:\n]+:role\/.+$
    UplinkSpectrumConfig:
      type: object
      properties:
        CenterFrequency:
          $ref: '#/components/schemas/Frequency'
        Polarization:
          $ref: '#/components/schemas/Polarization'
      additionalProperties: false
    SpectrumConfig:
      type: object
      properties:
        CenterFrequency:
          $ref: '#/components/schemas/Frequency'
        Bandwidth:
          $ref: '#/components/schemas/FrequencyBandwidth'
        Polarization:
          $ref: '#/components/schemas/Polarization'
      additionalProperties: false
    AntennaDownlinkConfig:
      type: object
      properties:
        SpectrumConfig:
          $ref: '#/components/schemas/SpectrumConfig'
      additionalProperties: false
    TrackingConfig:
      type: object
      properties:
        Autotrack:
          type: string
          enum:
            - REQUIRED
            - PREFERRED
            - REMOVED
      additionalProperties: false
    DataflowEndpointConfig:
      type: object
      properties:
        DataflowEndpointName:
          type: string
        DataflowEndpointRegion:
          type: string
      additionalProperties: false
    DemodulationConfig:
      type: object
      properties:
        UnvalidatedJSON:
          $ref: '#/components/schemas/JsonString'
      additionalProperties: false
    DecodeConfig:
      type: object
      properties:
        UnvalidatedJSON:
          $ref: '#/components/schemas/JsonString'
      additionalProperties: false
    AntennaDownlinkDemodDecodeConfig:
      type: object
      properties:
        SpectrumConfig:
          $ref: '#/components/schemas/SpectrumConfig'
        DemodulationConfig:
          $ref: '#/components/schemas/DemodulationConfig'
        DecodeConfig:
          $ref: '#/components/schemas/DecodeConfig'
      additionalProperties: false
    AntennaUplinkConfig:
      type: object
      properties:
        SpectrumConfig:
          $ref: '#/components/schemas/UplinkSpectrumConfig'
        TargetEirp:
          $ref: '#/components/schemas/Eirp'
        TransmitDisabled:
          type: boolean
      additionalProperties: false
    UplinkEchoConfig:
      type: object
      properties:
        Enabled:
          type: boolean
        AntennaUplinkConfigArn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
      additionalProperties: false
    S3RecordingConfig:
      type: object
      properties:
        BucketArn:
          $ref: '#/components/schemas/BucketArn'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
        Prefix:
          $ref: '#/components/schemas/S3KeyPrefix'
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          pattern: ^[ a-zA-Z0-9\+\-=._:/@]{1,128}$
        Value:
          type: string
          pattern: ^[ a-zA-Z0-9\+\-=._:/@]{1,256}$
      additionalProperties: false
      required:
        - Key
        - Value
    Config:
      type: object
      properties:
        Name:
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Type:
          type: string
        ConfigData:
          $ref: '#/components/schemas/ConfigData'
        Arn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
        Id:
          type: string
      required:
        - Name
        - ConfigData
      x-stackql-resource-name: config
      description: AWS Ground Station config resource type for CloudFormation.
      x-type-name: AWS::GroundStation::Config
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
        - Id
        - Type
      x-required-properties:
        - Name
        - ConfigData
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - groundstation:TagResource
          - groundstation:UntagResource
          - groundstation:ListTagsForResource
      x-required-permissions:
        create:
          - groundstation:CreateConfig
          - groundstation:TagResource
          - iam:PassRole
        read:
          - groundstation:GetConfig
          - groundstation:ListTagsForResource
        update:
          - groundstation:UpdateConfig
          - groundstation:ListTagsForResource
          - groundstation:TagResource
          - groundstation:UntagResource
          - iam:PassRole
        delete:
          - groundstation:DeleteConfig
        list:
          - groundstation:ListConfigs
    SocketAddress:
      type: object
      properties:
        Name:
          type: string
        Port:
          type: integer
      additionalProperties: false
    AgentStatus:
      description: The status of AgentEndpoint.
      type: string
      enum:
        - SUCCESS
        - FAILED
        - ACTIVE
        - INACTIVE
    AuditResults:
      description: The results of the audit.
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
    IntegerRange:
      description: An integer range that has a minimum and maximum value.
      type: object
      properties:
        Minimum:
          description: A minimum value.
          type: integer
        Maximum:
          description: A maximum value.
          type: integer
      additionalProperties: false
    RangedSocketAddress:
      description: A socket address with a port range.
      type: object
      properties:
        Name:
          description: IPv4 socket address.
          type: string
        PortRange:
          description: Port range of a socket address.
          $ref: '#/components/schemas/IntegerRange'
      additionalProperties: false
    ConnectionDetails:
      description: Egress address of AgentEndpoint with an optional mtu.
      type: object
      properties:
        SocketAddress:
          $ref: '#/components/schemas/SocketAddress'
        Mtu:
          description: Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.
          type: integer
      additionalProperties: false
    RangedConnectionDetails:
      description: Ingress address of AgentEndpoint with a port range and an optional mtu.
      type: object
      properties:
        SocketAddress:
          $ref: '#/components/schemas/RangedSocketAddress'
        Mtu:
          description: Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.
          type: integer
      additionalProperties: false
    AwsGroundStationAgentEndpoint:
      description: Information about AwsGroundStationAgentEndpoint.
      type: object
      properties:
        Name:
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        EgressAddress:
          $ref: '#/components/schemas/ConnectionDetails'
        IngressAddress:
          $ref: '#/components/schemas/RangedConnectionDetails'
        AgentStatus:
          $ref: '#/components/schemas/AgentStatus'
        AuditResults:
          $ref: '#/components/schemas/AuditResults'
      additionalProperties: false
    DataflowEndpoint:
      type: object
      properties:
        Name:
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        Address:
          $ref: '#/components/schemas/SocketAddress'
        Mtu:
          type: integer
      additionalProperties: false
    SecurityDetails:
      type: object
      properties:
        SubnetIds:
          type: array
          items:
            type: string
        SecurityGroupIds:
          type: array
          items:
            type: string
        RoleArn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
      additionalProperties: false
    EndpointDetails:
      type: object
      properties:
        SecurityDetails:
          $ref: '#/components/schemas/SecurityDetails'
        Endpoint:
          $ref: '#/components/schemas/DataflowEndpoint'
        AwsGroundStationAgentEndpoint:
          $ref: '#/components/schemas/AwsGroundStationAgentEndpoint'
      oneOf:
        - required:
            - Endpoint
            - SecurityDetails
        - required:
            - AwsGroundStationAgentEndpoint
      additionalProperties: false
    DataflowEndpointGroup:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
        EndpointDetails:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/EndpointDetails'
        ContactPrePassDurationSeconds:
          type: integer
          description: Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a PREPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the PREPASS state.
        ContactPostPassDurationSeconds:
          type: integer
          description: Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a POSTPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the POSTPASS state.
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - EndpointDetails
      x-stackql-resource-name: dataflow_endpoint_group
      description: AWS Ground Station DataflowEndpointGroup schema for CloudFormation
      x-type-name: AWS::GroundStation::DataflowEndpointGroup
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
      x-required-properties:
        - EndpointDetails
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - groundstation:TagResource
          - groundstation:UntagResource
          - groundstation:ListTagsForResource
      x-required-permissions:
        create:
          - groundstation:CreateDataflowEndpointGroup
          - groundstation:GetDataflowEndpointGroup
          - groundstation:TagResource
          - iam:PassRole
          - ec2:describeAddresses
          - ec2:describeNetworkInterfaces
          - iam:createServiceLinkedRole
        update:
          - groundstation:ListTagsForResource
          - groundstation:TagResource
          - groundstation:UntagResource
        read:
          - groundstation:GetDataflowEndpointGroup
          - groundstation:ListTagsForResource
        delete:
          - groundstation:DeleteDataflowEndpointGroup
          - groundstation:GetDataflowEndpointGroup
        list:
          - groundstation:ListDataflowEndpointGroups
    DataflowEdge:
      type: object
      properties:
        Source:
          type: string
        Destination:
          type: string
      additionalProperties: false
    StreamsKmsKey:
      type: object
      properties:
        KmsKeyArn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
        KmsAliasArn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
      oneOf:
        - required:
            - KmsKeyArn
        - required:
            - KmsAliasArn
      additionalProperties: false
    MissionProfile:
      type: object
      properties:
        Name:
          description: A name used to identify a mission profile.
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        ContactPrePassDurationSeconds:
          description: Pre-pass time needed before the contact.
          type: integer
        ContactPostPassDurationSeconds:
          description: Post-pass time needed after the contact.
          type: integer
        MinimumViableContactDurationSeconds:
          description: Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
          type: integer
        StreamsKmsKey:
          description: The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
          $ref: '#/components/schemas/StreamsKmsKey'
        StreamsKmsRole:
          description: The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
          type: string
        DataflowEdges:
          description: ''
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataflowEdge'
        TrackingConfigArn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Id:
          type: string
        Arn:
          type: string
          pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
        Region:
          type: string
      required:
        - Name
        - MinimumViableContactDurationSeconds
        - DataflowEdges
        - TrackingConfigArn
      x-stackql-resource-name: mission_profile
      description: AWS Ground Station Mission Profile resource type for CloudFormation.
      x-type-name: AWS::GroundStation::MissionProfile
      x-stackql-primary-identifier:
        - Id
        - Arn
      x-read-only-properties:
        - Id
        - Arn
        - Region
      x-required-properties:
        - Name
        - MinimumViableContactDurationSeconds
        - DataflowEdges
        - TrackingConfigArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - groundstation:TagResource
          - groundstation:UntagResource
          - groundstation:ListTagsForResource
      x-required-permissions:
        create:
          - groundstation:CreateMissionProfile
          - groundstation:GetMissionProfile
          - groundstation:TagResource
          - iam:PassRole
          - kms:DescribeKey
          - kms:CreateGrant
        read:
          - groundstation:GetMissionProfile
          - groundstation:ListTagsForResource
          - kms:DescribeKey
          - kms:CreateGrant
        update:
          - groundstation:UpdateMissionProfile
          - groundstation:GetMissionProfile
          - groundstation:ListTagsForResource
          - groundstation:TagResource
          - groundstation:UntagResource
          - iam:PassRole
          - kms:DescribeKey
          - kms:CreateGrant
        delete:
          - groundstation:DeleteMissionProfile
          - groundstation:GetMissionProfile
        list:
          - groundstation:ListMissionProfiles
    CreateConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
              pattern: ^[ a-zA-Z0-9_:-]{1,256}$
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            Type:
              type: string
            ConfigData:
              $ref: '#/components/schemas/ConfigData'
            Arn:
              type: string
              pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
            Id:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateConfigRequest
      type: object
      required: []
    CreateDataflowEndpointGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
            Arn:
              type: string
              pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
            EndpointDetails:
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/EndpointDetails'
            ContactPrePassDurationSeconds:
              type: integer
              description: Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a PREPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the PREPASS state.
            ContactPostPassDurationSeconds:
              type: integer
              description: Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a POSTPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the POSTPASS state.
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateDataflowEndpointGroupRequest
      type: object
      required: []
    CreateMissionProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: A name used to identify a mission profile.
              type: string
              pattern: ^[ a-zA-Z0-9_:-]{1,256}$
            ContactPrePassDurationSeconds:
              description: Pre-pass time needed before the contact.
              type: integer
            ContactPostPassDurationSeconds:
              description: Post-pass time needed after the contact.
              type: integer
            MinimumViableContactDurationSeconds:
              description: Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
              type: integer
            StreamsKmsKey:
              description: The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
              $ref: '#/components/schemas/StreamsKmsKey'
            StreamsKmsRole:
              description: The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
              type: string
            DataflowEdges:
              description: ''
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/DataflowEdge'
            TrackingConfigArn:
              type: string
              pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            Id:
              type: string
            Arn:
              type: string
              pattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$
            Region:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateMissionProfileRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    configs:
      name: configs
      id: aws.groundstation.configs
      x-cfn-schema-name: Config
      x-cfn-type-name: AWS::GroundStation::Config
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Config&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::Config"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::Config"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::Config"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/configs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/configs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.ConfigData') as config_data,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::Config'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.ConfigData') as config_data,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Id') as id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GroundStation::Config'
                AND detail.data__TypeName = 'AWS::GroundStation::Config'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'ConfigData') as config_data,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Id') as id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::Config'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'ConfigData') as config_data,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Id') as id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GroundStation::Config'
                    AND detail.data__TypeName = 'AWS::GroundStation::Config'
                    AND listing.region = 'us-east-1'
    configs_list_only:
      name: configs_list_only
      id: aws.groundstation.configs_list_only
      x-cfn-schema-name: Config
      x-cfn-type-name: AWS::GroundStation::Config
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::Config'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::Config'
                AND region = 'us-east-1'
    config_tags:
      name: config_tags
      id: aws.groundstation.config_tags
      x-cfn-schema-name: Config
      x-cfn-type-name: AWS::GroundStation::Config
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.ConfigData') as config_data,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Id') as id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GroundStation::Config'
              AND detail.data__TypeName = 'AWS::GroundStation::Config'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'ConfigData') as config_data,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Id') as id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GroundStation::Config'
                AND detail.data__TypeName = 'AWS::GroundStation::Config'
                AND listing.region = 'us-east-1'
    dataflow_endpoint_groups:
      name: dataflow_endpoint_groups
      id: aws.groundstation.dataflow_endpoint_groups
      x-cfn-schema-name: DataflowEndpointGroup
      x-cfn-type-name: AWS::GroundStation::DataflowEndpointGroup
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataflowEndpointGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::DataflowEndpointGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::DataflowEndpointGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::DataflowEndpointGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/dataflow_endpoint_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/dataflow_endpoint_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/dataflow_endpoint_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.EndpointDetails') as endpoint_details,
              JSON_EXTRACT(Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.EndpointDetails') as endpoint_details,
                JSON_EXTRACT(detail.Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                JSON_EXTRACT(detail.Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                AND detail.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'EndpointDetails') as endpoint_details,
                  json_extract_path_text(Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                  json_extract_path_text(Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'EndpointDetails') as endpoint_details,
                    json_extract_path_text(detail.Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                    json_extract_path_text(detail.Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                    AND detail.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                    AND listing.region = 'us-east-1'
    dataflow_endpoint_groups_list_only:
      name: dataflow_endpoint_groups_list_only
      id: aws.groundstation.dataflow_endpoint_groups_list_only
      x-cfn-schema-name: DataflowEndpointGroup
      x-cfn-type-name: AWS::GroundStation::DataflowEndpointGroup
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                AND region = 'us-east-1'
    dataflow_endpoint_group_tags:
      name: dataflow_endpoint_group_tags
      id: aws.groundstation.dataflow_endpoint_group_tags
      x-cfn-schema-name: DataflowEndpointGroup
      x-cfn-type-name: AWS::GroundStation::DataflowEndpointGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.EndpointDetails') as endpoint_details,
              JSON_EXTRACT(detail.Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
              JSON_EXTRACT(detail.Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
              AND detail.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'EndpointDetails') as endpoint_details,
                json_extract_path_text(detail.Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                json_extract_path_text(detail.Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                AND detail.data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                AND listing.region = 'us-east-1'
    mission_profiles:
      name: mission_profiles
      id: aws.groundstation.mission_profiles
      x-cfn-schema-name: MissionProfile
      x-cfn-type-name: AWS::GroundStation::MissionProfile
      x-identifiers:
        - Id
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MissionProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::MissionProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::MissionProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GroundStation::MissionProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/mission_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/mission_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/mission_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
              JSON_EXTRACT(Properties, '$.StreamsKmsKey') as streams_kms_key,
              JSON_EXTRACT(Properties, '$.StreamsKmsRole') as streams_kms_role,
              JSON_EXTRACT(Properties, '$.DataflowEdges') as dataflow_edges,
              JSON_EXTRACT(Properties, '$.TrackingConfigArn') as tracking_config_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Region') as region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
              AND data__Identifier = '<Id>|<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                JSON_EXTRACT(detail.Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                JSON_EXTRACT(detail.Properties, '$.MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
                JSON_EXTRACT(detail.Properties, '$.StreamsKmsKey') as streams_kms_key,
                JSON_EXTRACT(detail.Properties, '$.StreamsKmsRole') as streams_kms_role,
                JSON_EXTRACT(detail.Properties, '$.DataflowEdges') as dataflow_edges,
                JSON_EXTRACT(detail.Properties, '$.TrackingConfigArn') as tracking_config_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Region') as region
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GroundStation::MissionProfile'
                AND detail.data__TypeName = 'AWS::GroundStation::MissionProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                  json_extract_path_text(Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                  json_extract_path_text(Properties, 'MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
                  json_extract_path_text(Properties, 'StreamsKmsKey') as streams_kms_key,
                  json_extract_path_text(Properties, 'StreamsKmsRole') as streams_kms_role,
                  json_extract_path_text(Properties, 'DataflowEdges') as dataflow_edges,
                  json_extract_path_text(Properties, 'TrackingConfigArn') as tracking_config_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Region') as region
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
                  AND data__Identifier = '<Id>|<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                    json_extract_path_text(detail.Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                    json_extract_path_text(detail.Properties, 'MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
                    json_extract_path_text(detail.Properties, 'StreamsKmsKey') as streams_kms_key,
                    json_extract_path_text(detail.Properties, 'StreamsKmsRole') as streams_kms_role,
                    json_extract_path_text(detail.Properties, 'DataflowEdges') as dataflow_edges,
                    json_extract_path_text(detail.Properties, 'TrackingConfigArn') as tracking_config_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Region') as region
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GroundStation::MissionProfile'
                    AND detail.data__TypeName = 'AWS::GroundStation::MissionProfile'
                    AND listing.region = 'us-east-1'
    mission_profiles_list_only:
      name: mission_profiles_list_only
      id: aws.groundstation.mission_profiles_list_only
      x-cfn-schema-name: MissionProfile
      x-cfn-type-name: AWS::GroundStation::MissionProfile
      x-identifiers:
        - Id
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
                AND region = 'us-east-1'
    mission_profile_tags:
      name: mission_profile_tags
      id: aws.groundstation.mission_profile_tags
      x-cfn-schema-name: MissionProfile
      x-cfn-type-name: AWS::GroundStation::MissionProfile
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
              JSON_EXTRACT(detail.Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
              JSON_EXTRACT(detail.Properties, '$.MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
              JSON_EXTRACT(detail.Properties, '$.StreamsKmsKey') as streams_kms_key,
              JSON_EXTRACT(detail.Properties, '$.StreamsKmsRole') as streams_kms_role,
              JSON_EXTRACT(detail.Properties, '$.DataflowEdges') as dataflow_edges,
              JSON_EXTRACT(detail.Properties, '$.TrackingConfigArn') as tracking_config_arn,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Region') as region
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GroundStation::MissionProfile'
              AND detail.data__TypeName = 'AWS::GroundStation::MissionProfile'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                json_extract_path_text(detail.Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                json_extract_path_text(detail.Properties, 'MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
                json_extract_path_text(detail.Properties, 'StreamsKmsKey') as streams_kms_key,
                json_extract_path_text(detail.Properties, 'StreamsKmsRole') as streams_kms_role,
                json_extract_path_text(detail.Properties, 'DataflowEdges') as dataflow_edges,
                json_extract_path_text(detail.Properties, 'TrackingConfigArn') as tracking_config_arn,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Region') as region
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GroundStation::MissionProfile'
                AND detail.data__TypeName = 'AWS::GroundStation::MissionProfile'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Config&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataflowEndpointGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataflowEndpointGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataflowEndpointGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MissionProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMissionProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMissionProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
