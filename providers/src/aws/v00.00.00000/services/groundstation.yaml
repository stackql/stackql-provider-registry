openapi: 3.0.0
info:
  title: GroundStation
  version: 1.0.0
paths: {}
components:
  schemas:
    JsonString:
      type: string
      pattern: ^[{}\[\]:.,"0-9A-z\-_\s]{1,8192}$
    ConfigData:
      type: object
      minProperties: 1
      maxProperties: 1
      properties:
        AntennaDownlinkConfig:
          $ref: '#/components/schemas/AntennaDownlinkConfig'
        TrackingConfig:
          $ref: '#/components/schemas/TrackingConfig'
        DataflowEndpointConfig:
          $ref: '#/components/schemas/DataflowEndpointConfig'
        AntennaDownlinkDemodDecodeConfig:
          $ref: '#/components/schemas/AntennaDownlinkDemodDecodeConfig'
        AntennaUplinkConfig:
          $ref: '#/components/schemas/AntennaUplinkConfig'
        UplinkEchoConfig:
          $ref: '#/components/schemas/UplinkEchoConfig'
        S3RecordingConfig:
          $ref: '#/components/schemas/S3RecordingConfig'
      additionalProperties: false
    EirpUnits:
      type: string
      enum:
        - dBW
    Eirp:
      type: object
      properties:
        Value:
          type: number
        Units:
          $ref: '#/components/schemas/EirpUnits'
      additionalProperties: false
    FrequencyUnits:
      type: string
      enum:
        - GHz
        - MHz
        - kHz
    BandwidthUnits:
      type: string
      enum:
        - GHz
        - MHz
        - kHz
    FrequencyBandwidth:
      type: object
      properties:
        Value:
          type: number
        Units:
          $ref: '#/components/schemas/BandwidthUnits'
      additionalProperties: false
    Frequency:
      type: object
      properties:
        Value:
          type: number
        Units:
          $ref: '#/components/schemas/FrequencyUnits'
      additionalProperties: false
    Polarization:
      type: string
      enum:
        - LEFT_HAND
        - RIGHT_HAND
        - NONE
    S3KeyPrefix:
      type: string
      pattern: ^([a-zA-Z0-9_\-=/]|\{satellite_id\}|\{config\-name}|\{s3\-config-id}|\{year\}|\{month\}|\{day\}){1,900}$
    BucketArn:
      type: string
    RoleArn:
      type: string
    UplinkSpectrumConfig:
      type: object
      properties:
        CenterFrequency:
          $ref: '#/components/schemas/Frequency'
        Polarization:
          $ref: '#/components/schemas/Polarization'
      additionalProperties: false
    SpectrumConfig:
      type: object
      properties:
        CenterFrequency:
          $ref: '#/components/schemas/Frequency'
        Bandwidth:
          $ref: '#/components/schemas/FrequencyBandwidth'
        Polarization:
          $ref: '#/components/schemas/Polarization'
      additionalProperties: false
    AntennaDownlinkConfig:
      type: object
      properties:
        SpectrumConfig:
          $ref: '#/components/schemas/SpectrumConfig'
      additionalProperties: false
    TrackingConfig:
      type: object
      properties:
        Autotrack:
          type: string
          enum:
            - REQUIRED
            - PREFERRED
            - REMOVED
      additionalProperties: false
    DataflowEndpointConfig:
      type: object
      properties:
        DataflowEndpointName:
          type: string
        DataflowEndpointRegion:
          type: string
      additionalProperties: false
    DemodulationConfig:
      type: object
      properties:
        UnvalidatedJSON:
          $ref: '#/components/schemas/JsonString'
      additionalProperties: false
    DecodeConfig:
      type: object
      properties:
        UnvalidatedJSON:
          $ref: '#/components/schemas/JsonString'
      additionalProperties: false
    AntennaDownlinkDemodDecodeConfig:
      type: object
      properties:
        SpectrumConfig:
          $ref: '#/components/schemas/SpectrumConfig'
        DemodulationConfig:
          $ref: '#/components/schemas/DemodulationConfig'
        DecodeConfig:
          $ref: '#/components/schemas/DecodeConfig'
      additionalProperties: false
    AntennaUplinkConfig:
      type: object
      properties:
        SpectrumConfig:
          $ref: '#/components/schemas/UplinkSpectrumConfig'
        TargetEirp:
          $ref: '#/components/schemas/Eirp'
        TransmitDisabled:
          type: boolean
      additionalProperties: false
    UplinkEchoConfig:
      type: object
      properties:
        Enabled:
          type: boolean
        AntennaUplinkConfigArn:
          type: string
      additionalProperties: false
    S3RecordingConfig:
      type: object
      properties:
        BucketArn:
          $ref: '#/components/schemas/BucketArn'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
        Prefix:
          $ref: '#/components/schemas/S3KeyPrefix'
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          pattern: ^[ a-zA-Z0-9\+\-=._:/@]{1,128}$
        Value:
          type: string
          pattern: ^[ a-zA-Z0-9\+\-=._:/@]{1,256}$
      additionalProperties: false
      required:
        - Key
        - Value
    Config:
      type: object
      properties:
        Name:
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Type:
          type: string
        ConfigData:
          $ref: '#/components/schemas/ConfigData'
        Arn:
          type: string
        Id:
          type: string
      required:
        - Name
        - ConfigData
      x-stackql-resource-name: config
      description: AWS Ground Station config resource type for CloudFormation.
      x-type-name: AWS::GroundStation::Config
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
        - Id
        - Type
      x-required-properties:
        - Name
        - ConfigData
      x-required-permissions:
        create:
          - groundstation:CreateConfig
          - groundstation:TagResource
          - iam:PassRole
        read:
          - groundstation:GetConfig
          - groundstation:ListTagsForResource
        update:
          - groundstation:UpdateConfig
          - groundstation:ListTagsForResource
          - groundstation:TagResource
          - groundstation:UntagResource
          - iam:PassRole
        delete:
          - groundstation:DeleteConfig
        list:
          - groundstation:ListConfigs
    SocketAddress:
      type: object
      properties:
        Name:
          type: string
        Port:
          type: integer
      additionalProperties: false
    AgentStatus:
      description: The status of AgentEndpoint.
      type: string
      enum:
        - SUCCESS
        - FAILED
        - ACTIVE
        - INACTIVE
    AuditResults:
      description: The results of the audit.
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
    IntegerRange:
      description: An integer range that has a minimum and maximum value.
      type: object
      properties:
        Minimum:
          description: A minimum value.
          type: integer
        Maximum:
          description: A maximum value.
          type: integer
      additionalProperties: false
    RangedSocketAddress:
      description: A socket address with a port range.
      type: object
      properties:
        Name:
          description: IPv4 socket address.
          type: string
        PortRange:
          description: Port range of a socket address.
          $ref: '#/components/schemas/IntegerRange'
      additionalProperties: false
    ConnectionDetails:
      description: Egress address of AgentEndpoint with an optional mtu.
      type: object
      properties:
        SocketAddress:
          $ref: '#/components/schemas/SocketAddress'
        Mtu:
          description: Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.
          type: integer
      additionalProperties: false
    RangedConnectionDetails:
      description: Ingress address of AgentEndpoint with a port range and an optional mtu.
      type: object
      properties:
        SocketAddress:
          $ref: '#/components/schemas/RangedSocketAddress'
        Mtu:
          description: Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.
          type: integer
      additionalProperties: false
    AwsGroundStationAgentEndpoint:
      description: Information about AwsGroundStationAgentEndpoint.
      type: object
      properties:
        Name:
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        EgressAddress:
          $ref: '#/components/schemas/ConnectionDetails'
        IngressAddress:
          $ref: '#/components/schemas/RangedConnectionDetails'
        AgentStatus:
          $ref: '#/components/schemas/AgentStatus'
        AuditResults:
          $ref: '#/components/schemas/AuditResults'
      additionalProperties: false
    DataflowEndpoint:
      type: object
      properties:
        Name:
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        Address:
          $ref: '#/components/schemas/SocketAddress'
        Mtu:
          type: integer
      additionalProperties: false
    SecurityDetails:
      type: object
      properties:
        SubnetIds:
          type: array
          items:
            type: string
        SecurityGroupIds:
          type: array
          items:
            type: string
        RoleArn:
          type: string
      additionalProperties: false
    EndpointDetails:
      type: object
      properties:
        SecurityDetails:
          $ref: '#/components/schemas/SecurityDetails'
        Endpoint:
          $ref: '#/components/schemas/DataflowEndpoint'
        AwsGroundStationAgentEndpoint:
          $ref: '#/components/schemas/AwsGroundStationAgentEndpoint'
      oneOf:
        - required:
            - Endpoint
            - SecurityDetails
        - required:
            - AwsGroundStationAgentEndpoint
      additionalProperties: false
    DataflowEndpointGroup:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        EndpointDetails:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/EndpointDetails'
        ContactPrePassDurationSeconds:
          type: integer
          description: Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a PREPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the PREPASS state.
        ContactPostPassDurationSeconds:
          type: integer
          description: Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a POSTPASS state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the POSTPASS state.
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - EndpointDetails
      x-stackql-resource-name: dataflow_endpoint_group
      description: AWS Ground Station DataflowEndpointGroup schema for CloudFormation
      x-type-name: AWS::GroundStation::DataflowEndpointGroup
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - Arn
      x-required-properties:
        - EndpointDetails
      x-required-permissions:
        create:
          - groundstation:CreateDataflowEndpointGroup
          - groundstation:GetDataflowEndpointGroup
          - groundstation:TagResource
          - iam:PassRole
          - ec2:describeAddresses
          - ec2:describeNetworkInterfaces
          - iam:createServiceLinkedRole
        read:
          - groundstation:GetDataflowEndpointGroup
          - groundstation:ListTagsForResource
        delete:
          - groundstation:DeleteDataflowEndpointGroup
          - groundstation:GetDataflowEndpointGroup
        list:
          - groundstation:ListDataflowEndpointGroups
    DataflowEdge:
      type: object
      properties:
        Source:
          type: string
        Destination:
          type: string
      additionalProperties: false
    StreamsKmsKey:
      type: object
      properties:
        KmsKeyArn:
          type: string
        KmsAliasArn:
          type: string
      oneOf:
        - required:
            - KmsKeyArn
        - required:
            - KmsAliasArn
      additionalProperties: false
    MissionProfile:
      type: object
      properties:
        Name:
          description: A name used to identify a mission profile.
          type: string
          pattern: ^[ a-zA-Z0-9_:-]{1,256}$
        ContactPrePassDurationSeconds:
          description: Pre-pass time needed before the contact.
          type: integer
        ContactPostPassDurationSeconds:
          description: Post-pass time needed after the contact.
          type: integer
        MinimumViableContactDurationSeconds:
          description: Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
          type: integer
        StreamsKmsKey:
          description: The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
          $ref: '#/components/schemas/StreamsKmsKey'
        StreamsKmsRole:
          description: The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
          type: string
        DataflowEdges:
          description: ''
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataflowEdge'
        TrackingConfigArn:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Id:
          type: string
        Arn:
          type: string
        Region:
          type: string
      required:
        - Name
        - MinimumViableContactDurationSeconds
        - DataflowEdges
        - TrackingConfigArn
      x-stackql-resource-name: mission_profile
      description: AWS Ground Station Mission Profile resource type for CloudFormation.
      x-type-name: AWS::GroundStation::MissionProfile
      x-stackql-primary-identifier:
        - Id
        - Arn
      x-read-only-properties:
        - Id
        - Arn
        - Region
      x-required-properties:
        - Name
        - MinimumViableContactDurationSeconds
        - DataflowEdges
        - TrackingConfigArn
      x-required-permissions:
        create:
          - groundstation:CreateMissionProfile
          - groundstation:GetMissionProfile
          - groundstation:TagResource
          - iam:PassRole
          - kms:DescribeKey
          - kms:CreateGrant
        read:
          - groundstation:GetMissionProfile
          - groundstation:ListTagsForResource
          - kms:DescribeKey
          - kms:CreateGrant
        update:
          - groundstation:UpdateMissionProfile
          - groundstation:GetMissionProfile
          - groundstation:ListTagsForResource
          - groundstation:TagResource
          - groundstation:UntagResource
          - iam:PassRole
          - kms:DescribeKey
          - kms:CreateGrant
        delete:
          - groundstation:DeleteMissionProfile
          - groundstation:GetMissionProfile
        list:
          - groundstation:ListMissionProfiles
  x-stackQL-resources:
    configs:
      name: configs
      id: aws.groundstation.configs
      x-cfn-schema-name: Config
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::Config'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::Config'
                AND region = 'us-east-1'
    config:
      name: config
      id: aws.groundstation.config
      x-cfn-schema-name: Config
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.ConfigData') as config_data,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::Config'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'ConfigData') as config_data,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::Config'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    dataflow_endpoint_groups:
      name: dataflow_endpoint_groups
      id: aws.groundstation.dataflow_endpoint_groups
      x-cfn-schema-name: DataflowEndpointGroup
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                AND region = 'us-east-1'
    dataflow_endpoint_group:
      name: dataflow_endpoint_group
      id: aws.groundstation.dataflow_endpoint_group
      x-cfn-schema-name: DataflowEndpointGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.EndpointDetails') as endpoint_details,
              JSON_EXTRACT(Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'EndpointDetails') as endpoint_details,
                json_extract_path_text(Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                json_extract_path_text(Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::DataflowEndpointGroup'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    mission_profiles:
      name: mission_profiles
      id: aws.groundstation.mission_profiles
      x-cfn-schema-name: MissionProfile
      x-type: list
      x-identifiers:
        - Id
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
                AND region = 'us-east-1'
    mission_profile:
      name: mission_profile
      id: aws.groundstation.mission_profile
      x-cfn-schema-name: MissionProfile
      x-type: get
      x-identifiers:
        - Id
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
              JSON_EXTRACT(Properties, '$.MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
              JSON_EXTRACT(Properties, '$.StreamsKmsKey') as streams_kms_key,
              JSON_EXTRACT(Properties, '$.StreamsKmsRole') as streams_kms_role,
              JSON_EXTRACT(Properties, '$.DataflowEdges') as dataflow_edges,
              JSON_EXTRACT(Properties, '$.TrackingConfigArn') as tracking_config_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Region') as region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
              AND data__Identifier = '<Id>|<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ContactPrePassDurationSeconds') as contact_pre_pass_duration_seconds,
                json_extract_path_text(Properties, 'ContactPostPassDurationSeconds') as contact_post_pass_duration_seconds,
                json_extract_path_text(Properties, 'MinimumViableContactDurationSeconds') as minimum_viable_contact_duration_seconds,
                json_extract_path_text(Properties, 'StreamsKmsKey') as streams_kms_key,
                json_extract_path_text(Properties, 'StreamsKmsRole') as streams_kms_role,
                json_extract_path_text(Properties, 'DataflowEdges') as dataflow_edges,
                json_extract_path_text(Properties, 'TrackingConfigArn') as tracking_config_arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Region') as region
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GroundStation::MissionProfile'
                AND data__Identifier = '<Id>|<Arn>'
                AND region = 'us-east-1'
