openapi: 3.0.0
info:
  title: InspectorV2
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    CisSecurityLevel:
      type: string
      enum:
        - LEVEL_1
        - LEVEL_2
    Schedule:
      description: Choose a Schedule cadence
      properties:
        OneTime:
          $ref: '#/components/schemas/OneTimeSchedule'
        Daily:
          $ref: '#/components/schemas/DailySchedule'
        Weekly:
          $ref: '#/components/schemas/WeeklySchedule'
        Monthly:
          $ref: '#/components/schemas/MonthlySchedule'
    OneTimeSchedule:
      type: object
    DailySchedule:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Time'
      required:
        - StartTime
      additionalProperties: false
    WeeklySchedule:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Time'
        Days:
          $ref: '#/components/schemas/DaysList'
      required:
        - StartTime
        - Days
      additionalProperties: false
    MonthlySchedule:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Time'
        Day:
          $ref: '#/components/schemas/Day'
      required:
        - StartTime
        - Day
      additionalProperties: false
    Time:
      type: object
      properties:
        TimeOfDay:
          type: string
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
        TimeZone:
          type: string
      required:
        - TimeOfDay
        - TimeZone
      additionalProperties: false
    DaysList:
      type: array
      minItems: 1
      maxItems: 7
      items:
        $ref: '#/components/schemas/Day'
      uniqueItems: true
    Day:
      type: string
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
    CisTargets:
      properties:
        AccountIds:
          type: array
          minItems: 1
          maxItems: 10000
          items:
            type: string
            pattern: ^\d{12}|ALL_ACCOUNTS|SELF$
          uniqueItems: true
        TargetResourceTags:
          $ref: '#/components/schemas/TargetResourceTags'
      additionalProperties: false
      required:
        - AccountIds
        - TargetResourceTags
    TargetResourceTags:
      x-patternProperties:
        ^.+$:
          $ref: '#/components/schemas/TagValueList'
      maxProperties: 5
      additionalProperties: false
    TagValueList:
      type: array
      minItems: 1
      maxItems: 5
      items:
        type: string
      uniqueItems: true
    CisTagMap:
      type: object
      x-patternProperties:
        ^.{2,127}$:
          type: string
          pattern: ^.{1,255}$
      additionalProperties: false
    CisScanConfiguration:
      type: object
      properties:
        ScanName:
          description: Name of the scan
          type: string
          minLength: 1
        SecurityLevel:
          $ref: '#/components/schemas/CisSecurityLevel'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        Targets:
          $ref: '#/components/schemas/CisTargets'
        Arn:
          type: string
          description: CIS Scan configuration unique identifier
        Tags:
          $ref: '#/components/schemas/CisTagMap'
      required:
        - ScanName
        - SecurityLevel
        - Schedule
        - Targets
      x-stackql-resource-name: cis_scan_configuration
      description: CIS Scan Configuration resource schema
      x-type-name: AWS::InspectorV2::CisScanConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - ScanName
        - SecurityLevel
        - Schedule
        - Targets
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - inspector2:CreateCisScanConfiguration
          - inspector2:ListCisScanConfigurations
          - inspector2:TagResource
        read:
          - inspector2:ListCisScanConfigurations
          - inspector2:ListTagsForResource
        update:
          - inspector2:ListCisScanConfigurations
          - inspector2:UpdateCisScanConfiguration
          - inspector2:TagResource
          - inspector2:UntagResource
          - inspector2:ListTagsForResource
        delete:
          - inspector2:ListCisScanConfigurations
          - inspector2:DeleteCisScanConfiguration
          - inspector2:UntagResource
        list:
          - inspector2:ListCisScanConfigurations
          - inspector2:ListTagsForResource
    StringComparison:
      type: string
      enum:
        - EQUALS
        - PREFIX
        - NOT_EQUALS
    StringInput:
      type: string
      maxLength: 1024
      minLength: 1
    StringFilter:
      type: object
      required:
        - Comparison
        - Value
      properties:
        Comparison:
          $ref: '#/components/schemas/StringComparison'
        Value:
          $ref: '#/components/schemas/StringInput'
      additionalProperties: false
    StringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/StringFilter'
      x-insertionOrder: false
      maxItems: 10
      minItems: 1
    Timestamp:
      type: integer
      format: int64
    DateFilter:
      type: object
      properties:
        EndInclusive:
          $ref: '#/components/schemas/Timestamp'
        StartInclusive:
          $ref: '#/components/schemas/Timestamp'
      additionalProperties: false
    DateFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/DateFilter'
      maxItems: 10
      minItems: 1
    Port:
      type: integer
      maximum: 65535
      minimum: 0
    PortRangeFilter:
      type: object
      properties:
        BeginInclusive:
          $ref: '#/components/schemas/Port'
        EndInclusive:
          $ref: '#/components/schemas/Port'
      additionalProperties: false
    PortRangeFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/PortRangeFilter'
      maxItems: 10
      minItems: 1
    NumberFilter:
      type: object
      properties:
        LowerInclusive:
          type: number
        UpperInclusive:
          type: number
      additionalProperties: false
    NumberFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/NumberFilter'
      maxItems: 10
      minItems: 1
    MapComparison:
      type: string
      enum:
        - EQUALS
    MapFilter:
      type: object
      required:
        - Comparison
      properties:
        Comparison:
          $ref: '#/components/schemas/MapComparison'
        Key:
          $ref: '#/components/schemas/MapKey'
        Value:
          $ref: '#/components/schemas/MapValue'
      additionalProperties: false
    MapFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/MapFilter'
      maxItems: 10
      minItems: 1
    PackageFilter:
      type: object
      additionalProperties: false
      properties:
        Architecture:
          $ref: '#/components/schemas/StringFilter'
        Epoch:
          $ref: '#/components/schemas/NumberFilter'
        Name:
          $ref: '#/components/schemas/StringFilter'
        Release:
          $ref: '#/components/schemas/StringFilter'
        SourceLayerHash:
          $ref: '#/components/schemas/StringFilter'
        Version:
          $ref: '#/components/schemas/StringFilter'
    PackageFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/PackageFilter'
      maxItems: 10
      minItems: 1
    FilterCriteria:
      type: object
      additionalProperties: false
      properties:
        AwsAccountId:
          $ref: '#/components/schemas/StringFilterList'
        ComponentId:
          $ref: '#/components/schemas/StringFilterList'
        ComponentType:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceImageId:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceSubnetId:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceVpcId:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageArchitecture:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageHash:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageTags:
          $ref: '#/components/schemas/StringFilterList'
        EcrImagePushedAt:
          $ref: '#/components/schemas/DateFilterList'
        EcrImageRegistry:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageRepositoryName:
          $ref: '#/components/schemas/StringFilterList'
        FindingArn:
          $ref: '#/components/schemas/StringFilterList'
        FindingStatus:
          $ref: '#/components/schemas/StringFilterList'
        FindingType:
          $ref: '#/components/schemas/StringFilterList'
        FirstObservedAt:
          $ref: '#/components/schemas/DateFilterList'
        InspectorScore:
          $ref: '#/components/schemas/NumberFilterList'
        LastObservedAt:
          $ref: '#/components/schemas/DateFilterList'
        NetworkProtocol:
          $ref: '#/components/schemas/StringFilterList'
        PortRange:
          $ref: '#/components/schemas/PortRangeFilterList'
        RelatedVulnerabilities:
          $ref: '#/components/schemas/StringFilterList'
        ResourceId:
          $ref: '#/components/schemas/StringFilterList'
        ResourceTags:
          $ref: '#/components/schemas/MapFilterList'
        ResourceType:
          $ref: '#/components/schemas/StringFilterList'
        Severity:
          $ref: '#/components/schemas/StringFilterList'
        Title:
          $ref: '#/components/schemas/StringFilterList'
        UpdatedAt:
          $ref: '#/components/schemas/DateFilterList'
        VendorSeverity:
          $ref: '#/components/schemas/StringFilterList'
        VulnerabilityId:
          $ref: '#/components/schemas/StringFilterList'
        VulnerabilitySource:
          $ref: '#/components/schemas/StringFilterList'
        VulnerablePackages:
          $ref: '#/components/schemas/PackageFilterList'
    FilterAction:
      type: string
      enum:
        - NONE
        - SUPPRESS
    MapKey:
      type: string
      maxLength: 128
      minLength: 1
    MapValue:
      type: string
      maxLength: 256
      minLength: 0
    Filter:
      type: object
      properties:
        Name:
          description: Findings filter name.
          type: string
          maxLength: 128
          minLength: 1
        Description:
          description: Findings filter description.
          type: string
          maxLength: 512
          minLength: 1
        FilterCriteria:
          description: Findings filter criteria.
          $ref: '#/components/schemas/FilterCriteria'
        FilterAction:
          description: Findings filter action.
          $ref: '#/components/schemas/FilterAction'
        Arn:
          description: Findings filter ARN.
          type: string
          maxLength: 128
          minLength: 1
      required:
        - Name
        - FilterCriteria
        - FilterAction
      x-stackql-resource-name: filter
      description: Inspector Filter resource schema
      x-type-name: AWS::InspectorV2::Filter
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - FilterCriteria
        - FilterAction
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - inspector2:CreateFilter
          - inspector2:ListFilters
        read:
          - inspector2:ListFilters
        update:
          - inspector2:ListFilters
          - inspector2:UpdateFilter
        delete:
          - inspector2:DeleteFilter
          - inspector2:ListFilters
        list:
          - inspector2:ListFilters
    CreateCisScanConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ScanName:
              description: Name of the scan
              type: string
              minLength: 1
            SecurityLevel:
              $ref: '#/components/schemas/CisSecurityLevel'
            Schedule:
              $ref: '#/components/schemas/Schedule'
            Targets:
              $ref: '#/components/schemas/CisTargets'
            Arn:
              type: string
              description: CIS Scan configuration unique identifier
            Tags:
              $ref: '#/components/schemas/CisTagMap'
          x-stackQL-stringOnly: true
      x-title: CreateCisScanConfigurationRequest
      type: object
      required: []
    CreateFilterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Findings filter name.
              type: string
              maxLength: 128
              minLength: 1
            Description:
              description: Findings filter description.
              type: string
              maxLength: 512
              minLength: 1
            FilterCriteria:
              description: Findings filter criteria.
              $ref: '#/components/schemas/FilterCriteria'
            FilterAction:
              description: Findings filter action.
              $ref: '#/components/schemas/FilterAction'
            Arn:
              description: Findings filter ARN.
              type: string
              maxLength: 128
              minLength: 1
          x-stackQL-stringOnly: true
      x-title: CreateFilterRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    cis_scan_configurations:
      name: cis_scan_configurations
      id: aws.inspectorv2.cis_scan_configurations
      x-cfn-schema-name: CisScanConfiguration
      x-cfn-type-name: AWS::InspectorV2::CisScanConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CisScanConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::InspectorV2::CisScanConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::InspectorV2::CisScanConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::InspectorV2::CisScanConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/cis_scan_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/cis_scan_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/cis_scan_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ScanName') as scan_name,
              JSON_EXTRACT(Properties, '$.SecurityLevel') as security_level,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ScanName') as scan_name,
                JSON_EXTRACT(detail.Properties, '$.SecurityLevel') as security_level,
                JSON_EXTRACT(detail.Properties, '$.Schedule') as schedule,
                JSON_EXTRACT(detail.Properties, '$.Targets') as targets,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                AND detail.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ScanName') as scan_name,
                  json_extract_path_text(Properties, 'SecurityLevel') as security_level,
                  json_extract_path_text(Properties, 'Schedule') as schedule,
                  json_extract_path_text(Properties, 'Targets') as targets,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ScanName') as scan_name,
                    json_extract_path_text(detail.Properties, 'SecurityLevel') as security_level,
                    json_extract_path_text(detail.Properties, 'Schedule') as schedule,
                    json_extract_path_text(detail.Properties, 'Targets') as targets,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                    AND detail.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                    AND listing.region = 'us-east-1'
    cis_scan_configurations_list_only:
      name: cis_scan_configurations_list_only
      id: aws.inspectorv2.cis_scan_configurations_list_only
      x-cfn-schema-name: CisScanConfiguration
      x-cfn-type-name: AWS::InspectorV2::CisScanConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                AND region = 'us-east-1'
    cis_scan_configuration_tags:
      name: cis_scan_configuration_tags
      id: aws.inspectorv2.cis_scan_configuration_tags
      x-cfn-schema-name: CisScanConfiguration
      x-cfn-type-name: AWS::InspectorV2::CisScanConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ScanName') as scan_name,
              JSON_EXTRACT(detail.Properties, '$.SecurityLevel') as security_level,
              JSON_EXTRACT(detail.Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(detail.Properties, '$.Targets') as targets,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
              AND detail.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ScanName') as scan_name,
                json_extract_path_text(detail.Properties, 'SecurityLevel') as security_level,
                json_extract_path_text(detail.Properties, 'Schedule') as schedule,
                json_extract_path_text(detail.Properties, 'Targets') as targets,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                AND detail.data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                AND listing.region = 'us-east-1'
    filters:
      name: filters
      id: aws.inspectorv2.filters
      x-cfn-schema-name: Filter
      x-cfn-type-name: AWS::InspectorV2::Filter
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Filter&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::InspectorV2::Filter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::InspectorV2::Filter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::InspectorV2::Filter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/filters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/filters/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/filters/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.FilterCriteria') as filter_criteria,
              JSON_EXTRACT(Properties, '$.FilterAction') as filter_action,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::Filter'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.FilterCriteria') as filter_criteria,
                JSON_EXTRACT(detail.Properties, '$.FilterAction') as filter_action,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::InspectorV2::Filter'
                AND detail.data__TypeName = 'AWS::InspectorV2::Filter'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'FilterCriteria') as filter_criteria,
                  json_extract_path_text(Properties, 'FilterAction') as filter_action,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::Filter'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'FilterCriteria') as filter_criteria,
                    json_extract_path_text(detail.Properties, 'FilterAction') as filter_action,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::InspectorV2::Filter'
                    AND detail.data__TypeName = 'AWS::InspectorV2::Filter'
                    AND listing.region = 'us-east-1'
    filters_list_only:
      name: filters_list_only
      id: aws.inspectorv2.filters_list_only
      x-cfn-schema-name: Filter
      x-cfn-type-name: AWS::InspectorV2::Filter
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::Filter'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::Filter'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CisScanConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCisScanConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCisScanConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Filter&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFilter
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFilterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
