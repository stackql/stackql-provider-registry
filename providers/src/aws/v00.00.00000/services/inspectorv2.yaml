openapi: 3.0.0
info:
  title: InspectorV2
  version: 1.0.0
paths: {}
components:
  schemas:
    StringComparison:
      type: string
      enum:
        - EQUALS
        - PREFIX
        - NOT_EQUALS
    StringInput:
      type: string
      maxLength: 1024
      minLength: 1
    StringFilter:
      type: object
      required:
        - Comparison
        - Value
      properties:
        Comparison:
          $ref: '#/components/schemas/StringComparison'
        Value:
          $ref: '#/components/schemas/StringInput'
      additionalProperties: false
    StringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/StringFilter'
      x-insertionOrder: false
      maxItems: 10
      minItems: 1
    Timestamp:
      type: integer
      format: int64
    DateFilter:
      type: object
      properties:
        EndInclusive:
          $ref: '#/components/schemas/Timestamp'
        StartInclusive:
          $ref: '#/components/schemas/Timestamp'
      additionalProperties: false
    DateFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/DateFilter'
      maxItems: 10
      minItems: 1
    Port:
      type: integer
      maximum: 65535
      minimum: 0
    PortRangeFilter:
      type: object
      properties:
        BeginInclusive:
          $ref: '#/components/schemas/Port'
        EndInclusive:
          $ref: '#/components/schemas/Port'
      additionalProperties: false
    PortRangeFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/PortRangeFilter'
      maxItems: 10
      minItems: 1
    NumberFilter:
      type: object
      properties:
        LowerInclusive:
          type: number
        UpperInclusive:
          type: number
      additionalProperties: false
    NumberFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/NumberFilter'
      maxItems: 10
      minItems: 1
    MapComparison:
      type: string
      enum:
        - EQUALS
    MapFilter:
      type: object
      required:
        - Comparison
      properties:
        Comparison:
          $ref: '#/components/schemas/MapComparison'
        Key:
          $ref: '#/components/schemas/MapKey'
        Value:
          $ref: '#/components/schemas/MapValue'
      additionalProperties: false
    MapFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/MapFilter'
      maxItems: 10
      minItems: 1
    PackageFilter:
      type: object
      additionalProperties: false
      properties:
        Architecture:
          $ref: '#/components/schemas/StringFilter'
        Epoch:
          $ref: '#/components/schemas/NumberFilter'
        Name:
          $ref: '#/components/schemas/StringFilter'
        Release:
          $ref: '#/components/schemas/StringFilter'
        SourceLayerHash:
          $ref: '#/components/schemas/StringFilter'
        Version:
          $ref: '#/components/schemas/StringFilter'
    PackageFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/PackageFilter'
      maxItems: 10
      minItems: 1
    FilterCriteria:
      type: object
      additionalProperties: false
      properties:
        AwsAccountId:
          $ref: '#/components/schemas/StringFilterList'
        ComponentId:
          $ref: '#/components/schemas/StringFilterList'
        ComponentType:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceImageId:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceSubnetId:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceVpcId:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageArchitecture:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageHash:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageTags:
          $ref: '#/components/schemas/StringFilterList'
        EcrImagePushedAt:
          $ref: '#/components/schemas/DateFilterList'
        EcrImageRegistry:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageRepositoryName:
          $ref: '#/components/schemas/StringFilterList'
        FindingArn:
          $ref: '#/components/schemas/StringFilterList'
        FindingStatus:
          $ref: '#/components/schemas/StringFilterList'
        FindingType:
          $ref: '#/components/schemas/StringFilterList'
        FirstObservedAt:
          $ref: '#/components/schemas/DateFilterList'
        InspectorScore:
          $ref: '#/components/schemas/NumberFilterList'
        LastObservedAt:
          $ref: '#/components/schemas/DateFilterList'
        NetworkProtocol:
          $ref: '#/components/schemas/StringFilterList'
        PortRange:
          $ref: '#/components/schemas/PortRangeFilterList'
        RelatedVulnerabilities:
          $ref: '#/components/schemas/StringFilterList'
        ResourceId:
          $ref: '#/components/schemas/StringFilterList'
        ResourceTags:
          $ref: '#/components/schemas/MapFilterList'
        ResourceType:
          $ref: '#/components/schemas/StringFilterList'
        Severity:
          $ref: '#/components/schemas/StringFilterList'
        Title:
          $ref: '#/components/schemas/StringFilterList'
        UpdatedAt:
          $ref: '#/components/schemas/DateFilterList'
        VendorSeverity:
          $ref: '#/components/schemas/StringFilterList'
        VulnerabilityId:
          $ref: '#/components/schemas/StringFilterList'
        VulnerabilitySource:
          $ref: '#/components/schemas/StringFilterList'
        VulnerablePackages:
          $ref: '#/components/schemas/PackageFilterList'
    FilterAction:
      type: string
      enum:
        - NONE
        - SUPPRESS
    MapKey:
      type: string
      maxLength: 128
      minLength: 1
    MapValue:
      type: string
      maxLength: 256
      minLength: 0
    Filter:
      type: object
      properties:
        Name:
          description: Findings filter name.
          type: string
          maxLength: 128
          minLength: 1
        Description:
          description: Findings filter description.
          type: string
          maxLength: 512
          minLength: 1
        FilterCriteria:
          description: Findings filter criteria.
          $ref: '#/components/schemas/FilterCriteria'
        FilterAction:
          description: Findings filter action.
          $ref: '#/components/schemas/FilterAction'
        Arn:
          description: Findings filter ARN.
          type: string
          maxLength: 128
          minLength: 1
      required:
        - Name
        - FilterCriteria
        - FilterAction
      x-stackql-resource-name: filter
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    filters:
      name: filters
      id: aws.inspectorv2.filters
      x-cfn-schema-name: Filter
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::Filter'
    filter:
      name: filter
      id: aws.inspectorv2.filter
      x-cfn-schema-name: Filter
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.FilterCriteria.AwsAccountId') as filter_criteria_aws_account_id,
              JSON_EXTRACT(Properties, '$.FilterCriteria.ComponentId') as filter_criteria_component_id,
              JSON_EXTRACT(Properties, '$.FilterCriteria.ComponentType') as filter_criteria_component_type,
              JSON_EXTRACT(Properties, '$.FilterCriteria.Ec2InstanceImageId') as filter_criteria_ec2_instance_image_id,
              JSON_EXTRACT(Properties, '$.FilterCriteria.Ec2InstanceSubnetId') as filter_criteria_ec2_instance_subnet_id,
              JSON_EXTRACT(Properties, '$.FilterCriteria.Ec2InstanceVpcId') as filter_criteria_ec2_instance_vpc_id,
              JSON_EXTRACT(Properties, '$.FilterCriteria.EcrImageArchitecture') as filter_criteria_ecr_image_architecture,
              JSON_EXTRACT(Properties, '$.FilterCriteria.EcrImageHash') as filter_criteria_ecr_image_hash,
              JSON_EXTRACT(Properties, '$.FilterCriteria.EcrImageTags') as filter_criteria_ecr_image_tags,
              JSON_EXTRACT(Properties, '$.FilterCriteria.EcrImagePushedAt') as filter_criteria_ecr_image_pushed_at,
              JSON_EXTRACT(Properties, '$.FilterCriteria.EcrImageRegistry') as filter_criteria_ecr_image_registry,
              JSON_EXTRACT(Properties, '$.FilterCriteria.EcrImageRepositoryName') as filter_criteria_ecr_image_repository_name,
              JSON_EXTRACT(Properties, '$.FilterCriteria.FindingArn') as filter_criteria_finding_arn,
              JSON_EXTRACT(Properties, '$.FilterCriteria.FindingStatus') as filter_criteria_finding_status,
              JSON_EXTRACT(Properties, '$.FilterCriteria.FindingType') as filter_criteria_finding_type,
              JSON_EXTRACT(Properties, '$.FilterCriteria.FirstObservedAt') as filter_criteria_first_observed_at,
              JSON_EXTRACT(Properties, '$.FilterCriteria.InspectorScore') as filter_criteria_inspector_score,
              JSON_EXTRACT(Properties, '$.FilterCriteria.LastObservedAt') as filter_criteria_last_observed_at,
              JSON_EXTRACT(Properties, '$.FilterCriteria.NetworkProtocol') as filter_criteria_network_protocol,
              JSON_EXTRACT(Properties, '$.FilterCriteria.PortRange') as filter_criteria_port_range,
              JSON_EXTRACT(Properties, '$.FilterCriteria.RelatedVulnerabilities') as filter_criteria_related_vulnerabilities,
              JSON_EXTRACT(Properties, '$.FilterCriteria.ResourceId') as filter_criteria_resource_id,
              JSON_EXTRACT(Properties, '$.FilterCriteria.ResourceTags') as filter_criteria_resource_tags,
              JSON_EXTRACT(Properties, '$.FilterCriteria.ResourceType') as filter_criteria_resource_type,
              JSON_EXTRACT(Properties, '$.FilterCriteria.Severity') as filter_criteria_severity,
              JSON_EXTRACT(Properties, '$.FilterCriteria.Title') as filter_criteria_title,
              JSON_EXTRACT(Properties, '$.FilterCriteria.UpdatedAt') as filter_criteria_updated_at,
              JSON_EXTRACT(Properties, '$.FilterCriteria.VendorSeverity') as filter_criteria_vendor_severity,
              JSON_EXTRACT(Properties, '$.FilterCriteria.VulnerabilityId') as filter_criteria_vulnerability_id,
              JSON_EXTRACT(Properties, '$.FilterCriteria.VulnerabilitySource') as filter_criteria_vulnerability_source,
              JSON_EXTRACT(Properties, '$.FilterCriteria.VulnerablePackages') as filter_criteria_vulnerable_packages,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::Filter'
