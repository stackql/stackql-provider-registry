openapi: 3.0.0
info:
  title: InspectorV2
  version: 1.0.0
paths: {}
components:
  schemas:
    CisSecurityLevel:
      type: string
      enum:
        - LEVEL_1
        - LEVEL_2
    Schedule:
      description: Choose a Schedule cadence
      properties:
        OneTime:
          $ref: '#/components/schemas/OneTimeSchedule'
        Daily:
          $ref: '#/components/schemas/DailySchedule'
        Weekly:
          $ref: '#/components/schemas/WeeklySchedule'
        Monthly:
          $ref: '#/components/schemas/MonthlySchedule'
    OneTimeSchedule:
      type: object
    DailySchedule:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Time'
      required:
        - StartTime
      additionalProperties: false
    WeeklySchedule:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Time'
        Days:
          $ref: '#/components/schemas/DaysList'
      required:
        - StartTime
        - Days
      additionalProperties: false
    MonthlySchedule:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/Time'
        Day:
          $ref: '#/components/schemas/Day'
      required:
        - StartTime
        - Day
      additionalProperties: false
    Time:
      type: object
      properties:
        TimeOfDay:
          type: string
          pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
        TimeZone:
          type: string
      required:
        - TimeOfDay
        - TimeZone
      additionalProperties: false
    DaysList:
      type: array
      minItems: 1
      maxItems: 7
      items:
        $ref: '#/components/schemas/Day'
      uniqueItems: true
    Day:
      type: string
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
    CisTargets:
      properties:
        AccountIds:
          type: array
          minItems: 1
          maxItems: 10000
          items:
            type: string
            pattern: ^\d{12}|ALL_MEMBERS|SELF$
          uniqueItems: true
        TargetResourceTags:
          $ref: '#/components/schemas/TargetResourceTags'
      additionalProperties: false
      required:
        - AccountIds
    TargetResourceTags:
      x-patternProperties:
        ^.+$:
          $ref: '#/components/schemas/TagValueList'
      maxProperties: 5
      additionalProperties: false
    TagValueList:
      type: array
      minItems: 1
      maxItems: 5
      items:
        type: string
      uniqueItems: true
    CisTagMap:
      type: object
      x-patternProperties:
        ^.{2,127}$:
          type: string
          pattern: ^.{1,255}$
      additionalProperties: false
    CisScanConfiguration:
      type: object
      properties:
        ScanName:
          description: Name of the scan
          type: string
          minLength: 1
        SecurityLevel:
          $ref: '#/components/schemas/CisSecurityLevel'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        Targets:
          $ref: '#/components/schemas/CisTargets'
        Arn:
          type: string
          description: CIS Scan configuration unique identifier
        Tags:
          $ref: '#/components/schemas/CisTagMap'
      x-stackql-resource-name: cis_scan_configuration
      description: CIS Scan Configuration resource schema
      x-type-name: AWS::InspectorV2::CisScanConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - inspector2:CreateCisScanConfiguration
          - inspector2:ListCisScanConfigurations
          - inspector2:TagResource
        read:
          - inspector2:ListCisScanConfigurations
          - inspector2:ListTagsForResource
        update:
          - inspector2:ListCisScanConfigurations
          - inspector2:UpdateCisScanConfiguration
          - inspector2:TagResource
          - inspector2:UntagResource
          - inspector2:ListTagsForResource
        delete:
          - inspector2:ListCisScanConfigurations
          - inspector2:DeleteCisScanConfiguration
          - inspector2:UntagResource
        list:
          - inspector2:ListCisScanConfigurations
          - inspector2:ListTagsForResource
    StringComparison:
      type: string
      enum:
        - EQUALS
        - PREFIX
        - NOT_EQUALS
    StringInput:
      type: string
      maxLength: 1024
      minLength: 1
    StringFilter:
      type: object
      required:
        - Comparison
        - Value
      properties:
        Comparison:
          $ref: '#/components/schemas/StringComparison'
        Value:
          $ref: '#/components/schemas/StringInput'
      additionalProperties: false
    StringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/StringFilter'
      x-insertionOrder: false
      maxItems: 10
      minItems: 1
    Timestamp:
      type: integer
      format: int64
    DateFilter:
      type: object
      properties:
        EndInclusive:
          $ref: '#/components/schemas/Timestamp'
        StartInclusive:
          $ref: '#/components/schemas/Timestamp'
      additionalProperties: false
    DateFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/DateFilter'
      maxItems: 10
      minItems: 1
    Port:
      type: integer
      maximum: 65535
      minimum: 0
    PortRangeFilter:
      type: object
      properties:
        BeginInclusive:
          $ref: '#/components/schemas/Port'
        EndInclusive:
          $ref: '#/components/schemas/Port'
      additionalProperties: false
    PortRangeFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/PortRangeFilter'
      maxItems: 10
      minItems: 1
    NumberFilter:
      type: object
      properties:
        LowerInclusive:
          type: number
        UpperInclusive:
          type: number
      additionalProperties: false
    NumberFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/NumberFilter'
      maxItems: 10
      minItems: 1
    MapComparison:
      type: string
      enum:
        - EQUALS
    MapFilter:
      type: object
      required:
        - Comparison
      properties:
        Comparison:
          $ref: '#/components/schemas/MapComparison'
        Key:
          $ref: '#/components/schemas/MapKey'
        Value:
          $ref: '#/components/schemas/MapValue'
      additionalProperties: false
    MapFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/MapFilter'
      maxItems: 10
      minItems: 1
    PackageFilter:
      type: object
      additionalProperties: false
      properties:
        Architecture:
          $ref: '#/components/schemas/StringFilter'
        Epoch:
          $ref: '#/components/schemas/NumberFilter'
        Name:
          $ref: '#/components/schemas/StringFilter'
        Release:
          $ref: '#/components/schemas/StringFilter'
        SourceLayerHash:
          $ref: '#/components/schemas/StringFilter'
        Version:
          $ref: '#/components/schemas/StringFilter'
    PackageFilterList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/PackageFilter'
      maxItems: 10
      minItems: 1
    FilterCriteria:
      type: object
      additionalProperties: false
      properties:
        AwsAccountId:
          $ref: '#/components/schemas/StringFilterList'
        ComponentId:
          $ref: '#/components/schemas/StringFilterList'
        ComponentType:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceImageId:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceSubnetId:
          $ref: '#/components/schemas/StringFilterList'
        Ec2InstanceVpcId:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageArchitecture:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageHash:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageTags:
          $ref: '#/components/schemas/StringFilterList'
        EcrImagePushedAt:
          $ref: '#/components/schemas/DateFilterList'
        EcrImageRegistry:
          $ref: '#/components/schemas/StringFilterList'
        EcrImageRepositoryName:
          $ref: '#/components/schemas/StringFilterList'
        FindingArn:
          $ref: '#/components/schemas/StringFilterList'
        FindingStatus:
          $ref: '#/components/schemas/StringFilterList'
        FindingType:
          $ref: '#/components/schemas/StringFilterList'
        FirstObservedAt:
          $ref: '#/components/schemas/DateFilterList'
        InspectorScore:
          $ref: '#/components/schemas/NumberFilterList'
        LastObservedAt:
          $ref: '#/components/schemas/DateFilterList'
        NetworkProtocol:
          $ref: '#/components/schemas/StringFilterList'
        PortRange:
          $ref: '#/components/schemas/PortRangeFilterList'
        RelatedVulnerabilities:
          $ref: '#/components/schemas/StringFilterList'
        ResourceId:
          $ref: '#/components/schemas/StringFilterList'
        ResourceTags:
          $ref: '#/components/schemas/MapFilterList'
        ResourceType:
          $ref: '#/components/schemas/StringFilterList'
        Severity:
          $ref: '#/components/schemas/StringFilterList'
        Title:
          $ref: '#/components/schemas/StringFilterList'
        UpdatedAt:
          $ref: '#/components/schemas/DateFilterList'
        VendorSeverity:
          $ref: '#/components/schemas/StringFilterList'
        VulnerabilityId:
          $ref: '#/components/schemas/StringFilterList'
        VulnerabilitySource:
          $ref: '#/components/schemas/StringFilterList'
        VulnerablePackages:
          $ref: '#/components/schemas/PackageFilterList'
    FilterAction:
      type: string
      enum:
        - NONE
        - SUPPRESS
    MapKey:
      type: string
      maxLength: 128
      minLength: 1
    MapValue:
      type: string
      maxLength: 256
      minLength: 0
    Filter:
      type: object
      properties:
        Name:
          description: Findings filter name.
          type: string
          maxLength: 128
          minLength: 1
        Description:
          description: Findings filter description.
          type: string
          maxLength: 512
          minLength: 1
        FilterCriteria:
          description: Findings filter criteria.
          $ref: '#/components/schemas/FilterCriteria'
        FilterAction:
          description: Findings filter action.
          $ref: '#/components/schemas/FilterAction'
        Arn:
          description: Findings filter ARN.
          type: string
          maxLength: 128
          minLength: 1
      required:
        - Name
        - FilterCriteria
        - FilterAction
      x-stackql-resource-name: filter
      description: Inspector Filter resource schema
      x-type-name: AWS::InspectorV2::Filter
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - FilterCriteria
        - FilterAction
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - inspector2:CreateFilter
          - inspector2:ListFilters
        read:
          - inspector2:ListFilters
        update:
          - inspector2:ListFilters
          - inspector2:UpdateFilter
        delete:
          - inspector2:DeleteFilter
          - inspector2:ListFilters
        list:
          - inspector2:ListFilters
  x-stackQL-resources:
    cis_scan_configurations:
      name: cis_scan_configurations
      id: aws.inspectorv2.cis_scan_configurations
      x-cfn-schema-name: CisScanConfiguration
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                AND region = 'us-east-1'
    cis_scan_configuration:
      name: cis_scan_configuration
      id: aws.inspectorv2.cis_scan_configuration
      x-cfn-schema-name: CisScanConfiguration
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ScanName') as scan_name,
              JSON_EXTRACT(Properties, '$.SecurityLevel') as security_level,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ScanName') as scan_name,
                json_extract_path_text(Properties, 'SecurityLevel') as security_level,
                json_extract_path_text(Properties, 'Schedule') as schedule,
                json_extract_path_text(Properties, 'Targets') as targets,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::CisScanConfiguration'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    filters:
      name: filters
      id: aws.inspectorv2.filters
      x-cfn-schema-name: Filter
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::Filter'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::InspectorV2::Filter'
                AND region = 'us-east-1'
    filter:
      name: filter
      id: aws.inspectorv2.filter
      x-cfn-schema-name: Filter
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.FilterCriteria') as filter_criteria,
              JSON_EXTRACT(Properties, '$.FilterAction') as filter_action,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::Filter'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'FilterCriteria') as filter_criteria,
                json_extract_path_text(Properties, 'FilterAction') as filter_action,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::InspectorV2::Filter'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
