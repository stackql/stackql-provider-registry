openapi: 3.0.0
info:
  title: KMS
  version: 1.0.0
paths: {}
components:
  schemas:
    Alias:
      type: object
      properties:
        AliasName:
          description: Specifies the alias name. This value must begin with alias/ followed by a name, such as alias/ExampleAlias. The alias name cannot begin with alias/aws/. The alias/aws/ prefix is reserved for AWS managed keys.
          type: string
          pattern: ^(alias/)[a-zA-Z0-9:/_-]+$
          minLength: 1
          maxLength: 256
        TargetKeyId:
          description: Identifies the AWS KMS key to which the alias refers. Specify the key ID or the Amazon Resource Name (ARN) of the AWS KMS key. You cannot specify another alias. For help finding the key ID and ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide.
          type: string
          minLength: 1
          maxLength: 256
      required:
        - AliasName
        - TargetKeyId
      x-stackql-resource-name: alias
      x-stackql-primaryIdentifier:
        - AliasName
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    Key:
      type: object
      properties:
        Description:
          description: A description of the AWS KMS key. Use a description that helps you to distinguish this AWS KMS key from others in the account, such as its intended use.
          type: string
          minLength: 0
          maxLength: 8192
        Enabled:
          description: Specifies whether the AWS KMS key is enabled. Disabled AWS KMS keys cannot be used in cryptographic operations.
          type: boolean
        EnableKeyRotation:
          description: Enables automatic rotation of the key material for the specified AWS KMS key. By default, automation key rotation is not enabled.
          type: boolean
        KeyPolicy:
          type: string
        KeyUsage:
          description: Determines the cryptographic operations for which you can use the AWS KMS key. The default value is ENCRYPT_DECRYPT. This property is required only for asymmetric AWS KMS keys. You can't change the KeyUsage value after the AWS KMS key is created.
          type: string
          default: ENCRYPT_DECRYPT
          enum:
            - ENCRYPT_DECRYPT
            - SIGN_VERIFY
            - GENERATE_VERIFY_MAC
        KeySpec:
          description: Specifies the type of AWS KMS key to create. The default value is SYMMETRIC_DEFAULT. This property is required only for asymmetric AWS KMS keys. You can't change the KeySpec value after the AWS KMS key is created.
          type: string
          default: SYMMETRIC_DEFAULT
          enum:
            - SYMMETRIC_DEFAULT
            - RSA_2048
            - RSA_3072
            - RSA_4096
            - ECC_NIST_P256
            - ECC_NIST_P384
            - ECC_NIST_P521
            - ECC_SECG_P256K1
            - HMAC_224
            - HMAC_256
            - HMAC_384
            - HMAC_512
            - SM2
        MultiRegion:
          description: Specifies whether the AWS KMS key should be Multi-Region. You can't change the MultiRegion value after the AWS KMS key is created.
          type: boolean
          default: false
        PendingWindowInDays:
          description: Specifies the number of days in the waiting period before AWS KMS deletes an AWS KMS key that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.
          type: integer
          minimum: 7
          maximum: 30
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          type: string
        KeyId:
          type: string
      required:
        - KeyPolicy
      x-stackql-resource-name: key
      x-stackql-primaryIdentifier:
        - KeyId
    ReplicaKey:
      type: object
      properties:
        PrimaryKeyArn:
          description: Identifies the primary AWS KMS key to create a replica of. Specify the Amazon Resource Name (ARN) of the AWS KMS key. You cannot specify an alias or key ID. For help finding the ARN, see Finding the Key ID and ARN in the AWS Key Management Service Developer Guide.
          type: string
          minLength: 1
          maxLength: 256
        Description:
          description: A description of the AWS KMS key. Use a description that helps you to distinguish this AWS KMS key from others in the account, such as its intended use.
          type: string
          minLength: 0
          maxLength: 8192
        Enabled:
          description: Specifies whether the AWS KMS key is enabled. Disabled AWS KMS keys cannot be used in cryptographic operations.
          type: boolean
        KeyPolicy:
          type: string
        PendingWindowInDays:
          description: Specifies the number of days in the waiting period before AWS KMS deletes an AWS KMS key that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.
          type: integer
          minimum: 7
          maximum: 30
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          type: string
        KeyId:
          type: string
      required:
        - PrimaryKeyArn
        - KeyPolicy
      x-stackql-resource-name: replica_key
      x-stackql-primaryIdentifier:
        - KeyId
  x-stackQL-resources:
    aliases:
      name: aliases
      id: aws.kms.aliases
      x-cfn-schema-name: Alias
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AliasName') as alias_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KMS::Alias'
    alias:
      name: alias
      id: aws.kms.alias
      x-cfn-schema-name: Alias
      x-type: get
      x-identifiers:
        - AliasName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AliasName') as alias_name,
              JSON_EXTRACT(Properties, '$.TargetKeyId') as target_key_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KMS::Alias'
    keys:
      name: keys
      id: aws.kms.keys
      x-cfn-schema-name: Key
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyId') as key_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KMS::Key'
    key:
      name: key
      id: aws.kms.key
      x-cfn-schema-name: Key
      x-type: get
      x-identifiers:
        - KeyId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.EnableKeyRotation') as enable_key_rotation,
              JSON_EXTRACT(Properties, '$.KeyPolicy') as key_policy,
              JSON_EXTRACT(Properties, '$.KeyUsage') as key_usage,
              JSON_EXTRACT(Properties, '$.KeySpec') as key_spec,
              JSON_EXTRACT(Properties, '$.MultiRegion') as multi_region,
              JSON_EXTRACT(Properties, '$.PendingWindowInDays') as pending_window_in_days,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.KeyId') as key_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KMS::Key'
    replica_keys:
      name: replica_keys
      id: aws.kms.replica_keys
      x-cfn-schema-name: ReplicaKey
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyId') as key_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KMS::ReplicaKey'
    replica_key:
      name: replica_key
      id: aws.kms.replica_key
      x-cfn-schema-name: ReplicaKey
      x-type: get
      x-identifiers:
        - KeyId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PrimaryKeyArn') as primary_key_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.KeyPolicy') as key_policy,
              JSON_EXTRACT(Properties, '$.PendingWindowInDays') as pending_window_in_days,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.KeyId') as key_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KMS::ReplicaKey'
