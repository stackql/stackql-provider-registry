openapi: 3.0.0
info:
  title: SecurityHub
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tags:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      x-patternProperties:
        ^[a-zA-Z0-9-_]{1,128}$:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
    NonEmptyString:
      type: string
      pattern: .*\S.*
    DateFilter:
      description: A date filter for querying findings.
      properties:
        DateRange:
          $ref: '#/components/schemas/DateRange'
        End:
          $ref: '#/components/schemas/ISO8601DateString'
        Start:
          $ref: '#/components/schemas/ISO8601DateString'
      type: object
      additionalProperties: false
    DateRange:
      description: A date range for the date filter.
      properties:
        Unit:
          description: A date range unit for the date filter.
          enum:
            - DAYS
          type: string
        Value:
          description: A date range value for the date filter.
          type: number
      required:
        - Unit
        - Value
      type: object
      additionalProperties: false
    BooleanFilter:
      description: Boolean filter for querying findings.
      properties:
        Value:
          description: The value of the boolean.
          type: boolean
      required:
        - Value
      type: object
      additionalProperties: false
    MapFilter:
      description: A map filter for filtering AWS Security Hub findings.
      properties:
        Comparison:
          description: The condition to apply to the key value when filtering Security Hub findings with a map filter.
          enum:
            - EQUALS
            - NOT_EQUALS
          type: string
        Key:
          $ref: '#/components/schemas/NonEmptyString'
        Value:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - Comparison
        - Key
        - Value
      type: object
      additionalProperties: false
    NumberFilter:
      description: A number filter for querying findings.
      properties:
        Eq:
          description: The equal-to condition to be applied to a single field when querying for findings.
          type: number
        Gte:
          description: The greater-than-equal condition to be applied to a single field when querying for findings.
          type: number
        Lte:
          description: The less-than-equal condition to be applied to a single field when querying for findings.
          type: number
      type: object
      additionalProperties: false
    StringFilter:
      description: A string filter for filtering AWS Security Hub findings.
      properties:
        Comparison:
          $ref: '#/components/schemas/StringFilterComparison'
        Value:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - Comparison
        - Value
      type: object
      additionalProperties: false
    StringFilterComparison:
      description: The condition to apply to a string value when filtering Security Hub findings.
      enum:
        - EQUALS
        - PREFIX
        - NOT_EQUALS
        - PREFIX_NOT_EQUALS
      type: string
    ISO8601DateString:
      description: The date and time, in UTC and ISO 8601 format.
      type: string
      pattern: ^([\+-]?\d{4}(?!\d{2}))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([tT]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$
    arn:
      description: The Amazon Resource Name (ARN) of the automation rule.
      type: string
      minLength: 12
      maxLength: 2048
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso-?[a-z]{0,2}):[A-Za-z0-9]{1,63}:[a-z]+-([a-z]{1,10}-)?[a-z]+-[0-9]+:([0-9]{12})?:.+$
    arnOrId:
      description: The Amazon Resource Name (ARN) or Id of the automation rule.
      anyOf:
        - type: string
          minLength: 1
          maxLength: 512
        - $ref: '#/components/schemas/arn'
    timestamp:
      type: string
      format: date-time
      pattern: (\d\d\d\d)-[0-1](\d)-[0-3](\d)[Tt](?:[0-2](\d):[0-5](\d):[0-5](\d)|23:59:60)(?:\.(\d)+)?(?:[Zz]|[+-](\d\d)(?::?(\d\d))?)$
    int100:
      description: Integer from 0 to 100.
      type: integer
      minimum: 0
      maximum: 100
    map:
      description: An object of user-defined name and value string pair added to a finding.
      type: object
      minProperties: 1
      maxProperties: 50
      x-patternProperties:
        ^[-_+=.:/@\w\s]{1,128}$:
          description: The value for the key in the map
          type: string
          minLength: 0
          maxLength: 1024
      additionalProperties: false
    RelatedFinding:
      description: Provides details about a list of findings that the current finding relates to.
      type: object
      properties:
        ProductArn:
          $ref: '#/components/schemas/arn'
          description: The Amazon Resource Name (ARN) for the product that generated a related finding.
        Id:
          $ref: '#/components/schemas/arnOrId'
          description: |-
            The product-generated identifier for a related finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
      additionalProperties: false
      required:
        - ProductArn
        - Id
    NoteUpdate:
      description: The updated note.
      type: object
      properties:
        Text:
          description: The updated note text.
          type: string
          minLength: 1
          maxLength: 512
        UpdatedBy:
          $ref: '#/components/schemas/arnOrId'
          description: The principal that updated the note.
      additionalProperties: false
      required:
        - Text
        - UpdatedBy
    WorkflowUpdate:
      description: Used to update information about the investigation into the finding.
      type: object
      properties:
        Status:
          description: |-
            The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to ``SUPPRESSED`` or ``RESOLVED`` does not prevent a new finding for the same issue.
             The allowed values are the following.
              +   ``NEW`` - The initial state of a finding, before it is reviewed.
             Security Hub also resets ``WorkFlowStatus`` from ``NOTIFIED`` or ``RESOLVED`` to ``NEW`` in the following cases:
              +  The record state changes from ``ARCHIVED`` to ``ACTIVE``.
              +  The compliance status changes from ``PASSED`` to either ``WARNING``, ``FAILED``, or ``NOT_AVAILABLE``.
              
              +   ``NOTIFIED`` - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.
              +   ``RESOLVED`` - The finding was reviewed and remediated and is now considered resolved.
              +   ``SUPPRESSED`` - Indicates that you reviewed the finding and don't believe that any action is needed. The finding is no longer updated.
          type: string
          enum:
            - NEW
            - NOTIFIED
            - RESOLVED
            - SUPPRESSED
      required:
        - Status
      additionalProperties: false
    SeverityUpdate:
      description: Updates to the severity information for a finding.
      type: object
      properties:
        Product:
          description: The native severity as defined by the AWS service or integrated partner product that generated the finding.
          type: number
        Label:
          description: |-
            The severity value of the finding. The allowed values are the following.
              +   ``INFORMATIONAL`` - No issue was found.
              +   ``LOW`` - The issue does not require action on its own.
              +   ``MEDIUM`` - The issue must be addressed but not urgently.
              +   ``HIGH`` - The issue must be addressed as a priority.
              +   ``CRITICAL`` - The issue must be remediated immediately to avoid it escalating.
          type: string
          enum:
            - INFORMATIONAL
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
        Normalized:
          $ref: '#/components/schemas/int100'
          description: |-
            The normalized severity for the finding. This attribute is to be deprecated in favor of ``Label``.
             If you provide ``Normalized`` and don't provide ``Label``, ``Label`` is set automatically as follows.
              +  0 - ``INFORMATIONAL`` 
              +  1–39 - ``LOW`` 
              +  40–69 - ``MEDIUM`` 
              +  70–89 - ``HIGH`` 
              +  90–100 - ``CRITICAL``
      additionalProperties: false
    AutomationRulesFindingFieldsUpdate:
      description: Identifies the finding fields that the automation rule action updates when a finding matches the defined criteria.
      type: object
      properties:
        Types:
          description: The rule action updates the ``Types`` field of a finding.
          type: array
          maxItems: 50
          uniqueItems: true
          items:
            type: string
            pattern: ^([^/]+)(/[^/]+){0,2}$
        Severity:
          type: object
          description: The rule action will update the ``Severity`` field of a finding.
          $ref: '#/components/schemas/SeverityUpdate'
        Confidence:
          $ref: '#/components/schemas/int100'
          description: The rule action updates the ``Confidence`` field of a finding.
        Criticality:
          $ref: '#/components/schemas/int100'
          description: The rule action updates the ``Criticality`` field of a finding.
        UserDefinedFields:
          $ref: '#/components/schemas/map'
          description: The rule action updates the ``UserDefinedFields`` field of a finding.
        VerificationState:
          description: The rule action updates the ``VerificationState`` field of a finding.
          type: string
          enum:
            - UNKNOWN
            - TRUE_POSITIVE
            - FALSE_POSITIVE
            - BENIGN_POSITIVE
        RelatedFindings:
          description: The rule action will update the ``RelatedFindings`` field of a finding.
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/RelatedFinding'
        Note:
          type: object
          description: The rule action will update the ``Note`` field of a finding.
          $ref: '#/components/schemas/NoteUpdate'
        Workflow:
          type: object
          description: The rule action will update the ``Workflow`` field of a finding.
          $ref: '#/components/schemas/WorkflowUpdate'
    AutomationRulesAction:
      description: One or more actions that ASHlong takes when a finding matches the defined criteria of a rule.
      type: object
      properties:
        Type:
          description: Specifies the type of action that Security Hub takes when a finding matches the defined criteria of a rule.
          type: string
          enum:
            - FINDING_FIELDS_UPDATE
        FindingFieldsUpdate:
          $ref: '#/components/schemas/AutomationRulesFindingFieldsUpdate'
          description: Specifies that the automation rule action is an update to a finding field.
      required:
        - Type
        - FindingFieldsUpdate
    AutomationRulesFindingFilters:
      description: The criteria that determine which findings a rule applies to.
      type: object
      additionalProperties: false
      properties:
        ProductArn:
          description: |-
            The Amazon Resource Name (ARN) for a third-party product that generated a finding in Security Hub. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        AwsAccountId:
          description: |-
            The AWS-account ID in which a finding was generated.
              Array Members: Minimum number of 1 item. Maximum number of 100 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 100
        Id:
          description: |-
            The product-specific identifier for a finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        GeneratorId:
          description: |-
            The identifier for the solution-specific component that generated a finding. 
              Array Members: Minimum number of 1 item. Maximum number of 100 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 100
        Type:
          description: |-
            One or more finding types in the format of namespace/category/classifier that classify a finding. For a list of namespaces, classifiers, and categories, see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html) in the *User Guide*.
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        FirstObservedAt:
          description: |-
            A timestamp that indicates when the potential security issue captured by a finding was first observed by the security findings product. 
             This field accepts only the specified formats. Timestamps can end with ``Z`` or ``("+" / "-") time-hour [":" time-minute]``. The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
              +   ``YYYY-MM-DDTHH:MM:SSZ`` (for example, ``2019-01-31T23:00:00Z``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ`` (for example, ``2019-01-31T23:00:00.123456789Z``)
              +   ``YYYY-MM-DDTHH:MM:SS+HH:MM`` (for example, ``2024-01-04T15:25:10+17:59``)
              +   ``YYYY-MM-DDTHH:MM:SS-HHMM`` (for example, ``2024-01-04T15:25:10-1759``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM`` (for example, ``2024-01-04T15:25:10.123456789+17:59``)
              
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          maxItems: 20
        LastObservedAt:
          description: |-
            A timestamp that indicates when the potential security issue captured by a finding was most recently observed by the security findings product. 
             This field accepts only the specified formats. Timestamps can end with ``Z`` or ``("+" / "-") time-hour [":" time-minute]``. The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
              +   ``YYYY-MM-DDTHH:MM:SSZ`` (for example, ``2019-01-31T23:00:00Z``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ`` (for example, ``2019-01-31T23:00:00.123456789Z``)
              +   ``YYYY-MM-DDTHH:MM:SS+HH:MM`` (for example, ``2024-01-04T15:25:10+17:59``)
              +   ``YYYY-MM-DDTHH:MM:SS-HHMM`` (for example, ``2024-01-04T15:25:10-1759``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM`` (for example, ``2024-01-04T15:25:10.123456789+17:59``)
              
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          maxItems: 20
        CreatedAt:
          description: |-
            A timestamp that indicates when this finding record was created. 
             This field accepts only the specified formats. Timestamps can end with ``Z`` or ``("+" / "-") time-hour [":" time-minute]``. The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
              +   ``YYYY-MM-DDTHH:MM:SSZ`` (for example, ``2019-01-31T23:00:00Z``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ`` (for example, ``2019-01-31T23:00:00.123456789Z``)
              +   ``YYYY-MM-DDTHH:MM:SS+HH:MM`` (for example, ``2024-01-04T15:25:10+17:59``)
              +   ``YYYY-MM-DDTHH:MM:SS-HHMM`` (for example, ``2024-01-04T15:25:10-1759``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM`` (for example, ``2024-01-04T15:25:10.123456789+17:59``)
              
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          maxItems: 20
        UpdatedAt:
          description: |-
            A timestamp that indicates when the finding record was most recently updated. 
             This field accepts only the specified formats. Timestamps can end with ``Z`` or ``("+" / "-") time-hour [":" time-minute]``. The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
              +   ``YYYY-MM-DDTHH:MM:SSZ`` (for example, ``2019-01-31T23:00:00Z``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ`` (for example, ``2019-01-31T23:00:00.123456789Z``)
              +   ``YYYY-MM-DDTHH:MM:SS+HH:MM`` (for example, ``2024-01-04T15:25:10+17:59``)
              +   ``YYYY-MM-DDTHH:MM:SS-HHMM`` (for example, ``2024-01-04T15:25:10-1759``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM`` (for example, ``2024-01-04T15:25:10.123456789+17:59``)
              
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          maxItems: 20
        Confidence:
          description: >-
            The likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. ``Confidence`` is scored on a 0–100 basis using a ratio scale. A value of ``0`` means 0 percent confidence, and a value of ``100`` means 100 percent confidence. For example, a data exfiltration detection based on a statistical deviation of network traffic has low confidence because an actual exfiltration hasn't been verified. For more information, see
            [Confidence](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-confidence) in the *User Guide*.
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          maxItems: 20
        Criticality:
          description: >-
            The level of importance that is assigned to the resources that are associated with a finding. ``Criticality`` is scored on a 0–100 basis, using a ratio scale that supports only full integers. A score of ``0`` means that the underlying resources have no criticality, and a score of ``100`` is reserved for the most critical resources. For more information, see [Criticality](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-criticality) in the
            *User Guide*.
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          maxItems: 20
        Title:
          description: |-
            A finding's title. 
              Array Members: Minimum number of 1 item. Maximum number of 100 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 100
        Description:
          description: |-
            A finding's description. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        SourceUrl:
          description: |-
            Provides a URL that links to a page about the current finding in the finding product. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        ProductName:
          description: |-
            Provides the name of the product that generated the finding. For control-based findings, the product name is Security Hub. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        CompanyName:
          description: |-
            The name of the company for the product that generated the finding. For control-based findings, the company is AWS. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        SeverityLabel:
          description: |-
            The severity value of the finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        ResourceType:
          description: |-
            A finding's title. 
              Array Members: Minimum number of 1 item. Maximum number of 100 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        ResourceId:
          description: |-
            The identifier for the given resource type. For AWS resources that are identified by Amazon Resource Names (ARNs), this is the ARN. For AWS resources that lack ARNs, this is the identifier as defined by the AWS-service that created the resource. For non-AWS resources, this is a unique identifier that is associated with the resource. 
              Array Members: Minimum number of 1 item. Maximum number of 100 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 100
        ResourcePartition:
          description: |-
            The partition in which the resource that the finding pertains to is located. A partition is a group of AWS-Regions. Each AWS-account is scoped to one partition. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        ResourceRegion:
          description: |-
            The AWS-Region where the resource that a finding pertains to is located. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        ResourceTags:
          description: |-
            A list of AWS tags associated with a resource at the time the finding was processed. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/MapFilter'
          type: array
          maxItems: 20
        ResourceDetailsOther:
          description: |-
            Custom fields and values about the resource that a finding pertains to. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/MapFilter'
          type: array
          maxItems: 20
        ComplianceStatus:
          description: |-
            The result of a security check. This field is only used for findings generated from controls. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        ComplianceSecurityControlId:
          description: |-
            The security control ID for which a finding was generated. Security control IDs are the same across standards.
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        ComplianceAssociatedStandardsId:
          description: |-
            The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API response.
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        VerificationState:
          description: |-
            Provides the veracity of a finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        WorkflowStatus:
          description: |-
            Provides information about the status of the investigation into a finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        RecordState:
          description: |-
            Provides the current state of a finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        RelatedFindingsProductArn:
          description: |-
            The ARN for the product that generated a related finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        RelatedFindingsId:
          description: |-
            The product-generated identifier for a related finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        NoteText:
          description: |-
            The text of a user-defined note that's added to a finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        NoteUpdatedAt:
          description: |-
            The timestamp of when the note was updated.
             This field accepts only the specified formats. Timestamps can end with ``Z`` or ``("+" / "-") time-hour [":" time-minute]``. The time-secfrac after seconds is limited to a maximum of 9 digits. The offset is bounded by +/-18:00. Here are valid timestamp formats with examples:
              +   ``YYYY-MM-DDTHH:MM:SSZ`` (for example, ``2019-01-31T23:00:00Z``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmmZ`` (for example, ``2019-01-31T23:00:00.123456789Z``)
              +   ``YYYY-MM-DDTHH:MM:SS+HH:MM`` (for example, ``2024-01-04T15:25:10+17:59``)
              +   ``YYYY-MM-DDTHH:MM:SS-HHMM`` (for example, ``2024-01-04T15:25:10-1759``)
              +   ``YYYY-MM-DDTHH:MM:SS.mmmmmmmmm+HH:MM`` (for example, ``2024-01-04T15:25:10.123456789+17:59``)
              
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          maxItems: 20
        NoteUpdatedBy:
          description: |-
            The principal that created a note. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          maxItems: 20
        UserDefinedFields:
          description: |-
            A list of user-defined name and value string pairs added to a finding. 
              Array Members: Minimum number of 1 item. Maximum number of 20 items.
          items:
            $ref: '#/components/schemas/MapFilter'
          type: array
          maxItems: 20
    AutomationRule:
      type: object
      properties:
        RuleArn:
          description: ''
          type: string
          pattern: arn:aws\S*:securityhub:\S*
        RuleStatus:
          description: Whether the rule is active after it is created. If this parameter is equal to ``ENABLED``, ASH applies the rule to findings and finding updates after the rule is created.
          type: string
          enum:
            - ENABLED
            - DISABLED
        RuleOrder:
          description: An integer ranging from 1 to 1000 that represents the order in which the rule action is applied to findings. Security Hub applies rules with lower values for this parameter first.
          type: integer
          minimum: 1
          maximum: 1000
        Description:
          description: A description of the rule.
          type: string
          minLength: 1
          maxLength: 1024
        RuleName:
          description: The name of the rule.
          type: string
          minLength: 1
          maxLength: 256
        CreatedAt:
          description: ''
          $ref: '#/components/schemas/ISO8601DateString'
        UpdatedAt:
          description: ''
          $ref: '#/components/schemas/ISO8601DateString'
        CreatedBy:
          description: ''
          type: string
          minLength: 1
          maxLength: 256
        IsTerminal:
          description: Specifies whether a rule is the last to be applied with respect to a finding that matches the rule criteria. This is useful when a finding matches the criteria for multiple rules, and each rule has different actions. If a rule is terminal, Security Hub applies the rule action to a finding that matches the rule criteria and doesn't evaluate other rules for the finding. By default, a rule isn't terminal.
          type: boolean
        Actions:
          type: array
          description: One or more actions to update finding fields if a finding matches the conditions specified in ``Criteria``.
          items:
            $ref: '#/components/schemas/AutomationRulesAction'
          minItems: 1
          maxItems: 1
        Criteria:
          description: A set of [Security Finding Format (ASFF)](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html) finding field attributes and corresponding expected values that ASH uses to filter findings. If a rule is enabled and a finding matches the criteria specified in this parameter, ASH applies the rule action to the finding.
          $ref: '#/components/schemas/AutomationRulesFindingFilters'
        Tags:
          description: User-defined tags associated with an automation rule.
          $ref: '#/components/schemas/Tags'
      required:
        - RuleOrder
        - RuleName
        - Description
        - Criteria
        - Actions
      x-stackql-resource-name: automation_rule
      description: The ``AWS::SecurityHub::AutomationRule`` resource specifies an automation rule based on input parameters. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *User Guide*.
      x-type-name: AWS::SecurityHub::AutomationRule
      x-stackql-primary-identifier:
        - RuleArn
      x-read-only-properties:
        - RuleArn
        - CreatedAt
        - UpdatedAt
        - CreatedBy
      x-required-properties:
        - RuleOrder
        - RuleName
        - Description
        - Criteria
        - Actions
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - securityhub:CreateAutomationRule
          - securityhub:TagResource
          - securityhub:ListTagsForResource
        read:
          - securityhub:ListAutomationRules
          - securityhub:BatchGetAutomationRules
          - securityhub:ListTagsForResource
        update:
          - securityhub:BatchUpdateAutomationRules
          - securityhub:TagResource
          - securityhub:UntagResource
          - securityhub:ListTagsForResource
        delete:
          - securityhub:BatchDeleteAutomationRules
          - securityhub:BatchGetAutomationRules
        list:
          - securityhub:ListAutomationRules
          - securityhub:ListTagsForResource
    ParameterValue:
      type: object
      properties:
        Boolean:
          description: A control parameter that is a boolean.
          type: boolean
        Double:
          description: A control parameter that is a double.
          type: number
        Enum:
          description: A control parameter that is a enum.
          $ref: '#/components/schemas/NonEmptyString'
        EnumList:
          description: A control parameter that is a list of enums.
          $ref: '#/components/schemas/NonEmptyStringList'
        Integer:
          description: A control parameter that is a integer.
          type: integer
        IntegerList:
          description: A control parameter that is a list of integers.
          $ref: '#/components/schemas/IntegerList'
        String:
          description: A control parameter that is a string.
          $ref: '#/components/schemas/NonEmptyString'
        StringList:
          description: A control parameter that is a list of strings.
          $ref: '#/components/schemas/NonEmptyStringList'
      oneOf:
        - required:
            - Boolean
        - required:
            - Double
        - required:
            - Enum
        - required:
            - EnumList
        - required:
            - Integer
        - required:
            - IntegerList
        - required:
            - String
        - required:
            - StringList
      additionalProperties: false
    ParameterConfiguration:
      type: object
      properties:
        ValueType:
          type: string
          enum:
            - DEFAULT
            - CUSTOM
        Value:
          $ref: '#/components/schemas/ParameterValue'
      additionalProperties: false
      required:
        - ValueType
    SecurityControlCustomParameter:
      type: object
      additionalProperties: false
      description: An object of security control and control parameter value that are included in a configuration policy.
      properties:
        Parameters:
          type: object
          minProperties: 1
          description: An object that specifies parameter values for a control in a configuration policy.
          additionalProperties: false
          x-patternProperties:
            ^[-_+=.:/@\w\s]{1,128}$:
              $ref: '#/components/schemas/ParameterConfiguration'
        SecurityControlId:
          type: string
          description: The ID of the security control.
          maxLength: 2048
    SecurityControlsConfiguration:
      type: object
      description: An object that defines which security controls are enabled in an AWS Security Hub configuration policy.
      additionalProperties: false
      properties:
        DisabledSecurityControlIdentifiers:
          type: array
          description: A list of security controls that are disabled in the configuration policy
          maxItems: 1000
          x-insertionOrder: true
          uniqueItems: true
          items:
            type: string
            maxLength: 2048
        EnabledSecurityControlIdentifiers:
          type: array
          description: A list of security controls that are enabled in the configuration policy.
          maxItems: 1000
          x-insertionOrder: true
          uniqueItems: true
          items:
            type: string
            maxLength: 2048
        SecurityControlCustomParameters:
          type: array
          description: A list of security controls and control parameter values that are included in a configuration policy.
          maxItems: 1000
          x-insertionOrder: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SecurityControlCustomParameter'
    SecurityHubPolicy:
      type: object
      description: An object that defines how AWS Security Hub is configured.
      additionalProperties: false
      properties:
        EnabledStandardIdentifiers:
          type: array
          description: A list that defines which security standards are enabled in the configuration policy.
          maxItems: 1000
          x-insertionOrder: true
          uniqueItems: true
          items:
            type: string
            maxLength: 2048
        ServiceEnabled:
          description: Indicates whether Security Hub is enabled in the policy.
          type: boolean
        SecurityControlsConfiguration:
          $ref: '#/components/schemas/SecurityControlsConfiguration'
    Policy:
      description: An object that defines how Security Hub is configured.
      type: object
      additionalProperties: false
      properties:
        SecurityHub:
          $ref: '#/components/schemas/SecurityHubPolicy'
    ConfigurationPolicy:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the configuration policy.
          type: string
          pattern: ^arn:aws\S*:securityhub:[a-z0-9-]+:[0-9]{12}:configuration-policy/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        Name:
          description: The name of the configuration policy.
          type: string
          minLength: 1
          maxLength: 128
        Description:
          description: The description of the configuration policy.
          type: string
          minLength: 0
          maxLength: 512
        ConfigurationPolicy:
          $ref: '#/components/schemas/Policy'
        Id:
          description: The universally unique identifier (UUID) of the configuration policy.
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        CreatedAt:
          description: The date and time, in UTC and ISO 8601 format.
          type: string
        UpdatedAt:
          description: The date and time, in UTC and ISO 8601 format.
          type: string
        ServiceEnabled:
          type: boolean
          description: Indicates whether the service that the configuration policy applies to is enabled in the policy.
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - ConfigurationPolicy
        - Name
      x-stackql-resource-name: configuration_policy
      description: The AWS::SecurityHub::ConfigurationPolicy resource represents the Central Configuration Policy in your account.
      x-type-name: AWS::SecurityHub::ConfigurationPolicy
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
        - Id
        - CreatedAt
        - UpdatedAt
        - ServiceEnabled
      x-required-properties:
        - ConfigurationPolicy
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - securityhub:CreateConfigurationPolicy
          - securityhub:TagResource
          - securityhub:ListTagsForResource
        read:
          - securityhub:GetConfigurationPolicy
          - securityhub:ListTagsForResource
        update:
          - securityhub:UpdateConfigurationPolicy
          - securityhub:TagResource
          - securityhub:UntagResource
          - securityhub:ListTagsForResource
        delete:
          - securityhub:GetConfigurationPolicy
          - securityhub:DeleteConfigurationPolicy
        list:
          - securityhub:ListConfigurationPolicies
          - securityhub:ListTagsForResource
    DelegatedAdmin:
      type: object
      properties:
        DelegatedAdminIdentifier:
          description: ''
          type: string
          pattern: ^[0-9]{12}/[a-zA-Z0-9-]{1,32}$
        AdminAccountId:
          description: The AWS-account identifier of the account to designate as the Security Hub administrator account.
          type: string
          pattern: ^[0-9]{12}$
        Status:
          description: ''
          type: string
          enum:
            - ENABLED
            - DISABLE_IN_PROGRESS
      required:
        - AdminAccountId
      x-stackql-resource-name: delegated_admin
      description: >-
        The ``AWS::SecurityHub::DelegatedAdmin`` resource designates the delegated ASHlong administrator account for an organization. You must enable the integration between ASH and AOlong before you can designate a delegated ASH administrator. Only the management account for an organization can designate the delegated ASH administrator account. For more information, see [Designating the delegated
        administrator](https://docs.aws.amazon.com/securityhub/latest/userguide/designate-orgs-admin-account.html#designate-admin-instructions) in the *User Guide*.
         To change the delegated administrator account, remove the current delegated administrator account, and then designate the new account.
         To designate multiple delegated administrators in different organizations and AWS-Regions, we recommend using [mappings](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html).
         Tags aren't supported for this resource.
      x-type-name: AWS::SecurityHub::DelegatedAdmin
      x-stackql-primary-identifier:
        - DelegatedAdminIdentifier
      x-create-only-properties:
        - AdminAccountId
      x-read-only-properties:
        - DelegatedAdminIdentifier
        - Status
      x-required-properties:
        - AdminAccountId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - securityhub:EnableOrganizationAdminAccount
          - organizations:DescribeOrganization
          - organizations:EnableAWSServiceAccess
          - organizations:RegisterDelegatedAdministrator
        read:
          - securityhub:ListOrganizationAdminAccounts
          - organizations:DescribeOrganization
        delete:
          - securityhub:DisableOrganizationAdminAccount
          - organizations:DescribeOrganization
        list:
          - securityhub:ListOrganizationAdminAccounts
          - organizations:DescribeOrganization
    Region:
      type: string
      pattern: ^[a-zA-Z0-9-]{1,32}$
    FindingAggregator:
      type: object
      properties:
        FindingAggregatorArn:
          description: ''
          type: string
          pattern: arn:aws\S*:securityhub:\S*
        RegionLinkingMode:
          description: |-
            Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
             The selected option also determines how to use the Regions provided in the Regions list.
             The options are as follows:
              +   ``ALL_REGIONS`` - Aggregates findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
              +   ``ALL_REGIONS_EXCEPT_SPECIFIED`` - Aggregates findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the ``Regions`` parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
              +   ``SPECIFIED_REGIONS`` - Aggregates findings only from the Regions listed in the ``Regions`` parameter. Security Hub does not automatically aggregate findings from new Regions. 
              +   ``NO_REGIONS`` - Aggregates no data because no Regions are selected as linked Regions.
          type: string
          enum:
            - ALL_REGIONS
            - ALL_REGIONS_EXCEPT_SPECIFIED
            - SPECIFIED_REGIONS
        Regions:
          description: |-
            If ``RegionLinkingMode`` is ``ALL_REGIONS_EXCEPT_SPECIFIED``, then this is a space-separated list of Regions that don't replicate and send findings to the home Region.
             If ``RegionLinkingMode`` is ``SPECIFIED_REGIONS``, then this is a space-separated list of Regions that do replicate and send findings to the home Region. 
             An ``InvalidInputException`` error results if you populate this field while ``RegionLinkingMode`` is ``NO_REGIONS``.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/Region'
        FindingAggregationRegion:
          description: ''
          $ref: '#/components/schemas/Region'
      required:
        - RegionLinkingMode
      x-stackql-resource-name: finding_aggregator
      description: >-
        The ``AWS::SecurityHub::FindingAggregator`` resource enables cross-Region aggregation. When cross-Region aggregation is enabled, you can aggregate findings, finding updates, insights, control compliance statuses, and security scores from one or more linked Regions to a single aggregation Region. You can then view and manage all of this data from the aggregation Region. For more details about cross-Region aggregation, see [Cross-Region
        aggregation](https://docs.aws.amazon.com/securityhub/latest/userguide/finding-aggregation.html) in the *User Guide* 
         This resource must be created in the Region that you want to designate as your aggregation Region.
         Cross-Region aggregation is also a prerequisite for using [central configuration](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html) in ASH.
      x-type-name: AWS::SecurityHub::FindingAggregator
      x-stackql-primary-identifier:
        - FindingAggregatorArn
      x-read-only-properties:
        - FindingAggregatorArn
        - FindingAggregationRegion
      x-required-properties:
        - RegionLinkingMode
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - securityhub:CreateFindingAggregator
        read:
          - securityhub:GetFindingAggregator
        update:
          - securityhub:UpdateFindingAggregator
        delete:
          - securityhub:DeleteFindingAggregator
        list:
          - securityhub:ListFindingAggregators
    Hub:
      type: object
      properties:
        ARN:
          description: An ARN is automatically created for the customer.
          type: string
          pattern: ^arn:.*
        EnableDefaultStandards:
          description: Whether to enable the security standards that Security Hub has designated as automatically enabled.
          type: boolean
        ControlFindingGenerator:
          description: This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
          type: string
          pattern: ^(SECURITY_CONTROL|STANDARD_CONTROL)$
        AutoEnableControls:
          description: Whether to automatically enable new controls when they are added to standards that are enabled
          type: boolean
        Tags:
          $ref: '#/components/schemas/Tags'
        SubscribedAt:
          description: The date and time when Security Hub was enabled in the account.
          type: string
      x-stackql-resource-name: hub
      description: |+
        The AWS::SecurityHub::Hub resource represents the implementation of the AWS Security Hub service in your account. One hub resource is created for each Region in which you enable Security Hub.

      x-type-name: AWS::SecurityHub::Hub
      x-stackql-primary-identifier:
        - ARN
      x-write-only-properties:
        - EnableDefaultStandards
      x-read-only-properties:
        - ARN
        - SubscribedAt
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - securityhub:EnableSecurityHub
          - securityhub:UpdateSecurityHubConfiguration
          - securityhub:TagResource
          - securityhub:ListTagsForResource
        read:
          - securityhub:DescribeHub
          - securityhub:ListTagsForResource
        update:
          - securityhub:DescribeHub
          - securityhub:UpdateSecurityHubConfiguration
          - securityhub:TagResource
          - securityhub:UntagResource
          - securityhub:ListTagsForResource
        delete:
          - securityhub:DisableSecurityHub
        list:
          - securityhub:DescribeHub
          - securityhub:ListTagsForResource
    IpFilter:
      description: The IP filter for querying findings.
      properties:
        Cidr:
          description: A finding's CIDR value.
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - Cidr
      type: object
      additionalProperties: false
    KeywordFilter:
      description: A keyword filter for querying findings.
      properties:
        Value:
          description: A value for the keyword.
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - Value
      type: object
      additionalProperties: false
    AwsSecurityFindingFilters:
      description: A collection of filters that are applied to all active findings aggregated by AWS Security Hub.
      type: object
      additionalProperties: false
      properties:
        ProductArn:
          description: The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        AwsAccountId:
          description: The AWS account ID in which a finding is generated.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        AwsAccountName:
          description: The name of the AWS account in which a finding is generated.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Id:
          description: The security findings provider-specific identifier for a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        GeneratorId:
          description: The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Type:
          description: A finding type in the format of namespace/category/classifier that classifies a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Region:
          description: The Region from which the finding was generated.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FirstObservedAt:
          description: An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        LastObservedAt:
          description: An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        CreatedAt:
          description: An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        UpdatedAt:
          description: An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        SeverityLabel:
          description: The label of a finding's severity.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Confidence:
          description: A finding's confidence.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Criticality:
          description: The level of importance assigned to the resources associated with the finding.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Title:
          description: A finding's title.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Description:
          description: A finding's description.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        RecommendationText:
          description: The recommendation of what to do about the issue described in a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        SourceUrl:
          description: A URL that links to a page about the current finding in the security findings provider's solution.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProductFields:
          description: A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
          items:
            $ref: '#/components/schemas/MapFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProductName:
          description: The name of the solution (product) that generates findings.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        CompanyName:
          description: The name of the findings provider (company) that owns the solution (product) that generates findings.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        UserDefinedFields:
          description: A list of name/value string pairs associated with the finding.
          items:
            $ref: '#/components/schemas/MapFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        MalwareName:
          description: The name of the malware that was observed.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        MalwareType:
          description: The type of the malware that was observed.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        MalwarePath:
          description: The filesystem path of the malware that was observed.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        MalwareState:
          description: The state of the malware that was observed.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkDirection:
          description: Indicates the direction of network traffic associated with a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkProtocol:
          description: The protocol of network-related information about a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkSourceIpV4:
          description: The source IPv4 address of network-related information about a finding.
          items:
            $ref: '#/components/schemas/IpFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkSourceIpV6:
          description: The source IPv6 address of network-related information about a finding.
          items:
            $ref: '#/components/schemas/IpFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkSourcePort:
          description: The source port of network-related information about a finding.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkSourceDomain:
          description: The source domain of network-related information about a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkSourceMac:
          description: The source media access control (MAC) address of network-related information about a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkDestinationIpV4:
          description: The destination IPv4 address of network-related information about a finding.
          items:
            $ref: '#/components/schemas/IpFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkDestinationIpV6:
          description: The destination IPv6 address of network-related information about a finding.
          items:
            $ref: '#/components/schemas/IpFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkDestinationPort:
          description: The destination port of network-related information about a finding.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NetworkDestinationDomain:
          description: The destination domain of network-related information about a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProcessName:
          description: The name of the process.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProcessPath:
          description: The path to the process executable.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProcessPid:
          description: The process ID.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProcessParentPid:
          description: The parent process ID.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProcessLaunchedAt:
          description: A timestamp that identifies when the process was launched.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ProcessTerminatedAt:
          description: A timestamp that identifies when the process was terminated.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ThreatIntelIndicatorType:
          description: The type of a threat intelligence indicator.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ThreatIntelIndicatorValue:
          description: The value of a threat intelligence indicator.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ThreatIntelIndicatorCategory:
          description: The category of a threat intelligence indicator.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ThreatIntelIndicatorLastObservedAt:
          description: A timestamp that identifies the last observation of a threat intelligence indicator.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ThreatIntelIndicatorSource:
          description: The source of the threat intelligence.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ThreatIntelIndicatorSourceUrl:
          description: The URL for more details from the source of the threat intelligence.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceType:
          description: Specifies the type of the resource that details are provided for.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceId:
          description: The canonical identifier for the given resource type.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourcePartition:
          description: The canonical AWS partition name that the Region is assigned to.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceRegion:
          description: The canonical AWS external Region name where this resource is located.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceTags:
          description: A list of AWS tags associated with a resource at the time the finding was processed.
          items:
            $ref: '#/components/schemas/MapFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceType:
          description: The instance type of the instance.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceImageId:
          description: The Amazon Machine Image (AMI) ID of the instance.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceIpV4Addresses:
          description: The IPv4 addresses associated with the instance.
          items:
            $ref: '#/components/schemas/IpFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceIpV6Addresses:
          description: The IPv6 addresses associated with the instance.
          items:
            $ref: '#/components/schemas/IpFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceKeyName:
          description: The key name associated with the instance.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceIamInstanceProfileArn:
          description: The IAM profile ARN of the instance.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceVpcId:
          description: The identifier of the VPC that the instance was launched in.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceSubnetId:
          description: The identifier of the subnet that the instance was launched in.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsEc2InstanceLaunchedAt:
          description: The date and time the instance was launched.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsS3BucketOwnerId:
          description: The canonical user ID of the owner of the S3 bucket.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsS3BucketOwnerName:
          description: The display name of the owner of the S3 bucket.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsIamAccessKeyStatus:
          description: The status of the IAM access key related to a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsIamAccessKeyCreatedAt:
          description: The creation date/time of the IAM access key related to a finding.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceContainerName:
          description: The name of the container related to a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceContainerImageId:
          description: The identifier of the image related to a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceContainerImageName:
          description: The name of the image related to a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceContainerLaunchedAt:
          description: A timestamp that identifies when the container was started.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceDetailsOther:
          description: The details of a resource that doesn't have a specific subfield for the resource type defined.
          items:
            $ref: '#/components/schemas/MapFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ComplianceStatus:
          description: Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        VerificationState:
          description: The veracity of a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        WorkflowState:
          description: The workflow state of a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        WorkflowStatus:
          description: The status of the investigation into a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        RecordState:
          description: The updated record state for the finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        RelatedFindingsProductArn:
          description: The ARN of the solution that generated a related finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        RelatedFindingsId:
          description: The solution-generated identifier for a related finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceApplicationArn:
          description: The ARN of the application that is related to a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceApplicationName:
          description: The name of the application that is related to a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NoteText:
          description: The text of a note.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NoteUpdatedAt:
          description: The timestamp of when the note was updated.
          items:
            $ref: '#/components/schemas/DateFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        NoteUpdatedBy:
          description: The principal that created a note.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Sample:
          description: Indicates whether or not sample findings are included in the filter results.
          items:
            $ref: '#/components/schemas/BooleanFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ComplianceAssociatedStandardsId:
          description: The unique identifier of a standard in which a control is enabled.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ComplianceSecurityControlId:
          description: The unique identifier of a control across standards.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ComplianceSecurityControlParametersName:
          description: The name of a security control parameter.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ComplianceSecurityControlParametersValue:
          description: The current value of a security control parameter.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FindingProviderFieldsConfidence:
          description: The finding provider value for the finding confidence.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FindingProviderFieldsCriticality:
          description: The finding provider value for the level of importance assigned to the resources associated with the findings.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FindingProviderFieldsRelatedFindingsId:
          description: The finding identifier of a related finding that is identified by the finding provider.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FindingProviderFieldsRelatedFindingsProductArn:
          description: The ARN of the solution that generated a related finding that is identified by the finding provider.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FindingProviderFieldsSeverityLabel:
          description: The finding provider value for the severity label.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FindingProviderFieldsSeverityOriginal:
          description: The finding provider's original value for the severity.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        FindingProviderFieldsTypes:
          description: One or more finding types that the finding provider assigned to the finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsIamAccessKeyPrincipalName:
          description: The name of the principal that is associated with an IAM access key.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsIamUserUserName:
          description: The name of an IAM user.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        VulnerabilitiesExploitAvailable:
          description: Indicates whether a software vulnerability in your environment has a known exploit.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        VulnerabilitiesFixAvailable:
          description: Indicates whether a vulnerability is fixed in a newer version of the affected software packages.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        Keyword:
          description: A keyword for a finding.
          items:
            $ref: '#/components/schemas/KeywordFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        ResourceAwsIamAccessKeyUserName:
          description: The user associated with the IAM access key related to a finding.
          items:
            $ref: '#/components/schemas/StringFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        SeverityNormalized:
          description: The normalized severity of a finding.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
        SeverityProduct:
          description: The native severity as defined by the security findings provider's solution that generated the finding.
          items:
            $ref: '#/components/schemas/NumberFilter'
          type: array
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
    Insight:
      type: object
      properties:
        InsightArn:
          description: The ARN of a Security Hub insight
          type: string
          pattern: arn:aws\S*:securityhub:\S*
        Name:
          description: The name of a Security Hub insight
          type: string
          minLength: 1
          maxLength: 128
        Filters:
          description: One or more attributes used to filter the findings included in the insight
          $ref: '#/components/schemas/AwsSecurityFindingFilters'
          maxProperties: 10
        GroupByAttribute:
          description: The grouping attribute for the insight's findings
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - Filters
        - Name
        - GroupByAttribute
      x-stackql-resource-name: insight
      description: The AWS::SecurityHub::Insight resource represents the AWS Security Hub Insight in your account. An AWS Security Hub insight is a collection of related findings.
      x-type-name: AWS::SecurityHub::Insight
      x-stackql-primary-identifier:
        - InsightArn
      x-read-only-properties:
        - InsightArn
      x-required-properties:
        - Filters
        - Name
        - GroupByAttribute
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - securityhub:CreateInsight
        read:
          - securityhub:GetInsights
        update:
          - securityhub:UpdateInsight
        delete:
          - securityhub:GetInsights
          - securityhub:DeleteInsight
        list:
          - securityhub:GetInsights
    OrganizationConfiguration:
      type: object
      properties:
        AutoEnable:
          description: Whether to automatically enable Security Hub in new member accounts when they join the organization.
          type: boolean
        AutoEnableStandards:
          description: Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
          type: string
          enum:
            - DEFAULT
            - NONE
        ConfigurationType:
          description: Indicates whether the organization uses local or central configuration.
          type: string
          enum:
            - CENTRAL
            - LOCAL
        Status:
          description: Describes whether central configuration could be enabled as the ConfigurationType for the organization.
          type: string
          enum:
            - PENDING
            - ENABLED
            - FAILED
        StatusMessage:
          description: Provides an explanation if the value of Status is equal to FAILED when ConfigurationType is equal to CENTRAL.
          type: string
        MemberAccountLimitReached:
          description: Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account.
          type: boolean
        OrganizationConfigurationIdentifier:
          description: The identifier of the OrganizationConfiguration being created and assigned as the unique identifier.
          type: string
          pattern: ^[0-9]{12}/[a-zA-Z0-9-]{1,32}/securityhub-organization-configuration$
      required:
        - AutoEnable
      x-stackql-resource-name: organization_configuration
      description: The AWS::SecurityHub::OrganizationConfiguration resource represents the configuration of your organization in Security Hub. Only the Security Hub administrator account can create Organization Configuration resource in each region and can opt-in to Central Configuration only in the aggregation region of FindingAggregator.
      x-type-name: AWS::SecurityHub::OrganizationConfiguration
      x-stackql-primary-identifier:
        - OrganizationConfigurationIdentifier
      x-read-only-properties:
        - OrganizationConfigurationIdentifier
        - Status
        - StatusMessage
        - MemberAccountLimitReached
      x-required-properties:
        - AutoEnable
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - securityhub:UpdateOrganizationConfiguration
          - securityhub:DescribeOrganizationConfiguration
          - organizations:DescribeOrganization
        read:
          - securityhub:DescribeOrganizationConfiguration
        update:
          - securityhub:UpdateOrganizationConfiguration
          - securityhub:DescribeOrganizationConfiguration
          - organizations:DescribeOrganization
        delete:
          - securityhub:UpdateOrganizationConfiguration
          - securityhub:DescribeOrganizationConfiguration
          - securityhub:ListFindingAggregators
          - organizations:DescribeOrganization
        list:
          - securityhub:DescribeOrganizationConfiguration
    PolicyAssociation:
      type: object
      properties:
        ConfigurationPolicyId:
          description: The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
          type: string
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$|^SELF_MANAGED_SECURITY_HUB$
        AssociationStatus:
          description: The current status of the association between the specified target and the configuration
          type: string
          enum:
            - SUCCESS
            - PENDING
            - FAILED
        AssociationType:
          description: Indicates whether the association between the specified target and the configuration was directly applied by the Security Hub delegated administrator or inherited from a parent
          type: string
          enum:
            - APPLIED
            - INHERITED
        AssociationStatusMessage:
          description: An explanation for a FAILED value for AssociationStatus
          type: string
        TargetId:
          description: The identifier of the target account, organizational unit, or the root
          type: string
        TargetType:
          description: Indicates whether the target is an AWS account, organizational unit, or the organization root
          type: string
          enum:
            - ACCOUNT
            - ORGANIZATIONAL_UNIT
            - ROOT
        UpdatedAt:
          description: The date and time, in UTC and ISO 8601 format, that the configuration policy association was last updated
          type: string
        AssociationIdentifier:
          description: A unique identifier to indicates if the target has an association
          type: string
      required:
        - TargetId
        - TargetType
        - ConfigurationPolicyId
      x-stackql-resource-name: policy_association
      description: The AWS::SecurityHub::PolicyAssociation resource represents the AWS Security Hub Central Configuration Policy associations in your Target. Only the AWS Security Hub delegated administrator can create the resouce from the home region.
      x-type-name: AWS::SecurityHub::PolicyAssociation
      x-stackql-primary-identifier:
        - AssociationIdentifier
      x-create-only-properties:
        - TargetId
        - TargetType
      x-read-only-properties:
        - AssociationStatus
        - AssociationType
        - AssociationStatusMessage
        - UpdatedAt
        - AssociationIdentifier
      x-required-properties:
        - TargetId
        - TargetType
        - ConfigurationPolicyId
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - securityhub:StartConfigurationPolicyAssociation
          - securityhub:GetConfigurationPolicyAssociation
        read:
          - securityhub:GetConfigurationPolicyAssociation
          - securityhub:GetConfigurationPolicyAssociation
        update:
          - securityhub:StartConfigurationPolicyAssociation
          - securityhub:GetConfigurationPolicyAssociation
        delete:
          - securityhub:StartConfigurationPolicyDisassociation
          - securityhub:GetConfigurationPolicyAssociation
        list:
          - securityhub:ListConfigurationPolicyAssociations
    ProductSubscription:
      type: object
      properties:
        ProductArn:
          description: The generic ARN of the product being subscribed to
          type: string
          pattern: arn:aws\S*:securityhub:\S*
        ProductSubscriptionArn:
          description: The ARN of the product subscription for the account
          type: string
          pattern: arn:aws\S*:securityhub:\S*
      required:
        - ProductArn
      x-stackql-resource-name: product_subscription
      description: The AWS::SecurityHub::ProductSubscription resource represents a subscription to a service that is allowed to generate findings for your Security Hub account. One product subscription resource is created for each product enabled.
      x-type-name: AWS::SecurityHub::ProductSubscription
      x-stackql-primary-identifier:
        - ProductSubscriptionArn
      x-create-only-properties:
        - ProductArn
      x-read-only-properties:
        - ProductSubscriptionArn
      x-required-properties:
        - ProductArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - securityhub:EnableImportFindingsForProduct
        read:
          - securityhub:ListEnabledProductsForImport
        delete:
          - securityhub:ListEnabledProductsForImport
          - securityhub:DisableImportFindingsForProduct
        list:
          - securityhub:ListEnabledProductsForImport
    NonEmptyStringList:
      items:
        $ref: '#/components/schemas/NonEmptyString'
      type: array
    IntegerList:
      items:
        type: integer
      type: array
    Parameters:
      type: object
      x-patternProperties:
        .*\S.*:
          $ref: '#/components/schemas/ParameterConfiguration'
      additionalProperties: false
    SecurityControl:
      type: object
      properties:
        SecurityControlId:
          description: The unique identifier of a security control across standards. Values for this field typically consist of an AWS service name and a number, such as APIGateway.3.
          $ref: '#/components/schemas/NonEmptyString'
        SecurityControlArn:
          description: The Amazon Resource Name (ARN) for a security control across standards, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`. This parameter doesn't mention a specific standard.
          $ref: '#/components/schemas/NonEmptyString'
        LastUpdateReason:
          description: The most recent reason for updating the customizable properties of a security control. This differs from the UpdateReason field of the BatchUpdateStandardsControlAssociations API, which tracks the reason for updating the enablement status of a control. This field accepts alphanumeric characters in addition to white spaces, dashes, and underscores.
          type: string
          pattern: "^([^\0-\x7F]|[-_ a-zA-Z0-9])+$"
        Parameters:
          description: An object that identifies the name of a control parameter, its current value, and whether it has been customized.
          $ref: '#/components/schemas/Parameters'
      required:
        - Parameters
      x-stackql-resource-name: security_control
      description: A security control in Security Hub describes a security best practice related to a specific resource.
      x-type-name: AWS::SecurityHub::SecurityControl
      x-stackql-primary-identifier:
        - SecurityControlId
      x-stackql-additional-identifiers:
        - - SecurityControlArn
      x-create-only-properties:
        - SecurityControlId
      x-required-properties:
        - Parameters
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - securityhub:BatchGetSecurityControls
          - securityhub:DescribeStandardsControls
          - securityhub:UpdateSecurityControl
          - securityhub:UpdateStandardsControl
        read:
          - securityhub:BatchGetSecurityControls
          - securityhub:DescribeStandardsControls
        update:
          - securityhub:BatchGetSecurityControls
          - securityhub:DescribeStandardsControls
          - securityhub:UpdateSecurityControl
          - securityhub:UpdateStandardsControl
        delete:
          - securityhub:BatchGetSecurityControls
          - securityhub:DescribeStandardsControls
          - securityhub:UpdateSecurityControl
          - securityhub:UpdateStandardsControl
        list:
          - securityhub:BatchGetSecurityControls
          - securityhub:DescribeStandardsControls
          - securityhub:ListSecurityControlDefinitions
    StandardsControl:
      description: Provides details about an individual security control. For a list of ASH controls, see [controls reference](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-controls-reference.html) in the *User Guide*.
      type: object
      properties:
        StandardsControlArn:
          type: string
          description: The Amazon Resource Name (ARN) of the control.
          pattern: arn:aws\S*:securityhub:\S*
        Reason:
          type: string
          description: A user-defined reason for changing a control's enablement status in a specified standard. If you are disabling a control, then this property is required.
      required:
        - StandardsControlArn
      additionalProperties: false
    Standard:
      type: object
      properties:
        StandardsSubscriptionArn:
          description: ''
          type: string
          pattern: arn:aws\S*:securityhub:\S*
        StandardsArn:
          description: The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
          type: string
          pattern: arn:aws\S*:securityhub:\S
        DisabledStandardsControls:
          description: |-
            Specifies which controls are to be disabled in a standard. 
              *Maximum*: ``100``
          type: array
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/StandardsControl'
          x-insertionOrder: true
          uniqueItems: true
      required:
        - StandardsArn
      x-stackql-resource-name: standard
      description: |-
        The ``AWS::SecurityHub::Standard`` resource specifies the enablement of a security standard. The standard is identified by the ``StandardsArn`` property. To view a list of ASH standards and their Amazon Resource Names (ARNs), use the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
         You must create a separate ``AWS::SecurityHub::Standard`` resource for each standard that you want to enable.
         For more information about ASH standards, see [standards reference](https://docs.aws.amazon.com/securityhub/latest/userguide/standards-reference.html) in the *User Guide*.
      x-type-name: AWS::SecurityHub::Standard
      x-stackql-primary-identifier:
        - StandardsSubscriptionArn
      x-stackql-additional-identifiers:
        - - StandardsArn
      x-create-only-properties:
        - StandardsArn
      x-read-only-properties:
        - StandardsSubscriptionArn
      x-required-properties:
        - StandardsArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - securityhub:GetEnabledStandards
          - securityhub:BatchEnableStandards
          - securityhub:UpdateStandardsControl
        read:
          - securityhub:GetEnabledStandards
          - securityhub:DescribeStandardsControls
        update:
          - securityhub:GetEnabledStandards
          - securityhub:UpdateStandardsControl
        delete:
          - securityhub:GetEnabledStandards
          - securityhub:BatchDisableStandards
        list:
          - securityhub:GetEnabledStandards
    CreateAutomationRuleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            RuleArn:
              description: ''
              type: string
              pattern: arn:aws\S*:securityhub:\S*
            RuleStatus:
              description: Whether the rule is active after it is created. If this parameter is equal to ``ENABLED``, ASH applies the rule to findings and finding updates after the rule is created.
              type: string
              enum:
                - ENABLED
                - DISABLED
            RuleOrder:
              description: An integer ranging from 1 to 1000 that represents the order in which the rule action is applied to findings. Security Hub applies rules with lower values for this parameter first.
              type: integer
              minimum: 1
              maximum: 1000
            Description:
              description: A description of the rule.
              type: string
              minLength: 1
              maxLength: 1024
            RuleName:
              description: The name of the rule.
              type: string
              minLength: 1
              maxLength: 256
            CreatedAt:
              description: ''
              $ref: '#/components/schemas/ISO8601DateString'
            UpdatedAt:
              description: ''
              $ref: '#/components/schemas/ISO8601DateString'
            CreatedBy:
              description: ''
              type: string
              minLength: 1
              maxLength: 256
            IsTerminal:
              description: Specifies whether a rule is the last to be applied with respect to a finding that matches the rule criteria. This is useful when a finding matches the criteria for multiple rules, and each rule has different actions. If a rule is terminal, Security Hub applies the rule action to a finding that matches the rule criteria and doesn't evaluate other rules for the finding. By default, a rule isn't terminal.
              type: boolean
            Actions:
              type: array
              description: One or more actions to update finding fields if a finding matches the conditions specified in ``Criteria``.
              items:
                $ref: '#/components/schemas/AutomationRulesAction'
              minItems: 1
              maxItems: 1
            Criteria:
              description: A set of [Security Finding Format (ASFF)](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html) finding field attributes and corresponding expected values that ASH uses to filter findings. If a rule is enabled and a finding matches the criteria specified in this parameter, ASH applies the rule action to the finding.
              $ref: '#/components/schemas/AutomationRulesFindingFilters'
            Tags:
              description: User-defined tags associated with an automation rule.
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateAutomationRuleRequest
      type: object
      required: []
    CreateConfigurationPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the configuration policy.
              type: string
              pattern: ^arn:aws\S*:securityhub:[a-z0-9-]+:[0-9]{12}:configuration-policy/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            Name:
              description: The name of the configuration policy.
              type: string
              minLength: 1
              maxLength: 128
            Description:
              description: The description of the configuration policy.
              type: string
              minLength: 0
              maxLength: 512
            ConfigurationPolicy:
              $ref: '#/components/schemas/Policy'
            Id:
              description: The universally unique identifier (UUID) of the configuration policy.
              type: string
              pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            CreatedAt:
              description: The date and time, in UTC and ISO 8601 format.
              type: string
            UpdatedAt:
              description: The date and time, in UTC and ISO 8601 format.
              type: string
            ServiceEnabled:
              type: boolean
              description: Indicates whether the service that the configuration policy applies to is enabled in the policy.
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateConfigurationPolicyRequest
      type: object
      required: []
    CreateDelegatedAdminRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DelegatedAdminIdentifier:
              description: ''
              type: string
              pattern: ^[0-9]{12}/[a-zA-Z0-9-]{1,32}$
            AdminAccountId:
              description: The AWS-account identifier of the account to designate as the Security Hub administrator account.
              type: string
              pattern: ^[0-9]{12}$
            Status:
              description: ''
              type: string
              enum:
                - ENABLED
                - DISABLE_IN_PROGRESS
          x-stackQL-stringOnly: true
      x-title: CreateDelegatedAdminRequest
      type: object
      required: []
    CreateFindingAggregatorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FindingAggregatorArn:
              description: ''
              type: string
              pattern: arn:aws\S*:securityhub:\S*
            RegionLinkingMode:
              description: |-
                Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
                 The selected option also determines how to use the Regions provided in the Regions list.
                 The options are as follows:
                  +   ``ALL_REGIONS`` - Aggregates findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
                  +   ``ALL_REGIONS_EXCEPT_SPECIFIED`` - Aggregates findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the ``Regions`` parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. 
                  +   ``SPECIFIED_REGIONS`` - Aggregates findings only from the Regions listed in the ``Regions`` parameter. Security Hub does not automatically aggregate findings from new Regions. 
                  +   ``NO_REGIONS`` - Aggregates no data because no Regions are selected as linked Regions.
              type: string
              enum:
                - ALL_REGIONS
                - ALL_REGIONS_EXCEPT_SPECIFIED
                - SPECIFIED_REGIONS
            Regions:
              description: |-
                If ``RegionLinkingMode`` is ``ALL_REGIONS_EXCEPT_SPECIFIED``, then this is a space-separated list of Regions that don't replicate and send findings to the home Region.
                 If ``RegionLinkingMode`` is ``SPECIFIED_REGIONS``, then this is a space-separated list of Regions that do replicate and send findings to the home Region. 
                 An ``InvalidInputException`` error results if you populate this field while ``RegionLinkingMode`` is ``NO_REGIONS``.
              type: array
              x-insertionOrder: false
              uniqueItems: true
              minItems: 1
              maxItems: 50
              items:
                $ref: '#/components/schemas/Region'
            FindingAggregationRegion:
              description: ''
              $ref: '#/components/schemas/Region'
          x-stackQL-stringOnly: true
      x-title: CreateFindingAggregatorRequest
      type: object
      required: []
    CreateHubRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ARN:
              description: An ARN is automatically created for the customer.
              type: string
              pattern: ^arn:.*
            EnableDefaultStandards:
              description: Whether to enable the security standards that Security Hub has designated as automatically enabled.
              type: boolean
            ControlFindingGenerator:
              description: This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.
              type: string
              pattern: ^(SECURITY_CONTROL|STANDARD_CONTROL)$
            AutoEnableControls:
              description: Whether to automatically enable new controls when they are added to standards that are enabled
              type: boolean
            Tags:
              $ref: '#/components/schemas/Tags'
            SubscribedAt:
              description: The date and time when Security Hub was enabled in the account.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateHubRequest
      type: object
      required: []
    CreateInsightRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InsightArn:
              description: The ARN of a Security Hub insight
              type: string
              pattern: arn:aws\S*:securityhub:\S*
            Name:
              description: The name of a Security Hub insight
              type: string
              minLength: 1
              maxLength: 128
            Filters:
              description: One or more attributes used to filter the findings included in the insight
              $ref: '#/components/schemas/AwsSecurityFindingFilters'
              maxProperties: 10
            GroupByAttribute:
              description: The grouping attribute for the insight's findings
              $ref: '#/components/schemas/NonEmptyString'
          x-stackQL-stringOnly: true
      x-title: CreateInsightRequest
      type: object
      required: []
    CreateOrganizationConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AutoEnable:
              description: Whether to automatically enable Security Hub in new member accounts when they join the organization.
              type: boolean
            AutoEnableStandards:
              description: Whether to automatically enable Security Hub default standards in new member accounts when they join the organization.
              type: string
              enum:
                - DEFAULT
                - NONE
            ConfigurationType:
              description: Indicates whether the organization uses local or central configuration.
              type: string
              enum:
                - CENTRAL
                - LOCAL
            Status:
              description: Describes whether central configuration could be enabled as the ConfigurationType for the organization.
              type: string
              enum:
                - PENDING
                - ENABLED
                - FAILED
            StatusMessage:
              description: Provides an explanation if the value of Status is equal to FAILED when ConfigurationType is equal to CENTRAL.
              type: string
            MemberAccountLimitReached:
              description: Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account.
              type: boolean
            OrganizationConfigurationIdentifier:
              description: The identifier of the OrganizationConfiguration being created and assigned as the unique identifier.
              type: string
              pattern: ^[0-9]{12}/[a-zA-Z0-9-]{1,32}/securityhub-organization-configuration$
          x-stackQL-stringOnly: true
      x-title: CreateOrganizationConfigurationRequest
      type: object
      required: []
    CreatePolicyAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ConfigurationPolicyId:
              description: The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
              type: string
              pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$|^SELF_MANAGED_SECURITY_HUB$
            AssociationStatus:
              description: The current status of the association between the specified target and the configuration
              type: string
              enum:
                - SUCCESS
                - PENDING
                - FAILED
            AssociationType:
              description: Indicates whether the association between the specified target and the configuration was directly applied by the Security Hub delegated administrator or inherited from a parent
              type: string
              enum:
                - APPLIED
                - INHERITED
            AssociationStatusMessage:
              description: An explanation for a FAILED value for AssociationStatus
              type: string
            TargetId:
              description: The identifier of the target account, organizational unit, or the root
              type: string
            TargetType:
              description: Indicates whether the target is an AWS account, organizational unit, or the organization root
              type: string
              enum:
                - ACCOUNT
                - ORGANIZATIONAL_UNIT
                - ROOT
            UpdatedAt:
              description: The date and time, in UTC and ISO 8601 format, that the configuration policy association was last updated
              type: string
            AssociationIdentifier:
              description: A unique identifier to indicates if the target has an association
              type: string
          x-stackQL-stringOnly: true
      x-title: CreatePolicyAssociationRequest
      type: object
      required: []
    CreateProductSubscriptionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ProductArn:
              description: The generic ARN of the product being subscribed to
              type: string
              pattern: arn:aws\S*:securityhub:\S*
            ProductSubscriptionArn:
              description: The ARN of the product subscription for the account
              type: string
              pattern: arn:aws\S*:securityhub:\S*
          x-stackQL-stringOnly: true
      x-title: CreateProductSubscriptionRequest
      type: object
      required: []
    CreateSecurityControlRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            SecurityControlId:
              description: The unique identifier of a security control across standards. Values for this field typically consist of an AWS service name and a number, such as APIGateway.3.
              $ref: '#/components/schemas/NonEmptyString'
            SecurityControlArn:
              description: The Amazon Resource Name (ARN) for a security control across standards, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`. This parameter doesn't mention a specific standard.
              $ref: '#/components/schemas/NonEmptyString'
            LastUpdateReason:
              description: The most recent reason for updating the customizable properties of a security control. This differs from the UpdateReason field of the BatchUpdateStandardsControlAssociations API, which tracks the reason for updating the enablement status of a control. This field accepts alphanumeric characters in addition to white spaces, dashes, and underscores.
              type: string
              pattern: "^([^\0-\x7F]|[-_ a-zA-Z0-9])+$"
            Parameters:
              description: An object that identifies the name of a control parameter, its current value, and whether it has been customized.
              $ref: '#/components/schemas/Parameters'
          x-stackQL-stringOnly: true
      x-title: CreateSecurityControlRequest
      type: object
      required: []
    CreateStandardRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            StandardsSubscriptionArn:
              description: ''
              type: string
              pattern: arn:aws\S*:securityhub:\S*
            StandardsArn:
              description: The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
              type: string
              pattern: arn:aws\S*:securityhub:\S
            DisabledStandardsControls:
              description: |-
                Specifies which controls are to be disabled in a standard. 
                  *Maximum*: ``100``
              type: array
              minItems: 0
              maxItems: 100
              items:
                $ref: '#/components/schemas/StandardsControl'
              x-insertionOrder: true
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateStandardRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    automation_rules:
      name: automation_rules
      id: aws.securityhub.automation_rules
      x-cfn-schema-name: AutomationRule
      x-cfn-type-name: AWS::SecurityHub::AutomationRule
      x-identifiers:
        - RuleArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AutomationRule&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::AutomationRule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::AutomationRule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::AutomationRule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/automation_rules/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/automation_rules/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/automation_rules/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RuleArn') as rule_arn,
              JSON_EXTRACT(Properties, '$.RuleStatus') as rule_status,
              JSON_EXTRACT(Properties, '$.RuleOrder') as rule_order,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RuleName') as rule_name,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.CreatedBy') as created_by,
              JSON_EXTRACT(Properties, '$.IsTerminal') as is_terminal,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.Criteria') as criteria,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::AutomationRule'
              AND data__Identifier = '<RuleArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.RuleArn') as rule_arn,
                JSON_EXTRACT(detail.Properties, '$.RuleStatus') as rule_status,
                JSON_EXTRACT(detail.Properties, '$.RuleOrder') as rule_order,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.RuleName') as rule_name,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.CreatedBy') as created_by,
                JSON_EXTRACT(detail.Properties, '$.IsTerminal') as is_terminal,
                JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
                JSON_EXTRACT(detail.Properties, '$.Criteria') as criteria,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::AutomationRule'
                AND detail.data__TypeName = 'AWS::SecurityHub::AutomationRule'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'RuleArn') as rule_arn,
                  json_extract_path_text(Properties, 'RuleStatus') as rule_status,
                  json_extract_path_text(Properties, 'RuleOrder') as rule_order,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'RuleName') as rule_name,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'CreatedBy') as created_by,
                  json_extract_path_text(Properties, 'IsTerminal') as is_terminal,
                  json_extract_path_text(Properties, 'Actions') as actions,
                  json_extract_path_text(Properties, 'Criteria') as criteria,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::AutomationRule'
                  AND data__Identifier = '<RuleArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'RuleArn') as rule_arn,
                    json_extract_path_text(detail.Properties, 'RuleStatus') as rule_status,
                    json_extract_path_text(detail.Properties, 'RuleOrder') as rule_order,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'RuleName') as rule_name,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'CreatedBy') as created_by,
                    json_extract_path_text(detail.Properties, 'IsTerminal') as is_terminal,
                    json_extract_path_text(detail.Properties, 'Actions') as actions,
                    json_extract_path_text(detail.Properties, 'Criteria') as criteria,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::AutomationRule'
                    AND detail.data__TypeName = 'AWS::SecurityHub::AutomationRule'
                    AND listing.region = 'us-east-1'
    automation_rules_list_only:
      name: automation_rules_list_only
      id: aws.securityhub.automation_rules_list_only
      x-cfn-schema-name: AutomationRule
      x-cfn-type-name: AWS::SecurityHub::AutomationRule
      x-identifiers:
        - RuleArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RuleArn') as rule_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::AutomationRule'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RuleArn') as rule_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::AutomationRule'
                AND region = 'us-east-1'
    automation_rule_tags:
      name: automation_rule_tags
      id: aws.securityhub.automation_rule_tags
      x-cfn-schema-name: AutomationRule
      x-cfn-type-name: AWS::SecurityHub::AutomationRule
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.RuleArn') as rule_arn,
              JSON_EXTRACT(detail.Properties, '$.RuleStatus') as rule_status,
              JSON_EXTRACT(detail.Properties, '$.RuleOrder') as rule_order,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.RuleName') as rule_name,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(detail.Properties, '$.CreatedBy') as created_by,
              JSON_EXTRACT(detail.Properties, '$.IsTerminal') as is_terminal,
              JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
              JSON_EXTRACT(detail.Properties, '$.Criteria') as criteria
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SecurityHub::AutomationRule'
              AND detail.data__TypeName = 'AWS::SecurityHub::AutomationRule'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'RuleArn') as rule_arn,
                json_extract_path_text(detail.Properties, 'RuleStatus') as rule_status,
                json_extract_path_text(detail.Properties, 'RuleOrder') as rule_order,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'RuleName') as rule_name,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(detail.Properties, 'CreatedBy') as created_by,
                json_extract_path_text(detail.Properties, 'IsTerminal') as is_terminal,
                json_extract_path_text(detail.Properties, 'Actions') as actions,
                json_extract_path_text(detail.Properties, 'Criteria') as criteria
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SecurityHub::AutomationRule'
                AND detail.data__TypeName = 'AWS::SecurityHub::AutomationRule'
                AND listing.region = 'us-east-1'
    configuration_policies:
      name: configuration_policies
      id: aws.securityhub.configuration_policies
      x-cfn-schema-name: ConfigurationPolicy
      x-cfn-type-name: AWS::SecurityHub::ConfigurationPolicy
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ConfigurationPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::ConfigurationPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::ConfigurationPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::ConfigurationPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/configuration_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/configuration_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/configuration_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ConfigurationPolicy') as configuration_policy,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.ServiceEnabled') as service_enabled,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ConfigurationPolicy') as configuration_policy,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.ServiceEnabled') as service_enabled,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                AND detail.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ConfigurationPolicy') as configuration_policy,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'ServiceEnabled') as service_enabled,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ConfigurationPolicy') as configuration_policy,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'ServiceEnabled') as service_enabled,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                    AND detail.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                    AND listing.region = 'us-east-1'
    configuration_policies_list_only:
      name: configuration_policies_list_only
      id: aws.securityhub.configuration_policies_list_only
      x-cfn-schema-name: ConfigurationPolicy
      x-cfn-type-name: AWS::SecurityHub::ConfigurationPolicy
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                AND region = 'us-east-1'
    configuration_policy_tags:
      name: configuration_policy_tags
      id: aws.securityhub.configuration_policy_tags
      x-cfn-schema-name: ConfigurationPolicy
      x-cfn-type-name: AWS::SecurityHub::ConfigurationPolicy
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ConfigurationPolicy') as configuration_policy,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(detail.Properties, '$.ServiceEnabled') as service_enabled
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
              AND detail.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ConfigurationPolicy') as configuration_policy,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(detail.Properties, 'ServiceEnabled') as service_enabled
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                AND detail.data__TypeName = 'AWS::SecurityHub::ConfigurationPolicy'
                AND listing.region = 'us-east-1'
    delegated_admins:
      name: delegated_admins
      id: aws.securityhub.delegated_admins
      x-cfn-schema-name: DelegatedAdmin
      x-cfn-type-name: AWS::SecurityHub::DelegatedAdmin
      x-identifiers:
        - DelegatedAdminIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DelegatedAdmin&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::DelegatedAdmin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::DelegatedAdmin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/delegated_admins/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/delegated_admins/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DelegatedAdminIdentifier') as delegated_admin_identifier,
              JSON_EXTRACT(Properties, '$.AdminAccountId') as admin_account_id,
              JSON_EXTRACT(Properties, '$.Status') as status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
              AND data__Identifier = '<DelegatedAdminIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DelegatedAdminIdentifier') as delegated_admin_identifier,
                JSON_EXTRACT(detail.Properties, '$.AdminAccountId') as admin_account_id,
                JSON_EXTRACT(detail.Properties, '$.Status') as status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
                AND detail.data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DelegatedAdminIdentifier') as delegated_admin_identifier,
                  json_extract_path_text(Properties, 'AdminAccountId') as admin_account_id,
                  json_extract_path_text(Properties, 'Status') as status
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
                  AND data__Identifier = '<DelegatedAdminIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DelegatedAdminIdentifier') as delegated_admin_identifier,
                    json_extract_path_text(detail.Properties, 'AdminAccountId') as admin_account_id,
                    json_extract_path_text(detail.Properties, 'Status') as status
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
                    AND detail.data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
                    AND listing.region = 'us-east-1'
    delegated_admins_list_only:
      name: delegated_admins_list_only
      id: aws.securityhub.delegated_admins_list_only
      x-cfn-schema-name: DelegatedAdmin
      x-cfn-type-name: AWS::SecurityHub::DelegatedAdmin
      x-identifiers:
        - DelegatedAdminIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DelegatedAdminIdentifier') as delegated_admin_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DelegatedAdminIdentifier') as delegated_admin_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::DelegatedAdmin'
                AND region = 'us-east-1'
    finding_aggregators:
      name: finding_aggregators
      id: aws.securityhub.finding_aggregators
      x-cfn-schema-name: FindingAggregator
      x-cfn-type-name: AWS::SecurityHub::FindingAggregator
      x-identifiers:
        - FindingAggregatorArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__FindingAggregator&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::FindingAggregator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::FindingAggregator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::FindingAggregator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/finding_aggregators/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/finding_aggregators/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/finding_aggregators/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FindingAggregatorArn') as finding_aggregator_arn,
              JSON_EXTRACT(Properties, '$.RegionLinkingMode') as region_linking_mode,
              JSON_EXTRACT(Properties, '$.Regions') as regions,
              JSON_EXTRACT(Properties, '$.FindingAggregationRegion') as finding_aggregation_region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::FindingAggregator'
              AND data__Identifier = '<FindingAggregatorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FindingAggregatorArn') as finding_aggregator_arn,
                JSON_EXTRACT(detail.Properties, '$.RegionLinkingMode') as region_linking_mode,
                JSON_EXTRACT(detail.Properties, '$.Regions') as regions,
                JSON_EXTRACT(detail.Properties, '$.FindingAggregationRegion') as finding_aggregation_region
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::FindingAggregator'
                AND detail.data__TypeName = 'AWS::SecurityHub::FindingAggregator'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FindingAggregatorArn') as finding_aggregator_arn,
                  json_extract_path_text(Properties, 'RegionLinkingMode') as region_linking_mode,
                  json_extract_path_text(Properties, 'Regions') as regions,
                  json_extract_path_text(Properties, 'FindingAggregationRegion') as finding_aggregation_region
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::FindingAggregator'
                  AND data__Identifier = '<FindingAggregatorArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FindingAggregatorArn') as finding_aggregator_arn,
                    json_extract_path_text(detail.Properties, 'RegionLinkingMode') as region_linking_mode,
                    json_extract_path_text(detail.Properties, 'Regions') as regions,
                    json_extract_path_text(detail.Properties, 'FindingAggregationRegion') as finding_aggregation_region
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::FindingAggregator'
                    AND detail.data__TypeName = 'AWS::SecurityHub::FindingAggregator'
                    AND listing.region = 'us-east-1'
    finding_aggregators_list_only:
      name: finding_aggregators_list_only
      id: aws.securityhub.finding_aggregators_list_only
      x-cfn-schema-name: FindingAggregator
      x-cfn-type-name: AWS::SecurityHub::FindingAggregator
      x-identifiers:
        - FindingAggregatorArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FindingAggregatorArn') as finding_aggregator_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::FindingAggregator'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FindingAggregatorArn') as finding_aggregator_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::FindingAggregator'
                AND region = 'us-east-1'
    hubs:
      name: hubs
      id: aws.securityhub.hubs
      x-cfn-schema-name: Hub
      x-cfn-type-name: AWS::SecurityHub::Hub
      x-identifiers:
        - ARN
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Hub&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Hub"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Hub"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Hub"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/hubs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ARN') as arn,
              JSON_EXTRACT(Properties, '$.EnableDefaultStandards') as enable_default_standards,
              JSON_EXTRACT(Properties, '$.ControlFindingGenerator') as control_finding_generator,
              JSON_EXTRACT(Properties, '$.AutoEnableControls') as auto_enable_controls,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.SubscribedAt') as subscribed_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::Hub'
              AND data__Identifier = '<ARN>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ARN') as arn,
                JSON_EXTRACT(detail.Properties, '$.EnableDefaultStandards') as enable_default_standards,
                JSON_EXTRACT(detail.Properties, '$.ControlFindingGenerator') as control_finding_generator,
                JSON_EXTRACT(detail.Properties, '$.AutoEnableControls') as auto_enable_controls,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.SubscribedAt') as subscribed_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::Hub'
                AND detail.data__TypeName = 'AWS::SecurityHub::Hub'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ARN') as arn,
                  json_extract_path_text(Properties, 'EnableDefaultStandards') as enable_default_standards,
                  json_extract_path_text(Properties, 'ControlFindingGenerator') as control_finding_generator,
                  json_extract_path_text(Properties, 'AutoEnableControls') as auto_enable_controls,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'SubscribedAt') as subscribed_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::Hub'
                  AND data__Identifier = '<ARN>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ARN') as arn,
                    json_extract_path_text(detail.Properties, 'EnableDefaultStandards') as enable_default_standards,
                    json_extract_path_text(detail.Properties, 'ControlFindingGenerator') as control_finding_generator,
                    json_extract_path_text(detail.Properties, 'AutoEnableControls') as auto_enable_controls,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'SubscribedAt') as subscribed_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::Hub'
                    AND detail.data__TypeName = 'AWS::SecurityHub::Hub'
                    AND listing.region = 'us-east-1'
    hubs_list_only:
      name: hubs_list_only
      id: aws.securityhub.hubs_list_only
      x-cfn-schema-name: Hub
      x-cfn-type-name: AWS::SecurityHub::Hub
      x-identifiers:
        - ARN
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ARN') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::Hub'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ARN') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::Hub'
                AND region = 'us-east-1'
    hub_tags:
      name: hub_tags
      id: aws.securityhub.hub_tags
      x-cfn-schema-name: Hub
      x-cfn-type-name: AWS::SecurityHub::Hub
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ARN') as arn,
              JSON_EXTRACT(detail.Properties, '$.EnableDefaultStandards') as enable_default_standards,
              JSON_EXTRACT(detail.Properties, '$.ControlFindingGenerator') as control_finding_generator,
              JSON_EXTRACT(detail.Properties, '$.AutoEnableControls') as auto_enable_controls,
              JSON_EXTRACT(detail.Properties, '$.SubscribedAt') as subscribed_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SecurityHub::Hub'
              AND detail.data__TypeName = 'AWS::SecurityHub::Hub'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ARN') as arn,
                json_extract_path_text(detail.Properties, 'EnableDefaultStandards') as enable_default_standards,
                json_extract_path_text(detail.Properties, 'ControlFindingGenerator') as control_finding_generator,
                json_extract_path_text(detail.Properties, 'AutoEnableControls') as auto_enable_controls,
                json_extract_path_text(detail.Properties, 'SubscribedAt') as subscribed_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SecurityHub::Hub'
                AND detail.data__TypeName = 'AWS::SecurityHub::Hub'
                AND listing.region = 'us-east-1'
    insights:
      name: insights
      id: aws.securityhub.insights
      x-cfn-schema-name: Insight
      x-cfn-type-name: AWS::SecurityHub::Insight
      x-identifiers:
        - InsightArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Insight&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Insight"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Insight"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Insight"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/insights/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/insights/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/insights/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InsightArn') as insight_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Filters') as filters,
              JSON_EXTRACT(Properties, '$.GroupByAttribute') as group_by_attribute
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::Insight'
              AND data__Identifier = '<InsightArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InsightArn') as insight_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Filters') as filters,
                JSON_EXTRACT(detail.Properties, '$.GroupByAttribute') as group_by_attribute
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::Insight'
                AND detail.data__TypeName = 'AWS::SecurityHub::Insight'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InsightArn') as insight_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Filters') as filters,
                  json_extract_path_text(Properties, 'GroupByAttribute') as group_by_attribute
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::Insight'
                  AND data__Identifier = '<InsightArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InsightArn') as insight_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Filters') as filters,
                    json_extract_path_text(detail.Properties, 'GroupByAttribute') as group_by_attribute
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::Insight'
                    AND detail.data__TypeName = 'AWS::SecurityHub::Insight'
                    AND listing.region = 'us-east-1'
    insights_list_only:
      name: insights_list_only
      id: aws.securityhub.insights_list_only
      x-cfn-schema-name: Insight
      x-cfn-type-name: AWS::SecurityHub::Insight
      x-identifiers:
        - InsightArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InsightArn') as insight_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::Insight'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InsightArn') as insight_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::Insight'
                AND region = 'us-east-1'
    organization_configurations:
      name: organization_configurations
      id: aws.securityhub.organization_configurations
      x-cfn-schema-name: OrganizationConfiguration
      x-cfn-type-name: AWS::SecurityHub::OrganizationConfiguration
      x-identifiers:
        - OrganizationConfigurationIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__OrganizationConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::OrganizationConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::OrganizationConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::OrganizationConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/organization_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/organization_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/organization_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AutoEnable') as auto_enable,
              JSON_EXTRACT(Properties, '$.AutoEnableStandards') as auto_enable_standards,
              JSON_EXTRACT(Properties, '$.ConfigurationType') as configuration_type,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.MemberAccountLimitReached') as member_account_limit_reached,
              JSON_EXTRACT(Properties, '$.OrganizationConfigurationIdentifier') as organization_configuration_identifier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
              AND data__Identifier = '<OrganizationConfigurationIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AutoEnable') as auto_enable,
                JSON_EXTRACT(detail.Properties, '$.AutoEnableStandards') as auto_enable_standards,
                JSON_EXTRACT(detail.Properties, '$.ConfigurationType') as configuration_type,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.StatusMessage') as status_message,
                JSON_EXTRACT(detail.Properties, '$.MemberAccountLimitReached') as member_account_limit_reached,
                JSON_EXTRACT(detail.Properties, '$.OrganizationConfigurationIdentifier') as organization_configuration_identifier
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
                AND detail.data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AutoEnable') as auto_enable,
                  json_extract_path_text(Properties, 'AutoEnableStandards') as auto_enable_standards,
                  json_extract_path_text(Properties, 'ConfigurationType') as configuration_type,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'StatusMessage') as status_message,
                  json_extract_path_text(Properties, 'MemberAccountLimitReached') as member_account_limit_reached,
                  json_extract_path_text(Properties, 'OrganizationConfigurationIdentifier') as organization_configuration_identifier
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
                  AND data__Identifier = '<OrganizationConfigurationIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AutoEnable') as auto_enable,
                    json_extract_path_text(detail.Properties, 'AutoEnableStandards') as auto_enable_standards,
                    json_extract_path_text(detail.Properties, 'ConfigurationType') as configuration_type,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'StatusMessage') as status_message,
                    json_extract_path_text(detail.Properties, 'MemberAccountLimitReached') as member_account_limit_reached,
                    json_extract_path_text(detail.Properties, 'OrganizationConfigurationIdentifier') as organization_configuration_identifier
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
                    AND detail.data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
                    AND listing.region = 'us-east-1'
    organization_configurations_list_only:
      name: organization_configurations_list_only
      id: aws.securityhub.organization_configurations_list_only
      x-cfn-schema-name: OrganizationConfiguration
      x-cfn-type-name: AWS::SecurityHub::OrganizationConfiguration
      x-identifiers:
        - OrganizationConfigurationIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.OrganizationConfigurationIdentifier') as organization_configuration_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'OrganizationConfigurationIdentifier') as organization_configuration_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::OrganizationConfiguration'
                AND region = 'us-east-1'
    policy_associations:
      name: policy_associations
      id: aws.securityhub.policy_associations
      x-cfn-schema-name: PolicyAssociation
      x-cfn-type-name: AWS::SecurityHub::PolicyAssociation
      x-identifiers:
        - AssociationIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PolicyAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::PolicyAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::PolicyAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::PolicyAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/policy_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/policy_associations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/policy_associations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ConfigurationPolicyId') as configuration_policy_id,
              JSON_EXTRACT(Properties, '$.AssociationStatus') as association_status,
              JSON_EXTRACT(Properties, '$.AssociationType') as association_type,
              JSON_EXTRACT(Properties, '$.AssociationStatusMessage') as association_status_message,
              JSON_EXTRACT(Properties, '$.TargetId') as target_id,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.AssociationIdentifier') as association_identifier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
              AND data__Identifier = '<AssociationIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ConfigurationPolicyId') as configuration_policy_id,
                JSON_EXTRACT(detail.Properties, '$.AssociationStatus') as association_status,
                JSON_EXTRACT(detail.Properties, '$.AssociationType') as association_type,
                JSON_EXTRACT(detail.Properties, '$.AssociationStatusMessage') as association_status_message,
                JSON_EXTRACT(detail.Properties, '$.TargetId') as target_id,
                JSON_EXTRACT(detail.Properties, '$.TargetType') as target_type,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.AssociationIdentifier') as association_identifier
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
                AND detail.data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ConfigurationPolicyId') as configuration_policy_id,
                  json_extract_path_text(Properties, 'AssociationStatus') as association_status,
                  json_extract_path_text(Properties, 'AssociationType') as association_type,
                  json_extract_path_text(Properties, 'AssociationStatusMessage') as association_status_message,
                  json_extract_path_text(Properties, 'TargetId') as target_id,
                  json_extract_path_text(Properties, 'TargetType') as target_type,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'AssociationIdentifier') as association_identifier
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
                  AND data__Identifier = '<AssociationIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ConfigurationPolicyId') as configuration_policy_id,
                    json_extract_path_text(detail.Properties, 'AssociationStatus') as association_status,
                    json_extract_path_text(detail.Properties, 'AssociationType') as association_type,
                    json_extract_path_text(detail.Properties, 'AssociationStatusMessage') as association_status_message,
                    json_extract_path_text(detail.Properties, 'TargetId') as target_id,
                    json_extract_path_text(detail.Properties, 'TargetType') as target_type,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'AssociationIdentifier') as association_identifier
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
                    AND detail.data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
                    AND listing.region = 'us-east-1'
    policy_associations_list_only:
      name: policy_associations_list_only
      id: aws.securityhub.policy_associations_list_only
      x-cfn-schema-name: PolicyAssociation
      x-cfn-type-name: AWS::SecurityHub::PolicyAssociation
      x-identifiers:
        - AssociationIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociationIdentifier') as association_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssociationIdentifier') as association_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::PolicyAssociation'
                AND region = 'us-east-1'
    product_subscriptions:
      name: product_subscriptions
      id: aws.securityhub.product_subscriptions
      x-cfn-schema-name: ProductSubscription
      x-cfn-type-name: AWS::SecurityHub::ProductSubscription
      x-identifiers:
        - ProductSubscriptionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ProductSubscription&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::ProductSubscription"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::ProductSubscription"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/product_subscriptions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/product_subscriptions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ProductArn') as product_arn,
              JSON_EXTRACT(Properties, '$.ProductSubscriptionArn') as product_subscription_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::ProductSubscription'
              AND data__Identifier = '<ProductSubscriptionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ProductArn') as product_arn,
                JSON_EXTRACT(detail.Properties, '$.ProductSubscriptionArn') as product_subscription_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::ProductSubscription'
                AND detail.data__TypeName = 'AWS::SecurityHub::ProductSubscription'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ProductArn') as product_arn,
                  json_extract_path_text(Properties, 'ProductSubscriptionArn') as product_subscription_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::ProductSubscription'
                  AND data__Identifier = '<ProductSubscriptionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ProductArn') as product_arn,
                    json_extract_path_text(detail.Properties, 'ProductSubscriptionArn') as product_subscription_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::ProductSubscription'
                    AND detail.data__TypeName = 'AWS::SecurityHub::ProductSubscription'
                    AND listing.region = 'us-east-1'
    product_subscriptions_list_only:
      name: product_subscriptions_list_only
      id: aws.securityhub.product_subscriptions_list_only
      x-cfn-schema-name: ProductSubscription
      x-cfn-type-name: AWS::SecurityHub::ProductSubscription
      x-identifiers:
        - ProductSubscriptionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProductSubscriptionArn') as product_subscription_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::ProductSubscription'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProductSubscriptionArn') as product_subscription_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::ProductSubscription'
                AND region = 'us-east-1'
    security_controls:
      name: security_controls
      id: aws.securityhub.security_controls
      x-cfn-schema-name: SecurityControl
      x-cfn-type-name: AWS::SecurityHub::SecurityControl
      x-identifiers:
        - SecurityControlId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SecurityControl&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::SecurityControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::SecurityControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::SecurityControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/security_controls/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/security_controls/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/security_controls/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SecurityControlId') as security_control_id,
              JSON_EXTRACT(Properties, '$.SecurityControlArn') as security_control_arn,
              JSON_EXTRACT(Properties, '$.LastUpdateReason') as last_update_reason,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::SecurityControl'
              AND data__Identifier = '<SecurityControlId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.SecurityControlId') as security_control_id,
                JSON_EXTRACT(detail.Properties, '$.SecurityControlArn') as security_control_arn,
                JSON_EXTRACT(detail.Properties, '$.LastUpdateReason') as last_update_reason,
                JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::SecurityControl'
                AND detail.data__TypeName = 'AWS::SecurityHub::SecurityControl'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'SecurityControlId') as security_control_id,
                  json_extract_path_text(Properties, 'SecurityControlArn') as security_control_arn,
                  json_extract_path_text(Properties, 'LastUpdateReason') as last_update_reason,
                  json_extract_path_text(Properties, 'Parameters') as parameters
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::SecurityControl'
                  AND data__Identifier = '<SecurityControlId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'SecurityControlId') as security_control_id,
                    json_extract_path_text(detail.Properties, 'SecurityControlArn') as security_control_arn,
                    json_extract_path_text(detail.Properties, 'LastUpdateReason') as last_update_reason,
                    json_extract_path_text(detail.Properties, 'Parameters') as parameters
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::SecurityControl'
                    AND detail.data__TypeName = 'AWS::SecurityHub::SecurityControl'
                    AND listing.region = 'us-east-1'
    security_controls_list_only:
      name: security_controls_list_only
      id: aws.securityhub.security_controls_list_only
      x-cfn-schema-name: SecurityControl
      x-cfn-type-name: AWS::SecurityHub::SecurityControl
      x-identifiers:
        - SecurityControlId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SecurityControlId') as security_control_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::SecurityControl'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SecurityControlId') as security_control_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::SecurityControl'
                AND region = 'us-east-1'
    standards:
      name: standards
      id: aws.securityhub.standards
      x-cfn-schema-name: Standard
      x-cfn-type-name: AWS::SecurityHub::Standard
      x-identifiers:
        - StandardsSubscriptionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Standard&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Standard"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Standard"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityHub::Standard"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/standards/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/standards/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/standards/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.StandardsSubscriptionArn') as standards_subscription_arn,
              JSON_EXTRACT(Properties, '$.StandardsArn') as standards_arn,
              JSON_EXTRACT(Properties, '$.DisabledStandardsControls') as disabled_standards_controls
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::Standard'
              AND data__Identifier = '<StandardsSubscriptionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.StandardsSubscriptionArn') as standards_subscription_arn,
                JSON_EXTRACT(detail.Properties, '$.StandardsArn') as standards_arn,
                JSON_EXTRACT(detail.Properties, '$.DisabledStandardsControls') as disabled_standards_controls
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecurityHub::Standard'
                AND detail.data__TypeName = 'AWS::SecurityHub::Standard'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'StandardsSubscriptionArn') as standards_subscription_arn,
                  json_extract_path_text(Properties, 'StandardsArn') as standards_arn,
                  json_extract_path_text(Properties, 'DisabledStandardsControls') as disabled_standards_controls
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityHub::Standard'
                  AND data__Identifier = '<StandardsSubscriptionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'StandardsSubscriptionArn') as standards_subscription_arn,
                    json_extract_path_text(detail.Properties, 'StandardsArn') as standards_arn,
                    json_extract_path_text(detail.Properties, 'DisabledStandardsControls') as disabled_standards_controls
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecurityHub::Standard'
                    AND detail.data__TypeName = 'AWS::SecurityHub::Standard'
                    AND listing.region = 'us-east-1'
    standards_list_only:
      name: standards_list_only
      id: aws.securityhub.standards_list_only
      x-cfn-schema-name: Standard
      x-cfn-type-name: AWS::SecurityHub::Standard
      x-identifiers:
        - StandardsSubscriptionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StandardsSubscriptionArn') as standards_subscription_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::Standard'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'StandardsSubscriptionArn') as standards_subscription_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityHub::Standard'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AutomationRule&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAutomationRule
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAutomationRuleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ConfigurationPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConfigurationPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConfigurationPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DelegatedAdmin&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDelegatedAdmin
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDelegatedAdminRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__FindingAggregator&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFindingAggregator
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFindingAggregatorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Hub&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateHub
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateHubRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Insight&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInsight
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInsightRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__OrganizationConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateOrganizationConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateOrganizationConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PolicyAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePolicyAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePolicyAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ProductSubscription&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProductSubscription
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProductSubscriptionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SecurityControl&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSecurityControl
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSecurityControlRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Standard&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStandard
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStandardRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
