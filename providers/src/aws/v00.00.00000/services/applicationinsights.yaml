openapi: 3.0.0
info:
  title: ApplicationInsights
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    CustomComponent:
      description: The custom grouped component.
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[\d\w\-_.+]*$
        ResourceList:
          description: The list of resource ARNs that belong to the component.
          type: array
          items:
            type: string
            minLength: 20
            maxLength: 300
            pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
          minItems: 1
          x-insertionOrder: true
      required:
        - ComponentName
        - ResourceList
      additionalProperties: false
    LogPatternSet:
      description: The log pattern set.
      type: object
      properties:
        PatternSetName:
          description: The name of the log pattern set.
          type: string
          minLength: 1
          maxLength: 30
          pattern: '[a-zA-Z0-9.-_]*'
        LogPatterns:
          description: The log patterns of a set.
          type: array
          items:
            $ref: '#/components/schemas/LogPattern'
          minItems: 1
          x-insertionOrder: true
      required:
        - PatternSetName
        - LogPatterns
      additionalProperties: false
    LogPattern:
      description: The log pattern.
      type: object
      properties:
        PatternName:
          description: The name of the log pattern.
          type: string
          minLength: 1
          maxLength: 50
          pattern: '[a-zA-Z0-9.-_]*'
        Pattern:
          description: The log pattern.
          type: string
          minLength: 1
          maxLength: 50
        Rank:
          description: Rank of the log pattern.
          type: integer
      required:
        - PatternName
        - Pattern
        - Rank
      additionalProperties: false
    ComponentMonitoringSetting:
      description: The monitoring setting of the component.
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[\d\w\-_.+]*$
        ComponentARN:
          description: The ARN of the compnonent.
          type: string
          minLength: 20
          maxLength: 300
          pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
        Tier:
          description: The tier of the application component.
          type: string
          pattern: ^[A-Z][[A-Z]_]*$
        ComponentConfigurationMode:
          description: The component monitoring configuration mode.
          type: string
          enum:
            - DEFAULT
            - DEFAULT_WITH_OVERWRITE
            - CUSTOM
        DefaultOverwriteComponentConfiguration:
          description: The overwritten settings on default component monitoring configuration.
          $ref: '#/components/schemas/ComponentConfiguration'
        CustomComponentConfiguration:
          description: The monitoring configuration of the component.
          $ref: '#/components/schemas/ComponentConfiguration'
      required:
        - Tier
        - ComponentConfigurationMode
      oneOf:
        - required:
            - ComponentName
        - required:
            - ComponentARN
      additionalProperties: false
    ComponentConfiguration:
      description: The configuration settings of the component.
      type: object
      properties:
        ConfigurationDetails:
          description: The configuration settings
          $ref: '#/components/schemas/ConfigurationDetails'
        SubComponentTypeConfigurations:
          description: Sub component configurations of the component.
          type: array
          items:
            $ref: '#/components/schemas/SubComponentTypeConfiguration'
          minItems: 1
          x-insertionOrder: true
      additionalProperties: false
    ConfigurationDetails:
      description: The configuration settings.
      type: object
      properties:
        AlarmMetrics:
          description: A list of metrics to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/AlarmMetric'
          x-insertionOrder: true
        Logs:
          description: A list of logs to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/Log'
          x-insertionOrder: true
        WindowsEvents:
          description: A list of Windows Events to log.
          type: array
          items:
            $ref: '#/components/schemas/WindowsEvent'
          x-insertionOrder: true
        Processes:
          description: A list of processes to monitor for the component. Only Windows EC2 instances can have a processes section.
          type: array
          items:
            $ref: '#/components/schemas/Process'
          x-insertionOrder: true
        Alarms:
          description: A list of alarms to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/Alarm'
          x-insertionOrder: true
        JMXPrometheusExporter:
          description: The JMX Prometheus Exporter settings.
          $ref: '#/components/schemas/JMXPrometheusExporter'
        HANAPrometheusExporter:
          description: The HANA DB Prometheus Exporter settings.
          $ref: '#/components/schemas/HANAPrometheusExporter'
        HAClusterPrometheusExporter:
          description: The HA cluster Prometheus Exporter settings.
          $ref: '#/components/schemas/HAClusterPrometheusExporter'
        NetWeaverPrometheusExporter:
          description: The NetWeaver Prometheus Exporter settings.
          $ref: '#/components/schemas/NetWeaverPrometheusExporter'
        SQLServerPrometheusExporter:
          description: The SQL Prometheus Exporter settings.
          $ref: '#/components/schemas/SQLServerPrometheusExporter'
      additionalProperties: false
    SubComponentConfigurationDetails:
      description: The configuration settings of sub components.
      type: object
      properties:
        AlarmMetrics:
          description: A list of metrics to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/AlarmMetric'
          x-insertionOrder: true
        Logs:
          description: A list of logs to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/Log'
          x-insertionOrder: true
        WindowsEvents:
          description: A list of Windows Events to log.
          type: array
          items:
            $ref: '#/components/schemas/WindowsEvent'
          x-insertionOrder: true
        Processes:
          description: A list of processes to monitor for the component. Only Windows EC2 instances can have a processes section.
          type: array
          items:
            $ref: '#/components/schemas/Process'
          x-insertionOrder: true
      additionalProperties: false
    JMXPrometheusExporter:
      description: The JMX Prometheus Exporter settings.
      type: object
      properties:
        JMXURL:
          description: JMX service URL.
          type: string
        HostPort:
          description: Java agent host port
          type: string
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
      additionalProperties: false
    HANAPrometheusExporter:
      description: The HANA DB Prometheus Exporter settings.
      type: object
      properties:
        HANASID:
          description: HANA DB SID.
          type: string
        HANAPort:
          description: The HANA DB port.
          type: string
        HANASecretName:
          description: |-
            The secret name which manages the HANA DB credentials e.g. {
              "username": "<>",
              "password": "<>"
            }.
          type: string
        AgreeToInstallHANADBClient:
          description: A flag which indicates agreeing to install SAP HANA DB client.
          type: boolean
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
      required:
        - HANASID
        - HANAPort
        - HANASecretName
        - AgreeToInstallHANADBClient
      additionalProperties: false
    HAClusterPrometheusExporter:
      description: The HA cluster Prometheus Exporter settings.
      type: object
      properties:
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
      additionalProperties: false
    NetWeaverPrometheusExporter:
      description: The NetWeaver Prometheus Exporter Settings.
      type: object
      properties:
        SAPSID:
          description: SAP NetWeaver SID.
          type: string
        InstanceNumbers:
          description: SAP instance numbers for ASCS, ERS, and App Servers.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 2
            pattern: \b([0-9]|[0-9][0-9])\b
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
      required:
        - SAPSID
        - InstanceNumbers
      additionalProperties: false
    SQLServerPrometheusExporter:
      description: The SQL prometheus exporter settings.
      type: object
      properties:
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
        SQLSecretName:
          description: 'Secret name which managers SQL exporter connection. e.g. {"data_source_name": "sqlserver://<USERNAME>:<PASSWORD>@localhost:1433"}'
          type: string
      required:
        - PrometheusPort
        - SQLSecretName
      additionalProperties: false
    AlarmMetric:
      description: A metric to be monitored for the component.
      type: object
      properties:
        AlarmMetricName:
          description: The name of the metric to be monitored for the component.
          type: string
      required:
        - AlarmMetricName
      additionalProperties: false
    Log:
      description: A log to be monitored for the component.
      type: object
      properties:
        LogGroupName:
          description: The CloudWatch log group name to be associated to the monitored log.
          type: string
          minLength: 1
          maxLength: 512
          pattern: '[\.\-_/#A-Za-z0-9]+'
        LogPath:
          description: The path of the logs to be monitored.
          type: string
          minLength: 1
          maxLength: 260
          pattern: ^([a-zA-Z]:\\[\\\S|*\S]?.*|/[^"']*)$
        LogType:
          description: The log type decides the log patterns against which Application Insights analyzes the log.
          type: string
          pattern: ^[A-Z][[A-Z]_]*$
        Encoding:
          description: The type of encoding of the logs to be monitored.
          type: string
          enum:
            - utf-8
            - utf-16
            - ascii
        PatternSet:
          description: The name of the log pattern set.
          type: string
          minLength: 1
          maxLength: 30
          pattern: '[a-zA-Z0-9.-_]*'
      required:
        - LogType
      additionalProperties: false
    WindowsEvent:
      description: A Windows Event to be monitored for the component.
      type: object
      properties:
        LogGroupName:
          description: The CloudWatch log group name to be associated to the monitored log.
          type: string
          minLength: 1
          maxLength: 512
          pattern: '[\.\-_/#A-Za-z0-9]+'
        EventName:
          description: The type of Windows Events to log.
          type: string
          minLength: 1
          maxLength: 260
          pattern: ^[a-zA-Z0-9_ \\/-]+$
        EventLevels:
          description: 'The levels of event to log. '
          type: array
          items:
            $ref: '#/components/schemas/EventLevel'
          minItems: 1
          x-insertionOrder: true
        PatternSet:
          description: The name of the log pattern set.
          type: string
          minLength: 1
          maxLength: 30
          pattern: '[a-zA-Z0-9.-_]*'
      required:
        - LogGroupName
        - EventName
        - EventLevels
      additionalProperties: false
    Process:
      description: A process to be monitored for the component.
      type: object
      properties:
        ProcessName:
          description: The name of the process to be monitored for the component.
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^[a-zA-Z0-9_,-]+$
        AlarmMetrics:
          description: A list of metrics to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/AlarmMetric'
          x-insertionOrder: true
      required:
        - ProcessName
        - AlarmMetrics
      additionalProperties: false
    EventLevel:
      description: The level of event to log.
      type: string
      enum:
        - INFORMATION
        - WARNING
        - ERROR
        - CRITICAL
        - VERBOSE
    Alarm:
      description: A CloudWatch alarm to be monitored for the component.
      type: object
      properties:
        AlarmName:
          description: The name of the CloudWatch alarm to be monitored for the component.
          type: string
          minLength: 1
          maxLength: 255
        Severity:
          description: Indicates the degree of outage when the alarm goes off.
          type: string
          enum:
            - HIGH
            - MEDIUM
            - LOW
      required:
        - AlarmName
      additionalProperties: false
    SubComponentTypeConfiguration:
      description: One type sub component configurations for the component.
      type: object
      properties:
        SubComponentType:
          description: The sub component type.
          type: string
          enum:
            - AWS::EC2::Instance
            - AWS::EC2::Volume
        SubComponentConfigurationDetails:
          description: The configuration settings of sub components.
          $ref: '#/components/schemas/SubComponentConfigurationDetails'
      required:
        - SubComponentType
        - SubComponentConfigurationDetails
      additionalProperties: false
    Application:
      type: object
      properties:
        ResourceGroupName:
          description: The name of the resource group.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z0-9.-_]*'
        ApplicationARN:
          description: The ARN of the ApplicationInsights application.
          type: string
        CWEMonitorEnabled:
          description: Indicates whether Application Insights can listen to CloudWatch events for the application resources.
          type: boolean
        OpsCenterEnabled:
          description: When set to true, creates opsItems for any problems detected on an application.
          type: boolean
        OpsItemSNSTopicArn:
          description: The SNS topic provided to Application Insights that is associated to the created opsItem.
          type: string
          minLength: 20
          maxLength: 300
          pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
        SNSNotificationArn:
          description: Application Insights sends notifications to this SNS topic whenever there is a problem update in the associated application.
          type: string
          minLength: 20
          maxLength: 300
          pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
        Tags:
          description: The tags of Application Insights application.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          x-insertionOrder: true
        CustomComponents:
          description: The custom grouped components.
          type: array
          items:
            $ref: '#/components/schemas/CustomComponent'
          minItems: 1
          x-insertionOrder: true
        LogPatternSets:
          description: The log pattern sets.
          type: array
          items:
            $ref: '#/components/schemas/LogPatternSet'
          minItems: 1
          x-insertionOrder: true
        AutoConfigurationEnabled:
          description: If set to true, application will be configured with recommended monitoring configuration.
          type: boolean
        ComponentMonitoringSettings:
          description: The monitoring settings of the components.
          type: array
          items:
            $ref: '#/components/schemas/ComponentMonitoringSetting'
          minItems: 1
          x-insertionOrder: true
        GroupingType:
          description: The grouping type of the application
          type: string
          enum:
            - ACCOUNT_BASED
        AttachMissingPermission:
          description: If set to true, the managed policies for SSM and CW will be attached to the instance roles if they are missing
          type: boolean
      required:
        - ResourceGroupName
      x-stackql-resource-name: application
      description: Resource schema for AWS::ApplicationInsights::Application
      x-type-name: AWS::ApplicationInsights::Application
      x-stackql-primary-identifier:
        - ApplicationARN
      x-create-only-properties:
        - ResourceGroupName
        - GroupingType
      x-write-only-properties:
        - ComponentMonitoringSettings
        - LogPatternSets
        - CustomComponents
        - GroupingType
        - OpsItemSNSTopicArn
        - SNSNotificationArn
        - AttachMissingPermission
      x-read-only-properties:
        - ApplicationARN
      x-required-properties:
        - ResourceGroupName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - applicationinsights:ListTagsForResource
          - applicationinsights:TagResource
          - applicationinsights:UntagResource
      x-required-permissions:
        create:
          - applicationinsights:CreateApplication
          - applicationinsights:DescribeApplication
          - applicationinsights:CreateComponent
          - applicationinsights:DescribeComponent
          - applicationinsights:CreateLogPattern
          - applicationinsights:DescribeLogPattern
          - applicationinsights:DescribeComponentConfigurationRecommendation
          - applicationinsights:UpdateComponentConfiguration
          - applicationinsights:ListComponents
          - applicationinsights:TagResource
          - ec2:DescribeInstances
          - ec2:DescribeVolumes
          - rds:DescribeDBInstances
          - rds:DescribeDBClusters
          - sqs:ListQueues
          - elasticloadbalancing:DescribeLoadBalancers
          - elasticloadbalancing:DescribeTargetGroups
          - elasticloadbalancing:DescribeTargetHealth
          - autoscaling:DescribeAutoScalingGroups
          - lambda:ListFunctions
          - dynamodb:ListTables
          - s3:ListAllMyBuckets
          - sns:ListTopics
          - states:ListStateMachines
          - apigateway:GET
          - ecs:ListClusters
          - ecs:DescribeTaskDefinition
          - ecs:ListServices
          - ecs:ListTasks
          - eks:ListClusters
          - eks:ListNodegroups
          - fsx:DescribeFileSystems
          - logs:DescribeLogGroups
          - elasticfilesystem:DescribeFileSystems
        read:
          - applicationinsights:DescribeApplication
          - applicationinsights:ListTagsForResource
          - applicationinsights:DescribeComponent
          - applicationinsights:ListComponents
          - applicationinsights:DescribeLogPattern
          - applicationinsights:ListLogPatterns
          - applicationinsights:ListLogPatternSets
        update:
          - applicationinsights:CreateApplication
          - applicationinsights:DescribeApplication
          - applicationinsights:UpdateApplication
          - applicationinsights:TagResource
          - applicationinsights:UntagResource
          - applicationinsights:ListTagsForResource
          - applicationinsights:CreateComponent
          - applicationinsights:DescribeComponent
          - applicationinsights:DeleteComponent
          - applicationinsights:ListComponents
          - applicationinsights:CreateLogPattern
          - applicationinsights:DeleteLogPattern
          - applicationinsights:DescribeLogPattern
          - applicationinsights:ListLogPatterns
          - applicationinsights:ListLogPatternSets
          - applicationinsights:UpdateLogPattern
          - applicationinsights:DescribeComponentConfiguration
          - applicationinsights:DescribeComponentConfigurationRecommendation
          - applicationinsights:UpdateComponentConfiguration
        delete:
          - applicationinsights:DeleteApplication
          - applicationinsights:DescribeApplication
        list:
          - applicationinsights:ListApplications
          - applicationinsights:DescribeApplication
          - applicationinsights:ListTagsForResource
          - applicationinsights:DescribeComponent
          - applicationinsights:ListComponents
          - applicationinsights:DescribeLogPattern
          - applicationinsights:ListLogPatterns
          - applicationinsights:ListLogPatternSets
    CreateApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ResourceGroupName:
              description: The name of the resource group.
              type: string
              minLength: 1
              maxLength: 256
              pattern: '[a-zA-Z0-9.-_]*'
            ApplicationARN:
              description: The ARN of the ApplicationInsights application.
              type: string
            CWEMonitorEnabled:
              description: Indicates whether Application Insights can listen to CloudWatch events for the application resources.
              type: boolean
            OpsCenterEnabled:
              description: When set to true, creates opsItems for any problems detected on an application.
              type: boolean
            OpsItemSNSTopicArn:
              description: The SNS topic provided to Application Insights that is associated to the created opsItem.
              type: string
              minLength: 20
              maxLength: 300
              pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
            SNSNotificationArn:
              description: Application Insights sends notifications to this SNS topic whenever there is a problem update in the associated application.
              type: string
              minLength: 20
              maxLength: 300
              pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
            Tags:
              description: The tags of Application Insights application.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1
              x-insertionOrder: true
            CustomComponents:
              description: The custom grouped components.
              type: array
              items:
                $ref: '#/components/schemas/CustomComponent'
              minItems: 1
              x-insertionOrder: true
            LogPatternSets:
              description: The log pattern sets.
              type: array
              items:
                $ref: '#/components/schemas/LogPatternSet'
              minItems: 1
              x-insertionOrder: true
            AutoConfigurationEnabled:
              description: If set to true, application will be configured with recommended monitoring configuration.
              type: boolean
            ComponentMonitoringSettings:
              description: The monitoring settings of the components.
              type: array
              items:
                $ref: '#/components/schemas/ComponentMonitoringSetting'
              minItems: 1
              x-insertionOrder: true
            GroupingType:
              description: The grouping type of the application
              type: string
              enum:
                - ACCOUNT_BASED
            AttachMissingPermission:
              description: If set to true, the managed policies for SSM and CW will be attached to the instance roles if they are missing
              type: boolean
          x-stackQL-stringOnly: true
      x-title: CreateApplicationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.applicationinsights.applications
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::ApplicationInsights::Application
      x-identifiers:
        - ApplicationARN
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationInsights::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationInsights::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationInsights::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceGroupName') as resource_group_name,
              JSON_EXTRACT(Properties, '$.ApplicationARN') as application_arn,
              JSON_EXTRACT(Properties, '$.CWEMonitorEnabled') as cwe_monitor_enabled,
              JSON_EXTRACT(Properties, '$.OpsCenterEnabled') as ops_center_enabled,
              JSON_EXTRACT(Properties, '$.OpsItemSNSTopicArn') as ops_item_sns_topic_arn,
              JSON_EXTRACT(Properties, '$.SNSNotificationArn') as sns_notification_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CustomComponents') as custom_components,
              JSON_EXTRACT(Properties, '$.LogPatternSets') as log_pattern_sets,
              JSON_EXTRACT(Properties, '$.AutoConfigurationEnabled') as auto_configuration_enabled,
              JSON_EXTRACT(Properties, '$.ComponentMonitoringSettings') as component_monitoring_settings,
              JSON_EXTRACT(Properties, '$.GroupingType') as grouping_type,
              JSON_EXTRACT(Properties, '$.AttachMissingPermission') as attach_missing_permission
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationInsights::Application'
              AND data__Identifier = '<ApplicationARN>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ResourceGroupName') as resource_group_name,
                JSON_EXTRACT(detail.Properties, '$.ApplicationARN') as application_arn,
                JSON_EXTRACT(detail.Properties, '$.CWEMonitorEnabled') as cwe_monitor_enabled,
                JSON_EXTRACT(detail.Properties, '$.OpsCenterEnabled') as ops_center_enabled,
                JSON_EXTRACT(detail.Properties, '$.OpsItemSNSTopicArn') as ops_item_sns_topic_arn,
                JSON_EXTRACT(detail.Properties, '$.SNSNotificationArn') as sns_notification_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CustomComponents') as custom_components,
                JSON_EXTRACT(detail.Properties, '$.LogPatternSets') as log_pattern_sets,
                JSON_EXTRACT(detail.Properties, '$.AutoConfigurationEnabled') as auto_configuration_enabled,
                JSON_EXTRACT(detail.Properties, '$.ComponentMonitoringSettings') as component_monitoring_settings,
                JSON_EXTRACT(detail.Properties, '$.GroupingType') as grouping_type,
                JSON_EXTRACT(detail.Properties, '$.AttachMissingPermission') as attach_missing_permission
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ApplicationInsights::Application'
                AND detail.data__TypeName = 'AWS::ApplicationInsights::Application'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ResourceGroupName') as resource_group_name,
                  json_extract_path_text(Properties, 'ApplicationARN') as application_arn,
                  json_extract_path_text(Properties, 'CWEMonitorEnabled') as cwe_monitor_enabled,
                  json_extract_path_text(Properties, 'OpsCenterEnabled') as ops_center_enabled,
                  json_extract_path_text(Properties, 'OpsItemSNSTopicArn') as ops_item_sns_topic_arn,
                  json_extract_path_text(Properties, 'SNSNotificationArn') as sns_notification_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CustomComponents') as custom_components,
                  json_extract_path_text(Properties, 'LogPatternSets') as log_pattern_sets,
                  json_extract_path_text(Properties, 'AutoConfigurationEnabled') as auto_configuration_enabled,
                  json_extract_path_text(Properties, 'ComponentMonitoringSettings') as component_monitoring_settings,
                  json_extract_path_text(Properties, 'GroupingType') as grouping_type,
                  json_extract_path_text(Properties, 'AttachMissingPermission') as attach_missing_permission
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationInsights::Application'
                  AND data__Identifier = '<ApplicationARN>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ResourceGroupName') as resource_group_name,
                    json_extract_path_text(detail.Properties, 'ApplicationARN') as application_arn,
                    json_extract_path_text(detail.Properties, 'CWEMonitorEnabled') as cwe_monitor_enabled,
                    json_extract_path_text(detail.Properties, 'OpsCenterEnabled') as ops_center_enabled,
                    json_extract_path_text(detail.Properties, 'OpsItemSNSTopicArn') as ops_item_sns_topic_arn,
                    json_extract_path_text(detail.Properties, 'SNSNotificationArn') as sns_notification_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CustomComponents') as custom_components,
                    json_extract_path_text(detail.Properties, 'LogPatternSets') as log_pattern_sets,
                    json_extract_path_text(detail.Properties, 'AutoConfigurationEnabled') as auto_configuration_enabled,
                    json_extract_path_text(detail.Properties, 'ComponentMonitoringSettings') as component_monitoring_settings,
                    json_extract_path_text(detail.Properties, 'GroupingType') as grouping_type,
                    json_extract_path_text(detail.Properties, 'AttachMissingPermission') as attach_missing_permission
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ApplicationInsights::Application'
                    AND detail.data__TypeName = 'AWS::ApplicationInsights::Application'
                    AND listing.region = 'us-east-1'
    applications_list_only:
      name: applications_list_only
      id: aws.applicationinsights.applications_list_only
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::ApplicationInsights::Application
      x-identifiers:
        - ApplicationARN
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationARN') as application_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationInsights::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationARN') as application_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationInsights::Application'
                AND region = 'us-east-1'
    application_tags:
      name: application_tags
      id: aws.applicationinsights.application_tags
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::ApplicationInsights::Application
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ResourceGroupName') as resource_group_name,
              JSON_EXTRACT(detail.Properties, '$.ApplicationARN') as application_arn,
              JSON_EXTRACT(detail.Properties, '$.CWEMonitorEnabled') as cwe_monitor_enabled,
              JSON_EXTRACT(detail.Properties, '$.OpsCenterEnabled') as ops_center_enabled,
              JSON_EXTRACT(detail.Properties, '$.OpsItemSNSTopicArn') as ops_item_sns_topic_arn,
              JSON_EXTRACT(detail.Properties, '$.SNSNotificationArn') as sns_notification_arn,
              JSON_EXTRACT(detail.Properties, '$.CustomComponents') as custom_components,
              JSON_EXTRACT(detail.Properties, '$.LogPatternSets') as log_pattern_sets,
              JSON_EXTRACT(detail.Properties, '$.AutoConfigurationEnabled') as auto_configuration_enabled,
              JSON_EXTRACT(detail.Properties, '$.ComponentMonitoringSettings') as component_monitoring_settings,
              JSON_EXTRACT(detail.Properties, '$.GroupingType') as grouping_type,
              JSON_EXTRACT(detail.Properties, '$.AttachMissingPermission') as attach_missing_permission
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ApplicationInsights::Application'
              AND detail.data__TypeName = 'AWS::ApplicationInsights::Application'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ResourceGroupName') as resource_group_name,
                json_extract_path_text(detail.Properties, 'ApplicationARN') as application_arn,
                json_extract_path_text(detail.Properties, 'CWEMonitorEnabled') as cwe_monitor_enabled,
                json_extract_path_text(detail.Properties, 'OpsCenterEnabled') as ops_center_enabled,
                json_extract_path_text(detail.Properties, 'OpsItemSNSTopicArn') as ops_item_sns_topic_arn,
                json_extract_path_text(detail.Properties, 'SNSNotificationArn') as sns_notification_arn,
                json_extract_path_text(detail.Properties, 'CustomComponents') as custom_components,
                json_extract_path_text(detail.Properties, 'LogPatternSets') as log_pattern_sets,
                json_extract_path_text(detail.Properties, 'AutoConfigurationEnabled') as auto_configuration_enabled,
                json_extract_path_text(detail.Properties, 'ComponentMonitoringSettings') as component_monitoring_settings,
                json_extract_path_text(detail.Properties, 'GroupingType') as grouping_type,
                json_extract_path_text(detail.Properties, 'AttachMissingPermission') as attach_missing_permission
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ApplicationInsights::Application'
                AND detail.data__TypeName = 'AWS::ApplicationInsights::Application'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
