openapi: 3.0.0
info:
  title: ApplicationInsights
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    CustomComponent:
      description: The custom grouped component.
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[\d\w\-_.+]*$
        ResourceList:
          description: The list of resource ARNs that belong to the component.
          type: array
          items:
            type: string
            minLength: 20
            maxLength: 300
            pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
          minItems: 1
          x-insertionOrder: true
      required:
        - ComponentName
        - ResourceList
      additionalProperties: false
    LogPatternSet:
      description: The log pattern set.
      type: object
      properties:
        PatternSetName:
          description: The name of the log pattern set.
          type: string
          minLength: 1
          maxLength: 30
          pattern: '[a-zA-Z0-9.-_]*'
        LogPatterns:
          description: The log patterns of a set.
          type: array
          items:
            $ref: '#/components/schemas/LogPattern'
          minItems: 1
          x-insertionOrder: true
      required:
        - PatternSetName
        - LogPatterns
      additionalProperties: false
    LogPattern:
      description: The log pattern.
      type: object
      properties:
        PatternName:
          description: The name of the log pattern.
          type: string
          minLength: 1
          maxLength: 50
          pattern: '[a-zA-Z0-9.-_]*'
        Pattern:
          description: The log pattern.
          type: string
          minLength: 1
          maxLength: 50
        Rank:
          description: Rank of the log pattern.
          type: integer
      required:
        - PatternName
        - Pattern
        - Rank
      additionalProperties: false
    ComponentMonitoringSetting:
      description: The monitoring setting of the component.
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[\d\w\-_.+]*$
        ComponentARN:
          description: The ARN of the compnonent.
          type: string
          minLength: 20
          maxLength: 300
          pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
        Tier:
          description: The tier of the application component.
          type: string
          pattern: ^[A-Z][[A-Z]_]*$
        ComponentConfigurationMode:
          description: The component monitoring configuration mode.
          type: string
          enum:
            - DEFAULT
            - DEFAULT_WITH_OVERWRITE
            - CUSTOM
        DefaultOverwriteComponentConfiguration:
          description: The overwritten settings on default component monitoring configuration.
          $ref: '#/components/schemas/ComponentConfiguration'
        CustomComponentConfiguration:
          description: The monitoring configuration of the component.
          $ref: '#/components/schemas/ComponentConfiguration'
      required:
        - Tier
        - ComponentConfigurationMode
      oneOf:
        - required:
            - ComponentName
        - required:
            - ComponentARN
      additionalProperties: false
    ComponentConfiguration:
      description: The configuration settings of the component.
      type: object
      properties:
        ConfigurationDetails:
          description: The configuration settings
          $ref: '#/components/schemas/ConfigurationDetails'
        SubComponentTypeConfigurations:
          description: Sub component configurations of the component.
          type: array
          items:
            $ref: '#/components/schemas/SubComponentTypeConfiguration'
          minItems: 1
          x-insertionOrder: true
      additionalProperties: false
    ConfigurationDetails:
      description: The configuration settings.
      type: object
      properties:
        AlarmMetrics:
          description: A list of metrics to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/AlarmMetric'
          x-insertionOrder: true
        Logs:
          description: A list of logs to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/Log'
          x-insertionOrder: true
        WindowsEvents:
          description: A list of Windows Events to log.
          type: array
          items:
            $ref: '#/components/schemas/WindowsEvent'
          x-insertionOrder: true
        Alarms:
          description: A list of alarms to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/Alarm'
          x-insertionOrder: true
        JMXPrometheusExporter:
          description: The JMX Prometheus Exporter settings.
          $ref: '#/components/schemas/JMXPrometheusExporter'
        HANAPrometheusExporter:
          description: The HANA DB Prometheus Exporter settings.
          $ref: '#/components/schemas/HANAPrometheusExporter'
        HAClusterPrometheusExporter:
          description: The HA cluster Prometheus Exporter settings.
          $ref: '#/components/schemas/HAClusterPrometheusExporter'
      additionalProperties: false
    SubComponentConfigurationDetails:
      description: The configuration settings of sub components.
      type: object
      properties:
        AlarmMetrics:
          description: A list of metrics to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/AlarmMetric'
          x-insertionOrder: true
        Logs:
          description: A list of logs to monitor for the component.
          type: array
          items:
            $ref: '#/components/schemas/Log'
          x-insertionOrder: true
        WindowsEvents:
          description: A list of Windows Events to log.
          type: array
          items:
            $ref: '#/components/schemas/WindowsEvent'
          x-insertionOrder: true
      additionalProperties: false
    JMXPrometheusExporter:
      description: The JMX Prometheus Exporter settings.
      type: object
      properties:
        JMXURL:
          description: JMX service URL.
          type: string
        HostPort:
          description: Java agent host port
          type: string
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
      additionalProperties: false
    HANAPrometheusExporter:
      description: The HANA DB Prometheus Exporter settings.
      type: object
      properties:
        HANASID:
          description: HANA DB SID.
          type: string
        HANAPort:
          description: The HANA DB port.
          type: string
        HANASecretName:
          description: |-
            The secret name which manages the HANA DB credentials e.g. {
              "username": "<>",
              "password": "<>"
            }.
          type: string
        AgreeToInstallHANADBClient:
          description: A flag which indicates agreeing to install SAP HANA DB client.
          type: boolean
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
      required:
        - HANASID
        - HANAPort
        - HANASecretName
        - AgreeToInstallHANADBClient
      additionalProperties: false
    HAClusterPrometheusExporter:
      description: The HA cluster Prometheus Exporter settings.
      type: object
      properties:
        PrometheusPort:
          description: Prometheus exporter port.
          type: string
      additionalProperties: false
    AlarmMetric:
      description: A metric to be monitored for the component.
      type: object
      properties:
        AlarmMetricName:
          description: The name of the metric to be monitored for the component.
          type: string
      required:
        - AlarmMetricName
      additionalProperties: false
    Log:
      description: A log to be monitored for the component.
      type: object
      properties:
        LogGroupName:
          description: The CloudWatch log group name to be associated to the monitored log.
          type: string
          minLength: 1
          maxLength: 512
          pattern: '[\.\-_/#A-Za-z0-9]+'
        LogPath:
          description: The path of the logs to be monitored.
          type: string
          minLength: 1
          maxLength: 260
          pattern: ^([a-zA-Z]:\\[\\\S|*\S]?.*|/[^"']*)$
        LogType:
          description: The log type decides the log patterns against which Application Insights analyzes the log.
          type: string
          pattern: ^[A-Z][[A-Z]_]*$
        Encoding:
          description: The type of encoding of the logs to be monitored.
          type: string
          enum:
            - utf-8
            - utf-16
            - ascii
        PatternSet:
          description: The name of the log pattern set.
          type: string
          minLength: 1
          maxLength: 30
          pattern: '[a-zA-Z0-9.-_]*'
      required:
        - LogType
      additionalProperties: false
    WindowsEvent:
      description: A Windows Event to be monitored for the component.
      type: object
      properties:
        LogGroupName:
          description: The CloudWatch log group name to be associated to the monitored log.
          type: string
          minLength: 1
          maxLength: 512
          pattern: '[\.\-_/#A-Za-z0-9]+'
        EventName:
          description: The type of Windows Events to log.
          type: string
          minLength: 1
          maxLength: 260
          pattern: ^[a-zA-Z0-9_ \\/-]$
        EventLevels:
          description: 'The levels of event to log. '
          type: array
          items:
            $ref: '#/components/schemas/EventLevel'
          minItems: 1
          x-insertionOrder: true
        PatternSet:
          description: The name of the log pattern set.
          type: string
          minLength: 1
          maxLength: 30
          pattern: '[a-zA-Z0-9.-_]*'
      required:
        - LogGroupName
        - EventName
        - EventLevels
      additionalProperties: false
    EventLevel:
      description: The level of event to log.
      type: string
      enum:
        - INFORMATION
        - WARNING
        - ERROR
        - CRITICAL
        - VERBOSE
    Alarm:
      description: A CloudWatch alarm to be monitored for the component.
      type: object
      properties:
        AlarmName:
          description: The name of the CloudWatch alarm to be monitored for the component.
          type: string
          minLength: 1
          maxLength: 255
        Severity:
          description: Indicates the degree of outage when the alarm goes off.
          type: string
          enum:
            - HIGH
            - MEDIUM
            - LOW
      required:
        - AlarmName
      additionalProperties: false
    SubComponentTypeConfiguration:
      description: One type sub component configurations for the component.
      type: object
      properties:
        SubComponentType:
          description: The sub component type.
          type: string
          enum:
            - AWS::EC2::Instance
            - AWS::EC2::Volume
        SubComponentConfigurationDetails:
          description: The configuration settings of sub components.
          $ref: '#/components/schemas/SubComponentConfigurationDetails'
      required:
        - SubComponentType
        - SubComponentConfigurationDetails
      additionalProperties: false
    Application:
      type: object
      properties:
        ResourceGroupName:
          description: The name of the resource group.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z0-9.-_]*'
        ApplicationARN:
          description: The ARN of the ApplicationInsights application.
          type: string
        CWEMonitorEnabled:
          description: Indicates whether Application Insights can listen to CloudWatch events for the application resources.
          type: boolean
        OpsCenterEnabled:
          description: When set to true, creates opsItems for any problems detected on an application.
          type: boolean
        OpsItemSNSTopicArn:
          description: The SNS topic provided to Application Insights that is associated to the created opsItem.
          type: string
          minLength: 20
          maxLength: 300
          pattern: ^arn:aws(-[\w]+)*:[\w\d-]+:([\w\d-]*)?:[\w\d_-]*([:/].+)*$
        Tags:
          description: The tags of Application Insights application.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          x-insertionOrder: true
        CustomComponents:
          description: The custom grouped components.
          type: array
          items:
            $ref: '#/components/schemas/CustomComponent'
          minItems: 1
          x-insertionOrder: true
        LogPatternSets:
          description: The log pattern sets.
          type: array
          items:
            $ref: '#/components/schemas/LogPatternSet'
          minItems: 1
          x-insertionOrder: true
        AutoConfigurationEnabled:
          description: If set to true, application will be configured with recommended monitoring configuration.
          type: boolean
        ComponentMonitoringSettings:
          description: The monitoring settings of the components.
          type: array
          items:
            $ref: '#/components/schemas/ComponentMonitoringSetting'
          minItems: 1
          x-insertionOrder: true
        GroupingType:
          description: The grouping type of the application
          type: string
          enum:
            - ACCOUNT_BASED
      required:
        - ResourceGroupName
      x-stackql-resource-name: application
      x-stackql-primaryIdentifier:
        - ApplicationARN
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.applicationinsights.applications
      x-cfn-schema-name: Application
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationARN') as application_ar_n
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationInsights::Application'
    application:
      name: application
      id: aws.applicationinsights.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - ApplicationARN
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceGroupName') as resource_group_name,
              JSON_EXTRACT(Properties, '$.ApplicationARN') as application_ar_n,
              JSON_EXTRACT(Properties, '$.CWEMonitorEnabled') as c_we_monitor_enabled,
              JSON_EXTRACT(Properties, '$.OpsCenterEnabled') as ops_center_enabled,
              JSON_EXTRACT(Properties, '$.OpsItemSNSTopicArn') as ops_item_sn_stopic_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CustomComponents') as custom_components,
              JSON_EXTRACT(Properties, '$.LogPatternSets') as log_pattern_sets,
              JSON_EXTRACT(Properties, '$.AutoConfigurationEnabled') as auto_configuration_enabled,
              JSON_EXTRACT(Properties, '$.ComponentMonitoringSettings') as component_monitoring_settings,
              JSON_EXTRACT(Properties, '$.GroupingType') as grouping_type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationInsights::Application'
