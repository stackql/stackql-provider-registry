openapi: 3.0.0
info:
  title: APS
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    RuleGroupsNamespace:
      type: object
      properties:
        Workspace:
          description: Required to identify a specific APS Workspace associated with this RuleGroupsNamespace.
          type: string
          pattern: ^arn:(aws|aws-us-gov|aws-cn):aps:[a-z0-9-]+:[0-9]+:workspace/[a-zA-Z0-9-]+$
        Name:
          description: The RuleGroupsNamespace name.
          type: string
          minLength: 1
          maxLength: 64
        Data:
          description: The RuleGroupsNamespace data.
          type: string
        Arn:
          description: The RuleGroupsNamespace ARN.
          type: string
          pattern: ^arn:(aws|aws-us-gov|aws-cn):aps:[a-z0-9-]+:[0-9]+:rulegroupsnamespace/[a-zA-Z0-9-]+/[0-9A-Za-z][-.0-9A-Z_a-z]*$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Workspace
        - Data
        - Name
      x-stackql-resource-name: rule_groups_namespace
      x-stackql-primaryIdentifier:
        - Arn
    LoggingConfiguration:
      description: Logging configuration
      type: object
      properties:
        LogGroupArn:
          description: CloudWatch log group ARN
          type: string
          minLength: 0
          maxLength: 512
      additionalProperties: false
    Workspace:
      type: object
      properties:
        WorkspaceId:
          description: Required to identify a specific APS Workspace.
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]{1,99}$
          minLength: 1
          maxLength: 100
        Alias:
          description: AMP Workspace alias.
          type: string
          minLength: 0
          maxLength: 100
        Arn:
          description: Workspace arn.
          type: string
          pattern: ^arn:(aws|aws-us-gov|aws-cn):aps:[a-z0-9-]+:[0-9]+:workspace/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        AlertManagerDefinition:
          description: The AMP Workspace alert manager definition data
          type: string
        PrometheusEndpoint:
          description: AMP Workspace prometheus endpoint
          type: string
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: workspace
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    rule_groups_namespaces:
      name: rule_groups_namespaces
      id: aws.aps.rule_groups_namespaces
      x-cfn-schema-name: RuleGroupsNamespace
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::APS::RuleGroupsNamespace'
    rule_groups_namespace:
      name: rule_groups_namespace
      id: aws.aps.rule_groups_namespace
      x-cfn-schema-name: RuleGroupsNamespace
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Workspace') as workspace,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Data') as data,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::APS::RuleGroupsNamespace'
    workspaces:
      name: workspaces
      id: aws.aps.workspaces
      x-cfn-schema-name: Workspace
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::APS::Workspace'
    workspace:
      name: workspace
      id: aws.aps.workspace
      x-cfn-schema-name: Workspace
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AlertManagerDefinition') as alert_manager_definition,
              JSON_EXTRACT(Properties, '$.PrometheusEndpoint') as prometheus_endpoint,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration.LogGroupArn') as logging_configuration_log_group_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::APS::Workspace'
