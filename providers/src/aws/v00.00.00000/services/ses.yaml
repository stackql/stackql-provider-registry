openapi: 3.0.0
info:
  title: SES
  version: 1.0.0
paths: {}
components:
  schemas:
    TrackingOptions:
      description: An object that defines the open and click tracking options for emails that you send using the configuration set.
      type: object
      additionalProperties: false
      properties:
        CustomRedirectDomain:
          type: string
          description: The domain to use for tracking open and click events.
    DeliveryOptions:
      description: An object that defines the dedicated IP pool that is used to send emails that you send using the configuration set.
      type: object
      additionalProperties: false
      properties:
        TlsPolicy:
          type: string
          description: Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is Require , messages are only delivered if a TLS connection can be established. If the value is Optional , messages can be delivered in plain text if a TLS connection can't be established.
          pattern: REQUIRE|OPTIONAL
        SendingPoolName:
          type: string
          description: The name of the dedicated IP pool to associate with the configuration set.
    ReputationOptions:
      description: An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
      type: object
      additionalProperties: false
      properties:
        ReputationMetricsEnabled:
          type: boolean
          description: If true , tracking of reputation metrics is enabled for the configuration set. If false , tracking of reputation metrics is disabled for the configuration set.
          pattern: true|false
    SendingOptions:
      description: An object that defines whether or not Amazon SES can send email that you send using the configuration set.
      type: object
      additionalProperties: false
      properties:
        SendingEnabled:
          type: boolean
          pattern: true|false
    SuppressionOptions:
      description: An object that contains information about the suppression list preferences for your account.
      type: object
      additionalProperties: false
      properties:
        SuppressedReasons:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: A list that contains the reasons that email addresses are automatically added to the suppression list for your account.
          items:
            type: string
            description: The reason that the address was added to the suppression list for your account
            pattern: BOUNCE|COMPLAINT
    DashboardOptions:
      type: object
      description: Preferences regarding the Dashboard feature.
      additionalProperties: false
      properties:
        EngagementMetrics:
          type: string
          description: Whether emails sent with this configuration set have engagement tracking enabled.
          pattern: ENABLED|DISABLED
      required:
        - EngagementMetrics
    GuardianOptions:
      type: object
      description: Preferences regarding the Guardian feature.
      additionalProperties: false
      properties:
        OptimizedSharedDelivery:
          type: string
          description: Whether emails sent with this configuration set have optimized delivery algorithm enabled.
          pattern: ENABLED|DISABLED
      required:
        - OptimizedSharedDelivery
    VdmOptions:
      description: An object that contains Virtual Deliverability Manager (VDM) settings for this configuration set.
      type: object
      additionalProperties: false
      properties:
        DashboardOptions:
          $ref: '#/components/schemas/DashboardOptions'
        GuardianOptions:
          $ref: '#/components/schemas/GuardianOptions'
    ConfigurationSet:
      type: object
      properties:
        Name:
          description: The name of the configuration set.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,64}$
        TrackingOptions:
          $ref: '#/components/schemas/TrackingOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/DeliveryOptions'
        ReputationOptions:
          $ref: '#/components/schemas/ReputationOptions'
        SendingOptions:
          $ref: '#/components/schemas/SendingOptions'
        SuppressionOptions:
          $ref: '#/components/schemas/SuppressionOptions'
        VdmOptions:
          $ref: '#/components/schemas/VdmOptions'
      x-stackql-resource-name: configuration_set
      x-stackql-primaryIdentifier:
        - Name
    EventDestination:
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The name of the event destination set.
          type: string
          pattern: ^[a-zA-Z0-9_-]{0,64}$
        Enabled:
          description: 'Sets whether Amazon SES publishes events to this destination when you send an email with the associated configuration set. Set to true to enable publishing to this destination; set to false to prevent publishing to this destination. The default value is false.   '
          type: boolean
        MatchingEventTypes:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: The type of email sending events, send, reject, bounce, complaint, delivery, open, click, renderingFailure, deliveryDelay, and subscription.
          items:
            type: string
        CloudWatchDestination:
          description: An object that contains the names, default values, and sources of the dimensions associated with an Amazon CloudWatch event destination.
          $ref: '#/components/schemas/CloudWatchDestination'
        KinesisFirehoseDestination:
          description: An object that contains the delivery stream ARN and the IAM role ARN associated with an Amazon Kinesis Firehose event destination.
          $ref: '#/components/schemas/KinesisFirehoseDestination'
        SnsDestination:
          description: An object that contains SNS topic ARN associated event destination.
          $ref: '#/components/schemas/SnsDestination'
      required:
        - MatchingEventTypes
    SnsDestination:
      type: object
      additionalProperties: false
      description: An object that contains SNS topic ARN associated event destination.
      properties:
        TopicARN:
          type: string
          minLength: 36
          maxLength: 1024
          pattern: ^arn:aws[a-z0-9-]*:sns:[a-z0-9-]+:\d{12}:[^:]+$
      required:
        - TopicARN
    KinesisFirehoseDestination:
      type: object
      additionalProperties: false
      description: An object that contains the delivery stream ARN and the IAM role ARN associated with an Amazon Kinesis Firehose event destination.
      properties:
        IAMRoleARN:
          description: The ARN of the IAM role under which Amazon SES publishes email sending events to the Amazon Kinesis Firehose stream.
          type: string
        DeliveryStreamARN:
          description: The ARN of the Amazon Kinesis Firehose stream that email sending events should be published to.
          type: string
      required:
        - IAMRoleARN
        - DeliveryStreamARN
    CloudWatchDestination:
      type: object
      additionalProperties: false
      description: An object that contains the names, default values, and sources of the dimensions associated with an Amazon CloudWatch event destination.
      properties:
        DimensionConfigurations:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          description: A list of dimensions upon which to categorize your emails when you publish email sending events to Amazon CloudWatch.
          items:
            $ref: '#/components/schemas/DimensionConfiguration'
    DimensionConfiguration:
      type: object
      additionalProperties: false
      description: A list of dimensions upon which to categorize your emails when you publish email sending events to Amazon CloudWatch.
      properties:
        DimensionValueSource:
          description: The place where Amazon SES finds the value of a dimension to publish to Amazon CloudWatch. To use the message tags that you specify using an X-SES-MESSAGE-TAGS header or a parameter to the SendEmail/SendRawEmail API, specify messageTag. To use your own email headers, specify emailHeader. To put a custom tag on any link included in your email, specify linkTag.
          type: string
        DefaultDimensionValue:
          description: The default value of the dimension that is published to Amazon CloudWatch if you do not provide the value of the dimension when you send an email.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,256}$
          maxLength: 256
          minLength: 1
        DimensionName:
          description: The name of an Amazon CloudWatch dimension associated with an email sending metric.
          type: string
          pattern: ^[a-zA-Z0-9_:-]{1,256}$
          maxLength: 256
          minLength: 1
      required:
        - DimensionValueSource
        - DefaultDimensionValue
        - DimensionName
    ConfigurationSetEventDestination:
      type: object
      properties:
        Id:
          type: string
        ConfigurationSetName:
          description: The name of the configuration set that contains the event destination.
          type: string
        EventDestination:
          description: The event destination object.
          $ref: '#/components/schemas/EventDestination'
      required:
        - ConfigurationSetName
        - EventDestination
      x-stackql-resource-name: configuration_set_event_destination
      x-stackql-primaryIdentifier:
        - Id
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Topic:
      type: object
      properties:
        TopicName:
          description: The name of the topic.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,64}$
        DisplayName:
          description: The display name of the topic.
          type: string
          minLength: 0
          maxLength: 128
        Description:
          description: The description of the topic.
          type: string
          minLength: 0
          maxLength: 500
        DefaultSubscriptionStatus:
          type: string
      required:
        - TopicName
        - DisplayName
        - DefaultSubscriptionStatus
      additionalProperties: false
    ContactList:
      type: object
      properties:
        ContactListName:
          description: The name of the contact list.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,64}$
        Description:
          description: The description of the contact list.
          type: string
          maxLength: 500
        Topics:
          description: The topics associated with the contact list.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Topic'
          minItems: 0
          maxItems: 20
        Tags:
          description: The tags (keys and values) associated with the contact list.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
      x-stackql-resource-name: contact_list
      x-stackql-primaryIdentifier:
        - ContactListName
    DedicatedIpPool:
      type: object
      properties:
        PoolName:
          type: string
          description: The name of the dedicated IP pool.
          pattern: ^[a-z0-9_-]{0,64}$
        ScalingMode:
          type: string
          description: Specifies whether the dedicated IP pool is managed or not. The default value is STANDARD.
          pattern: ^(STANDARD|MANAGED)$
      x-stackql-resource-name: dedicated_ip_pool
      x-stackql-primaryIdentifier:
        - PoolName
    DkimSigningAttributes:
      type: object
      additionalProperties: false
      description: If your request includes this object, Amazon SES configures the identity to use Bring Your Own DKIM (BYODKIM) for DKIM authentication purposes, or, configures the key length to be used for Easy DKIM.
      properties:
        DomainSigningSelector:
          type: string
          description: '[Bring Your Own DKIM] A string that''s used to identify a public key in the DNS configuration for a domain.'
        DomainSigningPrivateKey:
          type: string
          description: '[Bring Your Own DKIM] A private key that''s used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.'
        NextSigningKeyLength:
          type: string
          description: '[Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day.'
          pattern: RSA_1024_BIT|RSA_2048_BIT
    ConfigurationSetAttributes:
      type: object
      additionalProperties: false
      description: Used to associate a configuration set with an email identity.
      properties:
        ConfigurationSetName:
          type: string
          description: The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
    DkimAttributes:
      type: object
      additionalProperties: false
      description: Used to enable or disable DKIM authentication for an email identity.
      properties:
        SigningEnabled:
          type: boolean
          description: Sets the DKIM signing configuration for the identity. When you set this value true, then the messages that are sent from the identity are signed using DKIM. If you set this value to false, your messages are sent without DKIM signing.
    MailFromAttributes:
      type: object
      additionalProperties: false
      description: Used to enable or disable the custom Mail-From domain configuration for an email identity.
      properties:
        MailFromDomain:
          type: string
          description: The custom MAIL FROM domain that you want the verified identity to use
        BehaviorOnMxFailure:
          type: string
          description: The action to take if the required MX record isn't found when you send an email. When you set this value to UseDefaultValue , the mail is sent using amazonses.com as the MAIL FROM domain. When you set this value to RejectMessage , the Amazon SES API v2 returns a MailFromDomainNotVerified error, and doesn't attempt to deliver the email.
          pattern: USE_DEFAULT_VALUE|REJECT_MESSAGE
    FeedbackAttributes:
      type: object
      additionalProperties: false
      description: Used to enable or disable feedback forwarding for an identity.
      properties:
        EmailForwardingEnabled:
          type: boolean
          description: If the value is true, you receive email notifications when bounce or complaint events occur
    EmailIdentity:
      type: object
      properties:
        EmailIdentity:
          type: string
          description: The email address or domain to verify.
        ConfigurationSetAttributes:
          $ref: '#/components/schemas/ConfigurationSetAttributes'
        DkimSigningAttributes:
          $ref: '#/components/schemas/DkimSigningAttributes'
        DkimAttributes:
          $ref: '#/components/schemas/DkimAttributes'
        MailFromAttributes:
          $ref: '#/components/schemas/MailFromAttributes'
        FeedbackAttributes:
          $ref: '#/components/schemas/FeedbackAttributes'
        DkimDNSTokenName1:
          type: string
        DkimDNSTokenName2:
          type: string
        DkimDNSTokenName3:
          type: string
        DkimDNSTokenValue1:
          type: string
        DkimDNSTokenValue2:
          type: string
        DkimDNSTokenValue3:
          type: string
      required:
        - EmailIdentity
      x-stackql-resource-name: email_identity
      x-stackql-primaryIdentifier:
        - EmailIdentity
    Filter:
      type: object
      additionalProperties: false
      properties:
        IpFilter:
          $ref: '#/components/schemas/IpFilter'
        Name:
          type: string
      required:
        - IpFilter
    IpFilter:
      type: object
      additionalProperties: false
      properties:
        Policy:
          type: string
        Cidr:
          type: string
      required:
        - Policy
        - Cidr
    ReceiptFilter:
      type: object
      properties:
        Id:
          type: string
        Filter:
          $ref: '#/components/schemas/Filter'
      required:
        - Filter
      x-stackql-resource-name: receipt_filter
      x-stackql-primaryIdentifier:
        - Id
    Rule:
      type: object
      additionalProperties: false
      properties:
        ScanEnabled:
          type: boolean
        Recipients:
          type: array
          uniqueItems: false
          items:
            type: string
        Actions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Action'
        Enabled:
          type: boolean
        Name:
          type: string
        TlsPolicy:
          type: string
    Action:
      type: object
      additionalProperties: false
      properties:
        BounceAction:
          $ref: '#/components/schemas/BounceAction'
        S3Action:
          $ref: '#/components/schemas/S3Action'
        StopAction:
          $ref: '#/components/schemas/StopAction'
        SNSAction:
          $ref: '#/components/schemas/SNSAction'
        WorkmailAction:
          $ref: '#/components/schemas/WorkmailAction'
        AddHeaderAction:
          $ref: '#/components/schemas/AddHeaderAction'
        LambdaAction:
          $ref: '#/components/schemas/LambdaAction'
    SNSAction:
      type: object
      additionalProperties: false
      properties:
        TopicArn:
          type: string
        Encoding:
          type: string
    WorkmailAction:
      type: object
      additionalProperties: false
      properties:
        TopicArn:
          type: string
        OrganizationArn:
          type: string
      required:
        - OrganizationArn
    StopAction:
      type: object
      additionalProperties: false
      properties:
        Scope:
          type: string
        TopicArn:
          type: string
      required:
        - Scope
    AddHeaderAction:
      type: object
      additionalProperties: false
      properties:
        HeaderValue:
          type: string
        HeaderName:
          type: string
      required:
        - HeaderName
        - HeaderValue
    BounceAction:
      type: object
      additionalProperties: false
      properties:
        Sender:
          type: string
        SmtpReplyCode:
          type: string
        Message:
          type: string
        TopicArn:
          type: string
        StatusCode:
          type: string
      required:
        - Sender
        - SmtpReplyCode
        - Message
    LambdaAction:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
        TopicArn:
          type: string
        InvocationType:
          type: string
      required:
        - FunctionArn
    S3Action:
      type: object
      additionalProperties: false
      properties:
        BucketName:
          type: string
        KmsKeyArn:
          type: string
        TopicArn:
          type: string
        ObjectKeyPrefix:
          type: string
      required:
        - BucketName
    ReceiptRule:
      type: object
      properties:
        Id:
          type: string
        After:
          type: string
        Rule:
          $ref: '#/components/schemas/Rule'
        RuleSetName:
          type: string
      required:
        - RuleSetName
        - Rule
      x-stackql-resource-name: receipt_rule
      x-stackql-primaryIdentifier:
        - Id
    ReceiptRuleSet:
      type: object
      properties:
        Id:
          type: string
        RuleSetName:
          type: string
      x-stackql-resource-name: receipt_rule_set
      x-stackql-primaryIdentifier:
        - Id
    Template:
      type: object
      properties:
        Id:
          type: string
        Template:
          $ref: '#/components/schemas/Template'
      x-stackql-resource-name: template
      x-stackql-primaryIdentifier:
        - Id
    DashboardAttributes:
      type: object
      additionalProperties: false
      description: Preferences regarding the Dashboard feature.
      properties:
        EngagementMetrics:
          type: string
          description: Whether emails sent from this account have engagement tracking enabled.
          pattern: ENABLED|DISABLED
    GuardianAttributes:
      type: object
      additionalProperties: false
      description: Preferences regarding the Guardian feature.
      properties:
        OptimizedSharedDelivery:
          type: string
          description: Whether emails sent from this account have optimized delivery algorithm enabled.
          pattern: ENABLED|DISABLED
    VdmAttributes:
      type: object
      properties:
        VdmAttributesResourceId:
          type: string
          description: Unique identifier for this resource
        DashboardAttributes:
          $ref: '#/components/schemas/DashboardAttributes'
        GuardianAttributes:
          $ref: '#/components/schemas/GuardianAttributes'
      x-stackql-resource-name: vdm_attributes
      x-stackql-primaryIdentifier:
        - VdmAttributesResourceId
  x-stackQL-resources:
    configuration_sets:
      name: configuration_sets
      id: aws.ses.configuration_sets
      x-cfn-schema-name: ConfigurationSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::ConfigurationSet'
    configuration_set:
      name: configuration_set
      id: aws.ses.configuration_set
      x-cfn-schema-name: ConfigurationSet
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.TrackingOptions.CustomRedirectDomain') as tracking_options_custom_redirect_domain,
              JSON_EXTRACT(Properties, '$.DeliveryOptions.TlsPolicy') as delivery_options_tls_policy,
              JSON_EXTRACT(Properties, '$.DeliveryOptions.SendingPoolName') as delivery_options_sending_pool_name,
              JSON_EXTRACT(Properties, '$.ReputationOptions.ReputationMetricsEnabled') as reputation_options_reputation_metrics_enabled,
              JSON_EXTRACT(Properties, '$.SendingOptions.SendingEnabled') as sending_options_sending_enabled,
              JSON_EXTRACT(Properties, '$.SuppressionOptions.SuppressedReasons') as suppression_options_suppressed_reasons,
              JSON_EXTRACT(Properties, '$.VdmOptions.DashboardOptions') as vdm_options_dashboard_options,
              JSON_EXTRACT(Properties, '$.VdmOptions.GuardianOptions') as vdm_options_guardian_options
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::ConfigurationSet'
    configuration_set_event_destinations:
      name: configuration_set_event_destinations
      id: aws.ses.configuration_set_event_destinations
      x-cfn-schema-name: ConfigurationSetEventDestination
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::ConfigurationSetEventDestination'
    configuration_set_event_destination:
      name: configuration_set_event_destination
      id: aws.ses.configuration_set_event_destination
      x-cfn-schema-name: ConfigurationSetEventDestination
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ConfigurationSetName') as configuration_set_name,
              JSON_EXTRACT(Properties, '$.EventDestination.Name') as event_destination_name,
              JSON_EXTRACT(Properties, '$.EventDestination.Enabled') as event_destination_enabled,
              JSON_EXTRACT(Properties, '$.EventDestination.MatchingEventTypes') as event_destination_matching_event_types,
              JSON_EXTRACT(Properties, '$.EventDestination.CloudWatchDestination') as event_destination_cloud_watch_destination,
              JSON_EXTRACT(Properties, '$.EventDestination.KinesisFirehoseDestination') as event_destination_kinesis_firehose_destination,
              JSON_EXTRACT(Properties, '$.EventDestination.SnsDestination') as event_destination_sns_destination
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::ConfigurationSetEventDestination'
    contact_lists:
      name: contact_lists
      id: aws.ses.contact_lists
      x-cfn-schema-name: ContactList
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactListName') as contact_list_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::ContactList'
    contact_list:
      name: contact_list
      id: aws.ses.contact_list
      x-cfn-schema-name: ContactList
      x-type: get
      x-identifiers:
        - ContactListName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactListName') as contact_list_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Topics') as topics,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::ContactList'
    dedicated_ip_pools:
      name: dedicated_ip_pools
      id: aws.ses.dedicated_ip_pools
      x-cfn-schema-name: DedicatedIpPool
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PoolName') as pool_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::DedicatedIpPool'
    dedicated_ip_pool:
      name: dedicated_ip_pool
      id: aws.ses.dedicated_ip_pool
      x-cfn-schema-name: DedicatedIpPool
      x-type: get
      x-identifiers:
        - PoolName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PoolName') as pool_name,
              JSON_EXTRACT(Properties, '$.ScalingMode') as scaling_mode
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::DedicatedIpPool'
    email_identities:
      name: email_identities
      id: aws.ses.email_identities
      x-cfn-schema-name: EmailIdentity
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EmailIdentity') as email_identity
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::EmailIdentity'
    email_identity:
      name: email_identity
      id: aws.ses.email_identity
      x-cfn-schema-name: EmailIdentity
      x-type: get
      x-identifiers:
        - EmailIdentity
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EmailIdentity') as email_identity,
              JSON_EXTRACT(Properties, '$.ConfigurationSetAttributes.ConfigurationSetName') as configuration_set_attributes_configuration_set_name,
              JSON_EXTRACT(Properties, '$.DkimSigningAttributes.DomainSigningSelector') as dkim_signing_attributes_domain_signing_selector,
              JSON_EXTRACT(Properties, '$.DkimSigningAttributes.DomainSigningPrivateKey') as dkim_signing_attributes_domain_signing_private_key,
              JSON_EXTRACT(Properties, '$.DkimSigningAttributes.NextSigningKeyLength') as dkim_signing_attributes_next_signing_key_length,
              JSON_EXTRACT(Properties, '$.DkimAttributes.SigningEnabled') as dkim_attributes_signing_enabled,
              JSON_EXTRACT(Properties, '$.MailFromAttributes.MailFromDomain') as mail_from_attributes_mail_from_domain,
              JSON_EXTRACT(Properties, '$.MailFromAttributes.BehaviorOnMxFailure') as mail_from_attributes_behavior_on_mx_failure,
              JSON_EXTRACT(Properties, '$.FeedbackAttributes.EmailForwardingEnabled') as feedback_attributes_email_forwarding_enabled,
              JSON_EXTRACT(Properties, '$.DkimDNSTokenName1') as dkim_dn_stoken_name1,
              JSON_EXTRACT(Properties, '$.DkimDNSTokenName2') as dkim_dn_stoken_name2,
              JSON_EXTRACT(Properties, '$.DkimDNSTokenName3') as dkim_dn_stoken_name3,
              JSON_EXTRACT(Properties, '$.DkimDNSTokenValue1') as dkim_dn_stoken_value1,
              JSON_EXTRACT(Properties, '$.DkimDNSTokenValue2') as dkim_dn_stoken_value2,
              JSON_EXTRACT(Properties, '$.DkimDNSTokenValue3') as dkim_dn_stoken_value3
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::EmailIdentity'
    receipt_filters:
      name: receipt_filters
      id: aws.ses.receipt_filters
      x-cfn-schema-name: ReceiptFilter
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::ReceiptFilter'
    receipt_filter:
      name: receipt_filter
      id: aws.ses.receipt_filter
      x-cfn-schema-name: ReceiptFilter
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Filter.IpFilter') as filter_ip_filter,
              JSON_EXTRACT(Properties, '$.Filter.Name') as filter_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::ReceiptFilter'
    receipt_rules:
      name: receipt_rules
      id: aws.ses.receipt_rules
      x-cfn-schema-name: ReceiptRule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::ReceiptRule'
    receipt_rule:
      name: receipt_rule
      id: aws.ses.receipt_rule
      x-cfn-schema-name: ReceiptRule
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.After') as after,
              JSON_EXTRACT(Properties, '$.Rule.ScanEnabled') as rule_scan_enabled,
              JSON_EXTRACT(Properties, '$.Rule.Recipients') as rule_recipients,
              JSON_EXTRACT(Properties, '$.Rule.Actions') as rule_actions,
              JSON_EXTRACT(Properties, '$.Rule.Enabled') as rule_enabled,
              JSON_EXTRACT(Properties, '$.Rule.Name') as rule_name,
              JSON_EXTRACT(Properties, '$.Rule.TlsPolicy') as rule_tls_policy,
              JSON_EXTRACT(Properties, '$.RuleSetName') as rule_set_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::ReceiptRule'
    receipt_rule_sets:
      name: receipt_rule_sets
      id: aws.ses.receipt_rule_sets
      x-cfn-schema-name: ReceiptRuleSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::ReceiptRuleSet'
    receipt_rule_set:
      name: receipt_rule_set
      id: aws.ses.receipt_rule_set
      x-cfn-schema-name: ReceiptRuleSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RuleSetName') as rule_set_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::ReceiptRuleSet'
    templates:
      name: templates
      id: aws.ses.templates
      x-cfn-schema-name: Template
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SES::Template'
    template:
      name: template
      id: aws.ses.template
      x-cfn-schema-name: Template
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Template.Id') as template_id,
              JSON_EXTRACT(Properties, '$.Template.Template') as template_template
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::Template'
    vdm_attributes:
      name: vdm_attributes
      id: aws.ses.vdm_attributes
      x-cfn-schema-name: VdmAttributes
      x-type: get
      x-identifiers:
        - VdmAttributesResourceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.VdmAttributesResourceId') as vdm_attributes_resource_id,
              JSON_EXTRACT(Properties, '$.DashboardAttributes.EngagementMetrics') as dashboard_attributes_engagement_metrics,
              JSON_EXTRACT(Properties, '$.GuardianAttributes.OptimizedSharedDelivery') as guardian_attributes_optimized_shared_delivery
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SES::VdmAttributes'
