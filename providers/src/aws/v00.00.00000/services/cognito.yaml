openapi: 3.0.0
info:
  title: Cognito
  version: 1.0.0
paths: {}
components:
  schemas:
    PushSync:
      type: object
      additionalProperties: false
      properties:
        ApplicationArns:
          type: array
          uniqueItems: false
          items:
            type: string
        RoleArn:
          type: string
    CognitoIdentityProvider:
      type: object
      additionalProperties: false
      properties:
        ServerSideTokenCheck:
          type: boolean
        ProviderName:
          type: string
        ClientId:
          type: string
    CognitoStreams:
      type: object
      additionalProperties: false
      properties:
        StreamingStatus:
          type: string
        StreamName:
          type: string
        RoleArn:
          type: string
    IdentityPool:
      type: object
      properties:
        PushSync:
          $ref: '#/components/schemas/PushSync'
        CognitoIdentityProviders:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CognitoIdentityProvider'
        DeveloperProviderName:
          type: string
        CognitoStreams:
          $ref: '#/components/schemas/CognitoStreams'
        SupportedLoginProviders:
          type: object
        Name:
          type: string
        CognitoEvents:
          type: object
        Id:
          type: string
        IdentityPoolName:
          type: string
        AllowUnauthenticatedIdentities:
          type: boolean
        SamlProviderARNs:
          type: array
          uniqueItems: false
          items:
            type: string
        OpenIdConnectProviderARNs:
          type: array
          uniqueItems: false
          items:
            type: string
        AllowClassicFlow:
          type: boolean
      required:
        - AllowUnauthenticatedIdentities
      x-stackql-resource-name: identity_pool
      x-stackql-primaryIdentifier:
        - Id
    IdentityPoolRoleAttachment:
      type: object
      properties:
        IdentityPoolId:
          type: string
        Roles:
          type: object
        Id:
          type: string
        RoleMappings:
          type: object
      required:
        - IdentityPoolId
      x-stackql-resource-name: identity_pool_role_attachment
      x-stackql-primaryIdentifier:
        - Id
    Policies:
      type: object
      additionalProperties: false
      properties:
        PasswordPolicy:
          $ref: '#/components/schemas/PasswordPolicy'
    VerificationMessageTemplate:
      type: object
      additionalProperties: false
      properties:
        EmailMessageByLink:
          type: string
        EmailMessage:
          type: string
        SmsMessage:
          type: string
        EmailSubject:
          type: string
        DefaultEmailOption:
          type: string
        EmailSubjectByLink:
          type: string
    NumberAttributeConstraints:
      type: object
      additionalProperties: false
      properties:
        MinValue:
          type: string
        MaxValue:
          type: string
    InviteMessageTemplate:
      type: object
      additionalProperties: false
      properties:
        EmailSubject:
          type: string
        EmailMessage:
          type: string
        SMSMessage:
          type: string
    AdminCreateUserConfig:
      type: object
      additionalProperties: false
      properties:
        InviteMessageTemplate:
          $ref: '#/components/schemas/InviteMessageTemplate'
        UnusedAccountValidityDays:
          type: integer
        AllowAdminCreateUserOnly:
          type: boolean
    UsernameConfiguration:
      type: object
      additionalProperties: false
      properties:
        CaseSensitive:
          type: boolean
    UserPoolAddOns:
      type: object
      additionalProperties: false
      properties:
        AdvancedSecurityMode:
          type: string
    RecoveryOption:
      type: object
      additionalProperties: false
      properties:
        Priority:
          type: integer
        Name:
          type: string
    StringAttributeConstraints:
      type: object
      additionalProperties: false
      properties:
        MaxLength:
          type: string
        MinLength:
          type: string
    UserAttributeUpdateSettings:
      type: object
      additionalProperties: false
      properties:
        AttributesRequireVerificationBeforeUpdate:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - AttributesRequireVerificationBeforeUpdate
    CustomSMSSender:
      type: object
      additionalProperties: false
      properties:
        LambdaArn:
          type: string
        LambdaVersion:
          type: string
    EmailConfiguration:
      type: object
      additionalProperties: false
      properties:
        ReplyToEmailAddress:
          type: string
        ConfigurationSet:
          type: string
        EmailSendingAccount:
          type: string
        From:
          type: string
        SourceArn:
          type: string
    SmsConfiguration:
      type: object
      additionalProperties: false
      properties:
        SnsCallerArn:
          type: string
        SnsRegion:
          type: string
        ExternalId:
          type: string
    PasswordPolicy:
      type: object
      additionalProperties: false
      properties:
        RequireNumbers:
          type: boolean
        MinimumLength:
          type: integer
        TemporaryPasswordValidityDays:
          type: integer
        RequireUppercase:
          type: boolean
        RequireLowercase:
          type: boolean
        RequireSymbols:
          type: boolean
    LambdaConfig:
      type: object
      additionalProperties: false
      properties:
        CreateAuthChallenge:
          type: string
        PreSignUp:
          type: string
        KMSKeyID:
          type: string
        UserMigration:
          type: string
        PostAuthentication:
          type: string
        VerifyAuthChallengeResponse:
          type: string
        PreAuthentication:
          type: string
        DefineAuthChallenge:
          type: string
        PreTokenGeneration:
          type: string
        CustomSMSSender:
          $ref: '#/components/schemas/CustomSMSSender'
        PostConfirmation:
          type: string
        CustomMessage:
          type: string
        CustomEmailSender:
          $ref: '#/components/schemas/CustomEmailSender'
    CustomEmailSender:
      type: object
      additionalProperties: false
      properties:
        LambdaArn:
          type: string
        LambdaVersion:
          type: string
    SchemaAttribute:
      type: object
      additionalProperties: false
      properties:
        DeveloperOnlyAttribute:
          type: boolean
        Mutable:
          type: boolean
        AttributeDataType:
          type: string
        StringAttributeConstraints:
          $ref: '#/components/schemas/StringAttributeConstraints'
        Required:
          type: boolean
        NumberAttributeConstraints:
          $ref: '#/components/schemas/NumberAttributeConstraints'
        Name:
          type: string
    DeviceConfiguration:
      type: object
      additionalProperties: false
      properties:
        DeviceOnlyRememberedOnUserPrompt:
          type: boolean
        ChallengeRequiredOnNewDevice:
          type: boolean
    AccountRecoverySetting:
      type: object
      additionalProperties: false
      properties:
        RecoveryMechanisms:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/RecoveryOption'
    UserPool:
      type: object
      properties:
        UserPoolTags:
          type: object
        Policies:
          $ref: '#/components/schemas/Policies'
        Schema:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SchemaAttribute'
        AdminCreateUserConfig:
          $ref: '#/components/schemas/AdminCreateUserConfig'
        UsernameConfiguration:
          $ref: '#/components/schemas/UsernameConfiguration'
        UserPoolName:
          type: string
        SmsVerificationMessage:
          type: string
        UserAttributeUpdateSettings:
          $ref: '#/components/schemas/UserAttributeUpdateSettings'
        EmailConfiguration:
          $ref: '#/components/schemas/EmailConfiguration'
        SmsConfiguration:
          $ref: '#/components/schemas/SmsConfiguration'
        EmailVerificationSubject:
          type: string
        AccountRecoverySetting:
          $ref: '#/components/schemas/AccountRecoverySetting'
        VerificationMessageTemplate:
          $ref: '#/components/schemas/VerificationMessageTemplate'
        ProviderURL:
          type: string
        MfaConfiguration:
          type: string
        DeletionProtection:
          type: string
        SmsAuthenticationMessage:
          type: string
        ProviderName:
          type: string
        UserPoolAddOns:
          $ref: '#/components/schemas/UserPoolAddOns'
        AliasAttributes:
          type: array
          uniqueItems: false
          items:
            type: string
        EnabledMfas:
          type: array
          uniqueItems: false
          items:
            type: string
        LambdaConfig:
          $ref: '#/components/schemas/LambdaConfig'
        Id:
          type: string
        Arn:
          type: string
        UsernameAttributes:
          type: array
          uniqueItems: false
          items:
            type: string
        AutoVerifiedAttributes:
          type: array
          uniqueItems: false
          items:
            type: string
        DeviceConfiguration:
          $ref: '#/components/schemas/DeviceConfiguration'
        EmailVerificationMessage:
          type: string
      x-stackql-resource-name: user_pool
      x-stackql-primaryIdentifier:
        - Id
    AnalyticsConfiguration:
      type: object
      additionalProperties: false
      properties:
        ApplicationArn:
          type: string
        ApplicationId:
          type: string
        UserDataShared:
          type: boolean
        RoleArn:
          type: string
        ExternalId:
          type: string
    TokenValidityUnits:
      type: object
      additionalProperties: false
      properties:
        IdToken:
          type: string
        RefreshToken:
          type: string
        AccessToken:
          type: string
    UserPoolClient:
      type: object
      properties:
        AnalyticsConfiguration:
          $ref: '#/components/schemas/AnalyticsConfiguration'
        GenerateSecret:
          type: boolean
        CallbackURLs:
          type: array
          uniqueItems: false
          items:
            type: string
        IdTokenValidity:
          type: integer
        TokenValidityUnits:
          $ref: '#/components/schemas/TokenValidityUnits'
        ReadAttributes:
          type: array
          uniqueItems: false
          items:
            type: string
        AllowedOAuthFlowsUserPoolClient:
          type: boolean
        DefaultRedirectURI:
          type: string
        Name:
          type: string
        ClientName:
          type: string
        ExplicitAuthFlows:
          type: array
          uniqueItems: false
          items:
            type: string
        AccessTokenValidity:
          type: integer
        EnableTokenRevocation:
          type: boolean
        EnablePropagateAdditionalUserContextData:
          type: boolean
        AuthSessionValidity:
          type: integer
        AllowedOAuthScopes:
          type: array
          uniqueItems: false
          items:
            type: string
        SupportedIdentityProviders:
          type: array
          uniqueItems: false
          items:
            type: string
        UserPoolId:
          type: string
        AllowedOAuthFlows:
          type: array
          uniqueItems: false
          items:
            type: string
        ClientSecret:
          type: string
        LogoutURLs:
          type: array
          uniqueItems: false
          items:
            type: string
        RefreshTokenValidity:
          type: integer
        Id:
          type: string
        WriteAttributes:
          type: array
          uniqueItems: false
          items:
            type: string
        PreventUserExistenceErrors:
          type: string
      required:
        - UserPoolId
      x-stackql-resource-name: user_pool_client
      x-stackql-primaryIdentifier:
        - Id
    CustomDomainConfigType:
      type: object
      additionalProperties: false
      properties:
        CertificateArn:
          type: string
    UserPoolDomain:
      type: object
      properties:
        CloudFrontDistribution:
          type: string
        UserPoolId:
          type: string
        Id:
          type: string
        Domain:
          type: string
        CustomDomainConfig:
          $ref: '#/components/schemas/CustomDomainConfigType'
      required:
        - UserPoolId
        - Domain
      x-stackql-resource-name: user_pool_domain
      x-stackql-primaryIdentifier:
        - Id
    UserPoolGroup:
      type: object
      properties:
        GroupName:
          type: string
        Description:
          type: string
        UserPoolId:
          type: string
        Id:
          type: string
        Precedence:
          type: number
        RoleArn:
          type: string
      required:
        - UserPoolId
      x-stackql-resource-name: user_pool_group
      x-stackql-primaryIdentifier:
        - Id
    UserPoolIdentityProvider:
      type: object
      properties:
        ProviderName:
          type: string
        UserPoolId:
          type: string
        AttributeMapping:
          type: object
        ProviderDetails:
          type: object
        ProviderType:
          type: string
        Id:
          type: string
        IdpIdentifiers:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - ProviderName
        - UserPoolId
        - ProviderType
      x-stackql-resource-name: user_pool_identity_provider
      x-stackql-primaryIdentifier:
        - Id
    ResourceServerScopeType:
      type: object
      additionalProperties: false
      properties:
        ScopeName:
          type: string
        ScopeDescription:
          type: string
      required:
        - ScopeName
        - ScopeDescription
    UserPoolResourceServer:
      type: object
      properties:
        UserPoolId:
          type: string
        Identifier:
          type: string
        Id:
          type: string
        Scopes:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ResourceServerScopeType'
        Name:
          type: string
      required:
        - UserPoolId
        - Identifier
        - Name
      x-stackql-resource-name: user_pool_resource_server
      x-stackql-primaryIdentifier:
        - Id
    RiskExceptionConfigurationType:
      type: object
      additionalProperties: false
      properties:
        BlockedIPRangeList:
          type: array
          uniqueItems: false
          items:
            type: string
        SkippedIPRangeList:
          type: array
          uniqueItems: false
          items:
            type: string
    CompromisedCredentialsRiskConfigurationType:
      type: object
      additionalProperties: false
      properties:
        Actions:
          $ref: '#/components/schemas/CompromisedCredentialsActionsType'
        EventFilter:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - Actions
    AccountTakeoverRiskConfigurationType:
      type: object
      additionalProperties: false
      properties:
        Actions:
          $ref: '#/components/schemas/AccountTakeoverActionsType'
        NotifyConfiguration:
          $ref: '#/components/schemas/NotifyConfigurationType'
      required:
        - Actions
    NotifyConfigurationType:
      type: object
      additionalProperties: false
      properties:
        BlockEmail:
          $ref: '#/components/schemas/NotifyEmailType'
        ReplyTo:
          type: string
        SourceArn:
          type: string
        NoActionEmail:
          $ref: '#/components/schemas/NotifyEmailType'
        From:
          type: string
        MfaEmail:
          $ref: '#/components/schemas/NotifyEmailType'
      required:
        - SourceArn
    CompromisedCredentialsActionsType:
      type: object
      additionalProperties: false
      properties:
        EventAction:
          type: string
      required:
        - EventAction
    AccountTakeoverActionsType:
      type: object
      additionalProperties: false
      properties:
        HighAction:
          $ref: '#/components/schemas/AccountTakeoverActionType'
        LowAction:
          $ref: '#/components/schemas/AccountTakeoverActionType'
        MediumAction:
          $ref: '#/components/schemas/AccountTakeoverActionType'
    AccountTakeoverActionType:
      type: object
      additionalProperties: false
      properties:
        Notify:
          type: boolean
        EventAction:
          type: string
      required:
        - Notify
        - EventAction
    NotifyEmailType:
      type: object
      additionalProperties: false
      properties:
        TextBody:
          type: string
        HtmlBody:
          type: string
        Subject:
          type: string
      required:
        - Subject
    UserPoolRiskConfigurationAttachment:
      type: object
      properties:
        Id:
          type: string
        CompromisedCredentialsRiskConfiguration:
          $ref: '#/components/schemas/CompromisedCredentialsRiskConfigurationType'
        UserPoolId:
          type: string
        ClientId:
          type: string
        AccountTakeoverRiskConfiguration:
          $ref: '#/components/schemas/AccountTakeoverRiskConfigurationType'
        RiskExceptionConfiguration:
          $ref: '#/components/schemas/RiskExceptionConfigurationType'
      required:
        - ClientId
        - UserPoolId
      x-stackql-resource-name: user_pool_risk_configuration_attachment
      x-stackql-primaryIdentifier:
        - Id
    UserPoolUICustomizationAttachment:
      type: object
      properties:
        Id:
          type: string
        CSS:
          type: string
        UserPoolId:
          type: string
        ClientId:
          type: string
      required:
        - ClientId
        - UserPoolId
      x-stackql-resource-name: user_poolui_customization_attachment
      x-stackql-primaryIdentifier:
        - Id
    AttributeType:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Name:
          type: string
    UserPoolUser:
      type: object
      properties:
        ValidationData:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/AttributeType'
        UserPoolId:
          type: string
        Username:
          type: string
        MessageAction:
          type: string
        ClientMetadata:
          type: object
        Id:
          type: string
        DesiredDeliveryMediums:
          type: array
          uniqueItems: false
          items:
            type: string
        ForceAliasCreation:
          type: boolean
        UserAttributes:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/AttributeType'
      required:
        - UserPoolId
      x-stackql-resource-name: user_pool_user
      x-stackql-primaryIdentifier:
        - Id
    UserPoolUserToGroupAttachment:
      type: object
      properties:
        Id:
          type: string
        GroupName:
          type: string
        UserPoolId:
          type: string
        Username:
          type: string
      required:
        - GroupName
        - Username
        - UserPoolId
      x-stackql-resource-name: user_pool_user_to_group_attachment
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    identity_pools:
      name: identity_pools
      id: aws.cognito.identity_pools
      x-cfn-schema-name: IdentityPool
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPool'
    identity_pool:
      name: identity_pool
      id: aws.cognito.identity_pool
      x-cfn-schema-name: IdentityPool
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PushSync.ApplicationArns') as push_sync_application_arns,
              JSON_EXTRACT(Properties, '$.PushSync.RoleArn') as push_sync_role_arn,
              JSON_EXTRACT(Properties, '$.CognitoIdentityProviders') as cognito_identity_providers,
              JSON_EXTRACT(Properties, '$.DeveloperProviderName') as developer_provider_name,
              JSON_EXTRACT(Properties, '$.CognitoStreams.StreamingStatus') as cognito_streams_streaming_status,
              JSON_EXTRACT(Properties, '$.CognitoStreams.StreamName') as cognito_streams_stream_name,
              JSON_EXTRACT(Properties, '$.CognitoStreams.RoleArn') as cognito_streams_role_arn,
              JSON_EXTRACT(Properties, '$.SupportedLoginProviders') as supported_login_providers,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.CognitoEvents') as cognito_events,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.IdentityPoolName') as identity_pool_name,
              JSON_EXTRACT(Properties, '$.AllowUnauthenticatedIdentities') as allow_unauthenticated_identities,
              JSON_EXTRACT(Properties, '$.SamlProviderARNs') as saml_provider_ar_ns,
              JSON_EXTRACT(Properties, '$.OpenIdConnectProviderARNs') as open_id_connect_provider_ar_ns,
              JSON_EXTRACT(Properties, '$.AllowClassicFlow') as allow_classic_flow
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPool'
    identity_pool_role_attachments:
      name: identity_pool_role_attachments
      id: aws.cognito.identity_pool_role_attachments
      x-cfn-schema-name: IdentityPoolRoleAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
    identity_pool_role_attachment:
      name: identity_pool_role_attachment
      id: aws.cognito.identity_pool_role_attachment
      x-cfn-schema-name: IdentityPoolRoleAttachment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdentityPoolId') as identity_pool_id,
              JSON_EXTRACT(Properties, '$.Roles') as roles,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RoleMappings') as role_mappings
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
    user_pools:
      name: user_pools
      id: aws.cognito.user_pools
      x-cfn-schema-name: UserPool
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPool'
    user_pool:
      name: user_pool
      id: aws.cognito.user_pool
      x-cfn-schema-name: UserPool
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolTags') as user_pool_tags,
              JSON_EXTRACT(Properties, '$.Policies.PasswordPolicy') as policies_password_policy,
              JSON_EXTRACT(Properties, '$.Schema') as schema,
              JSON_EXTRACT(Properties, '$.AdminCreateUserConfig.InviteMessageTemplate') as admin_create_user_config_invite_message_template,
              JSON_EXTRACT(Properties, '$.AdminCreateUserConfig.UnusedAccountValidityDays') as admin_create_user_config_unused_account_validity_days,
              JSON_EXTRACT(Properties, '$.AdminCreateUserConfig.AllowAdminCreateUserOnly') as admin_create_user_config_allow_admin_create_user_only,
              JSON_EXTRACT(Properties, '$.UsernameConfiguration.CaseSensitive') as username_configuration_case_sensitive,
              JSON_EXTRACT(Properties, '$.UserPoolName') as user_pool_name,
              JSON_EXTRACT(Properties, '$.SmsVerificationMessage') as sms_verification_message,
              JSON_EXTRACT(Properties, '$.UserAttributeUpdateSettings.AttributesRequireVerificationBeforeUpdate') as user_attribute_update_settings_attributes_require_verification_before_update,
              JSON_EXTRACT(Properties, '$.EmailConfiguration.ReplyToEmailAddress') as email_configuration_reply_to_email_address,
              JSON_EXTRACT(Properties, '$.EmailConfiguration.ConfigurationSet') as email_configuration_configuration_set,
              JSON_EXTRACT(Properties, '$.EmailConfiguration.EmailSendingAccount') as email_configuration_email_sending_account,
              JSON_EXTRACT(Properties, '$.EmailConfiguration.From') as email_configuration_from,
              JSON_EXTRACT(Properties, '$.EmailConfiguration.SourceArn') as email_configuration_source_arn,
              JSON_EXTRACT(Properties, '$.SmsConfiguration.SnsCallerArn') as sms_configuration_sns_caller_arn,
              JSON_EXTRACT(Properties, '$.SmsConfiguration.SnsRegion') as sms_configuration_sns_region,
              JSON_EXTRACT(Properties, '$.SmsConfiguration.ExternalId') as sms_configuration_external_id,
              JSON_EXTRACT(Properties, '$.EmailVerificationSubject') as email_verification_subject,
              JSON_EXTRACT(Properties, '$.AccountRecoverySetting.RecoveryMechanisms') as account_recovery_setting_recovery_mechanisms,
              JSON_EXTRACT(Properties, '$.VerificationMessageTemplate.EmailMessageByLink') as verification_message_template_email_message_by_link,
              JSON_EXTRACT(Properties, '$.VerificationMessageTemplate.EmailMessage') as verification_message_template_email_message,
              JSON_EXTRACT(Properties, '$.VerificationMessageTemplate.SmsMessage') as verification_message_template_sms_message,
              JSON_EXTRACT(Properties, '$.VerificationMessageTemplate.EmailSubject') as verification_message_template_email_subject,
              JSON_EXTRACT(Properties, '$.VerificationMessageTemplate.DefaultEmailOption') as verification_message_template_default_email_option,
              JSON_EXTRACT(Properties, '$.VerificationMessageTemplate.EmailSubjectByLink') as verification_message_template_email_subject_by_link,
              JSON_EXTRACT(Properties, '$.ProviderURL') as provider_ur_l,
              JSON_EXTRACT(Properties, '$.MfaConfiguration') as mfa_configuration,
              JSON_EXTRACT(Properties, '$.DeletionProtection') as deletion_protection,
              JSON_EXTRACT(Properties, '$.SmsAuthenticationMessage') as sms_authentication_message,
              JSON_EXTRACT(Properties, '$.ProviderName') as provider_name,
              JSON_EXTRACT(Properties, '$.UserPoolAddOns.AdvancedSecurityMode') as user_pool_add_ons_advanced_security_mode,
              JSON_EXTRACT(Properties, '$.AliasAttributes') as alias_attributes,
              JSON_EXTRACT(Properties, '$.EnabledMfas') as enabled_mfas,
              JSON_EXTRACT(Properties, '$.LambdaConfig.CreateAuthChallenge') as lambda_config_create_auth_challenge,
              JSON_EXTRACT(Properties, '$.LambdaConfig.PreSignUp') as lambda_config_pre_sign_up,
              JSON_EXTRACT(Properties, '$.LambdaConfig.KMSKeyID') as lambda_config_km_skey_id,
              JSON_EXTRACT(Properties, '$.LambdaConfig.UserMigration') as lambda_config_user_migration,
              JSON_EXTRACT(Properties, '$.LambdaConfig.PostAuthentication') as lambda_config_post_authentication,
              JSON_EXTRACT(Properties, '$.LambdaConfig.VerifyAuthChallengeResponse') as lambda_config_verify_auth_challenge_response,
              JSON_EXTRACT(Properties, '$.LambdaConfig.PreAuthentication') as lambda_config_pre_authentication,
              JSON_EXTRACT(Properties, '$.LambdaConfig.DefineAuthChallenge') as lambda_config_define_auth_challenge,
              JSON_EXTRACT(Properties, '$.LambdaConfig.PreTokenGeneration') as lambda_config_pre_token_generation,
              JSON_EXTRACT(Properties, '$.LambdaConfig.CustomSMSSender') as lambda_config_custom_sm_ssender,
              JSON_EXTRACT(Properties, '$.LambdaConfig.PostConfirmation') as lambda_config_post_confirmation,
              JSON_EXTRACT(Properties, '$.LambdaConfig.CustomMessage') as lambda_config_custom_message,
              JSON_EXTRACT(Properties, '$.LambdaConfig.CustomEmailSender') as lambda_config_custom_email_sender,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.UsernameAttributes') as username_attributes,
              JSON_EXTRACT(Properties, '$.AutoVerifiedAttributes') as auto_verified_attributes,
              JSON_EXTRACT(Properties, '$.DeviceConfiguration.DeviceOnlyRememberedOnUserPrompt') as device_configuration_device_only_remembered_on_user_prompt,
              JSON_EXTRACT(Properties, '$.DeviceConfiguration.ChallengeRequiredOnNewDevice') as device_configuration_challenge_required_on_new_device,
              JSON_EXTRACT(Properties, '$.EmailVerificationMessage') as email_verification_message
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPool'
    user_pool_clients:
      name: user_pool_clients
      id: aws.cognito.user_pool_clients
      x-cfn-schema-name: UserPoolClient
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolClient'
    user_pool_client:
      name: user_pool_client
      id: aws.cognito.user_pool_client
      x-cfn-schema-name: UserPoolClient
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AnalyticsConfiguration.ApplicationArn') as analytics_configuration_application_arn,
              JSON_EXTRACT(Properties, '$.AnalyticsConfiguration.ApplicationId') as analytics_configuration_application_id,
              JSON_EXTRACT(Properties, '$.AnalyticsConfiguration.UserDataShared') as analytics_configuration_user_data_shared,
              JSON_EXTRACT(Properties, '$.AnalyticsConfiguration.RoleArn') as analytics_configuration_role_arn,
              JSON_EXTRACT(Properties, '$.AnalyticsConfiguration.ExternalId') as analytics_configuration_external_id,
              JSON_EXTRACT(Properties, '$.GenerateSecret') as generate_secret,
              JSON_EXTRACT(Properties, '$.CallbackURLs') as callback_ur_ls,
              JSON_EXTRACT(Properties, '$.IdTokenValidity') as id_token_validity,
              JSON_EXTRACT(Properties, '$.TokenValidityUnits.IdToken') as token_validity_units_id_token,
              JSON_EXTRACT(Properties, '$.TokenValidityUnits.RefreshToken') as token_validity_units_refresh_token,
              JSON_EXTRACT(Properties, '$.TokenValidityUnits.AccessToken') as token_validity_units_access_token,
              JSON_EXTRACT(Properties, '$.ReadAttributes') as read_attributes,
              JSON_EXTRACT(Properties, '$.AllowedOAuthFlowsUserPoolClient') as allowed_oauth_flows_user_pool_client,
              JSON_EXTRACT(Properties, '$.DefaultRedirectURI') as default_redirect_ur_i,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ClientName') as client_name,
              JSON_EXTRACT(Properties, '$.ExplicitAuthFlows') as explicit_auth_flows,
              JSON_EXTRACT(Properties, '$.AccessTokenValidity') as access_token_validity,
              JSON_EXTRACT(Properties, '$.EnableTokenRevocation') as enable_token_revocation,
              JSON_EXTRACT(Properties, '$.EnablePropagateAdditionalUserContextData') as enable_propagate_additional_user_context_data,
              JSON_EXTRACT(Properties, '$.AuthSessionValidity') as auth_session_validity,
              JSON_EXTRACT(Properties, '$.AllowedOAuthScopes') as allowed_oauth_scopes,
              JSON_EXTRACT(Properties, '$.SupportedIdentityProviders') as supported_identity_providers,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.AllowedOAuthFlows') as allowed_oauth_flows,
              JSON_EXTRACT(Properties, '$.ClientSecret') as client_secret,
              JSON_EXTRACT(Properties, '$.LogoutURLs') as logout_ur_ls,
              JSON_EXTRACT(Properties, '$.RefreshTokenValidity') as refresh_token_validity,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.WriteAttributes') as write_attributes,
              JSON_EXTRACT(Properties, '$.PreventUserExistenceErrors') as prevent_user_existence_errors
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolClient'
    user_pool_domains:
      name: user_pool_domains
      id: aws.cognito.user_pool_domains
      x-cfn-schema-name: UserPoolDomain
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolDomain'
    user_pool_domain:
      name: user_pool_domain
      id: aws.cognito.user_pool_domain
      x-cfn-schema-name: UserPoolDomain
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CloudFrontDistribution') as cloud_front_distribution,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Domain') as domain,
              JSON_EXTRACT(Properties, '$.CustomDomainConfig.CertificateArn') as custom_domain_config_certificate_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolDomain'
    user_pool_groups:
      name: user_pool_groups
      id: aws.cognito.user_pool_groups
      x-cfn-schema-name: UserPoolGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolGroup'
    user_pool_group:
      name: user_pool_group
      id: aws.cognito.user_pool_group
      x-cfn-schema-name: UserPoolGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Precedence') as precedence,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolGroup'
    user_pool_identity_providers:
      name: user_pool_identity_providers
      id: aws.cognito.user_pool_identity_providers
      x-cfn-schema-name: UserPoolIdentityProvider
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
    user_pool_identity_provider:
      name: user_pool_identity_provider
      id: aws.cognito.user_pool_identity_provider
      x-cfn-schema-name: UserPoolIdentityProvider
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProviderName') as provider_name,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.AttributeMapping') as attribute_mapping,
              JSON_EXTRACT(Properties, '$.ProviderDetails') as provider_details,
              JSON_EXTRACT(Properties, '$.ProviderType') as provider_type,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.IdpIdentifiers') as idp_identifiers
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
    user_pool_resource_servers:
      name: user_pool_resource_servers
      id: aws.cognito.user_pool_resource_servers
      x-cfn-schema-name: UserPoolResourceServer
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
    user_pool_resource_server:
      name: user_pool_resource_server
      id: aws.cognito.user_pool_resource_server
      x-cfn-schema-name: UserPoolResourceServer
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Identifier') as identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scopes') as scopes,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
    user_pool_risk_configuration_attachments:
      name: user_pool_risk_configuration_attachments
      id: aws.cognito.user_pool_risk_configuration_attachments
      x-cfn-schema-name: UserPoolRiskConfigurationAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolRiskConfigurationAttachment'
    user_pool_risk_configuration_attachment:
      name: user_pool_risk_configuration_attachment
      id: aws.cognito.user_pool_risk_configuration_attachment
      x-cfn-schema-name: UserPoolRiskConfigurationAttachment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CompromisedCredentialsRiskConfiguration.Actions') as compromised_credentials_risk_configuration_actions,
              JSON_EXTRACT(Properties, '$.CompromisedCredentialsRiskConfiguration.EventFilter') as compromised_credentials_risk_configuration_event_filter,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id,
              JSON_EXTRACT(Properties, '$.AccountTakeoverRiskConfiguration.Actions') as account_takeover_risk_configuration_actions,
              JSON_EXTRACT(Properties, '$.AccountTakeoverRiskConfiguration.NotifyConfiguration') as account_takeover_risk_configuration_notify_configuration,
              JSON_EXTRACT(Properties, '$.RiskExceptionConfiguration.BlockedIPRangeList') as risk_exception_configuration_blocked_ip_range_list,
              JSON_EXTRACT(Properties, '$.RiskExceptionConfiguration.SkippedIPRangeList') as risk_exception_configuration_skipped_ip_range_list
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolRiskConfigurationAttachment'
    user_poolui_customization_attachments:
      name: user_poolui_customization_attachments
      id: aws.cognito.user_poolui_customization_attachments
      x-cfn-schema-name: UserPoolUICustomizationAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolUICustomizationAttachment'
    user_poolui_customization_attachment:
      name: user_poolui_customization_attachment
      id: aws.cognito.user_poolui_customization_attachment
      x-cfn-schema-name: UserPoolUICustomizationAttachment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CSS') as c_ss,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUICustomizationAttachment'
    user_pool_users:
      name: user_pool_users
      id: aws.cognito.user_pool_users
      x-cfn-schema-name: UserPoolUser
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolUser'
    user_pool_user:
      name: user_pool_user
      id: aws.cognito.user_pool_user
      x-cfn-schema-name: UserPoolUser
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ValidationData') as validation_data,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Username') as username,
              JSON_EXTRACT(Properties, '$.MessageAction') as message_action,
              JSON_EXTRACT(Properties, '$.ClientMetadata') as client_metadata,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DesiredDeliveryMediums') as desired_delivery_mediums,
              JSON_EXTRACT(Properties, '$.ForceAliasCreation') as force_alias_creation,
              JSON_EXTRACT(Properties, '$.UserAttributes') as user_attributes
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUser'
    user_pool_user_to_group_attachments:
      name: user_pool_user_to_group_attachments
      id: aws.cognito.user_pool_user_to_group_attachments
      x-cfn-schema-name: UserPoolUserToGroupAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolUserToGroupAttachment'
    user_pool_user_to_group_attachment:
      name: user_pool_user_to_group_attachment
      id: aws.cognito.user_pool_user_to_group_attachment
      x-cfn-schema-name: UserPoolUserToGroupAttachment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Username') as username
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUserToGroupAttachment'
