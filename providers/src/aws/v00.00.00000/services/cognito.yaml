openapi: 3.0.0
info:
  title: Cognito
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    PushSync:
      type: object
      additionalProperties: false
      properties:
        ApplicationArns:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        RoleArn:
          type: string
    CognitoIdentityProvider:
      type: object
      additionalProperties: false
      properties:
        ServerSideTokenCheck:
          type: boolean
        ProviderName:
          type: string
        ClientId:
          type: string
      required:
        - ProviderName
        - ClientId
    CognitoStreams:
      type: object
      additionalProperties: false
      properties:
        StreamingStatus:
          type: string
        StreamName:
          type: string
        RoleArn:
          type: string
    IdentityPool:
      type: object
      properties:
        PushSync:
          $ref: '#/components/schemas/PushSync'
        CognitoIdentityProviders:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CognitoIdentityProvider'
        DeveloperProviderName:
          type: string
        CognitoStreams:
          $ref: '#/components/schemas/CognitoStreams'
        SupportedLoginProviders:
          type: object
        Name:
          type: string
        CognitoEvents:
          type: object
        Id:
          type: string
        IdentityPoolName:
          type: string
        AllowUnauthenticatedIdentities:
          type: boolean
        SamlProviderARNs:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        OpenIdConnectProviderARNs:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        AllowClassicFlow:
          type: boolean
        IdentityPoolTags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AllowUnauthenticatedIdentities
      x-stackql-resource-name: identity_pool
      description: Resource Type definition for AWS::Cognito::IdentityPool
      x-type-name: AWS::Cognito::IdentityPool
      x-stackql-primary-identifier:
        - Id
      x-write-only-properties:
        - PushSync
        - CognitoStreams
        - CognitoEvents
      x-read-only-properties:
        - Id
        - Name
      x-required-properties:
        - AllowUnauthenticatedIdentities
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/IdentityPoolTags
        permissions:
          - cognito-identity:TagResource
          - cognito-identity:UntagResource
      x-required-permissions:
        create:
          - cognito-identity:CreateIdentityPool
          - cognito-sync:SetIdentityPoolConfiguration
          - cognito-sync:SetCognitoEvents
          - cognito-identity:TagResource
          - iam:PassRole
        read:
          - cognito-identity:DescribeIdentityPool
        update:
          - cognito-identity:UpdateIdentityPool
          - cognito-identity:DescribeIdentityPool
          - cognito-sync:SetIdentityPoolConfiguration
          - cognito-sync:SetCognitoEvents
          - cognito-identity:TagResource
          - cognito-identity:UntagResource
          - iam:PassRole
        delete:
          - cognito-identity:DeleteIdentityPool
        list:
          - cognito-identity:ListIdentityPools
    IdentityPoolPrincipalTag:
      type: object
      properties:
        IdentityPoolId:
          type: string
        IdentityProviderName:
          type: string
        UseDefaults:
          type: boolean
        PrincipalTags:
          type: object
      required:
        - IdentityPoolId
        - IdentityProviderName
      x-stackql-resource-name: identity_pool_principal_tag
      description: Resource Type definition for AWS::Cognito::IdentityPoolPrincipalTag
      x-type-name: AWS::Cognito::IdentityPoolPrincipalTag
      x-stackql-primary-identifier:
        - IdentityPoolId
        - IdentityProviderName
      x-create-only-properties:
        - IdentityPoolId
        - IdentityProviderName
      x-required-properties:
        - IdentityPoolId
        - IdentityProviderName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-identity:GetPrincipalTagAttributeMap
          - cognito-identity:SetPrincipalTagAttributeMap
        read:
          - cognito-identity:GetPrincipalTagAttributeMap
        update:
          - cognito-identity:GetPrincipalTagAttributeMap
          - cognito-identity:SetPrincipalTagAttributeMap
        delete:
          - cognito-identity:GetPrincipalTagAttributeMap
          - cognito-identity:SetPrincipalTagAttributeMap
        list:
          - cognito-identity:GetPrincipalTagAttributeMap
    MappingRule:
      type: object
      additionalProperties: false
      properties:
        Claim:
          type: string
        MatchType:
          type: string
        RoleARN:
          type: string
        Value:
          type: string
      required:
        - Claim
        - MatchType
        - RoleARN
        - Value
    RulesConfigurationType:
      type: object
      additionalProperties: false
      properties:
        Rules:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MappingRule'
      required:
        - Rules
    RoleMapping:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        AmbiguousRoleResolution:
          type: string
        RulesConfiguration:
          $ref: '#/components/schemas/RulesConfigurationType'
        IdentityProvider:
          type: string
      required:
        - Type
    IdentityPoolRoleAttachment:
      type: object
      properties:
        IdentityPoolId:
          type: string
        Roles:
          x-patternProperties:
            ^.+$:
              type: string
          additionalProperties: false
        Id:
          type: string
        RoleMappings:
          x-patternProperties:
            ^.+$:
              $ref: '#/components/schemas/RoleMapping'
          additionalProperties: false
      required:
        - IdentityPoolId
      x-stackql-resource-name: identity_pool_role_attachment
      description: Resource Type definition for AWS::Cognito::IdentityPoolRoleAttachment
      x-type-name: AWS::Cognito::IdentityPoolRoleAttachment
      x-stackql-primary-identifier:
        - Id
      x-stackql-additional-identifiers:
        - - IdentityPoolId
      x-create-only-properties:
        - IdentityPoolId
      x-read-only-properties:
        - Id
      x-required-properties:
        - IdentityPoolId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-identity:GetIdentityPoolRoles
          - cognito-identity:SetIdentityPoolRoles
          - iam:PassRole
        read:
          - cognito-identity:GetIdentityPoolRoles
        update:
          - cognito-identity:GetIdentityPoolRoles
          - cognito-identity:SetIdentityPoolRoles
          - iam:PassRole
        delete:
          - cognito-identity:GetIdentityPoolRoles
          - cognito-identity:SetIdentityPoolRoles
        list:
          - cognito-identity:GetIdentityPoolRoles
    CloudWatchLogsConfiguration:
      type: object
      properties:
        LogGroupArn:
          type: string
      additionalProperties: false
    S3Configuration:
      type: object
      properties:
        BucketArn:
          type: string
      additionalProperties: false
    FirehoseConfiguration:
      type: object
      properties:
        StreamArn:
          type: string
      additionalProperties: false
    LogConfiguration:
      type: object
      properties:
        LogLevel:
          type: string
        EventSource:
          type: string
        CloudWatchLogsConfiguration:
          $ref: '#/components/schemas/CloudWatchLogsConfiguration'
        S3Configuration:
          $ref: '#/components/schemas/S3Configuration'
        FirehoseConfiguration:
          $ref: '#/components/schemas/FirehoseConfiguration'
      additionalProperties: false
    LogConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/LogConfiguration'
    LogDeliveryConfiguration:
      type: object
      properties:
        Id:
          type: string
        UserPoolId:
          type: string
        LogConfigurations:
          $ref: '#/components/schemas/LogConfigurations'
      required:
        - UserPoolId
      x-stackql-resource-name: log_delivery_configuration
      description: Resource Type definition for AWS::Cognito::LogDeliveryConfiguration
      x-type-name: AWS::Cognito::LogDeliveryConfiguration
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - UserPoolId
      x-read-only-properties:
        - Id
      x-required-properties:
        - UserPoolId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:GetLogDeliveryConfiguration
          - cognito-idp:SetLogDeliveryConfiguration
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - s3:ListBucket
          - s3:PutObject
          - s3:GetBucketAcl
          - firehose:TagDeliveryStream
          - iam:CreateServiceLinkedRole
        read:
          - cognito-idp:GetLogDeliveryConfiguration
        update:
          - cognito-idp:GetLogDeliveryConfiguration
          - cognito-idp:SetLogDeliveryConfiguration
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - s3:ListBucket
          - s3:PutObject
          - s3:GetBucketAcl
          - firehose:TagDeliveryStream
          - iam:CreateServiceLinkedRole
        delete:
          - cognito-idp:GetLogDeliveryConfiguration
          - cognito-idp:SetLogDeliveryConfiguration
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - s3:ListBucket
          - s3:PutObject
          - s3:GetBucketAcl
          - firehose:TagDeliveryStream
          - iam:CreateServiceLinkedRole
    ManagedLoginBrandingIdType:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
    CategoryType:
      type: string
      enum:
        - FAVICON_ICO
        - FAVICON_SVG
        - EMAIL_GRAPHIC
        - SMS_GRAPHIC
        - AUTH_APP_GRAPHIC
        - PASSWORD_GRAPHIC
        - PASSKEY_GRAPHIC
        - PAGE_HEADER_LOGO
        - PAGE_HEADER_BACKGROUND
        - PAGE_FOOTER_LOGO
        - PAGE_FOOTER_BACKGROUND
        - PAGE_BACKGROUND
        - FORM_BACKGROUND
        - FORM_LOGO
        - IDP_BUTTON_ICON
    ColorModeType:
      type: string
      enum:
        - LIGHT
        - DARK
        - DYNAMIC
    ExtensionType:
      type: string
      enum:
        - ICO
        - JPEG
        - PNG
        - SVG
        - WEBP
    BytesType:
      type: string
      maxLength: 1000000
    ResourceIdType:
      type: string
      pattern: ^[\w\- ]+$
      minLength: 1
      maxLength: 40
    AssetType:
      type: object
      properties:
        Category:
          $ref: '#/components/schemas/CategoryType'
        ColorMode:
          $ref: '#/components/schemas/ColorModeType'
        Extension:
          $ref: '#/components/schemas/ExtensionType'
        Bytes:
          $ref: '#/components/schemas/BytesType'
        ResourceId:
          $ref: '#/components/schemas/ResourceIdType'
      additionalProperties: false
      required:
        - Category
        - ColorMode
        - Extension
    AssetList:
      type: array
      items:
        $ref: '#/components/schemas/AssetType'
    ManagedLoginBranding:
      type: object
      properties:
        UserPoolId:
          type: string
        ClientId:
          type: string
        UseCognitoProvidedValues:
          type: boolean
        Settings:
          type: object
        Assets:
          $ref: '#/components/schemas/AssetList'
        ManagedLoginBrandingId:
          $ref: '#/components/schemas/ManagedLoginBrandingIdType'
        ReturnMergedResources:
          type: boolean
      required:
        - UserPoolId
      x-stackql-resource-name: managed_login_branding
      description: Resource Type definition for AWS::Cognito::ManagedLoginBranding
      x-type-name: AWS::Cognito::ManagedLoginBranding
      x-stackql-primary-identifier:
        - UserPoolId
        - ManagedLoginBrandingId
      x-create-only-properties:
        - UserPoolId
        - ClientId
      x-write-only-properties:
        - ClientId
        - ReturnMergedResources
      x-read-only-properties:
        - ManagedLoginBrandingId
      x-required-properties:
        - UserPoolId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:CreateManagedLoginBranding
        read:
          - cognito-idp:DescribeManagedLoginBranding
        update:
          - cognito-idp:UpdateManagedLoginBranding
        delete:
          - cognito-idp:DeleteManagedLoginBranding
    PasswordPolicy:
      type: object
      properties:
        MinimumLength:
          type: integer
        RequireLowercase:
          type: boolean
        RequireNumbers:
          type: boolean
        RequireSymbols:
          type: boolean
        RequireUppercase:
          type: boolean
        TemporaryPasswordValidityDays:
          type: integer
        PasswordHistorySize:
          type: integer
      additionalProperties: false
    SignInPolicy:
      type: object
      properties:
        AllowedFirstAuthFactors:
          type: array
          items:
            type: string
      additionalProperties: false
    Policies:
      type: object
      properties:
        PasswordPolicy:
          $ref: '#/components/schemas/PasswordPolicy'
        SignInPolicy:
          $ref: '#/components/schemas/SignInPolicy'
      additionalProperties: false
    InviteMessageTemplate:
      type: object
      properties:
        EmailMessage:
          type: string
        EmailSubject:
          type: string
        SMSMessage:
          type: string
      additionalProperties: false
    RecoveryOption:
      type: object
      properties:
        Name:
          type: string
        Priority:
          type: integer
      additionalProperties: false
    AccountRecoverySetting:
      type: object
      properties:
        RecoveryMechanisms:
          type: array
          items:
            $ref: '#/components/schemas/RecoveryOption'
      additionalProperties: false
    AdminCreateUserConfig:
      type: object
      properties:
        AllowAdminCreateUserOnly:
          type: boolean
        InviteMessageTemplate:
          $ref: '#/components/schemas/InviteMessageTemplate'
        UnusedAccountValidityDays:
          type: integer
      additionalProperties: false
    DeviceConfiguration:
      type: object
      properties:
        ChallengeRequiredOnNewDevice:
          type: boolean
        DeviceOnlyRememberedOnUserPrompt:
          type: boolean
      additionalProperties: false
    EmailConfiguration:
      type: object
      properties:
        ReplyToEmailAddress:
          type: string
        SourceArn:
          type: string
        From:
          type: string
        ConfigurationSet:
          type: string
        EmailSendingAccount:
          type: string
      additionalProperties: false
    CustomEmailSender:
      type: object
      properties:
        LambdaVersion:
          type: string
        LambdaArn:
          type: string
      additionalProperties: false
    CustomSMSSender:
      type: object
      properties:
        LambdaVersion:
          type: string
        LambdaArn:
          type: string
      additionalProperties: false
    PreTokenGenerationConfig:
      type: object
      properties:
        LambdaVersion:
          type: string
        LambdaArn:
          type: string
      additionalProperties: false
    LambdaConfig:
      type: object
      properties:
        CreateAuthChallenge:
          type: string
        CustomMessage:
          type: string
        DefineAuthChallenge:
          type: string
        PostAuthentication:
          type: string
        PostConfirmation:
          type: string
        PreAuthentication:
          type: string
        PreSignUp:
          type: string
        VerifyAuthChallengeResponse:
          type: string
        UserMigration:
          type: string
        PreTokenGeneration:
          type: string
        CustomEmailSender:
          $ref: '#/components/schemas/CustomEmailSender'
        CustomSMSSender:
          $ref: '#/components/schemas/CustomSMSSender'
        KMSKeyID:
          type: string
        PreTokenGenerationConfig:
          $ref: '#/components/schemas/PreTokenGenerationConfig'
      additionalProperties: false
    SmsConfiguration:
      type: object
      properties:
        ExternalId:
          type: string
        SnsCallerArn:
          type: string
        SnsRegion:
          type: string
      additionalProperties: false
    StringAttributeConstraints:
      type: object
      properties:
        MaxLength:
          type: string
        MinLength:
          type: string
      additionalProperties: false
    NumberAttributeConstraints:
      type: object
      properties:
        MaxValue:
          type: string
        MinValue:
          type: string
      additionalProperties: false
    SchemaAttribute:
      type: object
      properties:
        AttributeDataType:
          type: string
        DeveloperOnlyAttribute:
          type: boolean
        Mutable:
          type: boolean
        Name:
          type: string
        NumberAttributeConstraints:
          $ref: '#/components/schemas/NumberAttributeConstraints'
        StringAttributeConstraints:
          $ref: '#/components/schemas/StringAttributeConstraints'
        Required:
          type: boolean
      additionalProperties: false
    UsernameConfiguration:
      type: object
      properties:
        CaseSensitive:
          type: boolean
      additionalProperties: false
    UserAttributeUpdateSettings:
      type: object
      properties:
        AttributesRequireVerificationBeforeUpdate:
          type: array
          items:
            type: string
      required:
        - AttributesRequireVerificationBeforeUpdate
      additionalProperties: false
    VerificationMessageTemplate:
      type: object
      properties:
        DefaultEmailOption:
          type: string
        EmailMessage:
          type: string
        EmailMessageByLink:
          type: string
        EmailSubject:
          type: string
        EmailSubjectByLink:
          type: string
        SmsMessage:
          type: string
      additionalProperties: false
    AdvancedSecurityAdditionalFlows:
      type: object
      properties:
        CustomAuthMode:
          type: string
      additionalProperties: false
    UserPoolAddOns:
      type: object
      properties:
        AdvancedSecurityMode:
          type: string
        AdvancedSecurityAdditionalFlows:
          $ref: '#/components/schemas/AdvancedSecurityAdditionalFlows'
      additionalProperties: false
    UserPool:
      type: object
      properties:
        UserPoolName:
          type: string
          minLength: 1
          maxLength: 128
        Policies:
          $ref: '#/components/schemas/Policies'
        AccountRecoverySetting:
          $ref: '#/components/schemas/AccountRecoverySetting'
        AdminCreateUserConfig:
          $ref: '#/components/schemas/AdminCreateUserConfig'
        AliasAttributes:
          type: array
          items:
            type: string
        UsernameAttributes:
          type: array
          items:
            type: string
        AutoVerifiedAttributes:
          type: array
          items:
            type: string
        DeviceConfiguration:
          $ref: '#/components/schemas/DeviceConfiguration'
        EmailConfiguration:
          $ref: '#/components/schemas/EmailConfiguration'
        EmailVerificationMessage:
          type: string
          minLength: 6
          maxLength: 20000
        EmailVerificationSubject:
          type: string
          minLength: 1
          maxLength: 140
        DeletionProtection:
          type: string
        LambdaConfig:
          $ref: '#/components/schemas/LambdaConfig'
        MfaConfiguration:
          type: string
        EnabledMfas:
          type: array
          items:
            type: string
        SmsAuthenticationMessage:
          type: string
          minLength: 6
          maxLength: 140
        EmailAuthenticationMessage:
          type: string
          minLength: 6
          maxLength: 20000
        EmailAuthenticationSubject:
          type: string
          minLength: 1
          maxLength: 140
        SmsConfiguration:
          $ref: '#/components/schemas/SmsConfiguration'
        SmsVerificationMessage:
          type: string
          minLength: 6
          maxLength: 140
        WebAuthnRelyingPartyID:
          type: string
          minLength: 1
          maxLength: 63
        WebAuthnUserVerification:
          type: string
          minLength: 1
          maxLength: 9
        Schema:
          type: array
          items:
            $ref: '#/components/schemas/SchemaAttribute'
        UsernameConfiguration:
          $ref: '#/components/schemas/UsernameConfiguration'
        UserAttributeUpdateSettings:
          $ref: '#/components/schemas/UserAttributeUpdateSettings'
        UserPoolTags:
          type: object
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
        VerificationMessageTemplate:
          $ref: '#/components/schemas/VerificationMessageTemplate'
        UserPoolAddOns:
          $ref: '#/components/schemas/UserPoolAddOns'
        ProviderName:
          type: string
        ProviderURL:
          type: string
        Arn:
          type: string
        UserPoolId:
          type: string
        UserPoolTier:
          type: string
          enum:
            - LITE
            - ESSENTIALS
            - PLUS
      x-stackql-resource-name: user_pool
      description: Definition of AWS::Cognito::UserPool Resource Type
      x-type-name: AWS::Cognito::UserPool
      x-stackql-primary-identifier:
        - UserPoolId
      x-write-only-properties:
        - EnabledMfas
      x-read-only-properties:
        - ProviderName
        - UserPoolId
        - ProviderURL
        - Arn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/UserPoolTags
        permissions:
          - cognito-idp:ListTagsForResource
          - cognito-idp:UntagResource
          - cognito-idp:TagResource
      x-required-permissions:
        create:
          - cognito-idp:CreateUserPool
          - iam:PassRole
          - cognito-idp:SetUserPoolMfaConfig
          - cognito-idp:DescribeUserPool
          - kms:CreateGrant
          - iam:CreateServiceLinkedRole
          - cognito-idp:TagResource
        read:
          - cognito-idp:DescribeUserPool
          - cognito-idp:GetUserPoolMfaConfig
        update:
          - cognito-idp:UpdateUserPool
          - cognito-idp:ListTagsForResource
          - cognito-idp:UntagResource
          - cognito-idp:TagResource
          - cognito-idp:SetUserPoolMfaConfig
          - cognito-idp:AddCustomAttributes
          - cognito-idp:DescribeUserPool
          - cognito-idp:GetUserPoolMfaConfig
          - iam:PassRole
        delete:
          - cognito-idp:DeleteUserPool
        list:
          - cognito-idp:ListUserPools
    AnalyticsConfiguration:
      type: object
      properties:
        ApplicationArn:
          type: string
        ApplicationId:
          type: string
        ExternalId:
          type: string
        RoleArn:
          type: string
        UserDataShared:
          type: boolean
      additionalProperties: false
    TokenValidityUnits:
      type: object
      properties:
        AccessToken:
          type: string
        IdToken:
          type: string
        RefreshToken:
          type: string
      additionalProperties: false
    UserPoolClient:
      type: object
      properties:
        ClientName:
          type: string
          minLength: 1
          maxLength: 128
        ExplicitAuthFlows:
          type: array
          items:
            type: string
        GenerateSecret:
          type: boolean
        ReadAttributes:
          type: array
          items:
            type: string
        AuthSessionValidity:
          type: integer
          minimum: 3
          maximum: 15
        RefreshTokenValidity:
          type: integer
          minimum: 1
          maximum: 315360000
        AccessTokenValidity:
          type: integer
          minimum: 1
          maximum: 86400
        IdTokenValidity:
          type: integer
          minimum: 1
          maximum: 86400
        TokenValidityUnits:
          $ref: '#/components/schemas/TokenValidityUnits'
        UserPoolId:
          type: string
        WriteAttributes:
          type: array
          items:
            type: string
        AllowedOAuthFlows:
          type: array
          items:
            type: string
        AllowedOAuthFlowsUserPoolClient:
          type: boolean
        AllowedOAuthScopes:
          type: array
          items:
            type: string
        CallbackURLs:
          type: array
          items:
            type: string
        DefaultRedirectURI:
          type: string
        LogoutURLs:
          type: array
          items:
            type: string
        SupportedIdentityProviders:
          type: array
          items:
            type: string
        AnalyticsConfiguration:
          $ref: '#/components/schemas/AnalyticsConfiguration'
        PreventUserExistenceErrors:
          type: string
        EnableTokenRevocation:
          type: boolean
        EnablePropagateAdditionalUserContextData:
          type: boolean
        Name:
          type: string
        ClientSecret:
          type: string
        ClientId:
          type: string
      required:
        - UserPoolId
      x-stackql-resource-name: user_pool_client
      description: Resource Type definition for AWS::Cognito::UserPoolClient
      x-type-name: AWS::Cognito::UserPoolClient
      x-stackql-primary-identifier:
        - UserPoolId
        - ClientId
      x-create-only-properties:
        - GenerateSecret
        - UserPoolId
      x-read-only-properties:
        - ClientSecret
        - Name
        - ClientId
      x-required-properties:
        - UserPoolId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:CreateUserPoolClient
          - iam:PassRole
          - iam:PutRolePolicy
          - iam:CreateServiceLinkedRole
        read:
          - cognito-idp:DescribeUserPoolClient
        update:
          - cognito-idp:UpdateUserPoolClient
          - iam:PassRole
          - iam:PutRolePolicy
        delete:
          - cognito-idp:DeleteUserPoolClient
          - iam:PutRolePolicy
          - iam:DeleteRolePolicy
        list:
          - cognito-idp:ListUserPoolClients
    UserPoolGroup:
      type: object
      properties:
        Description:
          type: string
          maxLength: 2048
        GroupName:
          type: string
        Precedence:
          type: integer
          minimum: 0
        RoleArn:
          type: string
        UserPoolId:
          type: string
      required:
        - UserPoolId
      x-stackql-resource-name: user_pool_group
      description: Resource Type definition for AWS::Cognito::UserPoolGroup
      x-type-name: AWS::Cognito::UserPoolGroup
      x-stackql-primary-identifier:
        - UserPoolId
        - GroupName
      x-create-only-properties:
        - UserPoolId
        - GroupName
      x-required-properties:
        - UserPoolId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:CreateGroup
          - iam:PassRole
          - iam:PutRolePolicy
          - cognito-idp:GetGroup
        read:
          - cognito-idp:GetGroup
        update:
          - cognito-idp:UpdateGroup
          - iam:PassRole
          - iam:PutRolePolicy
        delete:
          - cognito-idp:DeleteGroup
          - cognito-idp:GetGroup
          - iam:PutRolePolicy
        list:
          - cognito-idp:ListGroups
    UserPoolIdentityProvider:
      type: object
      properties:
        UserPoolId:
          type: string
        ProviderName:
          type: string
        ProviderType:
          type: string
        ProviderDetails:
          type: object
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
        IdpIdentifiers:
          type: array
          items:
            type: string
        AttributeMapping:
          type: object
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
      required:
        - UserPoolId
        - ProviderName
        - ProviderType
        - ProviderDetails
      x-stackql-resource-name: user_pool_identity_provider
      description: Resource Type definition for AWS::Cognito::UserPoolIdentityProvider
      x-type-name: AWS::Cognito::UserPoolIdentityProvider
      x-stackql-primary-identifier:
        - UserPoolId
        - ProviderName
      x-create-only-properties:
        - UserPoolId
        - ProviderName
        - ProviderType
      x-required-properties:
        - UserPoolId
        - ProviderName
        - ProviderType
        - ProviderDetails
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:CreateIdentityProvider
          - cognito-idp:DescribeIdentityProvider
        read:
          - cognito-idp:DescribeIdentityProvider
        update:
          - cognito-idp:UpdateIdentityProvider
          - cognito-idp:DescribeIdentityProvider
        delete:
          - cognito-idp:DeleteIdentityProvider
          - cognito-idp:DescribeIdentityProvider
        list:
          - cognito-idp:ListIdentityProviders
    ResourceServerScopeType:
      type: object
      properties:
        ScopeDescription:
          type: string
        ScopeName:
          type: string
      required:
        - ScopeDescription
        - ScopeName
      additionalProperties: false
    UserPoolResourceServer:
      type: object
      properties:
        UserPoolId:
          type: string
        Identifier:
          type: string
        Name:
          type: string
        Scopes:
          type: array
          items:
            $ref: '#/components/schemas/ResourceServerScopeType'
      required:
        - UserPoolId
        - Identifier
        - Name
      x-stackql-resource-name: user_pool_resource_server
      description: Resource Type definition for AWS::Cognito::UserPoolResourceServer
      x-type-name: AWS::Cognito::UserPoolResourceServer
      x-stackql-primary-identifier:
        - UserPoolId
        - Identifier
      x-create-only-properties:
        - UserPoolId
        - Identifier
      x-required-properties:
        - UserPoolId
        - Identifier
        - Name
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:CreateResourceServer
        read:
          - cognito-idp:DescribeResourceServer
        update:
          - cognito-idp:UpdateResourceServer
        delete:
          - cognito-idp:DeleteResourceServer
        list:
          - cognito-idp:ListResourceServers
    RiskExceptionConfigurationType:
      type: object
      properties:
        BlockedIPRangeList:
          type: array
          uniqueItems: true
          items:
            type: string
        SkippedIPRangeList:
          type: array
          uniqueItems: true
          items:
            type: string
      additionalProperties: false
    CompromisedCredentialsActionsType:
      type: object
      properties:
        EventAction:
          type: string
      required:
        - EventAction
      additionalProperties: false
    CompromisedCredentialsRiskConfigurationType:
      type: object
      properties:
        Actions:
          $ref: '#/components/schemas/CompromisedCredentialsActionsType'
        EventFilter:
          type: array
          uniqueItems: true
          items:
            type: string
      required:
        - Actions
      additionalProperties: false
    AccountTakeoverActionType:
      type: object
      properties:
        EventAction:
          type: string
        Notify:
          type: boolean
      required:
        - EventAction
        - Notify
      additionalProperties: false
    AccountTakeoverActionsType:
      type: object
      properties:
        HighAction:
          $ref: '#/components/schemas/AccountTakeoverActionType'
        LowAction:
          $ref: '#/components/schemas/AccountTakeoverActionType'
        MediumAction:
          $ref: '#/components/schemas/AccountTakeoverActionType'
      additionalProperties: false
    NotifyEmailType:
      type: object
      properties:
        HtmlBody:
          type: string
        Subject:
          type: string
        TextBody:
          type: string
      required:
        - Subject
      additionalProperties: false
    NotifyConfigurationType:
      type: object
      properties:
        BlockEmail:
          $ref: '#/components/schemas/NotifyEmailType'
        MfaEmail:
          $ref: '#/components/schemas/NotifyEmailType'
        NoActionEmail:
          $ref: '#/components/schemas/NotifyEmailType'
        From:
          type: string
        ReplyTo:
          type: string
        SourceArn:
          type: string
      required:
        - SourceArn
      additionalProperties: false
    AccountTakeoverRiskConfigurationType:
      type: object
      properties:
        Actions:
          $ref: '#/components/schemas/AccountTakeoverActionsType'
        NotifyConfiguration:
          $ref: '#/components/schemas/NotifyConfigurationType'
      required:
        - Actions
      additionalProperties: false
    UserPoolRiskConfigurationAttachment:
      type: object
      properties:
        UserPoolId:
          type: string
        ClientId:
          type: string
        RiskExceptionConfiguration:
          $ref: '#/components/schemas/RiskExceptionConfigurationType'
        CompromisedCredentialsRiskConfiguration:
          $ref: '#/components/schemas/CompromisedCredentialsRiskConfigurationType'
        AccountTakeoverRiskConfiguration:
          $ref: '#/components/schemas/AccountTakeoverRiskConfigurationType'
      required:
        - UserPoolId
        - ClientId
      x-stackql-resource-name: user_pool_risk_configuration_attachment
      description: Resource Type definition for AWS::Cognito::UserPoolRiskConfigurationAttachment
      x-type-name: AWS::Cognito::UserPoolRiskConfigurationAttachment
      x-stackql-primary-identifier:
        - UserPoolId
        - ClientId
      x-create-only-properties:
        - UserPoolId
        - ClientId
      x-required-properties:
        - UserPoolId
        - ClientId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:SetRiskConfiguration
          - cognito-idp:DescribeRiskConfiguration
          - iam:PassRole
        read:
          - cognito-idp:DescribeRiskConfiguration
        update:
          - cognito-idp:SetRiskConfiguration
          - cognito-idp:DescribeRiskConfiguration
          - iam:PassRole
        delete:
          - cognito-idp:SetRiskConfiguration
          - cognito-idp:DescribeRiskConfiguration
    UserPoolUICustomizationAttachment:
      type: object
      properties:
        UserPoolId:
          type: string
        ClientId:
          type: string
        CSS:
          type: string
      required:
        - UserPoolId
        - ClientId
      x-stackql-resource-name: user_poolui_customization_attachment
      description: Resource Type definition for AWS::Cognito::UserPoolUICustomizationAttachment
      x-type-name: AWS::Cognito::UserPoolUICustomizationAttachment
      x-stackql-primary-identifier:
        - UserPoolId
        - ClientId
      x-create-only-properties:
        - UserPoolId
        - ClientId
      x-required-properties:
        - UserPoolId
        - ClientId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:SetUICustomization
          - cognito-idp:GetUICustomization
        read:
          - cognito-idp:GetUICustomization
        update:
          - cognito-idp:SetUICustomization
        delete:
          - cognito-idp:SetUICustomization
          - cognito-idp:GetUICustomization
    AttributeType:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      additionalProperties: false
    UserPoolUser:
      type: object
      properties:
        DesiredDeliveryMediums:
          type: array
          items:
            type: string
        ForceAliasCreation:
          type: boolean
        UserAttributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeType'
        MessageAction:
          type: string
        Username:
          type: string
        UserPoolId:
          type: string
        ValidationData:
          type: array
          items:
            $ref: '#/components/schemas/AttributeType'
        ClientMetadata:
          type: object
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
      required:
        - UserPoolId
      x-stackql-resource-name: user_pool_user
      description: Resource Type definition for AWS::Cognito::UserPoolUser
      x-type-name: AWS::Cognito::UserPoolUser
      x-stackql-primary-identifier:
        - UserPoolId
        - Username
      x-create-only-properties:
        - DesiredDeliveryMediums
        - ForceAliasCreation
        - UserAttributes
        - Username
        - UserPoolId
        - ValidationData
        - ClientMetadata
        - MessageAction
      x-write-only-properties:
        - DesiredDeliveryMediums
        - ForceAliasCreation
        - ValidationData
        - ClientMetadata
        - MessageAction
      x-required-properties:
        - UserPoolId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminGetUser
          - iam:PassRole
        read:
          - cognito-idp:AdminGetUser
        delete:
          - cognito-idp:AdminDeleteUser
        list:
          - cognito-idp:ListUsers
    UserPoolUserToGroupAttachment:
      type: object
      properties:
        UserPoolId:
          type: string
        Username:
          type: string
        GroupName:
          type: string
      required:
        - UserPoolId
        - Username
        - GroupName
      x-stackql-resource-name: user_pool_user_to_group_attachment
      description: Resource Type definition for AWS::Cognito::UserPoolUserToGroupAttachment
      x-type-name: AWS::Cognito::UserPoolUserToGroupAttachment
      x-stackql-primary-identifier:
        - UserPoolId
        - GroupName
        - Username
      x-create-only-properties:
        - UserPoolId
        - GroupName
        - Username
      x-required-properties:
        - UserPoolId
        - Username
        - GroupName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cognito-idp:AdminAddUserToGroup
          - cognito-idp:AdminListGroupsForUser
        delete:
          - cognito-idp:AdminRemoveUserFromGroup
          - cognito-idp:AdminListGroupsForUser
        read:
          - cognito-idp:AdminListGroupsForUser
    CreateIdentityPoolRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PushSync:
              $ref: '#/components/schemas/PushSync'
            CognitoIdentityProviders:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/CognitoIdentityProvider'
            DeveloperProviderName:
              type: string
            CognitoStreams:
              $ref: '#/components/schemas/CognitoStreams'
            SupportedLoginProviders:
              type: object
            Name:
              type: string
            CognitoEvents:
              type: object
            Id:
              type: string
            IdentityPoolName:
              type: string
            AllowUnauthenticatedIdentities:
              type: boolean
            SamlProviderARNs:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                type: string
            OpenIdConnectProviderARNs:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                type: string
            AllowClassicFlow:
              type: boolean
            IdentityPoolTags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateIdentityPoolRequest
      type: object
      required: []
    CreateIdentityPoolPrincipalTagRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IdentityPoolId:
              type: string
            IdentityProviderName:
              type: string
            UseDefaults:
              type: boolean
            PrincipalTags:
              type: object
          x-stackQL-stringOnly: true
      x-title: CreateIdentityPoolPrincipalTagRequest
      type: object
      required: []
    CreateIdentityPoolRoleAttachmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IdentityPoolId:
              type: string
            Roles:
              x-patternProperties:
                ^.+$:
                  type: string
              additionalProperties: false
            Id:
              type: string
            RoleMappings:
              x-patternProperties:
                ^.+$:
                  $ref: '#/components/schemas/RoleMapping'
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateIdentityPoolRoleAttachmentRequest
      type: object
      required: []
    CreateLogDeliveryConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
            UserPoolId:
              type: string
            LogConfigurations:
              $ref: '#/components/schemas/LogConfigurations'
          x-stackQL-stringOnly: true
      x-title: CreateLogDeliveryConfigurationRequest
      type: object
      required: []
    CreateManagedLoginBrandingRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserPoolId:
              type: string
            ClientId:
              type: string
            UseCognitoProvidedValues:
              type: boolean
            Settings:
              type: object
            Assets:
              $ref: '#/components/schemas/AssetList'
            ManagedLoginBrandingId:
              $ref: '#/components/schemas/ManagedLoginBrandingIdType'
            ReturnMergedResources:
              type: boolean
          x-stackQL-stringOnly: true
      x-title: CreateManagedLoginBrandingRequest
      type: object
      required: []
    CreateUserPoolRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserPoolName:
              type: string
              minLength: 1
              maxLength: 128
            Policies:
              $ref: '#/components/schemas/Policies'
            AccountRecoverySetting:
              $ref: '#/components/schemas/AccountRecoverySetting'
            AdminCreateUserConfig:
              $ref: '#/components/schemas/AdminCreateUserConfig'
            AliasAttributes:
              type: array
              items:
                type: string
            UsernameAttributes:
              type: array
              items:
                type: string
            AutoVerifiedAttributes:
              type: array
              items:
                type: string
            DeviceConfiguration:
              $ref: '#/components/schemas/DeviceConfiguration'
            EmailConfiguration:
              $ref: '#/components/schemas/EmailConfiguration'
            EmailVerificationMessage:
              type: string
              minLength: 6
              maxLength: 20000
            EmailVerificationSubject:
              type: string
              minLength: 1
              maxLength: 140
            DeletionProtection:
              type: string
            LambdaConfig:
              $ref: '#/components/schemas/LambdaConfig'
            MfaConfiguration:
              type: string
            EnabledMfas:
              type: array
              items:
                type: string
            SmsAuthenticationMessage:
              type: string
              minLength: 6
              maxLength: 140
            EmailAuthenticationMessage:
              type: string
              minLength: 6
              maxLength: 20000
            EmailAuthenticationSubject:
              type: string
              minLength: 1
              maxLength: 140
            SmsConfiguration:
              $ref: '#/components/schemas/SmsConfiguration'
            SmsVerificationMessage:
              type: string
              minLength: 6
              maxLength: 140
            WebAuthnRelyingPartyID:
              type: string
              minLength: 1
              maxLength: 63
            WebAuthnUserVerification:
              type: string
              minLength: 1
              maxLength: 9
            Schema:
              type: array
              items:
                $ref: '#/components/schemas/SchemaAttribute'
            UsernameConfiguration:
              $ref: '#/components/schemas/UsernameConfiguration'
            UserAttributeUpdateSettings:
              $ref: '#/components/schemas/UserAttributeUpdateSettings'
            UserPoolTags:
              type: object
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
              additionalProperties: false
            VerificationMessageTemplate:
              $ref: '#/components/schemas/VerificationMessageTemplate'
            UserPoolAddOns:
              $ref: '#/components/schemas/UserPoolAddOns'
            ProviderName:
              type: string
            ProviderURL:
              type: string
            Arn:
              type: string
            UserPoolId:
              type: string
            UserPoolTier:
              type: string
              enum:
                - LITE
                - ESSENTIALS
                - PLUS
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolRequest
      type: object
      required: []
    CreateUserPoolClientRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ClientName:
              type: string
              minLength: 1
              maxLength: 128
            ExplicitAuthFlows:
              type: array
              items:
                type: string
            GenerateSecret:
              type: boolean
            ReadAttributes:
              type: array
              items:
                type: string
            AuthSessionValidity:
              type: integer
              minimum: 3
              maximum: 15
            RefreshTokenValidity:
              type: integer
              minimum: 1
              maximum: 315360000
            AccessTokenValidity:
              type: integer
              minimum: 1
              maximum: 86400
            IdTokenValidity:
              type: integer
              minimum: 1
              maximum: 86400
            TokenValidityUnits:
              $ref: '#/components/schemas/TokenValidityUnits'
            UserPoolId:
              type: string
            WriteAttributes:
              type: array
              items:
                type: string
            AllowedOAuthFlows:
              type: array
              items:
                type: string
            AllowedOAuthFlowsUserPoolClient:
              type: boolean
            AllowedOAuthScopes:
              type: array
              items:
                type: string
            CallbackURLs:
              type: array
              items:
                type: string
            DefaultRedirectURI:
              type: string
            LogoutURLs:
              type: array
              items:
                type: string
            SupportedIdentityProviders:
              type: array
              items:
                type: string
            AnalyticsConfiguration:
              $ref: '#/components/schemas/AnalyticsConfiguration'
            PreventUserExistenceErrors:
              type: string
            EnableTokenRevocation:
              type: boolean
            EnablePropagateAdditionalUserContextData:
              type: boolean
            Name:
              type: string
            ClientSecret:
              type: string
            ClientId:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolClientRequest
      type: object
      required: []
    CreateUserPoolGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              maxLength: 2048
            GroupName:
              type: string
            Precedence:
              type: integer
              minimum: 0
            RoleArn:
              type: string
            UserPoolId:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolGroupRequest
      type: object
      required: []
    CreateUserPoolIdentityProviderRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserPoolId:
              type: string
            ProviderName:
              type: string
            ProviderType:
              type: string
            ProviderDetails:
              type: object
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
              additionalProperties: false
            IdpIdentifiers:
              type: array
              items:
                type: string
            AttributeMapping:
              type: object
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolIdentityProviderRequest
      type: object
      required: []
    CreateUserPoolResourceServerRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserPoolId:
              type: string
            Identifier:
              type: string
            Name:
              type: string
            Scopes:
              type: array
              items:
                $ref: '#/components/schemas/ResourceServerScopeType'
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolResourceServerRequest
      type: object
      required: []
    CreateUserPoolRiskConfigurationAttachmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserPoolId:
              type: string
            ClientId:
              type: string
            RiskExceptionConfiguration:
              $ref: '#/components/schemas/RiskExceptionConfigurationType'
            CompromisedCredentialsRiskConfiguration:
              $ref: '#/components/schemas/CompromisedCredentialsRiskConfigurationType'
            AccountTakeoverRiskConfiguration:
              $ref: '#/components/schemas/AccountTakeoverRiskConfigurationType'
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolRiskConfigurationAttachmentRequest
      type: object
      required: []
    CreateUserPoolUICustomizationAttachmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserPoolId:
              type: string
            ClientId:
              type: string
            CSS:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolUICustomizationAttachmentRequest
      type: object
      required: []
    CreateUserPoolUserRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DesiredDeliveryMediums:
              type: array
              items:
                type: string
            ForceAliasCreation:
              type: boolean
            UserAttributes:
              type: array
              items:
                $ref: '#/components/schemas/AttributeType'
            MessageAction:
              type: string
            Username:
              type: string
            UserPoolId:
              type: string
            ValidationData:
              type: array
              items:
                $ref: '#/components/schemas/AttributeType'
            ClientMetadata:
              type: object
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolUserRequest
      type: object
      required: []
    CreateUserPoolUserToGroupAttachmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserPoolId:
              type: string
            Username:
              type: string
            GroupName:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateUserPoolUserToGroupAttachmentRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    identity_pools:
      name: identity_pools
      id: aws.cognito.identity_pools
      x-cfn-schema-name: IdentityPool
      x-cfn-type-name: AWS::Cognito::IdentityPool
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IdentityPool&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/identity_pools/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/identity_pools/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/identity_pools/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PushSync') as push_sync,
              JSON_EXTRACT(Properties, '$.CognitoIdentityProviders') as cognito_identity_providers,
              JSON_EXTRACT(Properties, '$.DeveloperProviderName') as developer_provider_name,
              JSON_EXTRACT(Properties, '$.CognitoStreams') as cognito_streams,
              JSON_EXTRACT(Properties, '$.SupportedLoginProviders') as supported_login_providers,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.CognitoEvents') as cognito_events,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.IdentityPoolName') as identity_pool_name,
              JSON_EXTRACT(Properties, '$.AllowUnauthenticatedIdentities') as allow_unauthenticated_identities,
              JSON_EXTRACT(Properties, '$.SamlProviderARNs') as saml_provider_arns,
              JSON_EXTRACT(Properties, '$.OpenIdConnectProviderARNs') as open_id_connect_provider_arns,
              JSON_EXTRACT(Properties, '$.AllowClassicFlow') as allow_classic_flow,
              JSON_EXTRACT(Properties, '$.IdentityPoolTags') as identity_pool_tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPool'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.PushSync') as push_sync,
                JSON_EXTRACT(detail.Properties, '$.CognitoIdentityProviders') as cognito_identity_providers,
                JSON_EXTRACT(detail.Properties, '$.DeveloperProviderName') as developer_provider_name,
                JSON_EXTRACT(detail.Properties, '$.CognitoStreams') as cognito_streams,
                JSON_EXTRACT(detail.Properties, '$.SupportedLoginProviders') as supported_login_providers,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.CognitoEvents') as cognito_events,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.IdentityPoolName') as identity_pool_name,
                JSON_EXTRACT(detail.Properties, '$.AllowUnauthenticatedIdentities') as allow_unauthenticated_identities,
                JSON_EXTRACT(detail.Properties, '$.SamlProviderARNs') as saml_provider_arns,
                JSON_EXTRACT(detail.Properties, '$.OpenIdConnectProviderARNs') as open_id_connect_provider_arns,
                JSON_EXTRACT(detail.Properties, '$.AllowClassicFlow') as allow_classic_flow,
                JSON_EXTRACT(detail.Properties, '$.IdentityPoolTags') as identity_pool_tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::IdentityPool'
                AND detail.data__TypeName = 'AWS::Cognito::IdentityPool'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'PushSync') as push_sync,
                  json_extract_path_text(Properties, 'CognitoIdentityProviders') as cognito_identity_providers,
                  json_extract_path_text(Properties, 'DeveloperProviderName') as developer_provider_name,
                  json_extract_path_text(Properties, 'CognitoStreams') as cognito_streams,
                  json_extract_path_text(Properties, 'SupportedLoginProviders') as supported_login_providers,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'CognitoEvents') as cognito_events,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'IdentityPoolName') as identity_pool_name,
                  json_extract_path_text(Properties, 'AllowUnauthenticatedIdentities') as allow_unauthenticated_identities,
                  json_extract_path_text(Properties, 'SamlProviderARNs') as saml_provider_arns,
                  json_extract_path_text(Properties, 'OpenIdConnectProviderARNs') as open_id_connect_provider_arns,
                  json_extract_path_text(Properties, 'AllowClassicFlow') as allow_classic_flow,
                  json_extract_path_text(Properties, 'IdentityPoolTags') as identity_pool_tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPool'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'PushSync') as push_sync,
                    json_extract_path_text(detail.Properties, 'CognitoIdentityProviders') as cognito_identity_providers,
                    json_extract_path_text(detail.Properties, 'DeveloperProviderName') as developer_provider_name,
                    json_extract_path_text(detail.Properties, 'CognitoStreams') as cognito_streams,
                    json_extract_path_text(detail.Properties, 'SupportedLoginProviders') as supported_login_providers,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'CognitoEvents') as cognito_events,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'IdentityPoolName') as identity_pool_name,
                    json_extract_path_text(detail.Properties, 'AllowUnauthenticatedIdentities') as allow_unauthenticated_identities,
                    json_extract_path_text(detail.Properties, 'SamlProviderARNs') as saml_provider_arns,
                    json_extract_path_text(detail.Properties, 'OpenIdConnectProviderARNs') as open_id_connect_provider_arns,
                    json_extract_path_text(detail.Properties, 'AllowClassicFlow') as allow_classic_flow,
                    json_extract_path_text(detail.Properties, 'IdentityPoolTags') as identity_pool_tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::IdentityPool'
                    AND detail.data__TypeName = 'AWS::Cognito::IdentityPool'
                    AND listing.region = 'us-east-1'
    identity_pools_list_only:
      name: identity_pools_list_only
      id: aws.cognito.identity_pools_list_only
      x-cfn-schema-name: IdentityPool
      x-cfn-type-name: AWS::Cognito::IdentityPool
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPool'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPool'
                AND region = 'us-east-1'
    identity_pool_principal_tags:
      name: identity_pool_principal_tags
      id: aws.cognito.identity_pool_principal_tags
      x-cfn-schema-name: IdentityPoolPrincipalTag
      x-cfn-type-name: AWS::Cognito::IdentityPoolPrincipalTag
      x-identifiers:
        - IdentityPoolId
        - IdentityProviderName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IdentityPoolPrincipalTag&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPoolPrincipalTag"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPoolPrincipalTag"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPoolPrincipalTag"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/identity_pool_principal_tags/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/identity_pool_principal_tags/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/identity_pool_principal_tags/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IdentityPoolId') as identity_pool_id,
              JSON_EXTRACT(Properties, '$.IdentityProviderName') as identity_provider_name,
              JSON_EXTRACT(Properties, '$.UseDefaults') as use_defaults,
              JSON_EXTRACT(Properties, '$.PrincipalTags') as principal_tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
              AND data__Identifier = '<IdentityPoolId>|<IdentityProviderName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IdentityPoolId') as identity_pool_id,
                JSON_EXTRACT(detail.Properties, '$.IdentityProviderName') as identity_provider_name,
                JSON_EXTRACT(detail.Properties, '$.UseDefaults') as use_defaults,
                JSON_EXTRACT(detail.Properties, '$.PrincipalTags') as principal_tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
                AND detail.data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IdentityPoolId') as identity_pool_id,
                  json_extract_path_text(Properties, 'IdentityProviderName') as identity_provider_name,
                  json_extract_path_text(Properties, 'UseDefaults') as use_defaults,
                  json_extract_path_text(Properties, 'PrincipalTags') as principal_tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
                  AND data__Identifier = '<IdentityPoolId>|<IdentityProviderName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IdentityPoolId') as identity_pool_id,
                    json_extract_path_text(detail.Properties, 'IdentityProviderName') as identity_provider_name,
                    json_extract_path_text(detail.Properties, 'UseDefaults') as use_defaults,
                    json_extract_path_text(detail.Properties, 'PrincipalTags') as principal_tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
                    AND detail.data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
                    AND listing.region = 'us-east-1'
    identity_pool_principal_tags_list_only:
      name: identity_pool_principal_tags_list_only
      id: aws.cognito.identity_pool_principal_tags_list_only
      x-cfn-schema-name: IdentityPoolPrincipalTag
      x-cfn-type-name: AWS::Cognito::IdentityPoolPrincipalTag
      x-identifiers:
        - IdentityPoolId
        - IdentityProviderName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdentityPoolId') as identity_pool_id,
              JSON_EXTRACT(Properties, '$.IdentityProviderName') as identity_provider_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'IdentityPoolId') as identity_pool_id,
                json_extract_path_text(Properties, 'IdentityProviderName') as identity_provider_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPoolPrincipalTag'
                AND region = 'us-east-1'
    identity_pool_role_attachments:
      name: identity_pool_role_attachments
      id: aws.cognito.identity_pool_role_attachments
      x-cfn-schema-name: IdentityPoolRoleAttachment
      x-cfn-type-name: AWS::Cognito::IdentityPoolRoleAttachment
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IdentityPoolRoleAttachment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPoolRoleAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPoolRoleAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::IdentityPoolRoleAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/identity_pool_role_attachments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/identity_pool_role_attachments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/identity_pool_role_attachments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IdentityPoolId') as identity_pool_id,
              JSON_EXTRACT(Properties, '$.Roles') as roles,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RoleMappings') as role_mappings
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IdentityPoolId') as identity_pool_id,
                JSON_EXTRACT(detail.Properties, '$.Roles') as roles,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.RoleMappings') as role_mappings
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
                AND detail.data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IdentityPoolId') as identity_pool_id,
                  json_extract_path_text(Properties, 'Roles') as roles,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'RoleMappings') as role_mappings
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IdentityPoolId') as identity_pool_id,
                    json_extract_path_text(detail.Properties, 'Roles') as roles,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'RoleMappings') as role_mappings
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
                    AND detail.data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
                    AND listing.region = 'us-east-1'
    identity_pool_role_attachments_list_only:
      name: identity_pool_role_attachments_list_only
      id: aws.cognito.identity_pool_role_attachments_list_only
      x-cfn-schema-name: IdentityPoolRoleAttachment
      x-cfn-type-name: AWS::Cognito::IdentityPoolRoleAttachment
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::IdentityPoolRoleAttachment'
                AND region = 'us-east-1'
    log_delivery_configurations:
      name: log_delivery_configurations
      id: aws.cognito.log_delivery_configurations
      x-cfn-schema-name: LogDeliveryConfiguration
      x-cfn-type-name: AWS::Cognito::LogDeliveryConfiguration
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LogDeliveryConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::LogDeliveryConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::LogDeliveryConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::LogDeliveryConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/log_delivery_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/log_delivery_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/log_delivery_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.LogConfigurations') as log_configurations
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::LogDeliveryConfiguration'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'LogConfigurations') as log_configurations
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::LogDeliveryConfiguration'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    managed_login_brandings:
      name: managed_login_brandings
      id: aws.cognito.managed_login_brandings
      x-cfn-schema-name: ManagedLoginBranding
      x-cfn-type-name: AWS::Cognito::ManagedLoginBranding
      x-identifiers:
        - UserPoolId
        - ManagedLoginBrandingId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ManagedLoginBranding&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::ManagedLoginBranding"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::ManagedLoginBranding"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::ManagedLoginBranding"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_login_brandings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_login_brandings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/managed_login_brandings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id,
              JSON_EXTRACT(Properties, '$.UseCognitoProvidedValues') as use_cognito_provided_values,
              JSON_EXTRACT(Properties, '$.Settings') as settings,
              JSON_EXTRACT(Properties, '$.Assets') as assets,
              JSON_EXTRACT(Properties, '$.ManagedLoginBrandingId') as managed_login_branding_id,
              JSON_EXTRACT(Properties, '$.ReturnMergedResources') as return_merged_resources
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::ManagedLoginBranding'
              AND data__Identifier = '<UserPoolId>|<ManagedLoginBrandingId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'ClientId') as client_id,
                json_extract_path_text(Properties, 'UseCognitoProvidedValues') as use_cognito_provided_values,
                json_extract_path_text(Properties, 'Settings') as settings,
                json_extract_path_text(Properties, 'Assets') as assets,
                json_extract_path_text(Properties, 'ManagedLoginBrandingId') as managed_login_branding_id,
                json_extract_path_text(Properties, 'ReturnMergedResources') as return_merged_resources
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::ManagedLoginBranding'
                AND data__Identifier = '<UserPoolId>|<ManagedLoginBrandingId>'
                AND region = 'us-east-1'
    user_pools:
      name: user_pools
      id: aws.cognito.user_pools
      x-cfn-schema-name: UserPool
      x-cfn-type-name: AWS::Cognito::UserPool
      x-identifiers:
        - UserPoolId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPool&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pools/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pools/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_pools/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserPoolName') as user_pool_name,
              JSON_EXTRACT(Properties, '$.Policies') as policies,
              JSON_EXTRACT(Properties, '$.AccountRecoverySetting') as account_recovery_setting,
              JSON_EXTRACT(Properties, '$.AdminCreateUserConfig') as admin_create_user_config,
              JSON_EXTRACT(Properties, '$.AliasAttributes') as alias_attributes,
              JSON_EXTRACT(Properties, '$.UsernameAttributes') as username_attributes,
              JSON_EXTRACT(Properties, '$.AutoVerifiedAttributes') as auto_verified_attributes,
              JSON_EXTRACT(Properties, '$.DeviceConfiguration') as device_configuration,
              JSON_EXTRACT(Properties, '$.EmailConfiguration') as email_configuration,
              JSON_EXTRACT(Properties, '$.EmailVerificationMessage') as email_verification_message,
              JSON_EXTRACT(Properties, '$.EmailVerificationSubject') as email_verification_subject,
              JSON_EXTRACT(Properties, '$.DeletionProtection') as deletion_protection,
              JSON_EXTRACT(Properties, '$.LambdaConfig') as lambda_config,
              JSON_EXTRACT(Properties, '$.MfaConfiguration') as mfa_configuration,
              JSON_EXTRACT(Properties, '$.EnabledMfas') as enabled_mfas,
              JSON_EXTRACT(Properties, '$.SmsAuthenticationMessage') as sms_authentication_message,
              JSON_EXTRACT(Properties, '$.EmailAuthenticationMessage') as email_authentication_message,
              JSON_EXTRACT(Properties, '$.EmailAuthenticationSubject') as email_authentication_subject,
              JSON_EXTRACT(Properties, '$.SmsConfiguration') as sms_configuration,
              JSON_EXTRACT(Properties, '$.SmsVerificationMessage') as sms_verification_message,
              JSON_EXTRACT(Properties, '$.WebAuthnRelyingPartyID') as web_authn_relying_party_id,
              JSON_EXTRACT(Properties, '$.WebAuthnUserVerification') as web_authn_user_verification,
              JSON_EXTRACT(Properties, '$.Schema') as _schema,
              JSON_EXTRACT(Properties, '$.UsernameConfiguration') as username_configuration,
              JSON_EXTRACT(Properties, '$.UserAttributeUpdateSettings') as user_attribute_update_settings,
              JSON_EXTRACT(Properties, '$.UserPoolTags') as user_pool_tags,
              JSON_EXTRACT(Properties, '$.VerificationMessageTemplate') as verification_message_template,
              JSON_EXTRACT(Properties, '$.UserPoolAddOns') as user_pool_add_ons,
              JSON_EXTRACT(Properties, '$.ProviderName') as provider_name,
              JSON_EXTRACT(Properties, '$.ProviderURL') as provider_url,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.UserPoolTier') as user_pool_tier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPool'
              AND data__Identifier = '<UserPoolId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.UserPoolName') as user_pool_name,
                JSON_EXTRACT(detail.Properties, '$.Policies') as policies,
                JSON_EXTRACT(detail.Properties, '$.AccountRecoverySetting') as account_recovery_setting,
                JSON_EXTRACT(detail.Properties, '$.AdminCreateUserConfig') as admin_create_user_config,
                JSON_EXTRACT(detail.Properties, '$.AliasAttributes') as alias_attributes,
                JSON_EXTRACT(detail.Properties, '$.UsernameAttributes') as username_attributes,
                JSON_EXTRACT(detail.Properties, '$.AutoVerifiedAttributes') as auto_verified_attributes,
                JSON_EXTRACT(detail.Properties, '$.DeviceConfiguration') as device_configuration,
                JSON_EXTRACT(detail.Properties, '$.EmailConfiguration') as email_configuration,
                JSON_EXTRACT(detail.Properties, '$.EmailVerificationMessage') as email_verification_message,
                JSON_EXTRACT(detail.Properties, '$.EmailVerificationSubject') as email_verification_subject,
                JSON_EXTRACT(detail.Properties, '$.DeletionProtection') as deletion_protection,
                JSON_EXTRACT(detail.Properties, '$.LambdaConfig') as lambda_config,
                JSON_EXTRACT(detail.Properties, '$.MfaConfiguration') as mfa_configuration,
                JSON_EXTRACT(detail.Properties, '$.EnabledMfas') as enabled_mfas,
                JSON_EXTRACT(detail.Properties, '$.SmsAuthenticationMessage') as sms_authentication_message,
                JSON_EXTRACT(detail.Properties, '$.EmailAuthenticationMessage') as email_authentication_message,
                JSON_EXTRACT(detail.Properties, '$.EmailAuthenticationSubject') as email_authentication_subject,
                JSON_EXTRACT(detail.Properties, '$.SmsConfiguration') as sms_configuration,
                JSON_EXTRACT(detail.Properties, '$.SmsVerificationMessage') as sms_verification_message,
                JSON_EXTRACT(detail.Properties, '$.WebAuthnRelyingPartyID') as web_authn_relying_party_id,
                JSON_EXTRACT(detail.Properties, '$.WebAuthnUserVerification') as web_authn_user_verification,
                JSON_EXTRACT(detail.Properties, '$.Schema') as _schema,
                JSON_EXTRACT(detail.Properties, '$.UsernameConfiguration') as username_configuration,
                JSON_EXTRACT(detail.Properties, '$.UserAttributeUpdateSettings') as user_attribute_update_settings,
                JSON_EXTRACT(detail.Properties, '$.UserPoolTags') as user_pool_tags,
                JSON_EXTRACT(detail.Properties, '$.VerificationMessageTemplate') as verification_message_template,
                JSON_EXTRACT(detail.Properties, '$.UserPoolAddOns') as user_pool_add_ons,
                JSON_EXTRACT(detail.Properties, '$.ProviderName') as provider_name,
                JSON_EXTRACT(detail.Properties, '$.ProviderURL') as provider_url,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.UserPoolId') as user_pool_id,
                JSON_EXTRACT(detail.Properties, '$.UserPoolTier') as user_pool_tier
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::UserPool'
                AND detail.data__TypeName = 'AWS::Cognito::UserPool'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'UserPoolName') as user_pool_name,
                  json_extract_path_text(Properties, 'Policies') as policies,
                  json_extract_path_text(Properties, 'AccountRecoverySetting') as account_recovery_setting,
                  json_extract_path_text(Properties, 'AdminCreateUserConfig') as admin_create_user_config,
                  json_extract_path_text(Properties, 'AliasAttributes') as alias_attributes,
                  json_extract_path_text(Properties, 'UsernameAttributes') as username_attributes,
                  json_extract_path_text(Properties, 'AutoVerifiedAttributes') as auto_verified_attributes,
                  json_extract_path_text(Properties, 'DeviceConfiguration') as device_configuration,
                  json_extract_path_text(Properties, 'EmailConfiguration') as email_configuration,
                  json_extract_path_text(Properties, 'EmailVerificationMessage') as email_verification_message,
                  json_extract_path_text(Properties, 'EmailVerificationSubject') as email_verification_subject,
                  json_extract_path_text(Properties, 'DeletionProtection') as deletion_protection,
                  json_extract_path_text(Properties, 'LambdaConfig') as lambda_config,
                  json_extract_path_text(Properties, 'MfaConfiguration') as mfa_configuration,
                  json_extract_path_text(Properties, 'EnabledMfas') as enabled_mfas,
                  json_extract_path_text(Properties, 'SmsAuthenticationMessage') as sms_authentication_message,
                  json_extract_path_text(Properties, 'EmailAuthenticationMessage') as email_authentication_message,
                  json_extract_path_text(Properties, 'EmailAuthenticationSubject') as email_authentication_subject,
                  json_extract_path_text(Properties, 'SmsConfiguration') as sms_configuration,
                  json_extract_path_text(Properties, 'SmsVerificationMessage') as sms_verification_message,
                  json_extract_path_text(Properties, 'WebAuthnRelyingPartyID') as web_authn_relying_party_id,
                  json_extract_path_text(Properties, 'WebAuthnUserVerification') as web_authn_user_verification,
                  json_extract_path_text(Properties, 'Schema') as _schema,
                  json_extract_path_text(Properties, 'UsernameConfiguration') as username_configuration,
                  json_extract_path_text(Properties, 'UserAttributeUpdateSettings') as user_attribute_update_settings,
                  json_extract_path_text(Properties, 'UserPoolTags') as user_pool_tags,
                  json_extract_path_text(Properties, 'VerificationMessageTemplate') as verification_message_template,
                  json_extract_path_text(Properties, 'UserPoolAddOns') as user_pool_add_ons,
                  json_extract_path_text(Properties, 'ProviderName') as provider_name,
                  json_extract_path_text(Properties, 'ProviderURL') as provider_url,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                  json_extract_path_text(Properties, 'UserPoolTier') as user_pool_tier
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPool'
                  AND data__Identifier = '<UserPoolId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'UserPoolName') as user_pool_name,
                    json_extract_path_text(detail.Properties, 'Policies') as policies,
                    json_extract_path_text(detail.Properties, 'AccountRecoverySetting') as account_recovery_setting,
                    json_extract_path_text(detail.Properties, 'AdminCreateUserConfig') as admin_create_user_config,
                    json_extract_path_text(detail.Properties, 'AliasAttributes') as alias_attributes,
                    json_extract_path_text(detail.Properties, 'UsernameAttributes') as username_attributes,
                    json_extract_path_text(detail.Properties, 'AutoVerifiedAttributes') as auto_verified_attributes,
                    json_extract_path_text(detail.Properties, 'DeviceConfiguration') as device_configuration,
                    json_extract_path_text(detail.Properties, 'EmailConfiguration') as email_configuration,
                    json_extract_path_text(detail.Properties, 'EmailVerificationMessage') as email_verification_message,
                    json_extract_path_text(detail.Properties, 'EmailVerificationSubject') as email_verification_subject,
                    json_extract_path_text(detail.Properties, 'DeletionProtection') as deletion_protection,
                    json_extract_path_text(detail.Properties, 'LambdaConfig') as lambda_config,
                    json_extract_path_text(detail.Properties, 'MfaConfiguration') as mfa_configuration,
                    json_extract_path_text(detail.Properties, 'EnabledMfas') as enabled_mfas,
                    json_extract_path_text(detail.Properties, 'SmsAuthenticationMessage') as sms_authentication_message,
                    json_extract_path_text(detail.Properties, 'EmailAuthenticationMessage') as email_authentication_message,
                    json_extract_path_text(detail.Properties, 'EmailAuthenticationSubject') as email_authentication_subject,
                    json_extract_path_text(detail.Properties, 'SmsConfiguration') as sms_configuration,
                    json_extract_path_text(detail.Properties, 'SmsVerificationMessage') as sms_verification_message,
                    json_extract_path_text(detail.Properties, 'WebAuthnRelyingPartyID') as web_authn_relying_party_id,
                    json_extract_path_text(detail.Properties, 'WebAuthnUserVerification') as web_authn_user_verification,
                    json_extract_path_text(detail.Properties, 'Schema') as _schema,
                    json_extract_path_text(detail.Properties, 'UsernameConfiguration') as username_configuration,
                    json_extract_path_text(detail.Properties, 'UserAttributeUpdateSettings') as user_attribute_update_settings,
                    json_extract_path_text(detail.Properties, 'UserPoolTags') as user_pool_tags,
                    json_extract_path_text(detail.Properties, 'VerificationMessageTemplate') as verification_message_template,
                    json_extract_path_text(detail.Properties, 'UserPoolAddOns') as user_pool_add_ons,
                    json_extract_path_text(detail.Properties, 'ProviderName') as provider_name,
                    json_extract_path_text(detail.Properties, 'ProviderURL') as provider_url,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'UserPoolId') as user_pool_id,
                    json_extract_path_text(detail.Properties, 'UserPoolTier') as user_pool_tier
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::UserPool'
                    AND detail.data__TypeName = 'AWS::Cognito::UserPool'
                    AND listing.region = 'us-east-1'
    user_pools_list_only:
      name: user_pools_list_only
      id: aws.cognito.user_pools_list_only
      x-cfn-schema-name: UserPool
      x-cfn-type-name: AWS::Cognito::UserPool
      x-identifiers:
        - UserPoolId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPool'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPool'
                AND region = 'us-east-1'
    user_pool_clients:
      name: user_pool_clients
      id: aws.cognito.user_pool_clients
      x-cfn-schema-name: UserPoolClient
      x-cfn-type-name: AWS::Cognito::UserPoolClient
      x-identifiers:
        - UserPoolId
        - ClientId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolClient&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolClient"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolClient"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolClient"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pool_clients/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pool_clients/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_pool_clients/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClientName') as client_name,
              JSON_EXTRACT(Properties, '$.ExplicitAuthFlows') as explicit_auth_flows,
              JSON_EXTRACT(Properties, '$.GenerateSecret') as generate_secret,
              JSON_EXTRACT(Properties, '$.ReadAttributes') as read_attributes,
              JSON_EXTRACT(Properties, '$.AuthSessionValidity') as auth_session_validity,
              JSON_EXTRACT(Properties, '$.RefreshTokenValidity') as refresh_token_validity,
              JSON_EXTRACT(Properties, '$.AccessTokenValidity') as access_token_validity,
              JSON_EXTRACT(Properties, '$.IdTokenValidity') as id_token_validity,
              JSON_EXTRACT(Properties, '$.TokenValidityUnits') as token_validity_units,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.WriteAttributes') as write_attributes,
              JSON_EXTRACT(Properties, '$.AllowedOAuthFlows') as allowed_oauth_flows,
              JSON_EXTRACT(Properties, '$.AllowedOAuthFlowsUserPoolClient') as allowed_oauth_flows_user_pool_client,
              JSON_EXTRACT(Properties, '$.AllowedOAuthScopes') as allowed_oauth_scopes,
              JSON_EXTRACT(Properties, '$.CallbackURLs') as callback_urls,
              JSON_EXTRACT(Properties, '$.DefaultRedirectURI') as default_redirect_uri,
              JSON_EXTRACT(Properties, '$.LogoutURLs') as logout_urls,
              JSON_EXTRACT(Properties, '$.SupportedIdentityProviders') as supported_identity_providers,
              JSON_EXTRACT(Properties, '$.AnalyticsConfiguration') as analytics_configuration,
              JSON_EXTRACT(Properties, '$.PreventUserExistenceErrors') as prevent_user_existence_errors,
              JSON_EXTRACT(Properties, '$.EnableTokenRevocation') as enable_token_revocation,
              JSON_EXTRACT(Properties, '$.EnablePropagateAdditionalUserContextData') as enable_propagate_additional_user_context_data,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ClientSecret') as client_secret,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolClient'
              AND data__Identifier = '<UserPoolId>|<ClientId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ClientName') as client_name,
                JSON_EXTRACT(detail.Properties, '$.ExplicitAuthFlows') as explicit_auth_flows,
                JSON_EXTRACT(detail.Properties, '$.GenerateSecret') as generate_secret,
                JSON_EXTRACT(detail.Properties, '$.ReadAttributes') as read_attributes,
                JSON_EXTRACT(detail.Properties, '$.AuthSessionValidity') as auth_session_validity,
                JSON_EXTRACT(detail.Properties, '$.RefreshTokenValidity') as refresh_token_validity,
                JSON_EXTRACT(detail.Properties, '$.AccessTokenValidity') as access_token_validity,
                JSON_EXTRACT(detail.Properties, '$.IdTokenValidity') as id_token_validity,
                JSON_EXTRACT(detail.Properties, '$.TokenValidityUnits') as token_validity_units,
                JSON_EXTRACT(detail.Properties, '$.UserPoolId') as user_pool_id,
                JSON_EXTRACT(detail.Properties, '$.WriteAttributes') as write_attributes,
                JSON_EXTRACT(detail.Properties, '$.AllowedOAuthFlows') as allowed_oauth_flows,
                JSON_EXTRACT(detail.Properties, '$.AllowedOAuthFlowsUserPoolClient') as allowed_oauth_flows_user_pool_client,
                JSON_EXTRACT(detail.Properties, '$.AllowedOAuthScopes') as allowed_oauth_scopes,
                JSON_EXTRACT(detail.Properties, '$.CallbackURLs') as callback_urls,
                JSON_EXTRACT(detail.Properties, '$.DefaultRedirectURI') as default_redirect_uri,
                JSON_EXTRACT(detail.Properties, '$.LogoutURLs') as logout_urls,
                JSON_EXTRACT(detail.Properties, '$.SupportedIdentityProviders') as supported_identity_providers,
                JSON_EXTRACT(detail.Properties, '$.AnalyticsConfiguration') as analytics_configuration,
                JSON_EXTRACT(detail.Properties, '$.PreventUserExistenceErrors') as prevent_user_existence_errors,
                JSON_EXTRACT(detail.Properties, '$.EnableTokenRevocation') as enable_token_revocation,
                JSON_EXTRACT(detail.Properties, '$.EnablePropagateAdditionalUserContextData') as enable_propagate_additional_user_context_data,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ClientSecret') as client_secret,
                JSON_EXTRACT(detail.Properties, '$.ClientId') as client_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolClient'
                AND detail.data__TypeName = 'AWS::Cognito::UserPoolClient'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ClientName') as client_name,
                  json_extract_path_text(Properties, 'ExplicitAuthFlows') as explicit_auth_flows,
                  json_extract_path_text(Properties, 'GenerateSecret') as generate_secret,
                  json_extract_path_text(Properties, 'ReadAttributes') as read_attributes,
                  json_extract_path_text(Properties, 'AuthSessionValidity') as auth_session_validity,
                  json_extract_path_text(Properties, 'RefreshTokenValidity') as refresh_token_validity,
                  json_extract_path_text(Properties, 'AccessTokenValidity') as access_token_validity,
                  json_extract_path_text(Properties, 'IdTokenValidity') as id_token_validity,
                  json_extract_path_text(Properties, 'TokenValidityUnits') as token_validity_units,
                  json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                  json_extract_path_text(Properties, 'WriteAttributes') as write_attributes,
                  json_extract_path_text(Properties, 'AllowedOAuthFlows') as allowed_oauth_flows,
                  json_extract_path_text(Properties, 'AllowedOAuthFlowsUserPoolClient') as allowed_oauth_flows_user_pool_client,
                  json_extract_path_text(Properties, 'AllowedOAuthScopes') as allowed_oauth_scopes,
                  json_extract_path_text(Properties, 'CallbackURLs') as callback_urls,
                  json_extract_path_text(Properties, 'DefaultRedirectURI') as default_redirect_uri,
                  json_extract_path_text(Properties, 'LogoutURLs') as logout_urls,
                  json_extract_path_text(Properties, 'SupportedIdentityProviders') as supported_identity_providers,
                  json_extract_path_text(Properties, 'AnalyticsConfiguration') as analytics_configuration,
                  json_extract_path_text(Properties, 'PreventUserExistenceErrors') as prevent_user_existence_errors,
                  json_extract_path_text(Properties, 'EnableTokenRevocation') as enable_token_revocation,
                  json_extract_path_text(Properties, 'EnablePropagateAdditionalUserContextData') as enable_propagate_additional_user_context_data,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ClientSecret') as client_secret,
                  json_extract_path_text(Properties, 'ClientId') as client_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolClient'
                  AND data__Identifier = '<UserPoolId>|<ClientId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ClientName') as client_name,
                    json_extract_path_text(detail.Properties, 'ExplicitAuthFlows') as explicit_auth_flows,
                    json_extract_path_text(detail.Properties, 'GenerateSecret') as generate_secret,
                    json_extract_path_text(detail.Properties, 'ReadAttributes') as read_attributes,
                    json_extract_path_text(detail.Properties, 'AuthSessionValidity') as auth_session_validity,
                    json_extract_path_text(detail.Properties, 'RefreshTokenValidity') as refresh_token_validity,
                    json_extract_path_text(detail.Properties, 'AccessTokenValidity') as access_token_validity,
                    json_extract_path_text(detail.Properties, 'IdTokenValidity') as id_token_validity,
                    json_extract_path_text(detail.Properties, 'TokenValidityUnits') as token_validity_units,
                    json_extract_path_text(detail.Properties, 'UserPoolId') as user_pool_id,
                    json_extract_path_text(detail.Properties, 'WriteAttributes') as write_attributes,
                    json_extract_path_text(detail.Properties, 'AllowedOAuthFlows') as allowed_oauth_flows,
                    json_extract_path_text(detail.Properties, 'AllowedOAuthFlowsUserPoolClient') as allowed_oauth_flows_user_pool_client,
                    json_extract_path_text(detail.Properties, 'AllowedOAuthScopes') as allowed_oauth_scopes,
                    json_extract_path_text(detail.Properties, 'CallbackURLs') as callback_urls,
                    json_extract_path_text(detail.Properties, 'DefaultRedirectURI') as default_redirect_uri,
                    json_extract_path_text(detail.Properties, 'LogoutURLs') as logout_urls,
                    json_extract_path_text(detail.Properties, 'SupportedIdentityProviders') as supported_identity_providers,
                    json_extract_path_text(detail.Properties, 'AnalyticsConfiguration') as analytics_configuration,
                    json_extract_path_text(detail.Properties, 'PreventUserExistenceErrors') as prevent_user_existence_errors,
                    json_extract_path_text(detail.Properties, 'EnableTokenRevocation') as enable_token_revocation,
                    json_extract_path_text(detail.Properties, 'EnablePropagateAdditionalUserContextData') as enable_propagate_additional_user_context_data,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ClientSecret') as client_secret,
                    json_extract_path_text(detail.Properties, 'ClientId') as client_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolClient'
                    AND detail.data__TypeName = 'AWS::Cognito::UserPoolClient'
                    AND listing.region = 'us-east-1'
    user_pool_clients_list_only:
      name: user_pool_clients_list_only
      id: aws.cognito.user_pool_clients_list_only
      x-cfn-schema-name: UserPoolClient
      x-cfn-type-name: AWS::Cognito::UserPoolClient
      x-identifiers:
        - UserPoolId
        - ClientId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolClient'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'ClientId') as client_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolClient'
                AND region = 'us-east-1'
    user_pool_groups:
      name: user_pool_groups
      id: aws.cognito.user_pool_groups
      x-cfn-schema-name: UserPoolGroup
      x-cfn-type-name: AWS::Cognito::UserPoolGroup
      x-identifiers:
        - UserPoolId
        - GroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pool_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pool_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_pool_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.Precedence') as precedence,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolGroup'
              AND data__Identifier = '<UserPoolId>|<GroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.GroupName') as group_name,
                JSON_EXTRACT(detail.Properties, '$.Precedence') as precedence,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.UserPoolId') as user_pool_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolGroup'
                AND detail.data__TypeName = 'AWS::Cognito::UserPoolGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'GroupName') as group_name,
                  json_extract_path_text(Properties, 'Precedence') as precedence,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'UserPoolId') as user_pool_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolGroup'
                  AND data__Identifier = '<UserPoolId>|<GroupName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'GroupName') as group_name,
                    json_extract_path_text(detail.Properties, 'Precedence') as precedence,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'UserPoolId') as user_pool_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolGroup'
                    AND detail.data__TypeName = 'AWS::Cognito::UserPoolGroup'
                    AND listing.region = 'us-east-1'
    user_pool_groups_list_only:
      name: user_pool_groups_list_only
      id: aws.cognito.user_pool_groups_list_only
      x-cfn-schema-name: UserPoolGroup
      x-cfn-type-name: AWS::Cognito::UserPoolGroup
      x-identifiers:
        - UserPoolId
        - GroupName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'GroupName') as group_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolGroup'
                AND region = 'us-east-1'
    user_pool_identity_providers:
      name: user_pool_identity_providers
      id: aws.cognito.user_pool_identity_providers
      x-cfn-schema-name: UserPoolIdentityProvider
      x-cfn-type-name: AWS::Cognito::UserPoolIdentityProvider
      x-identifiers:
        - UserPoolId
        - ProviderName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolIdentityProvider&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolIdentityProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolIdentityProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolIdentityProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pool_identity_providers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pool_identity_providers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_pool_identity_providers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ProviderName') as provider_name,
              JSON_EXTRACT(Properties, '$.ProviderType') as provider_type,
              JSON_EXTRACT(Properties, '$.ProviderDetails') as provider_details,
              JSON_EXTRACT(Properties, '$.IdpIdentifiers') as idp_identifiers,
              JSON_EXTRACT(Properties, '$.AttributeMapping') as attribute_mapping
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
              AND data__Identifier = '<UserPoolId>|<ProviderName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.UserPoolId') as user_pool_id,
                JSON_EXTRACT(detail.Properties, '$.ProviderName') as provider_name,
                JSON_EXTRACT(detail.Properties, '$.ProviderType') as provider_type,
                JSON_EXTRACT(detail.Properties, '$.ProviderDetails') as provider_details,
                JSON_EXTRACT(detail.Properties, '$.IdpIdentifiers') as idp_identifiers,
                JSON_EXTRACT(detail.Properties, '$.AttributeMapping') as attribute_mapping
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
                AND detail.data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                  json_extract_path_text(Properties, 'ProviderName') as provider_name,
                  json_extract_path_text(Properties, 'ProviderType') as provider_type,
                  json_extract_path_text(Properties, 'ProviderDetails') as provider_details,
                  json_extract_path_text(Properties, 'IdpIdentifiers') as idp_identifiers,
                  json_extract_path_text(Properties, 'AttributeMapping') as attribute_mapping
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
                  AND data__Identifier = '<UserPoolId>|<ProviderName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'UserPoolId') as user_pool_id,
                    json_extract_path_text(detail.Properties, 'ProviderName') as provider_name,
                    json_extract_path_text(detail.Properties, 'ProviderType') as provider_type,
                    json_extract_path_text(detail.Properties, 'ProviderDetails') as provider_details,
                    json_extract_path_text(detail.Properties, 'IdpIdentifiers') as idp_identifiers,
                    json_extract_path_text(detail.Properties, 'AttributeMapping') as attribute_mapping
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
                    AND detail.data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
                    AND listing.region = 'us-east-1'
    user_pool_identity_providers_list_only:
      name: user_pool_identity_providers_list_only
      id: aws.cognito.user_pool_identity_providers_list_only
      x-cfn-schema-name: UserPoolIdentityProvider
      x-cfn-type-name: AWS::Cognito::UserPoolIdentityProvider
      x-identifiers:
        - UserPoolId
        - ProviderName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ProviderName') as provider_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'ProviderName') as provider_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolIdentityProvider'
                AND region = 'us-east-1'
    user_pool_resource_servers:
      name: user_pool_resource_servers
      id: aws.cognito.user_pool_resource_servers
      x-cfn-schema-name: UserPoolResourceServer
      x-cfn-type-name: AWS::Cognito::UserPoolResourceServer
      x-identifiers:
        - UserPoolId
        - Identifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolResourceServer&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolResourceServer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolResourceServer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolResourceServer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pool_resource_servers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pool_resource_servers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_pool_resource_servers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Identifier') as identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Scopes') as scopes
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
              AND data__Identifier = '<UserPoolId>|<Identifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.UserPoolId') as user_pool_id,
                JSON_EXTRACT(detail.Properties, '$.Identifier') as identifier,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Scopes') as scopes
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
                AND detail.data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                  json_extract_path_text(Properties, 'Identifier') as identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Scopes') as scopes
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
                  AND data__Identifier = '<UserPoolId>|<Identifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'UserPoolId') as user_pool_id,
                    json_extract_path_text(detail.Properties, 'Identifier') as identifier,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Scopes') as scopes
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
                    AND detail.data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
                    AND listing.region = 'us-east-1'
    user_pool_resource_servers_list_only:
      name: user_pool_resource_servers_list_only
      id: aws.cognito.user_pool_resource_servers_list_only
      x-cfn-schema-name: UserPoolResourceServer
      x-cfn-type-name: AWS::Cognito::UserPoolResourceServer
      x-identifiers:
        - UserPoolId
        - Identifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Identifier') as identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'Identifier') as identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolResourceServer'
                AND region = 'us-east-1'
    user_pool_risk_configuration_attachments:
      name: user_pool_risk_configuration_attachments
      id: aws.cognito.user_pool_risk_configuration_attachments
      x-cfn-schema-name: UserPoolRiskConfigurationAttachment
      x-cfn-type-name: AWS::Cognito::UserPoolRiskConfigurationAttachment
      x-identifiers:
        - UserPoolId
        - ClientId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolRiskConfigurationAttachment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolRiskConfigurationAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolRiskConfigurationAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolRiskConfigurationAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pool_risk_configuration_attachments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pool_risk_configuration_attachments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_pool_risk_configuration_attachments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id,
              JSON_EXTRACT(Properties, '$.RiskExceptionConfiguration') as risk_exception_configuration,
              JSON_EXTRACT(Properties, '$.CompromisedCredentialsRiskConfiguration') as compromised_credentials_risk_configuration,
              JSON_EXTRACT(Properties, '$.AccountTakeoverRiskConfiguration') as account_takeover_risk_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolRiskConfigurationAttachment'
              AND data__Identifier = '<UserPoolId>|<ClientId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'ClientId') as client_id,
                json_extract_path_text(Properties, 'RiskExceptionConfiguration') as risk_exception_configuration,
                json_extract_path_text(Properties, 'CompromisedCredentialsRiskConfiguration') as compromised_credentials_risk_configuration,
                json_extract_path_text(Properties, 'AccountTakeoverRiskConfiguration') as account_takeover_risk_configuration
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolRiskConfigurationAttachment'
                AND data__Identifier = '<UserPoolId>|<ClientId>'
                AND region = 'us-east-1'
    user_poolui_customization_attachments:
      name: user_poolui_customization_attachments
      id: aws.cognito.user_poolui_customization_attachments
      x-cfn-schema-name: UserPoolUICustomizationAttachment
      x-cfn-type-name: AWS::Cognito::UserPoolUICustomizationAttachment
      x-identifiers:
        - UserPoolId
        - ClientId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolUICustomizationAttachment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolUICustomizationAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolUICustomizationAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolUICustomizationAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_poolui_customization_attachments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_poolui_customization_attachments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_poolui_customization_attachments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id,
              JSON_EXTRACT(Properties, '$.CSS') as c_ss
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUICustomizationAttachment'
              AND data__Identifier = '<UserPoolId>|<ClientId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'ClientId') as client_id,
                json_extract_path_text(Properties, 'CSS') as c_ss
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUICustomizationAttachment'
                AND data__Identifier = '<UserPoolId>|<ClientId>'
                AND region = 'us-east-1'
    user_pool_users:
      name: user_pool_users
      id: aws.cognito.user_pool_users
      x-cfn-schema-name: UserPoolUser
      x-cfn-type-name: AWS::Cognito::UserPoolUser
      x-identifiers:
        - UserPoolId
        - Username
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolUser&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolUser"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolUser"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pool_users/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pool_users/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DesiredDeliveryMediums') as desired_delivery_mediums,
              JSON_EXTRACT(Properties, '$.ForceAliasCreation') as force_alias_creation,
              JSON_EXTRACT(Properties, '$.UserAttributes') as user_attributes,
              JSON_EXTRACT(Properties, '$.MessageAction') as message_action,
              JSON_EXTRACT(Properties, '$.Username') as username,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.ValidationData') as validation_data,
              JSON_EXTRACT(Properties, '$.ClientMetadata') as client_metadata
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUser'
              AND data__Identifier = '<UserPoolId>|<Username>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DesiredDeliveryMediums') as desired_delivery_mediums,
                JSON_EXTRACT(detail.Properties, '$.ForceAliasCreation') as force_alias_creation,
                JSON_EXTRACT(detail.Properties, '$.UserAttributes') as user_attributes,
                JSON_EXTRACT(detail.Properties, '$.MessageAction') as message_action,
                JSON_EXTRACT(detail.Properties, '$.Username') as username,
                JSON_EXTRACT(detail.Properties, '$.UserPoolId') as user_pool_id,
                JSON_EXTRACT(detail.Properties, '$.ValidationData') as validation_data,
                JSON_EXTRACT(detail.Properties, '$.ClientMetadata') as client_metadata
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolUser'
                AND detail.data__TypeName = 'AWS::Cognito::UserPoolUser'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DesiredDeliveryMediums') as desired_delivery_mediums,
                  json_extract_path_text(Properties, 'ForceAliasCreation') as force_alias_creation,
                  json_extract_path_text(Properties, 'UserAttributes') as user_attributes,
                  json_extract_path_text(Properties, 'MessageAction') as message_action,
                  json_extract_path_text(Properties, 'Username') as username,
                  json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                  json_extract_path_text(Properties, 'ValidationData') as validation_data,
                  json_extract_path_text(Properties, 'ClientMetadata') as client_metadata
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUser'
                  AND data__Identifier = '<UserPoolId>|<Username>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DesiredDeliveryMediums') as desired_delivery_mediums,
                    json_extract_path_text(detail.Properties, 'ForceAliasCreation') as force_alias_creation,
                    json_extract_path_text(detail.Properties, 'UserAttributes') as user_attributes,
                    json_extract_path_text(detail.Properties, 'MessageAction') as message_action,
                    json_extract_path_text(detail.Properties, 'Username') as username,
                    json_extract_path_text(detail.Properties, 'UserPoolId') as user_pool_id,
                    json_extract_path_text(detail.Properties, 'ValidationData') as validation_data,
                    json_extract_path_text(detail.Properties, 'ClientMetadata') as client_metadata
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cognito::UserPoolUser'
                    AND detail.data__TypeName = 'AWS::Cognito::UserPoolUser'
                    AND listing.region = 'us-east-1'
    user_pool_users_list_only:
      name: user_pool_users_list_only
      id: aws.cognito.user_pool_users_list_only
      x-cfn-schema-name: UserPoolUser
      x-cfn-type-name: AWS::Cognito::UserPoolUser
      x-identifiers:
        - UserPoolId
        - Username
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Username') as username
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolUser'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'Username') as username
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cognito::UserPoolUser'
                AND region = 'us-east-1'
    user_pool_user_to_group_attachments:
      name: user_pool_user_to_group_attachments
      id: aws.cognito.user_pool_user_to_group_attachments
      x-cfn-schema-name: UserPoolUserToGroupAttachment
      x-cfn-type-name: AWS::Cognito::UserPoolUserToGroupAttachment
      x-identifiers:
        - UserPoolId
        - GroupName
        - Username
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPoolUserToGroupAttachment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolUserToGroupAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cognito::UserPoolUserToGroupAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_pool_user_to_group_attachments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_pool_user_to_group_attachments/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserPoolId') as user_pool_id,
              JSON_EXTRACT(Properties, '$.Username') as username,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUserToGroupAttachment'
              AND data__Identifier = '<UserPoolId>|<GroupName>|<Username>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'UserPoolId') as user_pool_id,
                json_extract_path_text(Properties, 'Username') as username,
                json_extract_path_text(Properties, 'GroupName') as group_name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cognito::UserPoolUserToGroupAttachment'
                AND data__Identifier = '<UserPoolId>|<GroupName>|<Username>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IdentityPool&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIdentityPool
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIdentityPoolRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IdentityPoolPrincipalTag&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIdentityPoolPrincipalTag
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIdentityPoolPrincipalTagRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IdentityPoolRoleAttachment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIdentityPoolRoleAttachment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIdentityPoolRoleAttachmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LogDeliveryConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLogDeliveryConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLogDeliveryConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ManagedLoginBranding&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateManagedLoginBranding
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateManagedLoginBrandingRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPool&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPool
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolClient&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolClient
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolClientRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolIdentityProvider&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolIdentityProvider
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolIdentityProviderRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolResourceServer&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolResourceServer
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolResourceServerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolRiskConfigurationAttachment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolRiskConfigurationAttachment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolRiskConfigurationAttachmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolUICustomizationAttachment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolUICustomizationAttachment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolUICustomizationAttachmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolUser&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolUser
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolUserRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPoolUserToGroupAttachment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPoolUserToGroupAttachment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPoolUserToGroupAttachmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
