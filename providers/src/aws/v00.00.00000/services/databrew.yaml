openapi: 3.0.0
info:
  title: DataBrew
  version: 1.0.0
paths: {}
components:
  schemas:
    JsonOptions:
      description: Json options
      type: object
      properties:
        MultiLine:
          type: boolean
      additionalProperties: false
    ExcelOptions:
      type: object
      properties:
        SheetNames:
          type: array
          x-insertionOrder: true
          items:
            type: string
          minItems: 1
          maxItems: 1
        SheetIndexes:
          type: array
          x-insertionOrder: true
          items:
            type: integer
          minItems: 1
          maxItems: 1
        HeaderRow:
          type: boolean
      oneOf:
        - required:
            - SheetNames
        - required:
            - SheetIndexes
      additionalProperties: false
    CsvOptions:
      description: Csv options
      type: object
      properties:
        Delimiter:
          type: string
          minLength: 1
          maxLength: 1
        HeaderRow:
          type: boolean
      additionalProperties: false
    FormatOptions:
      description: Format options for dataset
      type: object
      properties:
        Json:
          $ref: '#/components/schemas/JsonOptions'
        Excel:
          $ref: '#/components/schemas/ExcelOptions'
        Csv:
          $ref: '#/components/schemas/CsvOptions'
      additionalProperties: false
    Input:
      description: Input
      type: object
      properties:
        S3InputDefinition:
          $ref: '#/components/schemas/S3Location'
        DataCatalogInputDefinition:
          $ref: '#/components/schemas/DataCatalogInputDefinition'
        DatabaseInputDefinition:
          $ref: '#/components/schemas/DatabaseInputDefinition'
        Metadata:
          $ref: '#/components/schemas/Metadata'
      additionalProperties: false
    S3Location:
      description: Input location
      type: object
      properties:
        Bucket:
          type: string
        Key:
          type: string
      additionalProperties: false
      required:
        - Bucket
    DataCatalogInputDefinition:
      type: object
      properties:
        CatalogId:
          description: Catalog id
          type: string
        DatabaseName:
          description: Database name
          type: string
        TableName:
          description: Table name
          type: string
        TempDirectory:
          $ref: '#/components/schemas/S3Location'
      additionalProperties: false
    DatabaseInputDefinition:
      type: object
      properties:
        GlueConnectionName:
          description: Glue connection name
          type: string
        DatabaseTableName:
          description: Database table name
          type: string
        TempDirectory:
          $ref: '#/components/schemas/S3Location'
        QueryString:
          description: Custom SQL to run against the provided AWS Glue connection. This SQL will be used as the input for DataBrew projects and jobs.
          type: string
      additionalProperties: false
      required:
        - GlueConnectionName
    Metadata:
      type: object
      properties:
        SourceArn:
          description: 'Arn of the source of the dataset. For e.g.: AppFlow Flow ARN.'
          type: string
      additionalProperties: false
    PathOptions:
      description: Path options for dataset
      type: object
      properties:
        FilesLimit:
          $ref: '#/components/schemas/FilesLimit'
        LastModifiedDateCondition:
          $ref: '#/components/schemas/FilterExpression'
        Parameters:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/PathParameter'
      additionalProperties: false
    FilesLimit:
      type: object
      properties:
        MaxFiles:
          description: Maximum number of files
          type: integer
        OrderedBy:
          description: Ordered by
          enum:
            - LAST_MODIFIED_DATE
          type: string
        Order:
          description: Order
          enum:
            - ASCENDING
            - DESCENDING
          type: string
      additionalProperties: false
      required:
        - MaxFiles
    PathParameter:
      description: A key-value pair to associate dataset parameter name with its definition.
      type: object
      properties:
        PathParameterName:
          $ref: '#/components/schemas/PathParameterName'
        DatasetParameter:
          $ref: '#/components/schemas/DatasetParameter'
      additionalProperties: false
      required:
        - PathParameterName
        - DatasetParameter
    PathParameterName:
      description: Parameter name
      type: string
      minLength: 1
      maxLength: 255
    DatasetParameter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/PathParameterName'
        Type:
          description: Parameter type
          enum:
            - String
            - Number
            - Datetime
          type: string
        DatetimeOptions:
          $ref: '#/components/schemas/DatetimeOptions'
        CreateColumn:
          description: Add the value of this parameter as a column in a dataset.
          type: boolean
        Filter:
          $ref: '#/components/schemas/FilterExpression'
      additionalProperties: false
      required:
        - Name
        - Type
    DatetimeOptions:
      type: object
      properties:
        Format:
          description: Date/time format of a date parameter
          type: string
          minLength: 2
          maxLength: 100
        TimezoneOffset:
          description: Timezone offset
          type: string
          minLength: 1
          maxLength: 6
          pattern: ^(Z|[-+](\d|\d{2}|\d{2}:?\d{2}))$
        LocaleCode:
          description: Locale code for a date parameter
          type: string
          minLength: 2
          maxLength: 100
          pattern: ^[A-Za-z0-9_\.#@\-]+$
      additionalProperties: false
      required:
        - Format
    FilterExpression:
      type: object
      properties:
        Expression:
          description: Filtering expression for a parameter
          type: string
          minLength: 4
          maxLength: 1024
          pattern: ^[><0-9A-Za-z_.,:)(!= ]+$
        ValuesMap:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/FilterValue'
      additionalProperties: false
      required:
        - Expression
        - ValuesMap
    FilterValue:
      description: A key-value pair to associate expression variable names with their values
      type: object
      properties:
        ValueReference:
          description: Variable name
          type: string
          minLength: 2
          maxLength: 128
          pattern: ^:[A-Za-z0-9_]+$
        Value:
          type: string
          minLength: 0
          maxLength: 1024
      additionalProperties: false
      required:
        - ValueReference
        - Value
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Value
        - Key
    Dataset:
      type: object
      properties:
        Name:
          description: Dataset name
          type: string
          minLength: 1
          maxLength: 255
        Format:
          description: Dataset format
          enum:
            - CSV
            - JSON
            - PARQUET
            - EXCEL
            - ORC
          type: string
        FormatOptions:
          description: Format options for dataset
          $ref: '#/components/schemas/FormatOptions'
        Input:
          description: Input
          $ref: '#/components/schemas/Input'
        PathOptions:
          description: PathOptions
          $ref: '#/components/schemas/PathOptions'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Input
      x-stackql-resource-name: dataset
      x-stackql-primaryIdentifier:
        - Name
    CsvOutputOptions:
      description: Output Csv options
      type: object
      properties:
        Delimiter:
          type: string
          minLength: 1
          maxLength: 1
      additionalProperties: false
    OutputFormatOptions:
      description: Format options for job Output
      type: object
      properties:
        Csv:
          $ref: '#/components/schemas/CsvOutputOptions'
      additionalProperties: false
    OutputLocation:
      description: Output location
      type: object
      properties:
        Bucket:
          type: string
        Key:
          type: string
        BucketOwner:
          type: string
          minLength: 12
          maxLength: 12
      additionalProperties: false
      required:
        - Bucket
    Output:
      type: object
      properties:
        CompressionFormat:
          enum:
            - GZIP
            - LZ4
            - SNAPPY
            - BZIP2
            - DEFLATE
            - LZO
            - BROTLI
            - ZSTD
            - ZLIB
          type: string
        Format:
          enum:
            - CSV
            - JSON
            - PARQUET
            - GLUEPARQUET
            - AVRO
            - ORC
            - XML
            - TABLEAUHYPER
          type: string
        FormatOptions:
          $ref: '#/components/schemas/OutputFormatOptions'
        PartitionColumns:
          type: array
          x-insertionOrder: true
          uniqueItems: true
          items:
            type: string
        Location:
          $ref: '#/components/schemas/S3Location'
        Overwrite:
          type: boolean
        MaxOutputFiles:
          type: integer
          minimum: 1
          maximum: 999
      additionalProperties: false
      required:
        - Location
    DataCatalogOutput:
      type: object
      properties:
        CatalogId:
          type: string
          minLength: 1
          maxLength: 255
        DatabaseName:
          type: string
          minLength: 1
          maxLength: 255
        TableName:
          type: string
          minLength: 1
          maxLength: 255
        S3Options:
          $ref: '#/components/schemas/S3TableOutputOptions'
        DatabaseOptions:
          $ref: '#/components/schemas/DatabaseTableOutputOptions'
        Overwrite:
          type: boolean
      additionalProperties: false
      required:
        - DatabaseName
        - TableName
    S3TableOutputOptions:
      type: object
      properties:
        Location:
          $ref: '#/components/schemas/S3Location'
      additionalProperties: false
      required:
        - Location
    DatabaseTableOutputOptions:
      type: object
      properties:
        TempDirectory:
          $ref: '#/components/schemas/S3Location'
        TableName:
          type: string
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - TableName
    DatabaseOutput:
      type: object
      properties:
        GlueConnectionName:
          description: Glue connection name
          type: string
        DatabaseOutputMode:
          description: Database table name
          enum:
            - NEW_TABLE
          type: string
        DatabaseOptions:
          $ref: '#/components/schemas/DatabaseTableOutputOptions'
      additionalProperties: false
      required:
        - GlueConnectionName
        - DatabaseOptions
    Recipe:
      type: object
      properties:
        Description:
          description: Description of the recipe
          minLength: 0
          maxLength: 1024
          type: string
        Name:
          description: Recipe name
          type: string
          minLength: 1
          maxLength: 255
        Steps:
          type: array
          x-insertionOrder: true
          items:
            type: object
            $ref: '#/components/schemas/RecipeStep'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Steps
      x-stackql-resource-name: recipe
      x-stackql-primaryIdentifier:
        - Name
    SampleMode:
      description: Sample configuration mode for profile jobs.
      enum:
        - FULL_DATASET
        - CUSTOM_ROWS
      type: string
    JobSize:
      description: Sample configuration size for profile jobs.
      format: int64
      type: integer
    JobSample:
      description: Job Sample
      type: object
      properties:
        Mode:
          $ref: '#/components/schemas/SampleMode'
        Size:
          $ref: '#/components/schemas/JobSize'
      additionalProperties: false
    ProfileConfiguration:
      type: object
      properties:
        DatasetStatisticsConfiguration:
          $ref: '#/components/schemas/StatisticsConfiguration'
        ProfileColumns:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ColumnSelector'
          minItems: 1
        ColumnStatisticsConfigurations:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ColumnStatisticsConfiguration'
          minItems: 1
        EntityDetectorConfiguration:
          $ref: '#/components/schemas/EntityDetectorConfiguration'
      additionalProperties: false
    EntityDetectorConfiguration:
      type: object
      additionalProperties: false
      required:
        - EntityTypes
      properties:
        EntityTypes:
          type: array
          x-insertionOrder: true
          minItems: 1
          items:
            type: string
            minLength: 1
            maxLength: 128
            pattern: ^[A-Z_][A-Z\\d_]*$
        AllowedStatistics:
          $ref: '#/components/schemas/AllowedStatistics'
    AllowedStatistics:
      type: object
      additionalProperties: false
      required:
        - Statistics
      properties:
        Statistics:
          type: array
          x-insertionOrder: true
          minItems: 1
          items:
            $ref: '#/components/schemas/Statistic'
    ColumnStatisticsConfiguration:
      type: object
      properties:
        Selectors:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ColumnSelector'
          minItems: 1
        Statistics:
          $ref: '#/components/schemas/StatisticsConfiguration'
      required:
        - Statistics
      additionalProperties: false
    StatisticsConfiguration:
      type: object
      properties:
        IncludedStatistics:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Statistic'
          minItems: 1
        Overrides:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/StatisticOverride'
          minItems: 1
      additionalProperties: false
    ColumnSelector:
      description: Selector of a column from a dataset for profile job configuration. One selector includes either a column name or a regular expression
      type: object
      properties:
        Regex:
          description: A regular expression for selecting a column from a dataset
          type: string
          minLength: 1
          maxLength: 255
        Name:
          description: The name of a column from a dataset
          type: string
          minLength: 1
          maxLength: 255
      additionalProperties: false
    Statistic:
      type: string
      minLength: 1
      maxLength: 128
      pattern: ^[A-Z\_]+$
    StatisticOverride:
      type: object
      properties:
        Statistic:
          $ref: '#/components/schemas/Statistic'
        Parameters:
          $ref: '#/components/schemas/ParameterMap'
      required:
        - Statistic
        - Parameters
      additionalProperties: false
    ParameterMap:
      type: object
      additionalProperties: false
      x-patternProperties:
        ^[A-Za-z0-9]{1,128}$:
          type: string
    ValidationMode:
      type: string
      enum:
        - CHECK_ALL
    ValidationConfiguration:
      description: Configuration to attach Rulesets to the job
      type: object
      additionalProperties: false
      properties:
        RulesetArn:
          description: Arn of the Ruleset
          type: string
          minLength: 20
          maxLength: 2048
        ValidationMode:
          $ref: '#/components/schemas/ValidationMode'
      required:
        - RulesetArn
    Job:
      type: object
      properties:
        DatasetName:
          description: Dataset name
          type: string
          minLength: 1
          maxLength: 255
        EncryptionKeyArn:
          description: Encryption Key Arn
          type: string
          minLength: 20
          maxLength: 2048
        EncryptionMode:
          description: Encryption mode
          enum:
            - SSE-KMS
            - SSE-S3
          type: string
        Name:
          description: Job name
          type: string
          minLength: 1
          maxLength: 255
        Type:
          description: Job type
          enum:
            - PROFILE
            - RECIPE
          type: string
        LogSubscription:
          description: Log subscription
          enum:
            - ENABLE
            - DISABLE
          type: string
        MaxCapacity:
          description: Max capacity
          type: integer
        MaxRetries:
          description: Max retries
          type: integer
        Outputs:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Output'
        DataCatalogOutputs:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/DataCatalogOutput'
        DatabaseOutputs:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/DatabaseOutput'
        OutputLocation:
          description: Output location
          $ref: '#/components/schemas/OutputLocation'
        ProjectName:
          description: Project name
          type: string
          minLength: 1
          maxLength: 255
        Recipe:
          $ref: '#/components/schemas/Recipe'
        RoleArn:
          description: Role arn
          type: string
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Timeout:
          description: Timeout
          type: integer
        JobSample:
          description: Job Sample
          $ref: '#/components/schemas/JobSample'
        ProfileConfiguration:
          description: Profile Job configuration
          $ref: '#/components/schemas/ProfileConfiguration'
        ValidationConfigurations:
          description: Data quality rules configuration
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ValidationConfiguration'
      required:
        - Name
        - RoleArn
        - Type
      x-stackql-resource-name: job
      x-stackql-primaryIdentifier:
        - Name
    Sample:
      type: object
      properties:
        Size:
          description: Sample size
          minimum: 1
          type: integer
        Type:
          description: Sample type
          enum:
            - FIRST_N
            - LAST_N
            - RANDOM
          type: string
      additionalProperties: false
      required:
        - Type
    Project:
      type: object
      properties:
        DatasetName:
          description: Dataset name
          type: string
          minLength: 1
          maxLength: 255
        Name:
          description: Project name
          type: string
          minLength: 1
          maxLength: 255
        RecipeName:
          description: Recipe name
          type: string
          minLength: 1
          maxLength: 255
        RoleArn:
          description: Role arn
          type: string
        Sample:
          description: Sample
          $ref: '#/components/schemas/Sample'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DatasetName
        - Name
        - RecipeName
        - RoleArn
      x-stackql-resource-name: project
      x-stackql-primaryIdentifier:
        - Name
    SecondaryInput:
      description: Secondary input
      type: object
      properties:
        S3InputDefinition:
          $ref: '#/components/schemas/S3Location'
        DataCatalogInputDefinition:
          $ref: '#/components/schemas/DataCatalogInputDefinition'
      oneOf:
        - required:
            - S3InputDefinition
        - required:
            - DataCatalogInputDefinition
      additionalProperties: false
    RecipeStep:
      type: object
      properties:
        Action:
          $ref: '#/components/schemas/Action'
        ConditionExpressions:
          description: Condition expressions applied to the step action
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ConditionExpression'
      additionalProperties: false
      required:
        - Action
    Action:
      type: object
      properties:
        Operation:
          description: Step action operation
          type: string
        Parameters:
          anyOf:
            - $ref: '#/components/schemas/RecipeParameters'
            - $ref: '#/components/schemas/ParameterMap'
      additionalProperties: false
      required:
        - Operation
    ConditionExpression:
      description: Condition expressions applied to the step action
      type: object
      properties:
        Condition:
          description: Input condition to be applied to the target column
          type: string
        Value:
          description: Value of the condition
          type: string
        TargetColumn:
          description: Name of the target column
          type: string
      additionalProperties: false
      required:
        - Condition
        - TargetColumn
    RecipeParameters:
      additionalProperties: false
      properties:
        AggregateFunction:
          type: string
        Base:
          type: string
        CaseStatement:
          type: string
        CategoryMap:
          type: string
        CharsToRemove:
          type: string
        CollapseConsecutiveWhitespace:
          type: string
        ColumnDataType:
          type: string
        ColumnRange:
          type: string
        Count:
          type: string
        CustomCharacters:
          type: string
        CustomStopWords:
          type: string
        CustomValue:
          type: string
        DatasetsColumns:
          type: string
        DateAddValue:
          type: string
        DateTimeFormat:
          type: string
        DateTimeParameters:
          type: string
        DeleteOtherRows:
          type: string
        Delimiter:
          type: string
        EndPattern:
          type: string
        EndPosition:
          type: string
        EndValue:
          type: string
        ExpandContractions:
          type: string
        Exponent:
          type: string
        FalseString:
          type: string
        GroupByAggFunctionOptions:
          type: string
        GroupByColumns:
          type: string
        HiddenColumns:
          type: string
        IgnoreCase:
          type: string
        IncludeInSplit:
          type: string
        Interval:
          type: string
        IsText:
          type: string
        JoinKeys:
          type: string
        JoinType:
          type: string
        LeftColumns:
          type: string
        Limit:
          type: string
        LowerBound:
          type: string
        MapType:
          type: string
        ModeType:
          type: string
        MultiLine:
          type: boolean
        NumRows:
          type: string
        NumRowsAfter:
          type: string
        NumRowsBefore:
          type: string
        OrderByColumn:
          type: string
        OrderByColumns:
          type: string
        Other:
          type: string
        Pattern:
          type: string
        PatternOption1:
          type: string
        PatternOption2:
          type: string
        PatternOptions:
          type: string
        Period:
          type: string
        Position:
          type: string
        RemoveAllPunctuation:
          type: string
        RemoveAllQuotes:
          type: string
        RemoveAllWhitespace:
          type: string
        RemoveCustomCharacters:
          type: string
        RemoveCustomValue:
          type: string
        RemoveLeadingAndTrailingPunctuation:
          type: string
        RemoveLeadingAndTrailingQuotes:
          type: string
        RemoveLeadingAndTrailingWhitespace:
          type: string
        RemoveLetters:
          type: string
        RemoveNumbers:
          type: string
        RemoveSourceColumn:
          type: string
        RemoveSpecialCharacters:
          type: string
        RightColumns:
          type: string
        SampleSize:
          type: string
        SampleType:
          type: string
        SecondInput:
          type: string
        SecondaryInputs:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SecondaryInput'
        SourceColumn:
          type: string
        SourceColumn1:
          type: string
        SourceColumn2:
          type: string
        SourceColumns:
          type: string
        StartColumnIndex:
          type: string
        StartPattern:
          type: string
        StartPosition:
          type: string
        StartValue:
          type: string
        StemmingMode:
          type: string
        StepCount:
          type: string
        StepIndex:
          type: string
        StopWordsMode:
          type: string
        Strategy:
          type: string
        SheetNames:
          type: array
          x-insertionOrder: true
          items:
            type: string
          minItems: 1
          maxItems: 1
        SheetIndexes:
          type: array
          x-insertionOrder: true
          items:
            type: integer
          minItems: 1
          maxItems: 1
        TargetColumn:
          type: string
        TargetColumnNames:
          type: string
        TargetDateFormat:
          type: string
        TargetIndex:
          type: string
        TimeZone:
          type: string
        TokenizerPattern:
          type: string
        TrueString:
          type: string
        UdfLang:
          type: string
        Units:
          type: string
        UnpivotColumn:
          type: string
        UpperBound:
          type: string
        UseNewDataFrame:
          type: string
        Value:
          type: string
        Value1:
          type: string
        Value2:
          type: string
        ValueColumn:
          type: string
        ViewFrame:
          type: string
        Input:
          description: Input
          type: object
          properties:
            S3InputDefinition:
              $ref: '#/components/schemas/S3Location'
            DataCatalogInputDefinition:
              $ref: '#/components/schemas/DataCatalogInputDefinition'
          oneOf:
            - required:
                - S3InputDefinition
            - required:
                - DataCatalogInputDefinition
          additionalProperties: false
    Expression:
      description: Expression with rule conditions
      type: string
      minLength: 4
      maxLength: 1024
      pattern: ^[><0-9A-Za-z_.,:)(!= ]+$
    SubstitutionValue:
      description: A key-value pair to associate expression's substitution variable names with their values
      type: object
      properties:
        ValueReference:
          description: Variable name
          type: string
          minLength: 2
          maxLength: 128
          pattern: ^:[A-Za-z0-9_]+$
        Value:
          description: Value or column name
          type: string
          minLength: 0
          maxLength: 1024
      additionalProperties: false
      required:
        - ValueReference
        - Value
    ValuesMap:
      type: array
      x-insertionOrder: true
      items:
        $ref: '#/components/schemas/SubstitutionValue'
    ThresholdValue:
      description: Threshold value for a rule
      type: number
    ThresholdType:
      description: Threshold type for a rule
      enum:
        - GREATER_THAN_OR_EQUAL
        - LESS_THAN_OR_EQUAL
        - GREATER_THAN
        - LESS_THAN
      type: string
    ThresholdUnit:
      description: Threshold unit for a rule
      enum:
        - COUNT
        - PERCENTAGE
      type: string
    Threshold:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/ThresholdValue'
        Type:
          $ref: '#/components/schemas/ThresholdType'
        Unit:
          $ref: '#/components/schemas/ThresholdUnit'
      required:
        - Value
      additionalProperties: false
    Disabled:
      description: Boolean value to disable/enable a rule
      type: boolean
    Rule:
      description: Data quality rule for a target resource (dataset)
      type: object
      properties:
        Name:
          description: Name of the rule
          type: string
          minLength: 1
          maxLength: 128
        Disabled:
          $ref: '#/components/schemas/Disabled'
        CheckExpression:
          $ref: '#/components/schemas/Expression'
        SubstitutionMap:
          $ref: '#/components/schemas/ValuesMap'
        Threshold:
          $ref: '#/components/schemas/Threshold'
        ColumnSelectors:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ColumnSelector'
          minItems: 1
      required:
        - Name
        - CheckExpression
      additionalProperties: false
    Ruleset:
      type: object
      properties:
        Name:
          description: Name of the Ruleset
          type: string
          minLength: 1
          maxLength: 255
        Description:
          description: Description of the Ruleset
          type: string
          maxLength: 1024
        TargetArn:
          description: Arn of the target resource (dataset) to apply the ruleset to
          type: string
          minLength: 20
          maxLength: 2048
        Rules:
          description: List of the data quality rules in the ruleset
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Rule'
          minItems: 1
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - TargetArn
        - Rules
      x-stackql-resource-name: ruleset
      x-stackql-primaryIdentifier:
        - Name
    JobName:
      description: Job name
      type: string
      minLength: 1
      maxLength: 255
    Schedule:
      type: object
      properties:
        JobNames:
          type: array
          x-insertionOrder: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/JobName'
        CronExpression:
          description: Schedule cron
          type: string
          minLength: 1
          maxLength: 512
        Name:
          description: Schedule Name
          type: string
          minLength: 1
          maxLength: 255
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - CronExpression
      x-stackql-resource-name: schedule
      x-stackql-primaryIdentifier:
        - Name
  x-stackQL-resources:
    datasets:
      name: datasets
      id: aws.databrew.datasets
      x-cfn-schema-name: Dataset
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataBrew::Dataset'
    dataset:
      name: dataset
      id: aws.databrew.dataset
      x-cfn-schema-name: Dataset
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Format') as format,
              JSON_EXTRACT(Properties, '$.FormatOptions.Json') as format_options_json,
              JSON_EXTRACT(Properties, '$.FormatOptions.Excel') as format_options_excel,
              JSON_EXTRACT(Properties, '$.FormatOptions.Csv') as format_options_csv,
              JSON_EXTRACT(Properties, '$.Input.S3InputDefinition') as input_s3_input_definition,
              JSON_EXTRACT(Properties, '$.Input.DataCatalogInputDefinition') as input_data_catalog_input_definition,
              JSON_EXTRACT(Properties, '$.Input.DatabaseInputDefinition') as input_database_input_definition,
              JSON_EXTRACT(Properties, '$.Input.Metadata') as input_metadata,
              JSON_EXTRACT(Properties, '$.PathOptions.FilesLimit') as path_options_files_limit,
              JSON_EXTRACT(Properties, '$.PathOptions.LastModifiedDateCondition') as path_options_last_modified_date_condition,
              JSON_EXTRACT(Properties, '$.PathOptions.Parameters') as path_options_parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataBrew::Dataset'
    recipes:
      name: recipes
      id: aws.databrew.recipes
      x-cfn-schema-name: Recipe
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataBrew::Recipe'
    recipe:
      name: recipe
      id: aws.databrew.recipe
      x-cfn-schema-name: Recipe
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Steps') as steps,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataBrew::Recipe'
    jobs:
      name: jobs
      id: aws.databrew.jobs
      x-cfn-schema-name: Job
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataBrew::Job'
    job:
      name: job
      id: aws.databrew.job
      x-cfn-schema-name: Job
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DatasetName') as dataset_name,
              JSON_EXTRACT(Properties, '$.EncryptionKeyArn') as encryption_key_arn,
              JSON_EXTRACT(Properties, '$.EncryptionMode') as encryption_mode,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.LogSubscription') as log_subscription,
              JSON_EXTRACT(Properties, '$.MaxCapacity') as max_capacity,
              JSON_EXTRACT(Properties, '$.MaxRetries') as max_retries,
              JSON_EXTRACT(Properties, '$.Outputs') as outputs,
              JSON_EXTRACT(Properties, '$.DataCatalogOutputs') as data_catalog_outputs,
              JSON_EXTRACT(Properties, '$.DatabaseOutputs') as database_outputs,
              JSON_EXTRACT(Properties, '$.OutputLocation.Bucket') as output_location_bucket,
              JSON_EXTRACT(Properties, '$.OutputLocation.Key') as output_location_key,
              JSON_EXTRACT(Properties, '$.OutputLocation.BucketOwner') as output_location_bucket_owner,
              JSON_EXTRACT(Properties, '$.ProjectName') as project_name,
              JSON_EXTRACT(Properties, '$.Recipe.Description') as recipe_description,
              JSON_EXTRACT(Properties, '$.Recipe.Name') as recipe_name,
              JSON_EXTRACT(Properties, '$.Recipe.Steps') as recipe_steps,
              JSON_EXTRACT(Properties, '$.Recipe.Tags') as recipe_tags,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Timeout') as timeout,
              JSON_EXTRACT(Properties, '$.JobSample.Mode') as job_sample_mode,
              JSON_EXTRACT(Properties, '$.JobSample.Size') as job_sample_size,
              JSON_EXTRACT(Properties, '$.ProfileConfiguration.DatasetStatisticsConfiguration') as profile_configuration_dataset_statistics_configuration,
              JSON_EXTRACT(Properties, '$.ProfileConfiguration.ProfileColumns') as profile_configuration_profile_columns,
              JSON_EXTRACT(Properties, '$.ProfileConfiguration.ColumnStatisticsConfigurations') as profile_configuration_column_statistics_configurations,
              JSON_EXTRACT(Properties, '$.ProfileConfiguration.EntityDetectorConfiguration') as profile_configuration_entity_detector_configuration,
              JSON_EXTRACT(Properties, '$.ValidationConfigurations') as validation_configurations
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataBrew::Job'
    projects:
      name: projects
      id: aws.databrew.projects
      x-cfn-schema-name: Project
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataBrew::Project'
    project:
      name: project
      id: aws.databrew.project
      x-cfn-schema-name: Project
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DatasetName') as dataset_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RecipeName') as recipe_name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Sample.Size') as sample_size,
              JSON_EXTRACT(Properties, '$.Sample.Type') as sample_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataBrew::Project'
    rulesets:
      name: rulesets
      id: aws.databrew.rulesets
      x-cfn-schema-name: Ruleset
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataBrew::Ruleset'
    ruleset:
      name: ruleset
      id: aws.databrew.ruleset
      x-cfn-schema-name: Ruleset
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.TargetArn') as target_arn,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataBrew::Ruleset'
    schedules:
      name: schedules
      id: aws.databrew.schedules
      x-cfn-schema-name: Schedule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataBrew::Schedule'
    schedule:
      name: schedule
      id: aws.databrew.schedule
      x-cfn-schema-name: Schedule
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobNames') as job_names,
              JSON_EXTRACT(Properties, '$.CronExpression') as cron_expression,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataBrew::Schedule'
