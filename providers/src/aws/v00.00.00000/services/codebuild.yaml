openapi: 3.0.0
info:
  title: CodeBuild
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
          pattern: '[a-zA-Z+-=._:/]+$'
      required:
        - Value
        - Key
    Fleet:
      type: object
      properties:
        Name:
          type: string
          minLength: 2
          maxLength: 128
        BaseCapacity:
          type: integer
          minimum: 1
        EnvironmentType:
          type: string
          enum:
            - WINDOWS_SERVER_2019_CONTAINER
            - WINDOWS_SERVER_2022_CONTAINER
            - LINUX_CONTAINER
            - LINUX_GPU_CONTAINER
            - ARM_CONTAINER
        ComputeType:
          type: string
          enum:
            - BUILD_GENERAL1_SMALL
            - BUILD_GENERAL1_MEDIUM
            - BUILD_GENERAL1_LARGE
            - BUILD_GENERAL1_2XLARGE
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          type: string
          minLength: 1
      x-stackql-resource-name: fleet
      description: Resource Type definition for AWS::CodeBuild::Fleet
      x-type-name: AWS::CodeBuild::Fleet
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - codebuild:BatchGetFleets
          - codebuild:CreateFleet
        delete:
          - codebuild:BatchGetFleets
          - codebuild:DeleteFleet
        read:
          - codebuild:BatchGetFleets
        list:
          - codebuild:ListFleets
        update:
          - codebuild:BatchGetFleets
          - codebuild:UpdateFleet
  x-stackQL-resources:
    fleets:
      name: fleets
      id: aws.codebuild.fleets
      x-cfn-schema-name: Fleet
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeBuild::Fleet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeBuild::Fleet'
                AND region = 'us-east-1'
    fleet:
      name: fleet
      id: aws.codebuild.fleet
      x-cfn-schema-name: Fleet
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.BaseCapacity') as base_capacity,
              JSON_EXTRACT(Properties, '$.EnvironmentType') as environment_type,
              JSON_EXTRACT(Properties, '$.ComputeType') as compute_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeBuild::Fleet'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'BaseCapacity') as base_capacity,
                json_extract_path_text(Properties, 'EnvironmentType') as environment_type,
                json_extract_path_text(Properties, 'ComputeType') as compute_type,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeBuild::Fleet'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
