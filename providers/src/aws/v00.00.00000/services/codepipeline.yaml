openapi: 3.0.0
info:
  title: CodePipeline
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ConfigurationProperties:
      additionalProperties: false
      description: The configuration properties for the custom action.
      type: object
      properties:
        Description:
          description: 'The description of the action configuration property that is displayed to users. '
          type: string
        Key:
          description: Whether the configuration property is a key.
          type: boolean
        Name:
          description: The name of the action configuration property.
          type: string
        Queryable:
          description: >-
            Indicates that the property is used with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric
            characters, underscores, and hyphens. 
          type: boolean
        Required:
          description: Whether the configuration property is a required value.
          type: boolean
        Secret:
          description: Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.
          type: boolean
        Type:
          description: The type of the configuration property.
          type: string
      required:
        - Key
        - Name
        - Required
        - Secret
    ArtifactDetails:
      additionalProperties: false
      description: Returns information about the details of an artifact.
      type: object
      properties:
        MaximumCount:
          description: The maximum number of artifacts allowed for the action type.
          type: integer
        MinimumCount:
          description: The minimum number of artifacts allowed for the action type.
          type: integer
      required:
        - MaximumCount
        - MinimumCount
    Settings:
      additionalProperties: false
      description: 'Settings is a property of the AWS::CodePipeline::CustomActionType resource that provides URLs that users can access to view information about the CodePipeline custom action. '
      type: object
      properties:
        EntityUrlTemplate:
          description: 'The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline. '
          type: string
        ExecutionUrlTemplate:
          description: 'The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action. '
          type: string
        RevisionUrlTemplate:
          description: 'The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action. '
          type: string
        ThirdPartyConfigurationUrl:
          description: The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
          type: string
    Tag:
      description: A tag is a key-value pair that is used to manage the resource.
      type: object
      additionalProperties: false
      properties:
        Value:
          description: The tag's value.
          type: string
        Key:
          description: The tag's key.
          type: string
      required:
        - Value
        - Key
    CustomActionType:
      type: object
      properties:
        Category:
          description: The category of the custom action, such as a build action or a test action.
          type: string
        ConfigurationProperties:
          description: The configuration properties for the custom action.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ConfigurationProperties'
        InputArtifactDetails:
          description: The details of the input artifact for the action, such as its commit ID.
          $ref: '#/components/schemas/ArtifactDetails'
        OutputArtifactDetails:
          description: The details of the output artifact of the action, such as its commit ID.
          $ref: '#/components/schemas/ArtifactDetails'
        Provider:
          description: The provider of the service used in the custom action, such as AWS CodeDeploy.
          type: string
        Settings:
          description: URLs that provide users information about this custom action.
          $ref: '#/components/schemas/Settings'
        Tags:
          description: Any tags assigned to the custom action.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Version:
          description: The version identifier of the custom action.
          type: string
        Id:
          type: string
      required:
        - Category
        - InputArtifactDetails
        - OutputArtifactDetails
        - Provider
        - Version
      x-stackql-resource-name: custom_action_type
      description: The AWS::CodePipeline::CustomActionType resource creates a custom action for activities that aren't included in the CodePipeline default actions, such as running an internally developed build process or a test suite. You can use these custom actions in the stage of a pipeline.
      x-type-name: AWS::CodePipeline::CustomActionType
      x-stackql-primary-identifier:
        - Category
        - Provider
        - Version
      x-create-only-properties:
        - Category
        - ConfigurationProperties
        - InputArtifactDetails
        - OutputArtifactDetails
        - Provider
        - Settings
        - Version
      x-write-only-properties:
        - ConfigurationProperties/*/Type
      x-read-only-properties:
        - Id
      x-required-properties:
        - Category
        - InputArtifactDetails
        - OutputArtifactDetails
        - Provider
        - Version
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - codepipeline:CreateCustomActionType
          - codepipeline:TagResource
          - codepipeline:ListActionTypes
        read:
          - codepipeline:ListActionTypes
          - codepipeline:ListTagsForResource
        update:
          - codepipeline:ListActionTypes
          - codepipeline:TagResource
          - codepipeline:UntagResource
        delete:
          - codepipeline:DeleteCustomActionType
          - codepipeline:ListActionTypes
        list:
          - codepipeline:ListActionTypes
    BlockerDeclaration:
      description: Reserved for future use.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: Reserved for future use.
          type: string
        Type:
          description: Reserved for future use.
          type: string
          enum:
            - Schedule
      required:
        - Type
        - Name
    GitConfiguration:
      description: A type of trigger configuration for Git-based source actions.
      type: object
      additionalProperties: false
      properties:
        Push:
          description: The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GitPushFilter'
        SourceActionName:
          description: The name of the pipeline source action where the trigger configuration, such as Git tags, is specified. The trigger configuration will start the pipeline upon the specified change only.
          type: string
        PullRequest:
          description: The field where the repository event that will start the pipeline is specified as pull requests.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GitPullRequestFilter'
      required:
        - SourceActionName
    ActionTypeId:
      description: Represents information about an action type.
      type: object
      additionalProperties: false
      properties:
        Owner:
          description: 'The creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS, ThirdParty, and Custom.'
          type: string
        Category:
          description: A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the values below.
          type: string
          enum:
            - Source
            - Build
            - Test
            - Deploy
            - Invoke
            - Approval
            - Compute
        Version:
          description: A string that describes the action version.
          type: string
        Provider:
          description: The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of CodeDeploy, which would be specified as CodeDeploy.
          type: string
      required:
        - Owner
        - Category
        - Version
        - Provider
    ArtifactStoreMap:
      description: A mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.
      type: object
      additionalProperties: false
      properties:
        ArtifactStore:
          $ref: '#/components/schemas/ArtifactStore'
        Region:
          description: The action declaration's AWS Region, such as us-east-1.
          type: string
      required:
        - ArtifactStore
        - Region
    PipelineTriggerDeclaration:
      description: Represents information about the specified trigger configuration, such as the filter criteria and the source stage for the action that contains the trigger.
      type: object
      additionalProperties: false
      properties:
        GitConfiguration:
          $ref: '#/components/schemas/GitConfiguration'
        ProviderType:
          description: The source provider for the event, such as connections configured for a repository with Git tags, for the specified trigger configuration.
          type: string
          enum:
            - CodeStarSourceConnection
      required:
        - ProviderType
    EncryptionKey:
      description: Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key
      type: object
      additionalProperties: false
      properties:
        Type:
          description: The type of encryption key, such as an AWS KMS key. When creating or updating a pipeline, the value must be set to 'KMS'.
          type: string
        Id:
          description: The ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.
          type: string
      required:
        - Type
        - Id
    GitPullRequestFilter:
      description: The event criteria for the pull request trigger configuration, such as the lists of branches or file paths to include and exclude.
      type: object
      additionalProperties: false
      properties:
        FilePaths:
          $ref: '#/components/schemas/GitFilePathFilterCriteria'
        Events:
          description: The field that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration.
          type: array
          uniqueItems: true
          items:
            type: string
        Branches:
          $ref: '#/components/schemas/GitBranchFilterCriteria'
    GitPushFilter:
      description: The event criteria that specify when a specified repository event will start the pipeline for the specified trigger configuration, such as the lists of Git tags to include and exclude.
      type: object
      additionalProperties: false
      properties:
        FilePaths:
          $ref: '#/components/schemas/GitFilePathFilterCriteria'
        Branches:
          $ref: '#/components/schemas/GitBranchFilterCriteria'
        Tags:
          $ref: '#/components/schemas/GitTagFilterCriteria'
    ActionDeclaration:
      description: Represents information about an action declaration.
      type: object
      additionalProperties: false
      properties:
        ActionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
        Configuration:
          description: The action's configuration. These are key-value pairs that specify input values for an action.
          type: object
        InputArtifacts:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InputArtifact'
        OutputArtifacts:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OutputArtifact'
        Commands:
          description: The shell commands to run with your compute action in CodePipeline.
          type: array
          uniqueItems: false
          items:
            type: string
        OutputVariables:
          description: The list of variables that are to be exported from the compute action.
          type: array
          uniqueItems: true
          items:
            type: string
        Region:
          description: The action declaration's AWS Region, such as us-east-1.
          type: string
        Namespace:
          description: The variable namespace associated with the action. All variables produced as output by this action fall under this namespace.
          type: string
        RoleArn:
          description: The ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.
          type: string
          pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
        RunOrder:
          description: The order in which actions are run.
          type: integer
        Name:
          description: The action declaration's name.
          type: string
        TimeoutInMinutes:
          description: A timeout duration in minutes that can be applied against the ActionType’s default timeout value specified in Quotas for AWS CodePipeline. This attribute is available only to the manual approval ActionType.
          type: integer
      required:
        - ActionTypeId
        - Name
    GitFilePathFilterCriteria:
      description: The Git repository file paths specified as filter criteria to start the pipeline.
      type: object
      additionalProperties: false
      properties:
        Includes:
          description: The list of patterns of Git repository file paths that, when a commit is pushed, are to be included as criteria that starts the pipeline.
          type: array
          uniqueItems: true
          items:
            type: string
        Excludes:
          description: The list of patterns of Git repository file paths that, when a commit is pushed, are to be excluded from starting the pipeline.
          type: array
          uniqueItems: true
          items:
            type: string
    StageDeclaration:
      description: Represents information about a stage and its definition.
      type: object
      additionalProperties: false
      properties:
        Blockers:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BlockerDeclaration'
        Actions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ActionDeclaration'
        Name:
          description: The name of the stage.
          type: string
        OnFailure:
          type: object
          description: The method to use when a stage has not completed successfully
          $ref: '#/components/schemas/FailureConditions'
        OnSuccess:
          type: object
          description: The method to use when a stage has completed successfully
          $ref: '#/components/schemas/SuccessConditions'
        BeforeEntry:
          type: object
          description: The method to use before stage runs.
          $ref: '#/components/schemas/BeforeEntryConditions'
      required:
        - Actions
        - Name
    InputArtifact:
      description: Represents information about an artifact to be worked on, such as a test or build artifact.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The name of the artifact to be worked on (for example, "My App").
          type: string
      required:
        - Name
    ArtifactStore:
      description: The S3 bucket where artifacts for the pipeline are stored.
      type: object
      additionalProperties: false
      properties:
        Type:
          description: The type of the artifact store, such as S3.
          enum:
            - S3
          type: string
        EncryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
        Location:
          description: The S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.
          type: string
      required:
        - Type
        - Location
    VariableDeclaration:
      description: A variable declared at the pipeline level.
      type: object
      additionalProperties: false
      properties:
        DefaultValue:
          description: The value of a pipeline-level variable.
          type: string
        Description:
          description: The description of a pipeline-level variable. It's used to add additional context about the variable, and not being used at time when pipeline executes.
          type: string
        Name:
          description: The name of a pipeline-level variable.
          type: string
      required:
        - Name
    StageTransition:
      description: The name of the pipeline in which you want to disable the flow of artifacts from one stage to another.
      type: object
      additionalProperties: false
      properties:
        StageName:
          description: The name of the stage where you want to disable the inbound or outbound transition of artifacts.
          type: string
        Reason:
          description: The reason given to the user that a stage is disabled, such as waiting for manual approval or manual tests. This message is displayed in the pipeline console UI.
          type: string
      required:
        - StageName
        - Reason
    GitTagFilterCriteria:
      description: The Git tags specified as filter criteria for whether a Git tag repository event will start the pipeline.
      type: object
      additionalProperties: false
      properties:
        Includes:
          description: The list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
          type: array
          uniqueItems: true
          items:
            type: string
        Excludes:
          description: The list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
          type: array
          uniqueItems: true
          items:
            type: string
    GitBranchFilterCriteria:
      description: The Git repository branches specified as filter criteria to start the pipeline.
      type: object
      additionalProperties: false
      properties:
        Includes:
          description: The list of patterns of Git branches that, when a commit is pushed, are to be included as criteria that starts the pipeline.
          type: array
          uniqueItems: true
          items:
            type: string
        Excludes:
          description: The list of patterns of Git branches that, when a commit is pushed, are to be excluded from starting the pipeline.
          type: array
          uniqueItems: true
          items:
            type: string
    OutputArtifact:
      description: Represents information about the output of an action.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The name of the output of an artifact, such as "My App".
          type: string
        Files:
          description: The files that you want to associate with the output artifact that will be exported from the compute action.
          type: array
          uniqueItems: true
          items:
            type: string
      required:
        - Name
    FailureConditions:
      description: The configuration that specifies the result, such as rollback, to occur upon stage failure
      type: object
      additionalProperties: false
      properties:
        Result:
          type: string
          description: The specified result for when the failure conditions are met, such as rolling back the stage
          enum:
            - ROLLBACK
            - RETRY
        RetryConfiguration:
          description: The configuration that specifies the retry configuration for a stage
          type: object
          additionalProperties: false
          properties:
            RetryMode:
              type: string
              description: The specified retry mode type for the given stage. FAILED_ACTIONS will retry only the failed actions. ALL_ACTIONS will retry both failed and successful
              enum:
                - ALL_ACTIONS
                - FAILED_ACTIONS
        Conditions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Condition'
    SuccessConditions:
      description: The configuration that specifies the result, such as rollback, to occur upon stage failure
      type: object
      additionalProperties: false
      properties:
        Conditions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Condition'
    BeforeEntryConditions:
      description: The configuration that specifies the rules to run before stage starts.
      type: object
      additionalProperties: false
      properties:
        Conditions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Condition'
    Condition:
      description: Represents information about condition.
      type: object
      additionalProperties: false
      properties:
        Result:
          type: string
          description: The specified result for when the failure conditions are met, such as rolling back the stage
        Rules:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/RuleDeclaration'
    RuleDeclaration:
      description: Represents information about condition.
      type: object
      additionalProperties: false
      properties:
        RuleTypeId:
          $ref: '#/components/schemas/RuleTypeId'
        Configuration:
          description: The rule's configuration. These are key-value pairs that specify input values for a rule.
          type: object
        InputArtifacts:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InputArtifact'
        Region:
          description: The rule declaration's AWS Region, such as us-east-1.
          type: string
        RoleArn:
          description: The ARN of the IAM service role that performs the declared rule. This is assumed through the roleArn for the pipeline.
          type: string
          pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
        Name:
          description: The rule declaration's name.
          type: string
    RuleTypeId:
      description: Represents information about a rule type.
      type: object
      additionalProperties: false
      properties:
        Owner:
          description: The creator of the rule being called. Only AWS is supported.
          type: string
        Category:
          description: A category for the provider type for the rule.
          type: string
        Version:
          description: A string that describes the rule version.
          type: string
        Provider:
          description: The provider of the service being called by the rule.
          type: string
    Pipeline:
      type: object
      properties:
        ArtifactStores:
          description: A mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ArtifactStoreMap'
        DisableInboundStageTransitions:
          description: Represents the input of a DisableStageTransition action.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StageTransition'
        Stages:
          description: Represents information about a stage and its definition.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StageDeclaration'
        ExecutionMode:
          description: The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED.
          enum:
            - QUEUED
            - SUPERSEDED
            - PARALLEL
          default: SUPERSEDED
          type: string
        RestartExecutionOnUpdate:
          description: Indicates whether to rerun the CodePipeline pipeline after you update it.
          type: boolean
        Triggers:
          description: The trigger configuration specifying a type of event, such as Git tags, that starts the pipeline.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PipelineTriggerDeclaration'
        RoleArn:
          description: The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn
          type: string
          pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
        Name:
          description: The name of the pipeline.
          type: string
        Variables:
          description: A list that defines the pipeline variables for a pipeline resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9@\-_]+.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/VariableDeclaration'
        Version:
          description: The version of the pipeline.
          type: string
        ArtifactStore:
          description: The S3 bucket where artifacts for the pipeline are stored.
          $ref: '#/components/schemas/ArtifactStore'
        PipelineType:
          description: CodePipeline provides the following pipeline types, which differ in characteristics and price, so that you can tailor your pipeline features and cost to the needs of your applications.
          type: string
          enum:
            - V1
            - V2
        Tags:
          description: Specifies the tags applied to the pipeline.
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Stages
        - RoleArn
      x-stackql-resource-name: pipeline
      description: The AWS::CodePipeline::Pipeline resource creates a CodePipeline pipeline that describes how software changes go through a release process.
      x-type-name: AWS::CodePipeline::Pipeline
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - RestartExecutionOnUpdate
      x-read-only-properties:
        - Version
      x-required-properties:
        - Stages
        - RoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - codepipeline:TagResource
          - codepipeline:UntagResource
      x-required-permissions:
        create:
          - iam:GetRole
          - iam:PassRole
          - codepipeline:GetPipeline
          - codepipeline:CreatePipeline
          - codepipeline:DisableStageTransition
          - codepipeline:GetPipelineState
          - codepipeline:TagResource
          - codestar-connections:PassConnection
        read:
          - codepipeline:GetPipeline
          - codepipeline:ListTagsForResource
          - codepipeline:GetPipelineState
        update:
          - iam:GetRole
          - iam:PassRole
          - codepipeline:EnableStageTransition
          - codepipeline:StartPipelineExecution
          - codepipeline:GetPipeline
          - codepipeline:UpdatePipeline
          - codepipeline:GetPipelineState
          - codepipeline:DisableStageTransition
          - codepipeline:TagResource
          - codepipeline:UntagResource
          - codestar-connections:PassConnection
        delete:
          - codepipeline:GetPipeline
          - codepipeline:DeletePipeline
        list:
          - codepipeline:ListPipelines
    CreateCustomActionTypeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Category:
              description: The category of the custom action, such as a build action or a test action.
              type: string
            ConfigurationProperties:
              description: The configuration properties for the custom action.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ConfigurationProperties'
            InputArtifactDetails:
              description: The details of the input artifact for the action, such as its commit ID.
              $ref: '#/components/schemas/ArtifactDetails'
            OutputArtifactDetails:
              description: The details of the output artifact of the action, such as its commit ID.
              $ref: '#/components/schemas/ArtifactDetails'
            Provider:
              description: The provider of the service used in the custom action, such as AWS CodeDeploy.
              type: string
            Settings:
              description: URLs that provide users information about this custom action.
              $ref: '#/components/schemas/Settings'
            Tags:
              description: Any tags assigned to the custom action.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            Version:
              description: The version identifier of the custom action.
              type: string
            Id:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateCustomActionTypeRequest
      type: object
      required: []
    CreatePipelineRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ArtifactStores:
              description: A mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ArtifactStoreMap'
            DisableInboundStageTransitions:
              description: Represents the input of a DisableStageTransition action.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/StageTransition'
            Stages:
              description: Represents information about a stage and its definition.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/StageDeclaration'
            ExecutionMode:
              description: The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED.
              enum:
                - QUEUED
                - SUPERSEDED
                - PARALLEL
              default: SUPERSEDED
              type: string
            RestartExecutionOnUpdate:
              description: Indicates whether to rerun the CodePipeline pipeline after you update it.
              type: boolean
            Triggers:
              description: The trigger configuration specifying a type of event, such as Git tags, that starts the pipeline.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/PipelineTriggerDeclaration'
            RoleArn:
              description: The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn
              type: string
              pattern: arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*
            Name:
              description: The name of the pipeline.
              type: string
            Variables:
              description: A list that defines the pipeline variables for a pipeline resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9@\-_]+.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/VariableDeclaration'
            Version:
              description: The version of the pipeline.
              type: string
            ArtifactStore:
              description: The S3 bucket where artifacts for the pipeline are stored.
              $ref: '#/components/schemas/ArtifactStore'
            PipelineType:
              description: CodePipeline provides the following pipeline types, which differ in characteristics and price, so that you can tailor your pipeline features and cost to the needs of your applications.
              type: string
              enum:
                - V1
                - V2
            Tags:
              description: Specifies the tags applied to the pipeline.
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreatePipelineRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    custom_action_types:
      name: custom_action_types
      id: aws.codepipeline.custom_action_types
      x-cfn-schema-name: CustomActionType
      x-cfn-type-name: AWS::CodePipeline::CustomActionType
      x-identifiers:
        - Category
        - Provider
        - Version
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CustomActionType&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodePipeline::CustomActionType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodePipeline::CustomActionType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodePipeline::CustomActionType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_action_types/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_action_types/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/custom_action_types/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Category') as category,
              JSON_EXTRACT(Properties, '$.ConfigurationProperties') as configuration_properties,
              JSON_EXTRACT(Properties, '$.InputArtifactDetails') as input_artifact_details,
              JSON_EXTRACT(Properties, '$.OutputArtifactDetails') as output_artifact_details,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.Settings') as settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodePipeline::CustomActionType'
              AND data__Identifier = '<Category>|<Provider>|<Version>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Category') as category,
                JSON_EXTRACT(detail.Properties, '$.ConfigurationProperties') as configuration_properties,
                JSON_EXTRACT(detail.Properties, '$.InputArtifactDetails') as input_artifact_details,
                JSON_EXTRACT(detail.Properties, '$.OutputArtifactDetails') as output_artifact_details,
                JSON_EXTRACT(detail.Properties, '$.Provider') as provider,
                JSON_EXTRACT(detail.Properties, '$.Settings') as settings,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Version') as version,
                JSON_EXTRACT(detail.Properties, '$.Id') as id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CodePipeline::CustomActionType'
                AND detail.data__TypeName = 'AWS::CodePipeline::CustomActionType'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Category') as category,
                  json_extract_path_text(Properties, 'ConfigurationProperties') as configuration_properties,
                  json_extract_path_text(Properties, 'InputArtifactDetails') as input_artifact_details,
                  json_extract_path_text(Properties, 'OutputArtifactDetails') as output_artifact_details,
                  json_extract_path_text(Properties, 'Provider') as provider,
                  json_extract_path_text(Properties, 'Settings') as settings,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Version') as version,
                  json_extract_path_text(Properties, 'Id') as id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodePipeline::CustomActionType'
                  AND data__Identifier = '<Category>|<Provider>|<Version>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Category') as category,
                    json_extract_path_text(detail.Properties, 'ConfigurationProperties') as configuration_properties,
                    json_extract_path_text(detail.Properties, 'InputArtifactDetails') as input_artifact_details,
                    json_extract_path_text(detail.Properties, 'OutputArtifactDetails') as output_artifact_details,
                    json_extract_path_text(detail.Properties, 'Provider') as provider,
                    json_extract_path_text(detail.Properties, 'Settings') as settings,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Version') as version,
                    json_extract_path_text(detail.Properties, 'Id') as id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CodePipeline::CustomActionType'
                    AND detail.data__TypeName = 'AWS::CodePipeline::CustomActionType'
                    AND listing.region = 'us-east-1'
    custom_action_types_list_only:
      name: custom_action_types_list_only
      id: aws.codepipeline.custom_action_types_list_only
      x-cfn-schema-name: CustomActionType
      x-cfn-type-name: AWS::CodePipeline::CustomActionType
      x-identifiers:
        - Category
        - Provider
        - Version
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Category') as category,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.Version') as version
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodePipeline::CustomActionType'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Category') as category,
                json_extract_path_text(Properties, 'Provider') as provider,
                json_extract_path_text(Properties, 'Version') as version
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodePipeline::CustomActionType'
                AND region = 'us-east-1'
    custom_action_type_tags:
      name: custom_action_type_tags
      id: aws.codepipeline.custom_action_type_tags
      x-cfn-schema-name: CustomActionType
      x-cfn-type-name: AWS::CodePipeline::CustomActionType
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Category') as category,
              JSON_EXTRACT(detail.Properties, '$.ConfigurationProperties') as configuration_properties,
              JSON_EXTRACT(detail.Properties, '$.InputArtifactDetails') as input_artifact_details,
              JSON_EXTRACT(detail.Properties, '$.OutputArtifactDetails') as output_artifact_details,
              JSON_EXTRACT(detail.Properties, '$.Provider') as provider,
              JSON_EXTRACT(detail.Properties, '$.Settings') as settings,
              JSON_EXTRACT(detail.Properties, '$.Version') as version,
              JSON_EXTRACT(detail.Properties, '$.Id') as id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CodePipeline::CustomActionType'
              AND detail.data__TypeName = 'AWS::CodePipeline::CustomActionType'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Category') as category,
                json_extract_path_text(detail.Properties, 'ConfigurationProperties') as configuration_properties,
                json_extract_path_text(detail.Properties, 'InputArtifactDetails') as input_artifact_details,
                json_extract_path_text(detail.Properties, 'OutputArtifactDetails') as output_artifact_details,
                json_extract_path_text(detail.Properties, 'Provider') as provider,
                json_extract_path_text(detail.Properties, 'Settings') as settings,
                json_extract_path_text(detail.Properties, 'Version') as version,
                json_extract_path_text(detail.Properties, 'Id') as id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CodePipeline::CustomActionType'
                AND detail.data__TypeName = 'AWS::CodePipeline::CustomActionType'
                AND listing.region = 'us-east-1'
    pipelines:
      name: pipelines
      id: aws.codepipeline.pipelines
      x-cfn-schema-name: Pipeline
      x-cfn-type-name: AWS::CodePipeline::Pipeline
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Pipeline&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodePipeline::Pipeline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodePipeline::Pipeline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodePipeline::Pipeline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ArtifactStores') as artifact_stores,
              JSON_EXTRACT(Properties, '$.DisableInboundStageTransitions') as disable_inbound_stage_transitions,
              JSON_EXTRACT(Properties, '$.Stages') as stages,
              JSON_EXTRACT(Properties, '$.ExecutionMode') as execution_mode,
              JSON_EXTRACT(Properties, '$.RestartExecutionOnUpdate') as restart_execution_on_update,
              JSON_EXTRACT(Properties, '$.Triggers') as triggers,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Variables') as variables,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.ArtifactStore') as artifact_store,
              JSON_EXTRACT(Properties, '$.PipelineType') as pipeline_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodePipeline::Pipeline'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ArtifactStores') as artifact_stores,
                JSON_EXTRACT(detail.Properties, '$.DisableInboundStageTransitions') as disable_inbound_stage_transitions,
                JSON_EXTRACT(detail.Properties, '$.Stages') as stages,
                JSON_EXTRACT(detail.Properties, '$.ExecutionMode') as execution_mode,
                JSON_EXTRACT(detail.Properties, '$.RestartExecutionOnUpdate') as restart_execution_on_update,
                JSON_EXTRACT(detail.Properties, '$.Triggers') as triggers,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Variables') as variables,
                JSON_EXTRACT(detail.Properties, '$.Version') as version,
                JSON_EXTRACT(detail.Properties, '$.ArtifactStore') as artifact_store,
                JSON_EXTRACT(detail.Properties, '$.PipelineType') as pipeline_type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CodePipeline::Pipeline'
                AND detail.data__TypeName = 'AWS::CodePipeline::Pipeline'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ArtifactStores') as artifact_stores,
                  json_extract_path_text(Properties, 'DisableInboundStageTransitions') as disable_inbound_stage_transitions,
                  json_extract_path_text(Properties, 'Stages') as stages,
                  json_extract_path_text(Properties, 'ExecutionMode') as execution_mode,
                  json_extract_path_text(Properties, 'RestartExecutionOnUpdate') as restart_execution_on_update,
                  json_extract_path_text(Properties, 'Triggers') as triggers,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Variables') as variables,
                  json_extract_path_text(Properties, 'Version') as version,
                  json_extract_path_text(Properties, 'ArtifactStore') as artifact_store,
                  json_extract_path_text(Properties, 'PipelineType') as pipeline_type,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodePipeline::Pipeline'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ArtifactStores') as artifact_stores,
                    json_extract_path_text(detail.Properties, 'DisableInboundStageTransitions') as disable_inbound_stage_transitions,
                    json_extract_path_text(detail.Properties, 'Stages') as stages,
                    json_extract_path_text(detail.Properties, 'ExecutionMode') as execution_mode,
                    json_extract_path_text(detail.Properties, 'RestartExecutionOnUpdate') as restart_execution_on_update,
                    json_extract_path_text(detail.Properties, 'Triggers') as triggers,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Variables') as variables,
                    json_extract_path_text(detail.Properties, 'Version') as version,
                    json_extract_path_text(detail.Properties, 'ArtifactStore') as artifact_store,
                    json_extract_path_text(detail.Properties, 'PipelineType') as pipeline_type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CodePipeline::Pipeline'
                    AND detail.data__TypeName = 'AWS::CodePipeline::Pipeline'
                    AND listing.region = 'us-east-1'
    pipelines_list_only:
      name: pipelines_list_only
      id: aws.codepipeline.pipelines_list_only
      x-cfn-schema-name: Pipeline
      x-cfn-type-name: AWS::CodePipeline::Pipeline
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodePipeline::Pipeline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodePipeline::Pipeline'
                AND region = 'us-east-1'
    pipeline_tags:
      name: pipeline_tags
      id: aws.codepipeline.pipeline_tags
      x-cfn-schema-name: Pipeline
      x-cfn-type-name: AWS::CodePipeline::Pipeline
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ArtifactStores') as artifact_stores,
              JSON_EXTRACT(detail.Properties, '$.DisableInboundStageTransitions') as disable_inbound_stage_transitions,
              JSON_EXTRACT(detail.Properties, '$.Stages') as stages,
              JSON_EXTRACT(detail.Properties, '$.ExecutionMode') as execution_mode,
              JSON_EXTRACT(detail.Properties, '$.RestartExecutionOnUpdate') as restart_execution_on_update,
              JSON_EXTRACT(detail.Properties, '$.Triggers') as triggers,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Variables') as variables,
              JSON_EXTRACT(detail.Properties, '$.Version') as version,
              JSON_EXTRACT(detail.Properties, '$.ArtifactStore') as artifact_store,
              JSON_EXTRACT(detail.Properties, '$.PipelineType') as pipeline_type
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CodePipeline::Pipeline'
              AND detail.data__TypeName = 'AWS::CodePipeline::Pipeline'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ArtifactStores') as artifact_stores,
                json_extract_path_text(detail.Properties, 'DisableInboundStageTransitions') as disable_inbound_stage_transitions,
                json_extract_path_text(detail.Properties, 'Stages') as stages,
                json_extract_path_text(detail.Properties, 'ExecutionMode') as execution_mode,
                json_extract_path_text(detail.Properties, 'RestartExecutionOnUpdate') as restart_execution_on_update,
                json_extract_path_text(detail.Properties, 'Triggers') as triggers,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Variables') as variables,
                json_extract_path_text(detail.Properties, 'Version') as version,
                json_extract_path_text(detail.Properties, 'ArtifactStore') as artifact_store,
                json_extract_path_text(detail.Properties, 'PipelineType') as pipeline_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CodePipeline::Pipeline'
                AND detail.data__TypeName = 'AWS::CodePipeline::Pipeline'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CustomActionType&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCustomActionType
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCustomActionTypeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Pipeline&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePipeline
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
