openapi: 3.0.0
info:
  title: CodePipeline
  version: 1.0.0
paths: {}
components:
  schemas:
    ConfigurationProperties:
      additionalProperties: false
      description: The configuration properties for the custom action.
      type: object
      properties:
        Description:
          description: 'The description of the action configuration property that is displayed to users. '
          type: string
        Key:
          description: Whether the configuration property is a key.
          type: boolean
        Name:
          description: The name of the action configuration property.
          type: string
        Queryable:
          description: >-
            Indicates that the property is used with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric
            characters, underscores, and hyphens. 
          type: boolean
        Required:
          description: Whether the configuration property is a required value.
          type: boolean
        Secret:
          description: Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.
          type: boolean
        Type:
          description: The type of the configuration property.
          type: string
      required:
        - Key
        - Name
        - Required
        - Secret
    ArtifactDetails:
      additionalProperties: false
      description: Returns information about the details of an artifact.
      type: object
      properties:
        MaximumCount:
          description: The maximum number of artifacts allowed for the action type.
          type: integer
        MinimumCount:
          description: The minimum number of artifacts allowed for the action type.
          type: integer
      required:
        - MaximumCount
        - MinimumCount
    Settings:
      additionalProperties: false
      description: 'Settings is a property of the AWS::CodePipeline::CustomActionType resource that provides URLs that users can access to view information about the CodePipeline custom action. '
      type: object
      properties:
        EntityUrlTemplate:
          description: 'The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline. '
          type: string
        ExecutionUrlTemplate:
          description: 'The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action. '
          type: string
        RevisionUrlTemplate:
          description: 'The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action. '
          type: string
        ThirdPartyConfigurationUrl:
          description: The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
          type: string
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    CustomActionType:
      type: object
      properties:
        Category:
          description: The category of the custom action, such as a build action or a test action.
          type: string
        ConfigurationProperties:
          description: The configuration properties for the custom action.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ConfigurationProperties'
        InputArtifactDetails:
          description: The details of the input artifact for the action, such as its commit ID.
          $ref: '#/components/schemas/ArtifactDetails'
        OutputArtifactDetails:
          description: The details of the output artifact of the action, such as its commit ID.
          $ref: '#/components/schemas/ArtifactDetails'
        Provider:
          description: The provider of the service used in the custom action, such as AWS CodeDeploy.
          type: string
        Settings:
          description: URLs that provide users information about this custom action.
          $ref: '#/components/schemas/Settings'
        Tags:
          description: Any tags assigned to the custom action.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Version:
          description: The version identifier of the custom action.
          type: string
        Id:
          type: string
      required:
        - Category
        - InputArtifactDetails
        - OutputArtifactDetails
        - Provider
        - Version
      x-stackql-resource-name: custom_action_type
      x-stackql-primaryIdentifier:
        - Category
        - Provider
        - Version
    ActionDeclaration:
      type: object
      additionalProperties: false
      properties:
        ActionTypeId:
          $ref: '#/components/schemas/ActionTypeId'
        Configuration:
          type: object
        InputArtifacts:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InputArtifact'
        OutputArtifacts:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OutputArtifact'
        Region:
          type: string
        Namespace:
          type: string
        RoleArn:
          type: string
        RunOrder:
          type: integer
        Name:
          type: string
      required:
        - ActionTypeId
        - Name
    BlockerDeclaration:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Name:
          type: string
      required:
        - Type
        - Name
    ActionTypeId:
      type: object
      additionalProperties: false
      properties:
        Owner:
          type: string
        Category:
          type: string
        Version:
          type: string
        Provider:
          type: string
      required:
        - Owner
        - Category
        - Version
        - Provider
    StageDeclaration:
      type: object
      additionalProperties: false
      properties:
        Blockers:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BlockerDeclaration'
        Actions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ActionDeclaration'
        Name:
          type: string
      required:
        - Actions
        - Name
    InputArtifact:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
      required:
        - Name
    ArtifactStore:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        EncryptionKey:
          $ref: '#/components/schemas/EncryptionKey'
        Location:
          type: string
      required:
        - Type
        - Location
    ArtifactStoreMap:
      type: object
      additionalProperties: false
      properties:
        ArtifactStore:
          $ref: '#/components/schemas/ArtifactStore'
        Region:
          type: string
      required:
        - ArtifactStore
        - Region
    StageTransition:
      type: object
      additionalProperties: false
      properties:
        StageName:
          type: string
        Reason:
          type: string
      required:
        - StageName
        - Reason
    EncryptionKey:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Id:
          type: string
      required:
        - Type
        - Id
    OutputArtifact:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
      required:
        - Name
    Pipeline:
      type: object
      properties:
        ArtifactStores:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ArtifactStoreMap'
        Version:
          type: string
        ArtifactStore:
          $ref: '#/components/schemas/ArtifactStore'
        DisableInboundStageTransitions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StageTransition'
        Stages:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StageDeclaration'
        RestartExecutionOnUpdate:
          type: boolean
        Id:
          type: string
        RoleArn:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      required:
        - Stages
        - RoleArn
      x-stackql-resource-name: pipeline
      x-stackql-primaryIdentifier:
        - Id
    WebhookFilterRule:
      type: object
      additionalProperties: false
      properties:
        JsonPath:
          type: string
        MatchEquals:
          type: string
      required:
        - JsonPath
    WebhookAuthConfiguration:
      type: object
      additionalProperties: false
      properties:
        AllowedIPRange:
          type: string
        SecretToken:
          type: string
    Webhook:
      type: object
      properties:
        AuthenticationConfiguration:
          $ref: '#/components/schemas/WebhookAuthConfiguration'
        Filters:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/WebhookFilterRule'
        Authentication:
          type: string
        TargetPipeline:
          type: string
        TargetAction:
          type: string
        Id:
          type: string
        Url:
          type: string
        Name:
          type: string
        TargetPipelineVersion:
          type: integer
        RegisterWithThirdParty:
          type: boolean
      required:
        - AuthenticationConfiguration
        - Filters
        - Authentication
        - TargetPipeline
        - TargetAction
        - TargetPipelineVersion
      x-stackql-resource-name: webhook
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    custom_action_types:
      name: custom_action_types
      id: aws.codepipeline.custom_action_types
      x-cfn-schema-name: CustomActionType
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Category') as category,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.Version') as version
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodePipeline::CustomActionType'
    custom_action_type:
      name: custom_action_type
      id: aws.codepipeline.custom_action_type
      x-cfn-schema-name: CustomActionType
      x-type: get
      x-identifiers:
        - Category
        - Provider
        - Version
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Category') as category,
              JSON_EXTRACT(Properties, '$.ConfigurationProperties') as configuration_properties,
              JSON_EXTRACT(Properties, '$.InputArtifactDetails.MaximumCount') as input_artifact_details_maximum_count,
              JSON_EXTRACT(Properties, '$.InputArtifactDetails.MinimumCount') as input_artifact_details_minimum_count,
              JSON_EXTRACT(Properties, '$.OutputArtifactDetails.MaximumCount') as output_artifact_details_maximum_count,
              JSON_EXTRACT(Properties, '$.OutputArtifactDetails.MinimumCount') as output_artifact_details_minimum_count,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.Settings.EntityUrlTemplate') as settings_entity_url_template,
              JSON_EXTRACT(Properties, '$.Settings.ExecutionUrlTemplate') as settings_execution_url_template,
              JSON_EXTRACT(Properties, '$.Settings.RevisionUrlTemplate') as settings_revision_url_template,
              JSON_EXTRACT(Properties, '$.Settings.ThirdPartyConfigurationUrl') as settings_third_party_configuration_url,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodePipeline::CustomActionType'
    pipelines:
      name: pipelines
      id: aws.codepipeline.pipelines
      x-cfn-schema-name: Pipeline
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodePipeline::Pipeline'
    pipeline:
      name: pipeline
      id: aws.codepipeline.pipeline
      x-cfn-schema-name: Pipeline
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ArtifactStores') as artifact_stores,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.ArtifactStore.Type') as artifact_store_type,
              JSON_EXTRACT(Properties, '$.ArtifactStore.EncryptionKey') as artifact_store_encryption_key,
              JSON_EXTRACT(Properties, '$.ArtifactStore.Location') as artifact_store_location,
              JSON_EXTRACT(Properties, '$.DisableInboundStageTransitions') as disable_inbound_stage_transitions,
              JSON_EXTRACT(Properties, '$.Stages') as stages,
              JSON_EXTRACT(Properties, '$.RestartExecutionOnUpdate') as restart_execution_on_update,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodePipeline::Pipeline'
    webhooks:
      name: webhooks
      id: aws.codepipeline.webhooks
      x-cfn-schema-name: Webhook
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodePipeline::Webhook'
    webhook:
      name: webhook
      id: aws.codepipeline.webhook
      x-cfn-schema-name: Webhook
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AuthenticationConfiguration.AllowedIPRange') as authentication_configuration_allowed_ip_range,
              JSON_EXTRACT(Properties, '$.AuthenticationConfiguration.SecretToken') as authentication_configuration_secret_token,
              JSON_EXTRACT(Properties, '$.Filters') as filters,
              JSON_EXTRACT(Properties, '$.Authentication') as authentication,
              JSON_EXTRACT(Properties, '$.TargetPipeline') as target_pipeline,
              JSON_EXTRACT(Properties, '$.TargetAction') as target_action,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Url') as url,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.TargetPipelineVersion') as target_pipeline_version,
              JSON_EXTRACT(Properties, '$.RegisterWithThirdParty') as register_with_third_party
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodePipeline::Webhook'
