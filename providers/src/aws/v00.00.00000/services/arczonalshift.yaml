openapi: 3.0.0
info:
  title: ARCZonalShift
  version: 1.0.0
paths: {}
components:
  schemas:
    ZonalAutoshiftStatus:
      type: string
      enum:
        - ENABLED
    ControlCondition:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ControlConditionType'
        AlarmIdentifier:
          type: string
          maxLength: 1024
          minLength: 8
          pattern: ^arn:.*$
      required:
        - AlarmIdentifier
        - Type
      additionalProperties: false
    ControlConditionType:
      type: string
      enum:
        - CLOUDWATCH
    PracticeRunConfiguration:
      type: object
      properties:
        BlockingAlarms:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ControlCondition'
          maxItems: 1
          minItems: 1
        OutcomeAlarms:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ControlCondition'
          maxItems: 1
          minItems: 1
        BlockedDates:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 10
            minLength: 10
            pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
          maxItems: 15
          minItems: 0
        BlockedWindows:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 19
            minLength: 19
            pattern: ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):[0-9]{2}:[0-9]{2}-(Mon|Tue|Wed|Thu|Fri|Sat|Sun):[0-9]{2}:[0-9]{2}$
          maxItems: 15
          minItems: 0
      required:
        - OutcomeAlarms
      additionalProperties: false
    ZonalAutoshiftConfiguration:
      type: object
      properties:
        ZonalAutoshiftStatus:
          $ref: '#/components/schemas/ZonalAutoshiftStatus'
          x-dependencies:
            ZonalAutoshiftStatus:
              - PracticeRunConfiguration
        PracticeRunConfiguration:
          $ref: '#/components/schemas/PracticeRunConfiguration'
        ResourceIdentifier:
          type: string
          maxLength: 1024
          minLength: 8
      x-stackql-resource-name: zonal_autoshift_configuration
      description: Definition of AWS::ARCZonalShift::ZonalAutoshiftConfiguration Resource Type
      x-type-name: AWS::ARCZonalShift::ZonalAutoshiftConfiguration
      x-stackql-primary-identifier:
        - ResourceIdentifier
      x-create-only-properties:
        - ResourceIdentifier
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - arc-zonal-shift:CreatePracticeRunConfiguration
          - arc-zonal-shift:GetManagedResource
          - arc-zonal-shift:UpdateZonalAutoshiftConfiguration
          - cloudwatch:DescribeAlarms
          - iam:CreateServiceLinkedRole
        read:
          - arc-zonal-shift:GetManagedResource
        update:
          - arc-zonal-shift:GetManagedResource
          - arc-zonal-shift:UpdatePracticeRunConfiguration
          - arc-zonal-shift:UpdateZonalAutoshiftConfiguration
          - cloudwatch:DescribeAlarms
        delete:
          - arc-zonal-shift:DeletePracticeRunConfiguration
          - arc-zonal-shift:GetManagedResource
          - arc-zonal-shift:UpdateZonalAutoshiftConfiguration
        list:
          - arc-zonal-shift:ListManagedResources
  x-stackQL-resources:
    zonal_autoshift_configurations:
      name: zonal_autoshift_configurations
      id: aws.arczonalshift.zonal_autoshift_configurations
      x-cfn-schema-name: ZonalAutoshiftConfiguration
      x-type: list
      x-identifiers:
        - ResourceIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ARCZonalShift::ZonalAutoshiftConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ARCZonalShift::ZonalAutoshiftConfiguration'
                AND region = 'us-east-1'
    zonal_autoshift_configuration:
      name: zonal_autoshift_configuration
      id: aws.arczonalshift.zonal_autoshift_configuration
      x-cfn-schema-name: ZonalAutoshiftConfiguration
      x-type: get
      x-identifiers:
        - ResourceIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ZonalAutoshiftStatus') as zonal_autoshift_status,
              JSON_EXTRACT(Properties, '$.PracticeRunConfiguration') as practice_run_configuration,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ARCZonalShift::ZonalAutoshiftConfiguration'
              AND data__Identifier = '<ResourceIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ZonalAutoshiftStatus') as zonal_autoshift_status,
                json_extract_path_text(Properties, 'PracticeRunConfiguration') as practice_run_configuration,
                json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ARCZonalShift::ZonalAutoshiftConfiguration'
                AND data__Identifier = '<ResourceIdentifier>'
                AND region = 'us-east-1'
