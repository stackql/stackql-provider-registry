openapi: 3.0.0
info:
  title: AppRunner
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
      additionalProperties: false
    AutoScalingConfiguration:
      type: object
      properties:
        AutoScalingConfigurationArn:
          description: The Amazon Resource Name (ARN) of this auto scaling configuration.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        AutoScalingConfigurationName:
          description: The customer-provided auto scaling configuration name.  When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration. The auto scaling configuration name can be used in multiple revisions of a configuration.
          type: string
          minLength: 4
          maxLength: 32
          pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
        AutoScalingConfigurationRevision:
          description: 'The revision of this auto scaling configuration. It''s unique among all the active configurations ("Status": "ACTIVE") that share the same AutoScalingConfigurationName.'
          type: integer
        MaxConcurrency:
          description: The maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up to use more instances to process the requests.
          type: integer
        MaxSize:
          description: The maximum number of instances that an App Runner service scales up to. At most MaxSize instances actively serve traffic for your service.
          type: integer
        MinSize:
          description: The minimum number of instances that App Runner provisions for a service. The service always has at least MinSize provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.
          type: integer
        Latest:
          description: It's set to true for the configuration with the highest Revision among all configurations that share the same AutoScalingConfigurationName. It's set to false otherwise. App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.
          type: boolean
        Tags:
          description: A list of metadata items that you can associate with your auto scaling configuration resource. A tag is a key-value pair.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
      x-stackql-resource-name: auto_scaling_configuration
      description: Describes an AWS App Runner automatic configuration resource that enables automatic scaling of instances used to process web requests. You can share an auto scaling configuration across multiple services.
      x-type-name: AWS::AppRunner::AutoScalingConfiguration
      x-stackql-primary-identifier:
        - AutoScalingConfigurationArn
      x-create-only-properties:
        - AutoScalingConfigurationName
        - MaxConcurrency
        - MaxSize
        - MinSize
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - AutoScalingConfigurationArn
        - AutoScalingConfigurationRevision
        - Latest
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateAutoScalingConfiguration
          - apprunner:DescribeAutoScalingConfiguration
          - apprunner:TagResource
        read:
          - apprunner:DescribeAutoScalingConfiguration
        delete:
          - apprunner:DeleteAutoScalingConfiguration
        list:
          - apprunner:ListAutoScalingConfiguration
    TraceConfiguration:
      description: Describes the configuration of the tracing feature within an AWS App Runner observability configuration.
      type: object
      properties:
        Vendor:
          description: The implementation provider chosen for tracing App Runner services.
          type: string
          enum:
            - AWSXRAY
      required:
        - Vendor
      additionalProperties: false
    ObservabilityConfiguration:
      type: object
      properties:
        ObservabilityConfigurationArn:
          description: The Amazon Resource Name (ARN) of this ObservabilityConfiguration
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        ObservabilityConfigurationName:
          description: A name for the observability configuration. When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.
          type: string
          minLength: 4
          maxLength: 32
          pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
        ObservabilityConfigurationRevision:
          description: 'The revision of this observability configuration. It''s unique among all the active configurations (''Status'': ''ACTIVE'') that share the same ObservabilityConfigurationName.'
          type: integer
        Latest:
          description: It's set to true for the configuration with the highest Revision among all configurations that share the same Name. It's set to false otherwise.
          type: boolean
        TraceConfiguration:
          description: The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.
          $ref: '#/components/schemas/TraceConfiguration'
        Tags:
          description: A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: observability_configuration
      description: The AWS::AppRunner::ObservabilityConfiguration resource  is an AWS App Runner resource type that specifies an App Runner observability configuration
      x-type-name: AWS::AppRunner::ObservabilityConfiguration
      x-stackql-primary-identifier:
        - ObservabilityConfigurationArn
      x-create-only-properties:
        - ObservabilityConfigurationName
        - TraceConfiguration
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - ObservabilityConfigurationArn
        - ObservabilityConfigurationRevision
        - Latest
      x-required-properties: []
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateObservabilityConfiguration
          - apprunner:DescribeObservabilityConfiguration
          - apprunner:TagResource
        read:
          - apprunner:DescribeObservabilityConfiguration
        delete:
          - apprunner:DeleteObservabilityConfiguration
        list:
          - apprunner:ListObservabilityConfigurations
    SourceConfiguration:
      description: Source Code configuration
      type: object
      properties:
        CodeRepository:
          $ref: '#/components/schemas/CodeRepository'
        ImageRepository:
          $ref: '#/components/schemas/ImageRepository'
        AutoDeploymentsEnabled:
          description: Auto Deployment enabled
          type: boolean
        AuthenticationConfiguration:
          $ref: '#/components/schemas/AuthenticationConfiguration'
      additionalProperties: false
    CodeRepository:
      description: Source Code Repository
      type: object
      properties:
        RepositoryUrl:
          type: string
          description: Repository Url
        SourceCodeVersion:
          $ref: '#/components/schemas/SourceCodeVersion'
        CodeConfiguration:
          $ref: '#/components/schemas/CodeConfiguration'
        SourceDirectory:
          type: string
          description: Source Directory
          minLength: 1
          maxLength: 4096
          pattern: '[^\x00]+'
      required:
        - RepositoryUrl
        - SourceCodeVersion
      additionalProperties: false
    SourceCodeVersion:
      description: Source Code Version
      type: object
      properties:
        Type:
          type: string
          description: Source Code Version Type
          enum:
            - BRANCH
        Value:
          type: string
          description: Source Code Version Value
      required:
        - Type
        - Value
      additionalProperties: false
    CodeConfiguration:
      description: Code Configuration
      type: object
      properties:
        ConfigurationSource:
          type: string
          description: Configuration Source
          enum:
            - REPOSITORY
            - API
        CodeConfigurationValues:
          $ref: '#/components/schemas/CodeConfigurationValues'
      required:
        - ConfigurationSource
      additionalProperties: false
    CodeConfigurationValues:
      description: Code Configuration Values
      type: object
      properties:
        Runtime:
          type: string
          description: Runtime
          enum:
            - PYTHON_3
            - NODEJS_12
            - NODEJS_14
            - CORRETTO_8
            - CORRETTO_11
            - NODEJS_16
            - GO_1
            - DOTNET_6
            - PHP_81
            - RUBY_31
            - PYTHON_311
            - NODEJS_18
        BuildCommand:
          type: string
          description: Build Command
        StartCommand:
          type: string
          description: Start Command
        Port:
          type: string
          description: Port
        RuntimeEnvironmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        RuntimeEnvironmentSecrets:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
          description: The secrets and parameters that get referenced by your service as environment variables
      required:
        - Runtime
      additionalProperties: false
    ImageRepository:
      description: Image Repository
      type: object
      properties:
        ImageIdentifier:
          type: string
          description: Image Identifier
          minLength: 1
          maxLength: 1024
          pattern: ([0-9]{12}.dkr.ecr.[a-z\-]+-[0-9]{1}.amazonaws.com\/.*)|(^public\.ecr\.aws\/.+\/.+)
        ImageConfiguration:
          $ref: '#/components/schemas/ImageConfiguration'
        ImageRepositoryType:
          type: string
          description: Image Repository Type
          enum:
            - ECR
            - ECR_PUBLIC
      required:
        - ImageIdentifier
        - ImageRepositoryType
      additionalProperties: false
    ImageConfiguration:
      description: Image Configuration
      type: object
      properties:
        StartCommand:
          type: string
          description: Start Command
        Port:
          type: string
          description: Port
        RuntimeEnvironmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        RuntimeEnvironmentSecrets:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
          description: The secrets and parameters that get referenced by your service as environment variables
      additionalProperties: false
    AuthenticationConfiguration:
      description: Authentication Configuration
      type: object
      properties:
        ConnectionArn:
          type: string
          description: Connection Arn
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        AccessRoleArn:
          description: Access Role Arn
          $ref: '#/components/schemas/RoleArn'
      additionalProperties: false
    InstanceConfiguration:
      description: Instance Configuration
      type: object
      properties:
        Cpu:
          type: string
          description: CPU
          minLength: 3
          maxLength: 9
          pattern: 256|512|1024|2048|4096|(0.25|0.5|1|2|4) vCPU
        Memory:
          type: string
          description: Memory
          minLength: 3
          maxLength: 6
          pattern: 512|1024|2048|3072|4096|6144|8192|10240|12288|(0.5|1|2|3|4|6|8|10|12) GB
        InstanceRoleArn:
          description: Instance Role Arn
          $ref: '#/components/schemas/RoleArn'
      additionalProperties: false
    RoleArn:
      type: string
      minLength: 29
      maxLength: 1024
      pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::[0-9]{12}:role/[\w+=,.@-]{1,64}
    EncryptionConfiguration:
      description: Encryption configuration (KMS key)
      type: object
      properties:
        KmsKey:
          type: string
          description: The KMS Key
          minLength: 0
          maxLength: 256
          pattern: arn:aws(-[\w]+)*:kms:[a-z\-]+-[0-9]{1}:[0-9]{12}:key\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      required:
        - KmsKey
      additionalProperties: false
    HealthCheckConfiguration:
      description: Health check configuration
      type: object
      properties:
        Protocol:
          type: string
          description: Health Check Protocol
          enum:
            - TCP
            - HTTP
        Path:
          type: string
          description: Health check Path
        Interval:
          type: integer
          description: Health check Interval
        Timeout:
          type: integer
          description: Health check Timeout
          minimum: 1
          maximum: 20
        HealthyThreshold:
          type: integer
          description: Health check Healthy Threshold
          minimum: 1
          maximum: 20
        UnhealthyThreshold:
          type: integer
          description: Health check Unhealthy Threshold
          minimum: 1
          maximum: 20
      additionalProperties: false
    EgressConfiguration:
      description: Network egress configuration
      type: object
      properties:
        EgressType:
          description: Network egress type.
          type: string
          enum:
            - DEFAULT
            - VPC
        VpcConnectorArn:
          description: The Amazon Resource Name (ARN) of the App Runner VpcConnector.
          type: string
          minLength: 44
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
      required:
        - EgressType
      additionalProperties: false
    IngressConfiguration:
      description: Network ingress configuration
      type: object
      properties:
        IsPubliclyAccessible:
          description: It's set to true if the Apprunner service is publicly accessible. It's set to false otherwise.
          type: boolean
      required:
        - IsPubliclyAccessible
      additionalProperties: false
    NetworkConfiguration:
      description: Network configuration
      type: object
      properties:
        EgressConfiguration:
          $ref: '#/components/schemas/EgressConfiguration'
        IngressConfiguration:
          $ref: '#/components/schemas/IngressConfiguration'
        IpAddressType:
          description: App Runner service endpoint IP address type
          type: string
          enum:
            - IPV4
            - DUAL_STACK
      additionalProperties: false
    ServiceObservabilityConfiguration:
      description: Service observability configuration
      type: object
      properties:
        ObservabilityEnabled:
          description: Observability enabled
          type: boolean
        ObservabilityConfigurationArn:
          description: The Amazon Resource Name (ARN) of the App Runner ObservabilityConfiguration.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
      required:
        - ObservabilityEnabled
      additionalProperties: false
    KeyValuePair:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      additionalProperties: false
    Service:
      type: object
      properties:
        ServiceName:
          description: The AppRunner Service Name.
          type: string
          minLength: 4
          maxLength: 40
          pattern: '[A-Za-z0-9][A-Za-z0-9-_]{3,39}'
        ServiceId:
          description: The AppRunner Service Id
          type: string
          minLength: 32
          maxLength: 32
        ServiceArn:
          description: The Amazon Resource Name (ARN) of the AppRunner Service.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        ServiceUrl:
          description: The Service Url of the AppRunner Service.
          type: string
        Status:
          description: AppRunner Service status.
          type: string
        SourceConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        InstanceConfiguration:
          $ref: '#/components/schemas/InstanceConfiguration'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        HealthCheckConfiguration:
          $ref: '#/components/schemas/HealthCheckConfiguration'
        ObservabilityConfiguration:
          $ref: '#/components/schemas/ServiceObservabilityConfiguration'
        AutoScalingConfigurationArn:
          description: Autoscaling configuration ARN
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
      required:
        - SourceConfiguration
      x-stackql-resource-name: service
      description: The AWS::AppRunner::Service resource specifies an AppRunner Service.
      x-type-name: AWS::AppRunner::Service
      x-stackql-primary-identifier:
        - ServiceArn
      x-create-only-properties:
        - ServiceName
        - EncryptionConfiguration
        - Tags
      x-write-only-properties:
        - Tags
        - AutoScalingConfigurationArn
      x-read-only-properties:
        - ServiceArn
        - ServiceId
        - ServiceUrl
        - Status
      x-required-properties:
        - SourceConfiguration
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateService
          - apprunner:TagResource
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - logs:CreateLogGroup
          - logs:PutRetentionPolicy
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          - events:PutRule
          - events:PutTargets
        read:
          - apprunner:DescribeService
        update:
          - apprunner:UpdateService
          - iam:PassRole
        delete:
          - apprunner:DeleteService
        list:
          - apprunner:ListServices
          - iam:PassRole
    VpcConnector:
      type: object
      properties:
        VpcConnectorName:
          description: A name for the VPC connector. If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.
          type: string
          minLength: 4
          maxLength: 40
          pattern: ^[A-Za-z0-9][A-Za-z0-9-\\_]{3,39}$
        VpcConnectorArn:
          description: The Amazon Resource Name (ARN) of this VPC connector.
          type: string
          minLength: 44
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        VpcConnectorRevision:
          description: 'The revision of this VPC connector. It''s unique among all the active connectors ("Status": "ACTIVE") that share the same Name.'
          type: integer
        Subnets:
          description: A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
        SecurityGroups:
          description: A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Tags:
          description: A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Subnets
      x-stackql-resource-name: vpc_connector
      description: The AWS::AppRunner::VpcConnector resource specifies an App Runner VpcConnector.
      x-type-name: AWS::AppRunner::VpcConnector
      x-stackql-primary-identifier:
        - VpcConnectorArn
      x-create-only-properties:
        - VpcConnectorName
        - Subnets
        - SecurityGroups
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - VpcConnectorArn
        - VpcConnectorRevision
      x-required-properties:
        - Subnets
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:CreateServiceLinkedRole
          - apprunner:CreateVpcConnector
          - apprunner:DescribeVpcConnector
          - apprunner:TagResource
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
        read:
          - apprunner:DescribeVpcConnector
        delete:
          - apprunner:DeleteVpcConnector
        list:
          - apprunner:ListVpcConnectors
    IngressVpcConfiguration:
      description: The configuration of customer’s VPC and related VPC endpoint
      type: object
      properties:
        VpcId:
          description: The ID of the VPC that the VPC endpoint is used in.
          type: string
        VpcEndpointId:
          description: The ID of the VPC endpoint that your App Runner service connects to.
          type: string
      required:
        - VpcId
        - VpcEndpointId
      additionalProperties: false
    VpcIngressConnection:
      type: object
      properties:
        VpcIngressConnectionArn:
          description: The Amazon Resource Name (ARN) of the VpcIngressConnection.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        VpcIngressConnectionName:
          description: The customer-provided Vpc Ingress Connection name.
          type: string
          minLength: 4
          maxLength: 40
          pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,39}'
        ServiceArn:
          description: The Amazon Resource Name (ARN) of the service.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        Status:
          description: The current status of the VpcIngressConnection.
          type: string
          enum:
            - AVAILABLE
            - PENDING_CREATION
            - PENDING_UPDATE
            - PENDING_DELETION
            - FAILED_CREATION
            - FAILED_UPDATE
            - FAILED_DELETION
            - DELETED
        DomainName:
          description: The Domain name associated with the VPC Ingress Connection.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[A-Za-z0-9*.-]{1,255}'
        IngressVpcConfiguration:
          $ref: '#/components/schemas/IngressVpcConfiguration'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ServiceArn
        - IngressVpcConfiguration
      x-stackql-resource-name: vpc_ingress_connection
      description: The AWS::AppRunner::VpcIngressConnection resource is an App Runner resource that specifies an App Runner VpcIngressConnection.
      x-type-name: AWS::AppRunner::VpcIngressConnection
      x-stackql-primary-identifier:
        - VpcIngressConnectionArn
      x-create-only-properties:
        - VpcIngressConnectionName
        - ServiceArn
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - VpcIngressConnectionArn
        - DomainName
        - Status
      x-required-properties:
        - ServiceArn
        - IngressVpcConfiguration
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateVpcIngressConnection
          - apprunner:DescribeVpcIngressConnection
          - ec2:DescribeVpcs
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeSubnets
          - apprunner:TagResource
        read:
          - apprunner:DescribeVpcIngressConnection
        update:
          - apprunner:UpdateVpcIngressConnection
        delete:
          - apprunner:DeleteVpcIngressConnection
        list:
          - apprunner:ListVpcIngressConnections
  x-stackQL-resources:
    auto_scaling_configurations:
      name: auto_scaling_configurations
      id: aws.apprunner.auto_scaling_configurations
      x-cfn-schema-name: AutoScalingConfiguration
      x-type: list
      x-identifiers:
        - AutoScalingConfigurationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                AND region = 'us-east-1'
    auto_scaling_configuration:
      name: auto_scaling_configuration
      id: aws.apprunner.auto_scaling_configuration
      x-cfn-schema-name: AutoScalingConfiguration
      x-type: get
      x-identifiers:
        - AutoScalingConfigurationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationName') as auto_scaling_configuration_name,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
              JSON_EXTRACT(Properties, '$.MaxConcurrency') as max_concurrency,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.Latest') as latest,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
              AND data__Identifier = '<AutoScalingConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                json_extract_path_text(Properties, 'AutoScalingConfigurationName') as auto_scaling_configuration_name,
                json_extract_path_text(Properties, 'AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
                json_extract_path_text(Properties, 'MaxConcurrency') as max_concurrency,
                json_extract_path_text(Properties, 'MaxSize') as max_size,
                json_extract_path_text(Properties, 'MinSize') as min_size,
                json_extract_path_text(Properties, 'Latest') as latest,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                AND data__Identifier = '<AutoScalingConfigurationArn>'
                AND region = 'us-east-1'
    observability_configurations:
      name: observability_configurations
      id: aws.apprunner.observability_configurations
      x-cfn-schema-name: ObservabilityConfiguration
      x-type: list
      x-identifiers:
        - ObservabilityConfigurationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationArn') as observability_configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ObservabilityConfigurationArn') as observability_configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                AND region = 'us-east-1'
    observability_configuration:
      name: observability_configuration
      id: aws.apprunner.observability_configuration
      x-cfn-schema-name: ObservabilityConfiguration
      x-type: get
      x-identifiers:
        - ObservabilityConfigurationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationArn') as observability_configuration_arn,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationName') as observability_configuration_name,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationRevision') as observability_configuration_revision,
              JSON_EXTRACT(Properties, '$.Latest') as latest,
              JSON_EXTRACT(Properties, '$.TraceConfiguration') as trace_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
              AND data__Identifier = '<ObservabilityConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ObservabilityConfigurationArn') as observability_configuration_arn,
                json_extract_path_text(Properties, 'ObservabilityConfigurationName') as observability_configuration_name,
                json_extract_path_text(Properties, 'ObservabilityConfigurationRevision') as observability_configuration_revision,
                json_extract_path_text(Properties, 'Latest') as latest,
                json_extract_path_text(Properties, 'TraceConfiguration') as trace_configuration,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                AND data__Identifier = '<ObservabilityConfigurationArn>'
                AND region = 'us-east-1'
    services:
      name: services
      id: aws.apprunner.services
      x-cfn-schema-name: Service
      x-type: list
      x-identifiers:
        - ServiceArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ServiceArn') as service_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::Service'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ServiceArn') as service_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::Service'
                AND region = 'us-east-1'
    service:
      name: service
      id: aws.apprunner.service
      x-cfn-schema-name: Service
      x-type: get
      x-identifiers:
        - ServiceArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ServiceName') as service_name,
              JSON_EXTRACT(Properties, '$.ServiceId') as service_id,
              JSON_EXTRACT(Properties, '$.ServiceArn') as service_arn,
              JSON_EXTRACT(Properties, '$.ServiceUrl') as service_url,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.SourceConfiguration') as source_configuration,
              JSON_EXTRACT(Properties, '$.InstanceConfiguration') as instance_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.EncryptionConfiguration') as encryption_configuration,
              JSON_EXTRACT(Properties, '$.HealthCheckConfiguration') as health_check_configuration,
              JSON_EXTRACT(Properties, '$.ObservabilityConfiguration') as observability_configuration,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration') as network_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::Service'
              AND data__Identifier = '<ServiceArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ServiceName') as service_name,
                json_extract_path_text(Properties, 'ServiceId') as service_id,
                json_extract_path_text(Properties, 'ServiceArn') as service_arn,
                json_extract_path_text(Properties, 'ServiceUrl') as service_url,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'SourceConfiguration') as source_configuration,
                json_extract_path_text(Properties, 'InstanceConfiguration') as instance_configuration,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'EncryptionConfiguration') as encryption_configuration,
                json_extract_path_text(Properties, 'HealthCheckConfiguration') as health_check_configuration,
                json_extract_path_text(Properties, 'ObservabilityConfiguration') as observability_configuration,
                json_extract_path_text(Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                json_extract_path_text(Properties, 'NetworkConfiguration') as network_configuration
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::Service'
                AND data__Identifier = '<ServiceArn>'
                AND region = 'us-east-1'
    vpc_connectors:
      name: vpc_connectors
      id: aws.apprunner.vpc_connectors
      x-cfn-schema-name: VpcConnector
      x-type: list
      x-identifiers:
        - VpcConnectorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.VpcConnectorArn') as vpc_connector_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'VpcConnectorArn') as vpc_connector_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
                AND region = 'us-east-1'
    vpc_connector:
      name: vpc_connector
      id: aws.apprunner.vpc_connector
      x-cfn-schema-name: VpcConnector
      x-type: get
      x-identifiers:
        - VpcConnectorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.VpcConnectorName') as vpc_connector_name,
              JSON_EXTRACT(Properties, '$.VpcConnectorArn') as vpc_connector_arn,
              JSON_EXTRACT(Properties, '$.VpcConnectorRevision') as vpc_connector_revision,
              JSON_EXTRACT(Properties, '$.Subnets') as subnets,
              JSON_EXTRACT(Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
              AND data__Identifier = '<VpcConnectorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'VpcConnectorName') as vpc_connector_name,
                json_extract_path_text(Properties, 'VpcConnectorArn') as vpc_connector_arn,
                json_extract_path_text(Properties, 'VpcConnectorRevision') as vpc_connector_revision,
                json_extract_path_text(Properties, 'Subnets') as subnets,
                json_extract_path_text(Properties, 'SecurityGroups') as security_groups,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
                AND data__Identifier = '<VpcConnectorArn>'
                AND region = 'us-east-1'
    vpc_ingress_connections:
      name: vpc_ingress_connections
      id: aws.apprunner.vpc_ingress_connections
      x-cfn-schema-name: VpcIngressConnection
      x-type: list
      x-identifiers:
        - VpcIngressConnectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.VpcIngressConnectionArn') as vpc_ingress_connection_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'VpcIngressConnectionArn') as vpc_ingress_connection_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                AND region = 'us-east-1'
    vpc_ingress_connection:
      name: vpc_ingress_connection
      id: aws.apprunner.vpc_ingress_connection
      x-cfn-schema-name: VpcIngressConnection
      x-type: get
      x-identifiers:
        - VpcIngressConnectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.VpcIngressConnectionArn') as vpc_ingress_connection_arn,
              JSON_EXTRACT(Properties, '$.VpcIngressConnectionName') as vpc_ingress_connection_name,
              JSON_EXTRACT(Properties, '$.ServiceArn') as service_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.IngressVpcConfiguration') as ingress_vpc_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
              AND data__Identifier = '<VpcIngressConnectionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'VpcIngressConnectionArn') as vpc_ingress_connection_arn,
                json_extract_path_text(Properties, 'VpcIngressConnectionName') as vpc_ingress_connection_name,
                json_extract_path_text(Properties, 'ServiceArn') as service_arn,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'DomainName') as domain_name,
                json_extract_path_text(Properties, 'IngressVpcConfiguration') as ingress_vpc_configuration,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                AND data__Identifier = '<VpcIngressConnectionArn>'
                AND region = 'us-east-1'
