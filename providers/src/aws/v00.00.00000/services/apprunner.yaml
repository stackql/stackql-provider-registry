openapi: 3.0.0
info:
  title: AppRunner
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
      additionalProperties: false
    AutoScalingConfiguration:
      type: object
      properties:
        AutoScalingConfigurationArn:
          description: The Amazon Resource Name (ARN) of this auto scaling configuration.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        AutoScalingConfigurationName:
          description: The customer-provided auto scaling configuration name.  When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration. The auto scaling configuration name can be used in multiple revisions of a configuration.
          type: string
          minLength: 4
          maxLength: 32
          pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
        AutoScalingConfigurationRevision:
          description: 'The revision of this auto scaling configuration. It''s unique among all the active configurations ("Status": "ACTIVE") that share the same AutoScalingConfigurationName.'
          type: integer
        MaxConcurrency:
          description: The maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up to use more instances to process the requests.
          type: integer
        MaxSize:
          description: The maximum number of instances that an App Runner service scales up to. At most MaxSize instances actively serve traffic for your service.
          type: integer
        MinSize:
          description: The minimum number of instances that App Runner provisions for a service. The service always has at least MinSize provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.
          type: integer
        Latest:
          description: It's set to true for the configuration with the highest Revision among all configurations that share the same AutoScalingConfigurationName. It's set to false otherwise. App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.
          type: boolean
        Tags:
          description: A list of metadata items that you can associate with your auto scaling configuration resource. A tag is a key-value pair.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
      x-stackql-resource-name: auto_scaling_configuration
      description: Describes an AWS App Runner automatic configuration resource that enables automatic scaling of instances used to process web requests. You can share an auto scaling configuration across multiple services.
      x-type-name: AWS::AppRunner::AutoScalingConfiguration
      x-stackql-primary-identifier:
        - AutoScalingConfigurationArn
      x-create-only-properties:
        - AutoScalingConfigurationName
        - MaxConcurrency
        - MaxSize
        - MinSize
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - AutoScalingConfigurationArn
        - AutoScalingConfigurationRevision
        - Latest
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateAutoScalingConfiguration
          - apprunner:DescribeAutoScalingConfiguration
          - apprunner:TagResource
        read:
          - apprunner:DescribeAutoScalingConfiguration
        delete:
          - apprunner:DeleteAutoScalingConfiguration
        list:
          - apprunner:ListAutoScalingConfiguration
    TraceConfiguration:
      description: Describes the configuration of the tracing feature within an AWS App Runner observability configuration.
      type: object
      properties:
        Vendor:
          description: The implementation provider chosen for tracing App Runner services.
          type: string
          enum:
            - AWSXRAY
      required:
        - Vendor
      additionalProperties: false
    ObservabilityConfiguration:
      type: object
      properties:
        ObservabilityConfigurationArn:
          description: The Amazon Resource Name (ARN) of this ObservabilityConfiguration
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        ObservabilityConfigurationName:
          description: A name for the observability configuration. When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.
          type: string
          minLength: 4
          maxLength: 32
          pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
        ObservabilityConfigurationRevision:
          description: 'The revision of this observability configuration. It''s unique among all the active configurations (''Status'': ''ACTIVE'') that share the same ObservabilityConfigurationName.'
          type: integer
        Latest:
          description: It's set to true for the configuration with the highest Revision among all configurations that share the same Name. It's set to false otherwise.
          type: boolean
        TraceConfiguration:
          description: The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.
          $ref: '#/components/schemas/TraceConfiguration'
        Tags:
          description: A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: observability_configuration
      description: The AWS::AppRunner::ObservabilityConfiguration resource  is an AWS App Runner resource type that specifies an App Runner observability configuration
      x-type-name: AWS::AppRunner::ObservabilityConfiguration
      x-stackql-primary-identifier:
        - ObservabilityConfigurationArn
      x-create-only-properties:
        - ObservabilityConfigurationName
        - TraceConfiguration
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - ObservabilityConfigurationArn
        - ObservabilityConfigurationRevision
        - Latest
      x-required-properties: []
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateObservabilityConfiguration
          - apprunner:DescribeObservabilityConfiguration
          - apprunner:TagResource
        read:
          - apprunner:DescribeObservabilityConfiguration
        delete:
          - apprunner:DeleteObservabilityConfiguration
        list:
          - apprunner:ListObservabilityConfigurations
    SourceConfiguration:
      description: Source Code configuration
      type: object
      properties:
        CodeRepository:
          $ref: '#/components/schemas/CodeRepository'
        ImageRepository:
          $ref: '#/components/schemas/ImageRepository'
        AutoDeploymentsEnabled:
          description: Auto Deployment enabled
          type: boolean
        AuthenticationConfiguration:
          $ref: '#/components/schemas/AuthenticationConfiguration'
      additionalProperties: false
    CodeRepository:
      description: Source Code Repository
      type: object
      properties:
        RepositoryUrl:
          type: string
          description: Repository Url
        SourceCodeVersion:
          $ref: '#/components/schemas/SourceCodeVersion'
        CodeConfiguration:
          $ref: '#/components/schemas/CodeConfiguration'
        SourceDirectory:
          type: string
          description: Source Directory
          minLength: 1
          maxLength: 4096
          pattern: '[^\x00]+'
      required:
        - RepositoryUrl
        - SourceCodeVersion
      additionalProperties: false
    SourceCodeVersion:
      description: Source Code Version
      type: object
      properties:
        Type:
          type: string
          description: Source Code Version Type
          enum:
            - BRANCH
        Value:
          type: string
          description: Source Code Version Value
      required:
        - Type
        - Value
      additionalProperties: false
    CodeConfiguration:
      description: Code Configuration
      type: object
      properties:
        ConfigurationSource:
          type: string
          description: Configuration Source
          enum:
            - REPOSITORY
            - API
        CodeConfigurationValues:
          $ref: '#/components/schemas/CodeConfigurationValues'
      required:
        - ConfigurationSource
      additionalProperties: false
    CodeConfigurationValues:
      description: Code Configuration Values
      type: object
      properties:
        Runtime:
          type: string
          description: Runtime
          enum:
            - PYTHON_3
            - NODEJS_12
            - NODEJS_14
            - CORRETTO_8
            - CORRETTO_11
            - NODEJS_16
            - GO_1
            - DOTNET_6
            - PHP_81
            - RUBY_31
            - PYTHON_311
            - NODEJS_18
        BuildCommand:
          type: string
          description: Build Command
        StartCommand:
          type: string
          description: Start Command
        Port:
          type: string
          description: Port
        RuntimeEnvironmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        RuntimeEnvironmentSecrets:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
          description: The secrets and parameters that get referenced by your service as environment variables
      required:
        - Runtime
      additionalProperties: false
    ImageRepository:
      description: Image Repository
      type: object
      properties:
        ImageIdentifier:
          type: string
          description: Image Identifier
          minLength: 1
          maxLength: 1024
          pattern: ([0-9]{12}.dkr.ecr.[a-z\-]+-[0-9]{1}.amazonaws.com\/.*)|(^public\.ecr\.aws\/.+\/.+)
        ImageConfiguration:
          $ref: '#/components/schemas/ImageConfiguration'
        ImageRepositoryType:
          type: string
          description: Image Repository Type
          enum:
            - ECR
            - ECR_PUBLIC
      required:
        - ImageIdentifier
        - ImageRepositoryType
      additionalProperties: false
    ImageConfiguration:
      description: Image Configuration
      type: object
      properties:
        StartCommand:
          type: string
          description: Start Command
        Port:
          type: string
          description: Port
        RuntimeEnvironmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        RuntimeEnvironmentSecrets:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
          description: The secrets and parameters that get referenced by your service as environment variables
      additionalProperties: false
    AuthenticationConfiguration:
      description: Authentication Configuration
      type: object
      properties:
        ConnectionArn:
          type: string
          description: Connection Arn
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        AccessRoleArn:
          description: Access Role Arn
          $ref: '#/components/schemas/RoleArn'
      additionalProperties: false
    InstanceConfiguration:
      description: Instance Configuration
      type: object
      properties:
        Cpu:
          type: string
          description: CPU
          minLength: 3
          maxLength: 9
          pattern: 256|512|1024|2048|4096|(0.25|0.5|1|2|4) vCPU
        Memory:
          type: string
          description: Memory
          minLength: 3
          maxLength: 6
          pattern: 512|1024|2048|3072|4096|6144|8192|10240|12288|(0.5|1|2|3|4|6|8|10|12) GB
        InstanceRoleArn:
          description: Instance Role Arn
          $ref: '#/components/schemas/RoleArn'
      additionalProperties: false
    RoleArn:
      type: string
      minLength: 29
      maxLength: 1024
      pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::[0-9]{12}:role/[\w+=,.@-]{1,64}
    EncryptionConfiguration:
      description: Encryption configuration (KMS key)
      type: object
      properties:
        KmsKey:
          type: string
          description: The KMS Key
          minLength: 0
          maxLength: 256
          pattern: arn:aws(-[\w]+)*:kms:[a-z\-]+-[0-9]{1}:[0-9]{12}:key\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      required:
        - KmsKey
      additionalProperties: false
    HealthCheckConfiguration:
      description: Health check configuration
      type: object
      properties:
        Protocol:
          type: string
          description: Health Check Protocol
          enum:
            - TCP
            - HTTP
        Path:
          type: string
          description: Health check Path
        Interval:
          type: integer
          description: Health check Interval
        Timeout:
          type: integer
          description: Health check Timeout
          minimum: 1
          maximum: 20
        HealthyThreshold:
          type: integer
          description: Health check Healthy Threshold
          minimum: 1
          maximum: 20
        UnhealthyThreshold:
          type: integer
          description: Health check Unhealthy Threshold
          minimum: 1
          maximum: 20
      additionalProperties: false
    EgressConfiguration:
      description: Network egress configuration
      type: object
      properties:
        EgressType:
          description: Network egress type.
          type: string
          enum:
            - DEFAULT
            - VPC
        VpcConnectorArn:
          description: The Amazon Resource Name (ARN) of the App Runner VpcConnector.
          type: string
          minLength: 44
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
      required:
        - EgressType
      additionalProperties: false
    IngressConfiguration:
      description: Network ingress configuration
      type: object
      properties:
        IsPubliclyAccessible:
          description: It's set to true if the Apprunner service is publicly accessible. It's set to false otherwise.
          type: boolean
      required:
        - IsPubliclyAccessible
      additionalProperties: false
    NetworkConfiguration:
      description: Network configuration
      type: object
      properties:
        EgressConfiguration:
          $ref: '#/components/schemas/EgressConfiguration'
        IngressConfiguration:
          $ref: '#/components/schemas/IngressConfiguration'
        IpAddressType:
          description: App Runner service endpoint IP address type
          type: string
          enum:
            - IPV4
            - DUAL_STACK
      additionalProperties: false
    ServiceObservabilityConfiguration:
      description: Service observability configuration
      type: object
      properties:
        ObservabilityEnabled:
          description: Observability enabled
          type: boolean
        ObservabilityConfigurationArn:
          description: The Amazon Resource Name (ARN) of the App Runner ObservabilityConfiguration.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
      required:
        - ObservabilityEnabled
      additionalProperties: false
    KeyValuePair:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      additionalProperties: false
    Service:
      type: object
      properties:
        ServiceName:
          description: The AppRunner Service Name.
          type: string
          minLength: 4
          maxLength: 40
          pattern: '[A-Za-z0-9][A-Za-z0-9-_]{3,39}'
        ServiceId:
          description: The AppRunner Service Id
          type: string
          minLength: 32
          maxLength: 32
        ServiceArn:
          description: The Amazon Resource Name (ARN) of the AppRunner Service.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        ServiceUrl:
          description: The Service Url of the AppRunner Service.
          type: string
        Status:
          description: AppRunner Service status.
          type: string
        SourceConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        InstanceConfiguration:
          $ref: '#/components/schemas/InstanceConfiguration'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        HealthCheckConfiguration:
          $ref: '#/components/schemas/HealthCheckConfiguration'
        ObservabilityConfiguration:
          $ref: '#/components/schemas/ServiceObservabilityConfiguration'
        AutoScalingConfigurationArn:
          description: Autoscaling configuration ARN
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
      required:
        - SourceConfiguration
      x-stackql-resource-name: service
      description: The AWS::AppRunner::Service resource specifies an AppRunner Service.
      x-type-name: AWS::AppRunner::Service
      x-stackql-primary-identifier:
        - ServiceArn
      x-create-only-properties:
        - ServiceName
        - EncryptionConfiguration
        - Tags
      x-write-only-properties:
        - Tags
        - AutoScalingConfigurationArn
      x-read-only-properties:
        - ServiceArn
        - ServiceId
        - ServiceUrl
        - Status
      x-required-properties:
        - SourceConfiguration
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateService
          - apprunner:TagResource
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - logs:CreateLogGroup
          - logs:PutRetentionPolicy
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          - events:PutRule
          - events:PutTargets
        read:
          - apprunner:DescribeService
        update:
          - apprunner:UpdateService
          - iam:PassRole
        delete:
          - apprunner:DeleteService
        list:
          - apprunner:ListServices
          - iam:PassRole
    VpcConnector:
      type: object
      properties:
        VpcConnectorName:
          description: A name for the VPC connector. If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.
          type: string
          minLength: 4
          maxLength: 40
          pattern: ^[A-Za-z0-9][A-Za-z0-9-\\_]{3,39}$
        VpcConnectorArn:
          description: The Amazon Resource Name (ARN) of this VPC connector.
          type: string
          minLength: 44
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
        VpcConnectorRevision:
          description: 'The revision of this VPC connector. It''s unique among all the active connectors ("Status": "ACTIVE") that share the same Name.'
          type: integer
        Subnets:
          description: A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
        SecurityGroups:
          description: A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Tags:
          description: A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Subnets
      x-stackql-resource-name: vpc_connector
      description: The AWS::AppRunner::VpcConnector resource specifies an App Runner VpcConnector.
      x-type-name: AWS::AppRunner::VpcConnector
      x-stackql-primary-identifier:
        - VpcConnectorArn
      x-create-only-properties:
        - VpcConnectorName
        - Subnets
        - SecurityGroups
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - VpcConnectorArn
        - VpcConnectorRevision
      x-required-properties:
        - Subnets
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:CreateServiceLinkedRole
          - apprunner:CreateVpcConnector
          - apprunner:DescribeVpcConnector
          - apprunner:TagResource
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
        read:
          - apprunner:DescribeVpcConnector
        delete:
          - apprunner:DeleteVpcConnector
        list:
          - apprunner:ListVpcConnectors
    IngressVpcConfiguration:
      description: The configuration of customer’s VPC and related VPC endpoint
      type: object
      properties:
        VpcId:
          description: The ID of the VPC that the VPC endpoint is used in.
          type: string
        VpcEndpointId:
          description: The ID of the VPC endpoint that your App Runner service connects to.
          type: string
      required:
        - VpcId
        - VpcEndpointId
      additionalProperties: false
    VpcIngressConnection:
      type: object
      properties:
        VpcIngressConnectionArn:
          description: The Amazon Resource Name (ARN) of the VpcIngressConnection.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        VpcIngressConnectionName:
          description: The customer-provided Vpc Ingress Connection name.
          type: string
          minLength: 4
          maxLength: 40
          pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,39}'
        ServiceArn:
          description: The Amazon Resource Name (ARN) of the service.
          type: string
          minLength: 1
          maxLength: 1011
          pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
        Status:
          description: The current status of the VpcIngressConnection.
          type: string
          enum:
            - AVAILABLE
            - PENDING_CREATION
            - PENDING_UPDATE
            - PENDING_DELETION
            - FAILED_CREATION
            - FAILED_UPDATE
            - FAILED_DELETION
            - DELETED
        DomainName:
          description: The Domain name associated with the VPC Ingress Connection.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[A-Za-z0-9*.-]{1,255}'
        IngressVpcConfiguration:
          $ref: '#/components/schemas/IngressVpcConfiguration'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ServiceArn
        - IngressVpcConfiguration
      x-stackql-resource-name: vpc_ingress_connection
      description: The AWS::AppRunner::VpcIngressConnection resource is an App Runner resource that specifies an App Runner VpcIngressConnection.
      x-type-name: AWS::AppRunner::VpcIngressConnection
      x-stackql-primary-identifier:
        - VpcIngressConnectionArn
      x-create-only-properties:
        - VpcIngressConnectionName
        - ServiceArn
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - VpcIngressConnectionArn
        - DomainName
        - Status
      x-required-properties:
        - ServiceArn
        - IngressVpcConfiguration
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - apprunner:CreateVpcIngressConnection
          - apprunner:DescribeVpcIngressConnection
          - ec2:DescribeVpcs
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeSubnets
          - apprunner:TagResource
        read:
          - apprunner:DescribeVpcIngressConnection
        update:
          - apprunner:UpdateVpcIngressConnection
        delete:
          - apprunner:DeleteVpcIngressConnection
        list:
          - apprunner:ListVpcIngressConnections
    CreateAutoScalingConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AutoScalingConfigurationArn:
              description: The Amazon Resource Name (ARN) of this auto scaling configuration.
              type: string
              minLength: 1
              maxLength: 1011
              pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
            AutoScalingConfigurationName:
              description: The customer-provided auto scaling configuration name.  When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration. The auto scaling configuration name can be used in multiple revisions of a configuration.
              type: string
              minLength: 4
              maxLength: 32
              pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
            AutoScalingConfigurationRevision:
              description: 'The revision of this auto scaling configuration. It''s unique among all the active configurations ("Status": "ACTIVE") that share the same AutoScalingConfigurationName.'
              type: integer
            MaxConcurrency:
              description: The maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up to use more instances to process the requests.
              type: integer
            MaxSize:
              description: The maximum number of instances that an App Runner service scales up to. At most MaxSize instances actively serve traffic for your service.
              type: integer
            MinSize:
              description: The minimum number of instances that App Runner provisions for a service. The service always has at least MinSize provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.
              type: integer
            Latest:
              description: It's set to true for the configuration with the highest Revision among all configurations that share the same AutoScalingConfigurationName. It's set to false otherwise. App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.
              type: boolean
            Tags:
              description: A list of metadata items that you can associate with your auto scaling configuration resource. A tag is a key-value pair.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateAutoScalingConfigurationRequest
      type: object
      required: []
    CreateObservabilityConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ObservabilityConfigurationArn:
              description: The Amazon Resource Name (ARN) of this ObservabilityConfiguration
              type: string
              minLength: 1
              maxLength: 1011
              pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
            ObservabilityConfigurationName:
              description: A name for the observability configuration. When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.
              type: string
              minLength: 4
              maxLength: 32
              pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,31}'
            ObservabilityConfigurationRevision:
              description: 'The revision of this observability configuration. It''s unique among all the active configurations (''Status'': ''ACTIVE'') that share the same ObservabilityConfigurationName.'
              type: integer
            Latest:
              description: It's set to true for the configuration with the highest Revision among all configurations that share the same Name. It's set to false otherwise.
              type: boolean
            TraceConfiguration:
              description: The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.
              $ref: '#/components/schemas/TraceConfiguration'
            Tags:
              description: A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateObservabilityConfigurationRequest
      type: object
      required: []
    CreateServiceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ServiceName:
              description: The AppRunner Service Name.
              type: string
              minLength: 4
              maxLength: 40
              pattern: '[A-Za-z0-9][A-Za-z0-9-_]{3,39}'
            ServiceId:
              description: The AppRunner Service Id
              type: string
              minLength: 32
              maxLength: 32
            ServiceArn:
              description: The Amazon Resource Name (ARN) of the AppRunner Service.
              type: string
              minLength: 1
              maxLength: 1011
              pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
            ServiceUrl:
              description: The Service Url of the AppRunner Service.
              type: string
            Status:
              description: AppRunner Service status.
              type: string
            SourceConfiguration:
              $ref: '#/components/schemas/SourceConfiguration'
            InstanceConfiguration:
              $ref: '#/components/schemas/InstanceConfiguration'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            EncryptionConfiguration:
              $ref: '#/components/schemas/EncryptionConfiguration'
            HealthCheckConfiguration:
              $ref: '#/components/schemas/HealthCheckConfiguration'
            ObservabilityConfiguration:
              $ref: '#/components/schemas/ServiceObservabilityConfiguration'
            AutoScalingConfigurationArn:
              description: Autoscaling configuration ARN
              type: string
              minLength: 1
              maxLength: 1011
              pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
            NetworkConfiguration:
              $ref: '#/components/schemas/NetworkConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateServiceRequest
      type: object
      required: []
    CreateVpcConnectorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            VpcConnectorName:
              description: A name for the VPC connector. If you don't specify a name, AWS CloudFormation generates a name for your VPC connector.
              type: string
              minLength: 4
              maxLength: 40
              pattern: ^[A-Za-z0-9][A-Za-z0-9-\\_]{3,39}$
            VpcConnectorArn:
              description: The Amazon Resource Name (ARN) of this VPC connector.
              type: string
              minLength: 44
              maxLength: 1011
              pattern: arn:aws(-[\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\w|\/|-){1,1011}
            VpcConnectorRevision:
              description: 'The revision of this VPC connector. It''s unique among all the active connectors ("Status": "ACTIVE") that share the same Name.'
              type: integer
            Subnets:
              description: A list of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              minItems: 1
              items:
                type: string
            SecurityGroups:
              description: A list of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            Tags:
              description: A list of metadata items that you can associate with your VPC connector resource. A tag is a key-value pair.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateVpcConnectorRequest
      type: object
      required: []
    CreateVpcIngressConnectionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            VpcIngressConnectionArn:
              description: The Amazon Resource Name (ARN) of the VpcIngressConnection.
              type: string
              minLength: 1
              maxLength: 1011
              pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
            VpcIngressConnectionName:
              description: The customer-provided Vpc Ingress Connection name.
              type: string
              minLength: 4
              maxLength: 40
              pattern: '[A-Za-z0-9][A-Za-z0-9\-_]{3,39}'
            ServiceArn:
              description: The Amazon Resource Name (ARN) of the service.
              type: string
              minLength: 1
              maxLength: 1011
              pattern: arn:aws(-[\w]+)*:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[0-9]{12}:(\w|/|-){1,1011}
            Status:
              description: The current status of the VpcIngressConnection.
              type: string
              enum:
                - AVAILABLE
                - PENDING_CREATION
                - PENDING_UPDATE
                - PENDING_DELETION
                - FAILED_CREATION
                - FAILED_UPDATE
                - FAILED_DELETION
                - DELETED
            DomainName:
              description: The Domain name associated with the VPC Ingress Connection.
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[A-Za-z0-9*.-]{1,255}'
            IngressVpcConfiguration:
              $ref: '#/components/schemas/IngressVpcConfiguration'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateVpcIngressConnectionRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    auto_scaling_configurations:
      name: auto_scaling_configurations
      id: aws.apprunner.auto_scaling_configurations
      x-cfn-schema-name: AutoScalingConfiguration
      x-cfn-type-name: AWS::AppRunner::AutoScalingConfiguration
      x-identifiers:
        - AutoScalingConfigurationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AutoScalingConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::AutoScalingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::AutoScalingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/auto_scaling_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/auto_scaling_configurations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationName') as auto_scaling_configuration_name,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
              JSON_EXTRACT(Properties, '$.MaxConcurrency') as max_concurrency,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.Latest') as latest,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
              AND data__Identifier = '<AutoScalingConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationName') as auto_scaling_configuration_name,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
                JSON_EXTRACT(detail.Properties, '$.MaxConcurrency') as max_concurrency,
                JSON_EXTRACT(detail.Properties, '$.MaxSize') as max_size,
                JSON_EXTRACT(detail.Properties, '$.MinSize') as min_size,
                JSON_EXTRACT(detail.Properties, '$.Latest') as latest,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                AND detail.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                  json_extract_path_text(Properties, 'AutoScalingConfigurationName') as auto_scaling_configuration_name,
                  json_extract_path_text(Properties, 'AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
                  json_extract_path_text(Properties, 'MaxConcurrency') as max_concurrency,
                  json_extract_path_text(Properties, 'MaxSize') as max_size,
                  json_extract_path_text(Properties, 'MinSize') as min_size,
                  json_extract_path_text(Properties, 'Latest') as latest,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                  AND data__Identifier = '<AutoScalingConfigurationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                    json_extract_path_text(detail.Properties, 'AutoScalingConfigurationName') as auto_scaling_configuration_name,
                    json_extract_path_text(detail.Properties, 'AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
                    json_extract_path_text(detail.Properties, 'MaxConcurrency') as max_concurrency,
                    json_extract_path_text(detail.Properties, 'MaxSize') as max_size,
                    json_extract_path_text(detail.Properties, 'MinSize') as min_size,
                    json_extract_path_text(detail.Properties, 'Latest') as latest,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                    AND detail.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                    AND listing.region = 'us-east-1'
    auto_scaling_configurations_list_only:
      name: auto_scaling_configurations_list_only
      id: aws.apprunner.auto_scaling_configurations_list_only
      x-cfn-schema-name: AutoScalingConfiguration
      x-cfn-type-name: AWS::AppRunner::AutoScalingConfiguration
      x-identifiers:
        - AutoScalingConfigurationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                AND region = 'us-east-1'
    auto_scaling_configuration_tags:
      name: auto_scaling_configuration_tags
      id: aws.apprunner.auto_scaling_configuration_tags
      x-cfn-schema-name: AutoScalingConfiguration
      x-cfn-type-name: AWS::AppRunner::AutoScalingConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
              JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationName') as auto_scaling_configuration_name,
              JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
              JSON_EXTRACT(detail.Properties, '$.MaxConcurrency') as max_concurrency,
              JSON_EXTRACT(detail.Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(detail.Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(detail.Properties, '$.Latest') as latest
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
              AND detail.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                json_extract_path_text(detail.Properties, 'AutoScalingConfigurationName') as auto_scaling_configuration_name,
                json_extract_path_text(detail.Properties, 'AutoScalingConfigurationRevision') as auto_scaling_configuration_revision,
                json_extract_path_text(detail.Properties, 'MaxConcurrency') as max_concurrency,
                json_extract_path_text(detail.Properties, 'MaxSize') as max_size,
                json_extract_path_text(detail.Properties, 'MinSize') as min_size,
                json_extract_path_text(detail.Properties, 'Latest') as latest
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                AND detail.data__TypeName = 'AWS::AppRunner::AutoScalingConfiguration'
                AND listing.region = 'us-east-1'
    observability_configurations:
      name: observability_configurations
      id: aws.apprunner.observability_configurations
      x-cfn-schema-name: ObservabilityConfiguration
      x-cfn-type-name: AWS::AppRunner::ObservabilityConfiguration
      x-identifiers:
        - ObservabilityConfigurationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ObservabilityConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::ObservabilityConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::ObservabilityConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/observability_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/observability_configurations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationArn') as observability_configuration_arn,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationName') as observability_configuration_name,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationRevision') as observability_configuration_revision,
              JSON_EXTRACT(Properties, '$.Latest') as latest,
              JSON_EXTRACT(Properties, '$.TraceConfiguration') as trace_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
              AND data__Identifier = '<ObservabilityConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ObservabilityConfigurationArn') as observability_configuration_arn,
                JSON_EXTRACT(detail.Properties, '$.ObservabilityConfigurationName') as observability_configuration_name,
                JSON_EXTRACT(detail.Properties, '$.ObservabilityConfigurationRevision') as observability_configuration_revision,
                JSON_EXTRACT(detail.Properties, '$.Latest') as latest,
                JSON_EXTRACT(detail.Properties, '$.TraceConfiguration') as trace_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                AND detail.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ObservabilityConfigurationArn') as observability_configuration_arn,
                  json_extract_path_text(Properties, 'ObservabilityConfigurationName') as observability_configuration_name,
                  json_extract_path_text(Properties, 'ObservabilityConfigurationRevision') as observability_configuration_revision,
                  json_extract_path_text(Properties, 'Latest') as latest,
                  json_extract_path_text(Properties, 'TraceConfiguration') as trace_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                  AND data__Identifier = '<ObservabilityConfigurationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ObservabilityConfigurationArn') as observability_configuration_arn,
                    json_extract_path_text(detail.Properties, 'ObservabilityConfigurationName') as observability_configuration_name,
                    json_extract_path_text(detail.Properties, 'ObservabilityConfigurationRevision') as observability_configuration_revision,
                    json_extract_path_text(detail.Properties, 'Latest') as latest,
                    json_extract_path_text(detail.Properties, 'TraceConfiguration') as trace_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                    AND detail.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                    AND listing.region = 'us-east-1'
    observability_configurations_list_only:
      name: observability_configurations_list_only
      id: aws.apprunner.observability_configurations_list_only
      x-cfn-schema-name: ObservabilityConfiguration
      x-cfn-type-name: AWS::AppRunner::ObservabilityConfiguration
      x-identifiers:
        - ObservabilityConfigurationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ObservabilityConfigurationArn') as observability_configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ObservabilityConfigurationArn') as observability_configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                AND region = 'us-east-1'
    observability_configuration_tags:
      name: observability_configuration_tags
      id: aws.apprunner.observability_configuration_tags
      x-cfn-schema-name: ObservabilityConfiguration
      x-cfn-type-name: AWS::AppRunner::ObservabilityConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ObservabilityConfigurationArn') as observability_configuration_arn,
              JSON_EXTRACT(detail.Properties, '$.ObservabilityConfigurationName') as observability_configuration_name,
              JSON_EXTRACT(detail.Properties, '$.ObservabilityConfigurationRevision') as observability_configuration_revision,
              JSON_EXTRACT(detail.Properties, '$.Latest') as latest,
              JSON_EXTRACT(detail.Properties, '$.TraceConfiguration') as trace_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
              AND detail.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ObservabilityConfigurationArn') as observability_configuration_arn,
                json_extract_path_text(detail.Properties, 'ObservabilityConfigurationName') as observability_configuration_name,
                json_extract_path_text(detail.Properties, 'ObservabilityConfigurationRevision') as observability_configuration_revision,
                json_extract_path_text(detail.Properties, 'Latest') as latest,
                json_extract_path_text(detail.Properties, 'TraceConfiguration') as trace_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                AND detail.data__TypeName = 'AWS::AppRunner::ObservabilityConfiguration'
                AND listing.region = 'us-east-1'
    services:
      name: services
      id: aws.apprunner.services
      x-cfn-schema-name: Service
      x-cfn-type-name: AWS::AppRunner::Service
      x-identifiers:
        - ServiceArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Service&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::Service"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::Service"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::Service"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/services/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ServiceName') as service_name,
              JSON_EXTRACT(Properties, '$.ServiceId') as service_id,
              JSON_EXTRACT(Properties, '$.ServiceArn') as service_arn,
              JSON_EXTRACT(Properties, '$.ServiceUrl') as service_url,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.SourceConfiguration') as source_configuration,
              JSON_EXTRACT(Properties, '$.InstanceConfiguration') as instance_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.EncryptionConfiguration') as encryption_configuration,
              JSON_EXTRACT(Properties, '$.HealthCheckConfiguration') as health_check_configuration,
              JSON_EXTRACT(Properties, '$.ObservabilityConfiguration') as observability_configuration,
              JSON_EXTRACT(Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration') as network_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::Service'
              AND data__Identifier = '<ServiceArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ServiceName') as service_name,
                JSON_EXTRACT(detail.Properties, '$.ServiceId') as service_id,
                JSON_EXTRACT(detail.Properties, '$.ServiceArn') as service_arn,
                JSON_EXTRACT(detail.Properties, '$.ServiceUrl') as service_url,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.SourceConfiguration') as source_configuration,
                JSON_EXTRACT(detail.Properties, '$.InstanceConfiguration') as instance_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.EncryptionConfiguration') as encryption_configuration,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckConfiguration') as health_check_configuration,
                JSON_EXTRACT(detail.Properties, '$.ObservabilityConfiguration') as observability_configuration,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                JSON_EXTRACT(detail.Properties, '$.NetworkConfiguration') as network_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppRunner::Service'
                AND detail.data__TypeName = 'AWS::AppRunner::Service'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ServiceName') as service_name,
                  json_extract_path_text(Properties, 'ServiceId') as service_id,
                  json_extract_path_text(Properties, 'ServiceArn') as service_arn,
                  json_extract_path_text(Properties, 'ServiceUrl') as service_url,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'SourceConfiguration') as source_configuration,
                  json_extract_path_text(Properties, 'InstanceConfiguration') as instance_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'EncryptionConfiguration') as encryption_configuration,
                  json_extract_path_text(Properties, 'HealthCheckConfiguration') as health_check_configuration,
                  json_extract_path_text(Properties, 'ObservabilityConfiguration') as observability_configuration,
                  json_extract_path_text(Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                  json_extract_path_text(Properties, 'NetworkConfiguration') as network_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::Service'
                  AND data__Identifier = '<ServiceArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ServiceName') as service_name,
                    json_extract_path_text(detail.Properties, 'ServiceId') as service_id,
                    json_extract_path_text(detail.Properties, 'ServiceArn') as service_arn,
                    json_extract_path_text(detail.Properties, 'ServiceUrl') as service_url,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'SourceConfiguration') as source_configuration,
                    json_extract_path_text(detail.Properties, 'InstanceConfiguration') as instance_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'EncryptionConfiguration') as encryption_configuration,
                    json_extract_path_text(detail.Properties, 'HealthCheckConfiguration') as health_check_configuration,
                    json_extract_path_text(detail.Properties, 'ObservabilityConfiguration') as observability_configuration,
                    json_extract_path_text(detail.Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                    json_extract_path_text(detail.Properties, 'NetworkConfiguration') as network_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppRunner::Service'
                    AND detail.data__TypeName = 'AWS::AppRunner::Service'
                    AND listing.region = 'us-east-1'
    services_list_only:
      name: services_list_only
      id: aws.apprunner.services_list_only
      x-cfn-schema-name: Service
      x-cfn-type-name: AWS::AppRunner::Service
      x-identifiers:
        - ServiceArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ServiceArn') as service_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::Service'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ServiceArn') as service_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::Service'
                AND region = 'us-east-1'
    service_tags:
      name: service_tags
      id: aws.apprunner.service_tags
      x-cfn-schema-name: Service
      x-cfn-type-name: AWS::AppRunner::Service
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ServiceName') as service_name,
              JSON_EXTRACT(detail.Properties, '$.ServiceId') as service_id,
              JSON_EXTRACT(detail.Properties, '$.ServiceArn') as service_arn,
              JSON_EXTRACT(detail.Properties, '$.ServiceUrl') as service_url,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.SourceConfiguration') as source_configuration,
              JSON_EXTRACT(detail.Properties, '$.InstanceConfiguration') as instance_configuration,
              JSON_EXTRACT(detail.Properties, '$.EncryptionConfiguration') as encryption_configuration,
              JSON_EXTRACT(detail.Properties, '$.HealthCheckConfiguration') as health_check_configuration,
              JSON_EXTRACT(detail.Properties, '$.ObservabilityConfiguration') as observability_configuration,
              JSON_EXTRACT(detail.Properties, '$.AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
              JSON_EXTRACT(detail.Properties, '$.NetworkConfiguration') as network_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppRunner::Service'
              AND detail.data__TypeName = 'AWS::AppRunner::Service'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ServiceName') as service_name,
                json_extract_path_text(detail.Properties, 'ServiceId') as service_id,
                json_extract_path_text(detail.Properties, 'ServiceArn') as service_arn,
                json_extract_path_text(detail.Properties, 'ServiceUrl') as service_url,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'SourceConfiguration') as source_configuration,
                json_extract_path_text(detail.Properties, 'InstanceConfiguration') as instance_configuration,
                json_extract_path_text(detail.Properties, 'EncryptionConfiguration') as encryption_configuration,
                json_extract_path_text(detail.Properties, 'HealthCheckConfiguration') as health_check_configuration,
                json_extract_path_text(detail.Properties, 'ObservabilityConfiguration') as observability_configuration,
                json_extract_path_text(detail.Properties, 'AutoScalingConfigurationArn') as auto_scaling_configuration_arn,
                json_extract_path_text(detail.Properties, 'NetworkConfiguration') as network_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppRunner::Service'
                AND detail.data__TypeName = 'AWS::AppRunner::Service'
                AND listing.region = 'us-east-1'
    vpc_connectors:
      name: vpc_connectors
      id: aws.apprunner.vpc_connectors
      x-cfn-schema-name: VpcConnector
      x-cfn-type-name: AWS::AppRunner::VpcConnector
      x-identifiers:
        - VpcConnectorArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__VpcConnector&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::VpcConnector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::VpcConnector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/vpc_connectors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/vpc_connectors/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.VpcConnectorName') as vpc_connector_name,
              JSON_EXTRACT(Properties, '$.VpcConnectorArn') as vpc_connector_arn,
              JSON_EXTRACT(Properties, '$.VpcConnectorRevision') as vpc_connector_revision,
              JSON_EXTRACT(Properties, '$.Subnets') as subnets,
              JSON_EXTRACT(Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
              AND data__Identifier = '<VpcConnectorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.VpcConnectorName') as vpc_connector_name,
                JSON_EXTRACT(detail.Properties, '$.VpcConnectorArn') as vpc_connector_arn,
                JSON_EXTRACT(detail.Properties, '$.VpcConnectorRevision') as vpc_connector_revision,
                JSON_EXTRACT(detail.Properties, '$.Subnets') as subnets,
                JSON_EXTRACT(detail.Properties, '$.SecurityGroups') as security_groups,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppRunner::VpcConnector'
                AND detail.data__TypeName = 'AWS::AppRunner::VpcConnector'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'VpcConnectorName') as vpc_connector_name,
                  json_extract_path_text(Properties, 'VpcConnectorArn') as vpc_connector_arn,
                  json_extract_path_text(Properties, 'VpcConnectorRevision') as vpc_connector_revision,
                  json_extract_path_text(Properties, 'Subnets') as subnets,
                  json_extract_path_text(Properties, 'SecurityGroups') as security_groups,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
                  AND data__Identifier = '<VpcConnectorArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'VpcConnectorName') as vpc_connector_name,
                    json_extract_path_text(detail.Properties, 'VpcConnectorArn') as vpc_connector_arn,
                    json_extract_path_text(detail.Properties, 'VpcConnectorRevision') as vpc_connector_revision,
                    json_extract_path_text(detail.Properties, 'Subnets') as subnets,
                    json_extract_path_text(detail.Properties, 'SecurityGroups') as security_groups,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppRunner::VpcConnector'
                    AND detail.data__TypeName = 'AWS::AppRunner::VpcConnector'
                    AND listing.region = 'us-east-1'
    vpc_connectors_list_only:
      name: vpc_connectors_list_only
      id: aws.apprunner.vpc_connectors_list_only
      x-cfn-schema-name: VpcConnector
      x-cfn-type-name: AWS::AppRunner::VpcConnector
      x-identifiers:
        - VpcConnectorArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.VpcConnectorArn') as vpc_connector_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'VpcConnectorArn') as vpc_connector_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcConnector'
                AND region = 'us-east-1'
    vpc_connector_tags:
      name: vpc_connector_tags
      id: aws.apprunner.vpc_connector_tags
      x-cfn-schema-name: VpcConnector
      x-cfn-type-name: AWS::AppRunner::VpcConnector
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.VpcConnectorName') as vpc_connector_name,
              JSON_EXTRACT(detail.Properties, '$.VpcConnectorArn') as vpc_connector_arn,
              JSON_EXTRACT(detail.Properties, '$.VpcConnectorRevision') as vpc_connector_revision,
              JSON_EXTRACT(detail.Properties, '$.Subnets') as subnets,
              JSON_EXTRACT(detail.Properties, '$.SecurityGroups') as security_groups
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppRunner::VpcConnector'
              AND detail.data__TypeName = 'AWS::AppRunner::VpcConnector'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'VpcConnectorName') as vpc_connector_name,
                json_extract_path_text(detail.Properties, 'VpcConnectorArn') as vpc_connector_arn,
                json_extract_path_text(detail.Properties, 'VpcConnectorRevision') as vpc_connector_revision,
                json_extract_path_text(detail.Properties, 'Subnets') as subnets,
                json_extract_path_text(detail.Properties, 'SecurityGroups') as security_groups
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppRunner::VpcConnector'
                AND detail.data__TypeName = 'AWS::AppRunner::VpcConnector'
                AND listing.region = 'us-east-1'
    vpc_ingress_connections:
      name: vpc_ingress_connections
      id: aws.apprunner.vpc_ingress_connections
      x-cfn-schema-name: VpcIngressConnection
      x-cfn-type-name: AWS::AppRunner::VpcIngressConnection
      x-identifiers:
        - VpcIngressConnectionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__VpcIngressConnection&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::VpcIngressConnection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::VpcIngressConnection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppRunner::VpcIngressConnection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/vpc_ingress_connections/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/vpc_ingress_connections/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/vpc_ingress_connections/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.VpcIngressConnectionArn') as vpc_ingress_connection_arn,
              JSON_EXTRACT(Properties, '$.VpcIngressConnectionName') as vpc_ingress_connection_name,
              JSON_EXTRACT(Properties, '$.ServiceArn') as service_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.IngressVpcConfiguration') as ingress_vpc_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
              AND data__Identifier = '<VpcIngressConnectionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.VpcIngressConnectionArn') as vpc_ingress_connection_arn,
                JSON_EXTRACT(detail.Properties, '$.VpcIngressConnectionName') as vpc_ingress_connection_name,
                JSON_EXTRACT(detail.Properties, '$.ServiceArn') as service_arn,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(detail.Properties, '$.IngressVpcConfiguration') as ingress_vpc_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                AND detail.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'VpcIngressConnectionArn') as vpc_ingress_connection_arn,
                  json_extract_path_text(Properties, 'VpcIngressConnectionName') as vpc_ingress_connection_name,
                  json_extract_path_text(Properties, 'ServiceArn') as service_arn,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'IngressVpcConfiguration') as ingress_vpc_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                  AND data__Identifier = '<VpcIngressConnectionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'VpcIngressConnectionArn') as vpc_ingress_connection_arn,
                    json_extract_path_text(detail.Properties, 'VpcIngressConnectionName') as vpc_ingress_connection_name,
                    json_extract_path_text(detail.Properties, 'ServiceArn') as service_arn,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                    json_extract_path_text(detail.Properties, 'IngressVpcConfiguration') as ingress_vpc_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                    AND detail.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                    AND listing.region = 'us-east-1'
    vpc_ingress_connections_list_only:
      name: vpc_ingress_connections_list_only
      id: aws.apprunner.vpc_ingress_connections_list_only
      x-cfn-schema-name: VpcIngressConnection
      x-cfn-type-name: AWS::AppRunner::VpcIngressConnection
      x-identifiers:
        - VpcIngressConnectionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.VpcIngressConnectionArn') as vpc_ingress_connection_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'VpcIngressConnectionArn') as vpc_ingress_connection_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                AND region = 'us-east-1'
    vpc_ingress_connection_tags:
      name: vpc_ingress_connection_tags
      id: aws.apprunner.vpc_ingress_connection_tags
      x-cfn-schema-name: VpcIngressConnection
      x-cfn-type-name: AWS::AppRunner::VpcIngressConnection
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.VpcIngressConnectionArn') as vpc_ingress_connection_arn,
              JSON_EXTRACT(detail.Properties, '$.VpcIngressConnectionName') as vpc_ingress_connection_name,
              JSON_EXTRACT(detail.Properties, '$.ServiceArn') as service_arn,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(detail.Properties, '$.IngressVpcConfiguration') as ingress_vpc_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
              AND detail.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'VpcIngressConnectionArn') as vpc_ingress_connection_arn,
                json_extract_path_text(detail.Properties, 'VpcIngressConnectionName') as vpc_ingress_connection_name,
                json_extract_path_text(detail.Properties, 'ServiceArn') as service_arn,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                json_extract_path_text(detail.Properties, 'IngressVpcConfiguration') as ingress_vpc_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                AND detail.data__TypeName = 'AWS::AppRunner::VpcIngressConnection'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AutoScalingConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAutoScalingConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAutoScalingConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ObservabilityConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateObservabilityConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateObservabilityConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Service&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateService
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateServiceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__VpcConnector&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateVpcConnector
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateVpcConnectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__VpcIngressConnection&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateVpcIngressConnection
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateVpcIngressConnectionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
