openapi: 3.0.0
info:
  title: GlobalAccelerator
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      description: Tag is a key-value pair associated with Cross Account Attachment.
      type: object
      properties:
        Key:
          description: Key of the tag. Value can be 1 to 127 characters.
          type: string
          minLength: 1
          maxLength: 127
        Value:
          description: Value for the tag. Value can be 1 to 255 characters.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - Value
        - Key
      additionalProperties: false
    IpAddress:
      pattern: ^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$
      description: An IPV4 address
      type: string
    Accelerator:
      type: object
      properties:
        Name:
          description: Name of accelerator.
          type: string
          pattern: ^[a-zA-Z0-9_-]{0,64}$
          minLength: 1
          maxLength: 64
        IpAddressType:
          description: IP Address type.
          type: string
          default: IPV4
          enum:
            - IPV4
            - DUAL_STACK
        IpAddresses:
          description: The IP addresses from BYOIP Prefix pool.
          default: null
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/IpAddress'
        Enabled:
          description: Indicates whether an accelerator is enabled. The value is true or false.
          default: true
          type: boolean
        DnsName:
          description: The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IPv4 addresses.
          type: string
        Ipv4Addresses:
          description: The IPv4 addresses assigned to the accelerator.
          x-insertionOrder: true
          type: array
          items:
            type: string
        Ipv6Addresses:
          description: The IPv6 addresses assigned if the accelerator is dualstack
          default: null
          x-insertionOrder: true
          type: array
          items:
            type: string
        DualStackDnsName:
          description: The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IPv4 and IPv6 addresses.
          type: string
        AcceleratorArn:
          description: The Amazon Resource Name (ARN) of the accelerator.
          type: string
        Tags:
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: accelerator
      description: Resource Type definition for AWS::GlobalAccelerator::Accelerator
      x-type-name: AWS::GlobalAccelerator::Accelerator
      x-stackql-primary-identifier:
        - AcceleratorArn
      x-read-only-properties:
        - AcceleratorArn
        - DnsName
        - Ipv4Addresses
        - Ipv6Addresses
        - DualStackDnsName
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - globalaccelerator:CreateAccelerator
          - globalaccelerator:DescribeAccelerator
          - globalaccelerator:TagResource
        read:
          - globalaccelerator:DescribeAccelerator
        update:
          - globalaccelerator:UpdateAccelerator
          - globalaccelerator:TagResource
          - globalaccelerator:UntagResource
          - globalaccelerator:DescribeAccelerator
        delete:
          - globalaccelerator:UpdateAccelerator
          - globalaccelerator:DeleteAccelerator
          - globalaccelerator:DescribeAccelerator
        list:
          - globalaccelerator:ListAccelerators
    Resource:
      description: ARN of resource to share.
      type: object
      properties:
        EndpointId:
          type: string
        Cidr:
          type: string
        Region:
          type: string
      additionalProperties: false
    CrossAccountAttachment:
      type: object
      properties:
        Name:
          description: The Friendly identifier of the attachment.
          type: string
          pattern: ^[a-zA-Z0-9_-]{0,64}$
          minLength: 1
          maxLength: 64
        AttachmentArn:
          description: The Amazon Resource Name (ARN) of the attachment.
          type: string
        Principals:
          description: Principals to share the resources with.
          type: array
          items:
            type: string
        Resources:
          description: Resources shared using the attachment.
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: cross_account_attachment
      description: Resource Type definition for AWS::GlobalAccelerator::CrossAccountAttachment
      x-type-name: AWS::GlobalAccelerator::CrossAccountAttachment
      x-stackql-primary-identifier:
        - AttachmentArn
      x-write-only-properties:
        - Resources/*/Region
      x-read-only-properties:
        - AttachmentArn
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - globalaccelerator:DescribeCrossAccountAttachment
          - globalaccelerator:CreateCrossAccountAttachment
          - globalaccelerator:TagResource
        read:
          - globalaccelerator:DescribeCrossAccountAttachment
        update:
          - globalaccelerator:UpdateCrossAccountAttachment
          - globalaccelerator:DescribeCrossAccountAttachment
          - globalaccelerator:TagResource
          - globalaccelerator:UntagResource
        delete:
          - globalaccelerator:DescribeCrossAccountAttachment
          - globalaccelerator:DeleteCrossAccountAttachment
        list:
          - globalaccelerator:ListCrossAccountAttachments
    EndpointConfiguration:
      description: The configuration for a given endpoint
      type: object
      properties:
        EndpointId:
          description: Id of the endpoint. For Network/Application Load Balancer this value is the ARN.  For EIP, this value is the allocation ID.  For EC2 instances, this is the EC2 instance ID
          type: string
        AttachmentArn:
          description: Attachment ARN that provides access control to the cross account endpoint. Not required for resources hosted in the same account as the endpoint group.
          type: string
        Weight:
          description: The weight for the endpoint.
          type: integer
          minimum: 0
          maximum: 255
          default: 100
        ClientIPPreservationEnabled:
          description: true if client ip should be preserved
          type: boolean
          default: true
      required:
        - EndpointId
      additionalProperties: false
    Port:
      description: A network port number
      type: integer
      minimum: 0
      maximum: 65535
    PortOverride:
      description: listener to endpoint port mapping.
      type: object
      properties:
        ListenerPort:
          $ref: '#/components/schemas/Port'
        EndpointPort:
          $ref: '#/components/schemas/Port'
      required:
        - ListenerPort
        - EndpointPort
      additionalProperties: false
    EndpointGroup:
      type: object
      properties:
        ListenerArn:
          description: The Amazon Resource Name (ARN) of the listener
          type: string
        EndpointGroupRegion:
          description: The name of the AWS Region where the endpoint group is located
          type: string
        EndpointConfigurations:
          description: The list of endpoint objects.
          type: array
          items:
            $ref: '#/components/schemas/EndpointConfiguration'
        TrafficDialPercentage:
          description: The percentage of traffic to sent to an AWS Region
          type: number
          minimum: 0
          maximum: 100
          default: 100
        HealthCheckPort:
          description: The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
          type: integer
          minimum: -1
          maximum: 65535
          default: -1
        HealthCheckProtocol:
          description: The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
          type: string
          default: TCP
          enum:
            - TCP
            - HTTP
            - HTTPS
        HealthCheckPath:
          description: ''
          type: string
          default: /
        HealthCheckIntervalSeconds:
          description: The time in seconds between each health check for an endpoint. Must be a value of 10 or 30
          type: integer
          default: 30
        ThresholdCount:
          description: The number of consecutive health checks required to set the state of the endpoint to unhealthy.
          type: integer
          default: 3
        EndpointGroupArn:
          description: The Amazon Resource Name (ARN) of the endpoint group
          type: string
        PortOverrides:
          type: array
          items:
            $ref: '#/components/schemas/PortOverride'
      required:
        - ListenerArn
        - EndpointGroupRegion
      x-stackql-resource-name: endpoint_group
      description: Resource Type definition for AWS::GlobalAccelerator::EndpointGroup
      x-type-name: AWS::GlobalAccelerator::EndpointGroup
      x-stackql-primary-identifier:
        - EndpointGroupArn
      x-create-only-properties:
        - EndpointGroupRegion
        - ListenerArn
      x-write-only-properties:
        - EndpointConfigurations/*/AttachmentArn
      x-read-only-properties:
        - EndpointGroupArn
      x-required-properties:
        - ListenerArn
        - EndpointGroupRegion
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - globalaccelerator:CreateEndpointGroup
          - globalaccelerator:DescribeEndpointGroup
          - globalaccelerator:DescribeAccelerator
          - globalaccelerator:DescribeListener
          - globalaccelerator:ListAccelerators
          - globalaccelerator:ListListeners
        read:
          - globalaccelerator:DescribeEndpointGroup
        update:
          - globalaccelerator:UpdateEndpointGroup
          - globalaccelerator:DescribeEndpointGroup
          - globalaccelerator:DescribeListener
          - globalaccelerator:DescribeAccelerator
        delete:
          - globalaccelerator:DeleteEndpointGroup
          - globalaccelerator:DescribeEndpointGroup
          - globalaccelerator:DescribeAccelerator
        list:
          - globalaccelerator:ListEndpointGroups
    PortRange:
      description: A port range to support for connections from  clients to your accelerator.
      type: object
      properties:
        FromPort:
          $ref: '#/components/schemas/Port'
        ToPort:
          $ref: '#/components/schemas/Port'
      required:
        - FromPort
        - ToPort
      additionalProperties: false
    Listener:
      type: object
      properties:
        ListenerArn:
          description: The Amazon Resource Name (ARN) of the listener.
          type: string
        AcceleratorArn:
          description: The Amazon Resource Name (ARN) of the accelerator.
          type: string
        PortRanges:
          type: array
          items:
            $ref: '#/components/schemas/PortRange'
        Protocol:
          description: The protocol for the listener.
          type: string
          default: TCP
          enum:
            - TCP
            - UDP
        ClientAffinity:
          description: Client affinity lets you direct all requests from a user to the same endpoint.
          type: string
          default: NONE
          enum:
            - NONE
            - SOURCE_IP
      required:
        - AcceleratorArn
        - PortRanges
        - Protocol
      x-stackql-resource-name: listener
      description: Resource Type definition for AWS::GlobalAccelerator::Listener
      x-type-name: AWS::GlobalAccelerator::Listener
      x-stackql-primary-identifier:
        - ListenerArn
      x-create-only-properties:
        - AcceleratorArn
      x-read-only-properties:
        - ListenerArn
      x-required-properties:
        - AcceleratorArn
        - PortRanges
        - Protocol
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - globalaccelerator:CreateListener
          - globalaccelerator:DescribeListener
          - globalaccelerator:DescribeAccelerator
        read:
          - globalaccelerator:DescribeListener
        update:
          - globalaccelerator:UpdateListener
          - globalaccelerator:DescribeListener
          - globalaccelerator:DescribeAccelerator
        delete:
          - globalaccelerator:DescribeListener
          - globalaccelerator:DeleteListener
          - globalaccelerator:DescribeAccelerator
        list:
          - globalaccelerator:ListListeners
    CreateAcceleratorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Name of accelerator.
              type: string
              pattern: ^[a-zA-Z0-9_-]{0,64}$
              minLength: 1
              maxLength: 64
            IpAddressType:
              description: IP Address type.
              type: string
              default: IPV4
              enum:
                - IPV4
                - DUAL_STACK
            IpAddresses:
              description: The IP addresses from BYOIP Prefix pool.
              default: null
              x-insertionOrder: true
              type: array
              items:
                $ref: '#/components/schemas/IpAddress'
            Enabled:
              description: Indicates whether an accelerator is enabled. The value is true or false.
              default: true
              type: boolean
            DnsName:
              description: The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IPv4 addresses.
              type: string
            Ipv4Addresses:
              description: The IPv4 addresses assigned to the accelerator.
              x-insertionOrder: true
              type: array
              items:
                type: string
            Ipv6Addresses:
              description: The IPv6 addresses assigned if the accelerator is dualstack
              default: null
              x-insertionOrder: true
              type: array
              items:
                type: string
            DualStackDnsName:
              description: The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IPv4 and IPv6 addresses.
              type: string
            AcceleratorArn:
              description: The Amazon Resource Name (ARN) of the accelerator.
              type: string
            Tags:
              x-insertionOrder: true
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateAcceleratorRequest
      type: object
      required: []
    CreateCrossAccountAttachmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The Friendly identifier of the attachment.
              type: string
              pattern: ^[a-zA-Z0-9_-]{0,64}$
              minLength: 1
              maxLength: 64
            AttachmentArn:
              description: The Amazon Resource Name (ARN) of the attachment.
              type: string
            Principals:
              description: Principals to share the resources with.
              type: array
              items:
                type: string
            Resources:
              description: Resources shared using the attachment.
              type: array
              items:
                $ref: '#/components/schemas/Resource'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateCrossAccountAttachmentRequest
      type: object
      required: []
    CreateEndpointGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ListenerArn:
              description: The Amazon Resource Name (ARN) of the listener
              type: string
            EndpointGroupRegion:
              description: The name of the AWS Region where the endpoint group is located
              type: string
            EndpointConfigurations:
              description: The list of endpoint objects.
              type: array
              items:
                $ref: '#/components/schemas/EndpointConfiguration'
            TrafficDialPercentage:
              description: The percentage of traffic to sent to an AWS Region
              type: number
              minimum: 0
              maximum: 100
              default: 100
            HealthCheckPort:
              description: The port that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
              type: integer
              minimum: -1
              maximum: 65535
              default: -1
            HealthCheckProtocol:
              description: The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
              type: string
              default: TCP
              enum:
                - TCP
                - HTTP
                - HTTPS
            HealthCheckPath:
              description: ''
              type: string
              default: /
            HealthCheckIntervalSeconds:
              description: The time in seconds between each health check for an endpoint. Must be a value of 10 or 30
              type: integer
              default: 30
            ThresholdCount:
              description: The number of consecutive health checks required to set the state of the endpoint to unhealthy.
              type: integer
              default: 3
            EndpointGroupArn:
              description: The Amazon Resource Name (ARN) of the endpoint group
              type: string
            PortOverrides:
              type: array
              items:
                $ref: '#/components/schemas/PortOverride'
          x-stackQL-stringOnly: true
      x-title: CreateEndpointGroupRequest
      type: object
      required: []
    CreateListenerRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ListenerArn:
              description: The Amazon Resource Name (ARN) of the listener.
              type: string
            AcceleratorArn:
              description: The Amazon Resource Name (ARN) of the accelerator.
              type: string
            PortRanges:
              type: array
              items:
                $ref: '#/components/schemas/PortRange'
            Protocol:
              description: The protocol for the listener.
              type: string
              default: TCP
              enum:
                - TCP
                - UDP
            ClientAffinity:
              description: Client affinity lets you direct all requests from a user to the same endpoint.
              type: string
              default: NONE
              enum:
                - NONE
                - SOURCE_IP
          x-stackQL-stringOnly: true
      x-title: CreateListenerRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    accelerators:
      name: accelerators
      id: aws.globalaccelerator.accelerators
      x-cfn-schema-name: Accelerator
      x-cfn-type-name: AWS::GlobalAccelerator::Accelerator
      x-identifiers:
        - AcceleratorArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Accelerator&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::Accelerator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::Accelerator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::Accelerator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/accelerators/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/accelerators/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/accelerators/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.IpAddressType') as ip_address_type,
              JSON_EXTRACT(Properties, '$.IpAddresses') as ip_addresses,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.DnsName') as dns_name,
              JSON_EXTRACT(Properties, '$.Ipv4Addresses') as ipv4_addresses,
              JSON_EXTRACT(Properties, '$.Ipv6Addresses') as ipv6_addresses,
              JSON_EXTRACT(Properties, '$.DualStackDnsName') as dual_stack_dns_name,
              JSON_EXTRACT(Properties, '$.AcceleratorArn') as accelerator_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
              AND data__Identifier = '<AcceleratorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.IpAddressType') as ip_address_type,
                JSON_EXTRACT(detail.Properties, '$.IpAddresses') as ip_addresses,
                JSON_EXTRACT(detail.Properties, '$.Enabled') as enabled,
                JSON_EXTRACT(detail.Properties, '$.DnsName') as dns_name,
                JSON_EXTRACT(detail.Properties, '$.Ipv4Addresses') as ipv4_addresses,
                JSON_EXTRACT(detail.Properties, '$.Ipv6Addresses') as ipv6_addresses,
                JSON_EXTRACT(detail.Properties, '$.DualStackDnsName') as dual_stack_dns_name,
                JSON_EXTRACT(detail.Properties, '$.AcceleratorArn') as accelerator_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                AND detail.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'IpAddressType') as ip_address_type,
                  json_extract_path_text(Properties, 'IpAddresses') as ip_addresses,
                  json_extract_path_text(Properties, 'Enabled') as enabled,
                  json_extract_path_text(Properties, 'DnsName') as dns_name,
                  json_extract_path_text(Properties, 'Ipv4Addresses') as ipv4_addresses,
                  json_extract_path_text(Properties, 'Ipv6Addresses') as ipv6_addresses,
                  json_extract_path_text(Properties, 'DualStackDnsName') as dual_stack_dns_name,
                  json_extract_path_text(Properties, 'AcceleratorArn') as accelerator_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                  AND data__Identifier = '<AcceleratorArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'IpAddressType') as ip_address_type,
                    json_extract_path_text(detail.Properties, 'IpAddresses') as ip_addresses,
                    json_extract_path_text(detail.Properties, 'Enabled') as enabled,
                    json_extract_path_text(detail.Properties, 'DnsName') as dns_name,
                    json_extract_path_text(detail.Properties, 'Ipv4Addresses') as ipv4_addresses,
                    json_extract_path_text(detail.Properties, 'Ipv6Addresses') as ipv6_addresses,
                    json_extract_path_text(detail.Properties, 'DualStackDnsName') as dual_stack_dns_name,
                    json_extract_path_text(detail.Properties, 'AcceleratorArn') as accelerator_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                    AND detail.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                    AND listing.region = 'us-east-1'
    accelerators_list_only:
      name: accelerators_list_only
      id: aws.globalaccelerator.accelerators_list_only
      x-cfn-schema-name: Accelerator
      x-cfn-type-name: AWS::GlobalAccelerator::Accelerator
      x-identifiers:
        - AcceleratorArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AcceleratorArn') as accelerator_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AcceleratorArn') as accelerator_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                AND region = 'us-east-1'
    accelerator_tags:
      name: accelerator_tags
      id: aws.globalaccelerator.accelerator_tags
      x-cfn-schema-name: Accelerator
      x-cfn-type-name: AWS::GlobalAccelerator::Accelerator
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.IpAddressType') as ip_address_type,
              JSON_EXTRACT(detail.Properties, '$.IpAddresses') as ip_addresses,
              JSON_EXTRACT(detail.Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(detail.Properties, '$.DnsName') as dns_name,
              JSON_EXTRACT(detail.Properties, '$.Ipv4Addresses') as ipv4_addresses,
              JSON_EXTRACT(detail.Properties, '$.Ipv6Addresses') as ipv6_addresses,
              JSON_EXTRACT(detail.Properties, '$.DualStackDnsName') as dual_stack_dns_name,
              JSON_EXTRACT(detail.Properties, '$.AcceleratorArn') as accelerator_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
              AND detail.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'IpAddressType') as ip_address_type,
                json_extract_path_text(detail.Properties, 'IpAddresses') as ip_addresses,
                json_extract_path_text(detail.Properties, 'Enabled') as enabled,
                json_extract_path_text(detail.Properties, 'DnsName') as dns_name,
                json_extract_path_text(detail.Properties, 'Ipv4Addresses') as ipv4_addresses,
                json_extract_path_text(detail.Properties, 'Ipv6Addresses') as ipv6_addresses,
                json_extract_path_text(detail.Properties, 'DualStackDnsName') as dual_stack_dns_name,
                json_extract_path_text(detail.Properties, 'AcceleratorArn') as accelerator_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                AND detail.data__TypeName = 'AWS::GlobalAccelerator::Accelerator'
                AND listing.region = 'us-east-1'
    cross_account_attachments:
      name: cross_account_attachments
      id: aws.globalaccelerator.cross_account_attachments
      x-cfn-schema-name: CrossAccountAttachment
      x-cfn-type-name: AWS::GlobalAccelerator::CrossAccountAttachment
      x-identifiers:
        - AttachmentArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CrossAccountAttachment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::CrossAccountAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::CrossAccountAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::CrossAccountAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/cross_account_attachments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/cross_account_attachments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/cross_account_attachments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AttachmentArn') as attachment_arn,
              JSON_EXTRACT(Properties, '$.Principals') as principals,
              JSON_EXTRACT(Properties, '$.Resources') as resources,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
              AND data__Identifier = '<AttachmentArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.AttachmentArn') as attachment_arn,
                JSON_EXTRACT(detail.Properties, '$.Principals') as principals,
                JSON_EXTRACT(detail.Properties, '$.Resources') as resources,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                AND detail.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'AttachmentArn') as attachment_arn,
                  json_extract_path_text(Properties, 'Principals') as principals,
                  json_extract_path_text(Properties, 'Resources') as resources,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                  AND data__Identifier = '<AttachmentArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'AttachmentArn') as attachment_arn,
                    json_extract_path_text(detail.Properties, 'Principals') as principals,
                    json_extract_path_text(detail.Properties, 'Resources') as resources,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                    AND detail.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                    AND listing.region = 'us-east-1'
    cross_account_attachments_list_only:
      name: cross_account_attachments_list_only
      id: aws.globalaccelerator.cross_account_attachments_list_only
      x-cfn-schema-name: CrossAccountAttachment
      x-cfn-type-name: AWS::GlobalAccelerator::CrossAccountAttachment
      x-identifiers:
        - AttachmentArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentArn') as attachment_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AttachmentArn') as attachment_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                AND region = 'us-east-1'
    cross_account_attachment_tags:
      name: cross_account_attachment_tags
      id: aws.globalaccelerator.cross_account_attachment_tags
      x-cfn-schema-name: CrossAccountAttachment
      x-cfn-type-name: AWS::GlobalAccelerator::CrossAccountAttachment
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.AttachmentArn') as attachment_arn,
              JSON_EXTRACT(detail.Properties, '$.Principals') as principals,
              JSON_EXTRACT(detail.Properties, '$.Resources') as resources
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
              AND detail.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'AttachmentArn') as attachment_arn,
                json_extract_path_text(detail.Properties, 'Principals') as principals,
                json_extract_path_text(detail.Properties, 'Resources') as resources
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                AND detail.data__TypeName = 'AWS::GlobalAccelerator::CrossAccountAttachment'
                AND listing.region = 'us-east-1'
    endpoint_groups:
      name: endpoint_groups
      id: aws.globalaccelerator.endpoint_groups
      x-cfn-schema-name: EndpointGroup
      x-cfn-type-name: AWS::GlobalAccelerator::EndpointGroup
      x-identifiers:
        - EndpointGroupArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EndpointGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::EndpointGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::EndpointGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::EndpointGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoint_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoint_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoint_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ListenerArn') as listener_arn,
              JSON_EXTRACT(Properties, '$.EndpointGroupRegion') as endpoint_group_region,
              JSON_EXTRACT(Properties, '$.EndpointConfigurations') as endpoint_configurations,
              JSON_EXTRACT(Properties, '$.TrafficDialPercentage') as traffic_dial_percentage,
              JSON_EXTRACT(Properties, '$.HealthCheckPort') as health_check_port,
              JSON_EXTRACT(Properties, '$.HealthCheckProtocol') as health_check_protocol,
              JSON_EXTRACT(Properties, '$.HealthCheckPath') as health_check_path,
              JSON_EXTRACT(Properties, '$.HealthCheckIntervalSeconds') as health_check_interval_seconds,
              JSON_EXTRACT(Properties, '$.ThresholdCount') as threshold_count,
              JSON_EXTRACT(Properties, '$.EndpointGroupArn') as endpoint_group_arn,
              JSON_EXTRACT(Properties, '$.PortOverrides') as port_overrides
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
              AND data__Identifier = '<EndpointGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ListenerArn') as listener_arn,
                JSON_EXTRACT(detail.Properties, '$.EndpointGroupRegion') as endpoint_group_region,
                JSON_EXTRACT(detail.Properties, '$.EndpointConfigurations') as endpoint_configurations,
                JSON_EXTRACT(detail.Properties, '$.TrafficDialPercentage') as traffic_dial_percentage,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckPort') as health_check_port,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckProtocol') as health_check_protocol,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckPath') as health_check_path,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckIntervalSeconds') as health_check_interval_seconds,
                JSON_EXTRACT(detail.Properties, '$.ThresholdCount') as threshold_count,
                JSON_EXTRACT(detail.Properties, '$.EndpointGroupArn') as endpoint_group_arn,
                JSON_EXTRACT(detail.Properties, '$.PortOverrides') as port_overrides
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                AND detail.data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ListenerArn') as listener_arn,
                  json_extract_path_text(Properties, 'EndpointGroupRegion') as endpoint_group_region,
                  json_extract_path_text(Properties, 'EndpointConfigurations') as endpoint_configurations,
                  json_extract_path_text(Properties, 'TrafficDialPercentage') as traffic_dial_percentage,
                  json_extract_path_text(Properties, 'HealthCheckPort') as health_check_port,
                  json_extract_path_text(Properties, 'HealthCheckProtocol') as health_check_protocol,
                  json_extract_path_text(Properties, 'HealthCheckPath') as health_check_path,
                  json_extract_path_text(Properties, 'HealthCheckIntervalSeconds') as health_check_interval_seconds,
                  json_extract_path_text(Properties, 'ThresholdCount') as threshold_count,
                  json_extract_path_text(Properties, 'EndpointGroupArn') as endpoint_group_arn,
                  json_extract_path_text(Properties, 'PortOverrides') as port_overrides
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                  AND data__Identifier = '<EndpointGroupArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ListenerArn') as listener_arn,
                    json_extract_path_text(detail.Properties, 'EndpointGroupRegion') as endpoint_group_region,
                    json_extract_path_text(detail.Properties, 'EndpointConfigurations') as endpoint_configurations,
                    json_extract_path_text(detail.Properties, 'TrafficDialPercentage') as traffic_dial_percentage,
                    json_extract_path_text(detail.Properties, 'HealthCheckPort') as health_check_port,
                    json_extract_path_text(detail.Properties, 'HealthCheckProtocol') as health_check_protocol,
                    json_extract_path_text(detail.Properties, 'HealthCheckPath') as health_check_path,
                    json_extract_path_text(detail.Properties, 'HealthCheckIntervalSeconds') as health_check_interval_seconds,
                    json_extract_path_text(detail.Properties, 'ThresholdCount') as threshold_count,
                    json_extract_path_text(detail.Properties, 'EndpointGroupArn') as endpoint_group_arn,
                    json_extract_path_text(detail.Properties, 'PortOverrides') as port_overrides
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                    AND detail.data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                    AND listing.region = 'us-east-1'
    endpoint_groups_list_only:
      name: endpoint_groups_list_only
      id: aws.globalaccelerator.endpoint_groups_list_only
      x-cfn-schema-name: EndpointGroup
      x-cfn-type-name: AWS::GlobalAccelerator::EndpointGroup
      x-identifiers:
        - EndpointGroupArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EndpointGroupArn') as endpoint_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EndpointGroupArn') as endpoint_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::EndpointGroup'
                AND region = 'us-east-1'
    listeners:
      name: listeners
      id: aws.globalaccelerator.listeners
      x-cfn-schema-name: Listener
      x-cfn-type-name: AWS::GlobalAccelerator::Listener
      x-identifiers:
        - ListenerArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Listener&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::Listener"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::Listener"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GlobalAccelerator::Listener"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/listeners/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/listeners/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/listeners/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ListenerArn') as listener_arn,
              JSON_EXTRACT(Properties, '$.AcceleratorArn') as accelerator_arn,
              JSON_EXTRACT(Properties, '$.PortRanges') as port_ranges,
              JSON_EXTRACT(Properties, '$.Protocol') as protocol,
              JSON_EXTRACT(Properties, '$.ClientAffinity') as client_affinity
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
              AND data__Identifier = '<ListenerArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ListenerArn') as listener_arn,
                JSON_EXTRACT(detail.Properties, '$.AcceleratorArn') as accelerator_arn,
                JSON_EXTRACT(detail.Properties, '$.PortRanges') as port_ranges,
                JSON_EXTRACT(detail.Properties, '$.Protocol') as protocol,
                JSON_EXTRACT(detail.Properties, '$.ClientAffinity') as client_affinity
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::Listener'
                AND detail.data__TypeName = 'AWS::GlobalAccelerator::Listener'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ListenerArn') as listener_arn,
                  json_extract_path_text(Properties, 'AcceleratorArn') as accelerator_arn,
                  json_extract_path_text(Properties, 'PortRanges') as port_ranges,
                  json_extract_path_text(Properties, 'Protocol') as protocol,
                  json_extract_path_text(Properties, 'ClientAffinity') as client_affinity
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
                  AND data__Identifier = '<ListenerArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ListenerArn') as listener_arn,
                    json_extract_path_text(detail.Properties, 'AcceleratorArn') as accelerator_arn,
                    json_extract_path_text(detail.Properties, 'PortRanges') as port_ranges,
                    json_extract_path_text(detail.Properties, 'Protocol') as protocol,
                    json_extract_path_text(detail.Properties, 'ClientAffinity') as client_affinity
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GlobalAccelerator::Listener'
                    AND detail.data__TypeName = 'AWS::GlobalAccelerator::Listener'
                    AND listing.region = 'us-east-1'
    listeners_list_only:
      name: listeners_list_only
      id: aws.globalaccelerator.listeners_list_only
      x-cfn-schema-name: Listener
      x-cfn-type-name: AWS::GlobalAccelerator::Listener
      x-identifiers:
        - ListenerArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ListenerArn') as listener_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ListenerArn') as listener_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GlobalAccelerator::Listener'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Accelerator&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAccelerator
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAcceleratorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CrossAccountAttachment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCrossAccountAttachment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCrossAccountAttachmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EndpointGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEndpointGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEndpointGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Listener&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateListener
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateListenerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
