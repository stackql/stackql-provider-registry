openapi: 3.0.0
info:
  title: MediaConvert
  version: 1.0.0
paths: {}
components:
  schemas:
    AccelerationSettings:
      type: object
      additionalProperties: false
      properties:
        Mode:
          type: string
      required:
        - Mode
    HopDestination:
      type: object
      additionalProperties: false
      properties:
        WaitMinutes:
          type: integer
        Queue:
          type: string
        Priority:
          type: integer
    JobTemplate:
      type: object
      properties:
        Category:
          type: string
        Description:
          type: string
        AccelerationSettings:
          $ref: '#/components/schemas/AccelerationSettings'
        Priority:
          type: integer
        StatusUpdateInterval:
          type: string
        SettingsJson:
          type: object
        Id:
          type: string
        Arn:
          type: string
        Queue:
          type: string
        HopDestinations:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/HopDestination'
        Tags:
          type: object
        Name:
          type: string
      required:
        - SettingsJson
      x-stackql-resource-name: job_template
      x-stackql-primaryIdentifier:
        - Id
    Preset:
      type: object
      properties:
        Category:
          type: string
        Description:
          type: string
        SettingsJson:
          type: object
        Id:
          type: string
        Arn:
          type: string
        Tags:
          type: object
        Name:
          type: string
      required:
        - SettingsJson
      x-stackql-resource-name: preset
      x-stackql-primaryIdentifier:
        - Id
    Queue:
      type: object
      properties:
        Status:
          type: string
        Description:
          type: string
        PricingPlan:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Tags:
          type: object
        Name:
          type: string
      x-stackql-resource-name: queue
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    job_templates:
      name: job_templates
      id: aws.mediaconvert.job_templates
      x-cfn-schema-name: JobTemplate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaConvert::JobTemplate'
    job_template:
      name: job_template
      id: aws.mediaconvert.job_template
      x-cfn-schema-name: JobTemplate
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Category') as category,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AccelerationSettings.Mode') as acceleration_settings_mode,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.StatusUpdateInterval') as status_update_interval,
              JSON_EXTRACT(Properties, '$.SettingsJson') as settings_json,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Queue') as queue,
              JSON_EXTRACT(Properties, '$.HopDestinations') as hop_destinations,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MediaConvert::JobTemplate'
    presets:
      name: presets
      id: aws.mediaconvert.presets
      x-cfn-schema-name: Preset
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaConvert::Preset'
    preset:
      name: preset
      id: aws.mediaconvert.preset
      x-cfn-schema-name: Preset
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Category') as category,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SettingsJson') as settings_json,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MediaConvert::Preset'
    queues:
      name: queues
      id: aws.mediaconvert.queues
      x-cfn-schema-name: Queue
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaConvert::Queue'
    queue:
      name: queue
      id: aws.mediaconvert.queue
      x-cfn-schema-name: Queue
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.PricingPlan') as pricing_plan,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MediaConvert::Queue'
