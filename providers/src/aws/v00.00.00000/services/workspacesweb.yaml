openapi: 3.0.0
info:
  title: WorkSpacesWeb
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    EncryptionContextMap:
      type: object
      x-patternProperties:
        ^[\s\S]*$:
          type: string
          maxLength: 131072
          minLength: 0
          pattern: ^[\s\S]*$
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
        Value:
          type: string
          maxLength: 256
          minLength: 0
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      required:
        - Key
        - Value
      additionalProperties: false
    BrowserSettings:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        BrowserPolicy:
          type: string
          maxLength: 131072
          minLength: 2
          pattern: \{[\S\s]*\}\s*
        BrowserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
      x-stackql-resource-name: browser_settings
      description: Definition of AWS::WorkSpacesWeb::BrowserSettings Resource Type
      x-type-name: AWS::WorkSpacesWeb::BrowserSettings
      x-stackql-primary-identifier:
        - BrowserSettingsArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - AssociatedPortalArns
        - BrowserSettingsArn
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateBrowserSettings
          - workspaces-web:GetBrowserSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
          - kms:GenerateDataKeyWithoutPlaintext
          - kms:ReEncryptTo
          - kms:ReEncryptFrom
        read:
          - workspaces-web:GetBrowserSettings
          - workspaces-web:ListBrowserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        update:
          - workspaces-web:UpdateBrowserSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetBrowserSettings
          - workspaces-web:ListBrowserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - workspaces-web:GetBrowserSettings
          - workspaces-web:DeleteBrowserSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - workspaces-web:ListBrowserSettings
    CustomPattern:
      type: object
      properties:
        PatternName:
          type: string
          maxLength: 20
          minLength: 1
          pattern: ^[_\-\d\w]+$
        PatternRegex:
          type: string
          maxLength: 300
          minLength: 0
          pattern: ^\/((?:[^\n])+)\/([gimsuyvd]{0,8})$
        PatternDescription:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[ _\-\d\w]+$
        KeywordRegex:
          type: string
          maxLength: 300
          minLength: 0
          pattern: ^\/((?:[^\n])+)\/([gimsuyvd]{0,8})$
      required:
        - PatternName
        - PatternRegex
      additionalProperties: false
    InlineRedactionConfiguration:
      type: object
      properties:
        InlineRedactionPatterns:
          type: array
          items:
            $ref: '#/components/schemas/InlineRedactionPattern'
          maxItems: 150
          minItems: 0
        GlobalEnforcedUrls:
          type: array
          items:
            type: string
            pattern: ^((([a-zA-Z][a-zA-Z0-9+.-]*):\/\/(\*|[\w%._\-\+~#=@]+)?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?)|(\*|[\w%._\-\+~#=@]+\.[\w%._\-\+~#=@]+)(?::(\d{1,5}))?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?|(([a-zA-Z][a-zA-Z0-9+.-]*):(\/\/)?\*))$
          maxItems: 100
          minItems: 1
        GlobalExemptUrls:
          type: array
          items:
            type: string
            pattern: ^((([a-zA-Z][a-zA-Z0-9+.-]*):\/\/(\*|[\w%._\-\+~#=@]+)?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?)|(\*|[\w%._\-\+~#=@]+\.[\w%._\-\+~#=@]+)(?::(\d{1,5}))?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?|(([a-zA-Z][a-zA-Z0-9+.-]*):(\/\/)?\*))$
          maxItems: 100
          minItems: 1
        GlobalConfidenceLevel:
          type: number
          maximum: 3
          minimum: 1
      required:
        - InlineRedactionPatterns
      additionalProperties: false
    InlineRedactionPattern:
      type: object
      properties:
        BuiltInPatternId:
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[_\-\d\w]+$
        CustomPattern:
          $ref: '#/components/schemas/CustomPattern'
        RedactionPlaceHolder:
          $ref: '#/components/schemas/RedactionPlaceHolder'
        EnforcedUrls:
          type: array
          items:
            type: string
            pattern: ^((([a-zA-Z][a-zA-Z0-9+.-]*):\/\/(\*|[\w%._\-\+~#=@]+)?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?)|(\*|[\w%._\-\+~#=@]+\.[\w%._\-\+~#=@]+)(?::(\d{1,5}))?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?|(([a-zA-Z][a-zA-Z0-9+.-]*):(\/\/)?\*))$
          maxItems: 20
          minItems: 1
        ExemptUrls:
          type: array
          items:
            type: string
            pattern: ^((([a-zA-Z][a-zA-Z0-9+.-]*):\/\/(\*|[\w%._\-\+~#=@]+)?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?)|(\*|[\w%._\-\+~#=@]+\.[\w%._\-\+~#=@]+)(?::(\d{1,5}))?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?|(([a-zA-Z][a-zA-Z0-9+.-]*):(\/\/)?\*))$
          maxItems: 20
          minItems: 1
        ConfidenceLevel:
          type: number
          maximum: 3
          minimum: 1
      required:
        - RedactionPlaceHolder
      additionalProperties: false
    RedactionPlaceHolder:
      type: object
      properties:
        RedactionPlaceHolderType:
          $ref: '#/components/schemas/RedactionPlaceHolderType'
        RedactionPlaceHolderText:
          type: string
          maxLength: 20
          minLength: 1
          pattern: ^[*_\-\d\w]+$
      required:
        - RedactionPlaceHolderType
      additionalProperties: false
    RedactionPlaceHolderType:
      type: string
      enum:
        - CustomText
    DataProtectionSettings:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        CreationDate:
          type: string
          format: date-time
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        DataProtectionSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        Description:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[ _\-\d\w]+$
        DisplayName:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[ _\-\d\w]+$
        InlineRedactionConfiguration:
          $ref: '#/components/schemas/InlineRedactionConfiguration'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
      x-stackql-resource-name: data_protection_settings
      description: Definition of AWS::WorkSpacesWeb::DataProtectionSettings Resource Type
      x-type-name: AWS::WorkSpacesWeb::DataProtectionSettings
      x-stackql-primary-identifier:
        - DataProtectionSettingsArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - AssociatedPortalArns
        - CreationDate
        - DataProtectionSettingsArn
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateDataProtectionSettings
          - workspaces-web:GetDataProtectionSettings
          - workspaces-web:ListDataProtectionSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
          - kms:GenerateDataKeyWithoutPlaintext
          - kms:ReEncryptTo
          - kms:ReEncryptFrom
        read:
          - workspaces-web:GetDataProtectionSettings
          - workspaces-web:ListDataProtectionSettings
          - workspaces-web:ListTagsForResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        update:
          - workspaces-web:UpdateDataProtectionSettings
          - workspaces-web:GetDataProtectionSettings
          - workspaces-web:ListDataProtectionSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - workspaces-web:GetDataProtectionSettings
          - workspaces-web:ListDataProtectionSettings
          - workspaces-web:DeleteDataProtectionSettings
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - workspaces-web:ListDataProtectionSettings
          - kms:Decrypt
          - kms:DescribeKey
    IdentityProviderDetails:
      type: object
      x-patternProperties:
        ^[\s\S]*$:
          type: string
          maxLength: 131072
          minLength: 0
          pattern: ^[\s\S]*$
      additionalProperties: false
    IdentityProviderType:
      type: string
      enum:
        - SAML
        - Facebook
        - Google
        - LoginWithAmazon
        - SignInWithApple
        - OIDC
    IdentityProvider:
      type: object
      properties:
        IdentityProviderArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36}){2,}$
        IdentityProviderDetails:
          $ref: '#/components/schemas/IdentityProviderDetails'
        IdentityProviderName:
          type: string
          maxLength: 32
          minLength: 1
          pattern: ^[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+$
        IdentityProviderType:
          $ref: '#/components/schemas/IdentityProviderType'
        PortalArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
      required:
        - IdentityProviderDetails
        - IdentityProviderName
        - IdentityProviderType
      x-stackql-resource-name: identity_provider
      description: Definition of AWS::WorkSpacesWeb::IdentityProvider Resource Type
      x-type-name: AWS::WorkSpacesWeb::IdentityProvider
      x-stackql-primary-identifier:
        - IdentityProviderArn
      x-create-only-properties:
        - PortalArn
      x-write-only-properties:
        - PortalArn
      x-read-only-properties:
        - IdentityProviderArn
      x-required-properties:
        - IdentityProviderDetails
        - IdentityProviderName
        - IdentityProviderType
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateIdentityProvider
          - workspaces-web:GetIdentityProvider
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetIdentityProvider
          - workspaces-web:ListIdentityProviders
          - workspaces-web:ListTagsForResource
        update:
          - workspaces-web:UpdateIdentityProvider
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetIdentityProvider
          - workspaces-web:ListIdentityProviders
          - workspaces-web:ListTagsForResource
        delete:
          - workspaces-web:GetIdentityProvider
          - workspaces-web:DeleteIdentityProvider
        list:
          - workspaces-web:ListIdentityProviders
    IpRule:
      type: object
      properties:
        IpRange:
          type: string
          pattern: ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:/([0-9]|[12][0-9]|3[0-2])|)$
          description: A single IP address or an IP address range in CIDR notation
        Description:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^.+$
      required:
        - IpRange
      additionalProperties: false
    IpAccessSettings:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        CreationDate:
          type: string
          format: date-time
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        Description:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^.+$
        DisplayName:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^.+$
        IpAccessSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        IpRules:
          type: array
          items:
            $ref: '#/components/schemas/IpRule'
          maxItems: 100
          minItems: 1
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
      required:
        - IpRules
      x-stackql-resource-name: ip_access_settings
      description: Definition of AWS::WorkSpacesWeb::IpAccessSettings Resource Type
      x-type-name: AWS::WorkSpacesWeb::IpAccessSettings
      x-stackql-primary-identifier:
        - IpAccessSettingsArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - AssociatedPortalArns
        - CreationDate
        - IpAccessSettingsArn
      x-required-properties:
        - IpRules
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateIpAccessSettings
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
          - kms:GenerateDataKeyWithoutPlaintext
          - kms:ReEncryptTo
          - kms:ReEncryptFrom
        read:
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        update:
          - workspaces-web:UpdateIpAccessSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - workspaces-web:GetIpAccessSettings
          - workspaces-web:ListIpAccessSettings
          - workspaces-web:DeleteIpAccessSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - workspaces-web:ListIpAccessSettings
    NetworkSettings:
      type: object
      properties:
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        NetworkSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        SecurityGroupIds:
          type: array
          items:
            type: string
            maxLength: 128
            minLength: 1
            pattern: ^[\w+\-]+$
          maxItems: 5
          minItems: 1
          x-insertionOrder: false
        SubnetIds:
          type: array
          items:
            type: string
            maxLength: 32
            minLength: 1
            pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
          maxItems: 3
          minItems: 2
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        VpcId:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^vpc-[0-9a-z]*$
      required:
        - SecurityGroupIds
        - SubnetIds
        - VpcId
      x-stackql-resource-name: network_settings
      description: Definition of AWS::WorkSpacesWeb::NetworkSettings Resource Type
      x-type-name: AWS::WorkSpacesWeb::NetworkSettings
      x-stackql-primary-identifier:
        - NetworkSettingsArn
      x-read-only-properties:
        - AssociatedPortalArns
        - NetworkSettingsArn
      x-required-properties:
        - SecurityGroupIds
        - SubnetIds
        - VpcId
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateNetworkSettings
          - workspaces-web:GetNetworkSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetNetworkSettings
          - workspaces-web:ListTagsForResource
        update:
          - workspaces-web:UpdateNetworkSettings
          - workspaces-web:UpdateResource
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetNetworkSettings
          - workspaces-web:ListTagsForResource
        delete:
          - workspaces-web:GetNetworkSettings
          - workspaces-web:DeleteNetworkSettings
        list:
          - workspaces-web:ListNetworkSettings
    AuthenticationType:
      type: string
      enum:
        - Standard
        - IAM_Identity_Center
    BrowserType:
      type: string
      enum:
        - Chrome
    InstanceType:
      type: string
      enum:
        - standard.regular
        - standard.large
        - standard.xlarge
    PortalStatus:
      type: string
      enum:
        - Incomplete
        - Pending
        - Active
    RendererType:
      type: string
      enum:
        - AppStream
    Portal:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
        BrowserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        BrowserType:
          $ref: '#/components/schemas/BrowserType'
        CreationDate:
          type: string
          format: date-time
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        DataProtectionSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        DisplayName:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^.+$
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
        IpAccessSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        MaxConcurrentSessions:
          type: number
          maximum: 5000
          minimum: 1
        NetworkSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        PortalArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        PortalEndpoint:
          type: string
          maxLength: 253
          minLength: 1
          pattern: ^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$
        PortalStatus:
          $ref: '#/components/schemas/PortalStatus'
        RendererType:
          $ref: '#/components/schemas/RendererType'
        ServiceProviderSamlMetadata:
          type: string
          maxLength: 204800
          minLength: 0
          pattern: ^.*$
        StatusReason:
          type: string
          maxLength: 1024
          minLength: 1
          pattern: .*
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        TrustStoreArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        UserAccessLoggingSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        UserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      x-stackql-resource-name: portal
      description: Definition of AWS::WorkSpacesWeb::Portal Resource Type
      x-type-name: AWS::WorkSpacesWeb::Portal
      x-stackql-primary-identifier:
        - PortalArn
      x-create-only-properties:
        - AdditionalEncryptionContext
        - CustomerManagedKey
      x-read-only-properties:
        - BrowserType
        - CreationDate
        - PortalArn
        - PortalEndpoint
        - PortalStatus
        - RendererType
        - ServiceProviderSamlMetadata
        - StatusReason
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:List*
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreatePortal
          - workspaces-web:GetPortal*
          - workspaces-web:AssociateBrowserSettings
          - workspaces-web:AssociateIpAccessSettings
          - workspaces-web:AssociateNetworkSettings
          - workspaces-web:AssociateTrustStore
          - workspaces-web:AssociateUserAccessLoggingSettings
          - workspaces-web:AssociateUserSettings
          - workspaces-web:AssociateDataProtectionSettings
          - workspaces-web:List*
          - workspaces-web:TagResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
          - kms:GenerateDataKeyWithoutPlaintext
          - kms:ReEncryptTo
          - kms:ReEncryptFrom
          - ec2:CreateNetworkInterface
          - ec2:CreateNetworkInterfacePermission
          - ec2:DeleteNetworkInterface
          - ec2:DeleteNetworkInterfacePermission
          - ec2:ModifyNetworkInterfaceAttribute
          - kinesis:PutRecord
          - kinesis:PutRecords
          - kinesis:Describe*
          - sso:CreateManagedApplicationInstance
          - sso:Describe*
        read:
          - workspaces-web:GetPortal*
          - workspaces-web:List*
          - kms:Decrypt
          - kms:DescribeKey
        update:
          - workspaces-web:GetPortal*
          - workspaces-web:UpdatePortal
          - workspaces-web:AssociateBrowserSettings
          - workspaces-web:AssociateIpAccessSettings
          - workspaces-web:AssociateNetworkSettings
          - workspaces-web:AssociateTrustStore
          - workspaces-web:AssociateUserAccessLoggingSettings
          - workspaces-web:AssociateUserSettings
          - workspaces-web:AssociateDataProtectionSettings
          - workspaces-web:DisassociateBrowserSettings
          - workspaces-web:DisassociateIpAccessSettings
          - workspaces-web:DisassociateNetworkSettings
          - workspaces-web:DisassociateTrustStore
          - workspaces-web:DisassociateUserAccessLoggingSettings
          - workspaces-web:DisassociateUserSettings
          - workspaces-web:DisassociateDataProtectionSettings
          - workspaces-web:List*
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - kms:CreateGrant
          - kms:Encrypt
          - kms:GenerateDataKey
          - kms:Decrypt
          - kms:DescribeKey
          - ec2:CreateNetworkInterface
          - ec2:CreateNetworkInterfacePermission
          - ec2:DeleteNetworkInterface
          - ec2:DeleteNetworkInterfacePermission
          - ec2:ModifyNetworkInterfaceAttribute
          - kinesis:PutRecord
          - kinesis:PutRecords
          - kinesis:Describe*
          - sso:CreateManagedApplicationInstance
          - sso:DeleteManagedApplicationInstance
          - sso:Describe*
          - sso:GetApplicationInstance
          - sso:List*
        delete:
          - workspaces-web:GetPortal*
          - workspaces-web:DeletePortal
          - workspaces-web:DisassociateBrowserSettings
          - workspaces-web:DisassociateIpAccessSettings
          - workspaces-web:DisassociateNetworkSettings
          - workspaces-web:DisassociateTrustStore
          - workspaces-web:DisassociateUserAccessLoggingSettings
          - workspaces-web:DisassociateUserSettings
          - workspaces-web:DisassociateDataProtectionSettings
          - kms:Decrypt
          - kms:DescribeKey
          - sso:DeleteManagedApplicationInstance
        list:
          - workspaces-web:List*
          - kms:Decrypt
          - kms:DescribeKey
    TrustStore:
      type: object
      properties:
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        CertificateList:
          type: array
          items:
            type: string
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        TrustStoreArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      required:
        - CertificateList
      x-stackql-resource-name: trust_store
      description: Definition of AWS::WorkSpacesWeb::TrustStore Resource Type
      x-type-name: AWS::WorkSpacesWeb::TrustStore
      x-stackql-primary-identifier:
        - TrustStoreArn
      x-read-only-properties:
        - AssociatedPortalArns
        - TrustStoreArn
      x-required-properties:
        - CertificateList
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateTrustStore
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:ListTrustStoreCertificates
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:ListTagsForResource
          - workspaces-web:ListTrustStoreCertificates
        update:
          - workspaces-web:UpdateTrustStore
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:ListTagsForResource
          - workspaces-web:ListTrustStoreCertificates
        delete:
          - workspaces-web:GetTrustStore
          - workspaces-web:GetTrustStoreCertificate
          - workspaces-web:DeleteTrustStore
        list:
          - workspaces-web:ListTrustStores
          - workspaces-web:ListTrustStoreCertificates
    UserAccessLoggingSettings:
      type: object
      properties:
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        KinesisStreamArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: arn:[\w+=/,.@-]+:kinesis:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:stream/.+
          description: Kinesis stream ARN to which log events are published.
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        UserAccessLoggingSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      required:
        - KinesisStreamArn
      x-stackql-resource-name: user_access_logging_settings
      description: Definition of AWS::WorkSpacesWeb::UserAccessLoggingSettings Resource Type
      x-type-name: AWS::WorkSpacesWeb::UserAccessLoggingSettings
      x-stackql-primary-identifier:
        - UserAccessLoggingSettingsArn
      x-read-only-properties:
        - AssociatedPortalArns
        - UserAccessLoggingSettingsArn
      x-required-properties:
        - KinesisStreamArn
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateUserAccessLoggingSettings
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
        read:
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:ListTagsForResource
        update:
          - workspaces-web:UpdateUserAccessLoggingSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:ListTagsForResource
          - kinesis:PutRecord
          - kinesis:PutRecords
        delete:
          - workspaces-web:GetUserAccessLoggingSettings
          - workspaces-web:DeleteUserAccessLoggingSettings
        list:
          - workspaces-web:ListUserAccessLoggingSettings
    CookieSpecification:
      type: object
      properties:
        Domain:
          type: string
          maxLength: 253
          minLength: 0
          pattern: ^(\.?)(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)*[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$
        Name:
          type: string
          maxLength: 4096
          minLength: 0
        Path:
          type: string
          maxLength: 2000
          minLength: 0
          pattern: ^/(\S)*$
      required:
        - Domain
      additionalProperties: false
    CookieSynchronizationConfiguration:
      type: object
      properties:
        Allowlist:
          type: array
          items:
            $ref: '#/components/schemas/CookieSpecification'
          maxItems: 10
          minItems: 0
          x-insertionOrder: false
        Blocklist:
          type: array
          items:
            $ref: '#/components/schemas/CookieSpecification'
          maxItems: 10
          minItems: 0
          x-insertionOrder: false
      required:
        - Allowlist
      additionalProperties: false
    EnabledType:
      type: string
      enum:
        - Disabled
        - Enabled
    UserSettings:
      type: object
      properties:
        AdditionalEncryptionContext:
          $ref: '#/components/schemas/EncryptionContextMap'
        AssociatedPortalArns:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 20
            pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-insertionOrder: false
        CookieSynchronizationConfiguration:
          $ref: '#/components/schemas/CookieSynchronizationConfiguration'
        CopyAllowed:
          $ref: '#/components/schemas/EnabledType'
        CustomerManagedKey:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
        DisconnectTimeoutInMinutes:
          type: number
          default: null
          maximum: 600
          minimum: 1
        DownloadAllowed:
          $ref: '#/components/schemas/EnabledType'
        IdleDisconnectTimeoutInMinutes:
          type: number
          default: null
          maximum: 60
          minimum: 0
        PasteAllowed:
          $ref: '#/components/schemas/EnabledType'
        PrintAllowed:
          $ref: '#/components/schemas/EnabledType'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          x-insertionOrder: false
        UploadAllowed:
          $ref: '#/components/schemas/EnabledType'
        UserSettingsArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
        DeepLinkAllowed:
          $ref: '#/components/schemas/EnabledType'
      required:
        - CopyAllowed
        - DownloadAllowed
        - PasteAllowed
        - PrintAllowed
        - UploadAllowed
      x-stackql-resource-name: user_settings
      description: Definition of AWS::WorkSpacesWeb::UserSettings Resource Type
      x-type-name: AWS::WorkSpacesWeb::UserSettings
      x-stackql-primary-identifier:
        - UserSettingsArn
      x-read-only-properties:
        - AssociatedPortalArns
        - UserSettingsArn
      x-required-properties:
        - CopyAllowed
        - DownloadAllowed
        - PasteAllowed
        - PrintAllowed
        - UploadAllowed
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
        permissions:
          - workspaces-web:UntagResource
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
      x-required-permissions:
        create:
          - workspaces-web:CreateUserSettings
          - workspaces-web:GetUserSettings
          - workspaces-web:ListTagsForResource
          - workspaces-web:TagResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
          - kms:GenerateDataKeyWithoutPlaintext
          - kms:ReEncryptTo
          - kms:ReEncryptFrom
        read:
          - workspaces-web:GetUserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        update:
          - workspaces-web:UpdateUserSettings
          - workspaces-web:TagResource
          - workspaces-web:UntagResource
          - workspaces-web:GetUserSettings
          - workspaces-web:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - workspaces-web:GetUserSettings
          - workspaces-web:DeleteUserSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        list:
          - workspaces-web:ListUserSettings
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
    CreateBrowserSettingsRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AdditionalEncryptionContext:
              $ref: '#/components/schemas/EncryptionContextMap'
            AssociatedPortalArns:
              type: array
              items:
                type: string
                maxLength: 2048
                minLength: 20
                pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
              x-insertionOrder: false
            BrowserPolicy:
              type: string
              maxLength: 131072
              minLength: 2
              pattern: \{[\S\s]*\}\s*
            BrowserSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            CustomerManagedKey:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateBrowserSettingsRequest
      type: object
      required: []
    CreateDataProtectionSettingsRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AdditionalEncryptionContext:
              $ref: '#/components/schemas/EncryptionContextMap'
            AssociatedPortalArns:
              type: array
              items:
                type: string
                maxLength: 2048
                minLength: 20
                pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            CreationDate:
              type: string
              format: date-time
            CustomerManagedKey:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
            DataProtectionSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            Description:
              type: string
              maxLength: 256
              minLength: 1
              pattern: ^[ _\-\d\w]+$
            DisplayName:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[ _\-\d\w]+$
            InlineRedactionConfiguration:
              $ref: '#/components/schemas/InlineRedactionConfiguration'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateDataProtectionSettingsRequest
      type: object
      required: []
    CreateIdentityProviderRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IdentityProviderArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36}){2,}$
            IdentityProviderDetails:
              $ref: '#/components/schemas/IdentityProviderDetails'
            IdentityProviderName:
              type: string
              maxLength: 32
              minLength: 1
              pattern: ^[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+$
            IdentityProviderType:
              $ref: '#/components/schemas/IdentityProviderType'
            PortalArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateIdentityProviderRequest
      type: object
      required: []
    CreateIpAccessSettingsRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AdditionalEncryptionContext:
              $ref: '#/components/schemas/EncryptionContextMap'
            AssociatedPortalArns:
              type: array
              items:
                type: string
                maxLength: 2048
                minLength: 20
                pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
              x-insertionOrder: false
            CreationDate:
              type: string
              format: date-time
            CustomerManagedKey:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
            Description:
              type: string
              maxLength: 256
              minLength: 1
              pattern: ^.+$
            DisplayName:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^.+$
            IpAccessSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            IpRules:
              type: array
              items:
                $ref: '#/components/schemas/IpRule'
              maxItems: 100
              minItems: 1
              x-insertionOrder: false
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateIpAccessSettingsRequest
      type: object
      required: []
    CreateNetworkSettingsRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AssociatedPortalArns:
              type: array
              items:
                type: string
                maxLength: 2048
                minLength: 20
                pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
              x-insertionOrder: false
            NetworkSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            SecurityGroupIds:
              type: array
              items:
                type: string
                maxLength: 128
                minLength: 1
                pattern: ^[\w+\-]+$
              maxItems: 5
              minItems: 1
              x-insertionOrder: false
            SubnetIds:
              type: array
              items:
                type: string
                maxLength: 32
                minLength: 1
                pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
              maxItems: 3
              minItems: 2
              x-insertionOrder: false
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
            VpcId:
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^vpc-[0-9a-z]*$
          x-stackQL-stringOnly: true
      x-title: CreateNetworkSettingsRequest
      type: object
      required: []
    CreatePortalRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AdditionalEncryptionContext:
              $ref: '#/components/schemas/EncryptionContextMap'
            AuthenticationType:
              $ref: '#/components/schemas/AuthenticationType'
            BrowserSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            BrowserType:
              $ref: '#/components/schemas/BrowserType'
            CreationDate:
              type: string
              format: date-time
            CustomerManagedKey:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
            DataProtectionSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            DisplayName:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^.+$
            InstanceType:
              $ref: '#/components/schemas/InstanceType'
            IpAccessSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            MaxConcurrentSessions:
              type: number
              maximum: 5000
              minimum: 1
            NetworkSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            PortalArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            PortalEndpoint:
              type: string
              maxLength: 253
              minLength: 1
              pattern: ^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$
            PortalStatus:
              $ref: '#/components/schemas/PortalStatus'
            RendererType:
              $ref: '#/components/schemas/RendererType'
            ServiceProviderSamlMetadata:
              type: string
              maxLength: 204800
              minLength: 0
              pattern: ^.*$
            StatusReason:
              type: string
              maxLength: 1024
              minLength: 1
              pattern: .*
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
            TrustStoreArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            UserAccessLoggingSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            UserSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-stackQL-stringOnly: true
      x-title: CreatePortalRequest
      type: object
      required: []
    CreateTrustStoreRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AssociatedPortalArns:
              type: array
              items:
                type: string
                maxLength: 2048
                minLength: 20
                pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
              x-insertionOrder: false
            CertificateList:
              type: array
              items:
                type: string
              x-insertionOrder: false
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
            TrustStoreArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-stackQL-stringOnly: true
      x-title: CreateTrustStoreRequest
      type: object
      required: []
    CreateUserAccessLoggingSettingsRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AssociatedPortalArns:
              type: array
              items:
                type: string
                maxLength: 2048
                minLength: 20
                pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
              x-insertionOrder: false
            KinesisStreamArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: arn:[\w+=/,.@-]+:kinesis:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:stream/.+
              description: Kinesis stream ARN to which log events are published.
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
            UserAccessLoggingSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
          x-stackQL-stringOnly: true
      x-title: CreateUserAccessLoggingSettingsRequest
      type: object
      required: []
    CreateUserSettingsRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AdditionalEncryptionContext:
              $ref: '#/components/schemas/EncryptionContextMap'
            AssociatedPortalArns:
              type: array
              items:
                type: string
                maxLength: 2048
                minLength: 20
                pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
              x-insertionOrder: false
            CookieSynchronizationConfiguration:
              $ref: '#/components/schemas/CookieSynchronizationConfiguration'
            CopyAllowed:
              $ref: '#/components/schemas/EnabledType'
            CustomerManagedKey:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
            DisconnectTimeoutInMinutes:
              type: number
              default: null
              maximum: 600
              minimum: 1
            DownloadAllowed:
              $ref: '#/components/schemas/EnabledType'
            IdleDisconnectTimeoutInMinutes:
              type: number
              default: null
              maximum: 60
              minimum: 0
            PasteAllowed:
              $ref: '#/components/schemas/EnabledType'
            PrintAllowed:
              $ref: '#/components/schemas/EnabledType'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              x-insertionOrder: false
            UploadAllowed:
              $ref: '#/components/schemas/EnabledType'
            UserSettingsArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
            DeepLinkAllowed:
              $ref: '#/components/schemas/EnabledType'
          x-stackQL-stringOnly: true
      x-title: CreateUserSettingsRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    browser_settings:
      name: browser_settings
      id: aws.workspacesweb.browser_settings
      x-cfn-schema-name: BrowserSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::BrowserSettings
      x-identifiers:
        - BrowserSettingsArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__BrowserSettings&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::BrowserSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::BrowserSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::BrowserSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/browser_settings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/browser_settings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/browser_settings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.BrowserPolicy') as browser_policy,
              JSON_EXTRACT(Properties, '$.BrowserSettingsArn') as browser_settings_arn,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
              AND data__Identifier = '<BrowserSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
                JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
                JSON_EXTRACT(detail.Properties, '$.BrowserPolicy') as browser_policy,
                JSON_EXTRACT(detail.Properties, '$.BrowserSettingsArn') as browser_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                  json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                  json_extract_path_text(Properties, 'BrowserPolicy') as browser_policy,
                  json_extract_path_text(Properties, 'BrowserSettingsArn') as browser_settings_arn,
                  json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                  AND data__Identifier = '<BrowserSettingsArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                    json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                    json_extract_path_text(detail.Properties, 'BrowserPolicy') as browser_policy,
                    json_extract_path_text(detail.Properties, 'BrowserSettingsArn') as browser_settings_arn,
                    json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                    AND listing.region = 'us-east-1'
    browser_settings_list_only:
      name: browser_settings_list_only
      id: aws.workspacesweb.browser_settings_list_only
      x-cfn-schema-name: BrowserSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::BrowserSettings
      x-identifiers:
        - BrowserSettingsArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.BrowserSettingsArn') as browser_settings_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'BrowserSettingsArn') as browser_settings_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                AND region = 'us-east-1'
    browser_settings_tags:
      name: browser_settings_tags
      id: aws.workspacesweb.browser_settings_tags
      x-cfn-schema-name: BrowserSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::BrowserSettings
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(detail.Properties, '$.BrowserPolicy') as browser_policy,
              JSON_EXTRACT(detail.Properties, '$.BrowserSettingsArn') as browser_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(detail.Properties, 'BrowserPolicy') as browser_policy,
                json_extract_path_text(detail.Properties, 'BrowserSettingsArn') as browser_settings_arn,
                json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::BrowserSettings'
                AND listing.region = 'us-east-1'
    data_protection_settings:
      name: data_protection_settings
      id: aws.workspacesweb.data_protection_settings
      x-cfn-schema-name: DataProtectionSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::DataProtectionSettings
      x-identifiers:
        - DataProtectionSettingsArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataProtectionSettings&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::DataProtectionSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::DataProtectionSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::DataProtectionSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_protection_settings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_protection_settings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/data_protection_settings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.DataProtectionSettingsArn') as data_protection_settings_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.InlineRedactionConfiguration') as inline_redaction_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
              AND data__Identifier = '<DataProtectionSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
                JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
                JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
                JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
                JSON_EXTRACT(detail.Properties, '$.DataProtectionSettingsArn') as data_protection_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.InlineRedactionConfiguration') as inline_redaction_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                  json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                  json_extract_path_text(Properties, 'CreationDate') as creation_date,
                  json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                  json_extract_path_text(Properties, 'DataProtectionSettingsArn') as data_protection_settings_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'InlineRedactionConfiguration') as inline_redaction_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                  AND data__Identifier = '<DataProtectionSettingsArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                    json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                    json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                    json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                    json_extract_path_text(detail.Properties, 'DataProtectionSettingsArn') as data_protection_settings_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'InlineRedactionConfiguration') as inline_redaction_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                    AND listing.region = 'us-east-1'
    data_protection_settings_list_only:
      name: data_protection_settings_list_only
      id: aws.workspacesweb.data_protection_settings_list_only
      x-cfn-schema-name: DataProtectionSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::DataProtectionSettings
      x-identifiers:
        - DataProtectionSettingsArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DataProtectionSettingsArn') as data_protection_settings_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DataProtectionSettingsArn') as data_protection_settings_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                AND region = 'us-east-1'
    data_protection_settings_tags:
      name: data_protection_settings_tags
      id: aws.workspacesweb.data_protection_settings_tags
      x-cfn-schema-name: DataProtectionSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::DataProtectionSettings
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(detail.Properties, '$.DataProtectionSettingsArn') as data_protection_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.InlineRedactionConfiguration') as inline_redaction_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(detail.Properties, 'DataProtectionSettingsArn') as data_protection_settings_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'InlineRedactionConfiguration') as inline_redaction_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::DataProtectionSettings'
                AND listing.region = 'us-east-1'
    identity_providers:
      name: identity_providers
      id: aws.workspacesweb.identity_providers
      x-cfn-schema-name: IdentityProvider
      x-cfn-type-name: AWS::WorkSpacesWeb::IdentityProvider
      x-identifiers:
        - IdentityProviderArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IdentityProvider&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::IdentityProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::IdentityProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::IdentityProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/identity_providers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/identity_providers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/identity_providers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IdentityProviderArn') as identity_provider_arn,
              JSON_EXTRACT(Properties, '$.IdentityProviderDetails') as identity_provider_details,
              JSON_EXTRACT(Properties, '$.IdentityProviderName') as identity_provider_name,
              JSON_EXTRACT(Properties, '$.IdentityProviderType') as identity_provider_type,
              JSON_EXTRACT(Properties, '$.PortalArn') as portal_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
              AND data__Identifier = '<IdentityProviderArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IdentityProviderArn') as identity_provider_arn,
                JSON_EXTRACT(detail.Properties, '$.IdentityProviderDetails') as identity_provider_details,
                JSON_EXTRACT(detail.Properties, '$.IdentityProviderName') as identity_provider_name,
                JSON_EXTRACT(detail.Properties, '$.IdentityProviderType') as identity_provider_type,
                JSON_EXTRACT(detail.Properties, '$.PortalArn') as portal_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IdentityProviderArn') as identity_provider_arn,
                  json_extract_path_text(Properties, 'IdentityProviderDetails') as identity_provider_details,
                  json_extract_path_text(Properties, 'IdentityProviderName') as identity_provider_name,
                  json_extract_path_text(Properties, 'IdentityProviderType') as identity_provider_type,
                  json_extract_path_text(Properties, 'PortalArn') as portal_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                  AND data__Identifier = '<IdentityProviderArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IdentityProviderArn') as identity_provider_arn,
                    json_extract_path_text(detail.Properties, 'IdentityProviderDetails') as identity_provider_details,
                    json_extract_path_text(detail.Properties, 'IdentityProviderName') as identity_provider_name,
                    json_extract_path_text(detail.Properties, 'IdentityProviderType') as identity_provider_type,
                    json_extract_path_text(detail.Properties, 'PortalArn') as portal_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                    AND listing.region = 'us-east-1'
    identity_providers_list_only:
      name: identity_providers_list_only
      id: aws.workspacesweb.identity_providers_list_only
      x-cfn-schema-name: IdentityProvider
      x-cfn-type-name: AWS::WorkSpacesWeb::IdentityProvider
      x-identifiers:
        - IdentityProviderArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdentityProviderArn') as identity_provider_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'IdentityProviderArn') as identity_provider_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                AND region = 'us-east-1'
    identity_provider_tags:
      name: identity_provider_tags
      id: aws.workspacesweb.identity_provider_tags
      x-cfn-schema-name: IdentityProvider
      x-cfn-type-name: AWS::WorkSpacesWeb::IdentityProvider
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.IdentityProviderArn') as identity_provider_arn,
              JSON_EXTRACT(detail.Properties, '$.IdentityProviderDetails') as identity_provider_details,
              JSON_EXTRACT(detail.Properties, '$.IdentityProviderName') as identity_provider_name,
              JSON_EXTRACT(detail.Properties, '$.IdentityProviderType') as identity_provider_type,
              JSON_EXTRACT(detail.Properties, '$.PortalArn') as portal_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'IdentityProviderArn') as identity_provider_arn,
                json_extract_path_text(detail.Properties, 'IdentityProviderDetails') as identity_provider_details,
                json_extract_path_text(detail.Properties, 'IdentityProviderName') as identity_provider_name,
                json_extract_path_text(detail.Properties, 'IdentityProviderType') as identity_provider_type,
                json_extract_path_text(detail.Properties, 'PortalArn') as portal_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IdentityProvider'
                AND listing.region = 'us-east-1'
    ip_access_settings:
      name: ip_access_settings
      id: aws.workspacesweb.ip_access_settings
      x-cfn-schema-name: IpAccessSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::IpAccessSettings
      x-identifiers:
        - IpAccessSettingsArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IpAccessSettings&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::IpAccessSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::IpAccessSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::IpAccessSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_access_settings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_access_settings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ip_access_settings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
              JSON_EXTRACT(Properties, '$.IpRules') as ip_rules,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
              AND data__Identifier = '<IpAccessSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
                JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
                JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
                JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.IpRules') as ip_rules,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                  json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                  json_extract_path_text(Properties, 'CreationDate') as creation_date,
                  json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                  json_extract_path_text(Properties, 'IpRules') as ip_rules,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                  AND data__Identifier = '<IpAccessSettingsArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                    json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                    json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                    json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                    json_extract_path_text(detail.Properties, 'IpRules') as ip_rules,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                    AND listing.region = 'us-east-1'
    ip_access_settings_list_only:
      name: ip_access_settings_list_only
      id: aws.workspacesweb.ip_access_settings_list_only
      x-cfn-schema-name: IpAccessSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::IpAccessSettings
      x-identifiers:
        - IpAccessSettingsArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'IpAccessSettingsArn') as ip_access_settings_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                AND region = 'us-east-1'
    ip_access_settings_tags:
      name: ip_access_settings_tags
      id: aws.workspacesweb.ip_access_settings_tags
      x-cfn-schema-name: IpAccessSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::IpAccessSettings
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.IpRules') as ip_rules
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                json_extract_path_text(detail.Properties, 'IpRules') as ip_rules
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::IpAccessSettings'
                AND listing.region = 'us-east-1'
    network_settings:
      name: network_settings
      id: aws.workspacesweb.network_settings
      x-cfn-schema-name: NetworkSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::NetworkSettings
      x-identifiers:
        - NetworkSettingsArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__NetworkSettings&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::NetworkSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::NetworkSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::NetworkSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/network_settings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/network_settings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/network_settings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.NetworkSettingsArn') as network_settings_arn,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
              AND data__Identifier = '<NetworkSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
                JSON_EXTRACT(detail.Properties, '$.NetworkSettingsArn') as network_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.SecurityGroupIds') as security_group_ids,
                JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                  json_extract_path_text(Properties, 'NetworkSettingsArn') as network_settings_arn,
                  json_extract_path_text(Properties, 'SecurityGroupIds') as security_group_ids,
                  json_extract_path_text(Properties, 'SubnetIds') as subnet_ids,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'VpcId') as vpc_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                  AND data__Identifier = '<NetworkSettingsArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                    json_extract_path_text(detail.Properties, 'NetworkSettingsArn') as network_settings_arn,
                    json_extract_path_text(detail.Properties, 'SecurityGroupIds') as security_group_ids,
                    json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'VpcId') as vpc_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                    AND listing.region = 'us-east-1'
    network_settings_list_only:
      name: network_settings_list_only
      id: aws.workspacesweb.network_settings_list_only
      x-cfn-schema-name: NetworkSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::NetworkSettings
      x-identifiers:
        - NetworkSettingsArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.NetworkSettingsArn') as network_settings_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'NetworkSettingsArn') as network_settings_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                AND region = 'us-east-1'
    network_settings_tags:
      name: network_settings_tags
      id: aws.workspacesweb.network_settings_tags
      x-cfn-schema-name: NetworkSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::NetworkSettings
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(detail.Properties, '$.NetworkSettingsArn') as network_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(detail.Properties, 'NetworkSettingsArn') as network_settings_arn,
                json_extract_path_text(detail.Properties, 'SecurityGroupIds') as security_group_ids,
                json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids,
                json_extract_path_text(detail.Properties, 'VpcId') as vpc_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::NetworkSettings'
                AND listing.region = 'us-east-1'
    portals:
      name: portals
      id: aws.workspacesweb.portals
      x-cfn-schema-name: Portal
      x-cfn-type-name: AWS::WorkSpacesWeb::Portal
      x-identifiers:
        - PortalArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Portal&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::Portal"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::Portal"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::Portal"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/portals/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/portals/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/portals/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AuthenticationType') as authentication_type,
              JSON_EXTRACT(Properties, '$.BrowserSettingsArn') as browser_settings_arn,
              JSON_EXTRACT(Properties, '$.BrowserType') as browser_type,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.DataProtectionSettingsArn') as data_protection_settings_arn,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
              JSON_EXTRACT(Properties, '$.MaxConcurrentSessions') as max_concurrent_sessions,
              JSON_EXTRACT(Properties, '$.NetworkSettingsArn') as network_settings_arn,
              JSON_EXTRACT(Properties, '$.PortalArn') as portal_arn,
              JSON_EXTRACT(Properties, '$.PortalEndpoint') as portal_endpoint,
              JSON_EXTRACT(Properties, '$.PortalStatus') as portal_status,
              JSON_EXTRACT(Properties, '$.RendererType') as renderer_type,
              JSON_EXTRACT(Properties, '$.ServiceProviderSamlMetadata') as service_provider_saml_metadata,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TrustStoreArn') as trust_store_arn,
              JSON_EXTRACT(Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
              JSON_EXTRACT(Properties, '$.UserSettingsArn') as user_settings_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
              AND data__Identifier = '<PortalArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
                JSON_EXTRACT(detail.Properties, '$.AuthenticationType') as authentication_type,
                JSON_EXTRACT(detail.Properties, '$.BrowserSettingsArn') as browser_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.BrowserType') as browser_type,
                JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
                JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
                JSON_EXTRACT(detail.Properties, '$.DataProtectionSettingsArn') as data_protection_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
                JSON_EXTRACT(detail.Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.MaxConcurrentSessions') as max_concurrent_sessions,
                JSON_EXTRACT(detail.Properties, '$.NetworkSettingsArn') as network_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.PortalArn') as portal_arn,
                JSON_EXTRACT(detail.Properties, '$.PortalEndpoint') as portal_endpoint,
                JSON_EXTRACT(detail.Properties, '$.PortalStatus') as portal_status,
                JSON_EXTRACT(detail.Properties, '$.RendererType') as renderer_type,
                JSON_EXTRACT(detail.Properties, '$.ServiceProviderSamlMetadata') as service_provider_saml_metadata,
                JSON_EXTRACT(detail.Properties, '$.StatusReason') as status_reason,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TrustStoreArn') as trust_store_arn,
                JSON_EXTRACT(detail.Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.UserSettingsArn') as user_settings_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                  json_extract_path_text(Properties, 'AuthenticationType') as authentication_type,
                  json_extract_path_text(Properties, 'BrowserSettingsArn') as browser_settings_arn,
                  json_extract_path_text(Properties, 'BrowserType') as browser_type,
                  json_extract_path_text(Properties, 'CreationDate') as creation_date,
                  json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                  json_extract_path_text(Properties, 'DataProtectionSettingsArn') as data_protection_settings_arn,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'InstanceType') as instance_type,
                  json_extract_path_text(Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                  json_extract_path_text(Properties, 'MaxConcurrentSessions') as max_concurrent_sessions,
                  json_extract_path_text(Properties, 'NetworkSettingsArn') as network_settings_arn,
                  json_extract_path_text(Properties, 'PortalArn') as portal_arn,
                  json_extract_path_text(Properties, 'PortalEndpoint') as portal_endpoint,
                  json_extract_path_text(Properties, 'PortalStatus') as portal_status,
                  json_extract_path_text(Properties, 'RendererType') as renderer_type,
                  json_extract_path_text(Properties, 'ServiceProviderSamlMetadata') as service_provider_saml_metadata,
                  json_extract_path_text(Properties, 'StatusReason') as status_reason,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TrustStoreArn') as trust_store_arn,
                  json_extract_path_text(Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
                  json_extract_path_text(Properties, 'UserSettingsArn') as user_settings_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                  AND data__Identifier = '<PortalArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                    json_extract_path_text(detail.Properties, 'AuthenticationType') as authentication_type,
                    json_extract_path_text(detail.Properties, 'BrowserSettingsArn') as browser_settings_arn,
                    json_extract_path_text(detail.Properties, 'BrowserType') as browser_type,
                    json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                    json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                    json_extract_path_text(detail.Properties, 'DataProtectionSettingsArn') as data_protection_settings_arn,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                    json_extract_path_text(detail.Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                    json_extract_path_text(detail.Properties, 'MaxConcurrentSessions') as max_concurrent_sessions,
                    json_extract_path_text(detail.Properties, 'NetworkSettingsArn') as network_settings_arn,
                    json_extract_path_text(detail.Properties, 'PortalArn') as portal_arn,
                    json_extract_path_text(detail.Properties, 'PortalEndpoint') as portal_endpoint,
                    json_extract_path_text(detail.Properties, 'PortalStatus') as portal_status,
                    json_extract_path_text(detail.Properties, 'RendererType') as renderer_type,
                    json_extract_path_text(detail.Properties, 'ServiceProviderSamlMetadata') as service_provider_saml_metadata,
                    json_extract_path_text(detail.Properties, 'StatusReason') as status_reason,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TrustStoreArn') as trust_store_arn,
                    json_extract_path_text(detail.Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
                    json_extract_path_text(detail.Properties, 'UserSettingsArn') as user_settings_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                    AND listing.region = 'us-east-1'
    portals_list_only:
      name: portals_list_only
      id: aws.workspacesweb.portals_list_only
      x-cfn-schema-name: Portal
      x-cfn-type-name: AWS::WorkSpacesWeb::Portal
      x-identifiers:
        - PortalArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PortalArn') as portal_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PortalArn') as portal_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                AND region = 'us-east-1'
    portal_tags:
      name: portal_tags
      id: aws.workspacesweb.portal_tags
      x-cfn-schema-name: Portal
      x-cfn-type-name: AWS::WorkSpacesWeb::Portal
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(detail.Properties, '$.AuthenticationType') as authentication_type,
              JSON_EXTRACT(detail.Properties, '$.BrowserSettingsArn') as browser_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.BrowserType') as browser_type,
              JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(detail.Properties, '$.DataProtectionSettingsArn') as data_protection_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(detail.Properties, '$.IpAccessSettingsArn') as ip_access_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.MaxConcurrentSessions') as max_concurrent_sessions,
              JSON_EXTRACT(detail.Properties, '$.NetworkSettingsArn') as network_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.PortalArn') as portal_arn,
              JSON_EXTRACT(detail.Properties, '$.PortalEndpoint') as portal_endpoint,
              JSON_EXTRACT(detail.Properties, '$.PortalStatus') as portal_status,
              JSON_EXTRACT(detail.Properties, '$.RendererType') as renderer_type,
              JSON_EXTRACT(detail.Properties, '$.ServiceProviderSamlMetadata') as service_provider_saml_metadata,
              JSON_EXTRACT(detail.Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(detail.Properties, '$.TrustStoreArn') as trust_store_arn,
              JSON_EXTRACT(detail.Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.UserSettingsArn') as user_settings_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(detail.Properties, 'AuthenticationType') as authentication_type,
                json_extract_path_text(detail.Properties, 'BrowserSettingsArn') as browser_settings_arn,
                json_extract_path_text(detail.Properties, 'BrowserType') as browser_type,
                json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(detail.Properties, 'DataProtectionSettingsArn') as data_protection_settings_arn,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                json_extract_path_text(detail.Properties, 'IpAccessSettingsArn') as ip_access_settings_arn,
                json_extract_path_text(detail.Properties, 'MaxConcurrentSessions') as max_concurrent_sessions,
                json_extract_path_text(detail.Properties, 'NetworkSettingsArn') as network_settings_arn,
                json_extract_path_text(detail.Properties, 'PortalArn') as portal_arn,
                json_extract_path_text(detail.Properties, 'PortalEndpoint') as portal_endpoint,
                json_extract_path_text(detail.Properties, 'PortalStatus') as portal_status,
                json_extract_path_text(detail.Properties, 'RendererType') as renderer_type,
                json_extract_path_text(detail.Properties, 'ServiceProviderSamlMetadata') as service_provider_saml_metadata,
                json_extract_path_text(detail.Properties, 'StatusReason') as status_reason,
                json_extract_path_text(detail.Properties, 'TrustStoreArn') as trust_store_arn,
                json_extract_path_text(detail.Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn,
                json_extract_path_text(detail.Properties, 'UserSettingsArn') as user_settings_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::Portal'
                AND listing.region = 'us-east-1'
    trust_stores:
      name: trust_stores
      id: aws.workspacesweb.trust_stores
      x-cfn-schema-name: TrustStore
      x-cfn-type-name: AWS::WorkSpacesWeb::TrustStore
      x-identifiers:
        - TrustStoreArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__TrustStore&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::TrustStore"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::TrustStore"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::TrustStore"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/trust_stores/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/trust_stores/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/trust_stores/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.CertificateList') as certificate_list,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TrustStoreArn') as trust_store_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
              AND data__Identifier = '<TrustStoreArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
                JSON_EXTRACT(detail.Properties, '$.CertificateList') as certificate_list,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TrustStoreArn') as trust_store_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                  json_extract_path_text(Properties, 'CertificateList') as certificate_list,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TrustStoreArn') as trust_store_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                  AND data__Identifier = '<TrustStoreArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                    json_extract_path_text(detail.Properties, 'CertificateList') as certificate_list,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TrustStoreArn') as trust_store_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                    AND listing.region = 'us-east-1'
    trust_stores_list_only:
      name: trust_stores_list_only
      id: aws.workspacesweb.trust_stores_list_only
      x-cfn-schema-name: TrustStore
      x-cfn-type-name: AWS::WorkSpacesWeb::TrustStore
      x-identifiers:
        - TrustStoreArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TrustStoreArn') as trust_store_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TrustStoreArn') as trust_store_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                AND region = 'us-east-1'
    trust_store_tags:
      name: trust_store_tags
      id: aws.workspacesweb.trust_store_tags
      x-cfn-schema-name: TrustStore
      x-cfn-type-name: AWS::WorkSpacesWeb::TrustStore
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(detail.Properties, '$.CertificateList') as certificate_list,
              JSON_EXTRACT(detail.Properties, '$.TrustStoreArn') as trust_store_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(detail.Properties, 'CertificateList') as certificate_list,
                json_extract_path_text(detail.Properties, 'TrustStoreArn') as trust_store_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::TrustStore'
                AND listing.region = 'us-east-1'
    user_access_logging_settings:
      name: user_access_logging_settings
      id: aws.workspacesweb.user_access_logging_settings
      x-cfn-schema-name: UserAccessLoggingSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::UserAccessLoggingSettings
      x-identifiers:
        - UserAccessLoggingSettingsArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserAccessLoggingSettings&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::UserAccessLoggingSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::UserAccessLoggingSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::UserAccessLoggingSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_access_logging_settings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_access_logging_settings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_access_logging_settings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.KinesisStreamArn') as kinesis_stream_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
              AND data__Identifier = '<UserAccessLoggingSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
                JSON_EXTRACT(detail.Properties, '$.KinesisStreamArn') as kinesis_stream_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                  json_extract_path_text(Properties, 'KinesisStreamArn') as kinesis_stream_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                  AND data__Identifier = '<UserAccessLoggingSettingsArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                    json_extract_path_text(detail.Properties, 'KinesisStreamArn') as kinesis_stream_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                    AND listing.region = 'us-east-1'
    user_access_logging_settings_list_only:
      name: user_access_logging_settings_list_only
      id: aws.workspacesweb.user_access_logging_settings_list_only
      x-cfn-schema-name: UserAccessLoggingSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::UserAccessLoggingSettings
      x-identifiers:
        - UserAccessLoggingSettingsArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                AND region = 'us-east-1'
    user_access_logging_settings_tags:
      name: user_access_logging_settings_tags
      id: aws.workspacesweb.user_access_logging_settings_tags
      x-cfn-schema-name: UserAccessLoggingSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::UserAccessLoggingSettings
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(detail.Properties, '$.KinesisStreamArn') as kinesis_stream_arn,
              JSON_EXTRACT(detail.Properties, '$.UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(detail.Properties, 'KinesisStreamArn') as kinesis_stream_arn,
                json_extract_path_text(detail.Properties, 'UserAccessLoggingSettingsArn') as user_access_logging_settings_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserAccessLoggingSettings'
                AND listing.region = 'us-east-1'
    user_settings:
      name: user_settings
      id: aws.workspacesweb.user_settings
      x-cfn-schema-name: UserSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::UserSettings
      x-identifiers:
        - UserSettingsArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserSettings&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::UserSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::UserSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WorkSpacesWeb::UserSettings"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_settings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_settings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_settings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(Properties, '$.CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
              JSON_EXTRACT(Properties, '$.CopyAllowed') as copy_allowed,
              JSON_EXTRACT(Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(Properties, '$.DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
              JSON_EXTRACT(Properties, '$.DownloadAllowed') as download_allowed,
              JSON_EXTRACT(Properties, '$.IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
              JSON_EXTRACT(Properties, '$.PasteAllowed') as paste_allowed,
              JSON_EXTRACT(Properties, '$.PrintAllowed') as print_allowed,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UploadAllowed') as upload_allowed,
              JSON_EXTRACT(Properties, '$.UserSettingsArn') as user_settings_arn,
              JSON_EXTRACT(Properties, '$.DeepLinkAllowed') as deep_link_allowed
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
              AND data__Identifier = '<UserSettingsArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
                JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
                JSON_EXTRACT(detail.Properties, '$.CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
                JSON_EXTRACT(detail.Properties, '$.CopyAllowed') as copy_allowed,
                JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
                JSON_EXTRACT(detail.Properties, '$.DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
                JSON_EXTRACT(detail.Properties, '$.DownloadAllowed') as download_allowed,
                JSON_EXTRACT(detail.Properties, '$.IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
                JSON_EXTRACT(detail.Properties, '$.PasteAllowed') as paste_allowed,
                JSON_EXTRACT(detail.Properties, '$.PrintAllowed') as print_allowed,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UploadAllowed') as upload_allowed,
                JSON_EXTRACT(detail.Properties, '$.UserSettingsArn') as user_settings_arn,
                JSON_EXTRACT(detail.Properties, '$.DeepLinkAllowed') as deep_link_allowed
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                  json_extract_path_text(Properties, 'AssociatedPortalArns') as associated_portal_arns,
                  json_extract_path_text(Properties, 'CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
                  json_extract_path_text(Properties, 'CopyAllowed') as copy_allowed,
                  json_extract_path_text(Properties, 'CustomerManagedKey') as customer_managed_key,
                  json_extract_path_text(Properties, 'DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
                  json_extract_path_text(Properties, 'DownloadAllowed') as download_allowed,
                  json_extract_path_text(Properties, 'IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
                  json_extract_path_text(Properties, 'PasteAllowed') as paste_allowed,
                  json_extract_path_text(Properties, 'PrintAllowed') as print_allowed,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UploadAllowed') as upload_allowed,
                  json_extract_path_text(Properties, 'UserSettingsArn') as user_settings_arn,
                  json_extract_path_text(Properties, 'DeepLinkAllowed') as deep_link_allowed
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                  AND data__Identifier = '<UserSettingsArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                    json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                    json_extract_path_text(detail.Properties, 'CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
                    json_extract_path_text(detail.Properties, 'CopyAllowed') as copy_allowed,
                    json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                    json_extract_path_text(detail.Properties, 'DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
                    json_extract_path_text(detail.Properties, 'DownloadAllowed') as download_allowed,
                    json_extract_path_text(detail.Properties, 'IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
                    json_extract_path_text(detail.Properties, 'PasteAllowed') as paste_allowed,
                    json_extract_path_text(detail.Properties, 'PrintAllowed') as print_allowed,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UploadAllowed') as upload_allowed,
                    json_extract_path_text(detail.Properties, 'UserSettingsArn') as user_settings_arn,
                    json_extract_path_text(detail.Properties, 'DeepLinkAllowed') as deep_link_allowed
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                    AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                    AND listing.region = 'us-east-1'
    user_settings_list_only:
      name: user_settings_list_only
      id: aws.workspacesweb.user_settings_list_only
      x-cfn-schema-name: UserSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::UserSettings
      x-identifiers:
        - UserSettingsArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserSettingsArn') as user_settings_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserSettingsArn') as user_settings_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                AND region = 'us-east-1'
    user_settings_tags:
      name: user_settings_tags
      id: aws.workspacesweb.user_settings_tags
      x-cfn-schema-name: UserSettings
      x-cfn-type-name: AWS::WorkSpacesWeb::UserSettings
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AdditionalEncryptionContext') as additional_encryption_context,
              JSON_EXTRACT(detail.Properties, '$.AssociatedPortalArns') as associated_portal_arns,
              JSON_EXTRACT(detail.Properties, '$.CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
              JSON_EXTRACT(detail.Properties, '$.CopyAllowed') as copy_allowed,
              JSON_EXTRACT(detail.Properties, '$.CustomerManagedKey') as customer_managed_key,
              JSON_EXTRACT(detail.Properties, '$.DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
              JSON_EXTRACT(detail.Properties, '$.DownloadAllowed') as download_allowed,
              JSON_EXTRACT(detail.Properties, '$.IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
              JSON_EXTRACT(detail.Properties, '$.PasteAllowed') as paste_allowed,
              JSON_EXTRACT(detail.Properties, '$.PrintAllowed') as print_allowed,
              JSON_EXTRACT(detail.Properties, '$.UploadAllowed') as upload_allowed,
              JSON_EXTRACT(detail.Properties, '$.UserSettingsArn') as user_settings_arn,
              JSON_EXTRACT(detail.Properties, '$.DeepLinkAllowed') as deep_link_allowed
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
              AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AdditionalEncryptionContext') as additional_encryption_context,
                json_extract_path_text(detail.Properties, 'AssociatedPortalArns') as associated_portal_arns,
                json_extract_path_text(detail.Properties, 'CookieSynchronizationConfiguration') as cookie_synchronization_configuration,
                json_extract_path_text(detail.Properties, 'CopyAllowed') as copy_allowed,
                json_extract_path_text(detail.Properties, 'CustomerManagedKey') as customer_managed_key,
                json_extract_path_text(detail.Properties, 'DisconnectTimeoutInMinutes') as disconnect_timeout_in_minutes,
                json_extract_path_text(detail.Properties, 'DownloadAllowed') as download_allowed,
                json_extract_path_text(detail.Properties, 'IdleDisconnectTimeoutInMinutes') as idle_disconnect_timeout_in_minutes,
                json_extract_path_text(detail.Properties, 'PasteAllowed') as paste_allowed,
                json_extract_path_text(detail.Properties, 'PrintAllowed') as print_allowed,
                json_extract_path_text(detail.Properties, 'UploadAllowed') as upload_allowed,
                json_extract_path_text(detail.Properties, 'UserSettingsArn') as user_settings_arn,
                json_extract_path_text(detail.Properties, 'DeepLinkAllowed') as deep_link_allowed
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                AND detail.data__TypeName = 'AWS::WorkSpacesWeb::UserSettings'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__BrowserSettings&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateBrowserSettings
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateBrowserSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataProtectionSettings&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataProtectionSettings
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataProtectionSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IdentityProvider&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIdentityProvider
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIdentityProviderRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IpAccessSettings&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIpAccessSettings
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIpAccessSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__NetworkSettings&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateNetworkSettings
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateNetworkSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Portal&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePortal
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePortalRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__TrustStore&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTrustStore
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTrustStoreRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserAccessLoggingSettings&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserAccessLoggingSettings
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserAccessLoggingSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserSettings&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserSettings
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserSettingsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
