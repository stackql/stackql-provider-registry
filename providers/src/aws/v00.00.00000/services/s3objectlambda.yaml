openapi: 3.0.0
info:
  title: S3ObjectLambda
  version: 1.0.0
paths: {}
components:
  schemas:
    PublicAccessBlockConfiguration:
      type: object
      additionalProperties: false
      description: The Public Access Block Configuration is used to block policies that would allow public access to this Object lambda Access Point. All public access to Object lambda Access Points are blocked by default, and any policy that would give public access to them will be also blocked. This behavior cannot be changed for Object lambda Access Points.
      properties:
        BlockPublicAcls:
          type: boolean
          description: |-
            Specifies whether Amazon S3 should block public access control lists (ACLs) to this object lambda access point. Setting this element to TRUE causes the following behavior:
            - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
             - PUT Object calls fail if the request includes a public ACL.
            . - PUT Bucket calls fail if the request includes a public ACL.
            Enabling this setting doesn't affect existing policies or ACLs.
        IgnorePublicAcls:
          type: boolean
          description: Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
        BlockPublicPolicy:
          type: boolean
          description: Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
        RestrictPublicBuckets:
          type: boolean
          description: |-
            Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
            Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
    ObjectLambdaConfiguration:
      type: object
      additionalProperties: false
      description: Configuration to be applied to this Object lambda Access Point. It specifies Supporting Access Point, Transformation Configurations. Customers can also set if they like to enable Cloudwatch metrics for accesses to this Object lambda Access Point. Default setting for Cloudwatch metrics is disable.
      properties:
        SupportingAccessPoint:
          type: string
          minLength: 1
          maxLength: 2048
        AllowedFeatures:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            type: string
        CloudWatchMetricsEnabled:
          type: boolean
        TransformationConfigurations:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TransformationConfiguration'
      required:
        - SupportingAccessPoint
        - TransformationConfigurations
    TransformationConfiguration:
      type: object
      additionalProperties: false
      description: Configuration to define what content transformation will be applied on which S3 Action.
      properties:
        Actions:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Action'
        ContentTransformation:
          type: object
          oneOf:
            - additionalProperties: false
              properties:
                AwsLambda:
                  $ref: '#/components/schemas/AwsLambda'
              required:
                - AwsLambda
      required:
        - Actions
        - ContentTransformation
    AwsLambda:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
          minLength: 1
          maxLength: 2048
        FunctionPayload:
          type: string
      required:
        - FunctionArn
    Action:
      type: string
    AccessPoint:
      type: object
      properties:
        Name:
          description: The name you want to assign to this Object lambda Access Point.
          type: string
          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
          minLength: 3
          maxLength: 45
        Alias:
          type: object
          additionalProperties: false
          properties:
            Status:
              type: string
              description: The status of the Object Lambda alias.
              pattern: ^[A-Z]*$
            Value:
              type: string
              description: The value of the Object Lambda alias.
              pattern: ^[a-z0-9\-]*$
        Arn:
          type: string
          pattern: arn:[^:]+:s3-object-lambda:[^:]*:\d{12}:accesspoint/.*
        CreationDate:
          description: The date and time when the Object lambda Access Point was created.
          type: string
        PublicAccessBlockConfiguration:
          description: The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
        PolicyStatus:
          type: object
          additionalProperties: false
          properties:
            IsPublic:
              type: boolean
              description: Specifies whether the Object lambda Access Point Policy is Public or not. Object lambda Access Points are private by default.
        ObjectLambdaConfiguration:
          description: The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified S3 Actions
          $ref: '#/components/schemas/ObjectLambdaConfiguration'
      required:
        - ObjectLambdaConfiguration
      x-stackql-resource-name: access_point
      x-stackql-primaryIdentifier:
        - Name
    AccessPointPolicy:
      type: object
      properties:
        ObjectLambdaAccessPoint:
          description: The name of the Amazon S3 ObjectLambdaAccessPoint to which the policy applies.
          type: string
          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
          minLength: 3
          maxLength: 45
        PolicyDocument:
          description: 'A policy document containing permissions to add to the specified ObjectLambdaAccessPoint. For more information, see Access Policy Language Overview (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html) in the Amazon Simple Storage Service Developer Guide. '
          type: object
      required:
        - ObjectLambdaAccessPoint
        - PolicyDocument
      x-stackql-resource-name: access_point_policy
      x-stackql-primaryIdentifier:
        - ObjectLambdaAccessPoint
  x-stackQL-resources:
    access_points:
      name: access_points
      id: aws.s3objectlambda.access_points
      x-cfn-schema-name: AccessPoint
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
    access_point:
      name: access_point
      id: aws.s3objectlambda.access_point
      x-cfn-schema-name: AccessPoint
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.PublicAccessBlockConfiguration.BlockPublicAcls') as public_access_block_configuration_block_public_acls,
              JSON_EXTRACT(Properties, '$.PublicAccessBlockConfiguration.IgnorePublicAcls') as public_access_block_configuration_ignore_public_acls,
              JSON_EXTRACT(Properties, '$.PublicAccessBlockConfiguration.BlockPublicPolicy') as public_access_block_configuration_block_public_policy,
              JSON_EXTRACT(Properties, '$.PublicAccessBlockConfiguration.RestrictPublicBuckets') as public_access_block_configuration_restrict_public_buckets,
              JSON_EXTRACT(Properties, '$.PolicyStatus') as policy_status,
              JSON_EXTRACT(Properties, '$.ObjectLambdaConfiguration.SupportingAccessPoint') as object_lambda_configuration_supporting_access_point,
              JSON_EXTRACT(Properties, '$.ObjectLambdaConfiguration.AllowedFeatures') as object_lambda_configuration_allowed_features,
              JSON_EXTRACT(Properties, '$.ObjectLambdaConfiguration.CloudWatchMetricsEnabled') as object_lambda_configuration_cloud_watch_metrics_enabled,
              JSON_EXTRACT(Properties, '$.ObjectLambdaConfiguration.TransformationConfigurations') as object_lambda_configuration_transformation_configurations
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
    access_point_policies:
      name: access_point_policies
      id: aws.s3objectlambda.access_point_policies
      x-cfn-schema-name: AccessPointPolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ObjectLambdaAccessPoint') as object_lambda_access_point
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPointPolicy'
    access_point_policy:
      name: access_point_policy
      id: aws.s3objectlambda.access_point_policy
      x-cfn-schema-name: AccessPointPolicy
      x-type: get
      x-identifiers:
        - ObjectLambdaAccessPoint
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ObjectLambdaAccessPoint') as object_lambda_access_point,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPointPolicy'
