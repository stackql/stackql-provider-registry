openapi: 3.0.0
info:
  title: S3ObjectLambda
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    PublicAccessBlockConfiguration:
      type: object
      additionalProperties: false
      description: The Public Access Block Configuration is used to block policies that would allow public access to this Object lambda Access Point. All public access to Object lambda Access Points are blocked by default, and any policy that would give public access to them will be also blocked. This behavior cannot be changed for Object lambda Access Points.
      properties:
        BlockPublicAcls:
          type: boolean
          description: |-
            Specifies whether Amazon S3 should block public access control lists (ACLs) to this object lambda access point. Setting this element to TRUE causes the following behavior:
            - PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
             - PUT Object calls fail if the request includes a public ACL.
            . - PUT Bucket calls fail if the request includes a public ACL.
            Enabling this setting doesn't affect existing policies or ACLs.
        IgnorePublicAcls:
          type: boolean
          description: Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on buckets in this account and any objects that they contain. Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.
        BlockPublicPolicy:
          type: boolean
          description: Specifies whether Amazon S3 should block public bucket policies for buckets in this account. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access. Enabling this setting doesn't affect existing bucket policies.
        RestrictPublicBuckets:
          type: boolean
          description: |-
            Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.
            Enabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.
    ObjectLambdaConfiguration:
      type: object
      additionalProperties: false
      description: Configuration to be applied to this Object lambda Access Point. It specifies Supporting Access Point, Transformation Configurations. Customers can also set if they like to enable Cloudwatch metrics for accesses to this Object lambda Access Point. Default setting for Cloudwatch metrics is disable.
      properties:
        SupportingAccessPoint:
          type: string
          minLength: 1
          maxLength: 2048
        AllowedFeatures:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            type: string
        CloudWatchMetricsEnabled:
          type: boolean
        TransformationConfigurations:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TransformationConfiguration'
      required:
        - SupportingAccessPoint
        - TransformationConfigurations
    TransformationConfiguration:
      type: object
      additionalProperties: false
      description: Configuration to define what content transformation will be applied on which S3 Action.
      properties:
        Actions:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Action'
        ContentTransformation:
          type: object
          oneOf:
            - additionalProperties: false
              properties:
                AwsLambda:
                  $ref: '#/components/schemas/AwsLambda'
              required:
                - AwsLambda
      required:
        - Actions
        - ContentTransformation
    AwsLambda:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
          minLength: 1
          maxLength: 2048
        FunctionPayload:
          type: string
      required:
        - FunctionArn
    Action:
      type: string
    Alias:
      type: object
      additionalProperties: false
      properties:
        Status:
          type: string
          description: The status of the Object Lambda alias.
          pattern: ^[A-Z]*$
        Value:
          type: string
          description: The value of the Object Lambda alias.
          pattern: ^[a-z0-9\-]*$
      required:
        - Value
    PolicyStatus:
      type: object
      additionalProperties: false
      properties:
        IsPublic:
          type: boolean
          description: Specifies whether the Object lambda Access Point Policy is Public or not. Object lambda Access Points are private by default.
    AccessPoint:
      type: object
      properties:
        Name:
          description: The name you want to assign to this Object lambda Access Point.
          type: string
          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
          minLength: 3
          maxLength: 45
        Alias:
          $ref: '#/components/schemas/Alias'
        Arn:
          type: string
          pattern: arn:[^:]+:s3-object-lambda:[^:]*:\d{12}:accesspoint/.*
        CreationDate:
          description: The date and time when the Object lambda Access Point was created.
          type: string
        PublicAccessBlockConfiguration:
          description: The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
          $ref: '#/components/schemas/PublicAccessBlockConfiguration'
        PolicyStatus:
          $ref: '#/components/schemas/PolicyStatus'
        ObjectLambdaConfiguration:
          description: The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified S3 Actions
          $ref: '#/components/schemas/ObjectLambdaConfiguration'
      required:
        - ObjectLambdaConfiguration
      x-stackql-resource-name: access_point
      description: The AWS::S3ObjectLambda::AccessPoint resource is an Amazon S3ObjectLambda resource type that you can use to add computation to S3 actions
      x-type-name: AWS::S3ObjectLambda::AccessPoint
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - Alias
        - Alias/Value
        - Alias/Status
        - PolicyStatus
        - PolicyStatus/IsPublic
        - CreationDate
        - PublicAccessBlockConfiguration
      x-required-properties:
        - ObjectLambdaConfiguration
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - s3:CreateAccessPointForObjectLambda
          - s3:PutAccessPointConfigurationForObjectLambda
          - s3:GetAccessPointForObjectLambda
          - s3:GetAccessPointPolicyStatusForObjectLambda
          - s3:GetAccessPointConfigurationForObjectLambda
        read:
          - s3:GetAccessPointForObjectLambda
          - s3:GetAccessPointPolicyStatusForObjectLambda
          - s3:GetAccessPointConfigurationForObjectLambda
        update:
          - s3:PutAccessPointConfigurationForObjectLambda
          - s3:GetAccessPointForObjectLambda
          - s3:GetAccessPointPolicyStatusForObjectLambda
          - s3:GetAccessPointConfigurationForObjectLambda
        delete:
          - s3:DeleteAccessPointForObjectLambda
        list:
          - s3:ListAccessPointsForObjectLambda
    AccessPointPolicy:
      type: object
      properties:
        ObjectLambdaAccessPoint:
          description: The name of the Amazon S3 ObjectLambdaAccessPoint to which the policy applies.
          type: string
          pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
          minLength: 3
          maxLength: 45
        PolicyDocument:
          description: 'A policy document containing permissions to add to the specified ObjectLambdaAccessPoint. For more information, see Access Policy Language Overview (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html) in the Amazon Simple Storage Service Developer Guide. '
          type: object
      required:
        - ObjectLambdaAccessPoint
        - PolicyDocument
      x-stackql-resource-name: access_point_policy
      description: AWS::S3ObjectLambda::AccessPointPolicy resource is an Amazon S3ObjectLambda policy type that you can use to control permissions for your S3ObjectLambda
      x-type-name: AWS::S3ObjectLambda::AccessPointPolicy
      x-stackql-primary-identifier:
        - ObjectLambdaAccessPoint
      x-create-only-properties:
        - ObjectLambdaAccessPoint
      x-required-properties:
        - ObjectLambdaAccessPoint
        - PolicyDocument
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - s3:PutAccessPointPolicyForObjectLambda
          - s3:GetAccessPointPolicyForObjectLambda
        read:
          - s3:GetAccessPointPolicyForObjectLambda
        update:
          - s3:PutAccessPointPolicyForObjectLambda
          - s3:GetAccessPointPolicyForObjectLambda
        delete:
          - s3:DeleteAccessPointPolicyForObjectLambda
          - s3:GetAccessPointPolicyForObjectLambda
    CreateAccessPointRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name you want to assign to this Object lambda Access Point.
              type: string
              pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
              minLength: 3
              maxLength: 45
            Alias:
              $ref: '#/components/schemas/Alias'
            Arn:
              type: string
              pattern: arn:[^:]+:s3-object-lambda:[^:]*:\d{12}:accesspoint/.*
            CreationDate:
              description: The date and time when the Object lambda Access Point was created.
              type: string
            PublicAccessBlockConfiguration:
              description: The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
              $ref: '#/components/schemas/PublicAccessBlockConfiguration'
            PolicyStatus:
              $ref: '#/components/schemas/PolicyStatus'
            ObjectLambdaConfiguration:
              description: The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified S3 Actions
              $ref: '#/components/schemas/ObjectLambdaConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateAccessPointRequest
      type: object
      required: []
    CreateAccessPointPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ObjectLambdaAccessPoint:
              description: The name of the Amazon S3 ObjectLambdaAccessPoint to which the policy applies.
              type: string
              pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
              minLength: 3
              maxLength: 45
            PolicyDocument:
              description: 'A policy document containing permissions to add to the specified ObjectLambdaAccessPoint. For more information, see Access Policy Language Overview (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-policy-language-overview.html) in the Amazon Simple Storage Service Developer Guide. '
              type: object
          x-stackQL-stringOnly: true
      x-title: CreateAccessPointPolicyRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    access_points:
      name: access_points
      id: aws.s3objectlambda.access_points
      x-cfn-schema-name: AccessPoint
      x-cfn-type-name: AWS::S3ObjectLambda::AccessPoint
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AccessPoint&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3ObjectLambda::AccessPoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3ObjectLambda::AccessPoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3ObjectLambda::AccessPoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.PublicAccessBlockConfiguration') as public_access_block_configuration,
              JSON_EXTRACT(Properties, '$.PolicyStatus') as policy_status,
              JSON_EXTRACT(Properties, '$.ObjectLambdaConfiguration') as object_lambda_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Alias') as alias,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
                JSON_EXTRACT(detail.Properties, '$.PublicAccessBlockConfiguration') as public_access_block_configuration,
                JSON_EXTRACT(detail.Properties, '$.PolicyStatus') as policy_status,
                JSON_EXTRACT(detail.Properties, '$.ObjectLambdaConfiguration') as object_lambda_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
                AND detail.data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Alias') as alias,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationDate') as creation_date,
                  json_extract_path_text(Properties, 'PublicAccessBlockConfiguration') as public_access_block_configuration,
                  json_extract_path_text(Properties, 'PolicyStatus') as policy_status,
                  json_extract_path_text(Properties, 'ObjectLambdaConfiguration') as object_lambda_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Alias') as alias,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                    json_extract_path_text(detail.Properties, 'PublicAccessBlockConfiguration') as public_access_block_configuration,
                    json_extract_path_text(detail.Properties, 'PolicyStatus') as policy_status,
                    json_extract_path_text(detail.Properties, 'ObjectLambdaConfiguration') as object_lambda_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
                    AND detail.data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
                    AND listing.region = 'us-east-1'
    access_points_list_only:
      name: access_points_list_only
      id: aws.s3objectlambda.access_points_list_only
      x-cfn-schema-name: AccessPoint
      x-cfn-type-name: AWS::S3ObjectLambda::AccessPoint
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPoint'
                AND region = 'us-east-1'
    access_point_policies:
      name: access_point_policies
      id: aws.s3objectlambda.access_point_policies
      x-cfn-schema-name: AccessPointPolicy
      x-cfn-type-name: AWS::S3ObjectLambda::AccessPointPolicy
      x-identifiers:
        - ObjectLambdaAccessPoint
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AccessPointPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3ObjectLambda::AccessPointPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3ObjectLambda::AccessPointPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3ObjectLambda::AccessPointPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/access_point_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/access_point_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/access_point_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ObjectLambdaAccessPoint') as object_lambda_access_point,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPointPolicy'
              AND data__Identifier = '<ObjectLambdaAccessPoint>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ObjectLambdaAccessPoint') as object_lambda_access_point,
                json_extract_path_text(Properties, 'PolicyDocument') as policy_document
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3ObjectLambda::AccessPointPolicy'
                AND data__Identifier = '<ObjectLambdaAccessPoint>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AccessPoint&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAccessPoint
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAccessPointRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AccessPointPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAccessPointPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAccessPointPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
