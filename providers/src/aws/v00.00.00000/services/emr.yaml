openapi: 3.0.0
info:
  title: EMR
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    SecurityConfiguration:
      type: object
      properties:
        Name:
          description: The name of the security configuration.
          type: string
        SecurityConfiguration:
          description: The security configuration details in JSON format.
          type: object
      required:
        - SecurityConfiguration
      x-stackql-resource-name: security_configuration
      description: Use a SecurityConfiguration resource to configure data encryption, Kerberos authentication, and Amazon S3 authorization for EMRFS.
      x-type-name: AWS::EMR::SecurityConfiguration
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - SecurityConfiguration
      x-required-properties:
        - SecurityConfiguration
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - elasticmapreduce:CreateSecurityConfiguration
          - elasticmapreduce:DescribeSecurityConfiguration
        read:
          - elasticmapreduce:DescribeSecurityConfiguration
        delete:
          - elasticmapreduce:DeleteSecurityConfiguration
        list:
          - elasticmapreduce:ListSecurityConfigurations
    SubnetId:
      description: Identifier of a subnet
      type: string
      pattern: ^(subnet-[a-f0-9]{13})|(subnet-[a-f0-9]{8})\Z
    Arn:
      type: string
      pattern: ^arn:aws(-(cn|us-gov|iso-f|iso-e))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
    Tags:
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/Tag'
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Studio:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the EMR Studio.
          $ref: '#/components/schemas/Arn'
        AuthMode:
          type: string
          description: Specifies whether the Studio authenticates users using single sign-on (SSO) or IAM. Amazon EMR Studio currently only supports SSO authentication.
          enum:
            - SSO
            - IAM
        DefaultS3Location:
          description: The default Amazon S3 location to back up EMR Studio Workspaces and notebook files. A Studio user can select an alternative Amazon S3 location when creating a Workspace.
          type: string
          minLength: 6
          maxLength: 10280
          pattern: ^s3://.*
        Description:
          description: A detailed description of the Studio.
          type: string
          minLength: 0
          maxLength: 256
        EngineSecurityGroupId:
          description: The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId.
          type: string
          minLength: 4
          maxLength: 256
          pattern: ^sg-[a-zA-Z0-9\-._]+$
        Name:
          description: A descriptive name for the Amazon EMR Studio.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z0-9_-]+'
        ServiceRole:
          description: The IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other AWS services.
          $ref: '#/components/schemas/Arn'
        StudioId:
          description: The ID of the EMR Studio.
          type: string
          pattern: ^es-[0-9A-Z]+
          minLength: 4
          maxLength: 256
        SubnetIds:
          description: A list of up to 5 subnet IDs to associate with the Studio. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/SubnetId'
        Tags:
          description: A list of tags to associate with the Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.
          $ref: '#/components/schemas/Tags'
        Url:
          description: The unique Studio access URL.
          type: string
          pattern: ^https://[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])(:[0-9]*)*([?/#].*)?$
          maxLength: 4096
        UserRole:
          description: The IAM user role that will be assumed by users and groups logged in to a Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies.
          $ref: '#/components/schemas/Arn'
        VpcId:
          description: The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
          type: string
          pattern: ^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$
        WorkspaceSecurityGroupId:
          description: The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by VpcId.
          type: string
          pattern: ^sg-[a-zA-Z0-9\-._]+$
        IdpAuthUrl:
          description: Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.
          type: string
          pattern: ^https://[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])(:[0-9]*)*([?/#].*)?$
          maxLength: 4096
        IdpRelayStateParameterName:
          description: The name of relay state parameter for external Identity Provider.
          type: string
          minLength: 0
          maxLength: 256
        TrustedIdentityPropagationEnabled:
          description: A Boolean indicating whether to enable Trusted identity propagation for the Studio. The default value is false.
          type: boolean
        IdcUserAssignment:
          description: Specifies whether IAM Identity Center user assignment is REQUIRED or OPTIONAL. If the value is set to REQUIRED, users must be explicitly assigned to the Studio application to access the Studio.
          type: string
          enum:
            - REQUIRED
            - OPTIONAL
        IdcInstanceArn:
          description: The ARN of the IAM Identity Center instance to create the Studio application.
          type: string
          minLength: 20
          maxLength: 2048
        EncryptionKeyArn:
          description: The AWS KMS key identifier (ARN) used to encrypt AWS EMR Studio workspace and notebook files when backed up to AWS S3.
          $ref: '#/components/schemas/Arn'
      required:
        - AuthMode
        - EngineSecurityGroupId
        - Name
        - ServiceRole
        - SubnetIds
        - VpcId
        - WorkspaceSecurityGroupId
        - DefaultS3Location
      x-stackql-resource-name: studio
      description: Resource schema for AWS::EMR::Studio
      x-type-name: AWS::EMR::Studio
      x-documentation-url: https://docs.aws.amazon.com/emr/latest/APIReference/API_CreateStudio.html
      x-stackql-primary-identifier:
        - StudioId
      x-create-only-properties:
        - AuthMode
        - EngineSecurityGroupId
        - ServiceRole
        - UserRole
        - VpcId
        - WorkspaceSecurityGroupId
        - TrustedIdentityPropagationEnabled
        - IdcUserAssignment
        - IdcInstanceArn
        - EncryptionKeyArn
      x-read-only-properties:
        - StudioId
        - Arn
        - Url
      x-required-properties:
        - AuthMode
        - EngineSecurityGroupId
        - Name
        - ServiceRole
        - SubnetIds
        - VpcId
        - WorkspaceSecurityGroupId
        - DefaultS3Location
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - elasticmapreduce:CreateStudio
          - elasticmapreduce:DescribeStudio
          - elasticmapreduce:AddTags
          - sso:CreateManagedApplicationInstance
          - sso:DeleteManagedApplicationInstance
          - iam:PassRole
        read:
          - elasticmapreduce:DescribeStudio
          - sso:GetManagedApplicationInstance
        update:
          - elasticmapreduce:UpdateStudio
          - elasticmapreduce:DescribeStudio
          - elasticmapreduce:AddTags
          - elasticmapreduce:RemoveTags
        delete:
          - elasticmapreduce:DeleteStudio
          - elasticmapreduce:DescribeStudio
          - sso:DeleteManagedApplicationInstance
        list:
          - elasticmapreduce:ListStudios
    IamPolicyArn:
      type: string
      pattern: ^arn:aws(-(cn|us-gov|iso-f|iso-e))?:iam::([0-9]{12})?:policy\/[^.]+$
    StudioSessionMapping:
      type: object
      properties:
        IdentityName:
          type: string
          description: The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified.
        IdentityType:
          type: string
          description: Specifies whether the identity to map to the Studio is a user or a group.
          enum:
            - USER
            - GROUP
        SessionPolicyArn:
          description: The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles.
          $ref: '#/components/schemas/IamPolicyArn'
        StudioId:
          description: The ID of the Amazon EMR Studio to which the user or group will be mapped.
          type: string
          pattern: ^es-[0-9A-Z]+
          minLength: 4
          maxLength: 256
      required:
        - StudioId
        - IdentityName
        - IdentityType
        - SessionPolicyArn
      x-stackql-resource-name: studio_session_mapping
      description: An example resource schema demonstrating some basic constructs and validation rules.
      x-type-name: AWS::EMR::StudioSessionMapping
      x-documentation-url: https://docs.aws.amazon.com/cli/latest/reference/emr/create-studio-session-mapping.html
      x-stackql-primary-identifier:
        - StudioId
        - IdentityType
        - IdentityName
      x-create-only-properties:
        - StudioId
        - IdentityType
        - IdentityName
      x-required-properties:
        - StudioId
        - IdentityName
        - IdentityType
        - SessionPolicyArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - elasticmapreduce:CreateStudioSessionMapping
          - sso-directory:SearchUsers
          - sso-directory:SearchGroups
          - sso-directory:DescribeUser
          - sso-directory:DescribeGroup
          - sso:GetManagedApplicationInstance
          - sso:ListDirectoryAssociations
          - sso:GetProfile
          - sso:ListProfiles
          - sso:AssociateProfile
          - sso:CreateApplication
          - sso:PutApplicationAuthenticationMethod
          - sso:PutApplicationGrant
          - sso:PutApplicationAccessScope
          - sso:PutApplicationAssignmentConfiguration
          - sso:DescribeApplication
          - sso:DeleteApplication
          - sso:DeleteApplicationAuthenticationMethod
          - sso:DeleteApplicationAccessScope
          - sso:DeleteApplicationGrant
          - sso:ListInstances
          - sso-directory:CreateUser
          - sso-directory:CreateGroup
          - sso:CreateApplicationAssignment
          - sso:DescribeInstance
          - sso:DeleteApplicationAssignment
          - sso:ListApplicationAssignments
        read:
          - elasticmapreduce:GetStudioSessionMapping
          - sso-directory:SearchUsers
          - sso-directory:SearchGroups
          - sso-directory:DescribeUser
          - sso-directory:DescribeGroup
          - sso:GetManagedApplicationInstance
          - sso:DescribeInstance
        update:
          - elasticmapreduce:GetStudioSessionMapping
          - elasticmapreduce:UpdateStudioSessionMapping
          - sso-directory:SearchUsers
          - sso-directory:SearchGroups
          - sso-directory:DescribeUser
          - sso-directory:DescribeGroup
          - sso:GetManagedApplicationInstance
          - sso:DescribeInstance
        delete:
          - elasticmapreduce:GetStudioSessionMapping
          - elasticmapreduce:DeleteStudioSessionMapping
          - sso-directory:SearchUsers
          - sso-directory:SearchGroups
          - sso-directory:DescribeUser
          - sso-directory:DescribeGroup
          - sso:GetManagedApplicationInstance
          - sso:DescribeInstance
          - sso:ListDirectoryAssociations
          - sso:GetProfile
          - sso:ListProfiles
          - sso:DisassociateProfile
        list:
          - elasticmapreduce:ListStudioSessionMappings
    WALWorkspace:
      type: object
      properties:
        WALWorkspaceName:
          description: The name of the emrwal container
          type: string
          minLength: 1
          maxLength: 32
          pattern: ^[a-zA-Z0-9]+$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: wal_workspace
      description: Resource schema for AWS::EMR::WALWorkspace Type
      x-type-name: AWS::EMR::WALWorkspace
      x-stackql-primary-identifier:
        - WALWorkspaceName
      x-create-only-properties:
        - WALWorkspaceName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - emrwal:TagResource
          - emrwal:UntagResource
          - emrwal:ListTagsForResource
      x-required-permissions:
        create:
          - emrwal:CreateWorkspace
          - emrwal:TagResource
          - iam:CreateServiceLinkedRole
        read:
          - emrwal:ListTagsForResource
        delete:
          - emrwal:DeleteWorkspace
        list:
          - emrwal:ListWorkspaces
        update:
          - emrwal:TagResource
          - emrwal:UntagResource
          - emrwal:ListTagsForResource
    CreateSecurityConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the security configuration.
              type: string
            SecurityConfiguration:
              description: The security configuration details in JSON format.
              type: object
          x-stackQL-stringOnly: true
      x-title: CreateSecurityConfigurationRequest
      type: object
      required: []
    CreateStudioRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the EMR Studio.
              $ref: '#/components/schemas/Arn'
            AuthMode:
              type: string
              description: Specifies whether the Studio authenticates users using single sign-on (SSO) or IAM. Amazon EMR Studio currently only supports SSO authentication.
              enum:
                - SSO
                - IAM
            DefaultS3Location:
              description: The default Amazon S3 location to back up EMR Studio Workspaces and notebook files. A Studio user can select an alternative Amazon S3 location when creating a Workspace.
              type: string
              minLength: 6
              maxLength: 10280
              pattern: ^s3://.*
            Description:
              description: A detailed description of the Studio.
              type: string
              minLength: 0
              maxLength: 256
            EngineSecurityGroupId:
              description: The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId.
              type: string
              minLength: 4
              maxLength: 256
              pattern: ^sg-[a-zA-Z0-9\-._]+$
            Name:
              description: A descriptive name for the Amazon EMR Studio.
              type: string
              minLength: 1
              maxLength: 256
              pattern: '[a-zA-Z0-9_-]+'
            ServiceRole:
              description: The IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other AWS services.
              $ref: '#/components/schemas/Arn'
            StudioId:
              description: The ID of the EMR Studio.
              type: string
              pattern: ^es-[0-9A-Z]+
              minLength: 4
              maxLength: 256
            SubnetIds:
              description: A list of up to 5 subnet IDs to associate with the Studio. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets.
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/SubnetId'
            Tags:
              description: A list of tags to associate with the Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.
              $ref: '#/components/schemas/Tags'
            Url:
              description: The unique Studio access URL.
              type: string
              pattern: ^https://[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])(:[0-9]*)*([?/#].*)?$
              maxLength: 4096
            UserRole:
              description: The IAM user role that will be assumed by users and groups logged in to a Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies.
              $ref: '#/components/schemas/Arn'
            VpcId:
              description: The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
              type: string
              pattern: ^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$
            WorkspaceSecurityGroupId:
              description: The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by VpcId.
              type: string
              pattern: ^sg-[a-zA-Z0-9\-._]+$
            IdpAuthUrl:
              description: Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.
              type: string
              pattern: ^https://[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])(:[0-9]*)*([?/#].*)?$
              maxLength: 4096
            IdpRelayStateParameterName:
              description: The name of relay state parameter for external Identity Provider.
              type: string
              minLength: 0
              maxLength: 256
            TrustedIdentityPropagationEnabled:
              description: A Boolean indicating whether to enable Trusted identity propagation for the Studio. The default value is false.
              type: boolean
            IdcUserAssignment:
              description: Specifies whether IAM Identity Center user assignment is REQUIRED or OPTIONAL. If the value is set to REQUIRED, users must be explicitly assigned to the Studio application to access the Studio.
              type: string
              enum:
                - REQUIRED
                - OPTIONAL
            IdcInstanceArn:
              description: The ARN of the IAM Identity Center instance to create the Studio application.
              type: string
              minLength: 20
              maxLength: 2048
            EncryptionKeyArn:
              description: The AWS KMS key identifier (ARN) used to encrypt AWS EMR Studio workspace and notebook files when backed up to AWS S3.
              $ref: '#/components/schemas/Arn'
          x-stackQL-stringOnly: true
      x-title: CreateStudioRequest
      type: object
      required: []
    CreateStudioSessionMappingRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IdentityName:
              type: string
              description: The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified.
            IdentityType:
              type: string
              description: Specifies whether the identity to map to the Studio is a user or a group.
              enum:
                - USER
                - GROUP
            SessionPolicyArn:
              description: The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles.
              $ref: '#/components/schemas/IamPolicyArn'
            StudioId:
              description: The ID of the Amazon EMR Studio to which the user or group will be mapped.
              type: string
              pattern: ^es-[0-9A-Z]+
              minLength: 4
              maxLength: 256
          x-stackQL-stringOnly: true
      x-title: CreateStudioSessionMappingRequest
      type: object
      required: []
    CreateWALWorkspaceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            WALWorkspaceName:
              description: The name of the emrwal container
              type: string
              minLength: 1
              maxLength: 32
              pattern: ^[a-zA-Z0-9]+$
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateWALWorkspaceRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    security_configurations:
      name: security_configurations
      id: aws.emr.security_configurations
      x-cfn-schema-name: SecurityConfiguration
      x-cfn-type-name: AWS::EMR::SecurityConfiguration
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SecurityConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::SecurityConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::SecurityConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/security_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/security_configurations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SecurityConfiguration') as security_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::SecurityConfiguration'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SecurityConfiguration') as security_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::EMR::SecurityConfiguration'
                AND detail.data__TypeName = 'AWS::EMR::SecurityConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SecurityConfiguration') as security_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::SecurityConfiguration'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SecurityConfiguration') as security_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::EMR::SecurityConfiguration'
                    AND detail.data__TypeName = 'AWS::EMR::SecurityConfiguration'
                    AND listing.region = 'us-east-1'
    security_configurations_list_only:
      name: security_configurations_list_only
      id: aws.emr.security_configurations_list_only
      x-cfn-schema-name: SecurityConfiguration
      x-cfn-type-name: AWS::EMR::SecurityConfiguration
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::SecurityConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::SecurityConfiguration'
                AND region = 'us-east-1'
    studios:
      name: studios
      id: aws.emr.studios
      x-cfn-schema-name: Studio
      x-cfn-type-name: AWS::EMR::Studio
      x-identifiers:
        - StudioId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Studio&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::Studio"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::Studio"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::Studio"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/studios/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/studios/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/studios/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AuthMode') as auth_mode,
              JSON_EXTRACT(Properties, '$.DefaultS3Location') as default_s3_location,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EngineSecurityGroupId') as engine_security_group_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Url') as url,
              JSON_EXTRACT(Properties, '$.UserRole') as user_role,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.WorkspaceSecurityGroupId') as workspace_security_group_id,
              JSON_EXTRACT(Properties, '$.IdpAuthUrl') as idp_auth_url,
              JSON_EXTRACT(Properties, '$.IdpRelayStateParameterName') as idp_relay_state_parameter_name,
              JSON_EXTRACT(Properties, '$.TrustedIdentityPropagationEnabled') as trusted_identity_propagation_enabled,
              JSON_EXTRACT(Properties, '$.IdcUserAssignment') as idc_user_assignment,
              JSON_EXTRACT(Properties, '$.IdcInstanceArn') as idc_instance_arn,
              JSON_EXTRACT(Properties, '$.EncryptionKeyArn') as encryption_key_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::Studio'
              AND data__Identifier = '<StudioId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AuthMode') as auth_mode,
                JSON_EXTRACT(detail.Properties, '$.DefaultS3Location') as default_s3_location,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EngineSecurityGroupId') as engine_security_group_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ServiceRole') as service_role,
                JSON_EXTRACT(detail.Properties, '$.StudioId') as studio_id,
                JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Url') as url,
                JSON_EXTRACT(detail.Properties, '$.UserRole') as user_role,
                JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id,
                JSON_EXTRACT(detail.Properties, '$.WorkspaceSecurityGroupId') as workspace_security_group_id,
                JSON_EXTRACT(detail.Properties, '$.IdpAuthUrl') as idp_auth_url,
                JSON_EXTRACT(detail.Properties, '$.IdpRelayStateParameterName') as idp_relay_state_parameter_name,
                JSON_EXTRACT(detail.Properties, '$.TrustedIdentityPropagationEnabled') as trusted_identity_propagation_enabled,
                JSON_EXTRACT(detail.Properties, '$.IdcUserAssignment') as idc_user_assignment,
                JSON_EXTRACT(detail.Properties, '$.IdcInstanceArn') as idc_instance_arn,
                JSON_EXTRACT(detail.Properties, '$.EncryptionKeyArn') as encryption_key_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::EMR::Studio'
                AND detail.data__TypeName = 'AWS::EMR::Studio'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AuthMode') as auth_mode,
                  json_extract_path_text(Properties, 'DefaultS3Location') as default_s3_location,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EngineSecurityGroupId') as engine_security_group_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ServiceRole') as service_role,
                  json_extract_path_text(Properties, 'StudioId') as studio_id,
                  json_extract_path_text(Properties, 'SubnetIds') as subnet_ids,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Url') as url,
                  json_extract_path_text(Properties, 'UserRole') as user_role,
                  json_extract_path_text(Properties, 'VpcId') as vpc_id,
                  json_extract_path_text(Properties, 'WorkspaceSecurityGroupId') as workspace_security_group_id,
                  json_extract_path_text(Properties, 'IdpAuthUrl') as idp_auth_url,
                  json_extract_path_text(Properties, 'IdpRelayStateParameterName') as idp_relay_state_parameter_name,
                  json_extract_path_text(Properties, 'TrustedIdentityPropagationEnabled') as trusted_identity_propagation_enabled,
                  json_extract_path_text(Properties, 'IdcUserAssignment') as idc_user_assignment,
                  json_extract_path_text(Properties, 'IdcInstanceArn') as idc_instance_arn,
                  json_extract_path_text(Properties, 'EncryptionKeyArn') as encryption_key_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::Studio'
                  AND data__Identifier = '<StudioId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AuthMode') as auth_mode,
                    json_extract_path_text(detail.Properties, 'DefaultS3Location') as default_s3_location,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EngineSecurityGroupId') as engine_security_group_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ServiceRole') as service_role,
                    json_extract_path_text(detail.Properties, 'StudioId') as studio_id,
                    json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Url') as url,
                    json_extract_path_text(detail.Properties, 'UserRole') as user_role,
                    json_extract_path_text(detail.Properties, 'VpcId') as vpc_id,
                    json_extract_path_text(detail.Properties, 'WorkspaceSecurityGroupId') as workspace_security_group_id,
                    json_extract_path_text(detail.Properties, 'IdpAuthUrl') as idp_auth_url,
                    json_extract_path_text(detail.Properties, 'IdpRelayStateParameterName') as idp_relay_state_parameter_name,
                    json_extract_path_text(detail.Properties, 'TrustedIdentityPropagationEnabled') as trusted_identity_propagation_enabled,
                    json_extract_path_text(detail.Properties, 'IdcUserAssignment') as idc_user_assignment,
                    json_extract_path_text(detail.Properties, 'IdcInstanceArn') as idc_instance_arn,
                    json_extract_path_text(detail.Properties, 'EncryptionKeyArn') as encryption_key_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::EMR::Studio'
                    AND detail.data__TypeName = 'AWS::EMR::Studio'
                    AND listing.region = 'us-east-1'
    studios_list_only:
      name: studios_list_only
      id: aws.emr.studios_list_only
      x-cfn-schema-name: Studio
      x-cfn-type-name: AWS::EMR::Studio
      x-identifiers:
        - StudioId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::Studio'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'StudioId') as studio_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::Studio'
                AND region = 'us-east-1'
    studio_tags:
      name: studio_tags
      id: aws.emr.studio_tags
      x-cfn-schema-name: Studio
      x-cfn-type-name: AWS::EMR::Studio
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.AuthMode') as auth_mode,
              JSON_EXTRACT(detail.Properties, '$.DefaultS3Location') as default_s3_location,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EngineSecurityGroupId') as engine_security_group_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(detail.Properties, '$.StudioId') as studio_id,
              JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(detail.Properties, '$.Url') as url,
              JSON_EXTRACT(detail.Properties, '$.UserRole') as user_role,
              JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(detail.Properties, '$.WorkspaceSecurityGroupId') as workspace_security_group_id,
              JSON_EXTRACT(detail.Properties, '$.IdpAuthUrl') as idp_auth_url,
              JSON_EXTRACT(detail.Properties, '$.IdpRelayStateParameterName') as idp_relay_state_parameter_name,
              JSON_EXTRACT(detail.Properties, '$.TrustedIdentityPropagationEnabled') as trusted_identity_propagation_enabled,
              JSON_EXTRACT(detail.Properties, '$.IdcUserAssignment') as idc_user_assignment,
              JSON_EXTRACT(detail.Properties, '$.IdcInstanceArn') as idc_instance_arn,
              JSON_EXTRACT(detail.Properties, '$.EncryptionKeyArn') as encryption_key_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::EMR::Studio'
              AND detail.data__TypeName = 'AWS::EMR::Studio'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'AuthMode') as auth_mode,
                json_extract_path_text(detail.Properties, 'DefaultS3Location') as default_s3_location,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EngineSecurityGroupId') as engine_security_group_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ServiceRole') as service_role,
                json_extract_path_text(detail.Properties, 'StudioId') as studio_id,
                json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids,
                json_extract_path_text(detail.Properties, 'Url') as url,
                json_extract_path_text(detail.Properties, 'UserRole') as user_role,
                json_extract_path_text(detail.Properties, 'VpcId') as vpc_id,
                json_extract_path_text(detail.Properties, 'WorkspaceSecurityGroupId') as workspace_security_group_id,
                json_extract_path_text(detail.Properties, 'IdpAuthUrl') as idp_auth_url,
                json_extract_path_text(detail.Properties, 'IdpRelayStateParameterName') as idp_relay_state_parameter_name,
                json_extract_path_text(detail.Properties, 'TrustedIdentityPropagationEnabled') as trusted_identity_propagation_enabled,
                json_extract_path_text(detail.Properties, 'IdcUserAssignment') as idc_user_assignment,
                json_extract_path_text(detail.Properties, 'IdcInstanceArn') as idc_instance_arn,
                json_extract_path_text(detail.Properties, 'EncryptionKeyArn') as encryption_key_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::EMR::Studio'
                AND detail.data__TypeName = 'AWS::EMR::Studio'
                AND listing.region = 'us-east-1'
    studio_session_mappings:
      name: studio_session_mappings
      id: aws.emr.studio_session_mappings
      x-cfn-schema-name: StudioSessionMapping
      x-cfn-type-name: AWS::EMR::StudioSessionMapping
      x-identifiers:
        - StudioId
        - IdentityType
        - IdentityName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__StudioSessionMapping&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::StudioSessionMapping"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::StudioSessionMapping"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::StudioSessionMapping"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/studio_session_mappings/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/studio_session_mappings/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/studio_session_mappings/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IdentityName') as identity_name,
              JSON_EXTRACT(Properties, '$.IdentityType') as identity_type,
              JSON_EXTRACT(Properties, '$.SessionPolicyArn') as session_policy_arn,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::StudioSessionMapping'
              AND data__Identifier = '<StudioId>|<IdentityType>|<IdentityName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IdentityName') as identity_name,
                JSON_EXTRACT(detail.Properties, '$.IdentityType') as identity_type,
                JSON_EXTRACT(detail.Properties, '$.SessionPolicyArn') as session_policy_arn,
                JSON_EXTRACT(detail.Properties, '$.StudioId') as studio_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::EMR::StudioSessionMapping'
                AND detail.data__TypeName = 'AWS::EMR::StudioSessionMapping'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IdentityName') as identity_name,
                  json_extract_path_text(Properties, 'IdentityType') as identity_type,
                  json_extract_path_text(Properties, 'SessionPolicyArn') as session_policy_arn,
                  json_extract_path_text(Properties, 'StudioId') as studio_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::StudioSessionMapping'
                  AND data__Identifier = '<StudioId>|<IdentityType>|<IdentityName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IdentityName') as identity_name,
                    json_extract_path_text(detail.Properties, 'IdentityType') as identity_type,
                    json_extract_path_text(detail.Properties, 'SessionPolicyArn') as session_policy_arn,
                    json_extract_path_text(detail.Properties, 'StudioId') as studio_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::EMR::StudioSessionMapping'
                    AND detail.data__TypeName = 'AWS::EMR::StudioSessionMapping'
                    AND listing.region = 'us-east-1'
    studio_session_mappings_list_only:
      name: studio_session_mappings_list_only
      id: aws.emr.studio_session_mappings_list_only
      x-cfn-schema-name: StudioSessionMapping
      x-cfn-type-name: AWS::EMR::StudioSessionMapping
      x-identifiers:
        - StudioId
        - IdentityType
        - IdentityName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id,
              JSON_EXTRACT(Properties, '$.IdentityType') as identity_type,
              JSON_EXTRACT(Properties, '$.IdentityName') as identity_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::StudioSessionMapping'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'StudioId') as studio_id,
                json_extract_path_text(Properties, 'IdentityType') as identity_type,
                json_extract_path_text(Properties, 'IdentityName') as identity_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::StudioSessionMapping'
                AND region = 'us-east-1'
    wal_workspaces:
      name: wal_workspaces
      id: aws.emr.wal_workspaces
      x-cfn-schema-name: WALWorkspace
      x-cfn-type-name: AWS::EMR::WALWorkspace
      x-identifiers:
        - WALWorkspaceName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__WALWorkspace&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::WALWorkspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::WALWorkspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMR::WALWorkspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/wal_workspaces/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/wal_workspaces/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/wal_workspaces/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.WALWorkspaceName') as wal_workspace_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::WALWorkspace'
              AND data__Identifier = '<WALWorkspaceName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.WALWorkspaceName') as wal_workspace_name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::EMR::WALWorkspace'
                AND detail.data__TypeName = 'AWS::EMR::WALWorkspace'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'WALWorkspaceName') as wal_workspace_name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::WALWorkspace'
                  AND data__Identifier = '<WALWorkspaceName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'WALWorkspaceName') as wal_workspace_name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::EMR::WALWorkspace'
                    AND detail.data__TypeName = 'AWS::EMR::WALWorkspace'
                    AND listing.region = 'us-east-1'
    wal_workspaces_list_only:
      name: wal_workspaces_list_only
      id: aws.emr.wal_workspaces_list_only
      x-cfn-schema-name: WALWorkspace
      x-cfn-type-name: AWS::EMR::WALWorkspace
      x-identifiers:
        - WALWorkspaceName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WALWorkspaceName') as wal_workspace_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::WALWorkspace'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WALWorkspaceName') as wal_workspace_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::WALWorkspace'
                AND region = 'us-east-1'
    wal_workspace_tags:
      name: wal_workspace_tags
      id: aws.emr.wal_workspace_tags
      x-cfn-schema-name: WALWorkspace
      x-cfn-type-name: AWS::EMR::WALWorkspace
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.WALWorkspaceName') as wal_workspace_name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::EMR::WALWorkspace'
              AND detail.data__TypeName = 'AWS::EMR::WALWorkspace'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'WALWorkspaceName') as wal_workspace_name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::EMR::WALWorkspace'
                AND detail.data__TypeName = 'AWS::EMR::WALWorkspace'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SecurityConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSecurityConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSecurityConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Studio&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStudio
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStudioRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__StudioSessionMapping&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStudioSessionMapping
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStudioSessionMappingRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__WALWorkspace&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWALWorkspace
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWALWorkspaceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
