openapi: 3.0.0
info:
  title: EMR
  version: 1.0.0
paths: {}
components:
  schemas:
    EbsConfiguration:
      type: object
      additionalProperties: false
      properties:
        EbsBlockDeviceConfigs:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/EbsBlockDeviceConfig'
        EbsOptimized:
          type: boolean
    KeyValue:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
    Configuration:
      type: object
      additionalProperties: false
      properties:
        ConfigurationProperties:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Configurations:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Configuration'
        Classification:
          type: string
    StepConfig:
      type: object
      additionalProperties: false
      properties:
        HadoopJarStep:
          $ref: '#/components/schemas/HadoopJarStepConfig'
        ActionOnFailure:
          type: string
        Name:
          type: string
      required:
        - HadoopJarStep
        - Name
    InstanceFleetConfig:
      type: object
      properties:
        InstanceFleetType:
          type: string
        TargetOnDemandCapacity:
          type: integer
        ClusterId:
          type: string
        TargetSpotCapacity:
          type: integer
        LaunchSpecifications:
          $ref: '#/components/schemas/InstanceFleetProvisioningSpecifications'
        Id:
          type: string
        InstanceTypeConfigs:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InstanceTypeConfig'
        Name:
          type: string
      required:
        - InstanceFleetType
        - ClusterId
      x-stackql-resource-name: instance_fleet_config
      x-stackql-primaryIdentifier:
        - Id
    InstanceTypeConfig:
      type: object
      additionalProperties: false
      properties:
        BidPrice:
          type: string
        WeightedCapacity:
          type: integer
        EbsConfiguration:
          $ref: '#/components/schemas/EbsConfiguration'
        BidPriceAsPercentageOfOnDemandPrice:
          type: number
        CustomAmiId:
          type: string
        Configurations:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Configuration'
        InstanceType:
          type: string
      required:
        - InstanceType
    SpotProvisioningSpecification:
      type: object
      additionalProperties: false
      properties:
        AllocationStrategy:
          type: string
        TimeoutDurationMinutes:
          type: integer
        TimeoutAction:
          type: string
        BlockDurationMinutes:
          type: integer
      required:
        - TimeoutDurationMinutes
        - TimeoutAction
    ScriptBootstrapActionConfig:
      type: object
      additionalProperties: false
      properties:
        Path:
          type: string
        Args:
          type: array
          uniqueItems: true
          items:
            type: string
      required:
        - Path
    InstanceFleetProvisioningSpecifications:
      type: object
      additionalProperties: false
      properties:
        SpotSpecification:
          $ref: '#/components/schemas/SpotProvisioningSpecification'
        OnDemandSpecification:
          $ref: '#/components/schemas/OnDemandProvisioningSpecification'
    SimpleScalingPolicyConfiguration:
      type: object
      additionalProperties: false
      properties:
        ScalingAdjustment:
          type: integer
        CoolDown:
          type: integer
        AdjustmentType:
          type: string
      required:
        - ScalingAdjustment
    OnDemandProvisioningSpecification:
      type: object
      additionalProperties: false
      properties:
        AllocationStrategy:
          type: string
      required:
        - AllocationStrategy
    ScalingTrigger:
      type: object
      additionalProperties: false
      properties:
        CloudWatchAlarmDefinition:
          $ref: '#/components/schemas/CloudWatchAlarmDefinition'
      required:
        - CloudWatchAlarmDefinition
    ManagedScalingPolicy:
      type: object
      additionalProperties: false
      properties:
        ComputeLimits:
          $ref: '#/components/schemas/ComputeLimits'
    InstanceGroupConfig:
      type: object
      properties:
        JobFlowId:
          type: string
        AutoScalingPolicy:
          $ref: '#/components/schemas/AutoScalingPolicy'
        BidPrice:
          type: string
        InstanceCount:
          type: integer
        EbsConfiguration:
          $ref: '#/components/schemas/EbsConfiguration'
        InstanceRole:
          type: string
        CustomAmiId:
          type: string
        Id:
          type: string
        Configurations:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Configuration'
        InstanceType:
          type: string
        Market:
          type: string
        Name:
          type: string
      required:
        - JobFlowId
        - InstanceCount
        - InstanceRole
        - InstanceType
      x-stackql-resource-name: instance_group_config
      x-stackql-primaryIdentifier:
        - Id
    HadoopJarStepConfig:
      type: object
      additionalProperties: false
      properties:
        Args:
          type: array
          uniqueItems: true
          items:
            type: string
        Jar:
          type: string
        MainClass:
          type: string
        StepProperties:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/KeyValue'
      required:
        - Jar
    VolumeSpecification:
      type: object
      additionalProperties: false
      properties:
        SizeInGB:
          type: integer
        VolumeType:
          type: string
        Iops:
          type: integer
      required:
        - SizeInGB
        - VolumeType
    CloudWatchAlarmDefinition:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        ComparisonOperator:
          type: string
        Statistic:
          type: string
        Dimensions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricDimension'
        Period:
          type: integer
        EvaluationPeriods:
          type: integer
        Unit:
          type: string
        Namespace:
          type: string
        Threshold:
          type: number
      required:
        - MetricName
        - ComparisonOperator
        - Period
        - Threshold
    AutoTerminationPolicy:
      type: object
      additionalProperties: false
      properties:
        IdleTimeout:
          type: integer
    KerberosAttributes:
      type: object
      additionalProperties: false
      properties:
        KdcAdminPassword:
          type: string
        Realm:
          type: string
        ADDomainJoinPassword:
          type: string
        ADDomainJoinUser:
          type: string
        CrossRealmTrustPrincipalPassword:
          type: string
      required:
        - KdcAdminPassword
        - Realm
    JobFlowInstancesConfig:
      type: object
      additionalProperties: false
      properties:
        MasterInstanceFleet:
          $ref: '#/components/schemas/InstanceFleetConfig'
        AdditionalSlaveSecurityGroups:
          type: array
          uniqueItems: true
          items:
            type: string
        CoreInstanceFleet:
          $ref: '#/components/schemas/InstanceFleetConfig'
        CoreInstanceGroup:
          $ref: '#/components/schemas/InstanceGroupConfig'
        Ec2SubnetIds:
          type: array
          uniqueItems: true
          items:
            type: string
        HadoopVersion:
          type: string
        TerminationProtected:
          type: boolean
        KeepJobFlowAliveWhenNoSteps:
          type: boolean
        Ec2KeyName:
          type: string
        MasterInstanceGroup:
          $ref: '#/components/schemas/InstanceGroupConfig'
        Placement:
          $ref: '#/components/schemas/PlacementType'
        TaskInstanceFleets:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InstanceFleetConfig'
        Ec2SubnetId:
          type: string
        TaskInstanceGroups:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InstanceGroupConfig'
        ServiceAccessSecurityGroup:
          type: string
        EmrManagedSlaveSecurityGroup:
          type: string
        AdditionalMasterSecurityGroups:
          type: array
          uniqueItems: true
          items:
            type: string
        EmrManagedMasterSecurityGroup:
          type: string
    ScalingAction:
      type: object
      additionalProperties: false
      properties:
        Market:
          type: string
        SimpleScalingPolicyConfiguration:
          $ref: '#/components/schemas/SimpleScalingPolicyConfiguration'
      required:
        - SimpleScalingPolicyConfiguration
    EbsBlockDeviceConfig:
      type: object
      additionalProperties: false
      properties:
        VolumeSpecification:
          $ref: '#/components/schemas/VolumeSpecification'
        VolumesPerInstance:
          type: integer
      required:
        - VolumeSpecification
    ScalingRule:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/ScalingAction'
        Description:
          type: string
        Trigger:
          $ref: '#/components/schemas/ScalingTrigger'
        Name:
          type: string
      required:
        - Action
        - Trigger
        - Name
    ComputeLimits:
      type: object
      additionalProperties: false
      properties:
        MaximumOnDemandCapacityUnits:
          type: integer
        MaximumCapacityUnits:
          type: integer
        MaximumCoreCapacityUnits:
          type: integer
        MinimumCapacityUnits:
          type: integer
        UnitType:
          type: string
      required:
        - UnitType
        - MaximumCapacityUnits
        - MinimumCapacityUnits
    MetricDimension:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    BootstrapActionConfig:
      type: object
      additionalProperties: false
      properties:
        ScriptBootstrapAction:
          $ref: '#/components/schemas/ScriptBootstrapActionConfig'
        Name:
          type: string
      required:
        - ScriptBootstrapAction
        - Name
    AutoScalingPolicy:
      type: object
      additionalProperties: false
      properties:
        Rules:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScalingRule'
        Constraints:
          $ref: '#/components/schemas/ScalingConstraints'
      required:
        - Constraints
        - Rules
    PlacementType:
      type: object
      additionalProperties: false
      properties:
        AvailabilityZone:
          type: string
      required:
        - AvailabilityZone
    ScalingConstraints:
      type: object
      additionalProperties: false
      properties:
        MinCapacity:
          type: integer
        MaxCapacity:
          type: integer
      required:
        - MinCapacity
        - MaxCapacity
    Tag:
      description: An arbitrary set of tags (key-value pairs) for this EMR Studio.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
          pattern: '[a-zA-Z+-=._:/]+$'
      required:
        - Value
        - Key
    Application:
      type: object
      additionalProperties: false
      properties:
        AdditionalInfo:
          type: object
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        Args:
          type: array
          uniqueItems: true
          items:
            type: string
        Version:
          type: string
        Name:
          type: string
    Cluster:
      type: object
      properties:
        Steps:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StepConfig'
        StepConcurrencyLevel:
          type: integer
        EbsRootVolumeSize:
          type: integer
        OSReleaseLabel:
          type: string
        Name:
          type: string
        ServiceRole:
          type: string
        LogUri:
          type: string
        BootstrapActions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BootstrapActionConfig'
        MasterPublicDNS:
          type: string
        Configurations:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Configuration'
        ReleaseLabel:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        ManagedScalingPolicy:
          $ref: '#/components/schemas/ManagedScalingPolicy'
        LogEncryptionKmsKeyId:
          type: string
        AdditionalInfo:
          type: object
        AutoTerminationPolicy:
          $ref: '#/components/schemas/AutoTerminationPolicy'
        KerberosAttributes:
          $ref: '#/components/schemas/KerberosAttributes'
        Applications:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Application'
        AutoScalingRole:
          type: string
        CustomAmiId:
          type: string
        Instances:
          $ref: '#/components/schemas/JobFlowInstancesConfig'
        ScaleDownBehavior:
          type: string
        JobFlowRole:
          type: string
        VisibleToAllUsers:
          type: boolean
        SecurityConfiguration:
          type: string
        Id:
          type: string
      required:
        - Instances
        - ServiceRole
        - JobFlowRole
        - Name
      x-stackql-resource-name: cluster
      x-stackql-primaryIdentifier:
        - Id
    SecurityConfiguration:
      type: object
      properties:
        Name:
          description: The name of the security configuration.
          type: string
        SecurityConfiguration:
          type: string
      required:
        - SecurityConfiguration
      x-stackql-resource-name: security_configuration
      x-stackql-primaryIdentifier:
        - Name
    Step:
      type: object
      properties:
        Id:
          type: string
        ActionOnFailure:
          type: string
        HadoopJarStep:
          $ref: '#/components/schemas/HadoopJarStepConfig'
        JobFlowId:
          type: string
        Name:
          type: string
      required:
        - JobFlowId
        - HadoopJarStep
        - ActionOnFailure
        - Name
      x-stackql-resource-name: step
      x-stackql-primaryIdentifier:
        - Id
    SubnetId:
      description: Identifier of a subnet
      type: string
      pattern: ^(subnet-[a-f0-9]{13})|(subnet-[a-f0-9]{8})\Z
    Arn:
      type: string
      pattern: ^arn:aws(-(cn|us-gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
    Tags:
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/Tag'
    Studio:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the EMR Studio.
          $ref: '#/components/schemas/Arn'
        AuthMode:
          type: string
          description: Specifies whether the Studio authenticates users using single sign-on (SSO) or IAM. Amazon EMR Studio currently only supports SSO authentication.
          enum:
            - SSO
            - IAM
        DefaultS3Location:
          description: The default Amazon S3 location to back up EMR Studio Workspaces and notebook files. A Studio user can select an alternative Amazon S3 location when creating a Workspace.
          type: string
          minLength: 6
          maxLength: 10280
          pattern: ^s3://.*
        Description:
          description: A detailed description of the Studio.
          type: string
          minLength: 0
          maxLength: 256
        EngineSecurityGroupId:
          description: The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId.
          type: string
          minLength: 4
          maxLength: 256
          pattern: ^sg-[a-zA-Z0-9\-._]+$
        Name:
          description: A descriptive name for the Amazon EMR Studio.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z0-9_-]+'
        ServiceRole:
          description: The IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other AWS services.
          $ref: '#/components/schemas/Arn'
        StudioId:
          description: The ID of the EMR Studio.
          type: string
          pattern: ^es-[0-9A-Z]+
          minLength: 4
          maxLength: 256
        SubnetIds:
          description: A list of up to 5 subnet IDs to associate with the Studio. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/SubnetId'
        Tags:
          description: A list of tags to associate with the Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.
          $ref: '#/components/schemas/Tags'
        Url:
          description: The unique Studio access URL.
          type: string
          pattern: ^https://[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])(:[0-9]*)*([?/#].*)?$
          maxLength: 4096
        UserRole:
          description: The IAM user role that will be assumed by users and groups logged in to a Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies.
          $ref: '#/components/schemas/Arn'
        VpcId:
          description: The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
          type: string
          pattern: ^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$
        WorkspaceSecurityGroupId:
          description: The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by VpcId.
          type: string
          pattern: ^sg-[a-zA-Z0-9\-._]+$
        IdpAuthUrl:
          description: Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.
          type: string
          pattern: ^https://[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])(:[0-9]*)*([?/#].*)?$
          maxLength: 4096
        IdpRelayStateParameterName:
          description: The name of relay state parameter for external Identity Provider.
          type: string
          minLength: 0
          maxLength: 256
      required:
        - AuthMode
        - EngineSecurityGroupId
        - Name
        - ServiceRole
        - SubnetIds
        - VpcId
        - WorkspaceSecurityGroupId
        - DefaultS3Location
      x-stackql-resource-name: studio
      x-stackql-primaryIdentifier:
        - StudioId
    IamPolicyArn:
      type: string
      pattern: ^arn:aws(-(cn|us-gov))?:iam::([0-9]{12})?:policy\/[^.]+$
    StudioSessionMapping:
      type: object
      properties:
        IdentityName:
          type: string
          description: The name of the user or group. For more information, see UserName and DisplayName in the AWS SSO Identity Store API Reference. Either IdentityName or IdentityId must be specified.
        IdentityType:
          type: string
          description: Specifies whether the identity to map to the Studio is a user or a group.
          enum:
            - USER
            - GROUP
        SessionPolicyArn:
          description: The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. Session policies refine Studio user permissions without the need to use multiple IAM user roles.
          $ref: '#/components/schemas/IamPolicyArn'
        StudioId:
          description: The ID of the Amazon EMR Studio to which the user or group will be mapped.
          type: string
          pattern: ^es-[0-9A-Z]+
          minLength: 4
          maxLength: 256
      required:
        - StudioId
        - IdentityName
        - IdentityType
        - SessionPolicyArn
      x-stackql-resource-name: studio_session_mapping
      x-stackql-primaryIdentifier:
        - StudioId
        - IdentityType
        - IdentityName
  x-stackQL-resources:
    instance_fleet_configs:
      name: instance_fleet_configs
      id: aws.emr.instance_fleet_configs
      x-cfn-schema-name: InstanceFleetConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::InstanceFleetConfig'
    instance_fleet_config:
      name: instance_fleet_config
      id: aws.emr.instance_fleet_config
      x-cfn-schema-name: InstanceFleetConfig
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceFleetType') as instance_fleet_type,
              JSON_EXTRACT(Properties, '$.TargetOnDemandCapacity') as target_on_demand_capacity,
              JSON_EXTRACT(Properties, '$.ClusterId') as cluster_id,
              JSON_EXTRACT(Properties, '$.TargetSpotCapacity') as target_spot_capacity,
              JSON_EXTRACT(Properties, '$.LaunchSpecifications.SpotSpecification') as launch_specifications_spot_specification,
              JSON_EXTRACT(Properties, '$.LaunchSpecifications.OnDemandSpecification') as launch_specifications_on_demand_specification,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.InstanceTypeConfigs') as instance_type_configs,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::InstanceFleetConfig'
    instance_group_configs:
      name: instance_group_configs
      id: aws.emr.instance_group_configs
      x-cfn-schema-name: InstanceGroupConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::InstanceGroupConfig'
    instance_group_config:
      name: instance_group_config
      id: aws.emr.instance_group_config
      x-cfn-schema-name: InstanceGroupConfig
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobFlowId') as job_flow_id,
              JSON_EXTRACT(Properties, '$.AutoScalingPolicy.Rules') as auto_scaling_policy_rules,
              JSON_EXTRACT(Properties, '$.AutoScalingPolicy.Constraints') as auto_scaling_policy_constraints,
              JSON_EXTRACT(Properties, '$.BidPrice') as bid_price,
              JSON_EXTRACT(Properties, '$.InstanceCount') as instance_count,
              JSON_EXTRACT(Properties, '$.EbsConfiguration.EbsBlockDeviceConfigs') as ebs_configuration_ebs_block_device_configs,
              JSON_EXTRACT(Properties, '$.EbsConfiguration.EbsOptimized') as ebs_configuration_ebs_optimized,
              JSON_EXTRACT(Properties, '$.InstanceRole') as instance_role,
              JSON_EXTRACT(Properties, '$.CustomAmiId') as custom_ami_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Configurations') as configurations,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.Market') as market,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::InstanceGroupConfig'
    clusters:
      name: clusters
      id: aws.emr.clusters
      x-cfn-schema-name: Cluster
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::Cluster'
    cluster:
      name: cluster
      id: aws.emr.cluster
      x-cfn-schema-name: Cluster
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Steps') as steps,
              JSON_EXTRACT(Properties, '$.StepConcurrencyLevel') as step_concurrency_level,
              JSON_EXTRACT(Properties, '$.EbsRootVolumeSize') as ebs_root_volume_size,
              JSON_EXTRACT(Properties, '$.OSReleaseLabel') as o_srelease_label,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(Properties, '$.LogUri') as log_uri,
              JSON_EXTRACT(Properties, '$.BootstrapActions') as bootstrap_actions,
              JSON_EXTRACT(Properties, '$.MasterPublicDNS') as master_public_dn_s,
              JSON_EXTRACT(Properties, '$.Configurations') as configurations,
              JSON_EXTRACT(Properties, '$.ReleaseLabel') as release_label,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ManagedScalingPolicy.ComputeLimits') as managed_scaling_policy_compute_limits,
              JSON_EXTRACT(Properties, '$.LogEncryptionKmsKeyId') as log_encryption_kms_key_id,
              JSON_EXTRACT(Properties, '$.AdditionalInfo') as additional_info,
              JSON_EXTRACT(Properties, '$.AutoTerminationPolicy.IdleTimeout') as auto_termination_policy_idle_timeout,
              JSON_EXTRACT(Properties, '$.KerberosAttributes.KdcAdminPassword') as kerberos_attributes_kdc_admin_password,
              JSON_EXTRACT(Properties, '$.KerberosAttributes.Realm') as kerberos_attributes_realm,
              JSON_EXTRACT(Properties, '$.KerberosAttributes.ADDomainJoinPassword') as kerberos_attributes_ad_domain_join_password,
              JSON_EXTRACT(Properties, '$.KerberosAttributes.ADDomainJoinUser') as kerberos_attributes_ad_domain_join_user,
              JSON_EXTRACT(Properties, '$.KerberosAttributes.CrossRealmTrustPrincipalPassword') as kerberos_attributes_cross_realm_trust_principal_password,
              JSON_EXTRACT(Properties, '$.Applications') as applications,
              JSON_EXTRACT(Properties, '$.AutoScalingRole') as auto_scaling_role,
              JSON_EXTRACT(Properties, '$.CustomAmiId') as custom_ami_id,
              JSON_EXTRACT(Properties, '$.Instances.MasterInstanceFleet') as instances_master_instance_fleet,
              JSON_EXTRACT(Properties, '$.Instances.AdditionalSlaveSecurityGroups') as instances_additional_slave_security_groups,
              JSON_EXTRACT(Properties, '$.Instances.CoreInstanceFleet') as instances_core_instance_fleet,
              JSON_EXTRACT(Properties, '$.Instances.CoreInstanceGroup') as instances_core_instance_group,
              JSON_EXTRACT(Properties, '$.Instances.Ec2SubnetIds') as instances_ec2_subnet_ids,
              JSON_EXTRACT(Properties, '$.Instances.HadoopVersion') as instances_hadoop_version,
              JSON_EXTRACT(Properties, '$.Instances.TerminationProtected') as instances_termination_protected,
              JSON_EXTRACT(Properties, '$.Instances.KeepJobFlowAliveWhenNoSteps') as instances_keep_job_flow_alive_when_no_steps,
              JSON_EXTRACT(Properties, '$.Instances.Ec2KeyName') as instances_ec2_key_name,
              JSON_EXTRACT(Properties, '$.Instances.MasterInstanceGroup') as instances_master_instance_group,
              JSON_EXTRACT(Properties, '$.Instances.Placement') as instances_placement,
              JSON_EXTRACT(Properties, '$.Instances.TaskInstanceFleets') as instances_task_instance_fleets,
              JSON_EXTRACT(Properties, '$.Instances.Ec2SubnetId') as instances_ec2_subnet_id,
              JSON_EXTRACT(Properties, '$.Instances.TaskInstanceGroups') as instances_task_instance_groups,
              JSON_EXTRACT(Properties, '$.Instances.ServiceAccessSecurityGroup') as instances_service_access_security_group,
              JSON_EXTRACT(Properties, '$.Instances.EmrManagedSlaveSecurityGroup') as instances_emr_managed_slave_security_group,
              JSON_EXTRACT(Properties, '$.Instances.AdditionalMasterSecurityGroups') as instances_additional_master_security_groups,
              JSON_EXTRACT(Properties, '$.Instances.EmrManagedMasterSecurityGroup') as instances_emr_managed_master_security_group,
              JSON_EXTRACT(Properties, '$.ScaleDownBehavior') as scale_down_behavior,
              JSON_EXTRACT(Properties, '$.JobFlowRole') as job_flow_role,
              JSON_EXTRACT(Properties, '$.VisibleToAllUsers') as visible_to_all_users,
              JSON_EXTRACT(Properties, '$.SecurityConfiguration') as security_configuration,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::Cluster'
    security_configurations:
      name: security_configurations
      id: aws.emr.security_configurations
      x-cfn-schema-name: SecurityConfiguration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::SecurityConfiguration'
    security_configuration:
      name: security_configuration
      id: aws.emr.security_configuration
      x-cfn-schema-name: SecurityConfiguration
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SecurityConfiguration') as security_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::SecurityConfiguration'
    steps:
      name: steps
      id: aws.emr.steps
      x-cfn-schema-name: Step
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::Step'
    step:
      name: step
      id: aws.emr.step
      x-cfn-schema-name: Step
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ActionOnFailure') as action_on_failure,
              JSON_EXTRACT(Properties, '$.HadoopJarStep.Args') as hadoop_jar_step_args,
              JSON_EXTRACT(Properties, '$.HadoopJarStep.Jar') as hadoop_jar_step_jar,
              JSON_EXTRACT(Properties, '$.HadoopJarStep.MainClass') as hadoop_jar_step_main_class,
              JSON_EXTRACT(Properties, '$.HadoopJarStep.StepProperties') as hadoop_jar_step_step_properties,
              JSON_EXTRACT(Properties, '$.JobFlowId') as job_flow_id,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::Step'
    studios:
      name: studios
      id: aws.emr.studios
      x-cfn-schema-name: Studio
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::Studio'
    studio:
      name: studio
      id: aws.emr.studio
      x-cfn-schema-name: Studio
      x-type: get
      x-identifiers:
        - StudioId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AuthMode') as auth_mode,
              JSON_EXTRACT(Properties, '$.DefaultS3Location') as default_s3_location,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EngineSecurityGroupId') as engine_security_group_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Url') as url,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.WorkspaceSecurityGroupId') as workspace_security_group_id,
              JSON_EXTRACT(Properties, '$.IdpAuthUrl') as idp_auth_url,
              JSON_EXTRACT(Properties, '$.IdpRelayStateParameterName') as idp_relay_state_parameter_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::Studio'
    studio_session_mappings:
      name: studio_session_mappings
      id: aws.emr.studio_session_mappings
      x-cfn-schema-name: StudioSessionMapping
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id,
              JSON_EXTRACT(Properties, '$.IdentityType') as identity_type,
              JSON_EXTRACT(Properties, '$.IdentityName') as identity_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMR::StudioSessionMapping'
    studio_session_mapping:
      name: studio_session_mapping
      id: aws.emr.studio_session_mapping
      x-cfn-schema-name: StudioSessionMapping
      x-type: get
      x-identifiers:
        - StudioId
        - IdentityType
        - IdentityName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdentityName') as identity_name,
              JSON_EXTRACT(Properties, '$.IdentityType') as identity_type,
              JSON_EXTRACT(Properties, '$.StudioId') as studio_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMR::StudioSessionMapping'
