openapi: 3.0.0
info:
  title: LookoutEquipment
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Bucket:
      type: string
      pattern: ^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$
      minLength: 3
      maxLength: 63
    Prefix:
      type: string
      minLength: 0
      maxLength: 1024
    S3InputConfiguration:
      description: Specifies configuration information for the input data for the inference, including input data S3 location.
      type: object
      properties:
        Bucket:
          $ref: '#/components/schemas/Bucket'
        Prefix:
          $ref: '#/components/schemas/Prefix'
      required:
        - Bucket
      additionalProperties: false
    S3OutputConfiguration:
      description: Specifies configuration information for the output results from the inference, including output S3 location.
      type: object
      properties:
        Bucket:
          $ref: '#/components/schemas/Bucket'
        Prefix:
          $ref: '#/components/schemas/Prefix'
      required:
        - Bucket
      additionalProperties: false
    InputNameConfiguration:
      description: Specifies configuration information for the input data for the inference, including timestamp format and delimiter.
      type: object
      properties:
        ComponentTimestampDelimiter:
          description: Indicates the delimiter character used between items in the data.
          type: string
          pattern: ^(\-|\_|\s)?$
          minLength: 0
          maxLength: 1
        TimestampFormat:
          description: The format of the timestamp, whether Epoch time, or standard, with or without hyphens (-).
          type: string
          pattern: ^EPOCH|yyyy-MM-dd-HH-mm-ss|yyyyMMddHHmmss$
      additionalProperties: false
    Tag:
      description: A tag is a key-value pair that can be added to a resource as metadata.
      type: object
      properties:
        Key:
          description: The key for the specified tag.
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          description: The value for the specified tag.
          type: string
          pattern: '[\s\w+-=\.:/@]*'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    InferenceScheduler:
      type: object
      properties:
        DataDelayOffsetInMinutes:
          description: A period of time (in minutes) by which inference on the data is delayed after the data starts.
          type: integer
          minimum: 0
          maximum: 60
        DataInputConfiguration:
          description: Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location.
          type: object
          properties:
            InputTimeZoneOffset:
              description: Indicates the difference between your time zone and Greenwich Mean Time (GMT).
              type: string
              pattern: ^(\+|\-)[0-9]{2}\:[0-9]{2}$
            InferenceInputNameConfiguration:
              $ref: '#/components/schemas/InputNameConfiguration'
            S3InputConfiguration:
              $ref: '#/components/schemas/S3InputConfiguration'
          required:
            - S3InputConfiguration
          additionalProperties: false
        DataOutputConfiguration:
          description: Specifies configuration information for the output results for the inference scheduler, including the S3 location for the output.
          type: object
          properties:
            KmsKeyId:
              description: The ID number for the AWS KMS key used to encrypt the inference output.
              type: string
              pattern: ^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$
              minLength: 1
              maxLength: 2048
            S3OutputConfiguration:
              $ref: '#/components/schemas/S3OutputConfiguration'
          required:
            - S3OutputConfiguration
          additionalProperties: false
        DataUploadFrequency:
          description: How often data is uploaded to the source S3 bucket for the input data.
          type: string
          enum:
            - PT5M
            - PT10M
            - PT15M
            - PT30M
            - PT1H
        InferenceSchedulerName:
          description: The name of the inference scheduler being created.
          type: string
          pattern: ^[0-9a-zA-Z_-]{1,200}$
          minLength: 1
          maxLength: 200
        ModelName:
          description: The name of the previously trained ML model being used to create the inference scheduler.
          type: string
          pattern: ^[0-9a-zA-Z_-]{1,200}$
          minLength: 1
          maxLength: 200
        RoleArn:
          description: The Amazon Resource Name (ARN) of a role with permission to access the data source being used for the inference.
          type: string
          pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
          minLength: 20
          maxLength: 2048
        ServerSideKmsKeyId:
          description: Provides the identifier of the AWS KMS customer master key (CMK) used to encrypt inference scheduler data by Amazon Lookout for Equipment.
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$
          minLength: 1
          maxLength: 2048
        Tags:
          description: Any tags associated with the inference scheduler.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        InferenceSchedulerArn:
          description: The Amazon Resource Name (ARN) of the inference scheduler being created.
          type: string
          pattern: arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\-]*:[0-9]{12}:inference-scheduler\/.+
          minLength: 1
          maxLength: 200
      required:
        - DataInputConfiguration
        - DataOutputConfiguration
        - DataUploadFrequency
        - ModelName
        - RoleArn
      x-stackql-resource-name: inference_scheduler
      description: Resource schema for LookoutEquipment InferenceScheduler.
      x-type-name: AWS::LookoutEquipment::InferenceScheduler
      x-stackql-primary-identifier:
        - InferenceSchedulerName
      x-create-only-properties:
        - InferenceSchedulerName
        - ModelName
        - ServerSideKmsKeyId
      x-read-only-properties:
        - InferenceSchedulerArn
      x-required-properties:
        - DataInputConfiguration
        - DataOutputConfiguration
        - DataUploadFrequency
        - ModelName
        - RoleArn
      x-taggable: true
      x-required-permissions:
        create:
          - iam:PassRole
          - lookoutequipment:CreateInferenceScheduler
          - lookoutequipment:DescribeInferenceScheduler
        read:
          - lookoutequipment:DescribeInferenceScheduler
        delete:
          - lookoutequipment:DeleteInferenceScheduler
          - lookoutequipment:StopInferenceScheduler
          - lookoutequipment:DescribeInferenceScheduler
        update:
          - lookoutequipment:UpdateInferenceScheduler
          - lookoutequipment:DescribeInferenceScheduler
          - lookoutequipment:StopInferenceScheduler
          - lookoutequipment:StartInferenceScheduler
        list:
          - lookoutequipment:ListInferenceSchedulers
    CreateInferenceSchedulerRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DataDelayOffsetInMinutes:
              description: A period of time (in minutes) by which inference on the data is delayed after the data starts.
              type: integer
              minimum: 0
              maximum: 60
            DataInputConfiguration:
              description: Specifies configuration information for the input data for the inference scheduler, including delimiter, format, and dataset location.
              type: object
              properties:
                InputTimeZoneOffset:
                  description: Indicates the difference between your time zone and Greenwich Mean Time (GMT).
                  type: string
                  pattern: ^(\+|\-)[0-9]{2}\:[0-9]{2}$
                InferenceInputNameConfiguration:
                  $ref: '#/components/schemas/InputNameConfiguration'
                S3InputConfiguration:
                  $ref: '#/components/schemas/S3InputConfiguration'
              required:
                - S3InputConfiguration
              additionalProperties: false
            DataOutputConfiguration:
              description: Specifies configuration information for the output results for the inference scheduler, including the S3 location for the output.
              type: object
              properties:
                KmsKeyId:
                  description: The ID number for the AWS KMS key used to encrypt the inference output.
                  type: string
                  pattern: ^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$
                  minLength: 1
                  maxLength: 2048
                S3OutputConfiguration:
                  $ref: '#/components/schemas/S3OutputConfiguration'
              required:
                - S3OutputConfiguration
              additionalProperties: false
            DataUploadFrequency:
              description: How often data is uploaded to the source S3 bucket for the input data.
              type: string
              enum:
                - PT5M
                - PT10M
                - PT15M
                - PT30M
                - PT1H
            InferenceSchedulerName:
              description: The name of the inference scheduler being created.
              type: string
              pattern: ^[0-9a-zA-Z_-]{1,200}$
              minLength: 1
              maxLength: 200
            ModelName:
              description: The name of the previously trained ML model being used to create the inference scheduler.
              type: string
              pattern: ^[0-9a-zA-Z_-]{1,200}$
              minLength: 1
              maxLength: 200
            RoleArn:
              description: The Amazon Resource Name (ARN) of a role with permission to access the data source being used for the inference.
              type: string
              pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
              minLength: 20
              maxLength: 2048
            ServerSideKmsKeyId:
              description: Provides the identifier of the AWS KMS customer master key (CMK) used to encrypt inference scheduler data by Amazon Lookout for Equipment.
              type: string
              pattern: ^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$
              minLength: 1
              maxLength: 2048
            Tags:
              description: Any tags associated with the inference scheduler.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            InferenceSchedulerArn:
              description: The Amazon Resource Name (ARN) of the inference scheduler being created.
              type: string
              pattern: arn:aws(-[^:]+)?:lookoutequipment:[a-zA-Z0-9\-]*:[0-9]{12}:inference-scheduler\/.+
              minLength: 1
              maxLength: 200
          x-stackQL-stringOnly: true
      x-title: CreateInferenceSchedulerRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    inference_schedulers:
      name: inference_schedulers
      id: aws.lookoutequipment.inference_schedulers
      x-cfn-schema-name: InferenceScheduler
      x-cfn-type-name: AWS::LookoutEquipment::InferenceScheduler
      x-identifiers:
        - InferenceSchedulerName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__InferenceScheduler&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutEquipment::InferenceScheduler"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutEquipment::InferenceScheduler"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutEquipment::InferenceScheduler"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/inference_schedulers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/inference_schedulers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/inference_schedulers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DataDelayOffsetInMinutes') as data_delay_offset_in_minutes,
              JSON_EXTRACT(Properties, '$.DataInputConfiguration') as data_input_configuration,
              JSON_EXTRACT(Properties, '$.DataOutputConfiguration') as data_output_configuration,
              JSON_EXTRACT(Properties, '$.DataUploadFrequency') as data_upload_frequency,
              JSON_EXTRACT(Properties, '$.InferenceSchedulerName') as inference_scheduler_name,
              JSON_EXTRACT(Properties, '$.ModelName') as model_name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.ServerSideKmsKeyId') as server_side_kms_key_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.InferenceSchedulerArn') as inference_scheduler_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
              AND data__Identifier = '<InferenceSchedulerName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DataDelayOffsetInMinutes') as data_delay_offset_in_minutes,
                JSON_EXTRACT(detail.Properties, '$.DataInputConfiguration') as data_input_configuration,
                JSON_EXTRACT(detail.Properties, '$.DataOutputConfiguration') as data_output_configuration,
                JSON_EXTRACT(detail.Properties, '$.DataUploadFrequency') as data_upload_frequency,
                JSON_EXTRACT(detail.Properties, '$.InferenceSchedulerName') as inference_scheduler_name,
                JSON_EXTRACT(detail.Properties, '$.ModelName') as model_name,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.ServerSideKmsKeyId') as server_side_kms_key_id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.InferenceSchedulerArn') as inference_scheduler_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                AND detail.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DataDelayOffsetInMinutes') as data_delay_offset_in_minutes,
                  json_extract_path_text(Properties, 'DataInputConfiguration') as data_input_configuration,
                  json_extract_path_text(Properties, 'DataOutputConfiguration') as data_output_configuration,
                  json_extract_path_text(Properties, 'DataUploadFrequency') as data_upload_frequency,
                  json_extract_path_text(Properties, 'InferenceSchedulerName') as inference_scheduler_name,
                  json_extract_path_text(Properties, 'ModelName') as model_name,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'ServerSideKmsKeyId') as server_side_kms_key_id,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'InferenceSchedulerArn') as inference_scheduler_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                  AND data__Identifier = '<InferenceSchedulerName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DataDelayOffsetInMinutes') as data_delay_offset_in_minutes,
                    json_extract_path_text(detail.Properties, 'DataInputConfiguration') as data_input_configuration,
                    json_extract_path_text(detail.Properties, 'DataOutputConfiguration') as data_output_configuration,
                    json_extract_path_text(detail.Properties, 'DataUploadFrequency') as data_upload_frequency,
                    json_extract_path_text(detail.Properties, 'InferenceSchedulerName') as inference_scheduler_name,
                    json_extract_path_text(detail.Properties, 'ModelName') as model_name,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'ServerSideKmsKeyId') as server_side_kms_key_id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'InferenceSchedulerArn') as inference_scheduler_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                    AND detail.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                    AND listing.region = 'us-east-1'
    inference_schedulers_list_only:
      name: inference_schedulers_list_only
      id: aws.lookoutequipment.inference_schedulers_list_only
      x-cfn-schema-name: InferenceScheduler
      x-cfn-type-name: AWS::LookoutEquipment::InferenceScheduler
      x-identifiers:
        - InferenceSchedulerName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InferenceSchedulerName') as inference_scheduler_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InferenceSchedulerName') as inference_scheduler_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                AND region = 'us-east-1'
    inference_scheduler_tags:
      name: inference_scheduler_tags
      id: aws.lookoutequipment.inference_scheduler_tags
      x-cfn-schema-name: InferenceScheduler
      x-cfn-type-name: AWS::LookoutEquipment::InferenceScheduler
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DataDelayOffsetInMinutes') as data_delay_offset_in_minutes,
              JSON_EXTRACT(detail.Properties, '$.DataInputConfiguration') as data_input_configuration,
              JSON_EXTRACT(detail.Properties, '$.DataOutputConfiguration') as data_output_configuration,
              JSON_EXTRACT(detail.Properties, '$.DataUploadFrequency') as data_upload_frequency,
              JSON_EXTRACT(detail.Properties, '$.InferenceSchedulerName') as inference_scheduler_name,
              JSON_EXTRACT(detail.Properties, '$.ModelName') as model_name,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.ServerSideKmsKeyId') as server_side_kms_key_id,
              JSON_EXTRACT(detail.Properties, '$.InferenceSchedulerArn') as inference_scheduler_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
              AND detail.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DataDelayOffsetInMinutes') as data_delay_offset_in_minutes,
                json_extract_path_text(detail.Properties, 'DataInputConfiguration') as data_input_configuration,
                json_extract_path_text(detail.Properties, 'DataOutputConfiguration') as data_output_configuration,
                json_extract_path_text(detail.Properties, 'DataUploadFrequency') as data_upload_frequency,
                json_extract_path_text(detail.Properties, 'InferenceSchedulerName') as inference_scheduler_name,
                json_extract_path_text(detail.Properties, 'ModelName') as model_name,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'ServerSideKmsKeyId') as server_side_kms_key_id,
                json_extract_path_text(detail.Properties, 'InferenceSchedulerArn') as inference_scheduler_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                AND detail.data__TypeName = 'AWS::LookoutEquipment::InferenceScheduler'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__InferenceScheduler&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInferenceScheduler
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInferenceSchedulerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
