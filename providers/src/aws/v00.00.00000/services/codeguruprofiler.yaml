openapi: 3.0.0
info:
  title: CodeGuruProfiler
  version: 1.0.0
paths: {}
components:
  schemas:
    ProfilingGroupArn:
      type: string
      pattern: ^arn:aws([-\w]*):codeguru-profiler:(([a-z]+-)+[0-9]+):([0-9]{12}):profilingGroup/[^.]+$
    IamArn:
      type: string
      pattern: ^arn:aws([-\w]*):iam::([0-9]{12}):[\S]+$
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.'
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.'
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Value
        - Key
    ChannelId:
      description: Unique identifier for each Channel in the notification configuration of a Profiling Group
      type: string
      pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    ChannelUri:
      description: Unique arn of the resource to be used for notifications. We support a valid SNS topic arn as a channel uri.
      type: string
      pattern: ^arn:aws([-\w]*):[a-z-]+:(([a-z]+-)+[0-9]+)?:([0-9]{12}):[^.]+$
    Channel:
      description: Notification medium for users to get alerted for events that occur in application profile. We support SNS topic as a notification channel.
      type: object
      required:
        - channelUri
      properties:
        channelId:
          $ref: '#/components/schemas/ChannelId'
        channelUri:
          $ref: '#/components/schemas/ChannelUri'
    ProfilingGroup:
      type: object
      properties:
        ProfilingGroupName:
          description: The name of the profiling group.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w-]+$
        ComputePlatform:
          description: The compute platform of the profiling group.
          type: string
          enum:
            - Default
            - AWSLambda
        AgentPermissions:
          description: The agent permissions attached to this profiling group.
          type: object
          additionalProperties: false
          required:
            - Principals
          properties:
            Principals:
              description: The principals for the agent permissions.
              type: array
              items:
                $ref: '#/components/schemas/IamArn'
        AnomalyDetectionNotificationConfiguration:
          description: Configuration for Notification Channels for Anomaly Detection feature in CodeGuru Profiler which enables customers to detect anomalies in the application profile for those methods that represent the highest proportion of CPU time or latency
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        Arn:
          description: The Amazon Resource Name (ARN) of the specified profiling group.
          $ref: '#/components/schemas/ProfilingGroupArn'
          x-examples:
            - arn:aws:codeguru-profiler:us-east-1:000000000000:profilingGroup/My-example-profiling-group
        Tags:
          description: The tags associated with a profiling group.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          uniqueItems: true
      required:
        - ProfilingGroupName
      x-stackql-resource-name: profiling_group
      x-stackql-primaryIdentifier:
        - ProfilingGroupName
  x-stackQL-resources:
    profiling_groups:
      name: profiling_groups
      id: aws.codeguruprofiler.profiling_groups
      x-cfn-schema-name: ProfilingGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProfilingGroupName') as profiling_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeGuruProfiler::ProfilingGroup'
    profiling_group:
      name: profiling_group
      id: aws.codeguruprofiler.profiling_group
      x-cfn-schema-name: ProfilingGroup
      x-type: get
      x-identifiers:
        - ProfilingGroupName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProfilingGroupName') as profiling_group_name,
              JSON_EXTRACT(Properties, '$.ComputePlatform') as compute_platform,
              JSON_EXTRACT(Properties, '$.AgentPermissions') as agent_permissions,
              JSON_EXTRACT(Properties, '$.AnomalyDetectionNotificationConfiguration') as anomaly_detection_notification_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeGuruProfiler::ProfilingGroup'
