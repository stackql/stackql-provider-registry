openapi: 3.0.0
info:
  title: SSM
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Target:
      additionalProperties: false
      type: object
      properties:
        Values:
          minItems: 0
          maxItems: 50
          type: array
          items:
            anyOf:
              - relationshipRef:
                  typeName: AWS::EC2::Instance
                  propertyPath: /properties/Id
            type: string
        Key:
          pattern: ^[\p{L}\p{Z}\p{N}_.:/=+\-@]{1,128}$|resource-groups:Name
          type: string
      required:
        - Key
        - Values
    S3KeyPrefix:
      type: string
      maxLength: 1024
    S3Region:
      minLength: 3
      type: string
      maxLength: 20
    S3OutputLocation:
      additionalProperties: false
      type: object
      properties:
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
        OutputS3Region:
          $ref: '#/components/schemas/S3Region'
        OutputS3BucketName:
          $ref: '#/components/schemas/S3BucketName'
    S3BucketName:
      x-relationshipRef:
        typeName: AWS::S3::Bucket
        propertyPath: /properties/BucketName
      minLength: 3
      type: string
      maxLength: 63
    InstanceAssociationOutputLocation:
      additionalProperties: false
      type: object
      properties:
        S3Location:
          $ref: '#/components/schemas/S3OutputLocation'
    ParameterValues:
      type: array
      items:
        type: string
    Association:
      type: object
      properties:
        AssociationName:
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
          description: The name of the association.
          type: string
        CalendarNames:
          x-examples:
            - - calendar1
              - calendar2
            - - calendar3
          type: array
          items:
            type: string
        ScheduleExpression:
          x-examples:
            - cron(0 0 */1 * * ? *)
            - cron(0 16 ? * TUE *)
            - rate(30 minutes)
            - rate(7 days)
          minLength: 1
          description: A Cron or Rate expression that specifies when the association is applied to the target.
          type: string
          maxLength: 256
        MaxErrors:
          x-examples:
            - 1%
            - 10%
            - 50%
            - '1'
          pattern: ^([1-9][0-9]{0,6}|[0]|[1-9][0-9]%|[0-9]%|100%)$
          type: string
        Parameters:
          x-patternProperties:
            .{1,255}:
              $ref: '#/components/schemas/ParameterValues'
          description: Parameter values that the SSM document uses at runtime.
          additionalProperties: false
          type: object
        InstanceId:
          x-examples:
            - i-0e60836d21cf313c4
            - mi-0532c22e49636ee13
          pattern: (^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)
          description: The ID of the instance that the SSM document is associated with.
          type: string
        WaitForSuccessTimeoutSeconds:
          maximum: 172800
          type: integer
          minimum: 15
        MaxConcurrency:
          x-examples:
            - 1%
            - 10%
            - 50%
            - '1'
          pattern: ^([1-9][0-9]{0,6}|[1-9][0-9]%|[1-9]%|100%)$
          type: string
        ComplianceSeverity:
          type: string
          enum:
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
            - UNSPECIFIED
        Targets:
          minItems: 0
          maxItems: 5
          description: The targets that the SSM document sends commands to.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        SyncCompliance:
          type: string
          enum:
            - AUTO
            - MANUAL
        OutputLocation:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation'
        ScheduleOffset:
          maximum: 6
          type: integer
          minimum: 1
        Name:
          x-examples:
            - AWS-GatherSoftwareInventory
            - MyCustomSSMDocument
          pattern: ^[a-zA-Z0-9_\-.:/]{3,200}$
          description: The name of the SSM document.
          type: string
        ApplyOnlyAtCronInterval:
          type: boolean
        DocumentVersion:
          pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
          description: The version of the SSM document to associate with the target.
          type: string
        AssociationId:
          x-examples:
            - 88df7b09-95e8-48c4-a3cb-08c2c20d5110
            - 203dd0ec-0055-4bf0-a872-707f72ef06aa
          pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
          description: Unique identifier of the association.
          type: string
        AutomationTargetParameterName:
          minLength: 1
          type: string
          maxLength: 50
      required:
        - Name
      x-stackql-resource-name: association
      description: The AWS::SSM::Association resource associates an SSM document in AWS Systems Manager with EC2 instances that contain a configuration agent to process the document.
      x-type-name: AWS::SSM::Association
      x-stackql-primary-identifier:
        - AssociationId
      x-write-only-properties:
        - WaitForSuccessTimeoutSeconds
      x-read-only-properties:
        - AssociationId
      x-required-properties:
        - Name
      x-tagging:
        taggable: false
      x-required-permissions:
        read:
          - ssm:DescribeAssociation
          - resource-groups:GetGroupQuery
          - resource-groups:ListGroups
          - resource-groups:ListGroupResources
        create:
          - ec2:DescribeInstanceStatus
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - ssm:CreateAssociation
          - ssm:DescribeAssociation
          - ssm:GetCalendarState
        update:
          - iam:PassRole
          - ssm:UpdateAssociation
          - ssm:GetCalendarState
        list:
          - ssm:ListAssociations
        delete:
          - ssm:DeleteAssociation
    AttachmentsSource:
      type: object
      properties:
        Key:
          description: The key of a key-value pair that identifies the location of an attachment to a document.
          type: string
          enum:
            - SourceUrl
            - S3FileUrl
            - AttachmentReference
        Values:
          description: The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 100000
          minItems: 1
          maxItems: 1
          x-insertionOrder: false
        Name:
          description: The name of the document attachment file.
          type: string
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
          minLength: 1
          maxLength: 128
      additionalProperties: false
    Tag:
      description: Metadata that you assign to your AWS resources.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    DocumentRequires:
      type: object
      properties:
        Name:
          description: The name of the required SSM document. The name can be an Amazon Resource Name (ARN).
          type: string
          pattern: ^[a-zA-Z0-9_\-.:/]{3,200}$
          maxLength: 200
        Version:
          description: The document version required by the current document.
          type: string
          pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
          maxLength: 8
      additionalProperties: false
    Document:
      type: object
      properties:
        Content:
          description: The content for the Systems Manager document in JSON, YAML or String format.
          type: object
        Attachments:
          description: A list of key and value pairs that describe attachments to a version of a document.
          type: array
          items:
            $ref: '#/components/schemas/AttachmentsSource'
          minItems: 0
          maxItems: 20
          x-insertionOrder: false
        Name:
          description: A name for the Systems Manager document.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
        VersionName:
          description: An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{1,128}$
        DocumentType:
          description: The type of document to create.
          type: string
          enum:
            - ApplicationConfiguration
            - ApplicationConfigurationSchema
            - Automation
            - Automation.ChangeTemplate
            - ChangeCalendar
            - CloudFormation
            - Command
            - DeploymentStrategy
            - Package
            - Policy
            - ProblemAnalysis
            - ProblemAnalysisTemplate
            - Session
        DocumentFormat:
          description: Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
          type: string
          enum:
            - YAML
            - JSON
            - TEXT
          default: JSON
        TargetType:
          description: Specify a target type to define the kinds of resources the document can run on.
          type: string
          pattern: ^\/[\w\.\-\:\/]*$
        Tags:
          description: Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 1000
          x-insertionOrder: false
        Requires:
          description: A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document.
          type: array
          items:
            $ref: '#/components/schemas/DocumentRequires'
          minItems: 1
          x-insertionOrder: false
        UpdateMethod:
          description: Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the update will create a new version.
          type: string
          enum:
            - Replace
            - NewVersion
          default: Replace
      required:
        - Content
      x-stackql-resource-name: document
      description: The AWS::SSM::Document resource is an SSM document in AWS Systems Manager that defines the actions that Systems Manager performs, which can be used to set up and run commands on your instances.
      x-type-name: AWS::SSM::Document
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - DocumentType
      x-conditional-create-only-properties:
        - Content
        - Attachments
        - VersionName
        - DocumentFormat
        - TargetType
        - Requires
      x-write-only-properties:
        - UpdateMethod
        - Attachments
      x-required-properties:
        - Content
      x-tagging:
        taggable: true
      x-required-permissions:
        create:
          - ssm:CreateDocument
          - ssm:GetDocument
          - ssm:AddTagsToResource
          - ssm:ListTagsForResource
          - s3:GetObject
          - iam:PassRole
        read:
          - ssm:GetDocument
          - ssm:ListTagsForResource
        update:
          - ssm:UpdateDocument
          - s3:GetObject
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:ListTagsForResource
          - iam:PassRole
          - ssm:UpdateDocumentDefaultVersion
          - ssm:DescribeDocument
        delete:
          - ssm:DeleteDocument
          - ssm:GetDocument
        list:
          - ssm:ListDocuments
    Parameter:
      type: object
      properties:
        Type:
          type: string
          description: The type of parameter.
          enum:
            - String
            - StringList
        Value:
          type: string
          description: |-
            The parameter value.
              If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.
        Description:
          type: string
          description: Information about the parameter.
        Policies:
          type: string
          description: |-
            Information about the policies assigned to a parameter.
              [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.
        AllowedPattern:
          type: string
          description: 'A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\d+$``'
        Tier:
          type: string
          description: The parameter tier.
          enum:
            - Standard
            - Advanced
            - Intelligent-Tiering
        Tags:
          type: object
          description: Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
        DataType:
          type: string
          description: The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
          enum:
            - text
            - aws:ec2:image
        Name:
          type: string
          description: |-
            The name of the parameter.
              The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
      required:
        - Value
        - Type
      x-stackql-resource-name: parameter
      description: |-
        The ``AWS::SSM::Parameter`` resource creates an SSM parameter in SYSlong Parameter Store.
          To create an SSM parameter, you must have the IAMlong (IAM) permissions ``ssm:PutParameter`` and ``ssm:AddTagsToResource``. On stack creation, CFNlong adds the following three tags to the parameter: ``aws:cloudformation:stack-name``, ``aws:cloudformation:logical-id``, and ``aws:cloudformation:stack-id``, in addition to any custom tags you specify.
         To add, update, or remove tags during stack update, you must have IAM permissions for both ``ssm:AddTagsToResource`` and ``ssm:RemoveTagsFromResource``. For more information, see [Managing Access Using Policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/security-iam.html#security_iam_access-manage) in the *User Guide*.
          For information about valid values for parameters, see [About requirements and constraints for parameter names](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html#sysman-parameter-name-constraints) in the *User Guide* and [PutParameter](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PutParameter.html) in the *API Reference*.
      x-type-name: AWS::SSM::Parameter
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - Tags
        - Description
        - Tier
        - AllowedPattern
        - Policies
      x-required-properties:
        - Value
        - Type
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - ssm:PutParameter
          - ssm:AddTagsToResource
          - ssm:GetParameters
        read:
          - ssm:GetParameters
        update:
          - ssm:PutParameter
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:GetParameters
        delete:
          - ssm:DeleteParameter
        list:
          - ssm:DescribeParameters
    PatchFilterGroup:
      description: The patch filter group that defines the criteria for the rule.
      type: object
      additionalProperties: false
      properties:
        PatchFilters:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PatchFilter'
          minItems: 0
          maxItems: 5
    PatchSource:
      description: Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
      type: object
      additionalProperties: false
      properties:
        Products:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 128
          minItems: 0
          maxItems: 20
        Configuration:
          type: string
          minLength: 1
          maxLength: 1024
        Name:
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,50}$
    RuleGroup:
      description: A set of rules defining the approval rules for a patch baseline.
      type: object
      additionalProperties: false
      properties:
        PatchRules:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Rule'
          minItems: 0
          maxItems: 10
      x-insertionOrder: false
    Rule:
      description: Defines an approval rule for a patch baseline.
      type: object
      additionalProperties: false
      properties:
        ApproveUntilDate:
          type: string
          minLength: 0
          maxLength: 10
        EnableNonSecurity:
          type: boolean
          default: false
        PatchFilterGroup:
          $ref: '#/components/schemas/PatchFilterGroup'
        ApproveAfterDays:
          type: integer
          minimum: 0
          maximum: 360
        ComplianceLevel:
          type: string
          enum:
            - CRITICAL
            - HIGH
            - INFORMATIONAL
            - LOW
            - MEDIUM
            - UNSPECIFIED
      x-insertionOrder: false
    PatchFilter:
      description: Defines which patches should be included in a patch baseline.
      type: object
      additionalProperties: false
      properties:
        Values:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 64
          minItems: 0
          maxItems: 20
        Key:
          type: string
          enum:
            - ADVISORY_ID
            - ARCH
            - BUGZILLA_ID
            - CLASSIFICATION
            - CVE_ID
            - EPOCH
            - MSRC_SEVERITY
            - NAME
            - PATCH_ID
            - PATCH_SET
            - PRIORITY
            - PRODUCT
            - PRODUCT_FAMILY
            - RELEASE
            - REPOSITORY
            - SECTION
            - SECURITY
            - SEVERITY
            - VERSION
    PatchBaseline:
      type: object
      properties:
        Id:
          description: The ID of the patch baseline.
          type: string
          pattern: ^[a-zA-Z0-9_\-:/]{20,128}$
          minLength: 20
          maxLength: 128
        DefaultBaseline:
          description: Set the baseline as default baseline. Only registering to default patch baseline is allowed.
          type: boolean
          default: false
        OperatingSystem:
          description: Defines the operating system the patch baseline applies to. The Default value is WINDOWS.
          type: string
          default: WINDOWS
          enum:
            - WINDOWS
            - AMAZON_LINUX
            - AMAZON_LINUX_2
            - AMAZON_LINUX_2022
            - AMAZON_LINUX_2023
            - UBUNTU
            - REDHAT_ENTERPRISE_LINUX
            - SUSE
            - CENTOS
            - ORACLE_LINUX
            - DEBIAN
            - MACOS
            - RASPBIAN
            - ROCKY_LINUX
            - ALMA_LINUX
        Description:
          description: The description of the patch baseline.
          type: string
          minLength: 1
          maxLength: 1024
        ApprovalRules:
          $ref: '#/components/schemas/RuleGroup'
        Sources:
          description: Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PatchSource'
          minItems: 0
          maxItems: 20
        Name:
          description: The name of the patch baseline.
          type: string
          pattern: ^[a-zA-Z0-9_\-.]{3,128}$
          minLength: 3
          maxLength: 128
        RejectedPatches:
          description: A list of explicitly rejected patches for the baseline.
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 100
          minItems: 0
          maxItems: 50
          x-insertionOrder: false
        ApprovedPatches:
          description: A list of explicitly approved patches for the baseline.
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 100
          minItems: 0
          maxItems: 50
          x-insertionOrder: false
        RejectedPatchesAction:
          description: The action for Patch Manager to take on patches included in the RejectedPackages list.
          type: string
          default: ALLOW_AS_DEPENDENCY
          enum:
            - ALLOW_AS_DEPENDENCY
            - BLOCK
        PatchGroups:
          description: PatchGroups is used to associate instances with a specific patch baseline
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 256
        ApprovedPatchesComplianceLevel:
          description: Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.
          type: string
          default: UNSPECIFIED
          enum:
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
            - INFORMATIONAL
            - UNSPECIFIED
        ApprovedPatchesEnableNonSecurity:
          description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
          type: boolean
          default: false
        GlobalFilters:
          description: A set of global filters used to include patches in the baseline.
          $ref: '#/components/schemas/PatchFilterGroup'
        Tags:
          description: Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways.
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 1000
      required:
        - Name
      x-stackql-resource-name: patch_baseline
      description: Resource Type definition for AWS::SSM::PatchBaseline
      x-type-name: AWS::SSM::PatchBaseline
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - OperatingSystem
      x-read-only-properties:
        - Id
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - ssm:CreatePatchBaseline
          - ssm:RegisterPatchBaselineForPatchGroup
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:ListTagsForResource
          - ssm:GetDefaultPatchBaseline
          - ssm:RegisterDefaultPatchBaseline
        delete:
          - ssm:DeletePatchBaseline
          - ssm:GetPatchBaseline
          - ssm:DeregisterPatchBaselineForPatchGroup
        list:
          - ssm:DescribePatchBaselines
          - ssm:GetDefaultPatchBaseline
          - ssm:GetPatchBaseline
          - ssm:ListTagsForResource
        read:
          - ssm:GetDefaultPatchBaseline
          - ssm:GetPatchBaseline
          - ssm:ListTagsForResource
        update:
          - ssm:UpdatePatchBaseline
          - ssm:DeregisterPatchBaselineForPatchGroup
          - ssm:AddTagsToResource
          - ssm:RemoveTagsFromResource
          - ssm:ListTagsForResource
          - ssm:GetDefaultPatchBaseline
          - ssm:RegisterDefaultPatchBaseline
    S3Destination:
      type: object
      additionalProperties: false
      properties:
        KMSKeyArn:
          type: string
          minLength: 1
          maxLength: 512
        BucketPrefix:
          type: string
          minLength: 1
          maxLength: 256
        BucketName:
          type: string
          minLength: 1
          maxLength: 2048
        BucketRegion:
          type: string
          minLength: 1
          maxLength: 64
        SyncFormat:
          type: string
          minLength: 1
          maxLength: 1024
      required:
        - BucketName
        - BucketRegion
        - SyncFormat
    SyncSource:
      type: object
      additionalProperties: false
      properties:
        IncludeFutureRegions:
          type: boolean
        SourceRegions:
          type: array
          uniqueItems: false
          items:
            type: string
        SourceType:
          type: string
          minLength: 1
          maxLength: 64
        AwsOrganizationsSource:
          $ref: '#/components/schemas/AwsOrganizationsSource'
      required:
        - SourceType
        - SourceRegions
    AwsOrganizationsSource:
      type: object
      additionalProperties: false
      properties:
        OrganizationalUnits:
          type: array
          uniqueItems: false
          items:
            type: string
        OrganizationSourceType:
          type: string
          minLength: 1
          maxLength: 64
      required:
        - OrganizationSourceType
    ResourceDataSync:
      type: object
      properties:
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        KMSKeyArn:
          type: string
          minLength: 0
          maxLength: 512
        SyncSource:
          $ref: '#/components/schemas/SyncSource'
        BucketName:
          type: string
          minLength: 1
          maxLength: 2048
        BucketRegion:
          type: string
          minLength: 1
          maxLength: 64
        SyncFormat:
          type: string
          minLength: 0
          maxLength: 1024
        SyncName:
          type: string
          minLength: 1
          maxLength: 64
        SyncType:
          type: string
          minLength: 1
          maxLength: 64
        BucketPrefix:
          type: string
          minLength: 0
          maxLength: 64
      required:
        - SyncName
      x-stackql-resource-name: resource_data_sync
      description: Resource Type definition for AWS::SSM::ResourceDataSync
      x-type-name: AWS::SSM::ResourceDataSync
      x-stackql-primary-identifier:
        - SyncName
      x-create-only-properties:
        - KMSKeyArn
        - SyncFormat
        - BucketPrefix
        - SyncName
        - BucketRegion
        - BucketName
        - S3Destination
        - SyncType
      x-read-only-properties:
        - SyncName
      x-required-properties:
        - SyncName
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - ssm:CreateResourceDataSync
          - ssm:ListResourceDataSync
        delete:
          - ssm:ListResourceDataSync
          - ssm:DeleteResourceDataSync
        update:
          - ssm:ListResourceDataSync
          - ssm:UpdateResourceDataSync
        list:
          - ssm:ListResourceDataSync
        read:
          - ssm:ListResourceDataSync
    ResourcePolicy:
      type: object
      properties:
        ResourceArn:
          type: string
          description: Arn of OpsItemGroup etc.
        Policy:
          type: object
          description: Actual policy statement.
        PolicyId:
          type: string
          description: 'An unique identifier within the policies of a resource. '
        PolicyHash:
          type: string
          description: A snapshot identifier for the policy over time.
      required:
        - ResourceArn
        - Policy
      x-stackql-resource-name: resource_policy
      description: Resource Type definition for AWS::SSM::ResourcePolicy
      x-type-name: AWS::SSM::ResourcePolicy
      x-stackql-primary-identifier:
        - PolicyId
        - ResourceArn
      x-create-only-properties:
        - ResourceArn
      x-read-only-properties:
        - PolicyId
        - PolicyHash
      x-required-properties:
        - ResourceArn
        - Policy
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - ssm:PutResourcePolicy
        read:
          - ssm:GetResourcePolicies
        update:
          - ssm:GetResourcePolicies
          - ssm:PutResourcePolicy
        delete:
          - ssm:GetResourcePolicies
          - ssm:DeleteResourcePolicy
        list:
          - ssm:GetResourcePolicies
    CreateAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AssociationName:
              pattern: ^[a-zA-Z0-9_\-.]{3,128}$
              description: The name of the association.
              type: string
            CalendarNames:
              x-examples:
                - - calendar1
                  - calendar2
                - - calendar3
              type: array
              items:
                type: string
            ScheduleExpression:
              x-examples:
                - cron(0 0 */1 * * ? *)
                - cron(0 16 ? * TUE *)
                - rate(30 minutes)
                - rate(7 days)
              minLength: 1
              description: A Cron or Rate expression that specifies when the association is applied to the target.
              type: string
              maxLength: 256
            MaxErrors:
              x-examples:
                - 1%
                - 10%
                - 50%
                - '1'
              pattern: ^([1-9][0-9]{0,6}|[0]|[1-9][0-9]%|[0-9]%|100%)$
              type: string
            Parameters:
              x-patternProperties:
                .{1,255}:
                  $ref: '#/components/schemas/ParameterValues'
              description: Parameter values that the SSM document uses at runtime.
              additionalProperties: false
              type: object
            InstanceId:
              x-examples:
                - i-0e60836d21cf313c4
                - mi-0532c22e49636ee13
              pattern: (^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)
              description: The ID of the instance that the SSM document is associated with.
              type: string
            WaitForSuccessTimeoutSeconds:
              maximum: 172800
              type: integer
              minimum: 15
            MaxConcurrency:
              x-examples:
                - 1%
                - 10%
                - 50%
                - '1'
              pattern: ^([1-9][0-9]{0,6}|[1-9][0-9]%|[1-9]%|100%)$
              type: string
            ComplianceSeverity:
              type: string
              enum:
                - CRITICAL
                - HIGH
                - MEDIUM
                - LOW
                - UNSPECIFIED
            Targets:
              minItems: 0
              maxItems: 5
              description: The targets that the SSM document sends commands to.
              type: array
              items:
                $ref: '#/components/schemas/Target'
            SyncCompliance:
              type: string
              enum:
                - AUTO
                - MANUAL
            OutputLocation:
              $ref: '#/components/schemas/InstanceAssociationOutputLocation'
            ScheduleOffset:
              maximum: 6
              type: integer
              minimum: 1
            Name:
              x-examples:
                - AWS-GatherSoftwareInventory
                - MyCustomSSMDocument
              pattern: ^[a-zA-Z0-9_\-.:/]{3,200}$
              description: The name of the SSM document.
              type: string
            ApplyOnlyAtCronInterval:
              type: boolean
            DocumentVersion:
              pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
              description: The version of the SSM document to associate with the target.
              type: string
            AssociationId:
              x-examples:
                - 88df7b09-95e8-48c4-a3cb-08c2c20d5110
                - 203dd0ec-0055-4bf0-a872-707f72ef06aa
              pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
              description: Unique identifier of the association.
              type: string
            AutomationTargetParameterName:
              minLength: 1
              type: string
              maxLength: 50
          x-stackQL-stringOnly: true
      x-title: CreateAssociationRequest
      type: object
      required: []
    CreateDocumentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Content:
              description: The content for the Systems Manager document in JSON, YAML or String format.
              type: object
            Attachments:
              description: A list of key and value pairs that describe attachments to a version of a document.
              type: array
              items:
                $ref: '#/components/schemas/AttachmentsSource'
              minItems: 0
              maxItems: 20
              x-insertionOrder: false
            Name:
              description: A name for the Systems Manager document.
              type: string
              pattern: ^[a-zA-Z0-9_\-.]{3,128}$
            VersionName:
              description: An optional field specifying the version of the artifact you are creating with the document. This value is unique across all versions of a document, and cannot be changed.
              type: string
              pattern: ^[a-zA-Z0-9_\-.]{1,128}$
            DocumentType:
              description: The type of document to create.
              type: string
              enum:
                - ApplicationConfiguration
                - ApplicationConfigurationSchema
                - Automation
                - Automation.ChangeTemplate
                - ChangeCalendar
                - CloudFormation
                - Command
                - DeploymentStrategy
                - Package
                - Policy
                - ProblemAnalysis
                - ProblemAnalysisTemplate
                - Session
            DocumentFormat:
              description: Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
              type: string
              enum:
                - YAML
                - JSON
                - TEXT
              default: JSON
            TargetType:
              description: Specify a target type to define the kinds of resources the document can run on.
              type: string
              pattern: ^\/[\w\.\-\:\/]*$
            Tags:
              description: Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 1000
              x-insertionOrder: false
            Requires:
              description: A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an ApplicationConfigurationSchema document.
              type: array
              items:
                $ref: '#/components/schemas/DocumentRequires'
              minItems: 1
              x-insertionOrder: false
            UpdateMethod:
              description: Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the update will create a new version.
              type: string
              enum:
                - Replace
                - NewVersion
              default: Replace
          x-stackQL-stringOnly: true
      x-title: CreateDocumentRequest
      type: object
      required: []
    CreateParameterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Type:
              type: string
              description: The type of parameter.
              enum:
                - String
                - StringList
            Value:
              type: string
              description: |-
                The parameter value.
                  If type is ``StringList``, the system returns a comma-separated string with no spaces between commas in the ``Value`` field.
            Description:
              type: string
              description: Information about the parameter.
            Policies:
              type: string
              description: |-
                Information about the policies assigned to a parameter.
                  [Assigning parameter policies](https://docs.aws.amazon.com/systems-manager/latest/userguide/parameter-store-policies.html) in the *User Guide*.
            AllowedPattern:
              type: string
              description: 'A regular expression used to validate the parameter value. For example, for ``String`` types with values restricted to numbers, you can specify the following: ``AllowedPattern=^\d+$``'
            Tier:
              type: string
              description: The parameter tier.
              enum:
                - Standard
                - Advanced
                - Intelligent-Tiering
            Tags:
              type: object
              description: Optional metadata that you assign to a resource in the form of an arbitrary set of tags (key-value pairs). Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a SYS parameter to identify the type of resource to which it applies, the environment, or the type of configuration data referenced by the parameter.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
              additionalProperties: false
            DataType:
              type: string
              description: The data type of the parameter, such as ``text`` or ``aws:ec2:image``. The default is ``text``.
              enum:
                - text
                - aws:ec2:image
            Name:
              type: string
              description: |-
                The name of the parameter.
                  The maximum length constraint listed below includes capacity for additional system attributes that aren't part of the name. The maximum length for a parameter name, including the full length of the parameter Amazon Resource Name (ARN), is 1011 characters. For example, the length of the following parameter name is 65 characters, not 20 characters: ``arn:aws:ssm:us-east-2:111222333444:parameter/ExampleParameterName``
          x-stackQL-stringOnly: true
      x-title: CreateParameterRequest
      type: object
      required: []
    CreatePatchBaselineRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              description: The ID of the patch baseline.
              type: string
              pattern: ^[a-zA-Z0-9_\-:/]{20,128}$
              minLength: 20
              maxLength: 128
            DefaultBaseline:
              description: Set the baseline as default baseline. Only registering to default patch baseline is allowed.
              type: boolean
              default: false
            OperatingSystem:
              description: Defines the operating system the patch baseline applies to. The Default value is WINDOWS.
              type: string
              default: WINDOWS
              enum:
                - WINDOWS
                - AMAZON_LINUX
                - AMAZON_LINUX_2
                - AMAZON_LINUX_2022
                - AMAZON_LINUX_2023
                - UBUNTU
                - REDHAT_ENTERPRISE_LINUX
                - SUSE
                - CENTOS
                - ORACLE_LINUX
                - DEBIAN
                - MACOS
                - RASPBIAN
                - ROCKY_LINUX
                - ALMA_LINUX
            Description:
              description: The description of the patch baseline.
              type: string
              minLength: 1
              maxLength: 1024
            ApprovalRules:
              $ref: '#/components/schemas/RuleGroup'
            Sources:
              description: Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/PatchSource'
              minItems: 0
              maxItems: 20
            Name:
              description: The name of the patch baseline.
              type: string
              pattern: ^[a-zA-Z0-9_\-.]{3,128}$
              minLength: 3
              maxLength: 128
            RejectedPatches:
              description: A list of explicitly rejected patches for the baseline.
              type: array
              uniqueItems: false
              items:
                type: string
                minLength: 1
                maxLength: 100
              minItems: 0
              maxItems: 50
              x-insertionOrder: false
            ApprovedPatches:
              description: A list of explicitly approved patches for the baseline.
              type: array
              uniqueItems: false
              items:
                type: string
                minLength: 1
                maxLength: 100
              minItems: 0
              maxItems: 50
              x-insertionOrder: false
            RejectedPatchesAction:
              description: The action for Patch Manager to take on patches included in the RejectedPackages list.
              type: string
              default: ALLOW_AS_DEPENDENCY
              enum:
                - ALLOW_AS_DEPENDENCY
                - BLOCK
            PatchGroups:
              description: PatchGroups is used to associate instances with a specific patch baseline
              type: array
              uniqueItems: false
              items:
                type: string
                minLength: 1
                maxLength: 256
            ApprovedPatchesComplianceLevel:
              description: Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.
              type: string
              default: UNSPECIFIED
              enum:
                - CRITICAL
                - HIGH
                - MEDIUM
                - LOW
                - INFORMATIONAL
                - UNSPECIFIED
            ApprovedPatchesEnableNonSecurity:
              description: Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
              type: boolean
              default: false
            GlobalFilters:
              description: A set of global filters used to include patches in the baseline.
              $ref: '#/components/schemas/PatchFilterGroup'
            Tags:
              description: Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways.
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 1000
          x-stackQL-stringOnly: true
      x-title: CreatePatchBaselineRequest
      type: object
      required: []
    CreateResourceDataSyncRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            S3Destination:
              $ref: '#/components/schemas/S3Destination'
            KMSKeyArn:
              type: string
              minLength: 0
              maxLength: 512
            SyncSource:
              $ref: '#/components/schemas/SyncSource'
            BucketName:
              type: string
              minLength: 1
              maxLength: 2048
            BucketRegion:
              type: string
              minLength: 1
              maxLength: 64
            SyncFormat:
              type: string
              minLength: 0
              maxLength: 1024
            SyncName:
              type: string
              minLength: 1
              maxLength: 64
            SyncType:
              type: string
              minLength: 1
              maxLength: 64
            BucketPrefix:
              type: string
              minLength: 0
              maxLength: 64
          x-stackQL-stringOnly: true
      x-title: CreateResourceDataSyncRequest
      type: object
      required: []
    CreateResourcePolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ResourceArn:
              type: string
              description: Arn of OpsItemGroup etc.
            Policy:
              type: object
              description: Actual policy statement.
            PolicyId:
              type: string
              description: 'An unique identifier within the policies of a resource. '
            PolicyHash:
              type: string
              description: A snapshot identifier for the policy over time.
          x-stackQL-stringOnly: true
      x-title: CreateResourcePolicyRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    associations:
      name: associations
      id: aws.ssm.associations
      x-cfn-schema-name: Association
      x-cfn-type-name: AWS::SSM::Association
      x-identifiers:
        - AssociationId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Association&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Association"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Association"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Association"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/associations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/associations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssociationName') as association_name,
              JSON_EXTRACT(Properties, '$.CalendarNames') as calendar_names,
              JSON_EXTRACT(Properties, '$.ScheduleExpression') as schedule_expression,
              JSON_EXTRACT(Properties, '$.MaxErrors') as max_errors,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.WaitForSuccessTimeoutSeconds') as wait_for_success_timeout_seconds,
              JSON_EXTRACT(Properties, '$.MaxConcurrency') as max_concurrency,
              JSON_EXTRACT(Properties, '$.ComplianceSeverity') as compliance_severity,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.SyncCompliance') as sync_compliance,
              JSON_EXTRACT(Properties, '$.OutputLocation') as output_location,
              JSON_EXTRACT(Properties, '$.ScheduleOffset') as schedule_offset,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ApplyOnlyAtCronInterval') as apply_only_at_cron_interval,
              JSON_EXTRACT(Properties, '$.DocumentVersion') as document_version,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id,
              JSON_EXTRACT(Properties, '$.AutomationTargetParameterName') as automation_target_parameter_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Association'
              AND data__Identifier = '<AssociationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AssociationName') as association_name,
                JSON_EXTRACT(detail.Properties, '$.CalendarNames') as calendar_names,
                JSON_EXTRACT(detail.Properties, '$.ScheduleExpression') as schedule_expression,
                JSON_EXTRACT(detail.Properties, '$.MaxErrors') as max_errors,
                JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
                JSON_EXTRACT(detail.Properties, '$.InstanceId') as instance_id,
                JSON_EXTRACT(detail.Properties, '$.WaitForSuccessTimeoutSeconds') as wait_for_success_timeout_seconds,
                JSON_EXTRACT(detail.Properties, '$.MaxConcurrency') as max_concurrency,
                JSON_EXTRACT(detail.Properties, '$.ComplianceSeverity') as compliance_severity,
                JSON_EXTRACT(detail.Properties, '$.Targets') as targets,
                JSON_EXTRACT(detail.Properties, '$.SyncCompliance') as sync_compliance,
                JSON_EXTRACT(detail.Properties, '$.OutputLocation') as output_location,
                JSON_EXTRACT(detail.Properties, '$.ScheduleOffset') as schedule_offset,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ApplyOnlyAtCronInterval') as apply_only_at_cron_interval,
                JSON_EXTRACT(detail.Properties, '$.DocumentVersion') as document_version,
                JSON_EXTRACT(detail.Properties, '$.AssociationId') as association_id,
                JSON_EXTRACT(detail.Properties, '$.AutomationTargetParameterName') as automation_target_parameter_name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSM::Association'
                AND detail.data__TypeName = 'AWS::SSM::Association'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AssociationName') as association_name,
                  json_extract_path_text(Properties, 'CalendarNames') as calendar_names,
                  json_extract_path_text(Properties, 'ScheduleExpression') as schedule_expression,
                  json_extract_path_text(Properties, 'MaxErrors') as max_errors,
                  json_extract_path_text(Properties, 'Parameters') as parameters,
                  json_extract_path_text(Properties, 'InstanceId') as instance_id,
                  json_extract_path_text(Properties, 'WaitForSuccessTimeoutSeconds') as wait_for_success_timeout_seconds,
                  json_extract_path_text(Properties, 'MaxConcurrency') as max_concurrency,
                  json_extract_path_text(Properties, 'ComplianceSeverity') as compliance_severity,
                  json_extract_path_text(Properties, 'Targets') as targets,
                  json_extract_path_text(Properties, 'SyncCompliance') as sync_compliance,
                  json_extract_path_text(Properties, 'OutputLocation') as output_location,
                  json_extract_path_text(Properties, 'ScheduleOffset') as schedule_offset,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ApplyOnlyAtCronInterval') as apply_only_at_cron_interval,
                  json_extract_path_text(Properties, 'DocumentVersion') as document_version,
                  json_extract_path_text(Properties, 'AssociationId') as association_id,
                  json_extract_path_text(Properties, 'AutomationTargetParameterName') as automation_target_parameter_name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Association'
                  AND data__Identifier = '<AssociationId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AssociationName') as association_name,
                    json_extract_path_text(detail.Properties, 'CalendarNames') as calendar_names,
                    json_extract_path_text(detail.Properties, 'ScheduleExpression') as schedule_expression,
                    json_extract_path_text(detail.Properties, 'MaxErrors') as max_errors,
                    json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                    json_extract_path_text(detail.Properties, 'InstanceId') as instance_id,
                    json_extract_path_text(detail.Properties, 'WaitForSuccessTimeoutSeconds') as wait_for_success_timeout_seconds,
                    json_extract_path_text(detail.Properties, 'MaxConcurrency') as max_concurrency,
                    json_extract_path_text(detail.Properties, 'ComplianceSeverity') as compliance_severity,
                    json_extract_path_text(detail.Properties, 'Targets') as targets,
                    json_extract_path_text(detail.Properties, 'SyncCompliance') as sync_compliance,
                    json_extract_path_text(detail.Properties, 'OutputLocation') as output_location,
                    json_extract_path_text(detail.Properties, 'ScheduleOffset') as schedule_offset,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ApplyOnlyAtCronInterval') as apply_only_at_cron_interval,
                    json_extract_path_text(detail.Properties, 'DocumentVersion') as document_version,
                    json_extract_path_text(detail.Properties, 'AssociationId') as association_id,
                    json_extract_path_text(detail.Properties, 'AutomationTargetParameterName') as automation_target_parameter_name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSM::Association'
                    AND detail.data__TypeName = 'AWS::SSM::Association'
                    AND listing.region = 'us-east-1'
    associations_list_only:
      name: associations_list_only
      id: aws.ssm.associations_list_only
      x-cfn-schema-name: Association
      x-cfn-type-name: AWS::SSM::Association
      x-identifiers:
        - AssociationId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Association'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssociationId') as association_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Association'
                AND region = 'us-east-1'
    documents:
      name: documents
      id: aws.ssm.documents
      x-cfn-schema-name: Document
      x-cfn-type-name: AWS::SSM::Document
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Document&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Document"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Document"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Document"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/documents/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/documents/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/documents/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Attachments') as attachments,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.VersionName') as version_name,
              JSON_EXTRACT(Properties, '$.DocumentType') as document_type,
              JSON_EXTRACT(Properties, '$.DocumentFormat') as document_format,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Requires') as requires,
              JSON_EXTRACT(Properties, '$.UpdateMethod') as update_method
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Document'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Content') as content,
                JSON_EXTRACT(detail.Properties, '$.Attachments') as attachments,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.VersionName') as version_name,
                JSON_EXTRACT(detail.Properties, '$.DocumentType') as document_type,
                JSON_EXTRACT(detail.Properties, '$.DocumentFormat') as document_format,
                JSON_EXTRACT(detail.Properties, '$.TargetType') as target_type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Requires') as requires,
                JSON_EXTRACT(detail.Properties, '$.UpdateMethod') as update_method
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSM::Document'
                AND detail.data__TypeName = 'AWS::SSM::Document'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Content') as content,
                  json_extract_path_text(Properties, 'Attachments') as attachments,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'VersionName') as version_name,
                  json_extract_path_text(Properties, 'DocumentType') as document_type,
                  json_extract_path_text(Properties, 'DocumentFormat') as document_format,
                  json_extract_path_text(Properties, 'TargetType') as target_type,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Requires') as requires,
                  json_extract_path_text(Properties, 'UpdateMethod') as update_method
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Document'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Content') as content,
                    json_extract_path_text(detail.Properties, 'Attachments') as attachments,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'VersionName') as version_name,
                    json_extract_path_text(detail.Properties, 'DocumentType') as document_type,
                    json_extract_path_text(detail.Properties, 'DocumentFormat') as document_format,
                    json_extract_path_text(detail.Properties, 'TargetType') as target_type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Requires') as requires,
                    json_extract_path_text(detail.Properties, 'UpdateMethod') as update_method
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSM::Document'
                    AND detail.data__TypeName = 'AWS::SSM::Document'
                    AND listing.region = 'us-east-1'
    documents_list_only:
      name: documents_list_only
      id: aws.ssm.documents_list_only
      x-cfn-schema-name: Document
      x-cfn-type-name: AWS::SSM::Document
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Document'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Document'
                AND region = 'us-east-1'
    document_tags:
      name: document_tags
      id: aws.ssm.document_tags
      x-cfn-schema-name: Document
      x-cfn-type-name: AWS::SSM::Document
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Content') as content,
              JSON_EXTRACT(detail.Properties, '$.Attachments') as attachments,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.VersionName') as version_name,
              JSON_EXTRACT(detail.Properties, '$.DocumentType') as document_type,
              JSON_EXTRACT(detail.Properties, '$.DocumentFormat') as document_format,
              JSON_EXTRACT(detail.Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(detail.Properties, '$.Requires') as requires,
              JSON_EXTRACT(detail.Properties, '$.UpdateMethod') as update_method
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SSM::Document'
              AND detail.data__TypeName = 'AWS::SSM::Document'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Content') as content,
                json_extract_path_text(detail.Properties, 'Attachments') as attachments,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'VersionName') as version_name,
                json_extract_path_text(detail.Properties, 'DocumentType') as document_type,
                json_extract_path_text(detail.Properties, 'DocumentFormat') as document_format,
                json_extract_path_text(detail.Properties, 'TargetType') as target_type,
                json_extract_path_text(detail.Properties, 'Requires') as requires,
                json_extract_path_text(detail.Properties, 'UpdateMethod') as update_method
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SSM::Document'
                AND detail.data__TypeName = 'AWS::SSM::Document'
                AND listing.region = 'us-east-1'
    parameters:
      name: parameters
      id: aws.ssm.parameters
      x-cfn-schema-name: Parameter
      x-cfn-type-name: AWS::SSM::Parameter
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Parameter&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Parameter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Parameter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::Parameter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/parameters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/parameters/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/parameters/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Value') as value,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Policies') as policies,
              JSON_EXTRACT(Properties, '$.AllowedPattern') as allowed_pattern,
              JSON_EXTRACT(Properties, '$.Tier') as tier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.DataType') as data_type,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Parameter'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Value') as value,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Policies') as policies,
                JSON_EXTRACT(detail.Properties, '$.AllowedPattern') as allowed_pattern,
                JSON_EXTRACT(detail.Properties, '$.Tier') as tier,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.DataType') as data_type,
                JSON_EXTRACT(detail.Properties, '$.Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSM::Parameter'
                AND detail.data__TypeName = 'AWS::SSM::Parameter'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Value') as value,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Policies') as policies,
                  json_extract_path_text(Properties, 'AllowedPattern') as allowed_pattern,
                  json_extract_path_text(Properties, 'Tier') as tier,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'DataType') as data_type,
                  json_extract_path_text(Properties, 'Name') as name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::Parameter'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Value') as value,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Policies') as policies,
                    json_extract_path_text(detail.Properties, 'AllowedPattern') as allowed_pattern,
                    json_extract_path_text(detail.Properties, 'Tier') as tier,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'DataType') as data_type,
                    json_extract_path_text(detail.Properties, 'Name') as name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSM::Parameter'
                    AND detail.data__TypeName = 'AWS::SSM::Parameter'
                    AND listing.region = 'us-east-1'
    parameters_list_only:
      name: parameters_list_only
      id: aws.ssm.parameters_list_only
      x-cfn-schema-name: Parameter
      x-cfn-type-name: AWS::SSM::Parameter
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Parameter'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::Parameter'
                AND region = 'us-east-1'
    parameter_tags:
      name: parameter_tags
      id: aws.ssm.parameter_tags
      x-cfn-schema-name: Parameter
      x-cfn-type-name: AWS::SSM::Parameter
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.Value') as value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Policies') as policies,
              JSON_EXTRACT(detail.Properties, '$.AllowedPattern') as allowed_pattern,
              JSON_EXTRACT(detail.Properties, '$.Tier') as tier,
              JSON_EXTRACT(detail.Properties, '$.DataType') as data_type,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SSM::Parameter'
              AND detail.data__TypeName = 'AWS::SSM::Parameter'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'Value') as value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Policies') as policies,
                json_extract_path_text(detail.Properties, 'AllowedPattern') as allowed_pattern,
                json_extract_path_text(detail.Properties, 'Tier') as tier,
                json_extract_path_text(detail.Properties, 'DataType') as data_type,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SSM::Parameter'
                AND detail.data__TypeName = 'AWS::SSM::Parameter'
                AND listing.region = 'us-east-1'
    patch_baselines:
      name: patch_baselines
      id: aws.ssm.patch_baselines
      x-cfn-schema-name: PatchBaseline
      x-cfn-type-name: AWS::SSM::PatchBaseline
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PatchBaseline&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::PatchBaseline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::PatchBaseline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::PatchBaseline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/patch_baselines/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/patch_baselines/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/patch_baselines/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DefaultBaseline') as default_baseline,
              JSON_EXTRACT(Properties, '$.OperatingSystem') as operating_system,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ApprovalRules') as approval_rules,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RejectedPatches') as rejected_patches,
              JSON_EXTRACT(Properties, '$.ApprovedPatches') as approved_patches,
              JSON_EXTRACT(Properties, '$.RejectedPatchesAction') as rejected_patches_action,
              JSON_EXTRACT(Properties, '$.PatchGroups') as patch_groups,
              JSON_EXTRACT(Properties, '$.ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
              JSON_EXTRACT(Properties, '$.ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
              JSON_EXTRACT(Properties, '$.GlobalFilters') as global_filters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.DefaultBaseline') as default_baseline,
                JSON_EXTRACT(detail.Properties, '$.OperatingSystem') as operating_system,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ApprovalRules') as approval_rules,
                JSON_EXTRACT(detail.Properties, '$.Sources') as sources,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.RejectedPatches') as rejected_patches,
                JSON_EXTRACT(detail.Properties, '$.ApprovedPatches') as approved_patches,
                JSON_EXTRACT(detail.Properties, '$.RejectedPatchesAction') as rejected_patches_action,
                JSON_EXTRACT(detail.Properties, '$.PatchGroups') as patch_groups,
                JSON_EXTRACT(detail.Properties, '$.ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
                JSON_EXTRACT(detail.Properties, '$.ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
                JSON_EXTRACT(detail.Properties, '$.GlobalFilters') as global_filters,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSM::PatchBaseline'
                AND detail.data__TypeName = 'AWS::SSM::PatchBaseline'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'DefaultBaseline') as default_baseline,
                  json_extract_path_text(Properties, 'OperatingSystem') as operating_system,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ApprovalRules') as approval_rules,
                  json_extract_path_text(Properties, 'Sources') as sources,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'RejectedPatches') as rejected_patches,
                  json_extract_path_text(Properties, 'ApprovedPatches') as approved_patches,
                  json_extract_path_text(Properties, 'RejectedPatchesAction') as rejected_patches_action,
                  json_extract_path_text(Properties, 'PatchGroups') as patch_groups,
                  json_extract_path_text(Properties, 'ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
                  json_extract_path_text(Properties, 'ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
                  json_extract_path_text(Properties, 'GlobalFilters') as global_filters,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'DefaultBaseline') as default_baseline,
                    json_extract_path_text(detail.Properties, 'OperatingSystem') as operating_system,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ApprovalRules') as approval_rules,
                    json_extract_path_text(detail.Properties, 'Sources') as sources,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'RejectedPatches') as rejected_patches,
                    json_extract_path_text(detail.Properties, 'ApprovedPatches') as approved_patches,
                    json_extract_path_text(detail.Properties, 'RejectedPatchesAction') as rejected_patches_action,
                    json_extract_path_text(detail.Properties, 'PatchGroups') as patch_groups,
                    json_extract_path_text(detail.Properties, 'ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
                    json_extract_path_text(detail.Properties, 'ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
                    json_extract_path_text(detail.Properties, 'GlobalFilters') as global_filters,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSM::PatchBaseline'
                    AND detail.data__TypeName = 'AWS::SSM::PatchBaseline'
                    AND listing.region = 'us-east-1'
    patch_baselines_list_only:
      name: patch_baselines_list_only
      id: aws.ssm.patch_baselines_list_only
      x-cfn-schema-name: PatchBaseline
      x-cfn-type-name: AWS::SSM::PatchBaseline
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::PatchBaseline'
                AND region = 'us-east-1'
    patch_baseline_tags:
      name: patch_baseline_tags
      id: aws.ssm.patch_baseline_tags
      x-cfn-schema-name: PatchBaseline
      x-cfn-type-name: AWS::SSM::PatchBaseline
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.DefaultBaseline') as default_baseline,
              JSON_EXTRACT(detail.Properties, '$.OperatingSystem') as operating_system,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ApprovalRules') as approval_rules,
              JSON_EXTRACT(detail.Properties, '$.Sources') as sources,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.RejectedPatches') as rejected_patches,
              JSON_EXTRACT(detail.Properties, '$.ApprovedPatches') as approved_patches,
              JSON_EXTRACT(detail.Properties, '$.RejectedPatchesAction') as rejected_patches_action,
              JSON_EXTRACT(detail.Properties, '$.PatchGroups') as patch_groups,
              JSON_EXTRACT(detail.Properties, '$.ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
              JSON_EXTRACT(detail.Properties, '$.ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
              JSON_EXTRACT(detail.Properties, '$.GlobalFilters') as global_filters
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SSM::PatchBaseline'
              AND detail.data__TypeName = 'AWS::SSM::PatchBaseline'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'DefaultBaseline') as default_baseline,
                json_extract_path_text(detail.Properties, 'OperatingSystem') as operating_system,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ApprovalRules') as approval_rules,
                json_extract_path_text(detail.Properties, 'Sources') as sources,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'RejectedPatches') as rejected_patches,
                json_extract_path_text(detail.Properties, 'ApprovedPatches') as approved_patches,
                json_extract_path_text(detail.Properties, 'RejectedPatchesAction') as rejected_patches_action,
                json_extract_path_text(detail.Properties, 'PatchGroups') as patch_groups,
                json_extract_path_text(detail.Properties, 'ApprovedPatchesComplianceLevel') as approved_patches_compliance_level,
                json_extract_path_text(detail.Properties, 'ApprovedPatchesEnableNonSecurity') as approved_patches_enable_non_security,
                json_extract_path_text(detail.Properties, 'GlobalFilters') as global_filters
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SSM::PatchBaseline'
                AND detail.data__TypeName = 'AWS::SSM::PatchBaseline'
                AND listing.region = 'us-east-1'
    resource_data_syncs:
      name: resource_data_syncs
      id: aws.ssm.resource_data_syncs
      x-cfn-schema-name: ResourceDataSync
      x-cfn-type-name: AWS::SSM::ResourceDataSync
      x-identifiers:
        - SyncName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResourceDataSync&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::ResourceDataSync"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::ResourceDataSync"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::ResourceDataSync"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_data_syncs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_data_syncs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/resource_data_syncs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.S3Destination') as s3_destination,
              JSON_EXTRACT(Properties, '$.KMSKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.SyncSource') as sync_source,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(Properties, '$.BucketRegion') as bucket_region,
              JSON_EXTRACT(Properties, '$.SyncFormat') as sync_format,
              JSON_EXTRACT(Properties, '$.SyncName') as sync_name,
              JSON_EXTRACT(Properties, '$.SyncType') as sync_type,
              JSON_EXTRACT(Properties, '$.BucketPrefix') as bucket_prefix
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
              AND data__Identifier = '<SyncName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.S3Destination') as s3_destination,
                JSON_EXTRACT(detail.Properties, '$.KMSKeyArn') as kms_key_arn,
                JSON_EXTRACT(detail.Properties, '$.SyncSource') as sync_source,
                JSON_EXTRACT(detail.Properties, '$.BucketName') as bucket_name,
                JSON_EXTRACT(detail.Properties, '$.BucketRegion') as bucket_region,
                JSON_EXTRACT(detail.Properties, '$.SyncFormat') as sync_format,
                JSON_EXTRACT(detail.Properties, '$.SyncName') as sync_name,
                JSON_EXTRACT(detail.Properties, '$.SyncType') as sync_type,
                JSON_EXTRACT(detail.Properties, '$.BucketPrefix') as bucket_prefix
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSM::ResourceDataSync'
                AND detail.data__TypeName = 'AWS::SSM::ResourceDataSync'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'S3Destination') as s3_destination,
                  json_extract_path_text(Properties, 'KMSKeyArn') as kms_key_arn,
                  json_extract_path_text(Properties, 'SyncSource') as sync_source,
                  json_extract_path_text(Properties, 'BucketName') as bucket_name,
                  json_extract_path_text(Properties, 'BucketRegion') as bucket_region,
                  json_extract_path_text(Properties, 'SyncFormat') as sync_format,
                  json_extract_path_text(Properties, 'SyncName') as sync_name,
                  json_extract_path_text(Properties, 'SyncType') as sync_type,
                  json_extract_path_text(Properties, 'BucketPrefix') as bucket_prefix
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
                  AND data__Identifier = '<SyncName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'S3Destination') as s3_destination,
                    json_extract_path_text(detail.Properties, 'KMSKeyArn') as kms_key_arn,
                    json_extract_path_text(detail.Properties, 'SyncSource') as sync_source,
                    json_extract_path_text(detail.Properties, 'BucketName') as bucket_name,
                    json_extract_path_text(detail.Properties, 'BucketRegion') as bucket_region,
                    json_extract_path_text(detail.Properties, 'SyncFormat') as sync_format,
                    json_extract_path_text(detail.Properties, 'SyncName') as sync_name,
                    json_extract_path_text(detail.Properties, 'SyncType') as sync_type,
                    json_extract_path_text(detail.Properties, 'BucketPrefix') as bucket_prefix
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSM::ResourceDataSync'
                    AND detail.data__TypeName = 'AWS::SSM::ResourceDataSync'
                    AND listing.region = 'us-east-1'
    resource_data_syncs_list_only:
      name: resource_data_syncs_list_only
      id: aws.ssm.resource_data_syncs_list_only
      x-cfn-schema-name: ResourceDataSync
      x-cfn-type-name: AWS::SSM::ResourceDataSync
      x-identifiers:
        - SyncName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SyncName') as sync_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SyncName') as sync_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourceDataSync'
                AND region = 'us-east-1'
    resource_policies:
      name: resource_policies
      id: aws.ssm.resource_policies
      x-cfn-schema-name: ResourcePolicy
      x-cfn-type-name: AWS::SSM::ResourcePolicy
      x-identifiers:
        - PolicyId
        - ResourceArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResourcePolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::ResourcePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::ResourcePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSM::ResourcePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.PolicyId') as policy_id,
              JSON_EXTRACT(Properties, '$.PolicyHash') as policy_hash
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
              AND data__Identifier = '<PolicyId>|<ResourceArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ResourceArn') as resource_arn,
                JSON_EXTRACT(detail.Properties, '$.Policy') as policy,
                JSON_EXTRACT(detail.Properties, '$.PolicyId') as policy_id,
                JSON_EXTRACT(detail.Properties, '$.PolicyHash') as policy_hash
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSM::ResourcePolicy'
                AND detail.data__TypeName = 'AWS::SSM::ResourcePolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                  json_extract_path_text(Properties, 'Policy') as policy,
                  json_extract_path_text(Properties, 'PolicyId') as policy_id,
                  json_extract_path_text(Properties, 'PolicyHash') as policy_hash
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
                  AND data__Identifier = '<PolicyId>|<ResourceArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ResourceArn') as resource_arn,
                    json_extract_path_text(detail.Properties, 'Policy') as policy,
                    json_extract_path_text(detail.Properties, 'PolicyId') as policy_id,
                    json_extract_path_text(detail.Properties, 'PolicyHash') as policy_hash
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSM::ResourcePolicy'
                    AND detail.data__TypeName = 'AWS::SSM::ResourcePolicy'
                    AND listing.region = 'us-east-1'
    resource_policies_list_only:
      name: resource_policies_list_only
      id: aws.ssm.resource_policies_list_only
      x-cfn-schema-name: ResourcePolicy
      x-cfn-type-name: AWS::SSM::ResourcePolicy
      x-identifiers:
        - PolicyId
        - ResourceArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PolicyId') as policy_id,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PolicyId') as policy_id,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSM::ResourcePolicy'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Association&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Document&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDocument
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Parameter&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateParameter
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateParameterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PatchBaseline&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePatchBaseline
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePatchBaselineRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResourceDataSync&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResourceDataSync
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResourceDataSyncRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResourcePolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResourcePolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResourcePolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
