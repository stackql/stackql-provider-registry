openapi: 3.0.0
info:
  title: GreengrassV2
  version: 1.0.0
paths: {}
components:
  schemas:
    LambdaFunctionRecipeSource:
      type: object
      properties:
        LambdaArn:
          type: string
          pattern: ^arn:aws(-(cn|us-gov))?:lambda:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
        ComponentName:
          type: string
        ComponentVersion:
          type: string
        ComponentPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPlatform'
          x-insertionOrder: false
        ComponentDependencies:
          type: object
          x-patternProperties:
            .*:
              $ref: '#/components/schemas/ComponentDependencyRequirement'
          additionalProperties: false
        ComponentLambdaParameters:
          $ref: '#/components/schemas/LambdaExecutionParameters'
      additionalProperties: false
    ComponentPlatform:
      type: object
      properties:
        Name:
          type: string
        Attributes:
          type: object
          x-patternProperties:
            .+:
              type: string
          additionalProperties: false
      additionalProperties: false
    ComponentDependencyRequirement:
      type: object
      properties:
        VersionRequirement:
          type: string
        DependencyType:
          type: string
          enum:
            - SOFT
            - HARD
      additionalProperties: false
    LambdaExecutionParameters:
      type: object
      properties:
        EventSources:
          type: array
          items:
            $ref: '#/components/schemas/LambdaEventSource'
          x-insertionOrder: false
        MaxQueueSize:
          type: integer
        MaxInstancesCount:
          type: integer
        MaxIdleTimeInSeconds:
          type: integer
        TimeoutInSeconds:
          type: integer
        StatusTimeoutInSeconds:
          type: integer
        Pinned:
          type: boolean
        InputPayloadEncodingType:
          type: string
          enum:
            - json
            - binary
        ExecArgs:
          type: array
          items:
            type: string
          x-insertionOrder: true
        EnvironmentVariables:
          type: object
          x-patternProperties:
            .+:
              type: string
          additionalProperties: false
        LinuxProcessParams:
          $ref: '#/components/schemas/LambdaLinuxProcessParams'
      additionalProperties: false
    LambdaEventSource:
      type: object
      properties:
        Topic:
          type: string
        Type:
          type: string
          enum:
            - PUB_SUB
            - IOT_CORE
      additionalProperties: false
    LambdaLinuxProcessParams:
      type: object
      properties:
        IsolationMode:
          type: string
          enum:
            - GreengrassContainer
            - NoContainer
        ContainerParams:
          $ref: '#/components/schemas/LambdaContainerParams'
      additionalProperties: false
    LambdaContainerParams:
      type: object
      properties:
        MemorySizeInKB:
          type: integer
        MountROSysfs:
          type: boolean
        Volumes:
          type: array
          items:
            $ref: '#/components/schemas/LambdaVolumeMount'
          x-insertionOrder: false
        Devices:
          type: array
          items:
            $ref: '#/components/schemas/LambdaDeviceMount'
          x-insertionOrder: false
      additionalProperties: false
    LambdaVolumeMount:
      type: object
      properties:
        SourcePath:
          $ref: '#/components/schemas/FilesystemPath'
        DestinationPath:
          $ref: '#/components/schemas/FilesystemPath'
        Permission:
          $ref: '#/components/schemas/LambdaFilesystemPermission'
        AddGroupOwner:
          $ref: '#/components/schemas/LambdaAddGroupOwnerBoolean'
      additionalProperties: false
    LambdaDeviceMount:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/FilesystemPath'
        Permission:
          $ref: '#/components/schemas/LambdaFilesystemPermission'
        AddGroupOwner:
          $ref: '#/components/schemas/LambdaAddGroupOwnerBoolean'
      additionalProperties: false
    FilesystemPath:
      type: string
    LambdaFilesystemPermission:
      type: string
      enum:
        - ro
        - rw
    LambdaAddGroupOwnerBoolean:
      type: boolean
    ComponentVersion:
      type: object
      properties:
        Arn:
          type: string
        ComponentName:
          type: string
        ComponentVersion:
          type: string
        InlineRecipe:
          type: string
        LambdaFunction:
          $ref: '#/components/schemas/LambdaFunctionRecipeSource'
        Tags:
          type: object
          x-patternProperties:
            ^(?!aws:)[a-zA-Z+-=._:/]{1,128}$:
              type: string
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      x-stackql-resource-name: component_version
      x-stackql-primaryIdentifier:
        - Arn
    ComponentDeploymentSpecification:
      type: object
      properties:
        ComponentVersion:
          type: string
          minLength: 1
          maxLength: 64
        ConfigurationUpdate:
          $ref: '#/components/schemas/ComponentConfigurationUpdate'
        RunWith:
          $ref: '#/components/schemas/ComponentRunWith'
      additionalProperties: false
    SystemResourceLimits:
      type: object
      properties:
        Memory:
          type: integer
          format: int64
          minimum: 0
          maximum: 9223372036854772000
        Cpus:
          type: number
          minimum: 0
      additionalProperties: false
    ComponentRunWith:
      type: object
      properties:
        PosixUser:
          type: string
          minLength: 1
        SystemResourceLimits:
          $ref: '#/components/schemas/SystemResourceLimits'
        WindowsUser:
          type: string
          minLength: 1
      additionalProperties: false
    ComponentConfigurationUpdate:
      type: object
      properties:
        Merge:
          type: string
          minLength: 1
          maxLength: 10485760
        Reset:
          type: array
          items:
            type: string
            minLength: 0
            maxLength: 256
          x-insertionOrder: false
      additionalProperties: false
    DeploymentIoTJobConfiguration:
      type: object
      properties:
        JobExecutionsRolloutConfig:
          $ref: '#/components/schemas/IoTJobExecutionsRolloutConfig'
        AbortConfig:
          $ref: '#/components/schemas/IoTJobAbortConfig'
        TimeoutConfig:
          $ref: '#/components/schemas/IoTJobTimeoutConfig'
      additionalProperties: false
    IoTJobExecutionsRolloutConfig:
      type: object
      properties:
        ExponentialRate:
          $ref: '#/components/schemas/IoTJobExponentialRolloutRate'
        MaximumPerMinute:
          type: integer
          minimum: 1
          maximum: 1000
      additionalProperties: false
    IoTJobAbortConfig:
      type: object
      properties:
        CriteriaList:
          type: array
          items:
            $ref: '#/components/schemas/IoTJobAbortCriteria'
          minItems: 1
          x-insertionOrder: false
      required:
        - CriteriaList
      additionalProperties: false
    IoTJobAbortCriteria:
      type: object
      properties:
        FailureType:
          type: string
          enum:
            - FAILED
            - REJECTED
            - TIMED_OUT
            - ALL
        Action:
          type: string
          enum:
            - CANCEL
        ThresholdPercentage:
          type: number
          minimum: 0
          maximum: 100
        MinNumberOfExecutedThings:
          type: integer
          minimum: 1
          maximum: 2147483647
      required:
        - FailureType
        - Action
        - ThresholdPercentage
        - MinNumberOfExecutedThings
      additionalProperties: false
    IoTJobTimeoutConfig:
      type: object
      properties:
        InProgressTimeoutInMinutes:
          type: integer
          minimum: 0
          maximum: 2147483647
      additionalProperties: false
    IoTJobExponentialRolloutRate:
      type: object
      properties:
        BaseRatePerMinute:
          type: integer
          minimum: 1
          maximum: 1000
        IncrementFactor:
          type: number
          minimum: 1
          maximum: 5
        RateIncreaseCriteria:
          $ref: '#/components/schemas/IoTJobRateIncreaseCriteria'
      required:
        - BaseRatePerMinute
        - IncrementFactor
        - RateIncreaseCriteria
      additionalProperties: false
    IoTJobRateIncreaseCriteria:
      type: object
      oneOf:
        - type: object
          additionalProperties: false
          properties:
            NumberOfNotifiedThings:
              $ref: '#/components/schemas/NumberOfThings'
        - type: object
          additionalProperties: false
          properties:
            NumberOfSucceededThings:
              $ref: '#/components/schemas/NumberOfThings'
    NumberOfThings:
      type: integer
      minimum: 1
      maximum: 2147483647
    DeploymentPolicies:
      type: object
      properties:
        FailureHandlingPolicy:
          type: string
          enum:
            - ROLLBACK
            - DO_NOTHING
        ComponentUpdatePolicy:
          $ref: '#/components/schemas/DeploymentComponentUpdatePolicy'
        ConfigurationValidationPolicy:
          $ref: '#/components/schemas/DeploymentConfigurationValidationPolicy'
      additionalProperties: false
    DeploymentComponentUpdatePolicy:
      type: object
      properties:
        TimeoutInSeconds:
          type: integer
          minimum: 1
          maximum: 2147483647
        Action:
          type: string
          enum:
            - NOTIFY_COMPONENTS
            - SKIP_NOTIFY_COMPONENTS
      additionalProperties: false
    DeploymentConfigurationValidationPolicy:
      type: object
      properties:
        TimeoutInSeconds:
          type: integer
          minimum: 1
          maximum: 2147483647
      additionalProperties: false
    Deployment:
      type: object
      properties:
        TargetArn:
          type: string
          pattern: arn:[^:]*:iot:[^:]*:[0-9]+:(thing|thinggroup)/.+
        ParentTargetArn:
          type: string
          pattern: arn:[^:]*:iot:[^:]*:[0-9]+:thinggroup/.+
        DeploymentId:
          type: string
          pattern: .+
        DeploymentName:
          type: string
          minLength: 1
          maxLength: 256
        Components:
          type: object
          x-patternProperties:
            .+:
              $ref: '#/components/schemas/ComponentDeploymentSpecification'
          additionalProperties: false
        IotJobConfiguration:
          $ref: '#/components/schemas/DeploymentIoTJobConfiguration'
        DeploymentPolicies:
          $ref: '#/components/schemas/DeploymentPolicies'
        Tags:
          type: object
          x-patternProperties:
            .*:
              type: string
              maxLength: 256
          maxProperties: 200
          additionalProperties: false
      required:
        - TargetArn
      x-stackql-resource-name: deployment
      x-stackql-primaryIdentifier:
        - DeploymentId
  x-stackQL-resources:
    component_versions:
      name: component_versions
      id: aws.greengrassv2.component_versions
      x-cfn-schema-name: ComponentVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
    component_version:
      name: component_version
      id: aws.greengrassv2.component_version
      x-cfn-schema-name: ComponentVersion
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ComponentName') as component_name,
              JSON_EXTRACT(Properties, '$.ComponentVersion') as component_version,
              JSON_EXTRACT(Properties, '$.InlineRecipe') as inline_recipe,
              JSON_EXTRACT(Properties, '$.LambdaFunction.LambdaArn') as lambda_function_lambda_arn,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentName') as lambda_function_component_name,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentVersion') as lambda_function_component_version,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentPlatforms') as lambda_function_component_platforms,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentDependencies') as lambda_function_component_dependencies,
              JSON_EXTRACT(Properties, '$.LambdaFunction.ComponentLambdaParameters') as lambda_function_component_lambda_parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
    deployments:
      name: deployments
      id: aws.greengrassv2.deployments
      x-cfn-schema-name: Deployment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeploymentId') as deployment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GreengrassV2::Deployment'
    deployment:
      name: deployment
      id: aws.greengrassv2.deployment
      x-cfn-schema-name: Deployment
      x-type: get
      x-identifiers:
        - DeploymentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TargetArn') as target_arn,
              JSON_EXTRACT(Properties, '$.ParentTargetArn') as parent_target_arn,
              JSON_EXTRACT(Properties, '$.DeploymentId') as deployment_id,
              JSON_EXTRACT(Properties, '$.DeploymentName') as deployment_name,
              JSON_EXTRACT(Properties, '$.Components') as components,
              JSON_EXTRACT(Properties, '$.IotJobConfiguration.JobExecutionsRolloutConfig') as iot_job_configuration_job_executions_rollout_config,
              JSON_EXTRACT(Properties, '$.IotJobConfiguration.AbortConfig') as iot_job_configuration_abort_config,
              JSON_EXTRACT(Properties, '$.IotJobConfiguration.TimeoutConfig') as iot_job_configuration_timeout_config,
              JSON_EXTRACT(Properties, '$.DeploymentPolicies.FailureHandlingPolicy') as deployment_policies_failure_handling_policy,
              JSON_EXTRACT(Properties, '$.DeploymentPolicies.ComponentUpdatePolicy') as deployment_policies_component_update_policy,
              JSON_EXTRACT(Properties, '$.DeploymentPolicies.ConfigurationValidationPolicy') as deployment_policies_configuration_validation_policy,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GreengrassV2::Deployment'
