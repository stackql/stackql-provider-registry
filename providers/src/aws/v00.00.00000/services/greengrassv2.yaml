openapi: 3.0.0
info:
  title: GreengrassV2
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    LambdaFunctionRecipeSource:
      type: object
      properties:
        LambdaArn:
          type: string
          pattern: ^arn:[^:]*:lambda:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
        ComponentName:
          type: string
        ComponentVersion:
          type: string
        ComponentPlatforms:
          type: array
          items:
            $ref: '#/components/schemas/ComponentPlatform'
          x-insertionOrder: false
        ComponentDependencies:
          type: object
          x-patternProperties:
            .*:
              $ref: '#/components/schemas/ComponentDependencyRequirement'
          additionalProperties: false
        ComponentLambdaParameters:
          $ref: '#/components/schemas/LambdaExecutionParameters'
      additionalProperties: false
    ComponentPlatform:
      type: object
      properties:
        Name:
          type: string
        Attributes:
          type: object
          x-patternProperties:
            .+:
              type: string
          additionalProperties: false
      additionalProperties: false
    ComponentDependencyRequirement:
      type: object
      properties:
        VersionRequirement:
          type: string
        DependencyType:
          type: string
          enum:
            - SOFT
            - HARD
      additionalProperties: false
    LambdaExecutionParameters:
      type: object
      properties:
        EventSources:
          type: array
          items:
            $ref: '#/components/schemas/LambdaEventSource'
          x-insertionOrder: false
        MaxQueueSize:
          type: integer
        MaxInstancesCount:
          type: integer
        MaxIdleTimeInSeconds:
          type: integer
        TimeoutInSeconds:
          type: integer
        StatusTimeoutInSeconds:
          type: integer
        Pinned:
          type: boolean
        InputPayloadEncodingType:
          type: string
          enum:
            - json
            - binary
        ExecArgs:
          type: array
          items:
            type: string
          x-insertionOrder: true
        EnvironmentVariables:
          type: object
          x-patternProperties:
            .+:
              type: string
          additionalProperties: false
        LinuxProcessParams:
          $ref: '#/components/schemas/LambdaLinuxProcessParams'
      additionalProperties: false
    LambdaEventSource:
      type: object
      properties:
        Topic:
          type: string
        Type:
          type: string
          enum:
            - PUB_SUB
            - IOT_CORE
      additionalProperties: false
    LambdaLinuxProcessParams:
      type: object
      properties:
        IsolationMode:
          type: string
          enum:
            - GreengrassContainer
            - NoContainer
        ContainerParams:
          $ref: '#/components/schemas/LambdaContainerParams'
      additionalProperties: false
    LambdaContainerParams:
      type: object
      properties:
        MemorySizeInKB:
          type: integer
        MountROSysfs:
          type: boolean
        Volumes:
          type: array
          items:
            $ref: '#/components/schemas/LambdaVolumeMount'
          x-insertionOrder: false
        Devices:
          type: array
          items:
            $ref: '#/components/schemas/LambdaDeviceMount'
          x-insertionOrder: false
      additionalProperties: false
    LambdaVolumeMount:
      type: object
      properties:
        SourcePath:
          $ref: '#/components/schemas/FilesystemPath'
        DestinationPath:
          $ref: '#/components/schemas/FilesystemPath'
        Permission:
          $ref: '#/components/schemas/LambdaFilesystemPermission'
        AddGroupOwner:
          $ref: '#/components/schemas/LambdaAddGroupOwnerBoolean'
      additionalProperties: false
    LambdaDeviceMount:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/FilesystemPath'
        Permission:
          $ref: '#/components/schemas/LambdaFilesystemPermission'
        AddGroupOwner:
          $ref: '#/components/schemas/LambdaAddGroupOwnerBoolean'
      additionalProperties: false
    FilesystemPath:
      type: string
    LambdaFilesystemPermission:
      type: string
      enum:
        - ro
        - rw
    LambdaAddGroupOwnerBoolean:
      type: boolean
    ComponentVersion:
      type: object
      properties:
        Arn:
          type: string
        ComponentName:
          type: string
        ComponentVersion:
          type: string
        InlineRecipe:
          type: string
        LambdaFunction:
          $ref: '#/components/schemas/LambdaFunctionRecipeSource'
        Tags:
          type: object
          x-patternProperties:
            ^(?!aws:)[a-zA-Z+-=._:/]{1,128}$:
              type: string
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      x-stackql-resource-name: component_version
      description: Resource for Greengrass component version.
      x-type-name: AWS::GreengrassV2::ComponentVersion
      x-stackql-primary-identifier:
        - Arn
      x-stackql-additional-identifiers:
        - - ComponentName
          - ComponentVersion
      x-create-only-properties:
        - LambdaFunction
        - InlineRecipe
      x-write-only-properties:
        - LambdaFunction
        - InlineRecipe
      x-read-only-properties:
        - Arn
        - ComponentName
        - ComponentVersion
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - greengrass:CreateComponentVersion
          - greengrass:DescribeComponent
          - greengrass:ListTagsForResource
          - greengrass:TagResource
          - lambda:GetFunction
          - s3:GetObject
        read:
          - greengrass:DescribeComponent
          - greengrass:ListTagsForResource
        update:
          - greengrass:DescribeComponent
          - greengrass:ListTagsForResource
          - greengrass:TagResource
          - greengrass:UntagResource
        delete:
          - greengrass:DeleteComponent
        list:
          - greengrass:ListComponentVersions
    ComponentDeploymentSpecification:
      type: object
      properties:
        ComponentVersion:
          type: string
          minLength: 1
          maxLength: 64
        ConfigurationUpdate:
          $ref: '#/components/schemas/ComponentConfigurationUpdate'
        RunWith:
          $ref: '#/components/schemas/ComponentRunWith'
      additionalProperties: false
    SystemResourceLimits:
      type: object
      properties:
        Memory:
          type: integer
          format: int64
          minimum: 0
          maximum: 9223372036854772000
        Cpus:
          type: number
          minimum: 0
      additionalProperties: false
    ComponentRunWith:
      type: object
      properties:
        PosixUser:
          type: string
          minLength: 1
        SystemResourceLimits:
          $ref: '#/components/schemas/SystemResourceLimits'
        WindowsUser:
          type: string
          minLength: 1
      additionalProperties: false
    ComponentConfigurationUpdate:
      type: object
      properties:
        Merge:
          type: string
          minLength: 1
          maxLength: 10485760
        Reset:
          type: array
          items:
            type: string
            minLength: 0
            maxLength: 256
          x-insertionOrder: false
      additionalProperties: false
    DeploymentIoTJobConfiguration:
      type: object
      properties:
        JobExecutionsRolloutConfig:
          $ref: '#/components/schemas/IoTJobExecutionsRolloutConfig'
        AbortConfig:
          $ref: '#/components/schemas/IoTJobAbortConfig'
        TimeoutConfig:
          $ref: '#/components/schemas/IoTJobTimeoutConfig'
      additionalProperties: false
    IoTJobExecutionsRolloutConfig:
      type: object
      properties:
        ExponentialRate:
          $ref: '#/components/schemas/IoTJobExponentialRolloutRate'
        MaximumPerMinute:
          type: integer
          minimum: 1
          maximum: 1000
      additionalProperties: false
    IoTJobAbortConfig:
      type: object
      properties:
        CriteriaList:
          type: array
          items:
            $ref: '#/components/schemas/IoTJobAbortCriteria'
          minItems: 1
          x-insertionOrder: false
      required:
        - CriteriaList
      additionalProperties: false
    IoTJobAbortCriteria:
      type: object
      properties:
        FailureType:
          type: string
          enum:
            - FAILED
            - REJECTED
            - TIMED_OUT
            - ALL
        Action:
          type: string
          enum:
            - CANCEL
        ThresholdPercentage:
          type: number
          minimum: 0
          maximum: 100
        MinNumberOfExecutedThings:
          type: integer
          minimum: 1
          maximum: 2147483647
      required:
        - FailureType
        - Action
        - ThresholdPercentage
        - MinNumberOfExecutedThings
      additionalProperties: false
    IoTJobTimeoutConfig:
      type: object
      properties:
        InProgressTimeoutInMinutes:
          type: integer
          minimum: 0
          maximum: 2147483647
      additionalProperties: false
    IoTJobExponentialRolloutRate:
      type: object
      properties:
        BaseRatePerMinute:
          type: integer
          minimum: 1
          maximum: 1000
        IncrementFactor:
          type: number
          minimum: 1
          maximum: 5
        RateIncreaseCriteria:
          $ref: '#/components/schemas/IoTJobRateIncreaseCriteria'
      required:
        - BaseRatePerMinute
        - IncrementFactor
        - RateIncreaseCriteria
      additionalProperties: false
    IoTJobRateIncreaseCriteria:
      type: object
      oneOf:
        - type: object
          additionalProperties: false
          properties:
            NumberOfNotifiedThings:
              $ref: '#/components/schemas/NumberOfThings'
        - type: object
          additionalProperties: false
          properties:
            NumberOfSucceededThings:
              $ref: '#/components/schemas/NumberOfThings'
    NumberOfThings:
      type: integer
      minimum: 1
      maximum: 2147483647
    DeploymentPolicies:
      type: object
      properties:
        FailureHandlingPolicy:
          type: string
          enum:
            - ROLLBACK
            - DO_NOTHING
        ComponentUpdatePolicy:
          $ref: '#/components/schemas/DeploymentComponentUpdatePolicy'
        ConfigurationValidationPolicy:
          $ref: '#/components/schemas/DeploymentConfigurationValidationPolicy'
      additionalProperties: false
    DeploymentComponentUpdatePolicy:
      type: object
      properties:
        TimeoutInSeconds:
          type: integer
          minimum: 1
          maximum: 2147483647
        Action:
          type: string
          enum:
            - NOTIFY_COMPONENTS
            - SKIP_NOTIFY_COMPONENTS
      additionalProperties: false
    DeploymentConfigurationValidationPolicy:
      type: object
      properties:
        TimeoutInSeconds:
          type: integer
          minimum: 1
          maximum: 2147483647
      additionalProperties: false
    Deployment:
      type: object
      properties:
        TargetArn:
          type: string
          pattern: arn:[^:]*:iot:[^:]*:[0-9]+:(thing|thinggroup)/.+
        ParentTargetArn:
          type: string
          pattern: arn:[^:]*:iot:[^:]*:[0-9]+:thinggroup/.+
        DeploymentId:
          type: string
          pattern: .+
        DeploymentName:
          type: string
          minLength: 1
          maxLength: 256
        Components:
          type: object
          x-patternProperties:
            .+:
              $ref: '#/components/schemas/ComponentDeploymentSpecification'
          additionalProperties: false
        IotJobConfiguration:
          $ref: '#/components/schemas/DeploymentIoTJobConfiguration'
        DeploymentPolicies:
          $ref: '#/components/schemas/DeploymentPolicies'
        Tags:
          type: object
          x-patternProperties:
            .*:
              type: string
              maxLength: 256
          maxProperties: 200
          additionalProperties: false
      required:
        - TargetArn
      x-stackql-resource-name: deployment
      description: Resource for Greengrass V2 deployment.
      x-type-name: AWS::GreengrassV2::Deployment
      x-stackql-primary-identifier:
        - DeploymentId
      x-create-only-properties:
        - TargetArn
        - ParentTargetArn
        - DeploymentName
        - Components
        - IotJobConfiguration
        - DeploymentPolicies
      x-read-only-properties:
        - DeploymentId
      x-required-properties:
        - TargetArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - greengrass:CreateDeployment
          - greengrass:GetDeployment
          - greengrass:TagResource
          - iot:CancelJob
          - iot:CreateJob
          - iot:DeleteThingShadow
          - iot:DescribeJob
          - iot:DescribeThing
          - iot:DescribeThingGroup
          - iot:GetThingShadow
          - iot:UpdateJob
          - iot:UpdateThingShadow
        read:
          - greengrass:GetDeployment
          - iot:DescribeJob
          - iot:DescribeThing
          - iot:DescribeThingGroup
          - iot:GetThingShadow
        update:
          - greengrass:GetDeployment
          - greengrass:TagResource
          - greengrass:UntagResource
          - iot:DescribeJob
        delete:
          - greengrass:DeleteDeployment
          - greengrass:CancelDeployment
          - iot:CancelJob
          - iot:DeleteJob
          - iot:DescribeJob
        list:
          - greengrass:ListDeployments
          - iot:DescribeJob
          - iot:DescribeThing
          - iot:DescribeThingGroup
          - iot:GetThingShadow
    CreateComponentVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            ComponentName:
              type: string
            ComponentVersion:
              type: string
            InlineRecipe:
              type: string
            LambdaFunction:
              $ref: '#/components/schemas/LambdaFunctionRecipeSource'
            Tags:
              type: object
              x-patternProperties:
                ^(?!aws:)[a-zA-Z+-=._:/]{1,128}$:
                  type: string
                  maxLength: 256
              maxProperties: 50
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateComponentVersionRequest
      type: object
      required: []
    CreateDeploymentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            TargetArn:
              type: string
              pattern: arn:[^:]*:iot:[^:]*:[0-9]+:(thing|thinggroup)/.+
            ParentTargetArn:
              type: string
              pattern: arn:[^:]*:iot:[^:]*:[0-9]+:thinggroup/.+
            DeploymentId:
              type: string
              pattern: .+
            DeploymentName:
              type: string
              minLength: 1
              maxLength: 256
            Components:
              type: object
              x-patternProperties:
                .+:
                  $ref: '#/components/schemas/ComponentDeploymentSpecification'
              additionalProperties: false
            IotJobConfiguration:
              $ref: '#/components/schemas/DeploymentIoTJobConfiguration'
            DeploymentPolicies:
              $ref: '#/components/schemas/DeploymentPolicies'
            Tags:
              type: object
              x-patternProperties:
                .*:
                  type: string
                  maxLength: 256
              maxProperties: 200
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateDeploymentRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    component_versions:
      name: component_versions
      id: aws.greengrassv2.component_versions
      x-cfn-schema-name: ComponentVersion
      x-cfn-type-name: AWS::GreengrassV2::ComponentVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ComponentVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GreengrassV2::ComponentVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GreengrassV2::ComponentVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GreengrassV2::ComponentVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/component_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/component_versions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/component_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ComponentName') as component_name,
              JSON_EXTRACT(Properties, '$.ComponentVersion') as component_version,
              JSON_EXTRACT(Properties, '$.InlineRecipe') as inline_recipe,
              JSON_EXTRACT(Properties, '$.LambdaFunction') as lambda_function,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.ComponentName') as component_name,
                JSON_EXTRACT(detail.Properties, '$.ComponentVersion') as component_version,
                JSON_EXTRACT(detail.Properties, '$.InlineRecipe') as inline_recipe,
                JSON_EXTRACT(detail.Properties, '$.LambdaFunction') as lambda_function,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                AND detail.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'ComponentName') as component_name,
                  json_extract_path_text(Properties, 'ComponentVersion') as component_version,
                  json_extract_path_text(Properties, 'InlineRecipe') as inline_recipe,
                  json_extract_path_text(Properties, 'LambdaFunction') as lambda_function,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'ComponentName') as component_name,
                    json_extract_path_text(detail.Properties, 'ComponentVersion') as component_version,
                    json_extract_path_text(detail.Properties, 'InlineRecipe') as inline_recipe,
                    json_extract_path_text(detail.Properties, 'LambdaFunction') as lambda_function,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                    AND detail.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                    AND listing.region = 'us-east-1'
    component_versions_list_only:
      name: component_versions_list_only
      id: aws.greengrassv2.component_versions_list_only
      x-cfn-schema-name: ComponentVersion
      x-cfn-type-name: AWS::GreengrassV2::ComponentVersion
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                AND region = 'us-east-1'
    component_version_tags:
      name: component_version_tags
      id: aws.greengrassv2.component_version_tags
      x-cfn-schema-name: ComponentVersion
      x-cfn-type-name: AWS::GreengrassV2::ComponentVersion
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.ComponentName') as component_name,
              JSON_EXTRACT(detail.Properties, '$.ComponentVersion') as component_version,
              JSON_EXTRACT(detail.Properties, '$.InlineRecipe') as inline_recipe,
              JSON_EXTRACT(detail.Properties, '$.LambdaFunction') as lambda_function
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
              AND detail.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'ComponentName') as component_name,
                json_extract_path_text(detail.Properties, 'ComponentVersion') as component_version,
                json_extract_path_text(detail.Properties, 'InlineRecipe') as inline_recipe,
                json_extract_path_text(detail.Properties, 'LambdaFunction') as lambda_function
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                AND detail.data__TypeName = 'AWS::GreengrassV2::ComponentVersion'
                AND listing.region = 'us-east-1'
    deployments:
      name: deployments
      id: aws.greengrassv2.deployments
      x-cfn-schema-name: Deployment
      x-cfn-type-name: AWS::GreengrassV2::Deployment
      x-identifiers:
        - DeploymentId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Deployment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GreengrassV2::Deployment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GreengrassV2::Deployment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GreengrassV2::Deployment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.TargetArn') as target_arn,
              JSON_EXTRACT(Properties, '$.ParentTargetArn') as parent_target_arn,
              JSON_EXTRACT(Properties, '$.DeploymentId') as deployment_id,
              JSON_EXTRACT(Properties, '$.DeploymentName') as deployment_name,
              JSON_EXTRACT(Properties, '$.Components') as components,
              JSON_EXTRACT(Properties, '$.IotJobConfiguration') as iot_job_configuration,
              JSON_EXTRACT(Properties, '$.DeploymentPolicies') as deployment_policies,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GreengrassV2::Deployment'
              AND data__Identifier = '<DeploymentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.TargetArn') as target_arn,
                JSON_EXTRACT(detail.Properties, '$.ParentTargetArn') as parent_target_arn,
                JSON_EXTRACT(detail.Properties, '$.DeploymentId') as deployment_id,
                JSON_EXTRACT(detail.Properties, '$.DeploymentName') as deployment_name,
                JSON_EXTRACT(detail.Properties, '$.Components') as components,
                JSON_EXTRACT(detail.Properties, '$.IotJobConfiguration') as iot_job_configuration,
                JSON_EXTRACT(detail.Properties, '$.DeploymentPolicies') as deployment_policies,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GreengrassV2::Deployment'
                AND detail.data__TypeName = 'AWS::GreengrassV2::Deployment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'TargetArn') as target_arn,
                  json_extract_path_text(Properties, 'ParentTargetArn') as parent_target_arn,
                  json_extract_path_text(Properties, 'DeploymentId') as deployment_id,
                  json_extract_path_text(Properties, 'DeploymentName') as deployment_name,
                  json_extract_path_text(Properties, 'Components') as components,
                  json_extract_path_text(Properties, 'IotJobConfiguration') as iot_job_configuration,
                  json_extract_path_text(Properties, 'DeploymentPolicies') as deployment_policies,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GreengrassV2::Deployment'
                  AND data__Identifier = '<DeploymentId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'TargetArn') as target_arn,
                    json_extract_path_text(detail.Properties, 'ParentTargetArn') as parent_target_arn,
                    json_extract_path_text(detail.Properties, 'DeploymentId') as deployment_id,
                    json_extract_path_text(detail.Properties, 'DeploymentName') as deployment_name,
                    json_extract_path_text(detail.Properties, 'Components') as components,
                    json_extract_path_text(detail.Properties, 'IotJobConfiguration') as iot_job_configuration,
                    json_extract_path_text(detail.Properties, 'DeploymentPolicies') as deployment_policies,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GreengrassV2::Deployment'
                    AND detail.data__TypeName = 'AWS::GreengrassV2::Deployment'
                    AND listing.region = 'us-east-1'
    deployments_list_only:
      name: deployments_list_only
      id: aws.greengrassv2.deployments_list_only
      x-cfn-schema-name: Deployment
      x-cfn-type-name: AWS::GreengrassV2::Deployment
      x-identifiers:
        - DeploymentId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeploymentId') as deployment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GreengrassV2::Deployment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DeploymentId') as deployment_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GreengrassV2::Deployment'
                AND region = 'us-east-1'
    deployment_tags:
      name: deployment_tags
      id: aws.greengrassv2.deployment_tags
      x-cfn-schema-name: Deployment
      x-cfn-type-name: AWS::GreengrassV2::Deployment
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.TargetArn') as target_arn,
              JSON_EXTRACT(detail.Properties, '$.ParentTargetArn') as parent_target_arn,
              JSON_EXTRACT(detail.Properties, '$.DeploymentId') as deployment_id,
              JSON_EXTRACT(detail.Properties, '$.DeploymentName') as deployment_name,
              JSON_EXTRACT(detail.Properties, '$.Components') as components,
              JSON_EXTRACT(detail.Properties, '$.IotJobConfiguration') as iot_job_configuration,
              JSON_EXTRACT(detail.Properties, '$.DeploymentPolicies') as deployment_policies
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GreengrassV2::Deployment'
              AND detail.data__TypeName = 'AWS::GreengrassV2::Deployment'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'TargetArn') as target_arn,
                json_extract_path_text(detail.Properties, 'ParentTargetArn') as parent_target_arn,
                json_extract_path_text(detail.Properties, 'DeploymentId') as deployment_id,
                json_extract_path_text(detail.Properties, 'DeploymentName') as deployment_name,
                json_extract_path_text(detail.Properties, 'Components') as components,
                json_extract_path_text(detail.Properties, 'IotJobConfiguration') as iot_job_configuration,
                json_extract_path_text(detail.Properties, 'DeploymentPolicies') as deployment_policies
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GreengrassV2::Deployment'
                AND detail.data__TypeName = 'AWS::GreengrassV2::Deployment'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ComponentVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateComponentVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateComponentVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Deployment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDeployment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDeploymentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
