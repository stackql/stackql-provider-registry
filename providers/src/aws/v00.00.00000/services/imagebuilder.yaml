openapi: 3.0.0
info:
  title: ImageBuilder
  version: 1.0.0
paths: {}
components:
  schemas:
    Component:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the component.
          type: string
        Name:
          description: The name of the component.
          type: string
        Version:
          description: The version of the component.
          type: string
        Description:
          description: The description of the component.
          type: string
        ChangeDescription:
          description: The change description of the component.
          type: string
        Type:
          description: 'The type of the component denotes whether the component is used to build the image or only to test it. '
          type: string
          enum:
            - BUILD
            - TEST
        Platform:
          description: The platform of the component.
          type: string
          enum:
            - Windows
            - Linux
        Data:
          description: The data of the component.
          type: string
          minLength: 1
          maxLength: 16000
        KmsKeyId:
          description: The KMS key identifier used to encrypt the component.
          type: string
        Encrypted:
          description: The encryption status of the component.
          type: boolean
        Tags:
          description: The tags associated with the component.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
        Uri:
          description: The uri of the component.
          type: string
        SupportedOsVersions:
          description: The operating system (OS) version supported by the component.
          type: array
          x-insertionOrder: false
          items:
            type: string
      required:
        - Name
        - Platform
        - Version
      x-stackql-resource-name: component
      description: Resource schema for AWS::ImageBuilder::Component
      x-type-name: AWS::ImageBuilder::Component
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Version
        - ChangeDescription
        - Description
        - Platform
        - Data
        - Uri
        - KmsKeyId
        - SupportedOsVersions
        - Tags
      x-write-only-properties:
        - Data
        - Uri
        - Platform
      x-read-only-properties:
        - Arn
        - Type
        - Encrypted
      x-required-properties:
        - Name
        - Platform
        - Version
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - iam:CreateServiceLinkedRole
          - iam:GetRole
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          - s3:GetObject
          - s3:HeadBucket
          - s3:GetBucketLocation
          - imagebuilder:TagResource
          - imagebuilder:GetComponent
          - imagebuilder:CreateComponent
        read:
          - imagebuilder:GetComponent
        delete:
          - imagebuilder:GetComponent
          - imagebuilder:UnTagResource
          - imagebuilder:DeleteComponent
        list:
          - imagebuilder:ListComponents
    ComponentConfiguration:
      description: Configuration details of the component.
      type: object
      additionalProperties: false
      properties:
        ComponentArn:
          description: The Amazon Resource Name (ARN) of the component.
          type: string
        Parameters:
          description: A group of parameter settings that are used to configure the component for a specific recipe.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ComponentParameter'
    InstanceConfiguration:
      description: A group of options that can be used to configure an instance for building and testing container images.
      type: object
      additionalProperties: false
      properties:
        Image:
          description: The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
          type: string
        BlockDeviceMappings:
          description: Defines the block devices to attach for building an instance from this Image Builder AMI.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/InstanceBlockDeviceMapping'
    InstanceBlockDeviceMapping:
      description: 'Defines block device mappings for the instance used to configure your image. '
      type: object
      additionalProperties: false
      properties:
        DeviceName:
          description: The device to which these mappings apply.
          type: string
        VirtualName:
          description: Use to manage instance ephemeral devices.
          type: string
        NoDevice:
          description: Use to remove a mapping from the parent image.
          type: string
        Ebs:
          description: Use to manage Amazon EBS-specific configuration for this mapping.
          $ref: '#/components/schemas/EbsInstanceBlockDeviceSpecification'
    EbsInstanceBlockDeviceSpecification:
      description: 'Amazon EBS-specific block device mapping specifications. '
      type: object
      additionalProperties: false
      properties:
        Encrypted:
          description: Use to configure device encryption.
          type: boolean
        DeleteOnTermination:
          description: Use to configure delete on termination of the associated device.
          type: boolean
        Iops:
          description: Use to configure device IOPS.
          type: integer
        KmsKeyId:
          description: Use to configure the KMS key to use when encrypting the device.
          type: string
        SnapshotId:
          description: The snapshot that defines the device contents.
          type: string
        Throughput:
          description: For GP3 volumes only - The throughput in MiB/s that the volume supports.
          type: integer
        VolumeSize:
          description: Use to override the device's volume size.
          type: integer
        VolumeType:
          description: Use to override the device's volume type.
          type: string
          enum:
            - standard
            - io1
            - io2
            - gp2
            - gp3
            - sc1
            - st1
    TargetContainerRepository:
      description: The destination repository for the container image.
      type: object
      additionalProperties: false
      properties:
        Service:
          description: The service of target container repository.
          type: string
          enum:
            - ECR
        RepositoryName:
          description: The repository name of target container repository.
          type: string
    ComponentParameter:
      additionalProperties: false
      description: Contains a key/value pair that sets the named component parameter.
      type: object
      properties:
        Name:
          description: The name of the component parameter to set.
          type: string
        Value:
          description: Sets the value for the named component parameter.
          type: array
          x-insertionOrder: true
          items:
            type: string
      required:
        - Name
        - Value
    ContainerRecipe:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the container recipe.
          type: string
        Name:
          description: The name of the container recipe.
          type: string
        Description:
          description: The description of the container recipe.
          type: string
        Version:
          description: The semantic version of the container recipe (<major>.<minor>.<patch>).
          type: string
        Components:
          description: Components for build and test that are included in the container recipe.
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ComponentConfiguration'
        InstanceConfiguration:
          additionalProperties: false
          description: A group of options that can be used to configure an instance for building and testing container images.
          $ref: '#/components/schemas/InstanceConfiguration'
        DockerfileTemplateData:
          description: Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.
          type: string
        DockerfileTemplateUri:
          description: The S3 URI for the Dockerfile that will be used to build your container image.
          type: string
        PlatformOverride:
          description: Specifies the operating system platform when you use a custom source image.
          type: string
          enum:
            - Windows
            - Linux
        ContainerType:
          description: Specifies the type of container, such as Docker.
          type: string
          enum:
            - DOCKER
        ImageOsVersionOverride:
          description: Specifies the operating system version for the source image.
          type: string
        TargetRepository:
          description: The destination repository for the container image.
          $ref: '#/components/schemas/TargetContainerRepository'
        KmsKeyId:
          description: Identifies which KMS key is used to encrypt the container image.
          type: string
        ParentImage:
          description: The source image for the container recipe.
          type: string
        WorkingDirectory:
          description: The working directory to be used during build and test workflows.
          type: string
        Tags:
          description: Tags that are attached to the container recipe.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      x-stackql-resource-name: container_recipe
      description: Resource schema for AWS::ImageBuilder::ContainerRecipe
      x-type-name: AWS::ImageBuilder::ContainerRecipe
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Version
        - ContainerType
        - TargetRepository
        - InstanceConfiguration
        - ParentImage
        - Description
        - DockerfileTemplateUri
        - DockerfileTemplateData
        - ImageOsVersionOverride
        - KmsKeyId
        - PlatformOverride
        - WorkingDirectory
        - Components
        - Tags
      x-write-only-properties:
        - DockerfileTemplateData
        - DockerfileTemplateUri
        - ImageOsVersionOverride
        - PlatformOverride
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - imagebuilder:GetComponent
          - imagebuilder:TagResource
          - imagebuilder:GetContainerRecipe
          - imagebuilder:CreateContainerRecipe
          - imagebuilder:GetImage
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncryptFrom
          - kms:ReEncryptTo
          - kms:GenerateDataKey*
          - s3:GetObject
          - s3:ListBucket
          - ecr:DescribeRepositories
          - ec2:DescribeImages
        read:
          - imagebuilder:GetContainerRecipe
        delete:
          - imagebuilder:UnTagResource
          - imagebuilder:GetContainerRecipe
          - imagebuilder:DeleteContainerRecipe
        list:
          - imagebuilder:ListContainerRecipes
    Distribution:
      description: The distributions of the distribution configuration.
      type: object
      additionalProperties: false
      properties:
        Region:
          description: region
          type: string
        AmiDistributionConfiguration:
          $ref: '#/components/schemas/AmiDistributionConfiguration'
        ContainerDistributionConfiguration:
          $ref: '#/components/schemas/ContainerDistributionConfiguration'
        LicenseConfigurationArns:
          description: The License Manager Configuration to associate with the AMI in the specified Region.
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/LicenseConfigurationArn'
        LaunchTemplateConfigurations:
          description: A group of launchTemplateConfiguration settings that apply to image distribution.
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/LaunchTemplateConfiguration'
        FastLaunchConfigurations:
          description: The Windows faster-launching configurations to use for AMI distribution.
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/FastLaunchConfiguration'
      required:
        - Region
    AmiDistributionConfiguration:
      description: The specific AMI settings (for example, launch permissions, AMI tags).
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The name of the AMI distribution configuration.
          type: string
        KmsKeyId:
          description: The KMS key identifier used to encrypt the distributed image.
          type: string
        Description:
          description: The description of the AMI distribution configuration.
          type: string
        AmiTags:
          description: The tags to apply to AMIs distributed to this Region.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
        TargetAccountIds:
          description: The ID of accounts to which you want to distribute an image.
          type: array
          x-insertionOrder: true
          items:
            type: string
        LaunchPermissionConfiguration:
          $ref: '#/components/schemas/LaunchPermissionConfiguration'
    ContainerDistributionConfiguration:
      description: Container distribution settings for encryption, licensing, and sharing in a specific Region.
      type: object
      additionalProperties: false
      properties:
        Description:
          description: The description of the container distribution configuration.
          type: string
        ContainerTags:
          description: Tags that are attached to the container distribution configuration.
          type: array
          x-insertionOrder: true
          items:
            type: string
        TargetRepository:
          description: The destination repository for the container distribution configuration.
          $ref: '#/components/schemas/TargetContainerRepository'
    LaunchTemplateConfiguration:
      description: launchTemplateConfiguration settings that apply to image distribution.
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateId:
          description: Identifies the EC2 launch template to use.
          type: string
        AccountId:
          description: The account ID that this configuration applies to.
          type: string
        SetDefaultVersion:
          description: Set the specified EC2 launch template as the default launch template for the specified account.
          type: boolean
    FastLaunchConfiguration:
      description: The Windows faster-launching configuration to use for AMI distribution.
      type: object
      additionalProperties: false
      properties:
        AccountId:
          description: The owner account ID for the fast-launch enabled Windows AMI.
          type: string
        Enabled:
          description: A Boolean that represents the current state of faster launching for the Windows AMI. Set to true to start using Windows faster launching, or false to stop using it.
          type: boolean
        LaunchTemplate:
          description: The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots.
          $ref: '#/components/schemas/FastLaunchLaunchTemplateSpecification'
        MaxParallelLaunches:
          description: The maximum number of parallel instances that are launched for creating resources.
          type: integer
        SnapshotConfiguration:
          description: Configuration settings for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled.
          $ref: '#/components/schemas/FastLaunchSnapshotConfiguration'
    LaunchPermissionConfiguration:
      description: Launch permissions can be used to configure which AWS accounts can use the AMI to launch instances.
      type: object
      additionalProperties: false
      properties:
        UserIds:
          description: The AWS account ID.
          type: array
          x-insertionOrder: false
          items:
            type: string
        UserGroups:
          description: The name of the group.
          type: array
          x-insertionOrder: false
          items:
            type: string
        OrganizationArns:
          description: The ARN for an Amazon Web Services Organization that you want to share your AMI with.
          type: array
          x-insertionOrder: false
          items:
            type: string
        OrganizationalUnitArns:
          description: The ARN for an Organizations organizational unit (OU) that you want to share your AMI with.
          type: array
          x-insertionOrder: false
          items:
            type: string
    LicenseConfigurationArn:
      description: The Amazon Resource Name (ARN) of the License Manager configuration.
      type: string
    FastLaunchLaunchTemplateSpecification:
      description: The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots.
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateId:
          description: The ID of the launch template to use for faster launching for a Windows AMI.
          type: string
        LaunchTemplateName:
          description: The name of the launch template to use for faster launching for a Windows AMI.
          type: string
        LaunchTemplateVersion:
          description: The version of the launch template to use for faster launching for a Windows AMI.
          type: string
    FastLaunchSnapshotConfiguration:
      description: Configuration settings for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled.
      type: object
      additionalProperties: false
      properties:
        TargetResourceCount:
          description: The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.
          type: integer
    DistributionConfiguration:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the distribution configuration.
          type: string
        Name:
          description: The name of the distribution configuration.
          type: string
        Description:
          description: The description of the distribution configuration.
          type: string
        Distributions:
          description: The distributions of the distribution configuration.
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Distribution'
        Tags:
          description: The tags associated with the component.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      required:
        - Name
        - Distributions
      x-stackql-resource-name: distribution_configuration
      description: Resource schema for AWS::ImageBuilder::DistributionConfiguration
      x-type-name: AWS::ImageBuilder::DistributionConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - Distributions
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - ec2:DescribeLaunchTemplates
          - ec2:CreateLaunchTemplateVersion
          - ec2:ModifyLaunchTemplate
          - imagebuilder:TagResource
          - imagebuilder:GetDistributionConfiguration
          - imagebuilder:CreateDistributionConfiguration
        update:
          - ec2:DescribeLaunchTemplates
          - ec2:CreateLaunchTemplateVersion
          - ec2:ModifyLaunchTemplate
          - imagebuilder:GetDistributionConfiguration
          - imagebuilder:UpdateDistributionConfiguration
        read:
          - imagebuilder:GetDistributionConfiguration
        delete:
          - imagebuilder:GetDistributionConfiguration
          - imagebuilder:UnTagResource
          - imagebuilder:DeleteDistributionConfiguration
        list:
          - imagebuilder:ListDistributionConfigurations
    ImageTestsConfiguration:
      description: Image tests configuration.
      type: object
      additionalProperties: false
      properties:
        ImageTestsEnabled:
          description: Defines if tests should be executed when building this image.
          type: boolean
        TimeoutMinutes:
          description: The maximum time in minutes that tests are permitted to run.
          type: integer
          minimum: 60
          maximum: 1440
    ImageScanningConfiguration:
      description: Determines if tests should run after building the image. Image Builder defaults to enable tests to run following the image build, before image distribution.
      type: object
      additionalProperties: false
      properties:
        EcrConfiguration:
          description: Contains ECR settings for vulnerability scans.
          $ref: '#/components/schemas/EcrConfiguration'
        ImageScanningEnabled:
          description: This sets whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image.
          type: boolean
    EcrConfiguration:
      description: Settings for Image Builder to configure the ECR repository and output container images that are scanned.
      type: object
      additionalProperties: false
      properties:
        ContainerTags:
          description: Tags for Image Builder to apply the output container image that is scanned. Tags can help you identify and manage your scanned images.
          type: array
          x-insertionOrder: true
          items:
            type: string
        RepositoryName:
          description: The name of the container repository that Amazon Inspector scans to identify findings for your container images. The name includes the path for the repository location. If you don't provide this information, Image Builder creates a repository in your account named image-builder-image-scanning-repository to use for vulnerability scans for your output container images.
          type: string
    WorkflowConfiguration:
      description: The workflow configuration of the image
      type: object
      additionalProperties: false
      properties:
        WorkflowArn:
          description: The Amazon Resource Name (ARN) of the workflow
          type: string
        Parameters:
          description: The parameters associated with the workflow
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/WorkflowParameter'
        ParallelGroup:
          description: The parallel group name
          type: string
        OnFailure:
          description: Define execution decision in case of workflow failure
          type: string
          enum:
            - CONTINUE
            - ABORT
    WorkflowParameter:
      description: A parameter associated with the workflow
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
        Value:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/WorkflowParameterValue'
    WorkflowParameterValue:
      description: The value associated with the workflow parameter
      type: string
    Image:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the image.
          type: string
        Name:
          description: The name of the image.
          type: string
        ImageTestsConfiguration:
          description: The image tests configuration used when creating this image.
          $ref: '#/components/schemas/ImageTestsConfiguration'
        ImageRecipeArn:
          description: The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
          type: string
        ContainerRecipeArn:
          description: The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
          type: string
        DistributionConfigurationArn:
          description: The Amazon Resource Name (ARN) of the distribution configuration.
          type: string
        InfrastructureConfigurationArn:
          description: The Amazon Resource Name (ARN) of the infrastructure configuration.
          type: string
        Workflows:
          description: Workflows to define the image build process
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/WorkflowConfiguration'
        ImageId:
          description: The AMI ID of the EC2 AMI in current region.
          type: string
        ImageUri:
          description: URI for containers created in current Region with default ECR image tag
          type: string
        EnhancedImageMetadataEnabled:
          description: Collects additional information about the image being created, including the operating system (OS) version and package list.
          type: boolean
        ImageScanningConfiguration:
          description: Contains settings for vulnerability scans.
          $ref: '#/components/schemas/ImageScanningConfiguration'
        ExecutionRole:
          description: The execution role name/ARN for the image build, if provided
          type: string
        Tags:
          description: The tags associated with the image.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      x-stackql-resource-name: image
      description: Resource schema for AWS::ImageBuilder::Image
      x-type-name: AWS::ImageBuilder::Image
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ImageRecipeArn
        - ContainerRecipeArn
        - InfrastructureConfigurationArn
        - Workflows
        - DistributionConfigurationArn
        - ImageTestsConfiguration
        - ImageScanningConfiguration
        - EnhancedImageMetadataEnabled
        - Tags
      x-read-only-properties:
        - Arn
        - Name
        - ImageId
        - ImageUri
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - ecr:BatchGetRepositoryScanningConfiguration
          - iam:GetRole
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - imagebuilder:GetImageRecipe
          - imagebuilder:GetInfrastructureConfiguration
          - imagebuilder:GetDistributionConfiguration
          - imagebuilder:GetWorkflow
          - imagebuilder:GetImage
          - imagebuilder:CreateImage
          - imagebuilder:TagResource
          - inspector2:BatchGetAccountStatus
        read:
          - imagebuilder:GetImage
        delete:
          - imagebuilder:GetImage
          - imagebuilder:DeleteImage
          - imagebuilder:UnTagResource
          - imagebuilder:CancelImageCreation
        list:
          - imagebuilder:ListImages
    Schedule:
      description: The schedule of the image pipeline.
      type: object
      additionalProperties: false
      properties:
        ScheduleExpression:
          description: The expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition.
          type: string
        PipelineExecutionStartCondition:
          description: The condition configures when the pipeline should trigger a new image build.
          type: string
          enum:
            - EXPRESSION_MATCH_ONLY
            - EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE
    ImagePipeline:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the image pipeline.
          type: string
        Name:
          description: The name of the image pipeline.
          type: string
        Description:
          description: The description of the image pipeline.
          type: string
        ImageTestsConfiguration:
          description: The image tests configuration of the image pipeline.
          $ref: '#/components/schemas/ImageTestsConfiguration'
        Status:
          description: The status of the image pipeline.
          type: string
          enum:
            - DISABLED
            - ENABLED
        Schedule:
          description: The schedule of the image pipeline.
          $ref: '#/components/schemas/Schedule'
        ImageRecipeArn:
          description: The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
          type: string
        ContainerRecipeArn:
          description: The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
          type: string
        DistributionConfigurationArn:
          description: The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
          type: string
        InfrastructureConfigurationArn:
          description: The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
          type: string
        Workflows:
          description: Workflows to define the image build process
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/WorkflowConfiguration'
        EnhancedImageMetadataEnabled:
          description: Collects additional information about the image being created, including the operating system (OS) version and package list.
          type: boolean
        ImageScanningConfiguration:
          description: Contains settings for vulnerability scans.
          $ref: '#/components/schemas/ImageScanningConfiguration'
        ExecutionRole:
          description: The execution role name/ARN for the image build, if provided
          type: string
        Tags:
          description: The tags of this image pipeline.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      x-stackql-resource-name: image_pipeline
      description: Resource schema for AWS::ImageBuilder::ImagePipeline
      x-type-name: AWS::ImageBuilder::ImagePipeline
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - ecr:BatchGetRepositoryScanningConfiguration
          - iam:GetRole
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - imagebuilder:TagResource
          - imagebuilder:GetImagePipeline
          - imagebuilder:GetImageRecipe
          - imagebuilder:GetInfrastructureConfiguration
          - imagebuilder:GetDistributionConfiguration
          - imagebuilder:CreateImagePipeline
          - imagebuilder:GetWorkflow
          - inspector2:BatchGetAccountStatus
        update:
          - iam:PassRole
          - imagebuilder:GetImagePipeline
          - imagebuilder:UpdateImagePipeline
          - imagebuilder:GetWorkflow
        read:
          - imagebuilder:GetImagePipeline
        delete:
          - imagebuilder:UnTagResource
          - imagebuilder:GetImagePipeline
          - imagebuilder:DeleteImagePipeline
        list:
          - imagebuilder:ListImagePipelines
    AdditionalInstanceConfiguration:
      additionalProperties: false
      description: Specify additional settings and launch scripts for your build instances.
      type: object
      properties:
        SystemsManagerAgent:
          description: Contains settings for the SSM agent on your build instance.
          $ref: '#/components/schemas/SystemsManagerAgent'
        UserDataOverride:
          description: Use this property to provide commands or a command script to run when you launch your build instance.
          type: string
    SystemsManagerAgent:
      additionalProperties: false
      description: Contains settings for the SSM agent on your build instance.
      type: object
      properties:
        UninstallAfterBuild:
          description: Controls whether the SSM agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.
          type: boolean
    ImageRecipe:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the image recipe.
          type: string
        Name:
          description: The name of the image recipe.
          type: string
        Description:
          description: The description of the image recipe.
          type: string
        Version:
          description: The version of the image recipe.
          type: string
        Components:
          description: The components of the image recipe.
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ComponentConfiguration'
        BlockDeviceMappings:
          description: The block device mappings to apply when creating images from this recipe.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/InstanceBlockDeviceMapping'
        ParentImage:
          description: The parent image of the image recipe.
          type: string
        WorkingDirectory:
          description: The working directory to be used during build and test workflows.
          type: string
        AdditionalInstanceConfiguration:
          description: Specify additional settings and launch scripts for your build instances.
          $ref: '#/components/schemas/AdditionalInstanceConfiguration'
        Tags:
          description: The tags of the image recipe.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      required:
        - Name
        - Version
        - Components
        - ParentImage
      x-stackql-resource-name: image_recipe
      description: Resource schema for AWS::ImageBuilder::ImageRecipe
      x-type-name: AWS::ImageBuilder::ImageRecipe
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Version
        - Components
        - ParentImage
        - Description
        - BlockDeviceMappings
        - WorkingDirectory
        - Tags
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - Version
        - Components
        - ParentImage
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - imagebuilder:GetComponent
          - imagebuilder:GetImage
          - imagebuilder:TagResource
          - imagebuilder:GetImageRecipe
          - imagebuilder:CreateImageRecipe
          - ec2:DescribeImages
        read:
          - imagebuilder:GetImageRecipe
        delete:
          - imagebuilder:UnTagResource
          - imagebuilder:GetImageRecipe
          - imagebuilder:DeleteImageRecipe
        list:
          - imagebuilder:ListImageRecipes
    TagMap:
      description: TagMap
      type: object
      additionalProperties: false
      properties:
        TagKey:
          description: TagKey
          type: string
          minLength: 1
          maxLength: 128
        TagValue:
          description: TagValue
          type: string
          minLength: 1
          maxLength: 256
    Logging:
      description: The logging configuration of the infrastructure configuration.
      type: object
      additionalProperties: false
      properties:
        S3Logs:
          $ref: '#/components/schemas/S3Logs'
    InstanceMetadataOptions:
      description: The instance metadata option settings for the infrastructure configuration.
      type: object
      additionalProperties: false
      properties:
        HttpPutResponseHopLimit:
          description: Limit the number of hops that an instance metadata request can traverse to reach its destination.
          type: integer
        HttpTokens:
          description: 'Indicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows: '
          type: string
          enum:
            - required
            - optional
    S3Logs:
      description: The S3 path in which to store the logs.
      type: object
      additionalProperties: false
      properties:
        S3BucketName:
          description: S3BucketName
          type: string
        S3KeyPrefix:
          description: S3KeyPrefix
          type: string
    InfrastructureConfiguration:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the infrastructure configuration.
          type: string
        Name:
          description: The name of the infrastructure configuration.
          type: string
        Description:
          description: The description of the infrastructure configuration.
          type: string
        InstanceTypes:
          description: The instance types of the infrastructure configuration.
          type: array
          x-insertionOrder: true
          items:
            type: string
        SecurityGroupIds:
          description: The security group IDs of the infrastructure configuration.
          type: array
          x-insertionOrder: false
          items:
            type: string
        Logging:
          description: The logging configuration of the infrastructure configuration.
          $ref: '#/components/schemas/Logging'
        SubnetId:
          description: The subnet ID of the infrastructure configuration.
          type: string
        KeyPair:
          description: The EC2 key pair of the infrastructure configuration..
          type: string
        TerminateInstanceOnFailure:
          description: The terminate instance on failure configuration of the infrastructure configuration.
          type: boolean
        InstanceProfileName:
          description: The instance profile of the infrastructure configuration.
          type: string
        InstanceMetadataOptions:
          description: The instance metadata option settings for the infrastructure configuration.
          $ref: '#/components/schemas/InstanceMetadataOptions'
        SnsTopicArn:
          description: The SNS Topic Amazon Resource Name (ARN) of the infrastructure configuration.
          type: string
        ResourceTags:
          description: The tags attached to the resource created by Image Builder.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
        Tags:
          description: The tags associated with the component.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      required:
        - Name
        - InstanceProfileName
      x-stackql-resource-name: infrastructure_configuration
      description: Resource schema for AWS::ImageBuilder::InfrastructureConfiguration
      x-type-name: AWS::ImageBuilder::InfrastructureConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - InstanceProfileName
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - iam:PassRole
          - iam:GetRole
          - iam:GetInstanceProfile
          - iam:CreateServiceLinkedRole
          - sns:Publish
          - imagebuilder:TagResource
          - imagebuilder:GetInfrastructureConfiguration
          - imagebuilder:CreateInfrastructureConfiguration
        update:
          - iam:PassRole
          - sns:Publish
          - imagebuilder:GetInfrastructureConfiguration
          - imagebuilder:UpdateInfrastructureConfiguration
        read:
          - imagebuilder:GetInfrastructureConfiguration
        delete:
          - imagebuilder:UnTagResource
          - imagebuilder:GetInfrastructureConfiguration
          - imagebuilder:DeleteInfrastructureConfiguration
        list:
          - imagebuilder:ListInfrastructureConfigurations
    PolicyDetail:
      description: The policy detail of the lifecycle policy.
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/Action'
        Filter:
          $ref: '#/components/schemas/Filter'
        ExclusionRules:
          $ref: '#/components/schemas/ExclusionRules'
      required:
        - Action
        - Filter
    Action:
      description: The action of the policy detail.
      type: object
      additionalProperties: false
      properties:
        Type:
          description: The action type of the policy detail.
          type: string
          enum:
            - DELETE
            - DEPRECATE
            - DISABLE
        IncludeResources:
          $ref: '#/components/schemas/IncludeResources'
      required:
        - Type
    Filter:
      description: The filters to apply of the policy detail.
      type: object
      additionalProperties: false
      properties:
        Type:
          description: The filter type.
          type: string
          enum:
            - AGE
            - COUNT
        Value:
          description: The filter value.
          type: integer
        Unit:
          description: The value's time unit.
          $ref: '#/components/schemas/TimeUnit'
        RetainAtLeast:
          description: The minimum number of Image Builder resources to retain.
          type: integer
      required:
        - Type
        - Value
    ExclusionRules:
      description: The exclusion rules to apply of the policy detail.
      type: object
      additionalProperties: false
      properties:
        TagMap:
          description: The Image Builder tags to filter on.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
        Amis:
          $ref: '#/components/schemas/AmiExclusionRules'
    TimeUnit:
      description: A time unit.
      type: string
      enum:
        - DAYS
        - WEEKS
        - MONTHS
        - YEARS
    IncludeResources:
      description: The included resources of the policy detail.
      type: object
      additionalProperties: false
      properties:
        Amis:
          description: Use to configure lifecycle actions on AMIs.
          type: boolean
        Containers:
          description: Use to configure lifecycle actions on containers.
          type: boolean
        Snapshots:
          description: Use to configure lifecycle actions on snapshots.
          type: boolean
    AmiExclusionRules:
      description: The AMI exclusion rules for the policy detail.
      type: object
      additionalProperties: false
      properties:
        IsPublic:
          description: Use to apply lifecycle policy actions on whether the AMI is public.
          type: boolean
        Regions:
          description: Use to apply lifecycle policy actions on AMIs distributed to a set of regions.
          type: array
          x-insertionOrder: false
          items:
            type: string
        SharedAccounts:
          description: Use to apply lifecycle policy actions on AMIs shared with a set of regions.
          type: array
          x-insertionOrder: false
          items:
            type: string
        LastLaunched:
          description: Use to apply lifecycle policy actions on AMIs launched before a certain time.
          $ref: '#/components/schemas/LastLaunched'
        TagMap:
          description: The AMIs to select by tag.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
    LastLaunched:
      description: The last launched time of a resource.
      type: object
      additionalProperties: false
      properties:
        Value:
          description: The last launched value.
          type: integer
        Unit:
          description: The value's time unit.
          $ref: '#/components/schemas/TimeUnit'
      required:
        - Value
        - Unit
    ResourceSelection:
      description: The resource selection for the lifecycle policy.
      type: object
      additionalProperties: false
      properties:
        Recipes:
          description: The recipes to select.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RecipeSelection'
        TagMap:
          description: The Image Builder resources to select by tag.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
    RecipeSelection:
      description: The recipe to apply the lifecycle policy for.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The recipe name.
          type: string
        SemanticVersion:
          description: The recipe version.
          type: string
      required:
        - Name
        - SemanticVersion
    LifecyclePolicy:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the lifecycle policy.
          type: string
        Name:
          description: The name of the lifecycle policy.
          type: string
        Description:
          description: The description of the lifecycle policy.
          type: string
        Status:
          description: The status of the lifecycle policy.
          type: string
          enum:
            - DISABLED
            - ENABLED
        ExecutionRole:
          description: The execution role of the lifecycle policy.
          type: string
        ResourceType:
          description: The resource type of the lifecycle policy.
          type: string
          enum:
            - AMI_IMAGE
            - CONTAINER_IMAGE
        PolicyDetails:
          description: The policy details of the lifecycle policy.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PolicyDetail'
        ResourceSelection:
          description: The resource selection of the lifecycle policy.
          $ref: '#/components/schemas/ResourceSelection'
        Tags:
          description: The tags associated with the lifecycle policy.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      required:
        - Name
        - ExecutionRole
        - ResourceType
        - PolicyDetails
        - ResourceSelection
      x-stackql-resource-name: lifecycle_policy
      description: Resource schema for AWS::ImageBuilder::LifecyclePolicy
      x-type-name: AWS::ImageBuilder::LifecyclePolicy
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - ExecutionRole
        - ResourceType
        - PolicyDetails
        - ResourceSelection
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - iam:PassRole
          - imagebuilder:CreateLifecyclePolicy
          - imagebuilder:GetLifecyclePolicy
          - imagebuilder:TagResource
        update:
          - iam:PassRole
          - imagebuilder:GetLifecyclePolicy
          - imagebuilder:UpdateLifecyclePolicy
        read:
          - imagebuilder:GetLifecyclePolicy
        delete:
          - imagebuilder:GetLifecyclePolicy
          - imagebuilder:DeleteLifecyclePolicy
          - imagebuilder:UnTagResource
        list:
          - imagebuilder:ListLifecyclePolicies
    Workflow:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the workflow.
          type: string
        Name:
          description: The name of the workflow.
          type: string
        Version:
          description: The version of the workflow.
          type: string
        Description:
          description: The description of the workflow.
          type: string
        ChangeDescription:
          description: The change description of the workflow.
          type: string
        Type:
          description: The type of the workflow denotes whether the workflow is used to build, test, or distribute.
          type: string
          enum:
            - BUILD
            - TEST
            - DISTRIBUTION
        Data:
          description: The data of the workflow.
          type: string
          minLength: 1
          maxLength: 16000
        Uri:
          description: The uri of the workflow.
          type: string
        KmsKeyId:
          description: The KMS key identifier used to encrypt the workflow.
          type: string
        Tags:
          description: The tags associated with the workflow.
          type: object
          additionalProperties: false
          x-patternProperties:
            .{1,}:
              type: string
      required:
        - Name
        - Type
        - Version
      x-stackql-resource-name: workflow
      description: Resource schema for AWS::ImageBuilder::Workflow
      x-type-name: AWS::ImageBuilder::Workflow
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Version
        - ChangeDescription
        - Description
        - Data
        - Uri
        - Type
        - KmsKeyId
        - Tags
      x-write-only-properties:
        - Data
        - Uri
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - Type
        - Version
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - iam:GetRole
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          - s3:GetObject
          - s3:HeadBucket
          - s3:GetBucketLocation
          - imagebuilder:TagResource
          - imagebuilder:GetWorkflow
          - imagebuilder:CreateWorkflow
        read:
          - imagebuilder:GetWorkflow
        delete:
          - imagebuilder:GetWorkflow
          - imagebuilder:UnTagResource
          - imagebuilder:DeleteWorkflow
        list:
          - imagebuilder:ListWorkflows
  x-stackQL-resources:
    components:
      name: components
      id: aws.imagebuilder.components
      x-cfn-schema-name: Component
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::Component'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::Component'
                AND region = 'us-east-1'
    component:
      name: component
      id: aws.imagebuilder.component
      x-cfn-schema-name: Component
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ChangeDescription') as change_description,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Platform') as platform,
              JSON_EXTRACT(Properties, '$.Data') as data,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Encrypted') as encrypted,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Uri') as uri,
              JSON_EXTRACT(Properties, '$.SupportedOsVersions') as supported_os_versions
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::Component'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Version') as version,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ChangeDescription') as change_description,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'Platform') as platform,
                json_extract_path_text(Properties, 'Data') as data,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'Encrypted') as encrypted,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Uri') as uri,
                json_extract_path_text(Properties, 'SupportedOsVersions') as supported_os_versions
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::Component'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    container_recipes:
      name: container_recipes
      id: aws.imagebuilder.container_recipes
      x-cfn-schema-name: ContainerRecipe
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::ContainerRecipe'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::ContainerRecipe'
                AND region = 'us-east-1'
    container_recipe:
      name: container_recipe
      id: aws.imagebuilder.container_recipe
      x-cfn-schema-name: ContainerRecipe
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Components') as components,
              JSON_EXTRACT(Properties, '$.InstanceConfiguration') as instance_configuration,
              JSON_EXTRACT(Properties, '$.DockerfileTemplateData') as dockerfile_template_data,
              JSON_EXTRACT(Properties, '$.DockerfileTemplateUri') as dockerfile_template_uri,
              JSON_EXTRACT(Properties, '$.PlatformOverride') as platform_override,
              JSON_EXTRACT(Properties, '$.ContainerType') as container_type,
              JSON_EXTRACT(Properties, '$.ImageOsVersionOverride') as image_os_version_override,
              JSON_EXTRACT(Properties, '$.TargetRepository') as target_repository,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.ParentImage') as parent_image,
              JSON_EXTRACT(Properties, '$.WorkingDirectory') as working_directory,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::ContainerRecipe'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Version') as version,
                json_extract_path_text(Properties, 'Components') as components,
                json_extract_path_text(Properties, 'InstanceConfiguration') as instance_configuration,
                json_extract_path_text(Properties, 'DockerfileTemplateData') as dockerfile_template_data,
                json_extract_path_text(Properties, 'DockerfileTemplateUri') as dockerfile_template_uri,
                json_extract_path_text(Properties, 'PlatformOverride') as platform_override,
                json_extract_path_text(Properties, 'ContainerType') as container_type,
                json_extract_path_text(Properties, 'ImageOsVersionOverride') as image_os_version_override,
                json_extract_path_text(Properties, 'TargetRepository') as target_repository,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'ParentImage') as parent_image,
                json_extract_path_text(Properties, 'WorkingDirectory') as working_directory,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::ContainerRecipe'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    distribution_configurations:
      name: distribution_configurations
      id: aws.imagebuilder.distribution_configurations
      x-cfn-schema-name: DistributionConfiguration
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::DistributionConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::DistributionConfiguration'
                AND region = 'us-east-1'
    distribution_configuration:
      name: distribution_configuration
      id: aws.imagebuilder.distribution_configuration
      x-cfn-schema-name: DistributionConfiguration
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Distributions') as distributions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::DistributionConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Distributions') as distributions,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::DistributionConfiguration'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    images:
      name: images
      id: aws.imagebuilder.images
      x-cfn-schema-name: Image
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::Image'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::Image'
                AND region = 'us-east-1'
    image:
      name: image
      id: aws.imagebuilder.image
      x-cfn-schema-name: Image
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ImageTestsConfiguration') as image_tests_configuration,
              JSON_EXTRACT(Properties, '$.ImageRecipeArn') as image_recipe_arn,
              JSON_EXTRACT(Properties, '$.ContainerRecipeArn') as container_recipe_arn,
              JSON_EXTRACT(Properties, '$.DistributionConfigurationArn') as distribution_configuration_arn,
              JSON_EXTRACT(Properties, '$.InfrastructureConfigurationArn') as infrastructure_configuration_arn,
              JSON_EXTRACT(Properties, '$.Workflows') as workflows,
              JSON_EXTRACT(Properties, '$.ImageId') as image_id,
              JSON_EXTRACT(Properties, '$.ImageUri') as image_uri,
              JSON_EXTRACT(Properties, '$.EnhancedImageMetadataEnabled') as enhanced_image_metadata_enabled,
              JSON_EXTRACT(Properties, '$.ImageScanningConfiguration') as image_scanning_configuration,
              JSON_EXTRACT(Properties, '$.ExecutionRole') as execution_role,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::Image'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ImageTestsConfiguration') as image_tests_configuration,
                json_extract_path_text(Properties, 'ImageRecipeArn') as image_recipe_arn,
                json_extract_path_text(Properties, 'ContainerRecipeArn') as container_recipe_arn,
                json_extract_path_text(Properties, 'DistributionConfigurationArn') as distribution_configuration_arn,
                json_extract_path_text(Properties, 'InfrastructureConfigurationArn') as infrastructure_configuration_arn,
                json_extract_path_text(Properties, 'Workflows') as workflows,
                json_extract_path_text(Properties, 'ImageId') as image_id,
                json_extract_path_text(Properties, 'ImageUri') as image_uri,
                json_extract_path_text(Properties, 'EnhancedImageMetadataEnabled') as enhanced_image_metadata_enabled,
                json_extract_path_text(Properties, 'ImageScanningConfiguration') as image_scanning_configuration,
                json_extract_path_text(Properties, 'ExecutionRole') as execution_role,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::Image'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    image_pipelines:
      name: image_pipelines
      id: aws.imagebuilder.image_pipelines
      x-cfn-schema-name: ImagePipeline
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::ImagePipeline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::ImagePipeline'
                AND region = 'us-east-1'
    image_pipeline:
      name: image_pipeline
      id: aws.imagebuilder.image_pipeline
      x-cfn-schema-name: ImagePipeline
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ImageTestsConfiguration') as image_tests_configuration,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.ImageRecipeArn') as image_recipe_arn,
              JSON_EXTRACT(Properties, '$.ContainerRecipeArn') as container_recipe_arn,
              JSON_EXTRACT(Properties, '$.DistributionConfigurationArn') as distribution_configuration_arn,
              JSON_EXTRACT(Properties, '$.InfrastructureConfigurationArn') as infrastructure_configuration_arn,
              JSON_EXTRACT(Properties, '$.Workflows') as workflows,
              JSON_EXTRACT(Properties, '$.EnhancedImageMetadataEnabled') as enhanced_image_metadata_enabled,
              JSON_EXTRACT(Properties, '$.ImageScanningConfiguration') as image_scanning_configuration,
              JSON_EXTRACT(Properties, '$.ExecutionRole') as execution_role,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::ImagePipeline'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ImageTestsConfiguration') as image_tests_configuration,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'Schedule') as schedule,
                json_extract_path_text(Properties, 'ImageRecipeArn') as image_recipe_arn,
                json_extract_path_text(Properties, 'ContainerRecipeArn') as container_recipe_arn,
                json_extract_path_text(Properties, 'DistributionConfigurationArn') as distribution_configuration_arn,
                json_extract_path_text(Properties, 'InfrastructureConfigurationArn') as infrastructure_configuration_arn,
                json_extract_path_text(Properties, 'Workflows') as workflows,
                json_extract_path_text(Properties, 'EnhancedImageMetadataEnabled') as enhanced_image_metadata_enabled,
                json_extract_path_text(Properties, 'ImageScanningConfiguration') as image_scanning_configuration,
                json_extract_path_text(Properties, 'ExecutionRole') as execution_role,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::ImagePipeline'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    image_recipes:
      name: image_recipes
      id: aws.imagebuilder.image_recipes
      x-cfn-schema-name: ImageRecipe
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::ImageRecipe'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::ImageRecipe'
                AND region = 'us-east-1'
    image_recipe:
      name: image_recipe
      id: aws.imagebuilder.image_recipe
      x-cfn-schema-name: ImageRecipe
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Components') as components,
              JSON_EXTRACT(Properties, '$.BlockDeviceMappings') as block_device_mappings,
              JSON_EXTRACT(Properties, '$.ParentImage') as parent_image,
              JSON_EXTRACT(Properties, '$.WorkingDirectory') as working_directory,
              JSON_EXTRACT(Properties, '$.AdditionalInstanceConfiguration') as additional_instance_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::ImageRecipe'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Version') as version,
                json_extract_path_text(Properties, 'Components') as components,
                json_extract_path_text(Properties, 'BlockDeviceMappings') as block_device_mappings,
                json_extract_path_text(Properties, 'ParentImage') as parent_image,
                json_extract_path_text(Properties, 'WorkingDirectory') as working_directory,
                json_extract_path_text(Properties, 'AdditionalInstanceConfiguration') as additional_instance_configuration,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::ImageRecipe'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    infrastructure_configurations:
      name: infrastructure_configurations
      id: aws.imagebuilder.infrastructure_configurations
      x-cfn-schema-name: InfrastructureConfiguration
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::InfrastructureConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::InfrastructureConfiguration'
                AND region = 'us-east-1'
    infrastructure_configuration:
      name: infrastructure_configuration
      id: aws.imagebuilder.infrastructure_configuration
      x-cfn-schema-name: InfrastructureConfiguration
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.InstanceTypes') as instance_types,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.Logging') as logging,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.KeyPair') as key_pair,
              JSON_EXTRACT(Properties, '$.TerminateInstanceOnFailure') as terminate_instance_on_failure,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.InstanceMetadataOptions') as instance_metadata_options,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn,
              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::InfrastructureConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'InstanceTypes') as instance_types,
                json_extract_path_text(Properties, 'SecurityGroupIds') as security_group_ids,
                json_extract_path_text(Properties, 'Logging') as logging,
                json_extract_path_text(Properties, 'SubnetId') as subnet_id,
                json_extract_path_text(Properties, 'KeyPair') as key_pair,
                json_extract_path_text(Properties, 'TerminateInstanceOnFailure') as terminate_instance_on_failure,
                json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                json_extract_path_text(Properties, 'InstanceMetadataOptions') as instance_metadata_options,
                json_extract_path_text(Properties, 'SnsTopicArn') as sns_topic_arn,
                json_extract_path_text(Properties, 'ResourceTags') as resource_tags,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::InfrastructureConfiguration'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    lifecycle_policies:
      name: lifecycle_policies
      id: aws.imagebuilder.lifecycle_policies
      x-cfn-schema-name: LifecyclePolicy
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::LifecyclePolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::LifecyclePolicy'
                AND region = 'us-east-1'
    lifecycle_policy:
      name: lifecycle_policy
      id: aws.imagebuilder.lifecycle_policy
      x-cfn-schema-name: LifecyclePolicy
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.ExecutionRole') as execution_role,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.PolicyDetails') as policy_details,
              JSON_EXTRACT(Properties, '$.ResourceSelection') as resource_selection,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::LifecyclePolicy'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'ExecutionRole') as execution_role,
                json_extract_path_text(Properties, 'ResourceType') as resource_type,
                json_extract_path_text(Properties, 'PolicyDetails') as policy_details,
                json_extract_path_text(Properties, 'ResourceSelection') as resource_selection,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::LifecyclePolicy'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    workflows:
      name: workflows
      id: aws.imagebuilder.workflows
      x-cfn-schema-name: Workflow
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::Workflow'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ImageBuilder::Workflow'
                AND region = 'us-east-1'
    workflow:
      name: workflow
      id: aws.imagebuilder.workflow
      x-cfn-schema-name: Workflow
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ChangeDescription') as change_description,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Data') as data,
              JSON_EXTRACT(Properties, '$.Uri') as uri,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::Workflow'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Version') as version,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ChangeDescription') as change_description,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'Data') as data,
                json_extract_path_text(Properties, 'Uri') as uri,
                json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ImageBuilder::Workflow'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
