openapi: 3.0.0
info:
  title: ApplicationAutoScaling
  version: 1.0.0
paths: {}
components:
  schemas:
    SuspendedState:
      type: object
      additionalProperties: false
      properties:
        ScheduledScalingSuspended:
          type: boolean
        DynamicScalingOutSuspended:
          type: boolean
        DynamicScalingInSuspended:
          type: boolean
    ScheduledAction:
      type: object
      additionalProperties: false
      properties:
        Timezone:
          type: string
        ScheduledActionName:
          type: string
        EndTime:
          type: string
        Schedule:
          type: string
        StartTime:
          type: string
        ScalableTargetAction:
          $ref: '#/components/schemas/ScalableTargetAction'
      required:
        - ScheduledActionName
        - Schedule
    ScalableTargetAction:
      type: object
      additionalProperties: false
      properties:
        MinCapacity:
          type: integer
        MaxCapacity:
          type: integer
    ScalableTarget:
      type: object
      properties:
        ScheduledActions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScheduledAction'
        ResourceId:
          type: string
        ServiceNamespace:
          type: string
        ScalableDimension:
          type: string
        SuspendedState:
          $ref: '#/components/schemas/SuspendedState'
        Id:
          type: string
        MinCapacity:
          type: integer
        RoleARN:
          type: string
        MaxCapacity:
          type: integer
      required:
        - ResourceId
        - ServiceNamespace
        - ScalableDimension
        - MinCapacity
        - RoleARN
        - MaxCapacity
      x-stackql-resource-name: scalable_target
      x-stackql-primaryIdentifier:
        - Id
    StepScalingPolicyConfiguration:
      type: object
      additionalProperties: false
      properties:
        AdjustmentType:
          type: string
        Cooldown:
          type: integer
        MetricAggregationType:
          type: string
        MinAdjustmentMagnitude:
          type: integer
        StepAdjustments:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/StepAdjustment'
    TargetTrackingScalingPolicyConfiguration:
      type: object
      additionalProperties: false
      properties:
        CustomizedMetricSpecification:
          $ref: '#/components/schemas/CustomizedMetricSpecification'
        DisableScaleIn:
          type: boolean
        PredefinedMetricSpecification:
          $ref: '#/components/schemas/PredefinedMetricSpecification'
        ScaleInCooldown:
          type: integer
        ScaleOutCooldown:
          type: integer
        TargetValue:
          type: number
      required:
        - TargetValue
    PredefinedMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        PredefinedMetricType:
          type: string
        ResourceLabel:
          type: string
      required:
        - PredefinedMetricType
    CustomizedMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        Dimensions:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricDimension'
        MetricName:
          type: string
        Namespace:
          type: string
        Statistic:
          type: string
        Unit:
          type: string
      required:
        - MetricName
        - Statistic
        - Namespace
    StepAdjustment:
      type: object
      additionalProperties: false
      properties:
        MetricIntervalLowerBound:
          type: number
        MetricIntervalUpperBound:
          type: number
        ScalingAdjustment:
          type: integer
      required:
        - ScalingAdjustment
    MetricDimension:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
        Value:
          type: string
      required:
        - Value
        - Name
    ScalingPolicy:
      type: object
      properties:
        Id:
          type: string
        PolicyName:
          type: string
        PolicyType:
          type: string
        ResourceId:
          type: string
        ScalableDimension:
          type: string
        ScalingTargetId:
          type: string
        ServiceNamespace:
          type: string
        StepScalingPolicyConfiguration:
          $ref: '#/components/schemas/StepScalingPolicyConfiguration'
        TargetTrackingScalingPolicyConfiguration:
          $ref: '#/components/schemas/TargetTrackingScalingPolicyConfiguration'
      required:
        - PolicyType
        - PolicyName
      x-stackql-resource-name: scaling_policy
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    scalable_targets:
      name: scalable_targets
      id: aws.applicationautoscaling.scalable_targets
      x-cfn-schema-name: ScalableTarget
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalableTarget'
    scalable_target:
      name: scalable_target
      id: aws.applicationautoscaling.scalable_target
      x-cfn-schema-name: ScalableTarget
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ScheduledActions') as scheduled_actions,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ServiceNamespace') as service_namespace,
              JSON_EXTRACT(Properties, '$.ScalableDimension') as scalable_dimension,
              JSON_EXTRACT(Properties, '$.SuspendedState.ScheduledScalingSuspended') as suspended_state_scheduled_scaling_suspended,
              JSON_EXTRACT(Properties, '$.SuspendedState.DynamicScalingOutSuspended') as suspended_state_dynamic_scaling_out_suspended,
              JSON_EXTRACT(Properties, '$.SuspendedState.DynamicScalingInSuspended') as suspended_state_dynamic_scaling_in_suspended,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MinCapacity') as min_capacity,
              JSON_EXTRACT(Properties, '$.RoleARN') as role_ar_n,
              JSON_EXTRACT(Properties, '$.MaxCapacity') as max_capacity
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalableTarget'
    scaling_policies:
      name: scaling_policies
      id: aws.applicationautoscaling.scaling_policies
      x-cfn-schema-name: ScalingPolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalingPolicy'
    scaling_policy:
      name: scaling_policy
      id: aws.applicationautoscaling.scaling_policy
      x-cfn-schema-name: ScalingPolicy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyType') as policy_type,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ScalableDimension') as scalable_dimension,
              JSON_EXTRACT(Properties, '$.ScalingTargetId') as scaling_target_id,
              JSON_EXTRACT(Properties, '$.ServiceNamespace') as service_namespace,
              JSON_EXTRACT(Properties, '$.StepScalingPolicyConfiguration.AdjustmentType') as step_scaling_policy_configuration_adjustment_type,
              JSON_EXTRACT(Properties, '$.StepScalingPolicyConfiguration.Cooldown') as step_scaling_policy_configuration_cooldown,
              JSON_EXTRACT(Properties, '$.StepScalingPolicyConfiguration.MetricAggregationType') as step_scaling_policy_configuration_metric_aggregation_type,
              JSON_EXTRACT(Properties, '$.StepScalingPolicyConfiguration.MinAdjustmentMagnitude') as step_scaling_policy_configuration_min_adjustment_magnitude,
              JSON_EXTRACT(Properties, '$.StepScalingPolicyConfiguration.StepAdjustments') as step_scaling_policy_configuration_step_adjustments,
              JSON_EXTRACT(Properties, '$.TargetTrackingScalingPolicyConfiguration.CustomizedMetricSpecification') as target_tracking_scaling_policy_configuration_customized_metric_specification,
              JSON_EXTRACT(Properties, '$.TargetTrackingScalingPolicyConfiguration.DisableScaleIn') as target_tracking_scaling_policy_configuration_disable_scale_in,
              JSON_EXTRACT(Properties, '$.TargetTrackingScalingPolicyConfiguration.PredefinedMetricSpecification') as target_tracking_scaling_policy_configuration_predefined_metric_specification,
              JSON_EXTRACT(Properties, '$.TargetTrackingScalingPolicyConfiguration.ScaleInCooldown') as target_tracking_scaling_policy_configuration_scale_in_cooldown,
              JSON_EXTRACT(Properties, '$.TargetTrackingScalingPolicyConfiguration.ScaleOutCooldown') as target_tracking_scaling_policy_configuration_scale_out_cooldown,
              JSON_EXTRACT(Properties, '$.TargetTrackingScalingPolicyConfiguration.TargetValue') as target_tracking_scaling_policy_configuration_target_value
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalingPolicy'
