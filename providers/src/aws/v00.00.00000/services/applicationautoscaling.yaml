openapi: 3.0.0
info:
  title: ApplicationAutoScaling
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    SuspendedState:
      type: object
      additionalProperties: false
      description: specifies whether the scaling activities for a scalable target are in a suspended state
      properties:
        ScheduledScalingSuspended:
          type: boolean
        DynamicScalingOutSuspended:
          type: boolean
        DynamicScalingInSuspended:
          type: boolean
    ScheduledAction:
      type: object
      additionalProperties: false
      description: specifies a scheduled action for a scalable target
      properties:
        Timezone:
          type: string
        ScheduledActionName:
          type: string
        EndTime:
          type: string
        Schedule:
          type: string
        StartTime:
          type: string
        ScalableTargetAction:
          $ref: '#/components/schemas/ScalableTargetAction'
      required:
        - ScheduledActionName
        - Schedule
    ScalableTargetAction:
      type: object
      additionalProperties: false
      description: specifies the minimum and maximum capacity
      properties:
        MinCapacity:
          type: integer
        MaxCapacity:
          type: integer
    ScalableTarget:
      type: object
      properties:
        Id:
          description: This value can be returned by using the Ref function. Ref returns the Cloudformation generated ID of the resource in format - ResourceId|ScalableDimension|ServiceNamespace
          type: string
        MaxCapacity:
          description: The maximum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
          type: integer
        MinCapacity:
          description: The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
          type: integer
        ResourceId:
          description: The identifier of the resource associated with the scalable target
          type: string
        RoleARN:
          description: 'Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. '
          type: string
        ScalableDimension:
          description: The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
          type: string
        ScheduledActions:
          description: The scheduled actions for the scalable target. Duplicates aren't allowed.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ScheduledAction'
        ServiceNamespace:
          description: The namespace of the AWS service that provides the resource, or a custom-resource
          type: string
        SuspendedState:
          description: An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.
          $ref: '#/components/schemas/SuspendedState'
      required:
        - ResourceId
        - ServiceNamespace
        - ScalableDimension
        - MinCapacity
        - MaxCapacity
      x-stackql-resource-name: scalable_target
      description: Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
      x-type-name: AWS::ApplicationAutoScaling::ScalableTarget
      x-stackql-primary-identifier:
        - ResourceId
        - ScalableDimension
        - ServiceNamespace
      x-create-only-properties:
        - ResourceId
        - ScalableDimension
        - ServiceNamespace
      x-write-only-properties:
        - RoleARN
      x-read-only-properties:
        - Id
      x-required-properties:
        - ResourceId
        - ServiceNamespace
        - ScalableDimension
        - MinCapacity
        - MaxCapacity
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:DescribeScheduledActions
          - application-autoscaling:PutScheduledAction
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - cloudwatch:PutMetricAlarm
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - lambda:GetProvisionedConcurrencyConfig
          - lambda:PutProvisionedConcurrencyConfig
          - lambda:DeleteProvisionedConcurrencyConfig
        read:
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScheduledActions
        list:
          - application-autoscaling:DescribeScalableTargets
        update:
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScheduledActions
          - application-autoscaling:DeleteScheduledAction
          - application-autoscaling:PutScheduledAction
          - cloudwatch:PutMetricAlarm
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - lambda:GetProvisionedConcurrencyConfig
          - lambda:PutProvisionedConcurrencyConfig
          - lambda:DeleteProvisionedConcurrencyConfig
        delete:
          - application-autoscaling:DeregisterScalableTarget
    StepScalingPolicyConfiguration:
      description: A step scaling policy.
      type: object
      additionalProperties: false
      properties:
        AdjustmentType:
          description: Specifies how the ScalingAdjustment value in a StepAdjustment is interpreted.
          type: string
        Cooldown:
          description: The amount of time, in seconds, to wait for a previous scaling activity to take effect.
          type: integer
        MetricAggregationType:
          description: The aggregation type for the CloudWatch metrics. Valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average
          type: string
        MinAdjustmentMagnitude:
          description: The minimum value to scale by when the adjustment type is PercentChangeInCapacity.
          type: integer
        StepAdjustments:
          description: A set of adjustments that enable you to scale based on the size of the alarm breach.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/StepAdjustment'
    TargetTrackingScalingPolicyConfiguration:
      description: A target tracking scaling policy.
      type: object
      additionalProperties: false
      properties:
        CustomizedMetricSpecification:
          description: A customized metric. You can specify either a predefined metric or a customized metric.
          $ref: '#/components/schemas/CustomizedMetricSpecification'
        DisableScaleIn:
          description: Indicates whether scale in by the target tracking scaling policy is disabled. If the value is true, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is false.
          type: boolean
        PredefinedMetricSpecification:
          description: A predefined metric. You can specify either a predefined metric or a customized metric.
          $ref: '#/components/schemas/PredefinedMetricSpecification'
        ScaleInCooldown:
          description: The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start.
          type: integer
        ScaleOutCooldown:
          description: The amount of time, in seconds, to wait for a previous scale-out activity to take effect.
          type: integer
        TargetValue:
          description: The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out.
          type: number
      required:
        - TargetValue
    PredefinedMetricSpecification:
      description: Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.
      type: object
      additionalProperties: false
      properties:
        PredefinedMetricType:
          description: The metric type. The ALBRequestCountPerTarget metric type applies only to Spot Fleets and ECS services.
          type: string
        ResourceLabel:
          description: Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group attached to the Spot Fleet or ECS service.
          type: string
      required:
        - PredefinedMetricType
    CustomizedMetricSpecification:
      description: Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.
      type: object
      additionalProperties: false
      properties:
        Dimensions:
          description: The dimensions of the metric.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDimension'
        MetricName:
          description: The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the Metric object that is returned by a call to ListMetrics.
          type: string
        Namespace:
          description: The namespace of the metric.
          type: string
        Statistic:
          description: The statistic of the metric.
          type: string
        Unit:
          description: The unit of the metric. For a complete list of the units that CloudWatch supports, see the MetricDatum data type in the Amazon CloudWatch API Reference.
          type: string
        Metrics:
          description: The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TargetTrackingMetricDataQuery'
    TargetTrackingMetricDataQuery:
      description: The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.
      type: object
      additionalProperties: false
      properties:
        Expression:
          description: The math expression to perform on the returned data, if this object is performing a math expression.
          type: string
        Id:
          description: A short name that identifies the object's results in the response.
          type: string
        Label:
          description: A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
          type: string
        ReturnData:
          description: Indicates whether to return the timestamps and raw data values of this metric.
          type: boolean
        MetricStat:
          description: Information about the metric data to return.
          $ref: '#/components/schemas/TargetTrackingMetricStat'
    TargetTrackingMetricStat:
      description: This structure defines the CloudWatch metric to return, along with the statistic, period, and unit.
      type: object
      additionalProperties: false
      properties:
        Metric:
          description: 'The CloudWatch metric to return, including the metric name, namespace, and dimensions. '
          $ref: '#/components/schemas/TargetTrackingMetric'
        Stat:
          description: The statistic to return. It can include any CloudWatch statistic or extended statistic.
          type: string
        Unit:
          description: The unit to use for the returned data points.
          type: string
    TargetTrackingMetric:
      description: Represents a specific metric.
      type: object
      additionalProperties: false
      properties:
        Dimensions:
          description: The dimensions for the metric.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TargetTrackingMetricDimension'
        MetricName:
          description: The name of the metric.
          type: string
        Namespace:
          description: The namespace of the metric.
          type: string
    TargetTrackingMetricDimension:
      description: Describes the dimension of a metric.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The name of the dimension.
          type: string
        Value:
          description: The value of the dimension.
          type: string
    StepAdjustment:
      description: Represents a step adjustment for a StepScalingPolicyConfiguration. Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm.
      type: object
      additionalProperties: false
      properties:
        MetricIntervalLowerBound:
          description: The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
          type: number
        MetricIntervalUpperBound:
          description: The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.
          type: number
        ScalingAdjustment:
          description: The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.
          type: integer
      required:
        - ScalingAdjustment
    MetricDimension:
      description: Describes the dimension names and values associated with a metric.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: The name of the dimension.
          type: string
        Value:
          description: The value of the dimension.
          type: string
      required:
        - Value
        - Name
    ScalingPolicy:
      type: object
      properties:
        PolicyName:
          description: |-
            The name of the scaling policy.

            Updates to the name of a target tracking scaling policy are not supported, unless you also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy by removing the existing AWS::ApplicationAutoScaling::ScalingPolicy resource from the template and updating the stack. Then, recreate the resource with the same settings and a different name.
          type: string
        PolicyType:
          description: |-
            The scaling policy type.

            The following policy types are supported:

            TargetTrackingScaling Not supported for Amazon EMR

            StepScaling Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.
          type: string
        ResourceId:
          description: The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
          type: string
        ScalableDimension:
          description: The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
          type: string
        ScalingTargetId:
          description: The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see the Return Value section of the AWS::ApplicationAutoScaling::ScalableTarget resource.
          type: string
        ServiceNamespace:
          description: The namespace of the AWS service that provides the resource, or a custom-resource.
          type: string
        StepScalingPolicyConfiguration:
          description: A step scaling policy.
          $ref: '#/components/schemas/StepScalingPolicyConfiguration'
        TargetTrackingScalingPolicyConfiguration:
          description: A target tracking scaling policy.
          $ref: '#/components/schemas/TargetTrackingScalingPolicyConfiguration'
        Arn:
          description: ARN is a read only property for the resource.
          type: string
      required:
        - PolicyName
        - PolicyType
      x-stackql-resource-name: scaling_policy
      description: Resource Type definition for AWS::ApplicationAutoScaling::ScalingPolicy
      x-type-name: AWS::ApplicationAutoScaling::ScalingPolicy
      x-stackql-primary-identifier:
        - Arn
        - ScalableDimension
      x-create-only-properties:
        - PolicyName
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
        - ScalingTargetId
      x-write-only-properties:
        - TargetTrackingScalingPolicyConfiguration/PredefinedMetricSpecification/ResourceLabel
        - ScalingTargetId
      x-read-only-properties:
        - Arn
      x-required-properties:
        - PolicyName
        - PolicyType
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:PutScalingPolicy
        read:
          - application-autoscaling:DescribeScalingPolicies
        update:
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:PutScalingPolicy
        delete:
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeleteScalingPolicy
        list:
          - application-autoscaling:DescribeScalingPolicies
    CreateScalableTargetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              description: This value can be returned by using the Ref function. Ref returns the Cloudformation generated ID of the resource in format - ResourceId|ScalableDimension|ServiceNamespace
              type: string
            MaxCapacity:
              description: The maximum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
              type: integer
            MinCapacity:
              description: The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand
              type: integer
            ResourceId:
              description: The identifier of the resource associated with the scalable target
              type: string
            RoleARN:
              description: 'Specify the Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that allows Application Auto Scaling to modify the scalable target on your behalf. '
              type: string
            ScalableDimension:
              description: The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property
              type: string
            ScheduledActions:
              description: The scheduled actions for the scalable target. Duplicates aren't allowed.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ScheduledAction'
            ServiceNamespace:
              description: The namespace of the AWS service that provides the resource, or a custom-resource
              type: string
            SuspendedState:
              description: An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities.
              $ref: '#/components/schemas/SuspendedState'
          x-stackQL-stringOnly: true
      x-title: CreateScalableTargetRequest
      type: object
      required: []
    CreateScalingPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PolicyName:
              description: |-
                The name of the scaling policy.

                Updates to the name of a target tracking scaling policy are not supported, unless you also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy by removing the existing AWS::ApplicationAutoScaling::ScalingPolicy resource from the template and updating the stack. Then, recreate the resource with the same settings and a different name.
              type: string
            PolicyType:
              description: |-
                The scaling policy type.

                The following policy types are supported:

                TargetTrackingScaling Not supported for Amazon EMR

                StepScaling Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.
              type: string
            ResourceId:
              description: The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
              type: string
            ScalableDimension:
              description: The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
              type: string
            ScalingTargetId:
              description: The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see the Return Value section of the AWS::ApplicationAutoScaling::ScalableTarget resource.
              type: string
            ServiceNamespace:
              description: The namespace of the AWS service that provides the resource, or a custom-resource.
              type: string
            StepScalingPolicyConfiguration:
              description: A step scaling policy.
              $ref: '#/components/schemas/StepScalingPolicyConfiguration'
            TargetTrackingScalingPolicyConfiguration:
              description: A target tracking scaling policy.
              $ref: '#/components/schemas/TargetTrackingScalingPolicyConfiguration'
            Arn:
              description: ARN is a read only property for the resource.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateScalingPolicyRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    scalable_targets:
      name: scalable_targets
      id: aws.applicationautoscaling.scalable_targets
      x-cfn-schema-name: ScalableTarget
      x-cfn-type-name: AWS::ApplicationAutoScaling::ScalableTarget
      x-identifiers:
        - ResourceId
        - ScalableDimension
        - ServiceNamespace
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ScalableTarget&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationAutoScaling::ScalableTarget"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationAutoScaling::ScalableTarget"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/scalable_targets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/scalable_targets/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ScalableDimension') as scalable_dimension,
              JSON_EXTRACT(Properties, '$.ServiceNamespace') as service_namespace
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalableTarget'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ResourceId') as resource_id,
                json_extract_path_text(Properties, 'ScalableDimension') as scalable_dimension,
                json_extract_path_text(Properties, 'ServiceNamespace') as service_namespace
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalableTarget'
                AND region = 'us-east-1'
    scalable_target:
      name: scalable_target
      id: aws.applicationautoscaling.scalable_target
      x-cfn-schema-name: ScalableTarget
      x-cfn-type-name: AWS::ApplicationAutoScaling::ScalableTarget
      x-identifiers:
        - ResourceId
        - ScalableDimension
        - ServiceNamespace
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationAutoScaling::ScalableTarget"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/scalable_target/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MaxCapacity') as max_capacity,
              JSON_EXTRACT(Properties, '$.MinCapacity') as min_capacity,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.RoleARN') as role_arn,
              JSON_EXTRACT(Properties, '$.ScalableDimension') as scalable_dimension,
              JSON_EXTRACT(Properties, '$.ScheduledActions') as scheduled_actions,
              JSON_EXTRACT(Properties, '$.ServiceNamespace') as service_namespace,
              JSON_EXTRACT(Properties, '$.SuspendedState') as suspended_state
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalableTarget'
              AND data__Identifier = '<ResourceId>|<ScalableDimension>|<ServiceNamespace>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'MaxCapacity') as max_capacity,
                json_extract_path_text(Properties, 'MinCapacity') as min_capacity,
                json_extract_path_text(Properties, 'ResourceId') as resource_id,
                json_extract_path_text(Properties, 'RoleARN') as role_arn,
                json_extract_path_text(Properties, 'ScalableDimension') as scalable_dimension,
                json_extract_path_text(Properties, 'ScheduledActions') as scheduled_actions,
                json_extract_path_text(Properties, 'ServiceNamespace') as service_namespace,
                json_extract_path_text(Properties, 'SuspendedState') as suspended_state
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalableTarget'
                AND data__Identifier = '<ResourceId>|<ScalableDimension>|<ServiceNamespace>'
                AND region = 'us-east-1'
    scaling_policies:
      name: scaling_policies
      id: aws.applicationautoscaling.scaling_policies
      x-cfn-schema-name: ScalingPolicy
      x-cfn-type-name: AWS::ApplicationAutoScaling::ScalingPolicy
      x-identifiers:
        - Arn
        - ScalableDimension
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ScalingPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationAutoScaling::ScalingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationAutoScaling::ScalingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/scaling_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/scaling_policies/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ScalableDimension') as scalable_dimension
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalingPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ScalableDimension') as scalable_dimension
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalingPolicy'
                AND region = 'us-east-1'
    scaling_policy:
      name: scaling_policy
      id: aws.applicationautoscaling.scaling_policy
      x-cfn-schema-name: ScalingPolicy
      x-cfn-type-name: AWS::ApplicationAutoScaling::ScalingPolicy
      x-identifiers:
        - Arn
        - ScalableDimension
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationAutoScaling::ScalingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/scaling_policy/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyType') as policy_type,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ScalableDimension') as scalable_dimension,
              JSON_EXTRACT(Properties, '$.ScalingTargetId') as scaling_target_id,
              JSON_EXTRACT(Properties, '$.ServiceNamespace') as service_namespace,
              JSON_EXTRACT(Properties, '$.StepScalingPolicyConfiguration') as step_scaling_policy_configuration,
              JSON_EXTRACT(Properties, '$.TargetTrackingScalingPolicyConfiguration') as target_tracking_scaling_policy_configuration,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalingPolicy'
              AND data__Identifier = '<Arn>|<ScalableDimension>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'PolicyName') as policy_name,
                json_extract_path_text(Properties, 'PolicyType') as policy_type,
                json_extract_path_text(Properties, 'ResourceId') as resource_id,
                json_extract_path_text(Properties, 'ScalableDimension') as scalable_dimension,
                json_extract_path_text(Properties, 'ScalingTargetId') as scaling_target_id,
                json_extract_path_text(Properties, 'ServiceNamespace') as service_namespace,
                json_extract_path_text(Properties, 'StepScalingPolicyConfiguration') as step_scaling_policy_configuration,
                json_extract_path_text(Properties, 'TargetTrackingScalingPolicyConfiguration') as target_tracking_scaling_policy_configuration,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationAutoScaling::ScalingPolicy'
                AND data__Identifier = '<Arn>|<ScalableDimension>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ScalableTarget&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateScalableTarget
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateScalableTargetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ScalingPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateScalingPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateScalingPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
