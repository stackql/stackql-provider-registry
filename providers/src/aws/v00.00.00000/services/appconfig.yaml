openapi: 3.0.0
info:
  title: AppConfig
  version: 1.0.0
paths: {}
components:
  schemas:
    Tags:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
    Application:
      type: object
      properties:
        Description:
          type: string
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: application
      x-stackql-primaryIdentifier:
        - Id
    Validators:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Content:
          type: string
    ConfigurationProfile:
      type: object
      properties:
        LocationUri:
          type: string
        Type:
          type: string
        Description:
          type: string
        Validators:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Validators'
        RetrievalRoleArn:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - LocationUri
        - ApplicationId
        - Name
      x-stackql-resource-name: configuration_profile
      x-stackql-primaryIdentifier:
        - Id
    Deployment:
      type: object
      properties:
        DeploymentStrategyId:
          type: string
        ConfigurationProfileId:
          type: string
        EnvironmentId:
          type: string
        KmsKeyIdentifier:
          type: string
        Description:
          type: string
        ConfigurationVersion:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
      required:
        - DeploymentStrategyId
        - ConfigurationProfileId
        - EnvironmentId
        - ConfigurationVersion
        - ApplicationId
      x-stackql-resource-name: deployment
      x-stackql-primaryIdentifier:
        - Id
    DeploymentStrategy:
      type: object
      properties:
        ReplicateTo:
          type: string
        GrowthType:
          type: string
        Description:
          type: string
        DeploymentDurationInMinutes:
          type: number
        GrowthFactor:
          type: number
        Id:
          type: string
        FinalBakeTimeInMinutes:
          type: number
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - ReplicateTo
        - DeploymentDurationInMinutes
        - GrowthFactor
        - Name
      x-stackql-resource-name: deployment_strategy
      x-stackql-primaryIdentifier:
        - Id
    Monitors:
      type: object
      additionalProperties: false
      properties:
        AlarmArn:
          type: string
        AlarmRoleArn:
          type: string
    Environment:
      type: object
      properties:
        Monitors:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Monitors'
        Description:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - ApplicationId
        - Name
      x-stackql-resource-name: environment
      x-stackql-primaryIdentifier:
        - Id
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Actions:
      description: A list of actions for an extension to take at a specific action point.
      uniqueItems: true
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/Action'
    Action:
      description: An action for an extension to take at a specific action point.
      type: object
      properties:
        Name:
          type: string
          description: The name of the extension action.
          minLength: 1
          maxLength: 128
        Description:
          type: string
          description: The description of the extension Action.
          minLength: 0
          maxLength: 1024
        Uri:
          type: string
          description: The URI of the extension action.
          minLength: 1
          maxLength: 2048
        RoleArn:
          type: string
          description: The ARN of the role for invoking the extension action.
          minLength: 20
          maxLength: 2048
      required:
        - Name
        - Uri
      additionalProperties: false
    Parameter:
      description: A parameter for the extension to send to a specific action.
      type: object
      properties:
        Description:
          type: string
          description: The description of the extension Parameter.
          minLength: 0
          maxLength: 1024
        Required:
          type: boolean
      required:
        - Required
      additionalProperties: false
    Extension:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        VersionNumber:
          type: integer
        Name:
          description: Name of the extension.
          type: string
        Description:
          description: Description of the extension.
          type: string
        Actions:
          type: object
          x-patternProperties:
            ^.+$:
              $ref: '#/components/schemas/Actions'
          additionalProperties: false
        Parameters:
          type: object
          x-patternProperties:
            ^.+$:
              $ref: '#/components/schemas/Parameter'
          additionalProperties: false
        LatestVersionNumber:
          type: integer
        Tags:
          description: An array of key-value tags to apply to this resource.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Actions
      x-stackql-resource-name: extension
      x-stackql-primaryIdentifier:
        - Id
    ExtensionAssociation:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        ExtensionArn:
          type: string
        ResourceArn:
          type: string
        ExtensionIdentifier:
          type: string
        ResourceIdentifier:
          type: string
        ExtensionVersionNumber:
          type: integer
        Parameters:
          type: object
          x-patternProperties:
            ^.+$:
              type: string
          additionalProperties: false
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: extension_association
      x-stackql-primaryIdentifier:
        - Id
    HostedConfigurationVersion:
      type: object
      properties:
        ConfigurationProfileId:
          type: string
        Description:
          type: string
        ContentType:
          type: string
        LatestVersionNumber:
          type: number
        Content:
          type: string
        VersionLabel:
          type: string
        Id:
          type: string
        ApplicationId:
          type: string
      required:
        - ConfigurationProfileId
        - ContentType
        - Content
        - ApplicationId
      x-stackql-resource-name: hosted_configuration_version
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.appconfig.applications
      x-cfn-schema-name: Application
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::Application'
    application:
      name: application
      id: aws.appconfig.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::Application'
    configuration_profiles:
      name: configuration_profiles
      id: aws.appconfig.configuration_profiles
      x-cfn-schema-name: ConfigurationProfile
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::ConfigurationProfile'
    configuration_profile:
      name: configuration_profile
      id: aws.appconfig.configuration_profile
      x-cfn-schema-name: ConfigurationProfile
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationUri') as location_uri,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Validators') as validators,
              JSON_EXTRACT(Properties, '$.RetrievalRoleArn') as retrieval_role_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::ConfigurationProfile'
    deployments:
      name: deployments
      id: aws.appconfig.deployments
      x-cfn-schema-name: Deployment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::Deployment'
    deployment:
      name: deployment
      id: aws.appconfig.deployment
      x-cfn-schema-name: Deployment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeploymentStrategyId') as deployment_strategy_id,
              JSON_EXTRACT(Properties, '$.ConfigurationProfileId') as configuration_profile_id,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(Properties, '$.KmsKeyIdentifier') as kms_key_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ConfigurationVersion') as configuration_version,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::Deployment'
    deployment_strategies:
      name: deployment_strategies
      id: aws.appconfig.deployment_strategies
      x-cfn-schema-name: DeploymentStrategy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::DeploymentStrategy'
    deployment_strategy:
      name: deployment_strategy
      id: aws.appconfig.deployment_strategy
      x-cfn-schema-name: DeploymentStrategy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicateTo') as replicate_to,
              JSON_EXTRACT(Properties, '$.GrowthType') as growth_type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DeploymentDurationInMinutes') as deployment_duration_in_minutes,
              JSON_EXTRACT(Properties, '$.GrowthFactor') as growth_factor,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.FinalBakeTimeInMinutes') as final_bake_time_in_minutes,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::DeploymentStrategy'
    environments:
      name: environments
      id: aws.appconfig.environments
      x-cfn-schema-name: Environment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::Environment'
    environment:
      name: environment
      id: aws.appconfig.environment
      x-cfn-schema-name: Environment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Monitors') as monitors,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::Environment'
    extensions:
      name: extensions
      id: aws.appconfig.extensions
      x-cfn-schema-name: Extension
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::Extension'
    extension:
      name: extension
      id: aws.appconfig.extension
      x-cfn-schema-name: Extension
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.VersionNumber') as version_number,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.LatestVersionNumber') as latest_version_number,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::Extension'
    extension_associations:
      name: extension_associations
      id: aws.appconfig.extension_associations
      x-cfn-schema-name: ExtensionAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::ExtensionAssociation'
    extension_association:
      name: extension_association
      id: aws.appconfig.extension_association
      x-cfn-schema-name: ExtensionAssociation
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ExtensionArn') as extension_arn,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.ExtensionIdentifier') as extension_identifier,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.ExtensionVersionNumber') as extension_version_number,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::ExtensionAssociation'
    hosted_configuration_versions:
      name: hosted_configuration_versions
      id: aws.appconfig.hosted_configuration_versions
      x-cfn-schema-name: HostedConfigurationVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppConfig::HostedConfigurationVersion'
    hosted_configuration_version:
      name: hosted_configuration_version
      id: aws.appconfig.hosted_configuration_version
      x-cfn-schema-name: HostedConfigurationVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConfigurationProfileId') as configuration_profile_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ContentType') as content_type,
              JSON_EXTRACT(Properties, '$.LatestVersionNumber') as latest_version_number,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.VersionLabel') as version_label,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppConfig::HostedConfigurationVersion'
