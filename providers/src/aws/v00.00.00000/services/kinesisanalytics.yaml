openapi: 3.0.0
info:
  title: KinesisAnalytics
  version: 1.0.0
paths: {}
components:
  schemas:
    Input:
      type: object
      additionalProperties: false
      properties:
        NamePrefix:
          type: string
        InputSchema:
          $ref: '#/components/schemas/InputSchema'
        KinesisStreamsInput:
          $ref: '#/components/schemas/KinesisStreamsInput'
        KinesisFirehoseInput:
          $ref: '#/components/schemas/KinesisFirehoseInput'
        InputProcessingConfiguration:
          $ref: '#/components/schemas/InputProcessingConfiguration'
        InputParallelism:
          $ref: '#/components/schemas/InputParallelism'
      required:
        - NamePrefix
        - InputSchema
    InputProcessingConfiguration:
      type: object
      additionalProperties: false
      properties:
        InputLambdaProcessor:
          $ref: '#/components/schemas/InputLambdaProcessor'
    KinesisFirehoseInput:
      type: object
      additionalProperties: false
      properties:
        ResourceARN:
          type: string
        RoleARN:
          type: string
      required:
        - ResourceARN
        - RoleARN
    KinesisStreamsInput:
      type: object
      additionalProperties: false
      properties:
        ResourceARN:
          type: string
        RoleARN:
          type: string
      required:
        - ResourceARN
        - RoleARN
    InputSchema:
      type: object
      additionalProperties: false
      properties:
        RecordEncoding:
          type: string
        RecordColumns:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/RecordColumn'
        RecordFormat:
          $ref: '#/components/schemas/RecordFormat'
      required:
        - RecordColumns
        - RecordFormat
    InputParallelism:
      type: object
      additionalProperties: false
      properties:
        Count:
          type: integer
    RecordColumn:
      type: object
      additionalProperties: false
      properties:
        Mapping:
          type: string
        SqlType:
          type: string
        Name:
          type: string
      required:
        - SqlType
        - Name
    RecordFormat:
      type: object
      additionalProperties: false
      properties:
        MappingParameters:
          $ref: '#/components/schemas/MappingParameters'
        RecordFormatType:
          type: string
      required:
        - RecordFormatType
    InputLambdaProcessor:
      type: object
      additionalProperties: false
      properties:
        ResourceARN:
          type: string
        RoleARN:
          type: string
      required:
        - ResourceARN
        - RoleARN
    MappingParameters:
      type: object
      additionalProperties: false
      properties:
        JSONMappingParameters:
          $ref: '#/components/schemas/JSONMappingParameters'
        CSVMappingParameters:
          $ref: '#/components/schemas/CSVMappingParameters'
    JSONMappingParameters:
      type: object
      additionalProperties: false
      properties:
        RecordRowPath:
          type: string
      required:
        - RecordRowPath
    CSVMappingParameters:
      type: object
      additionalProperties: false
      properties:
        RecordRowDelimiter:
          type: string
        RecordColumnDelimiter:
          type: string
      required:
        - RecordColumnDelimiter
        - RecordRowDelimiter
    Application:
      type: object
      properties:
        Id:
          type: string
        ApplicationName:
          type: string
        Inputs:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Input'
        ApplicationDescription:
          type: string
        ApplicationCode:
          type: string
      required:
        - Inputs
      x-stackql-resource-name: application
      x-stackql-primaryIdentifier:
        - Id
    Output:
      type: object
      additionalProperties: false
      properties:
        DestinationSchema:
          $ref: '#/components/schemas/DestinationSchema'
        LambdaOutput:
          $ref: '#/components/schemas/LambdaOutput'
        KinesisFirehoseOutput:
          $ref: '#/components/schemas/KinesisFirehoseOutput'
        KinesisStreamsOutput:
          $ref: '#/components/schemas/KinesisStreamsOutput'
        Name:
          type: string
      required:
        - DestinationSchema
    KinesisStreamsOutput:
      type: object
      additionalProperties: false
      properties:
        ResourceARN:
          type: string
        RoleARN:
          type: string
      required:
        - ResourceARN
        - RoleARN
    KinesisFirehoseOutput:
      type: object
      additionalProperties: false
      properties:
        ResourceARN:
          type: string
        RoleARN:
          type: string
      required:
        - ResourceARN
        - RoleARN
    LambdaOutput:
      type: object
      additionalProperties: false
      properties:
        ResourceARN:
          type: string
        RoleARN:
          type: string
      required:
        - ResourceARN
        - RoleARN
    DestinationSchema:
      type: object
      additionalProperties: false
      properties:
        RecordFormatType:
          type: string
    ApplicationOutput:
      type: object
      properties:
        Id:
          type: string
        ApplicationName:
          type: string
        Output:
          $ref: '#/components/schemas/Output'
      required:
        - ApplicationName
        - Output
      x-stackql-resource-name: application_output
      x-stackql-primaryIdentifier:
        - Id
    ReferenceDataSource:
      type: object
      additionalProperties: false
      properties:
        ReferenceSchema:
          $ref: '#/components/schemas/ReferenceSchema'
        TableName:
          type: string
        S3ReferenceDataSource:
          $ref: '#/components/schemas/S3ReferenceDataSource'
      required:
        - ReferenceSchema
    S3ReferenceDataSource:
      type: object
      additionalProperties: false
      properties:
        BucketARN:
          type: string
        FileKey:
          type: string
        ReferenceRoleARN:
          type: string
      required:
        - BucketARN
        - FileKey
        - ReferenceRoleARN
    ReferenceSchema:
      type: object
      additionalProperties: false
      properties:
        RecordEncoding:
          type: string
        RecordColumns:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/RecordColumn'
        RecordFormat:
          $ref: '#/components/schemas/RecordFormat'
      required:
        - RecordColumns
        - RecordFormat
    ApplicationReferenceDataSource:
      type: object
      properties:
        Id:
          type: string
        ApplicationName:
          type: string
        ReferenceDataSource:
          $ref: '#/components/schemas/ReferenceDataSource'
      required:
        - ReferenceDataSource
        - ApplicationName
      x-stackql-resource-name: application_reference_data_source
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.kinesisanalytics.applications
      x-cfn-schema-name: Application
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KinesisAnalytics::Application'
    application:
      name: application
      id: aws.kinesisanalytics.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationName') as application_name,
              JSON_EXTRACT(Properties, '$.Inputs') as inputs,
              JSON_EXTRACT(Properties, '$.ApplicationDescription') as application_description,
              JSON_EXTRACT(Properties, '$.ApplicationCode') as application_code
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KinesisAnalytics::Application'
    application_outputs:
      name: application_outputs
      id: aws.kinesisanalytics.application_outputs
      x-cfn-schema-name: ApplicationOutput
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KinesisAnalytics::ApplicationOutput'
    application_output:
      name: application_output
      id: aws.kinesisanalytics.application_output
      x-cfn-schema-name: ApplicationOutput
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationName') as application_name,
              JSON_EXTRACT(Properties, '$.Output.DestinationSchema') as output_destination_schema,
              JSON_EXTRACT(Properties, '$.Output.LambdaOutput') as output_lambda_output,
              JSON_EXTRACT(Properties, '$.Output.KinesisFirehoseOutput') as output_kinesis_firehose_output,
              JSON_EXTRACT(Properties, '$.Output.KinesisStreamsOutput') as output_kinesis_streams_output,
              JSON_EXTRACT(Properties, '$.Output.Name') as output_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KinesisAnalytics::ApplicationOutput'
    application_reference_data_sources:
      name: application_reference_data_sources
      id: aws.kinesisanalytics.application_reference_data_sources
      x-cfn-schema-name: ApplicationReferenceDataSource
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KinesisAnalytics::ApplicationReferenceDataSource'
    application_reference_data_source:
      name: application_reference_data_source
      id: aws.kinesisanalytics.application_reference_data_source
      x-cfn-schema-name: ApplicationReferenceDataSource
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationName') as application_name,
              JSON_EXTRACT(Properties, '$.ReferenceDataSource.ReferenceSchema') as reference_data_source_reference_schema,
              JSON_EXTRACT(Properties, '$.ReferenceDataSource.TableName') as reference_data_source_table_name,
              JSON_EXTRACT(Properties, '$.ReferenceDataSource.S3ReferenceDataSource') as reference_data_source_s3_reference_data_source
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KinesisAnalytics::ApplicationReferenceDataSource'
