openapi: 3.0.0
info:
  title: RoboMaker
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Arn:
      type: string
      pattern: arn:[\w+=/,.@-]+:[\w+=/,.@-]+:[\w+=/,.@-]*:[0-9]*:[\w+=,.@-]+(/[\w+=,.@-]+)*
    Tags:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      x-patternProperties:
        ^[a-zA-Z0-9-]{1,128}$:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 256
    Fleet:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Tags:
          $ref: '#/components/schemas/Tags'
        Name:
          description: The name of the fleet.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z0-9_\-]{1,255}$'
      required: []
      x-stackql-resource-name: fleet
      description: AWS::RoboMaker::Fleet resource creates an AWS RoboMaker fleet. Fleets contain robots and can receive deployments.
      x-type-name: AWS::RoboMaker::Fleet
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties: []
      x-required-permissions:
        create:
          - robomaker:CreateFleet
        read:
          - robomaker:DescribeFleet
        delete:
          - robomaker:DeleteFleet
        update:
          - robomaker:TagResource
          - robomaker:UntagResource
        list:
          - robomaker:ListFleets
    Robot:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Fleet:
          description: The Amazon Resource Name (ARN) of the fleet.
          type: string
          minLength: 1
          maxLength: 1224
        Architecture:
          description: The target architecture of the robot.
          type: string
          enum:
            - X86_64
            - ARM64
            - ARMHF
        GreengrassGroupId:
          description: The Greengrass group id.
          type: string
          minLength: 1
          maxLength: 1224
        Tags:
          $ref: '#/components/schemas/Tags'
        Name:
          description: The name for the robot.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - GreengrassGroupId
        - Architecture
      x-stackql-resource-name: robot
      description: AWS::RoboMaker::Robot resource creates an AWS RoboMaker Robot.
      x-type-name: AWS::RoboMaker::Robot
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - GreengrassGroupId
        - Name
        - Architecture
        - Fleet
      x-read-only-properties:
        - Arn
      x-required-properties:
        - GreengrassGroupId
        - Architecture
      x-required-permissions:
        create:
          - robomaker:CreateRobot
          - robomaker:RegisterRobot
        read:
          - robomaker:DescribeRobot
        delete:
          - robomaker:DescribeRobot
          - robomaker:DeleteRobot
          - robomaker:DeregisterRobot
        list:
          - robomaker:ListRobots
        update:
          - robomaker:TagResource
          - robomaker:UntagResource
    SourceConfig:
      type: object
      description: Information about a source configuration.
      properties:
        S3Bucket:
          type: string
          description: The Amazon S3 bucket name.
          pattern: '[a-z0-9][a-z0-9.\-]*[a-z0-9]'
        S3Key:
          type: string
          description: The s3 object key.
          minLength: 1
          maxLength: 1024
        Architecture:
          type: string
          description: The target processor architecture for the application.
          enum:
            - X86_64
            - ARM64
            - ARMHF
      required:
        - S3Bucket
        - S3Key
        - Architecture
      additionalProperties: false
    RobotSoftwareSuite:
      description: Information about a robot software suite.
      type: object
      properties:
        Name:
          type: string
          description: The name of the robot software suite.
          enum:
            - ROS
            - ROS2
            - General
        Version:
          type: string
          description: The version of the robot software suite.
          enum:
            - Kinetic
            - Melodic
            - Dashing
            - Foxy
      required:
        - Name
      additionalProperties: false
    RobotApplication:
      type: object
      properties:
        Name:
          description: The name of the robot application.
          type: string
          minLength: 1
          maxLength: 255
        Sources:
          description: The sources of the robot application.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SourceConfig'
        Environment:
          description: The URI of the Docker image for the robot application.
          type: string
        RobotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
        CurrentRevisionId:
          description: The revision ID of robot application.
          type: string
          minLength: 1
          maxLength: 40
        Arn:
          $ref: '#/components/schemas/Arn'
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - RobotSoftwareSuite
      x-stackql-resource-name: robot_application
      description: This schema is for testing purpose only.
      x-type-name: AWS::RoboMaker::RobotApplication
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - RobotSoftwareSuite/Version
        - Sources
      x-read-only-properties:
        - Arn
      x-required-properties:
        - RobotSoftwareSuite
      x-required-permissions:
        create:
          - robomaker:CreateRobotApplication
          - robomaker:TagResource
          - robomaker:UntagResource
          - ecr:BatchGetImage
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr-public:GetAuthorizationToken
          - sts:GetServiceBearerToken
        read:
          - robomaker:DescribeRobotApplication
        update:
          - robomaker:TagResource
          - robomaker:UntagResource
          - robomaker:UpdateRobotApplication
          - ecr:BatchGetImage
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr-public:GetAuthorizationToken
        delete:
          - robomaker:DescribeRobotApplication
          - robomaker:DeleteRobotApplication
        list:
          - robomaker:ListRobotApplications
    RobotApplicationVersion:
      type: object
      properties:
        Application:
          $ref: '#/components/schemas/Arn'
        CurrentRevisionId:
          description: The revision ID of robot application.
          type: string
          minLength: 1
          maxLength: 40
          pattern: '[a-zA-Z0-9_.\-]*'
        ApplicationVersion:
          type: string
        Arn:
          $ref: '#/components/schemas/Arn'
      required:
        - Application
      x-stackql-resource-name: robot_application_version
      description: AWS::RoboMaker::RobotApplicationVersion resource creates an AWS RoboMaker RobotApplicationVersion. This helps you control which code your robot uses.
      x-type-name: AWS::RoboMaker::RobotApplicationVersion
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Application
        - CurrentRevisionId
      x-read-only-properties:
        - ApplicationVersion
        - Arn
      x-required-properties:
        - Application
      x-required-permissions:
        create:
          - robomaker:CreateRobotApplicationVersion
          - s3:GetObject
          - ecr:BatchGetImage
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr-public:GetAuthorizationToken
          - sts:GetServiceBearerToken
        delete:
          - robomaker:DeleteRobotApplication
          - robomaker:DescribeRobotApplication
        read:
          - robomaker:DescribeRobotApplication
    RenderingEngine:
      description: Information about a rendering engine.
      type: object
      properties:
        Name:
          type: string
          description: The name of the rendering engine.
          enum:
            - OGRE
        Version:
          type: string
          description: The version of the rendering engine.
          pattern: 1.x
      required:
        - Name
        - Version
      additionalProperties: false
    SimulationSoftwareSuite:
      description: Information about a simulation software suite.
      type: object
      properties:
        Name:
          type: string
          description: The name of the simulation software suite.
          enum:
            - Gazebo
            - RosbagPlay
            - SimulationRuntime
        Version:
          type: string
          description: The version of the simulation software suite.
          enum:
            - '7'
            - '9'
            - '11'
            - Kinetic
            - Melodic
            - Dashing
            - Foxy
      required:
        - Name
      additionalProperties: false
    SimulationApplication:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Name:
          description: The name of the simulation application.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z0-9_\-]*'
        CurrentRevisionId:
          description: The current revision id.
          type: string
        RenderingEngine:
          description: The rendering engine for the simulation application.
          $ref: '#/components/schemas/RenderingEngine'
        RobotSoftwareSuite:
          description: The robot software suite used by the simulation application.
          $ref: '#/components/schemas/RobotSoftwareSuite'
        SimulationSoftwareSuite:
          description: The simulation software suite used by the simulation application.
          $ref: '#/components/schemas/SimulationSoftwareSuite'
        Sources:
          description: The sources of the simulation application.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SourceConfig'
        Environment:
          description: The URI of the Docker image for the robot application.
          type: string
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - RobotSoftwareSuite
        - SimulationSoftwareSuite
      x-stackql-resource-name: simulation_application
      description: This schema is for testing purpose only.
      x-type-name: AWS::RoboMaker::SimulationApplication
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - RenderingEngine
        - RobotSoftwareSuite/Version
        - Sources
        - SimulationSoftwareSuite/Version
      x-read-only-properties:
        - Arn
      x-required-properties:
        - RobotSoftwareSuite
        - SimulationSoftwareSuite
      x-required-permissions:
        create:
          - robomaker:CreateSimulationApplication
          - robomaker:TagResource
          - robomaker:UntagResource
          - ecr:BatchGetImage
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr-public:GetAuthorizationToken
          - sts:GetServiceBearerToken
        read:
          - robomaker:DescribeSimulationApplication
        update:
          - robomaker:TagResource
          - robomaker:UntagResource
          - robomaker:UpdateSimulationApplication
          - ecr:BatchGetImage
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr-public:GetAuthorizationToken
        delete:
          - robomaker:DescribeSimulationApplication
          - robomaker:DeleteSimulationApplication
        list:
          - robomaker:ListSimulationApplications
    SimulationApplicationVersion:
      type: object
      properties:
        Application:
          $ref: '#/components/schemas/Arn'
        CurrentRevisionId:
          description: The revision ID of robot application.
          type: string
          minLength: 1
          maxLength: 40
          pattern: '[a-zA-Z0-9_.\-]*'
        ApplicationVersion:
          type: string
        Arn:
          $ref: '#/components/schemas/Arn'
      required:
        - Application
      x-stackql-resource-name: simulation_application_version
      description: AWS::RoboMaker::SimulationApplicationVersion resource creates an AWS RoboMaker SimulationApplicationVersion. This helps you control which code your simulation uses.
      x-type-name: AWS::RoboMaker::SimulationApplicationVersion
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Application
        - CurrentRevisionId
      x-read-only-properties:
        - ApplicationVersion
        - Arn
      x-required-properties:
        - Application
      x-required-permissions:
        create:
          - robomaker:CreateSimulationApplicationVersion
          - s3:GetObject
          - ecr:BatchGetImage
          - ecr:GetAuthorizationToken
          - ecr:BatchCheckLayerAvailability
          - ecr-public:GetAuthorizationToken
          - sts:GetServiceBearerToken
        delete:
          - robomaker:DeleteSimulationApplication
          - robomaker:DescribeSimulationApplication
        read:
          - robomaker:DescribeSimulationApplication
    CreateFleetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              $ref: '#/components/schemas/Arn'
            Tags:
              $ref: '#/components/schemas/Tags'
            Name:
              description: The name of the fleet.
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[a-zA-Z0-9_\-]{1,255}$'
          x-stackQL-stringOnly: true
      x-title: CreateFleetRequest
      type: object
      required: []
    CreateRobotRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              $ref: '#/components/schemas/Arn'
            Fleet:
              description: The Amazon Resource Name (ARN) of the fleet.
              type: string
              minLength: 1
              maxLength: 1224
            Architecture:
              description: The target architecture of the robot.
              type: string
              enum:
                - X86_64
                - ARM64
                - ARMHF
            GreengrassGroupId:
              description: The Greengrass group id.
              type: string
              minLength: 1
              maxLength: 1224
            Tags:
              $ref: '#/components/schemas/Tags'
            Name:
              description: The name for the robot.
              type: string
              minLength: 1
              maxLength: 255
          x-stackQL-stringOnly: true
      x-title: CreateRobotRequest
      type: object
      required: []
    CreateRobotApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the robot application.
              type: string
              minLength: 1
              maxLength: 255
            Sources:
              description: The sources of the robot application.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/SourceConfig'
            Environment:
              description: The URI of the Docker image for the robot application.
              type: string
            RobotSoftwareSuite:
              $ref: '#/components/schemas/RobotSoftwareSuite'
            CurrentRevisionId:
              description: The revision ID of robot application.
              type: string
              minLength: 1
              maxLength: 40
            Arn:
              $ref: '#/components/schemas/Arn'
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateRobotApplicationRequest
      type: object
      required: []
    CreateRobotApplicationVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Application:
              $ref: '#/components/schemas/Arn'
            CurrentRevisionId:
              description: The revision ID of robot application.
              type: string
              minLength: 1
              maxLength: 40
              pattern: '[a-zA-Z0-9_.\-]*'
            ApplicationVersion:
              type: string
            Arn:
              $ref: '#/components/schemas/Arn'
          x-stackQL-stringOnly: true
      x-title: CreateRobotApplicationVersionRequest
      type: object
      required: []
    CreateSimulationApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              $ref: '#/components/schemas/Arn'
            Name:
              description: The name of the simulation application.
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[a-zA-Z0-9_\-]*'
            CurrentRevisionId:
              description: The current revision id.
              type: string
            RenderingEngine:
              description: The rendering engine for the simulation application.
              $ref: '#/components/schemas/RenderingEngine'
            RobotSoftwareSuite:
              description: The robot software suite used by the simulation application.
              $ref: '#/components/schemas/RobotSoftwareSuite'
            SimulationSoftwareSuite:
              description: The simulation software suite used by the simulation application.
              $ref: '#/components/schemas/SimulationSoftwareSuite'
            Sources:
              description: The sources of the simulation application.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/SourceConfig'
            Environment:
              description: The URI of the Docker image for the robot application.
              type: string
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateSimulationApplicationRequest
      type: object
      required: []
    CreateSimulationApplicationVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Application:
              $ref: '#/components/schemas/Arn'
            CurrentRevisionId:
              description: The revision ID of robot application.
              type: string
              minLength: 1
              maxLength: 40
              pattern: '[a-zA-Z0-9_.\-]*'
            ApplicationVersion:
              type: string
            Arn:
              $ref: '#/components/schemas/Arn'
          x-stackQL-stringOnly: true
      x-title: CreateSimulationApplicationVersionRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    fleets:
      name: fleets
      id: aws.robomaker.fleets
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::RoboMaker::Fleet
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::Fleet'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::RoboMaker::Fleet'
                AND detail.data__TypeName = 'AWS::RoboMaker::Fleet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Name') as name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::Fleet'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Name') as name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::RoboMaker::Fleet'
                    AND detail.data__TypeName = 'AWS::RoboMaker::Fleet'
                    AND listing.region = 'us-east-1'
    fleets_list_only:
      name: fleets_list_only
      id: aws.robomaker.fleets_list_only
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::RoboMaker::Fleet
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::Fleet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::Fleet'
                AND region = 'us-east-1'
    fleet_tags:
      name: fleet_tags
      id: aws.robomaker.fleet_tags
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::RoboMaker::Fleet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::RoboMaker::Fleet'
              AND detail.data__TypeName = 'AWS::RoboMaker::Fleet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::RoboMaker::Fleet'
                AND detail.data__TypeName = 'AWS::RoboMaker::Fleet'
                AND listing.region = 'us-east-1'
    robots:
      name: robots
      id: aws.robomaker.robots
      x-cfn-schema-name: Robot
      x-cfn-type-name: AWS::RoboMaker::Robot
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Robot&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::Robot"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::Robot"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::Robot"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/robots/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/robots/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/robots/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Fleet') as fleet,
              JSON_EXTRACT(Properties, '$.Architecture') as architecture,
              JSON_EXTRACT(Properties, '$.GreengrassGroupId') as greengrass_group_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::Robot'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Fleet') as fleet,
                JSON_EXTRACT(detail.Properties, '$.Architecture') as architecture,
                JSON_EXTRACT(detail.Properties, '$.GreengrassGroupId') as greengrass_group_id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::RoboMaker::Robot'
                AND detail.data__TypeName = 'AWS::RoboMaker::Robot'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Fleet') as fleet,
                  json_extract_path_text(Properties, 'Architecture') as architecture,
                  json_extract_path_text(Properties, 'GreengrassGroupId') as greengrass_group_id,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Name') as name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::Robot'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Fleet') as fleet,
                    json_extract_path_text(detail.Properties, 'Architecture') as architecture,
                    json_extract_path_text(detail.Properties, 'GreengrassGroupId') as greengrass_group_id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Name') as name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::RoboMaker::Robot'
                    AND detail.data__TypeName = 'AWS::RoboMaker::Robot'
                    AND listing.region = 'us-east-1'
    robots_list_only:
      name: robots_list_only
      id: aws.robomaker.robots_list_only
      x-cfn-schema-name: Robot
      x-cfn-type-name: AWS::RoboMaker::Robot
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::Robot'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::Robot'
                AND region = 'us-east-1'
    robot_tags:
      name: robot_tags
      id: aws.robomaker.robot_tags
      x-cfn-schema-name: Robot
      x-cfn-type-name: AWS::RoboMaker::Robot
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Fleet') as fleet,
              JSON_EXTRACT(detail.Properties, '$.Architecture') as architecture,
              JSON_EXTRACT(detail.Properties, '$.GreengrassGroupId') as greengrass_group_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::RoboMaker::Robot'
              AND detail.data__TypeName = 'AWS::RoboMaker::Robot'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Fleet') as fleet,
                json_extract_path_text(detail.Properties, 'Architecture') as architecture,
                json_extract_path_text(detail.Properties, 'GreengrassGroupId') as greengrass_group_id,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::RoboMaker::Robot'
                AND detail.data__TypeName = 'AWS::RoboMaker::Robot'
                AND listing.region = 'us-east-1'
    robot_applications:
      name: robot_applications
      id: aws.robomaker.robot_applications
      x-cfn-schema-name: RobotApplication
      x-cfn-type-name: AWS::RoboMaker::RobotApplication
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RobotApplication&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::RobotApplication"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::RobotApplication"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::RobotApplication"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/robot_applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/robot_applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/robot_applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Environment') as environment,
              JSON_EXTRACT(Properties, '$.RobotSoftwareSuite') as robot_software_suite,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::RobotApplication'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Sources') as sources,
                JSON_EXTRACT(detail.Properties, '$.Environment') as environment,
                JSON_EXTRACT(detail.Properties, '$.RobotSoftwareSuite') as robot_software_suite,
                JSON_EXTRACT(detail.Properties, '$.CurrentRevisionId') as current_revision_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::RoboMaker::RobotApplication'
                AND detail.data__TypeName = 'AWS::RoboMaker::RobotApplication'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Sources') as sources,
                  json_extract_path_text(Properties, 'Environment') as environment,
                  json_extract_path_text(Properties, 'RobotSoftwareSuite') as robot_software_suite,
                  json_extract_path_text(Properties, 'CurrentRevisionId') as current_revision_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::RobotApplication'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Sources') as sources,
                    json_extract_path_text(detail.Properties, 'Environment') as environment,
                    json_extract_path_text(detail.Properties, 'RobotSoftwareSuite') as robot_software_suite,
                    json_extract_path_text(detail.Properties, 'CurrentRevisionId') as current_revision_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::RoboMaker::RobotApplication'
                    AND detail.data__TypeName = 'AWS::RoboMaker::RobotApplication'
                    AND listing.region = 'us-east-1'
    robot_applications_list_only:
      name: robot_applications_list_only
      id: aws.robomaker.robot_applications_list_only
      x-cfn-schema-name: RobotApplication
      x-cfn-type-name: AWS::RoboMaker::RobotApplication
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::RobotApplication'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::RobotApplication'
                AND region = 'us-east-1'
    robot_application_tags:
      name: robot_application_tags
      id: aws.robomaker.robot_application_tags
      x-cfn-schema-name: RobotApplication
      x-cfn-type-name: AWS::RoboMaker::RobotApplication
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Sources') as sources,
              JSON_EXTRACT(detail.Properties, '$.Environment') as environment,
              JSON_EXTRACT(detail.Properties, '$.RobotSoftwareSuite') as robot_software_suite,
              JSON_EXTRACT(detail.Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::RoboMaker::RobotApplication'
              AND detail.data__TypeName = 'AWS::RoboMaker::RobotApplication'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Sources') as sources,
                json_extract_path_text(detail.Properties, 'Environment') as environment,
                json_extract_path_text(detail.Properties, 'RobotSoftwareSuite') as robot_software_suite,
                json_extract_path_text(detail.Properties, 'CurrentRevisionId') as current_revision_id,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::RoboMaker::RobotApplication'
                AND detail.data__TypeName = 'AWS::RoboMaker::RobotApplication'
                AND listing.region = 'us-east-1'
    robot_application_versions:
      name: robot_application_versions
      id: aws.robomaker.robot_application_versions
      x-cfn-schema-name: RobotApplicationVersion
      x-cfn-type-name: AWS::RoboMaker::RobotApplicationVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RobotApplicationVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::RobotApplicationVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::RobotApplicationVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/robot_application_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/robot_application_versions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Application') as application,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(Properties, '$.ApplicationVersion') as application_version,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::RobotApplicationVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Application') as application,
                json_extract_path_text(Properties, 'CurrentRevisionId') as current_revision_id,
                json_extract_path_text(Properties, 'ApplicationVersion') as application_version,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::RobotApplicationVersion'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    simulation_applications:
      name: simulation_applications
      id: aws.robomaker.simulation_applications
      x-cfn-schema-name: SimulationApplication
      x-cfn-type-name: AWS::RoboMaker::SimulationApplication
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SimulationApplication&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::SimulationApplication"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::SimulationApplication"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::SimulationApplication"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/simulation_applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/simulation_applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/simulation_applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(Properties, '$.RenderingEngine') as rendering_engine,
              JSON_EXTRACT(Properties, '$.RobotSoftwareSuite') as robot_software_suite,
              JSON_EXTRACT(Properties, '$.SimulationSoftwareSuite') as simulation_software_suite,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Environment') as environment,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplication'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.CurrentRevisionId') as current_revision_id,
                JSON_EXTRACT(detail.Properties, '$.RenderingEngine') as rendering_engine,
                JSON_EXTRACT(detail.Properties, '$.RobotSoftwareSuite') as robot_software_suite,
                JSON_EXTRACT(detail.Properties, '$.SimulationSoftwareSuite') as simulation_software_suite,
                JSON_EXTRACT(detail.Properties, '$.Sources') as sources,
                JSON_EXTRACT(detail.Properties, '$.Environment') as environment,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                AND detail.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'CurrentRevisionId') as current_revision_id,
                  json_extract_path_text(Properties, 'RenderingEngine') as rendering_engine,
                  json_extract_path_text(Properties, 'RobotSoftwareSuite') as robot_software_suite,
                  json_extract_path_text(Properties, 'SimulationSoftwareSuite') as simulation_software_suite,
                  json_extract_path_text(Properties, 'Sources') as sources,
                  json_extract_path_text(Properties, 'Environment') as environment,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'CurrentRevisionId') as current_revision_id,
                    json_extract_path_text(detail.Properties, 'RenderingEngine') as rendering_engine,
                    json_extract_path_text(detail.Properties, 'RobotSoftwareSuite') as robot_software_suite,
                    json_extract_path_text(detail.Properties, 'SimulationSoftwareSuite') as simulation_software_suite,
                    json_extract_path_text(detail.Properties, 'Sources') as sources,
                    json_extract_path_text(detail.Properties, 'Environment') as environment,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                    AND detail.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                    AND listing.region = 'us-east-1'
    simulation_applications_list_only:
      name: simulation_applications_list_only
      id: aws.robomaker.simulation_applications_list_only
      x-cfn-schema-name: SimulationApplication
      x-cfn-type-name: AWS::RoboMaker::SimulationApplication
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplication'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                AND region = 'us-east-1'
    simulation_application_tags:
      name: simulation_application_tags
      id: aws.robomaker.simulation_application_tags
      x-cfn-schema-name: SimulationApplication
      x-cfn-type-name: AWS::RoboMaker::SimulationApplication
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(detail.Properties, '$.RenderingEngine') as rendering_engine,
              JSON_EXTRACT(detail.Properties, '$.RobotSoftwareSuite') as robot_software_suite,
              JSON_EXTRACT(detail.Properties, '$.SimulationSoftwareSuite') as simulation_software_suite,
              JSON_EXTRACT(detail.Properties, '$.Sources') as sources,
              JSON_EXTRACT(detail.Properties, '$.Environment') as environment
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
              AND detail.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'CurrentRevisionId') as current_revision_id,
                json_extract_path_text(detail.Properties, 'RenderingEngine') as rendering_engine,
                json_extract_path_text(detail.Properties, 'RobotSoftwareSuite') as robot_software_suite,
                json_extract_path_text(detail.Properties, 'SimulationSoftwareSuite') as simulation_software_suite,
                json_extract_path_text(detail.Properties, 'Sources') as sources,
                json_extract_path_text(detail.Properties, 'Environment') as environment
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                AND detail.data__TypeName = 'AWS::RoboMaker::SimulationApplication'
                AND listing.region = 'us-east-1'
    simulation_application_versions:
      name: simulation_application_versions
      id: aws.robomaker.simulation_application_versions
      x-cfn-schema-name: SimulationApplicationVersion
      x-cfn-type-name: AWS::RoboMaker::SimulationApplicationVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SimulationApplicationVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::SimulationApplicationVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RoboMaker::SimulationApplicationVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/simulation_application_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/simulation_application_versions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Application') as application,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(Properties, '$.ApplicationVersion') as application_version,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplicationVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Application') as application,
                json_extract_path_text(Properties, 'CurrentRevisionId') as current_revision_id,
                json_extract_path_text(Properties, 'ApplicationVersion') as application_version,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplicationVersion'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFleet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFleetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Robot&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRobot
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRobotRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RobotApplication&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRobotApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRobotApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RobotApplicationVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRobotApplicationVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRobotApplicationVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SimulationApplication&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSimulationApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSimulationApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SimulationApplicationVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSimulationApplicationVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSimulationApplicationVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
