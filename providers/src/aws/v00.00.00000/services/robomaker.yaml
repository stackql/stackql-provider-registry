openapi: 3.0.0
info:
  title: RoboMaker
  version: 1.0.0
paths: {}
components:
  schemas:
    Arn:
      type: string
      pattern: arn:[\w+=/,.@-]+:[\w+=/,.@-]+:[\w+=/,.@-]*:[0-9]*:[\w+=,.@-]+(/[\w+=,.@-]+)*
    Tags:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      x-patternProperties:
        ^[a-zA-Z0-9-]{1,128}$:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 256
    Fleet:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Tags:
          $ref: '#/components/schemas/Tags'
        Name:
          description: The name of the fleet.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z0-9_\-]{1,255}$'
      required: []
      x-stackql-resource-name: fleet
      x-stackql-primaryIdentifier:
        - Arn
    Robot:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Fleet:
          description: The Amazon Resource Name (ARN) of the fleet.
          type: string
          minLength: 1
          maxLength: 1224
        Architecture:
          description: The target architecture of the robot.
          type: string
          enum:
            - X86_64
            - ARM64
            - ARMHF
        GreengrassGroupId:
          description: The Greengrass group id.
          type: string
          minLength: 1
          maxLength: 1224
        Tags:
          $ref: '#/components/schemas/Tags'
        Name:
          description: The name for the robot.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - GreengrassGroupId
        - Architecture
      x-stackql-resource-name: robot
      x-stackql-primaryIdentifier:
        - Arn
    SourceConfig:
      type: object
      description: Information about a source configuration.
      properties:
        S3Bucket:
          type: string
          description: The Amazon S3 bucket name.
          pattern: '[a-z0-9][a-z0-9.\-]*[a-z0-9]'
        S3Key:
          type: string
          description: The s3 object key.
          minLength: 1
          maxLength: 1024
        Architecture:
          type: string
          description: The target processor architecture for the application.
          enum:
            - X86_64
            - ARM64
            - ARMHF
      required:
        - S3Bucket
        - S3Key
        - Architecture
      additionalProperties: false
    RobotSoftwareSuite:
      description: Information about a robot software suite.
      type: object
      properties:
        Name:
          type: string
          description: The name of the robot software suite.
          enum:
            - ROS
            - ROS2
            - General
        Version:
          type: string
          description: The version of the robot software suite.
          enum:
            - Kinetic
            - Melodic
            - Dashing
            - Foxy
      required:
        - Name
      additionalProperties: false
    RobotApplication:
      type: object
      properties:
        Name:
          description: The name of the robot application.
          type: string
          minLength: 1
          maxLength: 255
        Sources:
          description: The sources of the robot application.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SourceConfig'
        Environment:
          description: The URI of the Docker image for the robot application.
          type: string
        RobotSoftwareSuite:
          $ref: '#/components/schemas/RobotSoftwareSuite'
        CurrentRevisionId:
          description: The revision ID of robot application.
          type: string
          minLength: 1
          maxLength: 40
        Arn:
          $ref: '#/components/schemas/Arn'
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - RobotSoftwareSuite
      x-stackql-resource-name: robot_application
      x-stackql-primaryIdentifier:
        - Arn
    RobotApplicationVersion:
      type: object
      properties:
        Application:
          $ref: '#/components/schemas/Arn'
        CurrentRevisionId:
          description: The revision ID of robot application.
          type: string
          minLength: 1
          maxLength: 40
          pattern: '[a-zA-Z0-9_.\-]*'
        ApplicationVersion:
          type: string
        Arn:
          $ref: '#/components/schemas/Arn'
      required:
        - Application
      x-stackql-resource-name: robot_application_version
      x-stackql-primaryIdentifier:
        - Arn
    RenderingEngine:
      description: Information about a rendering engine.
      type: object
      properties:
        Name:
          type: string
          description: The name of the rendering engine.
          enum:
            - OGRE
        Version:
          type: string
          description: The version of the rendering engine.
          pattern: 1.x
      required:
        - Name
        - Version
      additionalProperties: false
    SimulationSoftwareSuite:
      description: Information about a simulation software suite.
      type: object
      properties:
        Name:
          type: string
          description: The name of the simulation software suite.
          enum:
            - Gazebo
            - RosbagPlay
            - SimulationRuntime
        Version:
          type: string
          description: The version of the simulation software suite.
          enum:
            - '7'
            - '9'
            - '11'
            - Kinetic
            - Melodic
            - Dashing
            - Foxy
      required:
        - Name
      additionalProperties: false
    SimulationApplication:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        Name:
          description: The name of the simulation application.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z0-9_\-]*'
        CurrentRevisionId:
          description: The current revision id.
          type: string
        RenderingEngine:
          description: The rendering engine for the simulation application.
          $ref: '#/components/schemas/RenderingEngine'
        RobotSoftwareSuite:
          description: The robot software suite used by the simulation application.
          $ref: '#/components/schemas/RobotSoftwareSuite'
        SimulationSoftwareSuite:
          description: The simulation software suite used by the simulation application.
          $ref: '#/components/schemas/SimulationSoftwareSuite'
        Sources:
          description: The sources of the simulation application.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SourceConfig'
        Environment:
          description: The URI of the Docker image for the robot application.
          type: string
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - RobotSoftwareSuite
        - SimulationSoftwareSuite
      x-stackql-resource-name: simulation_application
      x-stackql-primaryIdentifier:
        - Arn
    SimulationApplicationVersion:
      type: object
      properties:
        Application:
          $ref: '#/components/schemas/Arn'
        CurrentRevisionId:
          description: The revision ID of robot application.
          type: string
          minLength: 1
          maxLength: 40
          pattern: '[a-zA-Z0-9_.\-]*'
        ApplicationVersion:
          type: string
        Arn:
          $ref: '#/components/schemas/Arn'
      required:
        - Application
      x-stackql-resource-name: simulation_application_version
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    fleets:
      name: fleets
      id: aws.robomaker.fleets
      x-cfn-schema-name: Fleet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::Fleet'
    fleet:
      name: fleet
      id: aws.robomaker.fleet
      x-cfn-schema-name: Fleet
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::Fleet'
    robots:
      name: robots
      id: aws.robomaker.robots
      x-cfn-schema-name: Robot
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::Robot'
    robot:
      name: robot
      id: aws.robomaker.robot
      x-cfn-schema-name: Robot
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Fleet') as fleet,
              JSON_EXTRACT(Properties, '$.Architecture') as architecture,
              JSON_EXTRACT(Properties, '$.GreengrassGroupId') as greengrass_group_id,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::Robot'
    robot_applications:
      name: robot_applications
      id: aws.robomaker.robot_applications
      x-cfn-schema-name: RobotApplication
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::RobotApplication'
    robot_application:
      name: robot_application
      id: aws.robomaker.robot_application
      x-cfn-schema-name: RobotApplication
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Environment') as environment,
              JSON_EXTRACT(Properties, '$.RobotSoftwareSuite.Name') as robot_software_suite_name,
              JSON_EXTRACT(Properties, '$.RobotSoftwareSuite.Version') as robot_software_suite_version,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::RobotApplication'
    robot_application_versions:
      name: robot_application_versions
      id: aws.robomaker.robot_application_versions
      x-cfn-schema-name: RobotApplicationVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::RobotApplicationVersion'
    robot_application_version:
      name: robot_application_version
      id: aws.robomaker.robot_application_version
      x-cfn-schema-name: RobotApplicationVersion
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(Properties, '$.ApplicationVersion') as application_version
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::RobotApplicationVersion'
    simulation_applications:
      name: simulation_applications
      id: aws.robomaker.simulation_applications
      x-cfn-schema-name: SimulationApplication
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplication'
    simulation_application:
      name: simulation_application
      id: aws.robomaker.simulation_application
      x-cfn-schema-name: SimulationApplication
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(Properties, '$.RenderingEngine.Name') as rendering_engine_name,
              JSON_EXTRACT(Properties, '$.RenderingEngine.Version') as rendering_engine_version,
              JSON_EXTRACT(Properties, '$.RobotSoftwareSuite.Name') as robot_software_suite_name,
              JSON_EXTRACT(Properties, '$.RobotSoftwareSuite.Version') as robot_software_suite_version,
              JSON_EXTRACT(Properties, '$.SimulationSoftwareSuite.Name') as simulation_software_suite_name,
              JSON_EXTRACT(Properties, '$.SimulationSoftwareSuite.Version') as simulation_software_suite_version,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.Environment') as environment
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplication'
    simulation_application_versions:
      name: simulation_application_versions
      id: aws.robomaker.simulation_application_versions
      x-cfn-schema-name: SimulationApplicationVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplicationVersion'
    simulation_application_version:
      name: simulation_application_version
      id: aws.robomaker.simulation_application_version
      x-cfn-schema-name: SimulationApplicationVersion
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CurrentRevisionId') as current_revision_id,
              JSON_EXTRACT(Properties, '$.ApplicationVersion') as application_version
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RoboMaker::SimulationApplicationVersion'
