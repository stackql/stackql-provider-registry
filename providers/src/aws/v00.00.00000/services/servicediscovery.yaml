openapi: 3.0.0
info:
  title: ServiceDiscovery
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    HttpNamespace:
      type: object
      properties:
        Id:
          type: string
        Description:
          type: string
        Arn:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: http_namespace
      x-stackql-primaryIdentifier:
        - Id
    Instance:
      type: object
      properties:
        InstanceAttributes:
          type: object
        InstanceId:
          type: string
        ServiceId:
          type: string
      required:
        - InstanceAttributes
        - ServiceId
      x-stackql-resource-name: instance
      x-stackql-primaryIdentifier:
        - InstanceId
    PrivateDnsPropertiesMutable:
      type: object
      additionalProperties: false
      properties:
        SOA:
          $ref: '#/components/schemas/SOA'
    SOA:
      type: object
      additionalProperties: false
      properties:
        TTL:
          type: number
    Properties:
      type: object
      additionalProperties: false
      properties:
        DnsProperties:
          $ref: '#/components/schemas/PublicDnsPropertiesMutable'
    PrivateDnsNamespace:
      type: object
      properties:
        Description:
          type: string
        HostedZoneId:
          type: string
        Vpc:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Properties:
          $ref: '#/components/schemas/Properties'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      required:
        - Vpc
        - Name
      x-stackql-resource-name: private_dns_namespace
      x-stackql-primaryIdentifier:
        - Id
    PublicDnsPropertiesMutable:
      type: object
      additionalProperties: false
      properties:
        SOA:
          $ref: '#/components/schemas/SOA'
    PublicDnsNamespace:
      type: object
      properties:
        Description:
          type: string
        HostedZoneId:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Properties:
          $ref: '#/components/schemas/Properties'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: public_dns_namespace
      x-stackql-primaryIdentifier:
        - Id
    HealthCheckCustomConfig:
      type: object
      additionalProperties: false
      properties:
        FailureThreshold:
          type: number
    DnsConfig:
      type: object
      additionalProperties: false
      properties:
        DnsRecords:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/DnsRecord'
        RoutingPolicy:
          type: string
        NamespaceId:
          type: string
      required:
        - DnsRecords
    HealthCheckConfig:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        ResourcePath:
          type: string
        FailureThreshold:
          type: number
      required:
        - Type
    DnsRecord:
      type: object
      additionalProperties: false
      properties:
        TTL:
          type: number
        Type:
          type: string
      required:
        - Type
        - TTL
    Service:
      type: object
      properties:
        Type:
          type: string
        Description:
          type: string
        HealthCheckCustomConfig:
          $ref: '#/components/schemas/HealthCheckCustomConfig'
        DnsConfig:
          $ref: '#/components/schemas/DnsConfig'
        Id:
          type: string
        NamespaceId:
          type: string
        HealthCheckConfig:
          $ref: '#/components/schemas/HealthCheckConfig'
        Arn:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      x-stackql-resource-name: service
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    http_namespaces:
      name: http_namespaces
      id: aws.servicediscovery.http_namespaces
      x-cfn-schema-name: HttpNamespace
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceDiscovery::HttpNamespace'
    http_namespace:
      name: http_namespace
      id: aws.servicediscovery.http_namespace
      x-cfn-schema-name: HttpNamespace
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceDiscovery::HttpNamespace'
    instances:
      name: instances
      id: aws.servicediscovery.instances
      x-cfn-schema-name: Instance
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceDiscovery::Instance'
    instance:
      name: instance
      id: aws.servicediscovery.instance
      x-cfn-schema-name: Instance
      x-type: get
      x-identifiers:
        - InstanceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceAttributes') as instance_attributes,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.ServiceId') as service_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceDiscovery::Instance'
    private_dns_namespaces:
      name: private_dns_namespaces
      id: aws.servicediscovery.private_dns_namespaces
      x-cfn-schema-name: PrivateDnsNamespace
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceDiscovery::PrivateDnsNamespace'
    private_dns_namespace:
      name: private_dns_namespace
      id: aws.servicediscovery.private_dns_namespace
      x-cfn-schema-name: PrivateDnsNamespace
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.HostedZoneId') as hosted_zone_id,
              JSON_EXTRACT(Properties, '$.Vpc') as vpc,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Properties.DnsProperties') as properties_dns_properties,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceDiscovery::PrivateDnsNamespace'
    public_dns_namespaces:
      name: public_dns_namespaces
      id: aws.servicediscovery.public_dns_namespaces
      x-cfn-schema-name: PublicDnsNamespace
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceDiscovery::PublicDnsNamespace'
    public_dns_namespace:
      name: public_dns_namespace
      id: aws.servicediscovery.public_dns_namespace
      x-cfn-schema-name: PublicDnsNamespace
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.HostedZoneId') as hosted_zone_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Properties.DnsProperties') as properties_dns_properties,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceDiscovery::PublicDnsNamespace'
    services:
      name: services
      id: aws.servicediscovery.services
      x-cfn-schema-name: Service
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ServiceDiscovery::Service'
    service:
      name: service
      id: aws.servicediscovery.service
      x-cfn-schema-name: Service
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.HealthCheckCustomConfig.FailureThreshold') as health_check_custom_config_failure_threshold,
              JSON_EXTRACT(Properties, '$.DnsConfig.DnsRecords') as dns_config_dns_records,
              JSON_EXTRACT(Properties, '$.DnsConfig.RoutingPolicy') as dns_config_routing_policy,
              JSON_EXTRACT(Properties, '$.DnsConfig.NamespaceId') as dns_config_namespace_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.NamespaceId') as namespace_id,
              JSON_EXTRACT(Properties, '$.HealthCheckConfig.Type') as health_check_config_type,
              JSON_EXTRACT(Properties, '$.HealthCheckConfig.ResourcePath') as health_check_config_resource_path,
              JSON_EXTRACT(Properties, '$.HealthCheckConfig.FailureThreshold') as health_check_config_failure_threshold,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ServiceDiscovery::Service'
