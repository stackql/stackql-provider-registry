openapi: 3.0.0
info:
  title: Personalize
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    DatasetImportJob:
      description: Initial DatasetImportJob for the created dataset
      type: object
      properties:
        JobName:
          description: The name for the dataset import job.
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
          minLength: 1
          maxLength: 63
        DatasetImportJobArn:
          description: The ARN of the dataset import job
          type: string
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
          maxLength: 256
        DatasetArn:
          description: The ARN of the dataset that receives the imported data
          type: string
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
          maxLength: 256
        DataSource:
          type: object
          description: The Amazon S3 bucket that contains the training data to import.
          properties:
            DataLocation:
              description: The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored.
              type: string
              maxLength: 256
              pattern: (s3|http|https)://.+
          additionalProperties: false
        RoleArn:
          description: The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
      additionalProperties: false
    Dataset:
      type: object
      properties:
        Name:
          description: The name for the dataset
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
          minLength: 1
          maxLength: 63
        DatasetArn:
          description: The ARN of the dataset
          type: string
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
          maxLength: 256
        DatasetType:
          description: The type of dataset
          type: string
          enum:
            - Interactions
            - Items
            - Users
          maxLength: 256
        DatasetGroupArn:
          description: The Amazon Resource Name (ARN) of the dataset group to add the dataset to
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
        SchemaArn:
          description: The ARN of the schema to associate with the dataset. The schema defines the dataset fields.
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
        DatasetImportJob:
          $ref: '#/components/schemas/DatasetImportJob'
      required:
        - Name
        - DatasetType
        - DatasetGroupArn
        - SchemaArn
      x-stackql-resource-name: dataset
      description: Resource schema for AWS::Personalize::Dataset.
      x-type-name: AWS::Personalize::Dataset
      x-stackql-primary-identifier:
        - DatasetArn
      x-create-only-properties:
        - Name
        - DatasetType
        - DatasetGroupArn
        - SchemaArn
      x-read-only-properties:
        - DatasetArn
      x-required-properties:
        - Name
        - DatasetType
        - DatasetGroupArn
        - SchemaArn
      x-replacement-strategy: delete_then_create
      x-required-permissions:
        create:
          - personalize:CreateDataset
          - personalize:DescribeDataset
          - personalize:CreateDatasetImportJob
          - personalize:DescribeDatasetImportJob
          - iam:PassRole
        read:
          - personalize:DescribeDataset
        update:
          - personalize:DescribeDataset
          - personalize:CreateDatasetImportJob
          - personalize:DescribeDatasetImportJob
          - iam:PassRole
        delete:
          - personalize:DeleteDataset
          - personalize:DescribeDataset
        list:
          - personalize:ListDatasets
    DatasetGroup:
      type: object
      properties:
        DatasetGroupArn:
          description: The Amazon Resource Name (ARN) of the dataset group.
          type: string
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
          maxLength: 256
        Name:
          description: The name for the new dataset group.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        KmsKeyArn:
          description: The Amazon Resource Name(ARN) of a AWS Key Management Service (KMS) key used to encrypt the datasets.
          type: string
          maxLength: 2048
          pattern: arn:aws.*:kms:.*:[0-9]{12}:key/.*
        RoleArn:
          description: The ARN of the AWS Identity and Access Management (IAM) role that has permissions to access the AWS Key Management Service (KMS) key. Supplying an IAM role is only valid when also specifying a KMS key.
          type: string
          pattern: arn:([a-z\d-]+):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
          minLength: 0
          maxLength: 256
        Domain:
          description: The domain of a Domain dataset group.
          type: string
          enum:
            - ECOMMERCE
            - VIDEO_ON_DEMAND
      required:
        - Name
      x-stackql-resource-name: dataset_group
      description: Resource Schema for AWS::Personalize::DatasetGroup.
      x-type-name: AWS::Personalize::DatasetGroup
      x-stackql-primary-identifier:
        - DatasetGroupArn
      x-create-only-properties:
        - Name
        - RoleArn
        - KmsKeyArn
        - Domain
      x-read-only-properties:
        - DatasetGroupArn
      x-required-properties:
        - Name
      x-required-permissions:
        create:
          - personalize:CreateDatasetGroup
          - personalize:DescribeDatasetGroup
          - iam:PassRole
        read:
          - personalize:DescribeDatasetGroup
        delete:
          - personalize:DescribeDatasetGroup
          - personalize:DeleteDatasetGroup
        list:
          - personalize:ListDatasetGroups
    Schema:
      type: object
      properties:
        Name:
          description: Name for the schema.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        SchemaArn:
          description: Arn for the schema.
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
        Schema:
          description: A schema in Avro JSON format.
          type: string
          maxLength: 10000
        Domain:
          description: The domain of a Domain dataset group.
          type: string
          enum:
            - ECOMMERCE
            - VIDEO_ON_DEMAND
      required:
        - Name
        - Schema
      x-stackql-resource-name: schema
      description: Resource schema for AWS::Personalize::Schema.
      x-type-name: AWS::Personalize::Schema
      x-stackql-primary-identifier:
        - SchemaArn
      x-create-only-properties:
        - Name
        - Schema
        - Domain
      x-read-only-properties:
        - SchemaArn
      x-required-properties:
        - Name
        - Schema
      x-required-permissions:
        create:
          - personalize:CreateSchema
          - personalize:DescribeSchema
        read:
          - personalize:DescribeSchema
        delete:
          - personalize:DeleteSchema
          - personalize:DescribeSchema
        list:
          - personalize:ListSchemas
    SolutionArn:
      description: The ARN of the solution
      type: string
      maxLength: 256
      pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
    CategoricalHyperParameterRange:
      description: Provides the name and values of a Categorical hyperparameter.
      type: object
      properties:
        Name:
          description: The name of the hyperparameter.
          type: string
          maxLength: 256
        Values:
          description: A list of the categories for the hyperparameter.
          type: array
          items:
            type: string
            maxLength: 1000
          maxItems: 100
          x-insertionOrder: true
      additionalProperties: false
    ContinuousHyperParameterRange:
      description: Provides the name and range of a continuous hyperparameter.
      type: object
      properties:
        Name:
          description: The name of the hyperparameter.
          type: string
          maxLength: 256
        MinValue:
          description: The minimum allowable value for the hyperparameter.
          type: number
          minimum: -1000000
        MaxValue:
          description: The maximum allowable value for the hyperparameter.
          type: number
          minimum: -1000000
      additionalProperties: false
    IntegerHyperParameterRange:
      description: Provides the name and range of an integer-valued hyperparameter.
      type: object
      properties:
        Name:
          description: The name of the hyperparameter.
          type: string
          maxLength: 256
        MinValue:
          description: The minimum allowable value for the hyperparameter.
          type: integer
          minimum: -1000000
        MaxValue:
          description: The maximum allowable value for the hyperparameter.
          type: integer
          maximum: 1000000
      additionalProperties: false
    SolutionConfig:
      type: object
      description: The configuration to use with the solution. When performAutoML is set to true, Amazon Personalize only evaluates the autoMLConfig section of the solution configuration.
      properties:
        AlgorithmHyperParameters:
          description: Lists the hyperparameter names and ranges.
          type: object
          x-patternProperties:
            .{1,}:
              type: string
          maxProperties: 100
          additionalProperties: false
        AutoMLConfig:
          description: The AutoMLConfig object containing a list of recipes to search when AutoML is performed.
          type: object
          properties:
            MetricName:
              description: The metric to optimize.
              type: string
              maxLength: 256
            RecipeList:
              description: The list of candidate recipes.
              type: array
              items:
                type: string
                maxLength: 256
                pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
              x-insertionOrder: true
              maxItems: 100
          additionalProperties: false
        EventValueThreshold:
          description: Only events with a value greater than or equal to this threshold are used for training a model.
          type: string
          maxLength: 256
        FeatureTransformationParameters:
          description: Lists the feature transformation parameters.
          type: object
          x-patternProperties:
            .{1,}:
              type: string
          maxProperties: 100
          additionalProperties: false
        HpoConfig:
          description: Describes the properties for hyperparameter optimization (HPO)
          type: object
          properties:
            AlgorithmHyperParameterRanges:
              description: The hyperparameters and their allowable ranges
              type: object
              properties:
                CategoricalHyperParameterRanges:
                  description: The categorical hyperparameters and their ranges.
                  type: array
                  maxItems: 100
                  items:
                    $ref: '#/components/schemas/CategoricalHyperParameterRange'
                  x-insertionOrder: true
                ContinuousHyperParameterRanges:
                  description: The continuous hyperparameters and their ranges.
                  type: array
                  maxItems: 100
                  items:
                    $ref: '#/components/schemas/ContinuousHyperParameterRange'
                  x-insertionOrder: true
                IntegerHyperParameterRanges:
                  description: The integer hyperparameters and their ranges.
                  type: array
                  maxItems: 100
                  items:
                    $ref: '#/components/schemas/IntegerHyperParameterRange'
                  x-insertionOrder: true
              additionalProperties: false
            HpoObjective:
              description: The metric to optimize during HPO.
              type: object
              properties:
                MetricName:
                  description: The name of the metric
                  type: string
                  maxLength: 256
                Type:
                  description: The type of the metric. Valid values are Maximize and Minimize.
                  type: string
                  enum:
                    - Maximize
                    - Minimize
                MetricRegex:
                  description: A regular expression for finding the metric in the training job logs.
                  type: string
                  maxLength: 256
              additionalProperties: false
            HpoResourceConfig:
              description: Describes the resource configuration for hyperparameter optimization (HPO).
              type: object
              properties:
                MaxNumberOfTrainingJobs:
                  description: The maximum number of training jobs when you create a solution version. The maximum value for maxNumberOfTrainingJobs is 40.
                  type: string
                  maxLength: 256
                MaxParallelTrainingJobs:
                  description: The maximum number of parallel training jobs when you create a solution version. The maximum value for maxParallelTrainingJobs is 10.
                  type: string
                  maxLength: 256
              additionalProperties: false
          additionalProperties: false
      additionalProperties: false
    Solution:
      type: object
      properties:
        Name:
          description: The name for the solution
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        SolutionArn:
          $ref: '#/components/schemas/SolutionArn'
        EventType:
          description: When your have multiple event types (using an EVENT_TYPE schema field), this parameter specifies which event type (for example, 'click' or 'like') is used for training the model. If you do not provide an eventType, Amazon Personalize will use all interactions for training with equal weight regardless of type.
          type: string
          maxLength: 256
        DatasetGroupArn:
          description: The ARN of the dataset group that provides the training data.
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
        PerformAutoML:
          description: Whether to perform automated machine learning (AutoML). The default is false. For this case, you must specify recipeArn.
          type: boolean
        PerformHPO:
          description: Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is false. When performing AutoML, this parameter is always true and you should not set it to false.
          type: boolean
        RecipeArn:
          description: The ARN of the recipe to use for model training. Only specified when performAutoML is false.
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
        SolutionConfig:
          $ref: '#/components/schemas/SolutionConfig'
      required:
        - Name
        - DatasetGroupArn
      x-stackql-resource-name: solution
      description: Resource schema for AWS::Personalize::Solution.
      x-type-name: AWS::Personalize::Solution
      x-stackql-primary-identifier:
        - SolutionArn
      x-create-only-properties:
        - Name
        - EventType
        - DatasetGroupArn
        - PerformAutoML
        - PerformHPO
        - RecipeArn
        - SolutionConfig
      x-read-only-properties:
        - SolutionArn
      x-required-properties:
        - Name
        - DatasetGroupArn
      x-required-permissions:
        create:
          - personalize:CreateSolution
          - personalize:DescribeSolution
        read:
          - personalize:DescribeSolution
        delete:
          - personalize:DeleteSolution
          - personalize:DescribeSolution
        list:
          - personalize:ListSolutions
    CreateDatasetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name for the dataset
              type: string
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
              minLength: 1
              maxLength: 63
            DatasetArn:
              description: The ARN of the dataset
              type: string
              pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
              maxLength: 256
            DatasetType:
              description: The type of dataset
              type: string
              enum:
                - Interactions
                - Items
                - Users
              maxLength: 256
            DatasetGroupArn:
              description: The Amazon Resource Name (ARN) of the dataset group to add the dataset to
              type: string
              maxLength: 256
              pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
            SchemaArn:
              description: The ARN of the schema to associate with the dataset. The schema defines the dataset fields.
              type: string
              maxLength: 256
              pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
            DatasetImportJob:
              $ref: '#/components/schemas/DatasetImportJob'
          x-stackQL-stringOnly: true
      x-title: CreateDatasetRequest
      type: object
      required: []
    CreateDatasetGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DatasetGroupArn:
              description: The Amazon Resource Name (ARN) of the dataset group.
              type: string
              pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
              maxLength: 256
            Name:
              description: The name for the new dataset group.
              type: string
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
            KmsKeyArn:
              description: The Amazon Resource Name(ARN) of a AWS Key Management Service (KMS) key used to encrypt the datasets.
              type: string
              maxLength: 2048
              pattern: arn:aws.*:kms:.*:[0-9]{12}:key/.*
            RoleArn:
              description: The ARN of the AWS Identity and Access Management (IAM) role that has permissions to access the AWS Key Management Service (KMS) key. Supplying an IAM role is only valid when also specifying a KMS key.
              type: string
              pattern: arn:([a-z\d-]+):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+
              minLength: 0
              maxLength: 256
            Domain:
              description: The domain of a Domain dataset group.
              type: string
              enum:
                - ECOMMERCE
                - VIDEO_ON_DEMAND
          x-stackQL-stringOnly: true
      x-title: CreateDatasetGroupRequest
      type: object
      required: []
    CreateSchemaRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Name for the schema.
              type: string
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
            SchemaArn:
              description: Arn for the schema.
              type: string
              maxLength: 256
              pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
            Schema:
              description: A schema in Avro JSON format.
              type: string
              maxLength: 10000
            Domain:
              description: The domain of a Domain dataset group.
              type: string
              enum:
                - ECOMMERCE
                - VIDEO_ON_DEMAND
          x-stackQL-stringOnly: true
      x-title: CreateSchemaRequest
      type: object
      required: []
    CreateSolutionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name for the solution
              type: string
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
            SolutionArn:
              $ref: '#/components/schemas/SolutionArn'
            EventType:
              description: When your have multiple event types (using an EVENT_TYPE schema field), this parameter specifies which event type (for example, 'click' or 'like') is used for training the model. If you do not provide an eventType, Amazon Personalize will use all interactions for training with equal weight regardless of type.
              type: string
              maxLength: 256
            DatasetGroupArn:
              description: The ARN of the dataset group that provides the training data.
              type: string
              maxLength: 256
              pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
            PerformAutoML:
              description: Whether to perform automated machine learning (AutoML). The default is false. For this case, you must specify recipeArn.
              type: boolean
            PerformHPO:
              description: Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is false. When performing AutoML, this parameter is always true and you should not set it to false.
              type: boolean
            RecipeArn:
              description: The ARN of the recipe to use for model training. Only specified when performAutoML is false.
              type: string
              maxLength: 256
              pattern: arn:([a-z\d-]+):personalize:.*:.*:.+
            SolutionConfig:
              $ref: '#/components/schemas/SolutionConfig'
          x-stackQL-stringOnly: true
      x-title: CreateSolutionRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    datasets:
      name: datasets
      id: aws.personalize.datasets
      x-cfn-schema-name: Dataset
      x-cfn-type-name: AWS::Personalize::Dataset
      x-identifiers:
        - DatasetArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Dataset&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::Dataset"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::Dataset"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::Dataset"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DatasetArn') as dataset_arn,
              JSON_EXTRACT(Properties, '$.DatasetType') as dataset_type,
              JSON_EXTRACT(Properties, '$.DatasetGroupArn') as dataset_group_arn,
              JSON_EXTRACT(Properties, '$.SchemaArn') as schema_arn,
              JSON_EXTRACT(Properties, '$.DatasetImportJob') as dataset_import_job
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::Dataset'
              AND data__Identifier = '<DatasetArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.DatasetArn') as dataset_arn,
                JSON_EXTRACT(detail.Properties, '$.DatasetType') as dataset_type,
                JSON_EXTRACT(detail.Properties, '$.DatasetGroupArn') as dataset_group_arn,
                JSON_EXTRACT(detail.Properties, '$.SchemaArn') as schema_arn,
                JSON_EXTRACT(detail.Properties, '$.DatasetImportJob') as dataset_import_job
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Personalize::Dataset'
                AND detail.data__TypeName = 'AWS::Personalize::Dataset'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'DatasetArn') as dataset_arn,
                  json_extract_path_text(Properties, 'DatasetType') as dataset_type,
                  json_extract_path_text(Properties, 'DatasetGroupArn') as dataset_group_arn,
                  json_extract_path_text(Properties, 'SchemaArn') as schema_arn,
                  json_extract_path_text(Properties, 'DatasetImportJob') as dataset_import_job
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::Dataset'
                  AND data__Identifier = '<DatasetArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'DatasetArn') as dataset_arn,
                    json_extract_path_text(detail.Properties, 'DatasetType') as dataset_type,
                    json_extract_path_text(detail.Properties, 'DatasetGroupArn') as dataset_group_arn,
                    json_extract_path_text(detail.Properties, 'SchemaArn') as schema_arn,
                    json_extract_path_text(detail.Properties, 'DatasetImportJob') as dataset_import_job
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Personalize::Dataset'
                    AND detail.data__TypeName = 'AWS::Personalize::Dataset'
                    AND listing.region = 'us-east-1'
    datasets_list_only:
      name: datasets_list_only
      id: aws.personalize.datasets_list_only
      x-cfn-schema-name: Dataset
      x-cfn-type-name: AWS::Personalize::Dataset
      x-identifiers:
        - DatasetArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DatasetArn') as dataset_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::Dataset'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DatasetArn') as dataset_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::Dataset'
                AND region = 'us-east-1'
    dataset_groups:
      name: dataset_groups
      id: aws.personalize.dataset_groups
      x-cfn-schema-name: DatasetGroup
      x-cfn-type-name: AWS::Personalize::DatasetGroup
      x-identifiers:
        - DatasetGroupArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DatasetGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::DatasetGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::DatasetGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/dataset_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/dataset_groups/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DatasetGroupArn') as dataset_group_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Domain') as domain
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::DatasetGroup'
              AND data__Identifier = '<DatasetGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DatasetGroupArn') as dataset_group_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Domain') as domain
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Personalize::DatasetGroup'
                AND detail.data__TypeName = 'AWS::Personalize::DatasetGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DatasetGroupArn') as dataset_group_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Domain') as domain
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::DatasetGroup'
                  AND data__Identifier = '<DatasetGroupArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DatasetGroupArn') as dataset_group_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Domain') as domain
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Personalize::DatasetGroup'
                    AND detail.data__TypeName = 'AWS::Personalize::DatasetGroup'
                    AND listing.region = 'us-east-1'
    dataset_groups_list_only:
      name: dataset_groups_list_only
      id: aws.personalize.dataset_groups_list_only
      x-cfn-schema-name: DatasetGroup
      x-cfn-type-name: AWS::Personalize::DatasetGroup
      x-identifiers:
        - DatasetGroupArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DatasetGroupArn') as dataset_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::DatasetGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DatasetGroupArn') as dataset_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::DatasetGroup'
                AND region = 'us-east-1'
    schemata:
      name: schemata
      id: aws.personalize.schemata
      x-cfn-schema-name: Schema
      x-cfn-type-name: AWS::Personalize::Schema
      x-identifiers:
        - SchemaArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Schema&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::Schema"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::Schema"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/schemata/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/schemata/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SchemaArn') as schema_arn,
              JSON_EXTRACT(Properties, '$.Schema') as _schema,
              JSON_EXTRACT(Properties, '$.Domain') as domain
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::Schema'
              AND data__Identifier = '<SchemaArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SchemaArn') as schema_arn,
                JSON_EXTRACT(detail.Properties, '$.Schema') as _schema,
                JSON_EXTRACT(detail.Properties, '$.Domain') as domain
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Personalize::Schema'
                AND detail.data__TypeName = 'AWS::Personalize::Schema'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SchemaArn') as schema_arn,
                  json_extract_path_text(Properties, 'Schema') as _schema,
                  json_extract_path_text(Properties, 'Domain') as domain
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::Schema'
                  AND data__Identifier = '<SchemaArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SchemaArn') as schema_arn,
                    json_extract_path_text(detail.Properties, 'Schema') as _schema,
                    json_extract_path_text(detail.Properties, 'Domain') as domain
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Personalize::Schema'
                    AND detail.data__TypeName = 'AWS::Personalize::Schema'
                    AND listing.region = 'us-east-1'
    schemata_list_only:
      name: schemata_list_only
      id: aws.personalize.schemata_list_only
      x-cfn-schema-name: Schema
      x-cfn-type-name: AWS::Personalize::Schema
      x-identifiers:
        - SchemaArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SchemaArn') as schema_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::Schema'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SchemaArn') as schema_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::Schema'
                AND region = 'us-east-1'
    solutions:
      name: solutions
      id: aws.personalize.solutions
      x-cfn-schema-name: Solution
      x-cfn-type-name: AWS::Personalize::Solution
      x-identifiers:
        - SolutionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Solution&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::Solution"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Personalize::Solution"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/solutions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/solutions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SolutionArn') as solution_arn,
              JSON_EXTRACT(Properties, '$.EventType') as event_type,
              JSON_EXTRACT(Properties, '$.DatasetGroupArn') as dataset_group_arn,
              JSON_EXTRACT(Properties, '$.PerformAutoML') as perform_auto_ml,
              JSON_EXTRACT(Properties, '$.PerformHPO') as perform_hpo,
              JSON_EXTRACT(Properties, '$.RecipeArn') as recipe_arn,
              JSON_EXTRACT(Properties, '$.SolutionConfig') as solution_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::Solution'
              AND data__Identifier = '<SolutionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SolutionArn') as solution_arn,
                JSON_EXTRACT(detail.Properties, '$.EventType') as event_type,
                JSON_EXTRACT(detail.Properties, '$.DatasetGroupArn') as dataset_group_arn,
                JSON_EXTRACT(detail.Properties, '$.PerformAutoML') as perform_auto_ml,
                JSON_EXTRACT(detail.Properties, '$.PerformHPO') as perform_hpo,
                JSON_EXTRACT(detail.Properties, '$.RecipeArn') as recipe_arn,
                JSON_EXTRACT(detail.Properties, '$.SolutionConfig') as solution_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Personalize::Solution'
                AND detail.data__TypeName = 'AWS::Personalize::Solution'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SolutionArn') as solution_arn,
                  json_extract_path_text(Properties, 'EventType') as event_type,
                  json_extract_path_text(Properties, 'DatasetGroupArn') as dataset_group_arn,
                  json_extract_path_text(Properties, 'PerformAutoML') as perform_auto_ml,
                  json_extract_path_text(Properties, 'PerformHPO') as perform_hpo,
                  json_extract_path_text(Properties, 'RecipeArn') as recipe_arn,
                  json_extract_path_text(Properties, 'SolutionConfig') as solution_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Personalize::Solution'
                  AND data__Identifier = '<SolutionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SolutionArn') as solution_arn,
                    json_extract_path_text(detail.Properties, 'EventType') as event_type,
                    json_extract_path_text(detail.Properties, 'DatasetGroupArn') as dataset_group_arn,
                    json_extract_path_text(detail.Properties, 'PerformAutoML') as perform_auto_ml,
                    json_extract_path_text(detail.Properties, 'PerformHPO') as perform_hpo,
                    json_extract_path_text(detail.Properties, 'RecipeArn') as recipe_arn,
                    json_extract_path_text(detail.Properties, 'SolutionConfig') as solution_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Personalize::Solution'
                    AND detail.data__TypeName = 'AWS::Personalize::Solution'
                    AND listing.region = 'us-east-1'
    solutions_list_only:
      name: solutions_list_only
      id: aws.personalize.solutions_list_only
      x-cfn-schema-name: Solution
      x-cfn-type-name: AWS::Personalize::Solution
      x-identifiers:
        - SolutionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SolutionArn') as solution_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::Solution'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SolutionArn') as solution_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Personalize::Solution'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Dataset&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataset
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DatasetGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDatasetGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDatasetGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Schema&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSchema
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSchemaRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Solution&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSolution
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSolutionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
