openapi: 3.0.0
info:
  title: GameLift
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    RoutingStrategy:
      type: object
      properties:
        Message:
          description: The message text to be used with a terminal routing strategy. If you specify TERMINAL for the Type property, you must specify this property.
          type: string
        FleetId:
          description: A unique identifier for a fleet that the alias points to. If you specify SIMPLE for the Type property, you must specify this property.
          type: string
          pattern: ^fleet-\S+
        Type:
          description: Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets.
          type: string
          enum:
            - SIMPLE
            - TERMINAL
      additionalProperties: false
      required:
        - Type
      anyOf:
        - required:
            - FleetId
        - required:
            - Message
    Alias:
      type: object
      properties:
        Description:
          description: A human-readable description of the alias.
          type: string
          minLength: 1
          maxLength: 1024
        Name:
          description: A descriptive label that is associated with an alias. Alias names do not need to be unique.
          type: string
          minLength: 1
          maxLength: 1024
          pattern: .*\S.*
        RoutingStrategy:
          description: A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message.
          $ref: '#/components/schemas/RoutingStrategy'
        AliasId:
          description: Unique alias ID
          type: string
      required:
        - Name
        - RoutingStrategy
      x-stackql-resource-name: alias
      description: The AWS::GameLift::Alias resource creates an alias for an Amazon GameLift (GameLift) fleet destination.
      x-type-name: AWS::GameLift::Alias
      x-stackql-primary-identifier:
        - AliasId
      x-read-only-properties:
        - AliasId
      x-required-properties:
        - Name
        - RoutingStrategy
      x-taggable: true
      x-required-permissions:
        create:
          - gamelift:CreateAlias
        read:
          - gamelift:DescribeAlias
        update:
          - gamelift:UpdateAlias
        delete:
          - gamelift:DeleteAlias
        list:
          - gamelift:ListAliases
    StorageLocation:
      x-$comment: Contains object details present in the S3 Bucket
      type: object
      additionalProperties: false
      properties:
        Bucket:
          description: An Amazon S3 bucket identifier. This is the name of the S3 bucket.
          type: string
        Key:
          description: The name of the zip file that contains the build files or script files.
          type: string
        ObjectVersion:
          description: The version of the file, if object versioning is turned on for the bucket. Amazon GameLift uses this information when retrieving files from your S3 bucket. To retrieve a specific version of the file, provide an object version. To retrieve the latest version of the file, do not set this parameter.
          type: string
        RoleArn:
          description: The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access the S3 bucket.
          type: string
      required:
        - Bucket
        - Key
        - RoleArn
    Build:
      type: object
      properties:
        BuildId:
          description: A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
          type: string
        Name:
          description: A descriptive label that is associated with a build. Build names do not need to be unique.
          type: string
        OperatingSystem:
          description: The operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build. If your game build contains multiple executables, they all must run on the same operating system. If an operating system is not specified when creating a build, Amazon GameLift uses the default value (WINDOWS_2012). This value cannot be changed later.
          type: string
          enum:
            - AMAZON_LINUX
            - AMAZON_LINUX_2
            - AMAZON_LINUX_2023
            - WINDOWS_2012
            - WINDOWS_2016
        StorageLocation:
          description: Information indicating where your game build files are stored. Use this parameter only when creating a build with files stored in an Amazon S3 bucket that you own. The storage location must specify an Amazon S3 bucket name and key. The location must also specify a role ARN that you set up to allow Amazon GameLift to access your Amazon S3 bucket. The S3 bucket and your new build must be in the same Region.
          $ref: '#/components/schemas/StorageLocation'
        Version:
          description: Version information that is associated with this build. Version strings do not need to be unique.
          type: string
        ServerSdkVersion:
          description: A server SDK version you used when integrating your game server build with Amazon GameLift. By default Amazon GameLift sets this value to 4.0.2.
          type: string
      required: []
      x-stackql-resource-name: build
      description: Resource Type definition for AWS::GameLift::Build
      x-type-name: AWS::GameLift::Build
      x-stackql-primary-identifier:
        - BuildId
      x-create-only-properties:
        - StorageLocation
        - OperatingSystem
        - ServerSdkVersion
      x-write-only-properties:
        - StorageLocation
        - ServerSdkVersion
      x-read-only-properties:
        - BuildId
      x-required-properties: []
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - gamelift:DescribeBuild
          - gamelift:CreateBuild
        read:
          - gamelift:DescribeBuild
        update:
          - gamelift:UpdateBuild
        delete:
          - gamelift:DescribeBuild
          - gamelift:DeleteBuild
        list:
          - gamelift:ListBuilds
    ScalingPolicy:
      description: Rule that controls how a fleet is scaled. Scaling policies are uniquely identified by the combination of name and fleet ID.
      additionalProperties: false
      type: object
      properties:
        Status:
          description: Current status of the scaling policy. The scaling policy can be in force only when in an ACTIVE status. Scaling policies can be suspended for individual fleets. If the policy is suspended for a fleet, the policy status does not change.
          type: string
          enum:
            - ACTIVE
            - UPDATE_REQUESTED
            - UPDATING
            - DELETE_REQUESTED
            - DELETING
            - DELETED
            - ERROR
        MetricName:
          description: Name of the Amazon GameLift-defined metric that is used to trigger a scaling adjustment.
          type: string
          enum:
            - ActivatingGameSessions
            - ActiveGameSessions
            - ActiveInstances
            - AvailableGameSessions
            - AvailablePlayerSessions
            - CurrentPlayerSessions
            - IdleInstances
            - PercentAvailableGameSessions
            - PercentIdleInstances
            - QueueDepth
            - WaitTime
            - ConcurrentActivatableGameSessions
        PolicyType:
          description: 'The type of scaling policy to create. For a target-based policy, set the parameter MetricName to ''PercentAvailableGameSessions'' and specify a TargetConfiguration. For a rule-based policy set the following parameters: MetricName, ComparisonOperator, Threshold, EvaluationPeriods, ScalingAdjustmentType, and ScalingAdjustment.'
          type: string
          enum:
            - RuleBased
            - TargetBased
        ComparisonOperator:
          description: Comparison operator to use when measuring a metric against the threshold value.
          type: string
          enum:
            - GreaterThanOrEqualToThreshold
            - GreaterThanThreshold
            - LessThanThreshold
            - LessThanOrEqualToThreshold
        TargetConfiguration:
          description: An object that contains settings for a target-based scaling policy.
          $ref: '#/components/schemas/TargetConfiguration'
        UpdateStatus:
          description: The current status of the fleet's scaling policies in a requested fleet location. The status PENDING_UPDATE indicates that an update was requested for the fleet but has not yet been completed for the location.
          type: string
          enum:
            - PENDING_UPDATE
        ScalingAdjustment:
          description: Amount of adjustment to make, based on the scaling adjustment type.
          type: integer
        EvaluationPeriods:
          description: Length of time (in minutes) the metric must be at or beyond the threshold before a scaling event is triggered.
          type: integer
          minimum: 1
        Location:
          $ref: '#/components/schemas/Location'
        Name:
          minLength: 1
          description: A descriptive label that is associated with a fleet's scaling policy. Policy names do not need to be unique.
          type: string
          maxLength: 1024
        ScalingAdjustmentType:
          description: The type of adjustment to make to a fleet's instance count.
          type: string
          enum:
            - ChangeInCapacity
            - ExactCapacity
            - PercentChangeInCapacity
        Threshold:
          description: Metric value used to trigger a scaling event.
          type: number
      required:
        - MetricName
        - Name
    ServerProcess:
      description: A set of instructions for launching server processes on each instance in a fleet. Each instruction set identifies the location of the server executable, optional launch parameters, and the number of server processes with this configuration to maintain concurrently on the instance. Server process configurations make up a fleet's RuntimeConfiguration.
      additionalProperties: false
      type: object
      properties:
        ConcurrentExecutions:
          description: The number of server processes that use this configuration to run concurrently on an instance.
          type: integer
          minimum: 1
        Parameters:
          minLength: 1
          description: An optional list of parameters to pass to the server executable or Realtime script on launch.
          type: string
          maxLength: 1024
        LaunchPath:
          minLength: 1
          pattern: ^([Cc]:\\game\S+|/local/game/\S+)
          description: |-
            The location of the server executable in a custom game build or the name of the Realtime script file that contains the Init() function. Game builds and Realtime scripts are installed on instances at the root:

            Windows (for custom game builds only): C:\game. Example: "C:\game\MyGame\server.exe"

            Linux: /local/game. Examples: "/local/game/MyGame/server.exe" or "/local/game/MyRealtimeScript.js"
          type: string
          maxLength: 1024
      required:
        - ConcurrentExecutions
        - LaunchPath
    TargetConfiguration:
      description: Settings for a target-based scaling policy. A target-based policy tracks a particular fleet metric specifies a target value for the metric. As player usage changes, the policy triggers Amazon GameLift to adjust capacity so that the metric returns to the target value. The target configuration specifies settings as needed for the target based policy, including the target value.
      additionalProperties: false
      type: object
      properties:
        TargetValue:
          description: Desired value to use with a target-based scaling policy. The value must be relevant for whatever metric the scaling policy is using. For example, in a policy using the metric PercentAvailableGameSessions, the target value should be the preferred size of the fleet's buffer (the percent of capacity that should be idle and ready for new game sessions).
          type: number
      required:
        - TargetValue
    RuntimeConfiguration:
      description: >-
        A collection of server process configurations that describe the processes to run on each instance in a fleet. All fleets must have a runtime configuration. Each instance in the fleet maintains server processes as specified in the runtime configuration, launching new ones as existing processes end. Each instance regularly checks for an updated runtime configuration makes adjustments as called for.


        The runtime configuration enables the instances in a fleet to run multiple processes simultaneously. Potential scenarios are as follows: (1) Run multiple processes of a single game server executable to maximize usage of your hosting resources. (2) Run one or more processes of different executables, such as your game server and a metrics tracking program. (3) Run multiple processes of a single game server but with different launch parameters, for example to run one process on each
        instance in debug mode.


        An Amazon GameLift instance is limited to 50 processes running simultaneously. A runtime configuration must specify fewer than this limit. To calculate the total number of processes specified in a runtime configuration, add the values of the ConcurrentExecutions parameter for each ServerProcess object in the runtime configuration.
      additionalProperties: false
      type: object
      properties:
        ServerProcesses:
          maxItems: 50
          description: A collection of server process configurations that describe which server processes to run on each instance in a fleet.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/ServerProcess'
        MaxConcurrentGameSessionActivations:
          description: The maximum number of game sessions with status ACTIVATING to allow on an instance simultaneously. This setting limits the amount of instance resources that can be used for new game activations at any one time.
          maximum: 2147483647
          type: integer
          minimum: 1
        GameSessionActivationTimeoutSeconds:
          description: The maximum amount of time (in seconds) that a game session can remain in status ACTIVATING. If the game session is not active before the timeout, activation is terminated and the game session status is changed to TERMINATED.
          maximum: 600
          type: integer
          minimum: 1
    LocationConfiguration:
      description: A remote location where a multi-location fleet can deploy EC2 instances for game hosting.
      additionalProperties: false
      type: object
      properties:
        LocationCapacity:
          $ref: '#/components/schemas/LocationCapacity'
        Location:
          $ref: '#/components/schemas/Location'
      required:
        - Location
    AnywhereConfiguration:
      description: Configuration for Anywhere fleet.
      additionalProperties: false
      properties:
        Cost:
          minLength: 1
          pattern: ^\d{1,5}(?:\.\d{1,5})?$
          description: Cost of compute can be specified on Anywhere Fleets to prioritize placement across Queue destinations based on Cost.
          type: string
          maxLength: 11
      required:
        - Cost
    ResourceCreationLimitPolicy:
      description: |-
        A policy that limits the number of game sessions a player can create on the same fleet. This optional policy gives game owners control over how players can consume available game server resources. A resource creation policy makes the following statement: "An individual player can create a maximum number of new game sessions within a specified time period".

        The policy is evaluated when a player tries to create a new game session. For example, assume you have a policy of 10 new game sessions and a time period of 60 minutes. On receiving a CreateGameSession request, Amazon GameLift checks that the player (identified by CreatorId) has created fewer than 10 game sessions in the past 60 minutes.
      additionalProperties: false
      type: object
      properties:
        PolicyPeriodInMinutes:
          description: The time span used in evaluating the resource creation limit policy.
          type: integer
          minimum: 0
        NewGameSessionsPerCreator:
          description: The maximum number of game sessions that an individual can create during the policy period.
          type: integer
          minimum: 0
    LocationCapacity:
      description: Current resource capacity settings in a specified fleet or location. The location value might refer to a fleet's remote location or its home Region.
      additionalProperties: false
      type: object
      properties:
        MinSize:
          description: The minimum value allowed for the fleet's instance count for a location. When creating a new fleet, GameLift automatically sets this value to "0". After the fleet is active, you can change this value.
          type: integer
          minimum: 0
        DesiredEC2Instances:
          description: The number of EC2 instances you want to maintain in the specified fleet location. This value must fall between the minimum and maximum size limits.
          type: integer
          minimum: 0
        MaxSize:
          description: The maximum value that is allowed for the fleet's instance count for a location. When creating a new fleet, GameLift automatically sets this value to "1". Once the fleet is active, you can change this value.
          type: integer
          minimum: 0
      required:
        - DesiredEC2Instances
        - MinSize
        - MaxSize
    CertificateConfiguration:
      description: Information about the use of a TLS/SSL certificate for a fleet. TLS certificate generation is enabled at the fleet level, with one certificate generated for the fleet. When this feature is enabled, the certificate can be retrieved using the GameLift Server SDK call GetInstanceCertificate. All instances in a fleet share the same certificate.
      additionalProperties: false
      type: object
      properties:
        CertificateType:
          type: string
          enum:
            - DISABLED
            - GENERATED
      required:
        - CertificateType
    IpPermission:
      description: >-
        A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift hosting resource. New game sessions that are started on the fleet are assigned an IP address/port number combination, which must fall into the fleet's allowed ranges. For fleets created with a custom game server, the ranges reflect the server's game session assignments. For Realtime Servers fleets, Amazon GameLift automatically opens two port ranges, one for TCP
        messaging and one for UDP, for use by the Realtime servers.
      additionalProperties: false
      type: object
      properties:
        IpRange:
          pattern: (^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))$)
          description: 'A range of allowed IP addresses. This value must be expressed in CIDR notation. Example: "000.000.000.000/[subnet mask]" or optionally the shortened version "0.0.0.0/[subnet mask]".'
          type: string
        FromPort:
          description: A starting value for a range of allowed port numbers.
          maximum: 60000
          type: integer
          minimum: 1
        ToPort:
          description: An ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than FromPort.
          maximum: 60000
          type: integer
          minimum: 1
        Protocol:
          description: The network communication protocol used by the fleet.
          type: string
          enum:
            - TCP
            - UDP
      required:
        - FromPort
        - IpRange
        - Protocol
        - ToPort
    Location:
      type: object
      properties:
        LocationName:
          type: string
          minLength: 8
          maxLength: 64
          pattern: ^custom-[A-Za-z0-9\-]+
        LocationArn:
          type: string
          pattern: ^arn:.*:location/custom-\S+
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - LocationName
      x-stackql-resource-name: location
      description: The AWS::GameLift::Location resource creates an Amazon GameLift (GameLift) custom location.
      x-type-name: AWS::GameLift::Location
      x-stackql-primary-identifier:
        - LocationName
      x-create-only-properties:
        - LocationName
      x-read-only-properties:
        - LocationArn
      x-required-properties:
        - LocationName
      x-tagging:
        taggable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - gamelift:CreateLocation
          - gamelift:ListLocations
          - gamelift:ListTagsForResource
          - gamelift:TagResource
        read:
          - gamelift:ListLocations
          - gamelift:ListTagsForResource
        delete:
          - gamelift:DeleteLocation
        list:
          - gamelift:ListLocations
        update:
          - gamelift:ListLocations
          - gamelift:ListTagsForResource
          - gamelift:TagResource
          - gamelift:UntagResource
    Fleet:
      type: object
      properties:
        ScalingPolicies:
          maxItems: 50
          description: A list of rules that control how a fleet is scaled.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/ScalingPolicy'
        Description:
          minLength: 1
          description: A human-readable description of a fleet.
          type: string
          maxLength: 1024
        PeerVpcId:
          minLength: 1
          pattern: ^vpc-\S+
          description: A unique identifier for a VPC with resources to be accessed by your Amazon GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the VPC Dashboard in the AWS Management Console.
          type: string
          maxLength: 1024
        ApplyCapacity:
          description: Determines whether to apply fleet or location capacities on fleet creation.
          type: string
          enum:
            - ON_UPDATE
            - ON_CREATE_AND_UPDATE
        EC2InboundPermissions:
          maxItems: 50
          description: A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/IpPermission'
        ComputeType:
          description: ComputeType to differentiate EC2 hardware managed by GameLift and Anywhere hardware managed by the customer.
          type: string
          enum:
            - EC2
            - ANYWHERE
        Name:
          minLength: 1
          description: A descriptive label that is associated with a fleet. Fleet names do not need to be unique.
          type: string
          maxLength: 1024
        AnywhereConfiguration:
          description: Configuration for Anywhere fleet.
          $ref: '#/components/schemas/AnywhereConfiguration'
        InstanceRoleARN:
          minLength: 1
          pattern: ^arn:aws(-.*)?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
          description: A unique identifier for an AWS IAM role that manages access to your AWS services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
          type: string
        FleetId:
          pattern: ^fleet-\S+
          description: Unique fleet ID
          type: string
        CertificateConfiguration:
          description: Indicates whether to generate a TLS/SSL certificate for the new fleet. TLS certificates are used for encrypting traffic between game clients and game servers running on GameLift. If this parameter is not set, certificate generation is disabled. This fleet setting cannot be changed once the fleet is created.
          $ref: '#/components/schemas/CertificateConfiguration'
        InstanceRoleCredentialsProvider:
          description: Credentials provider implementation that loads credentials from the Amazon EC2 Instance Metadata Service.
          type: string
          enum:
            - SHARED_CREDENTIAL_FILE
        DesiredEC2Instances:
          description: '[DEPRECATED] The number of EC2 instances that you want this fleet to host. When creating a new fleet, GameLift automatically sets this value to "1" and initiates a single instance. Once the fleet is active, update this value to trigger GameLift to add or remove instances from the fleet.'
          type: integer
          minimum: 0
        ServerLaunchParameters:
          minLength: 1
          description: This parameter is no longer used but is retained for backward compatibility. Instead, specify server launch parameters in the RuntimeConfiguration parameter. A request must specify either a runtime configuration or values for both ServerLaunchParameters and ServerLaunchPath.
          type: string
          maxLength: 1024
        FleetType:
          description: Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
          type: string
          enum:
            - ON_DEMAND
            - SPOT
        Locations:
          minItems: 1
          maxItems: 100
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/LocationConfiguration'
        NewGameSessionProtectionPolicy:
          description: A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
          type: string
          enum:
            - FullProtection
            - NoProtection
        ScriptId:
          pattern: ^script-\S+|^arn:.*:script/script-\S+
          description: |-
            A unique identifier for a Realtime script to be deployed on a new Realtime Servers fleet. The script must have been successfully uploaded to Amazon GameLift. This fleet setting cannot be changed once the fleet is created.

            Note: It is not currently possible to use the !Ref command to reference a script created with a CloudFormation template for the fleet property ScriptId. Instead, use Fn::GetAtt Script.Arn or Fn::GetAtt Script.Id to retrieve either of these properties as input for ScriptId. Alternatively, enter a ScriptId string manually.
          type: string
        MaxSize:
          description: '[DEPRECATED] The maximum value that is allowed for the fleet''s instance count. When creating a new fleet, GameLift automatically sets this value to "1". Once the fleet is active, you can change this value.'
          type: integer
          minimum: 0
        RuntimeConfiguration:
          description: |-
            Instructions for launching server processes on each instance in the fleet. Server processes run either a custom game build executable or a Realtime script. The runtime configuration defines the server executables or launch script file, launch parameters, and the number of processes to run concurrently on each instance. When creating a fleet, the runtime configuration must have at least one server process configuration; otherwise the request fails with an invalid request exception.

            This parameter is required unless the parameters ServerLaunchPath and ServerLaunchParameters are defined. Runtime configuration has replaced these parameters, but fleets that use them will continue to work.
          $ref: '#/components/schemas/RuntimeConfiguration'
        LogPaths:
          description: This parameter is no longer used. When hosting a custom game build, specify where Amazon GameLift should store log files using the Amazon GameLift server API call ProcessReady()
          x-insertionOrder: false
          type: array
          items:
            type: string
        ServerLaunchPath:
          minLength: 1
          description: This parameter is no longer used. Instead, specify a server launch path using the RuntimeConfiguration parameter. Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work.
          type: string
          maxLength: 1024
        MinSize:
          description: '[DEPRECATED] The minimum value allowed for the fleet''s instance count. When creating a new fleet, GameLift automatically sets this value to "0". After the fleet is active, you can change this value.'
          type: integer
          minimum: 0
        PeerVpcAwsAccountId:
          minLength: 1
          pattern: ^[0-9]{12}$
          description: A unique identifier for the AWS account with the VPC that you want to peer your Amazon GameLift fleet with. You can find your account ID in the AWS Management Console under account settings.
          type: string
          maxLength: 1024
        MetricGroups:
          maxItems: 1
          description: The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
          x-insertionOrder: false
          type: array
          items:
            type: string
        BuildId:
          pattern: ^build-\S+|^arn:.*:build/build-\S+
          description: A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
          type: string
        ResourceCreationLimitPolicy:
          description: A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
          $ref: '#/components/schemas/ResourceCreationLimitPolicy'
        EC2InstanceType:
          pattern: ^.*..*$
          description: The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
          type: string
      required:
        - Name
      x-stackql-resource-name: fleet
      description: The AWS::GameLift::Fleet resource creates an Amazon GameLift (GameLift) fleet to host game servers. A fleet is a set of EC2 or Anywhere instances, each of which can host multiple game sessions.
      x-type-name: AWS::GameLift::Fleet
      x-stackql-primary-identifier:
        - FleetId
      x-create-only-properties:
        - ApplyCapacity
        - BuildId
        - CertificateConfiguration
        - EC2InstanceType
        - FleetType
        - InstanceRoleARN
        - InstanceRoleCredentialsProvider
        - LogPaths
        - PeerVpcAwsAccountId
        - PeerVpcId
        - ScriptId
        - ServerLaunchParameters
        - ServerLaunchPath
        - ComputeType
      x-write-only-properties:
        - ApplyCapacity
      x-read-only-properties:
        - FleetId
      x-required-properties:
        - Name
      x-taggable: true
      x-required-permissions:
        read:
          - gamelift:DescribeFleetAttributes
          - gamelift:DescribeFleetLocationAttributes
          - gamelift:DescribeFleetCapacity
          - gamelift:DescribeFleetPortSettings
          - gamelift:DescribeFleetUtilization
          - gamelift:DescribeRuntimeConfiguration
          - gamelift:DescribeEC2InstanceLimits
          - gamelift:DescribeFleetEvents
          - gamelift:DescribeScalingPolicies
        create:
          - gamelift:CreateFleet
          - gamelift:DescribeFleetAttributes
          - gamelift:DescribeFleetLocationAttributes
          - gamelift:UpdateFleetCapacity
          - gamelift:DescribeFleetLocationCapacity
          - gamelift:PutScalingPolicy
          - gamelift:DescribeScalingPolicies
        update:
          - gamelift:UpdateFleetAttributes
          - gamelift:CreateFleetLocations
          - gamelift:DeleteFleetLocations
          - gamelift:UpdateFleetCapacity
          - gamelift:UpdateFleetPortSettings
          - gamelift:UpdateRuntimeConfiguration
          - gamelift:DescribeFleetLocationCapacity
          - gamelift:DescribeFleetPortSettings
          - gamelift:DescribeFleetLocationAttributes
          - gamelift:PutScalingPolicy
          - gamelift:DescribeScalingPolicies
          - gamelift:DeleteScalingPolicy
        list:
          - gamelift:ListFleets
        delete:
          - gamelift:DeleteFleet
          - gamelift:DescribeFleetLocationCapacity
          - gamelift:DescribeScalingPolicies
          - gamelift:DeleteScalingPolicy
    AutoScalingPolicy:
      type: object
      description: Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
      properties:
        EstimatedInstanceWarmup:
          $ref: '#/components/schemas/EstimatedInstanceWarmup'
        TargetTrackingConfiguration:
          $ref: '#/components/schemas/TargetTrackingConfiguration'
      required:
        - TargetTrackingConfiguration
      additionalProperties: false
    EstimatedInstanceWarmup:
      type: number
      description: Length of time, in seconds, it takes for a new instance to start new game server processes and register with GameLift FleetIQ.
    TargetTrackingConfiguration:
      type: object
      description: Settings for a target-based scaling policy applied to Auto Scaling group.
      properties:
        TargetValue:
          $ref: '#/components/schemas/TargetValue'
      required:
        - TargetValue
      additionalProperties: false
    TargetValue:
      type: number
      description: Desired value to use with a game server group target-based scaling policy.
    BalancingStrategy:
      type: string
      description: The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
      enum:
        - SPOT_ONLY
        - SPOT_PREFERRED
        - ON_DEMAND_ONLY
    DeleteOption:
      description: The type of delete to perform.
      type: string
      enum:
        - SAFE_DELETE
        - FORCE_DELETE
        - RETAIN
    GameServerGroupName:
      type: string
      description: An identifier for the new game server group.
      pattern: '[a-zA-Z0-9-\.]+'
      minLength: 1
      maxLength: 128
    GameServerProtectionPolicy:
      type: string
      description: A flag that indicates whether instances in the game server group are protected from early termination.
      enum:
        - NO_PROTECTION
        - FULL_PROTECTION
    GameServerGroupArn:
      description: A generated unique ID for the game server group.
      type: string
      pattern: ^arn:.*:gameservergroup\/[a-zA-Z0-9-\.]*
      minLength: 1
      maxLength: 256
    InstanceDefinitions:
      type: array
      description: A set of EC2 instance types to use when creating instances in the group.
      items:
        $ref: '#/components/schemas/InstanceDefinition'
      maxItems: 20
      minItems: 2
      x-insertionOrder: false
    InstanceDefinition:
      type: object
      description: An allowed instance type for your game server group.
      properties:
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
        WeightedCapacity:
          $ref: '#/components/schemas/WeightedCapacity'
      required:
        - InstanceType
      additionalProperties: false
    InstanceType:
      type: string
      description: An EC2 instance type designation.
    WeightedCapacity:
      type: string
      description: Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group.
      pattern: ^[\u0031-\u0039][\u0030-\u0039]{0,2}$
    LaunchTemplate:
      type: object
      description: The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
      properties:
        LaunchTemplateId:
          $ref: '#/components/schemas/LaunchTemplateId'
        LaunchTemplateName:
          $ref: '#/components/schemas/LaunchTemplateName'
        Version:
          $ref: '#/components/schemas/Version'
      additionalProperties: false
    LaunchTemplateId:
      type: string
      description: A unique identifier for an existing EC2 launch template.
    LaunchTemplateName:
      type: string
      description: A readable identifier for an existing EC2 launch template.
    Version:
      type: string
      description: The version of the EC2 launch template to use.
    MaxSize:
      type: number
      description: The maximum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
      minimum: 1
    MinSize:
      type: number
      description: The minimum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
      minimum: 0
    RoleArn:
      type: string
      description: The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
      pattern: ^arn:.*:role\/[\w+=,.@-]+
      minLength: 1
      maxLength: 256
    Tags:
      type: array
      description: A list of labels to assign to the new game server group resource. Updating game server group tags with CloudFormation will not take effect. Please update this property using AWS GameLift APIs instead.
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 200
      x-insertionOrder: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length.
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length.
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    VpcSubnets:
      type: array
      description: A list of virtual private cloud (VPC) subnets to use with instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
      items:
        type: string
        pattern: ^subnet-[0-9a-z]+$
        minLength: 15
        maxLength: 24
      minItems: 1
      maxItems: 20
      x-insertionOrder: false
    GameServerGroup:
      type: object
      properties:
        AutoScalingGroupArn:
          description: A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.
          $ref: '#/components/schemas/AutoScalingGroupArn'
        AutoScalingPolicy:
          description: Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
          $ref: '#/components/schemas/AutoScalingPolicy'
        BalancingStrategy:
          description: The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
          $ref: '#/components/schemas/BalancingStrategy'
        DeleteOption:
          description: The type of delete to perform.
          $ref: '#/components/schemas/DeleteOption'
        GameServerGroupArn:
          description: A generated unique ID for the game server group.
          $ref: '#/components/schemas/GameServerGroupArn'
        GameServerGroupName:
          description: An identifier for the new game server group.
          $ref: '#/components/schemas/GameServerGroupName'
        GameServerProtectionPolicy:
          description: A flag that indicates whether instances in the game server group are protected from early termination.
          $ref: '#/components/schemas/GameServerProtectionPolicy'
        InstanceDefinitions:
          description: A set of EC2 instance types to use when creating instances in the group.
          $ref: '#/components/schemas/InstanceDefinitions'
        LaunchTemplate:
          description: The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
          $ref: '#/components/schemas/LaunchTemplate'
        MaxSize:
          description: The maximum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
          $ref: '#/components/schemas/MaxSize'
        MinSize:
          description: The minimum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
          $ref: '#/components/schemas/MinSize'
        RoleArn:
          description: The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
          $ref: '#/components/schemas/RoleArn'
        Tags:
          description: A list of labels to assign to the new game server group resource. Updating game server group tags with CloudFormation will not take effect. Please update this property using AWS GameLift APIs instead.
          $ref: '#/components/schemas/Tags'
        VpcSubnets:
          description: A list of virtual private cloud (VPC) subnets to use with instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
          $ref: '#/components/schemas/VpcSubnets'
      required:
        - GameServerGroupName
        - InstanceDefinitions
        - RoleArn
      x-stackql-resource-name: game_server_group
      description: The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.
      x-type-name: AWS::GameLift::GameServerGroup
      x-stackql-primary-identifier:
        - GameServerGroupArn
      x-write-only-properties:
        - DeleteOption
        - LaunchTemplate
        - MinSize
        - MaxSize
        - AutoScalingPolicy
        - VpcSubnets
        - Tags
      x-read-only-properties:
        - GameServerGroupArn
        - AutoScalingGroupArn
      x-required-properties:
        - GameServerGroupName
        - InstanceDefinitions
        - RoleArn
      x-taggable: true
      x-required-permissions:
        create:
          - gamelift:CreateGameServerGroup
          - gamelift:TagResource
          - gamelift:DescribeGameServerGroup
          - iam:assumeRole
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - ec2:DescribeAvailabilityZones
          - ec2:DescribeSubnets
          - ec2:RunInstances
          - ec2:CreateTags
          - ec2:DescribeLaunchTemplateVersions
          - autoscaling:CreateAutoScalingGroup
          - autoscaling:DescribeLifecycleHooks
          - autoscaling:DescribeNotificationConfigurations
          - autoscaling:CreateAutoScalingGroup
          - autoscaling:CreateOrUpdateTags
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:ExitStandby
          - autoscaling:PutLifecycleHook
          - autoscaling:PutScalingPolicy
          - autoscaling:ResumeProcesses
          - autoscaling:SetInstanceProtection
          - autoscaling:UpdateAutoScalingGroup
          - events:PutRule
          - events:PutTargets
        read:
          - gamelift:DescribeGameServerGroup
        update:
          - gamelift:UpdateGameServerGroup
          - iam:assumeRole
          - iam:PassRole
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:UpdateAutoScalingGroup
          - autoscaling:SetInstanceProtection
        delete:
          - gamelift:DeleteGameServerGroup
          - gamelift:DescribeGameServerGroup
          - iam:assumeRole
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - ec2:DescribeAvailabilityZones
          - ec2:DescribeSubnets
          - ec2:DescribeLaunchTemplateVersions
          - autoscaling:CreateAutoScalingGroup
          - autoscaling:DescribeLifecycleHooks
          - autoscaling:DescribeNotificationConfigurations
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:ExitStandby
          - autoscaling:PutLifecycleHook
          - autoscaling:PutScalingPolicy
          - autoscaling:ResumeProcesses
          - autoscaling:SetInstanceProtection
          - autoscaling:UpdateAutoScalingGroup
          - autoscaling:DeleteAutoScalingGroup
          - events:PutRule
          - events:PutTargets
        list:
          - gamelift:ListGameServerGroups
    AutoScalingGroupArn:
      type: string
      description: A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.
      minLength: 0
      maxLength: 256
      pattern: "[ -퟿-�𐀀-􏿿\r\n\t]*"
    CreationTime:
      type: string
      description: A timestamp that indicates when this data object was created.
    LastUpdatedTime:
      type: string
      description: A timestamp that indicates when this game server group was last updated.
    Status:
      type: string
      description: The current status of the game server group.
      enum:
        - NEW
        - ACTIVATING
        - ACTIVE
        - DELETE_SCHEDULED
        - DELETING
        - DELETED
        - ERROR
    StatusReason:
      type: string
      description: Additional information about the current game server group status.
      minLength: 1
      maxLength: 1024
    SuspendedActions:
      type: array
      items:
        type: string
        enum:
          - REPLACE_INSTANCE_TYPES
    GameSessionQueueDestination:
      type: object
      description: A fleet or alias designated in a game session queue.
      properties:
        DestinationArn:
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z0-9:/-]+'
      additionalProperties: false
    PlayerLatencyPolicy:
      type: object
      description: Sets a latency cap for individual players when placing a game session.
      properties:
        MaximumIndividualPlayerLatencyMilliseconds:
          type: integer
          description: The maximum latency value that is allowed for any player, in milliseconds. All policies must have a value set for this property.
          minimum: 0
        PolicyDurationSeconds:
          type: integer
          description: The length of time, in seconds, that the policy is enforced while placing a new game session.
          minimum: 0
      additionalProperties: false
    AllowedLocations:
      type: array
      x-insertionOrder: false
      description: A list of locations to allow game session placement in, in the form of AWS Region codes such as us-west-2.
      minItems: 1
      maxItems: 100
      items:
        type: string
        minLength: 1
        maxLength: 64
        pattern: ^[a-z]+(-([a-z]+|\d))*
    FilterConfiguration:
      type: object
      properties:
        AllowedLocations:
          $ref: '#/components/schemas/AllowedLocations'
      additionalProperties: false
    LocationOrder:
      description: The prioritization order to use for fleet locations, when the PriorityOrder property includes LOCATION.
      type: array
      x-insertionOrder: true
      minItems: 1
      maxItems: 100
      items:
        type: string
        minLength: 1
        maxLength: 64
        pattern: ^[A-Za-z0-9\-]+
    PriorityOrder:
      description: The recommended sequence to use when prioritizing where to place new game sessions.
      type: array
      x-insertionOrder: true
      minItems: 1
      maxItems: 4
      items:
        type: string
        enum:
          - LATENCY
          - COST
          - DESTINATION
          - LOCATION
    PriorityConfiguration:
      type: object
      properties:
        LocationOrder:
          $ref: '#/components/schemas/LocationOrder'
        PriorityOrder:
          $ref: '#/components/schemas/PriorityOrder'
      additionalProperties: false
    GameSessionQueue:
      type: object
      properties:
        Name:
          description: A descriptive label that is associated with game session queue. Queue names must be unique within each Region.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z0-9-]+'
        TimeoutInSeconds:
          description: The maximum time, in seconds, that a new game session placement request remains in the queue.
          type: integer
          minimum: 0
        Destinations:
          description: A list of fleets and/or fleet aliases that can be used to fulfill game session placement requests in the queue.
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/GameSessionQueueDestination'
        PlayerLatencyPolicies:
          description: A set of policies that act as a sliding cap on player latency.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PlayerLatencyPolicy'
        CustomEventData:
          description: Information that is added to all events that are related to this game session queue.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[\s\S]*'
        NotificationTarget:
          description: An SNS topic ARN that is set up to receive game session placement notifications.
          type: string
          minLength: 1
          maxLength: 300
          pattern: '[a-zA-Z0-9:_-]*(\.fifo)?'
        FilterConfiguration:
          description: A list of locations where a queue is allowed to place new game sessions.
          type: object
          $ref: '#/components/schemas/FilterConfiguration'
        PriorityConfiguration:
          description: Custom settings to use when prioritizing destinations and locations for game session placements.
          type: object
          $ref: '#/components/schemas/PriorityConfiguration'
        Arn:
          description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift game session queue resource and uniquely identifies it.
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^arn:.*:gamesessionqueue\/[a-zA-Z0-9-]+
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: game_session_queue
      description: The AWS::GameLift::GameSessionQueue resource creates an Amazon GameLift (GameLift) game session queue.
      x-type-name: AWS::GameLift::GameSessionQueue
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - gamelift:CreateGameSessionQueue
          - gamelift:ListTagsForResource
          - gamelift:TagResource
        read:
          - gamelift:DescribeGameSessionQueues
          - gamelift:ListTagsForResource
        delete:
          - gamelift:DescribeGameSessionQueues
          - gamelift:DeleteGameSessionQueue
        update:
          - gamelift:UpdateGameSessionQueue
          - gamelift:ListTagsForResource
          - gamelift:TagResource
          - gamelift:UntagResource
        list:
          - gamelift:DescribeGameSessionQueues
    GameProperty:
      description: A key-value pair that contains information about a game session.
      type: object
      properties:
        Key:
          type: string
          description: The game property identifier.
          maxLength: 32
        Value:
          type: string
          description: The game property value.
          maxLength: 96
      required:
        - Key
        - Value
      additionalProperties: false
    MatchmakingConfiguration:
      type: object
      properties:
        AcceptanceRequired:
          description: A flag that indicates whether a match that was created with this configuration must be accepted by the matched players
          type: boolean
        AcceptanceTimeoutSeconds:
          description: The length of time (in seconds) to wait for players to accept a proposed match, if acceptance is required.
          type: integer
          minimum: 1
          maximum: 600
        AdditionalPlayerCount:
          description: The number of player slots in a match to keep open for future players.
          type: integer
          minimum: 0
        BackfillMode:
          description: The method used to backfill game sessions created with this matchmaking configuration.
          type: string
          enum:
            - AUTOMATIC
            - MANUAL
        Arn:
          description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift matchmaking configuration resource and uniquely identifies it.
          type: string
          pattern: ^arn:.*:matchmakingconfiguration\/[a-zA-Z0-9-\.]*
        CreationTime:
          description: A time stamp indicating when this data object was created.
          type: string
        CustomEventData:
          description: Information to attach to all events related to the matchmaking configuration.
          type: string
          minLength: 0
          maxLength: 256
        Description:
          description: A descriptive label that is associated with matchmaking configuration.
          type: string
          minLength: 1
          maxLength: 1024
        FlexMatchMode:
          description: Indicates whether this matchmaking configuration is being used with Amazon GameLift hosting or as a standalone matchmaking solution.
          type: string
          enum:
            - STANDALONE
            - WITH_QUEUE
        GameProperties:
          description: A set of custom properties for a game session, formatted as key:value pairs.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 16
          items:
            $ref: '#/components/schemas/GameProperty'
        GameSessionData:
          description: A set of custom game session properties, formatted as a single string value.
          type: string
          minLength: 1
          maxLength: 4096
        GameSessionQueueArns:
          description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift game session queue resource and uniquely identifies it.
          type: array
          x-insertionOrder: false
          items:
            type: string
            pattern: '[a-zA-Z0-9:/-]+'
            minLength: 1
            maxLength: 256
        Name:
          description: A unique identifier for the matchmaking configuration.
          type: string
          pattern: '[a-zA-Z0-9-\.]*'
          maxLength: 128
        NotificationTarget:
          description: An SNS topic ARN that is set up to receive matchmaking notifications.
          type: string
          pattern: '[a-zA-Z0-9:_/-]*(.fifo)?'
          minLength: 0
          maxLength: 300
        RequestTimeoutSeconds:
          description: The maximum duration, in seconds, that a matchmaking ticket can remain in process before timing out.
          type: integer
          minimum: 1
          maximum: 43200
        RuleSetArn:
          description: The Amazon Resource Name (ARN) associated with the GameLift matchmaking rule set resource that this configuration uses.
          type: string
          pattern: ^arn:.*:matchmakingruleset\/[a-zA-Z0-9-\.]*
        RuleSetName:
          description: A unique identifier for the matchmaking rule set to use with this configuration.
          type: string
          pattern: '[a-zA-Z0-9-\.]*'
          maxLength: 128
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AcceptanceRequired
        - Name
        - RequestTimeoutSeconds
        - RuleSetName
      x-stackql-resource-name: matchmaking_configuration
      description: The AWS::GameLift::MatchmakingConfiguration resource creates an Amazon GameLift (GameLift) matchmaking configuration.
      x-type-name: AWS::GameLift::MatchmakingConfiguration
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - AcceptanceRequired
        - Name
        - RequestTimeoutSeconds
        - RuleSetName
      x-tagging:
        taggable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - gamelift:CreateMatchmakingConfiguration
          - gamelift:ListTagsForResource
          - gamelift:TagResource
          - gamelift:DescribeMatchmakingConfigurations
        read:
          - gamelift:DescribeMatchmakingConfigurations
          - gamelift:ListTagsForResource
        delete:
          - gamelift:DescribeMatchmakingConfigurations
          - gamelift:DeleteMatchmakingConfiguration
        list:
          - gamelift:DescribeMatchmakingConfigurations
        update:
          - gamelift:DescribeMatchmakingConfigurations
          - gamelift:UpdateMatchmakingConfiguration
          - gamelift:ListTagsForResource
          - gamelift:TagResource
          - gamelift:UntagResource
    MatchmakingRuleSet:
      type: object
      properties:
        Name:
          description: A unique identifier for the matchmaking rule set.
          type: string
          maxLength: 128
          pattern: '[a-zA-Z0-9-\.]*'
        RuleSetBody:
          description: A collection of matchmaking rules, formatted as a JSON string.
          type: string
          minLength: 1
          maxLength: 65535
        CreationTime:
          description: A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds.
          type: string
        Arn:
          description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift matchmaking rule set resource and uniquely identifies it.
          type: string
          pattern: ^arn:.*:matchmakingruleset\/[a-zA-Z0-9-\.]*
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - RuleSetBody
      x-stackql-resource-name: matchmaking_rule_set
      description: The AWS::GameLift::MatchmakingRuleSet resource creates an Amazon GameLift (GameLift) matchmaking rule set.
      x-type-name: AWS::GameLift::MatchmakingRuleSet
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - RuleSetBody
      x-read-only-properties:
        - Arn
        - CreationTime
      x-required-properties:
        - Name
        - RuleSetBody
      x-tagging:
        taggable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - gamelift:CreateMatchmakingRuleSet
          - gamelift:DescribeMatchmakingRuleSets
          - gamelift:ValidateMatchmakingRuleSet
          - gamelift:ListTagsForResource
          - gamelift:TagResource
        read:
          - gamelift:DescribeMatchmakingRuleSets
          - gamelift:ValidateMatchmakingRuleSet
          - gamelift:ListTagsForResource
        delete:
          - gamelift:DeleteMatchmakingRuleSet
        update:
          - gamelift:DescribeMatchmakingRuleSets
          - gamelift:ListTagsForResource
          - gamelift:TagResource
          - gamelift:UntagResource
        list:
          - gamelift:DescribeMatchmakingRuleSets
    S3Location:
      x-$comment: Contains object details present in the S3 Bucket
      type: object
      additionalProperties: false
      properties:
        Bucket:
          description: An Amazon S3 bucket identifier. This is the name of the S3 bucket.
          type: string
          minLength: 1
        Key:
          description: The name of the zip file that contains the script files.
          type: string
          minLength: 1
        ObjectVersion:
          description: The version of the file, if object versioning is turned on for the bucket. Amazon GameLift uses this information when retrieving files from your S3 bucket. To retrieve a specific version of the file, provide an object version. To retrieve the latest version of the file, do not set this parameter.
          type: string
          minLength: 1
        RoleArn:
          description: The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access the S3 bucket.
          type: string
          minLength: 1
      required:
        - Bucket
        - Key
        - RoleArn
    Script:
      type: object
      properties:
        Name:
          type: string
          description: A descriptive label that is associated with a script. Script names do not need to be unique.
          minLength: 1
          maxLength: 1024
        StorageLocation:
          type: object
          description: >-
            The location of the Amazon S3 bucket where a zipped file containing your Realtime scripts is stored. The storage location must specify the Amazon S3 bucket name, the zip file name (the "key"), and a role ARN that allows Amazon GameLift to access the Amazon S3 storage location. The S3 bucket must be in the same Region where you want to create a new script. By default, Amazon GameLift uploads the latest version of the zip file; if you have S3 object versioning turned on, you can use
            the ObjectVersion parameter to specify an earlier version.
          $ref: '#/components/schemas/S3Location'
        Version:
          description: The version that is associated with a script. Version strings do not need to be unique.
          type: string
          minLength: 1
          maxLength: 1024
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
          type: string
        Arn:
          description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift script resource and uniquely identifies it. ARNs are unique across all Regions. In a GameLift script ARN, the resource ID matches the Id value.
          pattern: ^arn:.*:script\/script-\S+
          type: string
        Id:
          description: A unique identifier for the Realtime script
          pattern: ^script-\S+
          type: string
        SizeOnDisk:
          description: The file size of the uploaded Realtime script, expressed in bytes. When files are uploaded from an S3 location, this value remains at "0".
          type: integer
          minimum: 1
      required:
        - StorageLocation
      x-stackql-resource-name: script
      description: The AWS::GameLift::Script resource creates a new script record for your Realtime Servers script. Realtime scripts are JavaScript that provide configuration settings and optional custom game logic for your game. The script is deployed when you create a Realtime Servers fleet to host your game sessions. Script logic is executed during an active game session.
      x-type-name: AWS::GameLift::Script
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - CreationTime
        - Arn
        - SizeOnDisk
      x-required-properties:
        - StorageLocation
      x-tagging:
        taggable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - gamelift:CreateScript
          - gamelift:ListTagsForResource
          - gamelift:TagResource
          - gamelift:DescribeScript
          - iam:PassRole
        read:
          - gamelift:DescribeScript
          - gamelift:ListScripts
          - gamelift:ListTagsForResource
        delete:
          - gamelift:DeleteScript
        list:
          - gamelift:ListScripts
          - gamelift:DescribeScript
        update:
          - gamelift:DescribeScript
          - gamelift:UpdateScript
          - gamelift:ListTagsForResource
          - gamelift:TagResource
          - gamelift:UntagResource
          - iam:PassRole
    CreateAliasRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              description: A human-readable description of the alias.
              type: string
              minLength: 1
              maxLength: 1024
            Name:
              description: A descriptive label that is associated with an alias. Alias names do not need to be unique.
              type: string
              minLength: 1
              maxLength: 1024
              pattern: .*\S.*
            RoutingStrategy:
              description: A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message.
              $ref: '#/components/schemas/RoutingStrategy'
            AliasId:
              description: Unique alias ID
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateAliasRequest
      type: object
      required: []
    CreateBuildRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            BuildId:
              description: A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
              type: string
            Name:
              description: A descriptive label that is associated with a build. Build names do not need to be unique.
              type: string
            OperatingSystem:
              description: The operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build. If your game build contains multiple executables, they all must run on the same operating system. If an operating system is not specified when creating a build, Amazon GameLift uses the default value (WINDOWS_2012). This value cannot be changed later.
              type: string
              enum:
                - AMAZON_LINUX
                - AMAZON_LINUX_2
                - AMAZON_LINUX_2023
                - WINDOWS_2012
                - WINDOWS_2016
            StorageLocation:
              description: Information indicating where your game build files are stored. Use this parameter only when creating a build with files stored in an Amazon S3 bucket that you own. The storage location must specify an Amazon S3 bucket name and key. The location must also specify a role ARN that you set up to allow Amazon GameLift to access your Amazon S3 bucket. The S3 bucket and your new build must be in the same Region.
              $ref: '#/components/schemas/StorageLocation'
            Version:
              description: Version information that is associated with this build. Version strings do not need to be unique.
              type: string
            ServerSdkVersion:
              description: A server SDK version you used when integrating your game server build with Amazon GameLift. By default Amazon GameLift sets this value to 4.0.2.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateBuildRequest
      type: object
      required: []
    CreateLocationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            LocationName:
              type: string
              minLength: 8
              maxLength: 64
              pattern: ^custom-[A-Za-z0-9\-]+
            LocationArn:
              type: string
              pattern: ^arn:.*:location/custom-\S+
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateLocationRequest
      type: object
      required: []
    CreateFleetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ScalingPolicies:
              maxItems: 50
              description: A list of rules that control how a fleet is scaled.
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/ScalingPolicy'
            Description:
              minLength: 1
              description: A human-readable description of a fleet.
              type: string
              maxLength: 1024
            PeerVpcId:
              minLength: 1
              pattern: ^vpc-\S+
              description: A unique identifier for a VPC with resources to be accessed by your Amazon GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the VPC Dashboard in the AWS Management Console.
              type: string
              maxLength: 1024
            ApplyCapacity:
              description: Determines whether to apply fleet or location capacities on fleet creation.
              type: string
              enum:
                - ON_UPDATE
                - ON_CREATE_AND_UPDATE
            EC2InboundPermissions:
              maxItems: 50
              description: A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an Amazon GameLift server.
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/IpPermission'
            ComputeType:
              description: ComputeType to differentiate EC2 hardware managed by GameLift and Anywhere hardware managed by the customer.
              type: string
              enum:
                - EC2
                - ANYWHERE
            Name:
              minLength: 1
              description: A descriptive label that is associated with a fleet. Fleet names do not need to be unique.
              type: string
              maxLength: 1024
            AnywhereConfiguration:
              description: Configuration for Anywhere fleet.
              $ref: '#/components/schemas/AnywhereConfiguration'
            InstanceRoleARN:
              minLength: 1
              pattern: ^arn:aws(-.*)?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
              description: A unique identifier for an AWS IAM role that manages access to your AWS services. With an instance role ARN set, any application that runs on an instance in this fleet can assume the role, including install scripts, server processes, and daemons (background processes). Create a role or look up a role's ARN from the IAM dashboard in the AWS Management Console.
              type: string
            FleetId:
              pattern: ^fleet-\S+
              description: Unique fleet ID
              type: string
            CertificateConfiguration:
              description: Indicates whether to generate a TLS/SSL certificate for the new fleet. TLS certificates are used for encrypting traffic between game clients and game servers running on GameLift. If this parameter is not set, certificate generation is disabled. This fleet setting cannot be changed once the fleet is created.
              $ref: '#/components/schemas/CertificateConfiguration'
            InstanceRoleCredentialsProvider:
              description: Credentials provider implementation that loads credentials from the Amazon EC2 Instance Metadata Service.
              type: string
              enum:
                - SHARED_CREDENTIAL_FILE
            DesiredEC2Instances:
              description: '[DEPRECATED] The number of EC2 instances that you want this fleet to host. When creating a new fleet, GameLift automatically sets this value to "1" and initiates a single instance. Once the fleet is active, update this value to trigger GameLift to add or remove instances from the fleet.'
              type: integer
              minimum: 0
            ServerLaunchParameters:
              minLength: 1
              description: This parameter is no longer used but is retained for backward compatibility. Instead, specify server launch parameters in the RuntimeConfiguration parameter. A request must specify either a runtime configuration or values for both ServerLaunchParameters and ServerLaunchPath.
              type: string
              maxLength: 1024
            FleetType:
              description: Indicates whether to use On-Demand instances or Spot instances for this fleet. If empty, the default is ON_DEMAND. Both categories of instances use identical hardware and configurations based on the instance type selected for this fleet.
              type: string
              enum:
                - ON_DEMAND
                - SPOT
            Locations:
              minItems: 1
              maxItems: 100
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/LocationConfiguration'
            NewGameSessionProtectionPolicy:
              description: A game session protection policy to apply to all game sessions hosted on instances in this fleet. When protected, active game sessions cannot be terminated during a scale-down event. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet's protection policy to affect future game sessions on the fleet. You can also set protection for individual game sessions.
              type: string
              enum:
                - FullProtection
                - NoProtection
            ScriptId:
              pattern: ^script-\S+|^arn:.*:script/script-\S+
              description: |-
                A unique identifier for a Realtime script to be deployed on a new Realtime Servers fleet. The script must have been successfully uploaded to Amazon GameLift. This fleet setting cannot be changed once the fleet is created.

                Note: It is not currently possible to use the !Ref command to reference a script created with a CloudFormation template for the fleet property ScriptId. Instead, use Fn::GetAtt Script.Arn or Fn::GetAtt Script.Id to retrieve either of these properties as input for ScriptId. Alternatively, enter a ScriptId string manually.
              type: string
            MaxSize:
              description: '[DEPRECATED] The maximum value that is allowed for the fleet''s instance count. When creating a new fleet, GameLift automatically sets this value to "1". Once the fleet is active, you can change this value.'
              type: integer
              minimum: 0
            RuntimeConfiguration:
              description: >-
                Instructions for launching server processes on each instance in the fleet. Server processes run either a custom game build executable or a Realtime script. The runtime configuration defines the server executables or launch script file, launch parameters, and the number of processes to run concurrently on each instance. When creating a fleet, the runtime configuration must have at least one server process configuration; otherwise the request fails with an invalid request
                exception.


                This parameter is required unless the parameters ServerLaunchPath and ServerLaunchParameters are defined. Runtime configuration has replaced these parameters, but fleets that use them will continue to work.
              $ref: '#/components/schemas/RuntimeConfiguration'
            LogPaths:
              description: This parameter is no longer used. When hosting a custom game build, specify where Amazon GameLift should store log files using the Amazon GameLift server API call ProcessReady()
              x-insertionOrder: false
              type: array
              items:
                type: string
            ServerLaunchPath:
              minLength: 1
              description: This parameter is no longer used. Instead, specify a server launch path using the RuntimeConfiguration parameter. Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work.
              type: string
              maxLength: 1024
            MinSize:
              description: '[DEPRECATED] The minimum value allowed for the fleet''s instance count. When creating a new fleet, GameLift automatically sets this value to "0". After the fleet is active, you can change this value.'
              type: integer
              minimum: 0
            PeerVpcAwsAccountId:
              minLength: 1
              pattern: ^[0-9]{12}$
              description: A unique identifier for the AWS account with the VPC that you want to peer your Amazon GameLift fleet with. You can find your account ID in the AWS Management Console under account settings.
              type: string
              maxLength: 1024
            MetricGroups:
              maxItems: 1
              description: The name of an Amazon CloudWatch metric group. A metric group aggregates the metrics for all fleets in the group. Specify a string containing the metric group name. You can use an existing name or use a new name to create a new metric group. Currently, this parameter can have only one string.
              x-insertionOrder: false
              type: array
              items:
                type: string
            BuildId:
              pattern: ^build-\S+|^arn:.*:build/build-\S+
              description: A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
              type: string
            ResourceCreationLimitPolicy:
              description: A policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
              $ref: '#/components/schemas/ResourceCreationLimitPolicy'
            EC2InstanceType:
              pattern: ^.*..*$
              description: The name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See Amazon EC2 Instance Types for detailed descriptions.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateFleetRequest
      type: object
      required: []
    CreateGameServerGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AutoScalingGroupArn:
              description: A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.
              $ref: '#/components/schemas/AutoScalingGroupArn'
            AutoScalingPolicy:
              description: Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
              $ref: '#/components/schemas/AutoScalingPolicy'
            BalancingStrategy:
              description: The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
              $ref: '#/components/schemas/BalancingStrategy'
            DeleteOption:
              description: The type of delete to perform.
              $ref: '#/components/schemas/DeleteOption'
            GameServerGroupArn:
              description: A generated unique ID for the game server group.
              $ref: '#/components/schemas/GameServerGroupArn'
            GameServerGroupName:
              description: An identifier for the new game server group.
              $ref: '#/components/schemas/GameServerGroupName'
            GameServerProtectionPolicy:
              description: A flag that indicates whether instances in the game server group are protected from early termination.
              $ref: '#/components/schemas/GameServerProtectionPolicy'
            InstanceDefinitions:
              description: A set of EC2 instance types to use when creating instances in the group.
              $ref: '#/components/schemas/InstanceDefinitions'
            LaunchTemplate:
              description: The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
              $ref: '#/components/schemas/LaunchTemplate'
            MaxSize:
              description: The maximum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
              $ref: '#/components/schemas/MaxSize'
            MinSize:
              description: The minimum number of instances allowed in the EC2 Auto Scaling group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
              $ref: '#/components/schemas/MinSize'
            RoleArn:
              description: The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
              $ref: '#/components/schemas/RoleArn'
            Tags:
              description: A list of labels to assign to the new game server group resource. Updating game server group tags with CloudFormation will not take effect. Please update this property using AWS GameLift APIs instead.
              $ref: '#/components/schemas/Tags'
            VpcSubnets:
              description: A list of virtual private cloud (VPC) subnets to use with instances in the game server group. Updating this game server group property will not take effect for the created EC2 Auto Scaling group, please update the EC2 Auto Scaling group directly after creating the resource.
              $ref: '#/components/schemas/VpcSubnets'
          x-stackQL-stringOnly: true
      x-title: CreateGameServerGroupRequest
      type: object
      required: []
    CreateGameSessionQueueRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: A descriptive label that is associated with game session queue. Queue names must be unique within each Region.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z0-9-]+'
            TimeoutInSeconds:
              description: The maximum time, in seconds, that a new game session placement request remains in the queue.
              type: integer
              minimum: 0
            Destinations:
              description: A list of fleets and/or fleet aliases that can be used to fulfill game session placement requests in the queue.
              type: array
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/GameSessionQueueDestination'
            PlayerLatencyPolicies:
              description: A set of policies that act as a sliding cap on player latency.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/PlayerLatencyPolicy'
            CustomEventData:
              description: Information that is added to all events that are related to this game session queue.
              type: string
              minLength: 1
              maxLength: 256
              pattern: '[\s\S]*'
            NotificationTarget:
              description: An SNS topic ARN that is set up to receive game session placement notifications.
              type: string
              minLength: 1
              maxLength: 300
              pattern: '[a-zA-Z0-9:_-]*(\.fifo)?'
            FilterConfiguration:
              description: A list of locations where a queue is allowed to place new game sessions.
              type: object
              $ref: '#/components/schemas/FilterConfiguration'
            PriorityConfiguration:
              description: Custom settings to use when prioritizing destinations and locations for game session placements.
              type: object
              $ref: '#/components/schemas/PriorityConfiguration'
            Arn:
              description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift game session queue resource and uniquely identifies it.
              type: string
              minLength: 1
              maxLength: 256
              pattern: ^arn:.*:gamesessionqueue\/[a-zA-Z0-9-]+
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateGameSessionQueueRequest
      type: object
      required: []
    CreateMatchmakingConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AcceptanceRequired:
              description: A flag that indicates whether a match that was created with this configuration must be accepted by the matched players
              type: boolean
            AcceptanceTimeoutSeconds:
              description: The length of time (in seconds) to wait for players to accept a proposed match, if acceptance is required.
              type: integer
              minimum: 1
              maximum: 600
            AdditionalPlayerCount:
              description: The number of player slots in a match to keep open for future players.
              type: integer
              minimum: 0
            BackfillMode:
              description: The method used to backfill game sessions created with this matchmaking configuration.
              type: string
              enum:
                - AUTOMATIC
                - MANUAL
            Arn:
              description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift matchmaking configuration resource and uniquely identifies it.
              type: string
              pattern: ^arn:.*:matchmakingconfiguration\/[a-zA-Z0-9-\.]*
            CreationTime:
              description: A time stamp indicating when this data object was created.
              type: string
            CustomEventData:
              description: Information to attach to all events related to the matchmaking configuration.
              type: string
              minLength: 0
              maxLength: 256
            Description:
              description: A descriptive label that is associated with matchmaking configuration.
              type: string
              minLength: 1
              maxLength: 1024
            FlexMatchMode:
              description: Indicates whether this matchmaking configuration is being used with Amazon GameLift hosting or as a standalone matchmaking solution.
              type: string
              enum:
                - STANDALONE
                - WITH_QUEUE
            GameProperties:
              description: A set of custom properties for a game session, formatted as key:value pairs.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 16
              items:
                $ref: '#/components/schemas/GameProperty'
            GameSessionData:
              description: A set of custom game session properties, formatted as a single string value.
              type: string
              minLength: 1
              maxLength: 4096
            GameSessionQueueArns:
              description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift game session queue resource and uniquely identifies it.
              type: array
              x-insertionOrder: false
              items:
                type: string
                pattern: '[a-zA-Z0-9:/-]+'
                minLength: 1
                maxLength: 256
            Name:
              description: A unique identifier for the matchmaking configuration.
              type: string
              pattern: '[a-zA-Z0-9-\.]*'
              maxLength: 128
            NotificationTarget:
              description: An SNS topic ARN that is set up to receive matchmaking notifications.
              type: string
              pattern: '[a-zA-Z0-9:_/-]*(.fifo)?'
              minLength: 0
              maxLength: 300
            RequestTimeoutSeconds:
              description: The maximum duration, in seconds, that a matchmaking ticket can remain in process before timing out.
              type: integer
              minimum: 1
              maximum: 43200
            RuleSetArn:
              description: The Amazon Resource Name (ARN) associated with the GameLift matchmaking rule set resource that this configuration uses.
              type: string
              pattern: ^arn:.*:matchmakingruleset\/[a-zA-Z0-9-\.]*
            RuleSetName:
              description: A unique identifier for the matchmaking rule set to use with this configuration.
              type: string
              pattern: '[a-zA-Z0-9-\.]*'
              maxLength: 128
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateMatchmakingConfigurationRequest
      type: object
      required: []
    CreateMatchmakingRuleSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: A unique identifier for the matchmaking rule set.
              type: string
              maxLength: 128
              pattern: '[a-zA-Z0-9-\.]*'
            RuleSetBody:
              description: A collection of matchmaking rules, formatted as a JSON string.
              type: string
              minLength: 1
              maxLength: 65535
            CreationTime:
              description: A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds.
              type: string
            Arn:
              description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift matchmaking rule set resource and uniquely identifies it.
              type: string
              pattern: ^arn:.*:matchmakingruleset\/[a-zA-Z0-9-\.]*
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              minItems: 1
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateMatchmakingRuleSetRequest
      type: object
      required: []
    CreateScriptRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
              description: A descriptive label that is associated with a script. Script names do not need to be unique.
              minLength: 1
              maxLength: 1024
            StorageLocation:
              type: object
              description: >-
                The location of the Amazon S3 bucket where a zipped file containing your Realtime scripts is stored. The storage location must specify the Amazon S3 bucket name, the zip file name (the "key"), and a role ARN that allows Amazon GameLift to access the Amazon S3 storage location. The S3 bucket must be in the same Region where you want to create a new script. By default, Amazon GameLift uploads the latest version of the zip file; if you have S3 object versioning turned on, you can
                use the ObjectVersion parameter to specify an earlier version.
              $ref: '#/components/schemas/S3Location'
            Version:
              description: The version that is associated with a script. Version strings do not need to be unique.
              type: string
              minLength: 1
              maxLength: 1024
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            CreationTime:
              description: A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
              type: string
            Arn:
              description: The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift script resource and uniquely identifies it. ARNs are unique across all Regions. In a GameLift script ARN, the resource ID matches the Id value.
              pattern: ^arn:.*:script\/script-\S+
              type: string
            Id:
              description: A unique identifier for the Realtime script
              pattern: ^script-\S+
              type: string
            SizeOnDisk:
              description: The file size of the uploaded Realtime script, expressed in bytes. When files are uploaded from an S3 location, this value remains at "0".
              type: integer
              minimum: 1
          x-stackQL-stringOnly: true
      x-title: CreateScriptRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    aliases:
      name: aliases
      id: aws.gamelift.aliases
      x-cfn-schema-name: Alias
      x-cfn-type-name: AWS::GameLift::Alias
      x-identifiers:
        - AliasId
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Alias&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Alias"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Alias"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/aliases/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/aliases/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AliasId') as alias_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Alias'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AliasId') as alias_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Alias'
                AND region = 'us-east-1'
    alias:
      name: alias
      id: aws.gamelift.alias
      x-cfn-schema-name: Alias
      x-cfn-type-name: AWS::GameLift::Alias
      x-identifiers:
        - AliasId
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Alias"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/alias/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoutingStrategy') as routing_strategy,
              JSON_EXTRACT(Properties, '$.AliasId') as alias_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Alias'
              AND data__Identifier = '<AliasId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RoutingStrategy') as routing_strategy,
                json_extract_path_text(Properties, 'AliasId') as alias_id
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Alias'
                AND data__Identifier = '<AliasId>'
                AND region = 'us-east-1'
    builds:
      name: builds
      id: aws.gamelift.builds
      x-cfn-schema-name: Build
      x-cfn-type-name: AWS::GameLift::Build
      x-identifiers:
        - BuildId
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Build&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Build"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Build"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/builds/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/builds/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.BuildId') as build_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Build'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'BuildId') as build_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Build'
                AND region = 'us-east-1'
    build:
      name: build
      id: aws.gamelift.build
      x-cfn-schema-name: Build
      x-cfn-type-name: AWS::GameLift::Build
      x-identifiers:
        - BuildId
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Build"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/build/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BuildId') as build_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.OperatingSystem') as operating_system,
              JSON_EXTRACT(Properties, '$.StorageLocation') as storage_location,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.ServerSdkVersion') as server_sdk_version
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Build'
              AND data__Identifier = '<BuildId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'BuildId') as build_id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'OperatingSystem') as operating_system,
                json_extract_path_text(Properties, 'StorageLocation') as storage_location,
                json_extract_path_text(Properties, 'Version') as version,
                json_extract_path_text(Properties, 'ServerSdkVersion') as server_sdk_version
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Build'
                AND data__Identifier = '<BuildId>'
                AND region = 'us-east-1'
    locations:
      name: locations
      id: aws.gamelift.locations
      x-cfn-schema-name: Location
      x-cfn-type-name: AWS::GameLift::Location
      x-identifiers:
        - LocationName
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Location&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Location"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Location"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/locations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/locations/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LocationName') as location_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Location'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LocationName') as location_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Location'
                AND region = 'us-east-1'
    location:
      name: location
      id: aws.gamelift.location
      x-cfn-schema-name: Location
      x-cfn-type-name: AWS::GameLift::Location
      x-identifiers:
        - LocationName
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Location"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/location/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.LocationName') as location_name,
              JSON_EXTRACT(Properties, '$.LocationArn') as location_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Location'
              AND data__Identifier = '<LocationName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'LocationName') as location_name,
                json_extract_path_text(Properties, 'LocationArn') as location_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Location'
                AND data__Identifier = '<LocationName>'
                AND region = 'us-east-1'
    fleets:
      name: fleets
      id: aws.gamelift.fleets
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::GameLift::Fleet
      x-identifiers:
        - FleetId
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FleetId') as fleet_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Fleet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FleetId') as fleet_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Fleet'
                AND region = 'us-east-1'
    fleet:
      name: fleet
      id: aws.gamelift.fleet
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::GameLift::Fleet
      x-identifiers:
        - FleetId
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/fleet/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ScalingPolicies') as scaling_policies,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.PeerVpcId') as peer_vpc_id,
              JSON_EXTRACT(Properties, '$.ApplyCapacity') as apply_capacity,
              JSON_EXTRACT(Properties, '$.EC2InboundPermissions') as e_c2_inbound_permissions,
              JSON_EXTRACT(Properties, '$.ComputeType') as compute_type,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AnywhereConfiguration') as anywhere_configuration,
              JSON_EXTRACT(Properties, '$.InstanceRoleARN') as instance_role_arn,
              JSON_EXTRACT(Properties, '$.FleetId') as fleet_id,
              JSON_EXTRACT(Properties, '$.CertificateConfiguration') as certificate_configuration,
              JSON_EXTRACT(Properties, '$.InstanceRoleCredentialsProvider') as instance_role_credentials_provider,
              JSON_EXTRACT(Properties, '$.DesiredEC2Instances') as desired_ec2_instances,
              JSON_EXTRACT(Properties, '$.ServerLaunchParameters') as server_launch_parameters,
              JSON_EXTRACT(Properties, '$.FleetType') as fleet_type,
              JSON_EXTRACT(Properties, '$.Locations') as locations,
              JSON_EXTRACT(Properties, '$.NewGameSessionProtectionPolicy') as new_game_session_protection_policy,
              JSON_EXTRACT(Properties, '$.ScriptId') as script_id,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(Properties, '$.RuntimeConfiguration') as runtime_configuration,
              JSON_EXTRACT(Properties, '$.LogPaths') as log_paths,
              JSON_EXTRACT(Properties, '$.ServerLaunchPath') as server_launch_path,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.PeerVpcAwsAccountId') as peer_vpc_aws_account_id,
              JSON_EXTRACT(Properties, '$.MetricGroups') as metric_groups,
              JSON_EXTRACT(Properties, '$.BuildId') as build_id,
              JSON_EXTRACT(Properties, '$.ResourceCreationLimitPolicy') as resource_creation_limit_policy,
              JSON_EXTRACT(Properties, '$.EC2InstanceType') as e_c2_instance_type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Fleet'
              AND data__Identifier = '<FleetId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ScalingPolicies') as scaling_policies,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'PeerVpcId') as peer_vpc_id,
                json_extract_path_text(Properties, 'ApplyCapacity') as apply_capacity,
                json_extract_path_text(Properties, 'EC2InboundPermissions') as e_c2_inbound_permissions,
                json_extract_path_text(Properties, 'ComputeType') as compute_type,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'AnywhereConfiguration') as anywhere_configuration,
                json_extract_path_text(Properties, 'InstanceRoleARN') as instance_role_arn,
                json_extract_path_text(Properties, 'FleetId') as fleet_id,
                json_extract_path_text(Properties, 'CertificateConfiguration') as certificate_configuration,
                json_extract_path_text(Properties, 'InstanceRoleCredentialsProvider') as instance_role_credentials_provider,
                json_extract_path_text(Properties, 'DesiredEC2Instances') as desired_ec2_instances,
                json_extract_path_text(Properties, 'ServerLaunchParameters') as server_launch_parameters,
                json_extract_path_text(Properties, 'FleetType') as fleet_type,
                json_extract_path_text(Properties, 'Locations') as locations,
                json_extract_path_text(Properties, 'NewGameSessionProtectionPolicy') as new_game_session_protection_policy,
                json_extract_path_text(Properties, 'ScriptId') as script_id,
                json_extract_path_text(Properties, 'MaxSize') as max_size,
                json_extract_path_text(Properties, 'RuntimeConfiguration') as runtime_configuration,
                json_extract_path_text(Properties, 'LogPaths') as log_paths,
                json_extract_path_text(Properties, 'ServerLaunchPath') as server_launch_path,
                json_extract_path_text(Properties, 'MinSize') as min_size,
                json_extract_path_text(Properties, 'PeerVpcAwsAccountId') as peer_vpc_aws_account_id,
                json_extract_path_text(Properties, 'MetricGroups') as metric_groups,
                json_extract_path_text(Properties, 'BuildId') as build_id,
                json_extract_path_text(Properties, 'ResourceCreationLimitPolicy') as resource_creation_limit_policy,
                json_extract_path_text(Properties, 'EC2InstanceType') as e_c2_instance_type
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Fleet'
                AND data__Identifier = '<FleetId>'
                AND region = 'us-east-1'
    game_server_groups:
      name: game_server_groups
      id: aws.gamelift.game_server_groups
      x-cfn-schema-name: GameServerGroup
      x-cfn-type-name: AWS::GameLift::GameServerGroup
      x-identifiers:
        - GameServerGroupArn
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__GameServerGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::GameServerGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::GameServerGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/game_server_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/game_server_groups/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GameServerGroupArn') as game_server_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::GameServerGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GameServerGroupArn') as game_server_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::GameServerGroup'
                AND region = 'us-east-1'
    game_server_group:
      name: game_server_group
      id: aws.gamelift.game_server_group
      x-cfn-schema-name: GameServerGroup
      x-cfn-type-name: AWS::GameLift::GameServerGroup
      x-identifiers:
        - GameServerGroupArn
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::GameServerGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/game_server_group/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupArn') as auto_scaling_group_arn,
              JSON_EXTRACT(Properties, '$.AutoScalingPolicy') as auto_scaling_policy,
              JSON_EXTRACT(Properties, '$.BalancingStrategy') as balancing_strategy,
              JSON_EXTRACT(Properties, '$.DeleteOption') as delete_option,
              JSON_EXTRACT(Properties, '$.GameServerGroupArn') as game_server_group_arn,
              JSON_EXTRACT(Properties, '$.GameServerGroupName') as game_server_group_name,
              JSON_EXTRACT(Properties, '$.GameServerProtectionPolicy') as game_server_protection_policy,
              JSON_EXTRACT(Properties, '$.InstanceDefinitions') as instance_definitions,
              JSON_EXTRACT(Properties, '$.LaunchTemplate') as launch_template,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcSubnets') as vpc_subnets
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::GameServerGroup'
              AND data__Identifier = '<GameServerGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AutoScalingGroupArn') as auto_scaling_group_arn,
                json_extract_path_text(Properties, 'AutoScalingPolicy') as auto_scaling_policy,
                json_extract_path_text(Properties, 'BalancingStrategy') as balancing_strategy,
                json_extract_path_text(Properties, 'DeleteOption') as delete_option,
                json_extract_path_text(Properties, 'GameServerGroupArn') as game_server_group_arn,
                json_extract_path_text(Properties, 'GameServerGroupName') as game_server_group_name,
                json_extract_path_text(Properties, 'GameServerProtectionPolicy') as game_server_protection_policy,
                json_extract_path_text(Properties, 'InstanceDefinitions') as instance_definitions,
                json_extract_path_text(Properties, 'LaunchTemplate') as launch_template,
                json_extract_path_text(Properties, 'MaxSize') as max_size,
                json_extract_path_text(Properties, 'MinSize') as min_size,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'VpcSubnets') as vpc_subnets
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::GameServerGroup'
                AND data__Identifier = '<GameServerGroupArn>'
                AND region = 'us-east-1'
    game_session_queues:
      name: game_session_queues
      id: aws.gamelift.game_session_queues
      x-cfn-schema-name: GameSessionQueue
      x-cfn-type-name: AWS::GameLift::GameSessionQueue
      x-identifiers:
        - Name
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__GameSessionQueue&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::GameSessionQueue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::GameSessionQueue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/game_session_queues/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/game_session_queues/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::GameSessionQueue'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::GameSessionQueue'
                AND region = 'us-east-1'
    game_session_queue:
      name: game_session_queue
      id: aws.gamelift.game_session_queue
      x-cfn-schema-name: GameSessionQueue
      x-cfn-type-name: AWS::GameLift::GameSessionQueue
      x-identifiers:
        - Name
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::GameSessionQueue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/game_session_queue/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.TimeoutInSeconds') as timeout_in_seconds,
              JSON_EXTRACT(Properties, '$.Destinations') as destinations,
              JSON_EXTRACT(Properties, '$.PlayerLatencyPolicies') as player_latency_policies,
              JSON_EXTRACT(Properties, '$.CustomEventData') as custom_event_data,
              JSON_EXTRACT(Properties, '$.NotificationTarget') as notification_target,
              JSON_EXTRACT(Properties, '$.FilterConfiguration') as filter_configuration,
              JSON_EXTRACT(Properties, '$.PriorityConfiguration') as priority_configuration,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::GameSessionQueue'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'TimeoutInSeconds') as timeout_in_seconds,
                json_extract_path_text(Properties, 'Destinations') as destinations,
                json_extract_path_text(Properties, 'PlayerLatencyPolicies') as player_latency_policies,
                json_extract_path_text(Properties, 'CustomEventData') as custom_event_data,
                json_extract_path_text(Properties, 'NotificationTarget') as notification_target,
                json_extract_path_text(Properties, 'FilterConfiguration') as filter_configuration,
                json_extract_path_text(Properties, 'PriorityConfiguration') as priority_configuration,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::GameSessionQueue'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
    matchmaking_configurations:
      name: matchmaking_configurations
      id: aws.gamelift.matchmaking_configurations
      x-cfn-schema-name: MatchmakingConfiguration
      x-cfn-type-name: AWS::GameLift::MatchmakingConfiguration
      x-identifiers:
        - Name
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MatchmakingConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::MatchmakingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::MatchmakingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/matchmaking_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/matchmaking_configurations/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::MatchmakingConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::MatchmakingConfiguration'
                AND region = 'us-east-1'
    matchmaking_configuration:
      name: matchmaking_configuration
      id: aws.gamelift.matchmaking_configuration
      x-cfn-schema-name: MatchmakingConfiguration
      x-cfn-type-name: AWS::GameLift::MatchmakingConfiguration
      x-identifiers:
        - Name
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::MatchmakingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/matchmaking_configuration/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AcceptanceRequired') as acceptance_required,
              JSON_EXTRACT(Properties, '$.AcceptanceTimeoutSeconds') as acceptance_timeout_seconds,
              JSON_EXTRACT(Properties, '$.AdditionalPlayerCount') as additional_player_count,
              JSON_EXTRACT(Properties, '$.BackfillMode') as backfill_mode,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.CustomEventData') as custom_event_data,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.FlexMatchMode') as flex_match_mode,
              JSON_EXTRACT(Properties, '$.GameProperties') as game_properties,
              JSON_EXTRACT(Properties, '$.GameSessionData') as game_session_data,
              JSON_EXTRACT(Properties, '$.GameSessionQueueArns') as game_session_queue_arns,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.NotificationTarget') as notification_target,
              JSON_EXTRACT(Properties, '$.RequestTimeoutSeconds') as request_timeout_seconds,
              JSON_EXTRACT(Properties, '$.RuleSetArn') as rule_set_arn,
              JSON_EXTRACT(Properties, '$.RuleSetName') as rule_set_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::MatchmakingConfiguration'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AcceptanceRequired') as acceptance_required,
                json_extract_path_text(Properties, 'AcceptanceTimeoutSeconds') as acceptance_timeout_seconds,
                json_extract_path_text(Properties, 'AdditionalPlayerCount') as additional_player_count,
                json_extract_path_text(Properties, 'BackfillMode') as backfill_mode,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CreationTime') as creation_time,
                json_extract_path_text(Properties, 'CustomEventData') as custom_event_data,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'FlexMatchMode') as flex_match_mode,
                json_extract_path_text(Properties, 'GameProperties') as game_properties,
                json_extract_path_text(Properties, 'GameSessionData') as game_session_data,
                json_extract_path_text(Properties, 'GameSessionQueueArns') as game_session_queue_arns,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'NotificationTarget') as notification_target,
                json_extract_path_text(Properties, 'RequestTimeoutSeconds') as request_timeout_seconds,
                json_extract_path_text(Properties, 'RuleSetArn') as rule_set_arn,
                json_extract_path_text(Properties, 'RuleSetName') as rule_set_name,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::MatchmakingConfiguration'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
    matchmaking_rule_sets:
      name: matchmaking_rule_sets
      id: aws.gamelift.matchmaking_rule_sets
      x-cfn-schema-name: MatchmakingRuleSet
      x-cfn-type-name: AWS::GameLift::MatchmakingRuleSet
      x-identifiers:
        - Name
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MatchmakingRuleSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::MatchmakingRuleSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::MatchmakingRuleSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/matchmaking_rule_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/matchmaking_rule_sets/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::MatchmakingRuleSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::MatchmakingRuleSet'
                AND region = 'us-east-1'
    matchmaking_rule_set:
      name: matchmaking_rule_set
      id: aws.gamelift.matchmaking_rule_set
      x-cfn-schema-name: MatchmakingRuleSet
      x-cfn-type-name: AWS::GameLift::MatchmakingRuleSet
      x-identifiers:
        - Name
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::MatchmakingRuleSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/matchmaking_rule_set/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RuleSetBody') as rule_set_body,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::MatchmakingRuleSet'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RuleSetBody') as rule_set_body,
                json_extract_path_text(Properties, 'CreationTime') as creation_time,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::MatchmakingRuleSet'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
    scripts:
      name: scripts
      id: aws.gamelift.scripts
      x-cfn-schema-name: Script
      x-cfn-type-name: AWS::GameLift::Script
      x-identifiers:
        - Id
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Script&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Script"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Script"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/scripts/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/scripts/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Script'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GameLift::Script'
                AND region = 'us-east-1'
    script:
      name: script
      id: aws.gamelift.script
      x-cfn-schema-name: Script
      x-cfn-type-name: AWS::GameLift::Script
      x-identifiers:
        - Id
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GameLift::Script"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/script/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.StorageLocation') as storage_location,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SizeOnDisk') as size_on_disk
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Script'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'StorageLocation') as storage_location,
                json_extract_path_text(Properties, 'Version') as version,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CreationTime') as creation_time,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'SizeOnDisk') as size_on_disk
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GameLift::Script'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Alias&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAlias
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAliasRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Build&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateBuild
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateBuildRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Location&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLocation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLocationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFleet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFleetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__GameServerGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGameServerGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGameServerGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__GameSessionQueue&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGameSessionQueue
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGameSessionQueueRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MatchmakingConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMatchmakingConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMatchmakingConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MatchmakingRuleSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMatchmakingRuleSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMatchmakingRuleSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Script&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateScript
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateScriptRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
