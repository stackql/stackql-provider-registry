openapi: 3.0.0
info:
  title: PCAConnectorAD
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tags:
      type: object
      x-patternProperties:
        .+:
          type: string
      additionalProperties: false
    VpcInformation:
      type: object
      properties:
        SecurityGroupIds:
          type: array
          items:
            type: string
            maxLength: 20
            minLength: 11
            pattern: ^(?:sg-[0-9a-f]{8}|sg-[0-9a-f]{17})$
          maxItems: 5
          minItems: 1
          uniqueItems: true
      required:
        - SecurityGroupIds
      additionalProperties: false
    Connector:
      type: object
      properties:
        CertificateAuthorityArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:acm-pca:[\w-]+:[0-9]+:certificate-authority(\/[\w-]+)$
        ConnectorArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector(\/[\w-]+)$
        DirectoryId:
          type: string
          pattern: ^d-[0-9a-f]{10}$
        Tags:
          $ref: '#/components/schemas/Tags'
        VpcInformation:
          $ref: '#/components/schemas/VpcInformation'
      required:
        - CertificateAuthorityArn
        - DirectoryId
        - VpcInformation
      x-stackql-resource-name: connector
      description: Definition of AWS::PCAConnectorAD::Connector Resource Type
      x-type-name: AWS::PCAConnectorAD::Connector
      x-stackql-primary-identifier:
        - ConnectorArn
      x-create-only-properties:
        - CertificateAuthorityArn
        - DirectoryId
        - VpcInformation
      x-read-only-properties:
        - ConnectorArn
      x-required-properties:
        - CertificateAuthorityArn
        - DirectoryId
        - VpcInformation
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - pca-connector-ad:ListTagsForResource
          - pca-connector-ad:TagResource
          - pca-connector-ad:UntagResource
      x-required-permissions:
        create:
          - acm-pca:DescribeCertificateAuthority
          - acm-pca:GetCertificateAuthorityCertificate
          - acm-pca:GetCertificate
          - acm-pca:IssueCertificate
          - ds:DescribeDirectories
          - ec2:CreateTags
          - ec2:CreateVpcEndpoint
          - ec2:DescribeVpcEndpoints
          - pca-connector-ad:CreateConnector
          - pca-connector-ad:GetConnector
          - pca-connector-ad:TagResource
        read:
          - pca-connector-ad:ListTagsForResource
          - pca-connector-ad:GetConnector
        delete:
          - ec2:DeleteVpcEndpoints
          - ec2:DescribeVpcEndpoints
          - pca-connector-ad:GetConnector
          - pca-connector-ad:DeleteConnector
          - pca-connector-ad:UntagResource
        list:
          - pca-connector-ad:ListConnectors
        update:
          - pca-connector-ad:ListTagsForResource
          - pca-connector-ad:TagResource
          - pca-connector-ad:UntagResource
    DirectoryRegistration:
      type: object
      properties:
        DirectoryId:
          type: string
          pattern: ^d-[0-9a-f]{10}$
        DirectoryRegistrationArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:directory-registration(\/[\w-]+)$
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - DirectoryId
      x-stackql-resource-name: directory_registration
      description: Definition of AWS::PCAConnectorAD::DirectoryRegistration Resource Type
      x-type-name: AWS::PCAConnectorAD::DirectoryRegistration
      x-stackql-primary-identifier:
        - DirectoryRegistrationArn
      x-create-only-properties:
        - DirectoryId
      x-read-only-properties:
        - DirectoryRegistrationArn
      x-required-properties:
        - DirectoryId
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - pca-connector-ad:ListTagsForResource
          - pca-connector-ad:TagResource
          - pca-connector-ad:UntagResource
      x-required-permissions:
        create:
          - ds:AuthorizeApplication
          - ds:DescribeDirectories
          - pca-connector-ad:GetDirectoryRegistration
          - pca-connector-ad:CreateDirectoryRegistration
          - pca-connector-ad:TagResource
        read:
          - pca-connector-ad:GetDirectoryRegistration
          - pca-connector-ad:ListTagsForResource
        delete:
          - ds:DescribeDirectories
          - ds:UnauthorizeApplication
          - ds:UpdateAuthorizedApplication
          - pca-connector-ad:GetDirectoryRegistration
          - pca-connector-ad:DeleteDirectoryRegistration
          - pca-connector-ad:UntagResource
        list:
          - pca-connector-ad:ListDirectoryRegistrations
        update:
          - pca-connector-ad:ListTagsForResource
          - pca-connector-ad:TagResource
          - pca-connector-ad:UntagResource
    ServicePrincipalName:
      type: object
      properties:
        ConnectorArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector(\/[\w-]+)$
        DirectoryRegistrationArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:directory-registration(\/[\w-]+)$
      x-stackql-resource-name: service_principal_name
      description: Definition of AWS::PCAConnectorAD::ServicePrincipalName Resource Type
      x-type-name: AWS::PCAConnectorAD::ServicePrincipalName
      x-stackql-primary-identifier:
        - ConnectorArn
        - DirectoryRegistrationArn
      x-create-only-properties:
        - ConnectorArn
        - DirectoryRegistrationArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - ds:UpdateAuthorizedApplication
          - pca-connector-ad:GetServicePrincipalName
          - pca-connector-ad:CreateServicePrincipalName
        read:
          - pca-connector-ad:GetServicePrincipalName
        delete:
          - ds:UpdateAuthorizedApplication
          - pca-connector-ad:GetServicePrincipalName
          - pca-connector-ad:DeleteServicePrincipalName
        list:
          - pca-connector-ad:ListServicePrincipalNames
    ApplicationPolicies:
      type: object
      properties:
        Critical:
          type: boolean
        Policies:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPolicy'
          maxItems: 100
          minItems: 1
          uniqueItems: true
      required:
        - Policies
      additionalProperties: false
    ApplicationPolicy:
      oneOf:
        - type: object
          title: PolicyType
          properties:
            PolicyType:
              $ref: '#/components/schemas/ApplicationPolicyType'
          required:
            - PolicyType
          additionalProperties: false
        - type: object
          title: PolicyObjectIdentifier
          properties:
            PolicyObjectIdentifier:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^([0-2])\.([0-9]|([0-3][0-9]))(\.([0-9]+)){0,126}$
          required:
            - PolicyObjectIdentifier
          additionalProperties: false
    ApplicationPolicyType:
      type: string
      enum:
        - ALL_APPLICATION_POLICIES
        - ANY_PURPOSE
        - ATTESTATION_IDENTITY_KEY_CERTIFICATE
        - CERTIFICATE_REQUEST_AGENT
        - CLIENT_AUTHENTICATION
        - CODE_SIGNING
        - CTL_USAGE
        - DIGITAL_RIGHTS
        - DIRECTORY_SERVICE_EMAIL_REPLICATION
        - DISALLOWED_LIST
        - DNS_SERVER_TRUST
        - DOCUMENT_ENCRYPTION
        - DOCUMENT_SIGNING
        - DYNAMIC_CODE_GENERATOR
        - EARLY_LAUNCH_ANTIMALWARE_DRIVER
        - EMBEDDED_WINDOWS_SYSTEM_COMPONENT_VERIFICATION
        - ENCLAVE
        - ENCRYPTING_FILE_SYSTEM
        - ENDORSEMENT_KEY_CERTIFICATE
        - FILE_RECOVERY
        - HAL_EXTENSION
        - IP_SECURITY_END_SYSTEM
        - IP_SECURITY_IKE_INTERMEDIATE
        - IP_SECURITY_TUNNEL_TERMINATION
        - IP_SECURITY_USER
        - ISOLATED_USER_MODE
        - KDC_AUTHENTICATION
        - KERNEL_MODE_CODE_SIGNING
        - KEY_PACK_LICENSES
        - KEY_RECOVERY
        - KEY_RECOVERY_AGENT
        - LICENSE_SERVER_VERIFICATION
        - LIFETIME_SIGNING
        - MICROSOFT_PUBLISHER
        - MICROSOFT_TIME_STAMPING
        - MICROSOFT_TRUST_LIST_SIGNING
        - OCSP_SIGNING
        - OEM_WINDOWS_SYSTEM_COMPONENT_VERIFICATION
        - PLATFORM_CERTIFICATE
        - PREVIEW_BUILD_SIGNING
        - PRIVATE_KEY_ARCHIVAL
        - PROTECTED_PROCESS_LIGHT_VERIFICATION
        - PROTECTED_PROCESS_VERIFICATION
        - QUALIFIED_SUBORDINATION
        - REVOKED_LIST_SIGNER
        - ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION
        - ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION
        - ROOT_PROGRAM_NO_OSCP_FAILOVER_TO_CRL
        - ROOT_LIST_SIGNER
        - SECURE_EMAIL
        - SERVER_AUTHENTICATION
        - SMART_CARD_LOGIN
        - SPC_ENCRYPTED_DIGEST_RETRY_COUNT
        - SPC_RELAXED_PE_MARKER_CHECK
        - TIME_STAMPING
        - WINDOWS_HARDWARE_DRIVER_ATTESTED_VERIFICATION
        - WINDOWS_HARDWARE_DRIVER_EXTENDED_VERIFICATION
        - WINDOWS_HARDWARE_DRIVER_VERIFICATION
        - WINDOWS_HELLO_RECOVERY_KEY_ENCRYPTION
        - WINDOWS_KITS_COMPONENT
        - WINDOWS_RT_VERIFICATION
        - WINDOWS_SOFTWARE_EXTENSION_VERIFICATION
        - WINDOWS_STORE
        - WINDOWS_SYSTEM_COMPONENT_VERIFICATION
        - WINDOWS_TCB_COMPONENT
        - WINDOWS_THIRD_PARTY_APPLICATION_COMPONENT
        - WINDOWS_UPDATE
    CertificateValidity:
      type: object
      properties:
        ValidityPeriod:
          $ref: '#/components/schemas/ValidityPeriod'
        RenewalPeriod:
          $ref: '#/components/schemas/ValidityPeriod'
      required:
        - RenewalPeriod
        - ValidityPeriod
      additionalProperties: false
    ClientCompatibilityV2:
      type: string
      enum:
        - WINDOWS_SERVER_2003
        - WINDOWS_SERVER_2008
        - WINDOWS_SERVER_2008_R2
        - WINDOWS_SERVER_2012
        - WINDOWS_SERVER_2012_R2
        - WINDOWS_SERVER_2016
    ClientCompatibilityV3:
      type: string
      enum:
        - WINDOWS_SERVER_2008
        - WINDOWS_SERVER_2008_R2
        - WINDOWS_SERVER_2012
        - WINDOWS_SERVER_2012_R2
        - WINDOWS_SERVER_2016
    ClientCompatibilityV4:
      type: string
      enum:
        - WINDOWS_SERVER_2012
        - WINDOWS_SERVER_2012_R2
        - WINDOWS_SERVER_2016
    EnrollmentFlagsV2:
      type: object
      properties:
        IncludeSymmetricAlgorithms:
          type: boolean
        UserInteractionRequired:
          type: boolean
        RemoveInvalidCertificateFromPersonalStore:
          type: boolean
        NoSecurityExtension:
          type: boolean
        EnableKeyReuseOnNtTokenKeysetStorageFull:
          type: boolean
      additionalProperties: false
    EnrollmentFlagsV3:
      type: object
      properties:
        IncludeSymmetricAlgorithms:
          type: boolean
        UserInteractionRequired:
          type: boolean
        RemoveInvalidCertificateFromPersonalStore:
          type: boolean
        NoSecurityExtension:
          type: boolean
        EnableKeyReuseOnNtTokenKeysetStorageFull:
          type: boolean
      additionalProperties: false
    EnrollmentFlagsV4:
      type: object
      properties:
        IncludeSymmetricAlgorithms:
          type: boolean
        UserInteractionRequired:
          type: boolean
        RemoveInvalidCertificateFromPersonalStore:
          type: boolean
        NoSecurityExtension:
          type: boolean
        EnableKeyReuseOnNtTokenKeysetStorageFull:
          type: boolean
      additionalProperties: false
    ExtensionsV2:
      type: object
      properties:
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage'
        ApplicationPolicies:
          $ref: '#/components/schemas/ApplicationPolicies'
      required:
        - KeyUsage
      additionalProperties: false
    ExtensionsV3:
      type: object
      properties:
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage'
        ApplicationPolicies:
          $ref: '#/components/schemas/ApplicationPolicies'
      required:
        - KeyUsage
      additionalProperties: false
    ExtensionsV4:
      type: object
      properties:
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage'
        ApplicationPolicies:
          $ref: '#/components/schemas/ApplicationPolicies'
      required:
        - KeyUsage
      additionalProperties: false
    GeneralFlagsV2:
      type: object
      properties:
        AutoEnrollment:
          type: boolean
        MachineType:
          type: boolean
      additionalProperties: false
    GeneralFlagsV3:
      type: object
      properties:
        AutoEnrollment:
          type: boolean
        MachineType:
          type: boolean
      additionalProperties: false
    GeneralFlagsV4:
      type: object
      properties:
        AutoEnrollment:
          type: boolean
        MachineType:
          type: boolean
      additionalProperties: false
    HashAlgorithm:
      type: string
      enum:
        - SHA256
        - SHA384
        - SHA512
    KeySpec:
      type: string
      enum:
        - KEY_EXCHANGE
        - SIGNATURE
    KeyUsage:
      type: object
      properties:
        Critical:
          type: boolean
        UsageFlags:
          $ref: '#/components/schemas/KeyUsageFlags'
      required:
        - UsageFlags
      additionalProperties: false
    KeyUsageFlags:
      type: object
      properties:
        DigitalSignature:
          type: boolean
        NonRepudiation:
          type: boolean
        KeyEncipherment:
          type: boolean
        DataEncipherment:
          type: boolean
        KeyAgreement:
          type: boolean
      additionalProperties: false
    KeyUsageProperty:
      oneOf:
        - type: object
          title: PropertyType
          properties:
            PropertyType:
              $ref: '#/components/schemas/KeyUsagePropertyType'
          required:
            - PropertyType
          additionalProperties: false
        - type: object
          title: PropertyFlags
          properties:
            PropertyFlags:
              $ref: '#/components/schemas/KeyUsagePropertyFlags'
          required:
            - PropertyFlags
          additionalProperties: false
    KeyUsagePropertyFlags:
      type: object
      properties:
        Decrypt:
          type: boolean
        KeyAgreement:
          type: boolean
        Sign:
          type: boolean
      additionalProperties: false
    KeyUsagePropertyType:
      type: string
      enum:
        - ALL
    PrivateKeyAlgorithm:
      type: string
      enum:
        - RSA
        - ECDH_P256
        - ECDH_P384
        - ECDH_P521
    PrivateKeyAttributesV2:
      type: object
      properties:
        MinimalKeyLength:
          type: number
          minimum: 1
        KeySpec:
          $ref: '#/components/schemas/KeySpec'
        CryptoProviders:
          type: array
          items:
            type: string
            maxLength: 100
            minLength: 1
          maxItems: 100
          minItems: 1
          uniqueItems: true
      required:
        - KeySpec
        - MinimalKeyLength
      additionalProperties: false
    PrivateKeyAttributesV3:
      type: object
      properties:
        MinimalKeyLength:
          type: number
          minimum: 1
        KeySpec:
          $ref: '#/components/schemas/KeySpec'
        CryptoProviders:
          type: array
          items:
            type: string
            maxLength: 100
            minLength: 1
          maxItems: 100
          minItems: 1
          uniqueItems: true
        KeyUsageProperty:
          $ref: '#/components/schemas/KeyUsageProperty'
        Algorithm:
          $ref: '#/components/schemas/PrivateKeyAlgorithm'
      required:
        - Algorithm
        - KeySpec
        - KeyUsageProperty
        - MinimalKeyLength
      additionalProperties: false
    PrivateKeyAttributesV4:
      type: object
      properties:
        MinimalKeyLength:
          type: number
          minimum: 1
        KeySpec:
          $ref: '#/components/schemas/KeySpec'
        CryptoProviders:
          type: array
          items:
            type: string
            maxLength: 100
            minLength: 1
          maxItems: 100
          minItems: 1
          uniqueItems: true
        KeyUsageProperty:
          $ref: '#/components/schemas/KeyUsageProperty'
        Algorithm:
          $ref: '#/components/schemas/PrivateKeyAlgorithm'
      required:
        - KeySpec
        - MinimalKeyLength
      additionalProperties: false
    PrivateKeyFlagsV2:
      type: object
      properties:
        ExportableKey:
          type: boolean
        StrongKeyProtectionRequired:
          type: boolean
        ClientVersion:
          $ref: '#/components/schemas/ClientCompatibilityV2'
      required:
        - ClientVersion
      additionalProperties: false
    PrivateKeyFlagsV3:
      type: object
      properties:
        ExportableKey:
          type: boolean
        StrongKeyProtectionRequired:
          type: boolean
        RequireAlternateSignatureAlgorithm:
          type: boolean
        ClientVersion:
          $ref: '#/components/schemas/ClientCompatibilityV3'
      required:
        - ClientVersion
      additionalProperties: false
    PrivateKeyFlagsV4:
      type: object
      properties:
        ExportableKey:
          type: boolean
        StrongKeyProtectionRequired:
          type: boolean
        RequireAlternateSignatureAlgorithm:
          type: boolean
        RequireSameKeyRenewal:
          type: boolean
        UseLegacyProvider:
          type: boolean
        ClientVersion:
          $ref: '#/components/schemas/ClientCompatibilityV4'
      required:
        - ClientVersion
      additionalProperties: false
    SubjectNameFlagsV2:
      type: object
      properties:
        SanRequireDomainDns:
          type: boolean
        SanRequireSpn:
          type: boolean
        SanRequireDirectoryGuid:
          type: boolean
        SanRequireUpn:
          type: boolean
        SanRequireEmail:
          type: boolean
        SanRequireDns:
          type: boolean
        RequireDnsAsCn:
          type: boolean
        RequireEmail:
          type: boolean
        RequireCommonName:
          type: boolean
        RequireDirectoryPath:
          type: boolean
      additionalProperties: false
    SubjectNameFlagsV3:
      type: object
      properties:
        SanRequireDomainDns:
          type: boolean
        SanRequireSpn:
          type: boolean
        SanRequireDirectoryGuid:
          type: boolean
        SanRequireUpn:
          type: boolean
        SanRequireEmail:
          type: boolean
        SanRequireDns:
          type: boolean
        RequireDnsAsCn:
          type: boolean
        RequireEmail:
          type: boolean
        RequireCommonName:
          type: boolean
        RequireDirectoryPath:
          type: boolean
      additionalProperties: false
    SubjectNameFlagsV4:
      type: object
      properties:
        SanRequireDomainDns:
          type: boolean
        SanRequireSpn:
          type: boolean
        SanRequireDirectoryGuid:
          type: boolean
        SanRequireUpn:
          type: boolean
        SanRequireEmail:
          type: boolean
        SanRequireDns:
          type: boolean
        RequireDnsAsCn:
          type: boolean
        RequireEmail:
          type: boolean
        RequireCommonName:
          type: boolean
        RequireDirectoryPath:
          type: boolean
      additionalProperties: false
    TemplateDefinition:
      oneOf:
        - type: object
          title: TemplateV2
          properties:
            TemplateV2:
              $ref: '#/components/schemas/TemplateV2'
          required:
            - TemplateV2
          additionalProperties: false
        - type: object
          title: TemplateV3
          properties:
            TemplateV3:
              $ref: '#/components/schemas/TemplateV3'
          required:
            - TemplateV3
          additionalProperties: false
        - type: object
          title: TemplateV4
          properties:
            TemplateV4:
              $ref: '#/components/schemas/TemplateV4'
          required:
            - TemplateV4
          additionalProperties: false
    TemplateV2:
      type: object
      properties:
        CertificateValidity:
          $ref: '#/components/schemas/CertificateValidity'
        SupersededTemplates:
          type: array
          items:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^(?!^\s+$)((?![\x5c'\x2b,;<=>#\x22])([\x20-\x7E]))+$
          maxItems: 100
          minItems: 1
          uniqueItems: true
        PrivateKeyAttributes:
          $ref: '#/components/schemas/PrivateKeyAttributesV2'
        PrivateKeyFlags:
          $ref: '#/components/schemas/PrivateKeyFlagsV2'
        EnrollmentFlags:
          $ref: '#/components/schemas/EnrollmentFlagsV2'
        SubjectNameFlags:
          $ref: '#/components/schemas/SubjectNameFlagsV2'
        GeneralFlags:
          $ref: '#/components/schemas/GeneralFlagsV2'
        Extensions:
          $ref: '#/components/schemas/ExtensionsV2'
      required:
        - CertificateValidity
        - EnrollmentFlags
        - Extensions
        - GeneralFlags
        - PrivateKeyAttributes
        - PrivateKeyFlags
        - SubjectNameFlags
      additionalProperties: false
    TemplateV3:
      type: object
      properties:
        CertificateValidity:
          $ref: '#/components/schemas/CertificateValidity'
        SupersededTemplates:
          type: array
          items:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^(?!^\s+$)((?![\x5c'\x2b,;<=>#\x22])([\x20-\x7E]))+$
          maxItems: 100
          minItems: 1
          uniqueItems: true
        PrivateKeyAttributes:
          $ref: '#/components/schemas/PrivateKeyAttributesV3'
        PrivateKeyFlags:
          $ref: '#/components/schemas/PrivateKeyFlagsV3'
        EnrollmentFlags:
          $ref: '#/components/schemas/EnrollmentFlagsV3'
        SubjectNameFlags:
          $ref: '#/components/schemas/SubjectNameFlagsV3'
        GeneralFlags:
          $ref: '#/components/schemas/GeneralFlagsV3'
        HashAlgorithm:
          $ref: '#/components/schemas/HashAlgorithm'
        Extensions:
          $ref: '#/components/schemas/ExtensionsV3'
      required:
        - CertificateValidity
        - EnrollmentFlags
        - Extensions
        - GeneralFlags
        - HashAlgorithm
        - PrivateKeyAttributes
        - PrivateKeyFlags
        - SubjectNameFlags
      additionalProperties: false
    TemplateV4:
      type: object
      properties:
        CertificateValidity:
          $ref: '#/components/schemas/CertificateValidity'
        SupersededTemplates:
          type: array
          items:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^(?!^\s+$)((?![\x5c'\x2b,;<=>#\x22])([\x20-\x7E]))+$
          maxItems: 100
          minItems: 1
          uniqueItems: true
        PrivateKeyAttributes:
          $ref: '#/components/schemas/PrivateKeyAttributesV4'
        PrivateKeyFlags:
          $ref: '#/components/schemas/PrivateKeyFlagsV4'
        EnrollmentFlags:
          $ref: '#/components/schemas/EnrollmentFlagsV4'
        SubjectNameFlags:
          $ref: '#/components/schemas/SubjectNameFlagsV4'
        GeneralFlags:
          $ref: '#/components/schemas/GeneralFlagsV4'
        HashAlgorithm:
          $ref: '#/components/schemas/HashAlgorithm'
        Extensions:
          $ref: '#/components/schemas/ExtensionsV4'
      required:
        - CertificateValidity
        - EnrollmentFlags
        - Extensions
        - GeneralFlags
        - PrivateKeyAttributes
        - PrivateKeyFlags
        - SubjectNameFlags
      additionalProperties: false
    ValidityPeriod:
      type: object
      properties:
        PeriodType:
          $ref: '#/components/schemas/ValidityPeriodType'
        Period:
          type: number
          maximum: 8766000
          minimum: 1
      required:
        - Period
        - PeriodType
      additionalProperties: false
    ValidityPeriodType:
      type: string
      enum:
        - HOURS
        - DAYS
        - WEEKS
        - MONTHS
        - YEARS
    Template:
      type: object
      properties:
        ConnectorArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
        Definition:
          $ref: '#/components/schemas/TemplateDefinition'
        Name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^(?!^\s+$)((?![\x5c'\x2b,;<=>#\x22])([\x20-\x7E]))+$
        ReenrollAllCertificateHolders:
          type: boolean
        Tags:
          $ref: '#/components/schemas/Tags'
        TemplateArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}\/template\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      required:
        - ConnectorArn
        - Definition
        - Name
      x-stackql-resource-name: template
      description: Represents a template that defines certificate configurations, both for issuance and client handling
      x-type-name: AWS::PCAConnectorAD::Template
      x-stackql-primary-identifier:
        - TemplateArn
      x-create-only-properties:
        - ConnectorArn
        - Name
      x-write-only-properties:
        - ReenrollAllCertificateHolders
      x-read-only-properties:
        - TemplateArn
      x-required-properties:
        - ConnectorArn
        - Definition
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - pca-connector-ad:ListTagsForResource
          - pca-connector-ad:TagResource
          - pca-connector-ad:UntagResource
      x-required-permissions:
        create:
          - pca-connector-ad:CreateTemplate
          - pca-connector-ad:TagResource
        read:
          - pca-connector-ad:GetTemplate
          - pca-connector-ad:ListTagsForResource
        update:
          - pca-connector-ad:ListTagsForResource
          - pca-connector-ad:TagResource
          - pca-connector-ad:UntagResource
          - pca-connector-ad:UpdateTemplate
        delete:
          - pca-connector-ad:GetTemplate
          - pca-connector-ad:DeleteTemplate
          - pca-connector-ad:UntagResource
        list:
          - pca-connector-ad:ListTemplates
    AccessRight:
      type: string
      enum:
        - ALLOW
        - DENY
    AccessRights:
      type: object
      properties:
        Enroll:
          $ref: '#/components/schemas/AccessRight'
        AutoEnroll:
          $ref: '#/components/schemas/AccessRight'
      additionalProperties: false
    TemplateGroupAccessControlEntry:
      type: object
      properties:
        AccessRights:
          $ref: '#/components/schemas/AccessRights'
        GroupDisplayName:
          type: string
          maxLength: 256
          minLength: 0
          pattern: ^[\x20-\x7E]+$
        GroupSecurityIdentifier:
          type: string
          maxLength: 256
          minLength: 7
          pattern: ^S-[0-9]-([0-9]+-){1,14}[0-9]+$
        TemplateArn:
          type: string
          maxLength: 200
          minLength: 5
          pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector(\/[\w-]+)\/template(\/[\w-]+)$
      required:
        - AccessRights
        - GroupDisplayName
      x-stackql-resource-name: template_group_access_control_entry
      description: Definition of AWS::PCAConnectorAD::TemplateGroupAccessControlEntry Resource Type
      x-type-name: AWS::PCAConnectorAD::TemplateGroupAccessControlEntry
      x-stackql-primary-identifier:
        - GroupSecurityIdentifier
        - TemplateArn
      x-create-only-properties:
        - GroupSecurityIdentifier
        - TemplateArn
      x-write-only-properties:
        - AccessRights
        - GroupDisplayName
      x-required-properties:
        - AccessRights
        - GroupDisplayName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - pca-connector-ad:CreateTemplateGroupAccessControlEntry
        read:
          - pca-connector-ad:GetTemplateGroupAccessControlEntry
        update:
          - pca-connector-ad:UpdateTemplateGroupAccessControlEntry
        delete:
          - pca-connector-ad:DeleteTemplateGroupAccessControlEntry
          - pca-connector-ad:GetTemplateGroupAccessControlEntry
        list:
          - pca-connector-ad:ListTemplateGroupAccessControlEntries
    CreateConnectorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CertificateAuthorityArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:acm-pca:[\w-]+:[0-9]+:certificate-authority(\/[\w-]+)$
            ConnectorArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector(\/[\w-]+)$
            DirectoryId:
              type: string
              pattern: ^d-[0-9a-f]{10}$
            Tags:
              $ref: '#/components/schemas/Tags'
            VpcInformation:
              $ref: '#/components/schemas/VpcInformation'
          x-stackQL-stringOnly: true
      x-title: CreateConnectorRequest
      type: object
      required: []
    CreateDirectoryRegistrationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DirectoryId:
              type: string
              pattern: ^d-[0-9a-f]{10}$
            DirectoryRegistrationArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:directory-registration(\/[\w-]+)$
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateDirectoryRegistrationRequest
      type: object
      required: []
    CreateServicePrincipalNameRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ConnectorArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector(\/[\w-]+)$
            DirectoryRegistrationArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:directory-registration(\/[\w-]+)$
          x-stackQL-stringOnly: true
      x-title: CreateServicePrincipalNameRequest
      type: object
      required: []
    CreateTemplateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ConnectorArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
            Definition:
              $ref: '#/components/schemas/TemplateDefinition'
            Name:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^(?!^\s+$)((?![\x5c'\x2b,;<=>#\x22])([\x20-\x7E]))+$
            ReenrollAllCertificateHolders:
              type: boolean
            Tags:
              $ref: '#/components/schemas/Tags'
            TemplateArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}\/template\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
          x-stackQL-stringOnly: true
      x-title: CreateTemplateRequest
      type: object
      required: []
    CreateTemplateGroupAccessControlEntryRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AccessRights:
              $ref: '#/components/schemas/AccessRights'
            GroupDisplayName:
              type: string
              maxLength: 256
              minLength: 0
              pattern: ^[\x20-\x7E]+$
            GroupSecurityIdentifier:
              type: string
              maxLength: 256
              minLength: 7
              pattern: ^S-[0-9]-([0-9]+-){1,14}[0-9]+$
            TemplateArn:
              type: string
              maxLength: 200
              minLength: 5
              pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector(\/[\w-]+)\/template(\/[\w-]+)$
          x-stackQL-stringOnly: true
      x-title: CreateTemplateGroupAccessControlEntryRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    connectors:
      name: connectors
      id: aws.pcaconnectorad.connectors
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::PCAConnectorAD::Connector
      x-identifiers:
        - ConnectorArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Connector&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CertificateAuthorityArn') as certificate_authority_arn,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(Properties, '$.DirectoryId') as directory_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcInformation') as vpc_information
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::Connector'
              AND data__Identifier = '<ConnectorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.CertificateAuthorityArn') as certificate_authority_arn,
                JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
                JSON_EXTRACT(detail.Properties, '$.DirectoryId') as directory_id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.VpcInformation') as vpc_information
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Connector'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::Connector'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CertificateAuthorityArn') as certificate_authority_arn,
                  json_extract_path_text(Properties, 'ConnectorArn') as connector_arn,
                  json_extract_path_text(Properties, 'DirectoryId') as directory_id,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'VpcInformation') as vpc_information
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::Connector'
                  AND data__Identifier = '<ConnectorArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'CertificateAuthorityArn') as certificate_authority_arn,
                    json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                    json_extract_path_text(detail.Properties, 'DirectoryId') as directory_id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'VpcInformation') as vpc_information
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Connector'
                    AND detail.data__TypeName = 'AWS::PCAConnectorAD::Connector'
                    AND listing.region = 'us-east-1'
    connectors_list_only:
      name: connectors_list_only
      id: aws.pcaconnectorad.connectors_list_only
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::PCAConnectorAD::Connector
      x-identifiers:
        - ConnectorArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::Connector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectorArn') as connector_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::Connector'
                AND region = 'us-east-1'
    connector_tags:
      name: connector_tags
      id: aws.pcaconnectorad.connector_tags
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::PCAConnectorAD::Connector
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.CertificateAuthorityArn') as certificate_authority_arn,
              JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(detail.Properties, '$.DirectoryId') as directory_id,
              JSON_EXTRACT(detail.Properties, '$.VpcInformation') as vpc_information
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Connector'
              AND detail.data__TypeName = 'AWS::PCAConnectorAD::Connector'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'CertificateAuthorityArn') as certificate_authority_arn,
                json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                json_extract_path_text(detail.Properties, 'DirectoryId') as directory_id,
                json_extract_path_text(detail.Properties, 'VpcInformation') as vpc_information
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Connector'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::Connector'
                AND listing.region = 'us-east-1'
    directory_registrations:
      name: directory_registrations
      id: aws.pcaconnectorad.directory_registrations
      x-cfn-schema-name: DirectoryRegistration
      x-cfn-type-name: AWS::PCAConnectorAD::DirectoryRegistration
      x-identifiers:
        - DirectoryRegistrationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DirectoryRegistration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::DirectoryRegistration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::DirectoryRegistration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::DirectoryRegistration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/directory_registrations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/directory_registrations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/directory_registrations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DirectoryId') as directory_id,
              JSON_EXTRACT(Properties, '$.DirectoryRegistrationArn') as directory_registration_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
              AND data__Identifier = '<DirectoryRegistrationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DirectoryId') as directory_id,
                JSON_EXTRACT(detail.Properties, '$.DirectoryRegistrationArn') as directory_registration_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DirectoryId') as directory_id,
                  json_extract_path_text(Properties, 'DirectoryRegistrationArn') as directory_registration_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                  AND data__Identifier = '<DirectoryRegistrationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DirectoryId') as directory_id,
                    json_extract_path_text(detail.Properties, 'DirectoryRegistrationArn') as directory_registration_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                    AND detail.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                    AND listing.region = 'us-east-1'
    directory_registrations_list_only:
      name: directory_registrations_list_only
      id: aws.pcaconnectorad.directory_registrations_list_only
      x-cfn-schema-name: DirectoryRegistration
      x-cfn-type-name: AWS::PCAConnectorAD::DirectoryRegistration
      x-identifiers:
        - DirectoryRegistrationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DirectoryRegistrationArn') as directory_registration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DirectoryRegistrationArn') as directory_registration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                AND region = 'us-east-1'
    directory_registration_tags:
      name: directory_registration_tags
      id: aws.pcaconnectorad.directory_registration_tags
      x-cfn-schema-name: DirectoryRegistration
      x-cfn-type-name: AWS::PCAConnectorAD::DirectoryRegistration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DirectoryId') as directory_id,
              JSON_EXTRACT(detail.Properties, '$.DirectoryRegistrationArn') as directory_registration_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
              AND detail.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DirectoryId') as directory_id,
                json_extract_path_text(detail.Properties, 'DirectoryRegistrationArn') as directory_registration_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::DirectoryRegistration'
                AND listing.region = 'us-east-1'
    service_principal_names:
      name: service_principal_names
      id: aws.pcaconnectorad.service_principal_names
      x-cfn-schema-name: ServicePrincipalName
      x-cfn-type-name: AWS::PCAConnectorAD::ServicePrincipalName
      x-identifiers:
        - ConnectorArn
        - DirectoryRegistrationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ServicePrincipalName&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::ServicePrincipalName"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::ServicePrincipalName"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/service_principal_names/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/service_principal_names/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(Properties, '$.DirectoryRegistrationArn') as directory_registration_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
              AND data__Identifier = '<ConnectorArn>|<DirectoryRegistrationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
                JSON_EXTRACT(detail.Properties, '$.DirectoryRegistrationArn') as directory_registration_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ConnectorArn') as connector_arn,
                  json_extract_path_text(Properties, 'DirectoryRegistrationArn') as directory_registration_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
                  AND data__Identifier = '<ConnectorArn>|<DirectoryRegistrationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                    json_extract_path_text(detail.Properties, 'DirectoryRegistrationArn') as directory_registration_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
                    AND detail.data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
                    AND listing.region = 'us-east-1'
    service_principal_names_list_only:
      name: service_principal_names_list_only
      id: aws.pcaconnectorad.service_principal_names_list_only
      x-cfn-schema-name: ServicePrincipalName
      x-cfn-type-name: AWS::PCAConnectorAD::ServicePrincipalName
      x-identifiers:
        - ConnectorArn
        - DirectoryRegistrationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(Properties, '$.DirectoryRegistrationArn') as directory_registration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectorArn') as connector_arn,
                json_extract_path_text(Properties, 'DirectoryRegistrationArn') as directory_registration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::ServicePrincipalName'
                AND region = 'us-east-1'
    templates:
      name: templates
      id: aws.pcaconnectorad.templates
      x-cfn-schema-name: Template
      x-cfn-type-name: AWS::PCAConnectorAD::Template
      x-identifiers:
        - TemplateArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Template&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::Template"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::Template"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::Template"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/templates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/templates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/templates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(Properties, '$.Definition') as definition,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ReenrollAllCertificateHolders') as reenroll_all_certificate_holders,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TemplateArn') as template_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::Template'
              AND data__Identifier = '<TemplateArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
                JSON_EXTRACT(detail.Properties, '$.Definition') as definition,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ReenrollAllCertificateHolders') as reenroll_all_certificate_holders,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TemplateArn') as template_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Template'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::Template'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ConnectorArn') as connector_arn,
                  json_extract_path_text(Properties, 'Definition') as definition,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ReenrollAllCertificateHolders') as reenroll_all_certificate_holders,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TemplateArn') as template_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::Template'
                  AND data__Identifier = '<TemplateArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                    json_extract_path_text(detail.Properties, 'Definition') as definition,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ReenrollAllCertificateHolders') as reenroll_all_certificate_holders,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TemplateArn') as template_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Template'
                    AND detail.data__TypeName = 'AWS::PCAConnectorAD::Template'
                    AND listing.region = 'us-east-1'
    templates_list_only:
      name: templates_list_only
      id: aws.pcaconnectorad.templates_list_only
      x-cfn-schema-name: Template
      x-cfn-type-name: AWS::PCAConnectorAD::Template
      x-identifiers:
        - TemplateArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TemplateArn') as template_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::Template'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TemplateArn') as template_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::Template'
                AND region = 'us-east-1'
    template_tags:
      name: template_tags
      id: aws.pcaconnectorad.template_tags
      x-cfn-schema-name: Template
      x-cfn-type-name: AWS::PCAConnectorAD::Template
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(detail.Properties, '$.Definition') as definition,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ReenrollAllCertificateHolders') as reenroll_all_certificate_holders,
              JSON_EXTRACT(detail.Properties, '$.TemplateArn') as template_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Template'
              AND detail.data__TypeName = 'AWS::PCAConnectorAD::Template'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                json_extract_path_text(detail.Properties, 'Definition') as definition,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ReenrollAllCertificateHolders') as reenroll_all_certificate_holders,
                json_extract_path_text(detail.Properties, 'TemplateArn') as template_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::Template'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::Template'
                AND listing.region = 'us-east-1'
    template_group_access_control_entries:
      name: template_group_access_control_entries
      id: aws.pcaconnectorad.template_group_access_control_entries
      x-cfn-schema-name: TemplateGroupAccessControlEntry
      x-cfn-type-name: AWS::PCAConnectorAD::TemplateGroupAccessControlEntry
      x-identifiers:
        - GroupSecurityIdentifier
        - TemplateArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__TemplateGroupAccessControlEntry&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::TemplateGroupAccessControlEntry"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::TemplateGroupAccessControlEntry"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::PCAConnectorAD::TemplateGroupAccessControlEntry"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/template_group_access_control_entries/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/template_group_access_control_entries/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/template_group_access_control_entries/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AccessRights') as access_rights,
              JSON_EXTRACT(Properties, '$.GroupDisplayName') as group_display_name,
              JSON_EXTRACT(Properties, '$.GroupSecurityIdentifier') as group_security_identifier,
              JSON_EXTRACT(Properties, '$.TemplateArn') as template_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
              AND data__Identifier = '<GroupSecurityIdentifier>|<TemplateArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AccessRights') as access_rights,
                JSON_EXTRACT(detail.Properties, '$.GroupDisplayName') as group_display_name,
                JSON_EXTRACT(detail.Properties, '$.GroupSecurityIdentifier') as group_security_identifier,
                JSON_EXTRACT(detail.Properties, '$.TemplateArn') as template_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
                AND detail.data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AccessRights') as access_rights,
                  json_extract_path_text(Properties, 'GroupDisplayName') as group_display_name,
                  json_extract_path_text(Properties, 'GroupSecurityIdentifier') as group_security_identifier,
                  json_extract_path_text(Properties, 'TemplateArn') as template_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
                  AND data__Identifier = '<GroupSecurityIdentifier>|<TemplateArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AccessRights') as access_rights,
                    json_extract_path_text(detail.Properties, 'GroupDisplayName') as group_display_name,
                    json_extract_path_text(detail.Properties, 'GroupSecurityIdentifier') as group_security_identifier,
                    json_extract_path_text(detail.Properties, 'TemplateArn') as template_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
                    AND detail.data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
                    AND listing.region = 'us-east-1'
    template_group_access_control_entries_list_only:
      name: template_group_access_control_entries_list_only
      id: aws.pcaconnectorad.template_group_access_control_entries_list_only
      x-cfn-schema-name: TemplateGroupAccessControlEntry
      x-cfn-type-name: AWS::PCAConnectorAD::TemplateGroupAccessControlEntry
      x-identifiers:
        - GroupSecurityIdentifier
        - TemplateArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GroupSecurityIdentifier') as group_security_identifier,
              JSON_EXTRACT(Properties, '$.TemplateArn') as template_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GroupSecurityIdentifier') as group_security_identifier,
                json_extract_path_text(Properties, 'TemplateArn') as template_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PCAConnectorAD::TemplateGroupAccessControlEntry'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Connector&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConnector
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConnectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DirectoryRegistration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDirectoryRegistration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDirectoryRegistrationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ServicePrincipalName&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateServicePrincipalName
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateServicePrincipalNameRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Template&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTemplate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__TemplateGroupAccessControlEntry&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTemplateGroupAccessControlEntry
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTemplateGroupAccessControlEntryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
