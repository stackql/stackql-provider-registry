openapi: 3.0.0
info:
  title: CleanRoomsML
  version: 1.0.0
paths: {}
components:
  schemas:
    ColumnSchema:
      type: object
      properties:
        ColumnName:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        ColumnTypes:
          type: array
          items:
            $ref: '#/components/schemas/ColumnType'
          maxItems: 1
          minItems: 1
      required:
        - ColumnName
        - ColumnTypes
      additionalProperties: false
    ColumnType:
      type: string
      enum:
        - USER_ID
        - ITEM_ID
        - TIMESTAMP
        - CATEGORICAL_FEATURE
        - NUMERICAL_FEATURE
    DataSource:
      type: object
      properties:
        GlueDataSource:
          $ref: '#/components/schemas/GlueDataSource'
      required:
        - GlueDataSource
      additionalProperties: false
    Dataset:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/DatasetType'
        InputConfig:
          $ref: '#/components/schemas/DatasetInputConfig'
      required:
        - InputConfig
        - Type
      additionalProperties: false
    DatasetInputConfig:
      type: object
      properties:
        Schema:
          type: array
          items:
            $ref: '#/components/schemas/ColumnSchema'
          maxItems: 100
          minItems: 1
        DataSource:
          $ref: '#/components/schemas/DataSource'
      required:
        - DataSource
        - Schema
      additionalProperties: false
    DatasetType:
      type: string
      enum:
        - INTERACTIONS
    GlueDataSource:
      type: object
      properties:
        TableName:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        DatabaseName:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_]+-)*([a-zA-Z0-9_]+))?$
        CatalogId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
      required:
        - DatabaseName
        - TableName
      additionalProperties: false
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    TrainingDatasetStatus:
      type: string
      enum:
        - ACTIVE
    Unit:
      type: object
      additionalProperties: false
    TrainingDataset:
      type: object
      properties:
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        Name:
          type: string
          maxLength: 63
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
        RoleArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[-a-z]*:iam::[0-9]{12}:role/.+$
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms-ml training dataset.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          type: array
        TrainingData:
          type: array
          items:
            $ref: '#/components/schemas/Dataset'
          maxItems: 1
          minItems: 1
        TrainingDatasetArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[-a-z]*:cleanrooms-ml:[-a-z0-9]+:[0-9]{12}:training-dataset/[-a-zA-Z0-9_/.]+$
        Status:
          $ref: '#/components/schemas/TrainingDatasetStatus'
      required:
        - Name
        - RoleArn
        - TrainingData
      x-stackql-resource-name: training_dataset
      description: Definition of AWS::CleanRoomsML::TrainingDataset Resource Type
      x-type-name: AWS::CleanRoomsML::TrainingDataset
      x-stackql-primary-identifier:
        - TrainingDatasetArn
      x-create-only-properties:
        - Description
        - Name
        - RoleArn
        - TrainingData
      x-read-only-properties:
        - Status
        - TrainingDatasetArn
      x-required-properties:
        - Name
        - RoleArn
        - TrainingData
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - cleanrooms-ml:CreateTrainingDataset
          - cleanrooms-ml:GetTrainingDataset
          - cleanrooms-ml:TagResource
          - iam:PassRole
        read:
          - cleanrooms-ml:GetTrainingDataset
        delete:
          - cleanrooms-ml:DeleteTrainingDataset
        list:
          - cleanrooms-ml:ListTrainingDatasets
        update:
          - cleanrooms-ml:TagResource
          - cleanrooms-ml:UntagResource
  x-stackQL-resources:
    training_datasets:
      name: training_datasets
      id: aws.cleanroomsml.training_datasets
      x-cfn-schema-name: TrainingDataset
      x-type: list
      x-identifiers:
        - TrainingDatasetArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TrainingDatasetArn') as training_dataset_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRoomsML::TrainingDataset'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TrainingDatasetArn') as training_dataset_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRoomsML::TrainingDataset'
                AND region = 'us-east-1'
    training_dataset:
      name: training_dataset
      id: aws.cleanroomsml.training_dataset
      x-cfn-schema-name: TrainingDataset
      x-type: get
      x-identifiers:
        - TrainingDatasetArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TrainingData') as training_data,
              JSON_EXTRACT(Properties, '$.TrainingDatasetArn') as training_dataset_arn,
              JSON_EXTRACT(Properties, '$.Status') as status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRoomsML::TrainingDataset'
              AND data__Identifier = '<TrainingDatasetArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'TrainingData') as training_data,
                json_extract_path_text(Properties, 'TrainingDatasetArn') as training_dataset_arn,
                json_extract_path_text(Properties, 'Status') as status
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRoomsML::TrainingDataset'
                AND data__Identifier = '<TrainingDatasetArn>'
                AND region = 'us-east-1'
