openapi: 3.0.0
info:
  title: Signer
  version: 1.0.0
paths: {}
components:
  schemas:
    ProfilePermission:
      type: object
      properties:
        ProfileName:
          type: string
        ProfileVersion:
          type: string
          pattern: ^[0-9a-zA-Z]{10}$
        Action:
          type: string
        Principal:
          type: string
        StatementId:
          type: string
      required:
        - ProfileName
        - Action
        - Principal
        - StatementId
      x-stackql-resource-name: profile_permission
      x-stackql-primaryIdentifier:
        - StatementId
        - ProfileName
    PlatformId:
      type: string
      enum:
        - AWSLambda-SHA384-ECDSA
    Arn:
      type: string
      pattern: ^arn:aws(-(cn|gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
    ProfileVersion:
      type: string
      pattern: ^[0-9a-zA-Z]{10}$
    SignatureValidityPeriod:
      type: object
      properties:
        Value:
          type: integer
        Type:
          type: string
          enum:
            - DAYS
            - MONTHS
            - YEARS
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 127
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
        Value:
          type: string
          minLength: 1
          maxLength: 255
      additionalProperties: false
    SigningProfile:
      type: object
      properties:
        ProfileName:
          description: 'A name for the signing profile. AWS CloudFormation generates a unique physical ID and uses that ID for the signing profile name. '
          type: string
        ProfileVersion:
          description: A version for the signing profile. AWS Signer generates a unique version for each profile of the same profile name.
          $ref: '#/components/schemas/ProfileVersion'
        Arn:
          description: The Amazon Resource Name (ARN) of the specified signing profile.
          $ref: '#/components/schemas/Arn'
        ProfileVersionArn:
          description: The Amazon Resource Name (ARN) of the specified signing profile version.
          $ref: '#/components/schemas/Arn'
        SignatureValidityPeriod:
          description: Signature validity period of the profile.
          $ref: '#/components/schemas/SignatureValidityPeriod'
        PlatformId:
          description: The ID of the target signing platform.
          $ref: '#/components/schemas/PlatformId'
        Tags:
          type: array
          description: A list of tags associated with the signing profile.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - PlatformId
      x-stackql-resource-name: signing_profile
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    profile_permissions:
      name: profile_permissions
      id: aws.signer.profile_permissions
      x-cfn-schema-name: ProfilePermission
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StatementId') as statement_id,
              JSON_EXTRACT(Properties, '$.ProfileName') as profile_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Signer::ProfilePermission'
    profile_permission:
      name: profile_permission
      id: aws.signer.profile_permission
      x-cfn-schema-name: ProfilePermission
      x-type: get
      x-identifiers:
        - StatementId
        - ProfileName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProfileName') as profile_name,
              JSON_EXTRACT(Properties, '$.ProfileVersion') as profile_version,
              JSON_EXTRACT(Properties, '$.Action') as action,
              JSON_EXTRACT(Properties, '$.Principal') as principal,
              JSON_EXTRACT(Properties, '$.StatementId') as statement_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Signer::ProfilePermission'
    signing_profiles:
      name: signing_profiles
      id: aws.signer.signing_profiles
      x-cfn-schema-name: SigningProfile
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Signer::SigningProfile'
    signing_profile:
      name: signing_profile
      id: aws.signer.signing_profile
      x-cfn-schema-name: SigningProfile
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProfileName') as profile_name,
              JSON_EXTRACT(Properties, '$.SignatureValidityPeriod.Value') as signature_validity_period_value,
              JSON_EXTRACT(Properties, '$.SignatureValidityPeriod.Type') as signature_validity_period_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Signer::SigningProfile'
