openapi: 3.0.0
info:
  title: ACMPCA
  version: 1.0.0
paths: {}
components:
  schemas:
    ApiPassthrough:
      description: Structure that specifies fields to be overridden in a certificate at the time of issuance. These requires an API Passthrough template be used or they will be ignored.
      type: object
      additionalProperties: false
      properties:
        Extensions:
          $ref: '#/components/schemas/Extensions'
        Subject:
          $ref: '#/components/schemas/Subject'
    Arn:
      type: string
    CertificatePolicyList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyInformation'
    ExtendedKeyUsage:
      description: Structure that contains X.509 ExtendedKeyUsage information.
      type: object
      additionalProperties: false
      properties:
        ExtendedKeyUsageType:
          type: string
        ExtendedKeyUsageObjectIdentifier:
          $ref: '#/components/schemas/CustomObjectIdentifier'
    ExtendedKeyUsageList:
      type: array
      items:
        $ref: '#/components/schemas/ExtendedKeyUsage'
    Extensions:
      description: Structure that contains X.500 extensions for a Certificate.
      type: object
      additionalProperties: false
      properties:
        CertificatePolicies:
          $ref: '#/components/schemas/CertificatePolicyList'
        ExtendedKeyUsage:
          $ref: '#/components/schemas/ExtendedKeyUsageList'
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage'
        SubjectAlternativeNames:
          $ref: '#/components/schemas/GeneralNameList'
        CustomExtensions:
          $ref: '#/components/schemas/CustomExtensionList'
    CustomExtensionList:
      description: Array of X.509 extensions for a certificate.
      type: array
      items:
        $ref: '#/components/schemas/CustomExtension'
    CustomExtension:
      description: Structure that contains X.509 extension information for a certificate.
      type: object
      additionalProperties: false
      properties:
        Critical:
          type: boolean
        ObjectIdentifier:
          $ref: '#/components/schemas/CustomObjectIdentifier'
        Value:
          type: string
      required:
        - ObjectIdentifier
        - Value
    GeneralNameList:
      type: array
      items:
        $ref: '#/components/schemas/GeneralName'
    GeneralName:
      description: Structure that contains X.509 GeneralName information. Assign one and ONLY one field.
      type: object
      additionalProperties: false
      properties:
        OtherName:
          $ref: '#/components/schemas/OtherName'
        Rfc822Name:
          $ref: '#/components/schemas/Rfc822Name'
        DnsName:
          $ref: '#/components/schemas/DnsName'
        DirectoryName:
          $ref: '#/components/schemas/Subject'
        EdiPartyName:
          $ref: '#/components/schemas/EdiPartyName'
        UniformResourceIdentifier:
          $ref: '#/components/schemas/UniformResourceIdentifier'
        IpAddress:
          $ref: '#/components/schemas/IpAddress'
        RegisteredId:
          $ref: '#/components/schemas/CustomObjectIdentifier'
    KeyUsage:
      description: Structure that contains X.509 KeyUsage information.
      type: object
      additionalProperties: false
      properties:
        DigitalSignature:
          type: boolean
          default: false
        NonRepudiation:
          type: boolean
          default: false
        KeyEncipherment:
          type: boolean
          default: false
        DataEncipherment:
          type: boolean
          default: false
        KeyAgreement:
          type: boolean
          default: false
        KeyCertSign:
          type: boolean
          default: false
        CRLSign:
          type: boolean
          default: false
        EncipherOnly:
          type: boolean
          default: false
        DecipherOnly:
          type: boolean
          default: false
    PolicyInformation:
      description: Structure that contains X.509 Policy information.
      type: object
      additionalProperties: false
      properties:
        CertPolicyId:
          $ref: '#/components/schemas/CustomObjectIdentifier'
        PolicyQualifiers:
          $ref: '#/components/schemas/PolicyQualifierInfoList'
      required:
        - CertPolicyId
    PolicyQualifierInfo:
      description: Structure that contains X.509 Policy qualifier information.
      type: object
      additionalProperties: false
      properties:
        PolicyQualifierId:
          type: string
        Qualifier:
          $ref: '#/components/schemas/Qualifier'
      required:
        - PolicyQualifierId
        - Qualifier
    PolicyQualifierInfoList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyQualifierInfo'
    Qualifier:
      description: Structure that contains a X.509 policy qualifier.
      type: object
      additionalProperties: false
      properties:
        CpsUri:
          type: string
      required:
        - CpsUri
    Subject:
      description: Structure that contains X.500 distinguished name information for your CA.
      type: object
      additionalProperties: false
      properties:
        Country:
          type: string
        Organization:
          type: string
        OrganizationalUnit:
          type: string
        DistinguishedNameQualifier:
          type: string
        State:
          type: string
        CommonName:
          type: string
        SerialNumber:
          type: string
        Locality:
          type: string
        Title:
          type: string
        Surname:
          type: string
        GivenName:
          type: string
        Initials:
          type: string
        Pseudonym:
          type: string
        GenerationQualifier:
          type: string
        CustomAttributes:
          $ref: '#/components/schemas/CustomAttributeList'
    CustomAttributeList:
      description: Array of X.500 attribute type and value. CustomAttributes cannot be used along with pre-defined attributes.
      type: array
      items:
        $ref: '#/components/schemas/CustomAttribute'
    CustomAttribute:
      description: Structure that contains X.500 attribute type and value.
      type: object
      additionalProperties: false
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/CustomObjectIdentifier'
        Value:
          type: string
      required:
        - ObjectIdentifier
        - Value
    Validity:
      description: Validity for a certificate.
      type: object
      additionalProperties: false
      properties:
        Value:
          type: number
        Type:
          type: string
      required:
        - Value
        - Type
    CustomObjectIdentifier:
      description: String that contains X.509 ObjectIdentifier information.
      type: string
    OtherName:
      description: Structure that contains X.509 OtherName information.
      type: object
      additionalProperties: false
      properties:
        TypeId:
          $ref: '#/components/schemas/CustomObjectIdentifier'
        Value:
          type: string
      required:
        - TypeId
        - Value
    Rfc822Name:
      description: String that contains X.509 Rfc822Name information.
      type: string
    DnsName:
      description: String that contains X.509 DnsName information.
      type: string
    EdiPartyName:
      description: Structure that contains X.509 EdiPartyName information.
      type: object
      additionalProperties: false
      properties:
        PartyName:
          type: string
        NameAssigner:
          type: string
      required:
        - PartyName
        - NameAssigner
    UniformResourceIdentifier:
      description: String that contains X.509 UniformResourceIdentifier information.
      type: string
    IpAddress:
      description: String that contains X.509 IpAddress information.
      type: string
    Certificate:
      type: object
      properties:
        ApiPassthrough:
          description: These are fields to be overridden in a certificate at the time of issuance. These requires an API_Passthrough template be used or they will be ignored.
          $ref: '#/components/schemas/ApiPassthrough'
        CertificateAuthorityArn:
          description: The Amazon Resource Name (ARN) for the private CA to issue the certificate.
          $ref: '#/components/schemas/Arn'
        CertificateSigningRequest:
          description: The certificate signing request (CSR) for the Certificate.
          type: string
          minLength: 1
        SigningAlgorithm:
          description: The name of the algorithm that will be used to sign the Certificate.
          type: string
        TemplateArn:
          description: Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, ACM Private CA defaults to the EndEntityCertificate/V1 template.
          $ref: '#/components/schemas/Arn'
        Validity:
          description: The time before which the Certificate will be valid.
          $ref: '#/components/schemas/Validity'
        ValidityNotBefore:
          description: The time after which the Certificate will be valid.
          $ref: '#/components/schemas/Validity'
        Certificate:
          description: The issued certificate in base 64 PEM-encoded format.
          type: string
        Arn:
          description: The ARN of the issued certificate.
          $ref: '#/components/schemas/Arn'
      required:
        - CertificateAuthorityArn
        - CertificateSigningRequest
        - SigningAlgorithm
        - Validity
      x-stackql-resource-name: certificate
      x-stackql-primaryIdentifier:
        - Arn
        - CertificateAuthorityArn
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
    CrlConfiguration:
      description: Your certificate authority can create and maintain a certificate revocation list (CRL). A CRL contains information about certificates that have been revoked.
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        ExpirationInDays:
          type: integer
        CustomCname:
          type: string
        S3BucketName:
          type: string
        S3ObjectAcl:
          type: string
    OcspConfiguration:
      description: Helps to configure online certificate status protocol (OCSP) responder for your certificate authority
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        OcspCustomCname:
          type: string
    RevocationConfiguration:
      description: Certificate Authority revocation information.
      type: object
      additionalProperties: false
      properties:
        CrlConfiguration:
          $ref: '#/components/schemas/CrlConfiguration'
        OcspConfiguration:
          $ref: '#/components/schemas/OcspConfiguration'
    AccessMethodType:
      description: Pre-defined enum string for X.509 AccessMethod ObjectIdentifiers.
      type: string
    AccessMethod:
      description: Structure that contains X.509 AccessMethod information. Assign one and ONLY one field.
      type: object
      additionalProperties: false
      properties:
        CustomObjectIdentifier:
          $ref: '#/components/schemas/CustomObjectIdentifier'
        AccessMethodType:
          $ref: '#/components/schemas/AccessMethodType'
    AccessDescription:
      description: Structure that contains X.509 AccessDescription information.
      type: object
      additionalProperties: false
      properties:
        AccessMethod:
          $ref: '#/components/schemas/AccessMethod'
        AccessLocation:
          $ref: '#/components/schemas/GeneralName'
      required:
        - AccessMethod
        - AccessLocation
    SubjectInformationAccess:
      description: Array of X.509 AccessDescription.
      type: array
      items:
        $ref: '#/components/schemas/AccessDescription'
    CsrExtensions:
      description: Structure that contains CSR pass though extensions information.
      type: object
      additionalProperties: false
      properties:
        KeyUsage:
          $ref: '#/components/schemas/KeyUsage'
        SubjectInformationAccess:
          $ref: '#/components/schemas/SubjectInformationAccess'
    CertificateAuthority:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the certificate authority.
          $ref: '#/components/schemas/Arn'
        Type:
          description: The type of the certificate authority.
          type: string
        KeyAlgorithm:
          description: Public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate.
          type: string
        SigningAlgorithm:
          description: Algorithm your CA uses to sign certificate requests.
          type: string
        Subject:
          description: Structure that contains X.500 distinguished name information for your CA.
          $ref: '#/components/schemas/Subject'
        RevocationConfiguration:
          description: Certificate revocation information used by the CreateCertificateAuthority and UpdateCertificateAuthority actions.
          $ref: '#/components/schemas/RevocationConfiguration'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        CertificateSigningRequest:
          description: The base64 PEM-encoded certificate signing request (CSR) for your certificate authority certificate.
          type: string
        CsrExtensions:
          description: Structure that contains CSR pass through extension information used by the CreateCertificateAuthority action.
          $ref: '#/components/schemas/CsrExtensions'
        KeyStorageSecurityStandard:
          description: KeyStorageSecurityStadard defines a cryptographic key management compliance standard used for handling CA keys.
          type: string
        UsageMode:
          description: Usage mode of the ceritificate authority.
          type: string
      required:
        - Type
        - KeyAlgorithm
        - SigningAlgorithm
        - Subject
      x-stackql-resource-name: certificate_authority
      x-stackql-primaryIdentifier:
        - Arn
    CertificateAuthorityActivation:
      type: object
      properties:
        CertificateAuthorityArn:
          description: Arn of the Certificate Authority.
          type: string
        Certificate:
          description: Certificate Authority certificate that will be installed in the Certificate Authority.
          type: string
        CertificateChain:
          description: Certificate chain for the Certificate Authority certificate.
          type: string
        Status:
          description: The status of the Certificate Authority.
          type: string
        CompleteCertificateChain:
          description: The complete certificate chain, including the Certificate Authority certificate.
          type: string
      required:
        - CertificateAuthorityArn
        - Certificate
      x-stackql-resource-name: certificate_authority_activation
      x-stackql-primaryIdentifier:
        - CertificateAuthorityArn
    Permission:
      type: object
      properties:
        Actions:
          description: The actions that the specified AWS service principal can use. Actions IssueCertificate, GetCertificate and ListPermissions must be provided.
          type: array
          x-insertionOrder: false
          items:
            type: string
        CertificateAuthorityArn:
          description: The Amazon Resource Name (ARN) of the Private Certificate Authority that grants the permission.
          type: string
        Principal:
          description: The AWS service or identity that receives the permission. At this time, the only valid principal is acm.amazonaws.com.
          type: string
        SourceAccount:
          description: The ID of the calling account.
          type: string
      required:
        - Actions
        - CertificateAuthorityArn
        - Principal
      x-stackql-resource-name: permission
      x-stackql-primaryIdentifier:
        - CertificateAuthorityArn
        - Principal
  x-stackQL-resources:
    certificates:
      name: certificates
      id: aws.acmpca.certificates
      x-cfn-schema-name: Certificate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CertificateAuthorityArn') as certificate_authority_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ACMPCA::Certificate'
    certificate:
      name: certificate
      id: aws.acmpca.certificate
      x-cfn-schema-name: Certificate
      x-type: get
      x-identifiers:
        - Arn
        - CertificateAuthorityArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApiPassthrough.Extensions') as api_passthrough_extensions,
              JSON_EXTRACT(Properties, '$.ApiPassthrough.Subject') as api_passthrough_subject,
              JSON_EXTRACT(Properties, '$.CertificateSigningRequest') as certificate_signing_request,
              JSON_EXTRACT(Properties, '$.SigningAlgorithm') as signing_algorithm,
              JSON_EXTRACT(Properties, '$.Validity.Value') as validity_value,
              JSON_EXTRACT(Properties, '$.Validity.Type') as validity_type,
              JSON_EXTRACT(Properties, '$.ValidityNotBefore.Value') as validity_not_before_value,
              JSON_EXTRACT(Properties, '$.ValidityNotBefore.Type') as validity_not_before_type,
              JSON_EXTRACT(Properties, '$.Certificate') as certificate
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ACMPCA::Certificate'
    certificate_authorities:
      name: certificate_authorities
      id: aws.acmpca.certificate_authorities
      x-cfn-schema-name: CertificateAuthority
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ACMPCA::CertificateAuthority'
    certificate_authority:
      name: certificate_authority
      id: aws.acmpca.certificate_authority
      x-cfn-schema-name: CertificateAuthority
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.KeyAlgorithm') as key_algorithm,
              JSON_EXTRACT(Properties, '$.SigningAlgorithm') as signing_algorithm,
              JSON_EXTRACT(Properties, '$.Subject.Country') as subject_country,
              JSON_EXTRACT(Properties, '$.Subject.Organization') as subject_organization,
              JSON_EXTRACT(Properties, '$.Subject.OrganizationalUnit') as subject_organizational_unit,
              JSON_EXTRACT(Properties, '$.Subject.DistinguishedNameQualifier') as subject_distinguished_name_qualifier,
              JSON_EXTRACT(Properties, '$.Subject.State') as subject_state,
              JSON_EXTRACT(Properties, '$.Subject.CommonName') as subject_common_name,
              JSON_EXTRACT(Properties, '$.Subject.SerialNumber') as subject_serial_number,
              JSON_EXTRACT(Properties, '$.Subject.Locality') as subject_locality,
              JSON_EXTRACT(Properties, '$.Subject.Title') as subject_title,
              JSON_EXTRACT(Properties, '$.Subject.Surname') as subject_surname,
              JSON_EXTRACT(Properties, '$.Subject.GivenName') as subject_given_name,
              JSON_EXTRACT(Properties, '$.Subject.Initials') as subject_initials,
              JSON_EXTRACT(Properties, '$.Subject.Pseudonym') as subject_pseudonym,
              JSON_EXTRACT(Properties, '$.Subject.GenerationQualifier') as subject_generation_qualifier,
              JSON_EXTRACT(Properties, '$.Subject.CustomAttributes') as subject_custom_attributes,
              JSON_EXTRACT(Properties, '$.RevocationConfiguration.CrlConfiguration') as revocation_configuration_crl_configuration,
              JSON_EXTRACT(Properties, '$.RevocationConfiguration.OcspConfiguration') as revocation_configuration_ocsp_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CertificateSigningRequest') as certificate_signing_request,
              JSON_EXTRACT(Properties, '$.CsrExtensions.KeyUsage') as csr_extensions_key_usage,
              JSON_EXTRACT(Properties, '$.CsrExtensions.SubjectInformationAccess') as csr_extensions_subject_information_access,
              JSON_EXTRACT(Properties, '$.KeyStorageSecurityStandard') as key_storage_security_standard,
              JSON_EXTRACT(Properties, '$.UsageMode') as usage_mode
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ACMPCA::CertificateAuthority'
    certificate_authority_activations:
      name: certificate_authority_activations
      id: aws.acmpca.certificate_authority_activations
      x-cfn-schema-name: CertificateAuthorityActivation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CertificateAuthorityArn') as certificate_authority_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ACMPCA::CertificateAuthorityActivation'
    certificate_authority_activation:
      name: certificate_authority_activation
      id: aws.acmpca.certificate_authority_activation
      x-cfn-schema-name: CertificateAuthorityActivation
      x-type: get
      x-identifiers:
        - CertificateAuthorityArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CertificateAuthorityArn') as certificate_authority_arn,
              JSON_EXTRACT(Properties, '$.Certificate') as certificate,
              JSON_EXTRACT(Properties, '$.CertificateChain') as certificate_chain,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.CompleteCertificateChain') as complete_certificate_chain
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ACMPCA::CertificateAuthorityActivation'
    permissions:
      name: permissions
      id: aws.acmpca.permissions
      x-cfn-schema-name: Permission
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CertificateAuthorityArn') as certificate_authority_arn,
              JSON_EXTRACT(Properties, '$.Principal') as principal
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ACMPCA::Permission'
    permission:
      name: permission
      id: aws.acmpca.permission
      x-cfn-schema-name: Permission
      x-type: get
      x-identifiers:
        - CertificateAuthorityArn
        - Principal
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.CertificateAuthorityArn') as certificate_authority_arn,
              JSON_EXTRACT(Properties, '$.Principal') as principal,
              JSON_EXTRACT(Properties, '$.SourceAccount') as source_account
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ACMPCA::Permission'
