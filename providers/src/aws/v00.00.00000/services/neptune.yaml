openapi: 3.0.0
info:
  title: Neptune
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    DBClusterRole:
      description: Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.
      type: object
      additionalProperties: false
      properties:
        FeatureName:
          description: The name of the feature associated with the AWS Identity and Access Management (IAM) role. For the list of supported feature names, see DBEngineVersion in the Amazon Neptune API Reference.
          type: string
        RoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role that is associated with the DB cluster.
          type: string
      required:
        - RoleArn
    ServerlessScalingConfiguration:
      description: Contains the scaling configuration of an Neptune Serverless DB cluster.
      type: object
      additionalProperties: false
      properties:
        MinCapacity:
          description: The minimum number of Neptune capacity units (NCUs) for a DB instance in an Neptune Serverless cluster. You can specify NCU values in half-step increments, such as 8, 8.5, 9, and so on. The smallest value you can use is 1, whereas the largest is 128.
          type: number
          minimum: 1
          maximum: 128
        MaxCapacity:
          description: The maximum number of Neptune capacity units (NCUs) for a DB instance in an Neptune Serverless cluster. You can specify NCU values in half-step increments, such as 40, 40.5, 41, and so on. The smallest value you can use is 2.5, whereas the largest is 128.
          type: number
          minimum: 2.5
          maximum: 128
      required:
        - MinCapacity
        - MaxCapacity
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
      required:
        - Key
    DBCluster:
      type: object
      properties:
        Endpoint:
          description: 'The connection endpoint for the DB cluster. For example: `mystack-mydbcluster-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`'
          type: string
        ReadEndpoint:
          description: 'The reader endpoint for the DB cluster. For example: `mystack-mydbcluster-ro-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`'
          type: string
        ClusterResourceId:
          description: 'The resource id for the DB cluster. For example: `cluster-ABCD1234EFGH5678IJKL90MNOP`. The cluster ID uniquely identifies the cluster and is used in things like IAM authentication policies.'
          type: string
        AssociatedRoles:
          description: Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/DBClusterRole'
        AvailabilityZones:
          description: Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
        BackupRetentionPeriod:
          description: Specifies the number of days for which automatic DB snapshots are retained.
          default: 1
          minimum: 1
          type: integer
        CopyTagsToSnapshot:
          description: A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default behaviour is not to copy them.
          type: boolean
        DBClusterIdentifier:
          description: The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster stored as a lowercase string.
          type: string
          pattern: ^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$
          minLength: 1
          maxLength: 63
        DBClusterParameterGroupName:
          description: Provides the name of the DB cluster parameter group.
          type: string
        DBInstanceParameterGroupName:
          description: The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major EngineVersion upgrade request.
          type: string
        DBPort:
          description: |-
            The port number on which the DB instances in the DB cluster accept connections. 

            If not specified, the default port used is `8182`. 

            Note: `Port` property will soon be deprecated from this resource. Please update existing templates to rename it with new property `DBPort` having same functionalities.
          type: integer
        DBSubnetGroupName:
          description: Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.
          type: string
        DeletionProtection:
          description: Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled.
          type: boolean
        EnableCloudwatchLogsExports:
          description: Specifies a list of log types that are enabled for export to CloudWatch Logs.
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
        EngineVersion:
          description: Indicates the database engine version.
          type: string
        IamAuthEnabled:
          description: True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
          type: boolean
        KmsKeyId:
          description: The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, the default KMS key is used. If you specify this property, you must set the StorageEncrypted property to true.
          type: string
        Port:
          description: 'The port number on which the DB cluster accepts connections. For example: `8182`.'
          type: string
        PreferredBackupWindow:
          description: Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.
          type: string
        PreferredMaintenanceWindow:
          description: Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
          type: string
        RestoreToTime:
          description: |-
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

            If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

            If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
          type: string
        RestoreType:
          description: |-
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

            If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

            If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
          type: string
          default: full-copy
        ServerlessScalingConfiguration:
          description: Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster.
          $ref: '#/components/schemas/ServerlessScalingConfiguration'
        SnapshotIdentifier:
          description: |-
            Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot.

            After you restore a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed.

            However, if you don't specify the SnapshotIdentifier, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB cluster is deleted.
          type: string
        SourceDBClusterIdentifier:
          description: |-
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

            If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

            If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
          type: string
        StorageEncrypted:
          description: |-
            Indicates whether the DB cluster is encrypted.

            If you specify the KmsKeyId property, then you must enable encryption and set this property to true.

            If you enable the StorageEncrypted property but don't specify KmsKeyId property, then the default KMS key is used. If you specify KmsKeyId property, then that KMS Key is used to encrypt the database instances in the DB cluster.

            If you specify the SourceDBClusterIdentifier property and don't specify this property or disable it. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the KmsKeyId property from the source cluster is used.

            If you specify the DBSnapshotIdentifier and don't specify this property or disable it. The value is inherited from the snapshot, and the specified KmsKeyId property from the snapshot is used.
          type: boolean
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: The tags assigned to this cluster.
          items:
            $ref: '#/components/schemas/Tag'
        UseLatestRestorableTime:
          description: |-
            Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

            If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

            If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
          type: boolean
        VpcSecurityGroupIds:
          description: Provides a list of VPC security groups that the DB cluster belongs to.
          uniqueItems: true
          x-insertionOrder: true
          items:
            type: string
          type: array
      x-stackql-resource-name: db_cluster
      description: The AWS::Neptune::DBCluster resource creates an Amazon Neptune DB cluster.
      x-type-name: AWS::Neptune::DBCluster
      x-stackql-primary-identifier:
        - DBClusterIdentifier
      x-create-only-properties:
        - AvailabilityZones
        - DBClusterIdentifier
        - DBSubnetGroupName
        - KmsKeyId
        - RestoreToTime
        - RestoreType
        - SnapshotIdentifier
        - SourceDBClusterIdentifier
        - StorageEncrypted
        - UseLatestRestorableTime
      x-write-only-properties:
        - DBInstanceParameterGroupName
        - RestoreToTime
        - RestoreType
        - SnapshotIdentifier
        - SourceDBClusterIdentifier
        - UseLatestRestorableTime
      x-read-only-properties:
        - Endpoint
        - ClusterResourceId
        - Port
        - ReadEndpoint
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - rds:AddRoleToDBCluster
          - rds:AddTagsToResource
          - rds:CreateDBCluster
          - rds:CreateDBInstance
          - rds:DescribeDBClusters
          - rds:ListTagsForResource
          - rds:ModifyDBCluster
          - rds:RestoreDBClusterFromSnapshot
          - rds:RestoreDBClusterToPointInTime
          - kms:CreateGrant
          - kms:DescribeKey
        read:
          - rds:DescribeDBClusters
          - rds:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
        update:
          - ec2:DescribeSecurityGroups
          - iam:PassRole
          - rds:AddRoleToDBCluster
          - rds:AddTagsToResource
          - rds:DescribeDBClusters
          - rds:DescribeDBInstances
          - rds:DescribeDBSubnetGroups
          - rds:DescribeGlobalClusters
          - rds:ListTagsForResource
          - rds:ModifyDBCluster
          - rds:ModifyDBInstance
          - rds:RemoveFromGlobalCluster
          - rds:RemoveRoleFromDBCluster
          - rds:RemoveTagsFromResource
          - kms:CreateGrant
          - kms:DescribeKey
        delete:
          - rds:DeleteDBCluster
          - rds:DeleteDBInstance
          - rds:DescribeDBClusters
          - rds:DescribeGlobalClusters
          - rds:ListTagsForResource
          - rds:RemoveFromGlobalCluster
          - rds:CreateDBClusterSnapshot
          - kms:CreateGrant
          - kms:DescribeKey
        list:
          - rds:DescribeDBClusters
          - rds:ListTagsForResource
          - kms:CreateGrant
          - kms:DescribeKey
    CreateDBClusterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Endpoint:
              description: 'The connection endpoint for the DB cluster. For example: `mystack-mydbcluster-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`'
              type: string
            ReadEndpoint:
              description: 'The reader endpoint for the DB cluster. For example: `mystack-mydbcluster-ro-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`'
              type: string
            ClusterResourceId:
              description: 'The resource id for the DB cluster. For example: `cluster-ABCD1234EFGH5678IJKL90MNOP`. The cluster ID uniquely identifies the cluster and is used in things like IAM authentication policies.'
              type: string
            AssociatedRoles:
              description: Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
              type: array
              uniqueItems: true
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/DBClusterRole'
            AvailabilityZones:
              description: Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.
              type: array
              uniqueItems: true
              x-insertionOrder: true
              items:
                type: string
            BackupRetentionPeriod:
              description: Specifies the number of days for which automatic DB snapshots are retained.
              default: 1
              minimum: 1
              type: integer
            CopyTagsToSnapshot:
              description: A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default behaviour is not to copy them.
              type: boolean
            DBClusterIdentifier:
              description: The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster stored as a lowercase string.
              type: string
              pattern: ^[a-zA-Z]{1}(?:-?[a-zA-Z0-9]){0,62}$
              minLength: 1
              maxLength: 63
            DBClusterParameterGroupName:
              description: Provides the name of the DB cluster parameter group.
              type: string
            DBInstanceParameterGroupName:
              description: The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major EngineVersion upgrade request.
              type: string
            DBPort:
              description: |-
                The port number on which the DB instances in the DB cluster accept connections. 

                If not specified, the default port used is `8182`. 

                Note: `Port` property will soon be deprecated from this resource. Please update existing templates to rename it with new property `DBPort` having same functionalities.
              type: integer
            DBSubnetGroupName:
              description: Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets in the subnet group.
              type: string
            DeletionProtection:
              description: Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled.
              type: boolean
            EnableCloudwatchLogsExports:
              description: Specifies a list of log types that are enabled for export to CloudWatch Logs.
              type: array
              uniqueItems: true
              x-insertionOrder: true
              items:
                type: string
            EngineVersion:
              description: Indicates the database engine version.
              type: string
            IamAuthEnabled:
              description: True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.
              type: boolean
            KmsKeyId:
              description: The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted property but don't specify this property, the default KMS key is used. If you specify this property, you must set the StorageEncrypted property to true.
              type: string
            Port:
              description: 'The port number on which the DB cluster accepts connections. For example: `8182`.'
              type: string
            PreferredBackupWindow:
              description: Specifies the daily time range during which automated backups are created if automated backups are enabled, as determined by the BackupRetentionPeriod.
              type: string
            PreferredMaintenanceWindow:
              description: Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
              type: string
            RestoreToTime:
              description: |-
                Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

                If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

                If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
              type: string
            RestoreType:
              description: |-
                Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

                If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

                If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
              type: string
              default: full-copy
            ServerlessScalingConfiguration:
              description: Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster.
              $ref: '#/components/schemas/ServerlessScalingConfiguration'
            SnapshotIdentifier:
              description: |-
                Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot.

                After you restore a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the data in the database is not changed.

                However, if you don't specify the SnapshotIdentifier, an empty DB cluster is created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB cluster is deleted.
              type: string
            SourceDBClusterIdentifier:
              description: |-
                Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

                If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

                If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
              type: string
            StorageEncrypted:
              description: |-
                Indicates whether the DB cluster is encrypted.

                If you specify the KmsKeyId property, then you must enable encryption and set this property to true.

                If you enable the StorageEncrypted property but don't specify KmsKeyId property, then the default KMS key is used. If you specify KmsKeyId property, then that KMS Key is used to encrypt the database instances in the DB cluster.

                If you specify the SourceDBClusterIdentifier property and don't specify this property or disable it. The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the KmsKeyId property from the source cluster is used.

                If you specify the DBSnapshotIdentifier and don't specify this property or disable it. The value is inherited from the snapshot, and the specified KmsKeyId property from the snapshot is used.
              type: boolean
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: The tags assigned to this cluster.
              items:
                $ref: '#/components/schemas/Tag'
            UseLatestRestorableTime:
              description: |-
                Creates a new DB cluster from a DB snapshot or DB cluster snapshot.

                If a DB snapshot is specified, the target DB cluster is created from the source DB snapshot with a default configuration and default security group.

                If a DB cluster snapshot is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.
              type: boolean
            VpcSecurityGroupIds:
              description: Provides a list of VPC security groups that the DB cluster belongs to.
              uniqueItems: true
              x-insertionOrder: true
              items:
                type: string
              type: array
          x-stackQL-stringOnly: true
      x-title: CreateDBClusterRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    db_clusters:
      name: db_clusters
      id: aws.neptune.db_clusters
      x-cfn-schema-name: DBCluster
      x-cfn-type-name: AWS::Neptune::DBCluster
      x-identifiers:
        - DBClusterIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DBCluster&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Neptune::DBCluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Neptune::DBCluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Neptune::DBCluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/db_clusters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/db_clusters/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/db_clusters/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.ReadEndpoint') as read_endpoint,
              JSON_EXTRACT(Properties, '$.ClusterResourceId') as cluster_resource_id,
              JSON_EXTRACT(Properties, '$.AssociatedRoles') as associated_roles,
              JSON_EXTRACT(Properties, '$.AvailabilityZones') as availability_zones,
              JSON_EXTRACT(Properties, '$.BackupRetentionPeriod') as backup_retention_period,
              JSON_EXTRACT(Properties, '$.CopyTagsToSnapshot') as copy_tags_to_snapshot,
              JSON_EXTRACT(Properties, '$.DBClusterIdentifier') as db_cluster_identifier,
              JSON_EXTRACT(Properties, '$.DBClusterParameterGroupName') as db_cluster_parameter_group_name,
              JSON_EXTRACT(Properties, '$.DBInstanceParameterGroupName') as db_instance_parameter_group_name,
              JSON_EXTRACT(Properties, '$.DBPort') as db_port,
              JSON_EXTRACT(Properties, '$.DBSubnetGroupName') as db_subnet_group_name,
              JSON_EXTRACT(Properties, '$.DeletionProtection') as deletion_protection,
              JSON_EXTRACT(Properties, '$.EnableCloudwatchLogsExports') as enable_cloudwatch_logs_exports,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.IamAuthEnabled') as iam_auth_enabled,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Port') as port,
              JSON_EXTRACT(Properties, '$.PreferredBackupWindow') as preferred_backup_window,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.RestoreToTime') as restore_to_time,
              JSON_EXTRACT(Properties, '$.RestoreType') as restore_type,
              JSON_EXTRACT(Properties, '$.ServerlessScalingConfiguration') as serverless_scaling_configuration,
              JSON_EXTRACT(Properties, '$.SnapshotIdentifier') as snapshot_identifier,
              JSON_EXTRACT(Properties, '$.SourceDBClusterIdentifier') as source_db_cluster_identifier,
              JSON_EXTRACT(Properties, '$.StorageEncrypted') as storage_encrypted,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UseLatestRestorableTime') as use_latest_restorable_time,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroupIds') as vpc_security_group_ids
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Neptune::DBCluster'
              AND data__Identifier = '<DBClusterIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Endpoint') as endpoint,
                JSON_EXTRACT(detail.Properties, '$.ReadEndpoint') as read_endpoint,
                JSON_EXTRACT(detail.Properties, '$.ClusterResourceId') as cluster_resource_id,
                JSON_EXTRACT(detail.Properties, '$.AssociatedRoles') as associated_roles,
                JSON_EXTRACT(detail.Properties, '$.AvailabilityZones') as availability_zones,
                JSON_EXTRACT(detail.Properties, '$.BackupRetentionPeriod') as backup_retention_period,
                JSON_EXTRACT(detail.Properties, '$.CopyTagsToSnapshot') as copy_tags_to_snapshot,
                JSON_EXTRACT(detail.Properties, '$.DBClusterIdentifier') as db_cluster_identifier,
                JSON_EXTRACT(detail.Properties, '$.DBClusterParameterGroupName') as db_cluster_parameter_group_name,
                JSON_EXTRACT(detail.Properties, '$.DBInstanceParameterGroupName') as db_instance_parameter_group_name,
                JSON_EXTRACT(detail.Properties, '$.DBPort') as db_port,
                JSON_EXTRACT(detail.Properties, '$.DBSubnetGroupName') as db_subnet_group_name,
                JSON_EXTRACT(detail.Properties, '$.DeletionProtection') as deletion_protection,
                JSON_EXTRACT(detail.Properties, '$.EnableCloudwatchLogsExports') as enable_cloudwatch_logs_exports,
                JSON_EXTRACT(detail.Properties, '$.EngineVersion') as engine_version,
                JSON_EXTRACT(detail.Properties, '$.IamAuthEnabled') as iam_auth_enabled,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
                JSON_EXTRACT(detail.Properties, '$.Port') as port,
                JSON_EXTRACT(detail.Properties, '$.PreferredBackupWindow') as preferred_backup_window,
                JSON_EXTRACT(detail.Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
                JSON_EXTRACT(detail.Properties, '$.RestoreToTime') as restore_to_time,
                JSON_EXTRACT(detail.Properties, '$.RestoreType') as restore_type,
                JSON_EXTRACT(detail.Properties, '$.ServerlessScalingConfiguration') as serverless_scaling_configuration,
                JSON_EXTRACT(detail.Properties, '$.SnapshotIdentifier') as snapshot_identifier,
                JSON_EXTRACT(detail.Properties, '$.SourceDBClusterIdentifier') as source_db_cluster_identifier,
                JSON_EXTRACT(detail.Properties, '$.StorageEncrypted') as storage_encrypted,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UseLatestRestorableTime') as use_latest_restorable_time,
                JSON_EXTRACT(detail.Properties, '$.VpcSecurityGroupIds') as vpc_security_group_ids
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Neptune::DBCluster'
                AND detail.data__TypeName = 'AWS::Neptune::DBCluster'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Endpoint') as endpoint,
                  json_extract_path_text(Properties, 'ReadEndpoint') as read_endpoint,
                  json_extract_path_text(Properties, 'ClusterResourceId') as cluster_resource_id,
                  json_extract_path_text(Properties, 'AssociatedRoles') as associated_roles,
                  json_extract_path_text(Properties, 'AvailabilityZones') as availability_zones,
                  json_extract_path_text(Properties, 'BackupRetentionPeriod') as backup_retention_period,
                  json_extract_path_text(Properties, 'CopyTagsToSnapshot') as copy_tags_to_snapshot,
                  json_extract_path_text(Properties, 'DBClusterIdentifier') as db_cluster_identifier,
                  json_extract_path_text(Properties, 'DBClusterParameterGroupName') as db_cluster_parameter_group_name,
                  json_extract_path_text(Properties, 'DBInstanceParameterGroupName') as db_instance_parameter_group_name,
                  json_extract_path_text(Properties, 'DBPort') as db_port,
                  json_extract_path_text(Properties, 'DBSubnetGroupName') as db_subnet_group_name,
                  json_extract_path_text(Properties, 'DeletionProtection') as deletion_protection,
                  json_extract_path_text(Properties, 'EnableCloudwatchLogsExports') as enable_cloudwatch_logs_exports,
                  json_extract_path_text(Properties, 'EngineVersion') as engine_version,
                  json_extract_path_text(Properties, 'IamAuthEnabled') as iam_auth_enabled,
                  json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                  json_extract_path_text(Properties, 'Port') as port,
                  json_extract_path_text(Properties, 'PreferredBackupWindow') as preferred_backup_window,
                  json_extract_path_text(Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                  json_extract_path_text(Properties, 'RestoreToTime') as restore_to_time,
                  json_extract_path_text(Properties, 'RestoreType') as restore_type,
                  json_extract_path_text(Properties, 'ServerlessScalingConfiguration') as serverless_scaling_configuration,
                  json_extract_path_text(Properties, 'SnapshotIdentifier') as snapshot_identifier,
                  json_extract_path_text(Properties, 'SourceDBClusterIdentifier') as source_db_cluster_identifier,
                  json_extract_path_text(Properties, 'StorageEncrypted') as storage_encrypted,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UseLatestRestorableTime') as use_latest_restorable_time,
                  json_extract_path_text(Properties, 'VpcSecurityGroupIds') as vpc_security_group_ids
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Neptune::DBCluster'
                  AND data__Identifier = '<DBClusterIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Endpoint') as endpoint,
                    json_extract_path_text(detail.Properties, 'ReadEndpoint') as read_endpoint,
                    json_extract_path_text(detail.Properties, 'ClusterResourceId') as cluster_resource_id,
                    json_extract_path_text(detail.Properties, 'AssociatedRoles') as associated_roles,
                    json_extract_path_text(detail.Properties, 'AvailabilityZones') as availability_zones,
                    json_extract_path_text(detail.Properties, 'BackupRetentionPeriod') as backup_retention_period,
                    json_extract_path_text(detail.Properties, 'CopyTagsToSnapshot') as copy_tags_to_snapshot,
                    json_extract_path_text(detail.Properties, 'DBClusterIdentifier') as db_cluster_identifier,
                    json_extract_path_text(detail.Properties, 'DBClusterParameterGroupName') as db_cluster_parameter_group_name,
                    json_extract_path_text(detail.Properties, 'DBInstanceParameterGroupName') as db_instance_parameter_group_name,
                    json_extract_path_text(detail.Properties, 'DBPort') as db_port,
                    json_extract_path_text(detail.Properties, 'DBSubnetGroupName') as db_subnet_group_name,
                    json_extract_path_text(detail.Properties, 'DeletionProtection') as deletion_protection,
                    json_extract_path_text(detail.Properties, 'EnableCloudwatchLogsExports') as enable_cloudwatch_logs_exports,
                    json_extract_path_text(detail.Properties, 'EngineVersion') as engine_version,
                    json_extract_path_text(detail.Properties, 'IamAuthEnabled') as iam_auth_enabled,
                    json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                    json_extract_path_text(detail.Properties, 'Port') as port,
                    json_extract_path_text(detail.Properties, 'PreferredBackupWindow') as preferred_backup_window,
                    json_extract_path_text(detail.Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                    json_extract_path_text(detail.Properties, 'RestoreToTime') as restore_to_time,
                    json_extract_path_text(detail.Properties, 'RestoreType') as restore_type,
                    json_extract_path_text(detail.Properties, 'ServerlessScalingConfiguration') as serverless_scaling_configuration,
                    json_extract_path_text(detail.Properties, 'SnapshotIdentifier') as snapshot_identifier,
                    json_extract_path_text(detail.Properties, 'SourceDBClusterIdentifier') as source_db_cluster_identifier,
                    json_extract_path_text(detail.Properties, 'StorageEncrypted') as storage_encrypted,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UseLatestRestorableTime') as use_latest_restorable_time,
                    json_extract_path_text(detail.Properties, 'VpcSecurityGroupIds') as vpc_security_group_ids
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Neptune::DBCluster'
                    AND detail.data__TypeName = 'AWS::Neptune::DBCluster'
                    AND listing.region = 'us-east-1'
    db_clusters_list_only:
      name: db_clusters_list_only
      id: aws.neptune.db_clusters_list_only
      x-cfn-schema-name: DBCluster
      x-cfn-type-name: AWS::Neptune::DBCluster
      x-identifiers:
        - DBClusterIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DBClusterIdentifier') as db_cluster_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Neptune::DBCluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DBClusterIdentifier') as db_cluster_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Neptune::DBCluster'
                AND region = 'us-east-1'
    db_cluster_tags:
      name: db_cluster_tags
      id: aws.neptune.db_cluster_tags
      x-cfn-schema-name: DBCluster
      x-cfn-type-name: AWS::Neptune::DBCluster
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(detail.Properties, '$.ReadEndpoint') as read_endpoint,
              JSON_EXTRACT(detail.Properties, '$.ClusterResourceId') as cluster_resource_id,
              JSON_EXTRACT(detail.Properties, '$.AssociatedRoles') as associated_roles,
              JSON_EXTRACT(detail.Properties, '$.AvailabilityZones') as availability_zones,
              JSON_EXTRACT(detail.Properties, '$.BackupRetentionPeriod') as backup_retention_period,
              JSON_EXTRACT(detail.Properties, '$.CopyTagsToSnapshot') as copy_tags_to_snapshot,
              JSON_EXTRACT(detail.Properties, '$.DBClusterIdentifier') as db_cluster_identifier,
              JSON_EXTRACT(detail.Properties, '$.DBClusterParameterGroupName') as db_cluster_parameter_group_name,
              JSON_EXTRACT(detail.Properties, '$.DBInstanceParameterGroupName') as db_instance_parameter_group_name,
              JSON_EXTRACT(detail.Properties, '$.DBPort') as db_port,
              JSON_EXTRACT(detail.Properties, '$.DBSubnetGroupName') as db_subnet_group_name,
              JSON_EXTRACT(detail.Properties, '$.DeletionProtection') as deletion_protection,
              JSON_EXTRACT(detail.Properties, '$.EnableCloudwatchLogsExports') as enable_cloudwatch_logs_exports,
              JSON_EXTRACT(detail.Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(detail.Properties, '$.IamAuthEnabled') as iam_auth_enabled,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(detail.Properties, '$.Port') as port,
              JSON_EXTRACT(detail.Properties, '$.PreferredBackupWindow') as preferred_backup_window,
              JSON_EXTRACT(detail.Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(detail.Properties, '$.RestoreToTime') as restore_to_time,
              JSON_EXTRACT(detail.Properties, '$.RestoreType') as restore_type,
              JSON_EXTRACT(detail.Properties, '$.ServerlessScalingConfiguration') as serverless_scaling_configuration,
              JSON_EXTRACT(detail.Properties, '$.SnapshotIdentifier') as snapshot_identifier,
              JSON_EXTRACT(detail.Properties, '$.SourceDBClusterIdentifier') as source_db_cluster_identifier,
              JSON_EXTRACT(detail.Properties, '$.StorageEncrypted') as storage_encrypted,
              JSON_EXTRACT(detail.Properties, '$.UseLatestRestorableTime') as use_latest_restorable_time,
              JSON_EXTRACT(detail.Properties, '$.VpcSecurityGroupIds') as vpc_security_group_ids
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Neptune::DBCluster'
              AND detail.data__TypeName = 'AWS::Neptune::DBCluster'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Endpoint') as endpoint,
                json_extract_path_text(detail.Properties, 'ReadEndpoint') as read_endpoint,
                json_extract_path_text(detail.Properties, 'ClusterResourceId') as cluster_resource_id,
                json_extract_path_text(detail.Properties, 'AssociatedRoles') as associated_roles,
                json_extract_path_text(detail.Properties, 'AvailabilityZones') as availability_zones,
                json_extract_path_text(detail.Properties, 'BackupRetentionPeriod') as backup_retention_period,
                json_extract_path_text(detail.Properties, 'CopyTagsToSnapshot') as copy_tags_to_snapshot,
                json_extract_path_text(detail.Properties, 'DBClusterIdentifier') as db_cluster_identifier,
                json_extract_path_text(detail.Properties, 'DBClusterParameterGroupName') as db_cluster_parameter_group_name,
                json_extract_path_text(detail.Properties, 'DBInstanceParameterGroupName') as db_instance_parameter_group_name,
                json_extract_path_text(detail.Properties, 'DBPort') as db_port,
                json_extract_path_text(detail.Properties, 'DBSubnetGroupName') as db_subnet_group_name,
                json_extract_path_text(detail.Properties, 'DeletionProtection') as deletion_protection,
                json_extract_path_text(detail.Properties, 'EnableCloudwatchLogsExports') as enable_cloudwatch_logs_exports,
                json_extract_path_text(detail.Properties, 'EngineVersion') as engine_version,
                json_extract_path_text(detail.Properties, 'IamAuthEnabled') as iam_auth_enabled,
                json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(detail.Properties, 'Port') as port,
                json_extract_path_text(detail.Properties, 'PreferredBackupWindow') as preferred_backup_window,
                json_extract_path_text(detail.Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                json_extract_path_text(detail.Properties, 'RestoreToTime') as restore_to_time,
                json_extract_path_text(detail.Properties, 'RestoreType') as restore_type,
                json_extract_path_text(detail.Properties, 'ServerlessScalingConfiguration') as serverless_scaling_configuration,
                json_extract_path_text(detail.Properties, 'SnapshotIdentifier') as snapshot_identifier,
                json_extract_path_text(detail.Properties, 'SourceDBClusterIdentifier') as source_db_cluster_identifier,
                json_extract_path_text(detail.Properties, 'StorageEncrypted') as storage_encrypted,
                json_extract_path_text(detail.Properties, 'UseLatestRestorableTime') as use_latest_restorable_time,
                json_extract_path_text(detail.Properties, 'VpcSecurityGroupIds') as vpc_security_group_ids
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Neptune::DBCluster'
                AND detail.data__TypeName = 'AWS::Neptune::DBCluster'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DBCluster&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDBCluster
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDBClusterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
