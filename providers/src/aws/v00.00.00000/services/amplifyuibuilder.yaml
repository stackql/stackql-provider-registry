openapi: 3.0.0
info:
  title: AmplifyUIBuilder
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ActionParameters:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ComponentProperty'
        Url:
          $ref: '#/components/schemas/ComponentProperty'
        Anchor:
          $ref: '#/components/schemas/ComponentProperty'
        Target:
          $ref: '#/components/schemas/ComponentProperty'
        Global:
          $ref: '#/components/schemas/ComponentProperty'
        Model:
          type: string
        Id:
          $ref: '#/components/schemas/ComponentProperty'
        Fields:
          $ref: '#/components/schemas/ComponentProperties'
        State:
          $ref: '#/components/schemas/MutationActionSetStateParameter'
      additionalProperties: false
    ComponentBindingProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentBindingPropertiesValue'
      additionalProperties: false
    ComponentBindingPropertiesValue:
      type: object
      properties:
        Type:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/ComponentBindingPropertiesValueProperties'
        DefaultValue:
          type: string
      additionalProperties: false
    ComponentBindingPropertiesValueProperties:
      type: object
      properties:
        Model:
          type: string
        Field:
          type: string
        Predicates:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        UserAttribute:
          type: string
        Bucket:
          type: string
        Key:
          type: string
        DefaultValue:
          type: string
        SlotName:
          type: string
      additionalProperties: false
    ComponentChild:
      type: object
      properties:
        ComponentType:
          type: string
        Name:
          type: string
        Properties:
          $ref: '#/components/schemas/ComponentProperties'
        Children:
          type: array
          items:
            $ref: '#/components/schemas/ComponentChild'
        Events:
          $ref: '#/components/schemas/ComponentEvents'
        SourceId:
          type: string
      required:
        - ComponentType
        - Name
        - Properties
      additionalProperties: false
    ComponentCollectionProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentDataConfiguration'
      additionalProperties: false
    ComponentConditionProperty:
      type: object
      properties:
        Property:
          type: string
        Field:
          type: string
        Operator:
          type: string
        Operand:
          type: string
        Then:
          $ref: '#/components/schemas/ComponentProperty'
        Else:
          $ref: '#/components/schemas/ComponentProperty'
        OperandType:
          type: string
      additionalProperties: false
    ComponentDataConfiguration:
      type: object
      properties:
        Model:
          type: string
        Sort:
          type: array
          items:
            $ref: '#/components/schemas/SortProperty'
        Predicate:
          $ref: '#/components/schemas/Predicate'
        Identifiers:
          type: array
          items:
            type: string
      required:
        - Model
      additionalProperties: false
    ComponentEvent:
      type: object
      properties:
        Action:
          type: string
        Parameters:
          $ref: '#/components/schemas/ActionParameters'
        BindingEvent:
          type: string
      additionalProperties: false
    ComponentEvents:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentEvent'
      additionalProperties: false
    ComponentOverrides:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentOverridesValue'
      additionalProperties: false
    ComponentOverridesValue:
      type: object
      x-patternProperties:
        .+:
          type: string
      additionalProperties: false
    ComponentProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/ComponentProperty'
      additionalProperties: false
    ComponentProperty:
      type: object
      properties:
        Value:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/ComponentPropertyBindingProperties'
        CollectionBindingProperties:
          $ref: '#/components/schemas/ComponentPropertyBindingProperties'
        DefaultValue:
          type: string
        Model:
          type: string
        Bindings:
          $ref: '#/components/schemas/FormBindings'
        Event:
          type: string
        UserAttribute:
          type: string
        Concat:
          type: array
          items:
            $ref: '#/components/schemas/ComponentProperty'
        Condition:
          $ref: '#/components/schemas/ComponentConditionProperty'
        Configured:
          type: boolean
        Type:
          type: string
        ImportedValue:
          type: string
        ComponentName:
          type: string
        Property:
          type: string
      additionalProperties: false
    ComponentPropertyBindingProperties:
      type: object
      properties:
        Property:
          type: string
        Field:
          type: string
      required:
        - Property
      additionalProperties: false
    ComponentVariant:
      type: object
      properties:
        VariantValues:
          $ref: '#/components/schemas/ComponentVariantValues'
        Overrides:
          $ref: '#/components/schemas/ComponentOverrides'
      additionalProperties: false
    ComponentVariantValues:
      type: object
      x-patternProperties:
        .+:
          type: string
      additionalProperties: false
    FormBindingElement:
      type: object
      properties:
        Element:
          type: string
        Property:
          type: string
      required:
        - Element
        - Property
      additionalProperties: false
    FormBindings:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/FormBindingElement'
      additionalProperties: false
    MutationActionSetStateParameter:
      type: object
      properties:
        ComponentName:
          type: string
        Property:
          type: string
        Set:
          $ref: '#/components/schemas/ComponentProperty'
      required:
        - ComponentName
        - Property
        - Set
      additionalProperties: false
    Predicate:
      type: object
      properties:
        Or:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        And:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
        Field:
          type: string
        Operator:
          type: string
        Operand:
          type: string
        OperandType:
          type: string
          pattern: ^boolean|string|number$
      additionalProperties: false
    SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    SortProperty:
      type: object
      properties:
        Field:
          type: string
        Direction:
          $ref: '#/components/schemas/SortDirection'
      required:
        - Direction
        - Field
      additionalProperties: false
    Tags:
      type: object
      x-patternProperties:
        ^(?!aws:)[a-zA-Z+-=._:/]+$:
          type: string
          maxLength: 256
          minLength: 1
      additionalProperties: false
    Component:
      type: object
      properties:
        AppId:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/ComponentBindingProperties'
        Children:
          type: array
          items:
            $ref: '#/components/schemas/ComponentChild'
        CollectionProperties:
          $ref: '#/components/schemas/ComponentCollectionProperties'
        ComponentType:
          type: string
          maxLength: 255
          minLength: 1
        CreatedAt:
          type: string
          format: date-time
        EnvironmentName:
          type: string
        Events:
          $ref: '#/components/schemas/ComponentEvents'
        Id:
          type: string
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 255
          minLength: 1
        Overrides:
          $ref: '#/components/schemas/ComponentOverrides'
        Properties:
          $ref: '#/components/schemas/ComponentProperties'
        SchemaVersion:
          type: string
        SourceId:
          type: string
        Tags:
          $ref: '#/components/schemas/Tags'
        Variants:
          type: array
          items:
            $ref: '#/components/schemas/ComponentVariant'
      x-stackql-resource-name: component
      description: Definition of AWS::AmplifyUIBuilder::Component Resource Type
      x-type-name: AWS::AmplifyUIBuilder::Component
      x-stackql-primary-identifier:
        - AppId
        - EnvironmentName
        - Id
      x-create-only-properties:
        - AppId
        - EnvironmentName
      x-read-only-properties:
        - CreatedAt
        - Id
        - ModifiedAt
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplifyuibuilder:CreateComponent
          - amplifyuibuilder:GetComponent
          - amplifyuibuilder:TagResource
        read:
          - amplify:GetApp
          - amplifyuibuilder:GetComponent
        update:
          - amplify:GetApp
          - amplifyuibuilder:GetComponent
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
          - amplifyuibuilder:UpdateComponent
        delete:
          - amplify:GetApp
          - amplifyuibuilder:DeleteComponent
          - amplifyuibuilder:GetComponent
          - amplifyuibuilder:UntagResource
        list:
          - amplify:GetApp
          - amplifyuibuilder:ListComponents
    FieldConfig:
      type: object
      properties:
        Label:
          type: string
        Position:
          $ref: '#/components/schemas/FieldPosition'
        Excluded:
          type: boolean
        InputType:
          $ref: '#/components/schemas/FieldInputConfig'
        Validations:
          type: array
          items:
            $ref: '#/components/schemas/FieldValidationConfiguration'
      additionalProperties: false
    FieldInputConfig:
      type: object
      properties:
        Type:
          type: string
        Required:
          type: boolean
        ReadOnly:
          type: boolean
        Placeholder:
          type: string
        DefaultValue:
          type: string
        DescriptiveText:
          type: string
        DefaultChecked:
          type: boolean
        DefaultCountryCode:
          type: string
        ValueMappings:
          $ref: '#/components/schemas/ValueMappings'
        Name:
          type: string
        MinValue:
          type: number
        MaxValue:
          type: number
        Step:
          type: number
        Value:
          type: string
        IsArray:
          type: boolean
        FileUploaderConfig:
          $ref: '#/components/schemas/FileUploaderFieldConfig'
      required:
        - Type
      additionalProperties: false
    FieldPosition:
      oneOf:
        - type: object
          title: Fixed
          properties:
            Fixed:
              $ref: '#/components/schemas/FixedPosition'
          required:
            - Fixed
          additionalProperties: false
        - type: object
          title: RightOf
          properties:
            RightOf:
              type: string
          required:
            - RightOf
          additionalProperties: false
        - type: object
          title: Below
          properties:
            Below:
              type: string
          required:
            - Below
          additionalProperties: false
    FieldValidationConfiguration:
      type: object
      properties:
        Type:
          type: string
        StrValues:
          type: array
          items:
            type: string
        NumValues:
          type: array
          items:
            type: number
        ValidationMessage:
          type: string
      required:
        - Type
      additionalProperties: false
    FieldsMap:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/FieldConfig'
      additionalProperties: false
    FileUploaderFieldConfig:
      type: object
      properties:
        AccessLevel:
          $ref: '#/components/schemas/StorageAccessLevel'
        AcceptedFileTypes:
          type: array
          items:
            type: string
        ShowThumbnails:
          type: boolean
        IsResumable:
          type: boolean
        MaxFileCount:
          type: number
        MaxSize:
          type: number
      required:
        - AcceptedFileTypes
        - AccessLevel
      additionalProperties: false
    FixedPosition:
      type: string
      enum:
        - first
    FormActionType:
      type: string
      enum:
        - create
        - update
    FormButton:
      type: object
      properties:
        Excluded:
          type: boolean
        Children:
          type: string
        Position:
          $ref: '#/components/schemas/FieldPosition'
      additionalProperties: false
    FormButtonsPosition:
      type: string
      enum:
        - top
        - bottom
        - top_and_bottom
    FormCTA:
      type: object
      properties:
        Position:
          $ref: '#/components/schemas/FormButtonsPosition'
        Clear:
          $ref: '#/components/schemas/FormButton'
        Cancel:
          $ref: '#/components/schemas/FormButton'
        Submit:
          $ref: '#/components/schemas/FormButton'
      additionalProperties: false
    FormDataSourceType:
      type: string
      enum:
        - DataStore
        - Custom
    FormDataTypeConfig:
      type: object
      properties:
        DataSourceType:
          $ref: '#/components/schemas/FormDataSourceType'
        DataTypeName:
          type: string
      required:
        - DataSourceType
        - DataTypeName
      additionalProperties: false
    FormInputBindingProperties:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/FormInputBindingPropertiesValue'
      additionalProperties: false
    FormInputBindingPropertiesValue:
      type: object
      properties:
        Type:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/FormInputBindingPropertiesValueProperties'
      additionalProperties: false
    FormInputBindingPropertiesValueProperties:
      type: object
      properties:
        Model:
          type: string
      additionalProperties: false
    FormInputValueProperty:
      type: object
      properties:
        Value:
          type: string
        BindingProperties:
          $ref: '#/components/schemas/FormInputValuePropertyBindingProperties'
        Concat:
          type: array
          items:
            $ref: '#/components/schemas/FormInputValueProperty'
      additionalProperties: false
    FormInputValuePropertyBindingProperties:
      type: object
      properties:
        Property:
          type: string
        Field:
          type: string
      required:
        - Property
      additionalProperties: false
    FormStyle:
      type: object
      properties:
        HorizontalGap:
          $ref: '#/components/schemas/FormStyleConfig'
        VerticalGap:
          $ref: '#/components/schemas/FormStyleConfig'
        OuterPadding:
          $ref: '#/components/schemas/FormStyleConfig'
      additionalProperties: false
    FormStyleConfig:
      oneOf:
        - type: object
          title: TokenReference
          properties:
            TokenReference:
              type: string
          required:
            - TokenReference
          additionalProperties: false
        - type: object
          title: Value
          properties:
            Value:
              type: string
          required:
            - Value
          additionalProperties: false
    LabelDecorator:
      type: string
      enum:
        - required
        - optional
        - none
    SectionalElement:
      type: object
      properties:
        Type:
          type: string
        Position:
          $ref: '#/components/schemas/FieldPosition'
        Text:
          type: string
        Level:
          type: number
        Orientation:
          type: string
        Excluded:
          type: boolean
      required:
        - Type
      additionalProperties: false
    SectionalElementMap:
      type: object
      x-patternProperties:
        .+:
          $ref: '#/components/schemas/SectionalElement'
      additionalProperties: false
    StorageAccessLevel:
      type: string
      enum:
        - public
        - protected
        - private
    ValueMapping:
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/FormInputValueProperty'
        Value:
          $ref: '#/components/schemas/FormInputValueProperty'
      required:
        - Value
      additionalProperties: false
    ValueMappings:
      type: object
      properties:
        Values:
          type: array
          items:
            $ref: '#/components/schemas/ValueMapping'
        BindingProperties:
          $ref: '#/components/schemas/FormInputBindingProperties'
      required:
        - Values
      additionalProperties: false
    Form:
      type: object
      properties:
        AppId:
          type: string
        Cta:
          $ref: '#/components/schemas/FormCTA'
        DataType:
          $ref: '#/components/schemas/FormDataTypeConfig'
        EnvironmentName:
          type: string
        Fields:
          $ref: '#/components/schemas/FieldsMap'
        FormActionType:
          $ref: '#/components/schemas/FormActionType'
        Id:
          type: string
        LabelDecorator:
          $ref: '#/components/schemas/LabelDecorator'
        Name:
          type: string
          maxLength: 255
          minLength: 1
        SchemaVersion:
          type: string
        SectionalElements:
          $ref: '#/components/schemas/SectionalElementMap'
        Style:
          $ref: '#/components/schemas/FormStyle'
        Tags:
          $ref: '#/components/schemas/Tags'
      x-stackql-resource-name: form
      description: Definition of AWS::AmplifyUIBuilder::Form Resource Type
      x-type-name: AWS::AmplifyUIBuilder::Form
      x-stackql-primary-identifier:
        - AppId
        - EnvironmentName
        - Id
      x-create-only-properties:
        - AppId
        - EnvironmentName
      x-read-only-properties:
        - Id
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplifyuibuilder:CreateForm
          - amplifyuibuilder:GetForm
          - amplifyuibuilder:TagResource
        read:
          - amplify:GetApp
          - amplifyuibuilder:GetForm
        update:
          - amplify:GetApp
          - amplifyuibuilder:GetForm
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
          - amplifyuibuilder:UpdateForm
        delete:
          - amplify:GetApp
          - amplifyuibuilder:DeleteForm
          - amplifyuibuilder:UntagResource
        list:
          - amplify:GetApp
          - amplifyuibuilder:ListForms
    ThemeValue:
      type: object
      properties:
        Value:
          type: string
        Children:
          type: array
          items:
            $ref: '#/components/schemas/ThemeValues'
      additionalProperties: false
    ThemeValues:
      type: object
      properties:
        Key:
          type: string
        Value:
          $ref: '#/components/schemas/ThemeValue'
      additionalProperties: false
    Theme:
      type: object
      properties:
        AppId:
          type: string
        CreatedAt:
          type: string
          format: date-time
        EnvironmentName:
          type: string
        Id:
          type: string
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 255
          minLength: 1
        Overrides:
          type: array
          items:
            $ref: '#/components/schemas/ThemeValues'
        Tags:
          $ref: '#/components/schemas/Tags'
        Values:
          type: array
          items:
            $ref: '#/components/schemas/ThemeValues'
      x-stackql-resource-name: theme
      description: Definition of AWS::AmplifyUIBuilder::Theme Resource Type
      x-type-name: AWS::AmplifyUIBuilder::Theme
      x-stackql-primary-identifier:
        - AppId
        - EnvironmentName
        - Id
      x-create-only-properties:
        - AppId
        - EnvironmentName
      x-read-only-properties:
        - CreatedAt
        - Id
        - ModifiedAt
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplifyuibuilder:CreateTheme
          - amplifyuibuilder:GetTheme
          - amplifyuibuilder:TagResource
        read:
          - amplify:GetApp
          - amplifyuibuilder:GetTheme
        update:
          - amplify:GetApp
          - amplifyuibuilder:GetTheme
          - amplifyuibuilder:TagResource
          - amplifyuibuilder:UntagResource
          - amplifyuibuilder:UpdateTheme
        delete:
          - amplify:GetApp
          - amplifyuibuilder:DeleteTheme
          - amplifyuibuilder:UntagResource
        list:
          - amplify:GetApp
          - amplifyuibuilder:ListThemes
    CreateComponentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AppId:
              type: string
            BindingProperties:
              $ref: '#/components/schemas/ComponentBindingProperties'
            Children:
              type: array
              items:
                $ref: '#/components/schemas/ComponentChild'
            CollectionProperties:
              $ref: '#/components/schemas/ComponentCollectionProperties'
            ComponentType:
              type: string
              maxLength: 255
              minLength: 1
            CreatedAt:
              type: string
              format: date-time
            EnvironmentName:
              type: string
            Events:
              $ref: '#/components/schemas/ComponentEvents'
            Id:
              type: string
            ModifiedAt:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 255
              minLength: 1
            Overrides:
              $ref: '#/components/schemas/ComponentOverrides'
            Properties:
              $ref: '#/components/schemas/ComponentProperties'
            SchemaVersion:
              type: string
            SourceId:
              type: string
            Tags:
              $ref: '#/components/schemas/Tags'
            Variants:
              type: array
              items:
                $ref: '#/components/schemas/ComponentVariant'
          x-stackQL-stringOnly: true
      x-title: CreateComponentRequest
      type: object
      required: []
    CreateFormRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AppId:
              type: string
            Cta:
              $ref: '#/components/schemas/FormCTA'
            DataType:
              $ref: '#/components/schemas/FormDataTypeConfig'
            EnvironmentName:
              type: string
            Fields:
              $ref: '#/components/schemas/FieldsMap'
            FormActionType:
              $ref: '#/components/schemas/FormActionType'
            Id:
              type: string
            LabelDecorator:
              $ref: '#/components/schemas/LabelDecorator'
            Name:
              type: string
              maxLength: 255
              minLength: 1
            SchemaVersion:
              type: string
            SectionalElements:
              $ref: '#/components/schemas/SectionalElementMap'
            Style:
              $ref: '#/components/schemas/FormStyle'
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateFormRequest
      type: object
      required: []
    CreateThemeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AppId:
              type: string
            CreatedAt:
              type: string
              format: date-time
            EnvironmentName:
              type: string
            Id:
              type: string
            ModifiedAt:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 255
              minLength: 1
            Overrides:
              type: array
              items:
                $ref: '#/components/schemas/ThemeValues'
            Tags:
              $ref: '#/components/schemas/Tags'
            Values:
              type: array
              items:
                $ref: '#/components/schemas/ThemeValues'
          x-stackQL-stringOnly: true
      x-title: CreateThemeRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    components:
      name: components
      id: aws.amplifyuibuilder.components
      x-cfn-schema-name: Component
      x-cfn-type-name: AWS::AmplifyUIBuilder::Component
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Component&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Component"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Component"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Component"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/components/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/components/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/components/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.BindingProperties') as binding_properties,
              JSON_EXTRACT(Properties, '$.Children') as children,
              JSON_EXTRACT(Properties, '$.CollectionProperties') as collection_properties,
              JSON_EXTRACT(Properties, '$.ComponentType') as component_type,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Events') as events,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Overrides') as overrides,
              JSON_EXTRACT(Properties, '$.Properties') as properties,
              JSON_EXTRACT(Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(Properties, '$.SourceId') as source_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Variants') as variants
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
              AND data__Identifier = '<AppId>|<EnvironmentName>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
                JSON_EXTRACT(detail.Properties, '$.BindingProperties') as binding_properties,
                JSON_EXTRACT(detail.Properties, '$.Children') as children,
                JSON_EXTRACT(detail.Properties, '$.CollectionProperties') as collection_properties,
                JSON_EXTRACT(detail.Properties, '$.ComponentType') as component_type,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentName') as environment_name,
                JSON_EXTRACT(detail.Properties, '$.Events') as events,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.ModifiedAt') as modified_at,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Overrides') as overrides,
                JSON_EXTRACT(detail.Properties, '$.Properties') as properties,
                JSON_EXTRACT(detail.Properties, '$.SchemaVersion') as schema_version,
                JSON_EXTRACT(detail.Properties, '$.SourceId') as source_id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Variants') as variants
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AppId') as app_id,
                  json_extract_path_text(Properties, 'BindingProperties') as binding_properties,
                  json_extract_path_text(Properties, 'Children') as children,
                  json_extract_path_text(Properties, 'CollectionProperties') as collection_properties,
                  json_extract_path_text(Properties, 'ComponentType') as component_type,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                  json_extract_path_text(Properties, 'Events') as events,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Overrides') as overrides,
                  json_extract_path_text(Properties, 'Properties') as properties,
                  json_extract_path_text(Properties, 'SchemaVersion') as schema_version,
                  json_extract_path_text(Properties, 'SourceId') as source_id,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Variants') as variants
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                  AND data__Identifier = '<AppId>|<EnvironmentName>|<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AppId') as app_id,
                    json_extract_path_text(detail.Properties, 'BindingProperties') as binding_properties,
                    json_extract_path_text(detail.Properties, 'Children') as children,
                    json_extract_path_text(detail.Properties, 'CollectionProperties') as collection_properties,
                    json_extract_path_text(detail.Properties, 'ComponentType') as component_type,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'EnvironmentName') as environment_name,
                    json_extract_path_text(detail.Properties, 'Events') as events,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'ModifiedAt') as modified_at,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Overrides') as overrides,
                    json_extract_path_text(detail.Properties, 'Properties') as properties,
                    json_extract_path_text(detail.Properties, 'SchemaVersion') as schema_version,
                    json_extract_path_text(detail.Properties, 'SourceId') as source_id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Variants') as variants
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                    AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                    AND listing.region = 'us-east-1'
    components_list_only:
      name: components_list_only
      id: aws.amplifyuibuilder.components_list_only
      x-cfn-schema-name: Component
      x-cfn-type-name: AWS::AmplifyUIBuilder::Component
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                AND region = 'us-east-1'
    component_tags:
      name: component_tags
      id: aws.amplifyuibuilder.component_tags
      x-cfn-schema-name: Component
      x-cfn-type-name: AWS::AmplifyUIBuilder::Component
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
              JSON_EXTRACT(detail.Properties, '$.BindingProperties') as binding_properties,
              JSON_EXTRACT(detail.Properties, '$.Children') as children,
              JSON_EXTRACT(detail.Properties, '$.CollectionProperties') as collection_properties,
              JSON_EXTRACT(detail.Properties, '$.ComponentType') as component_type,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(detail.Properties, '$.Events') as events,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Overrides') as overrides,
              JSON_EXTRACT(detail.Properties, '$.Properties') as properties,
              JSON_EXTRACT(detail.Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(detail.Properties, '$.SourceId') as source_id,
              JSON_EXTRACT(detail.Properties, '$.Variants') as variants
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
              AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AppId') as app_id,
                json_extract_path_text(detail.Properties, 'BindingProperties') as binding_properties,
                json_extract_path_text(detail.Properties, 'Children') as children,
                json_extract_path_text(detail.Properties, 'CollectionProperties') as collection_properties,
                json_extract_path_text(detail.Properties, 'ComponentType') as component_type,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(detail.Properties, 'Events') as events,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'ModifiedAt') as modified_at,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Overrides') as overrides,
                json_extract_path_text(detail.Properties, 'Properties') as properties,
                json_extract_path_text(detail.Properties, 'SchemaVersion') as schema_version,
                json_extract_path_text(detail.Properties, 'SourceId') as source_id,
                json_extract_path_text(detail.Properties, 'Variants') as variants
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Component'
                AND listing.region = 'us-east-1'
    forms:
      name: forms
      id: aws.amplifyuibuilder.forms
      x-cfn-schema-name: Form
      x-cfn-type-name: AWS::AmplifyUIBuilder::Form
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Form&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Form"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Form"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Form"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/forms/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/forms/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/forms/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.Cta') as cta,
              JSON_EXTRACT(Properties, '$.DataType') as data_type,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.FormActionType') as form_action_type,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LabelDecorator') as label_decorator,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(Properties, '$.SectionalElements') as sectional_elements,
              JSON_EXTRACT(Properties, '$.Style') as style,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
              AND data__Identifier = '<AppId>|<EnvironmentName>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
                JSON_EXTRACT(detail.Properties, '$.Cta') as cta,
                JSON_EXTRACT(detail.Properties, '$.DataType') as data_type,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentName') as environment_name,
                JSON_EXTRACT(detail.Properties, '$.Fields') as fields,
                JSON_EXTRACT(detail.Properties, '$.FormActionType') as form_action_type,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.LabelDecorator') as label_decorator,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SchemaVersion') as schema_version,
                JSON_EXTRACT(detail.Properties, '$.SectionalElements') as sectional_elements,
                JSON_EXTRACT(detail.Properties, '$.Style') as style,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AppId') as app_id,
                  json_extract_path_text(Properties, 'Cta') as cta,
                  json_extract_path_text(Properties, 'DataType') as data_type,
                  json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                  json_extract_path_text(Properties, 'Fields') as fields,
                  json_extract_path_text(Properties, 'FormActionType') as form_action_type,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'LabelDecorator') as label_decorator,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SchemaVersion') as schema_version,
                  json_extract_path_text(Properties, 'SectionalElements') as sectional_elements,
                  json_extract_path_text(Properties, 'Style') as style,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                  AND data__Identifier = '<AppId>|<EnvironmentName>|<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AppId') as app_id,
                    json_extract_path_text(detail.Properties, 'Cta') as cta,
                    json_extract_path_text(detail.Properties, 'DataType') as data_type,
                    json_extract_path_text(detail.Properties, 'EnvironmentName') as environment_name,
                    json_extract_path_text(detail.Properties, 'Fields') as fields,
                    json_extract_path_text(detail.Properties, 'FormActionType') as form_action_type,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'LabelDecorator') as label_decorator,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SchemaVersion') as schema_version,
                    json_extract_path_text(detail.Properties, 'SectionalElements') as sectional_elements,
                    json_extract_path_text(detail.Properties, 'Style') as style,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                    AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                    AND listing.region = 'us-east-1'
    forms_list_only:
      name: forms_list_only
      id: aws.amplifyuibuilder.forms_list_only
      x-cfn-schema-name: Form
      x-cfn-type-name: AWS::AmplifyUIBuilder::Form
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                AND region = 'us-east-1'
    form_tags:
      name: form_tags
      id: aws.amplifyuibuilder.form_tags
      x-cfn-schema-name: Form
      x-cfn-type-name: AWS::AmplifyUIBuilder::Form
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
              JSON_EXTRACT(detail.Properties, '$.Cta') as cta,
              JSON_EXTRACT(detail.Properties, '$.DataType') as data_type,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(detail.Properties, '$.Fields') as fields,
              JSON_EXTRACT(detail.Properties, '$.FormActionType') as form_action_type,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.LabelDecorator') as label_decorator,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.SchemaVersion') as schema_version,
              JSON_EXTRACT(detail.Properties, '$.SectionalElements') as sectional_elements,
              JSON_EXTRACT(detail.Properties, '$.Style') as style
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
              AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AppId') as app_id,
                json_extract_path_text(detail.Properties, 'Cta') as cta,
                json_extract_path_text(detail.Properties, 'DataType') as data_type,
                json_extract_path_text(detail.Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(detail.Properties, 'Fields') as fields,
                json_extract_path_text(detail.Properties, 'FormActionType') as form_action_type,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'LabelDecorator') as label_decorator,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'SchemaVersion') as schema_version,
                json_extract_path_text(detail.Properties, 'SectionalElements') as sectional_elements,
                json_extract_path_text(detail.Properties, 'Style') as style
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Form'
                AND listing.region = 'us-east-1'
    themes:
      name: themes
      id: aws.amplifyuibuilder.themes
      x-cfn-schema-name: Theme
      x-cfn-type-name: AWS::AmplifyUIBuilder::Theme
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Theme&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Theme"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Theme"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AmplifyUIBuilder::Theme"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/themes/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/themes/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/themes/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Overrides') as overrides,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Values') as _values
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
              AND data__Identifier = '<AppId>|<EnvironmentName>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentName') as environment_name,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.ModifiedAt') as modified_at,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Overrides') as overrides,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Values') as _values
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AppId') as app_id,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Overrides') as overrides,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Values') as _values
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                  AND data__Identifier = '<AppId>|<EnvironmentName>|<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AppId') as app_id,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'EnvironmentName') as environment_name,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'ModifiedAt') as modified_at,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Overrides') as overrides,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Values') as _values
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                    AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                    AND listing.region = 'us-east-1'
    themes_list_only:
      name: themes_list_only
      id: aws.amplifyuibuilder.themes_list_only
      x-cfn-schema-name: Theme
      x-cfn-type-name: AWS::AmplifyUIBuilder::Theme
      x-identifiers:
        - AppId
        - EnvironmentName
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppId') as app_id,
                json_extract_path_text(Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                AND region = 'us-east-1'
    theme_tags:
      name: theme_tags
      id: aws.amplifyuibuilder.theme_tags
      x-cfn-schema-name: Theme
      x-cfn-type-name: AWS::AmplifyUIBuilder::Theme
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentName') as environment_name,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Overrides') as overrides,
              JSON_EXTRACT(detail.Properties, '$.Values') as _values
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
              AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AppId') as app_id,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'EnvironmentName') as environment_name,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'ModifiedAt') as modified_at,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Overrides') as overrides,
                json_extract_path_text(detail.Properties, 'Values') as _values
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                AND detail.data__TypeName = 'AWS::AmplifyUIBuilder::Theme'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Component&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateComponent
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateComponentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Form&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateForm
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFormRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Theme&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTheme
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateThemeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
