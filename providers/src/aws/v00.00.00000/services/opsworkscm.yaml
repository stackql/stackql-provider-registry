openapi: 3.0.0
info:
  title: OpsWorksCM
  version: 1.0.0
paths: {}
components:
  schemas:
    EngineAttribute:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
          pattern: (?s).*
          maxLength: 10000
        Name:
          type: string
          pattern: (?s).*
          maxLength: 10000
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
          minLength: 0
          maxLength: 256
        Key:
          type: string
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
          minLength: 1
          maxLength: 128
      required:
        - Value
        - Key
    Server:
      type: object
      properties:
        KeyPair:
          type: string
          pattern: .*
          maxLength: 10000
        EngineVersion:
          type: string
          maxLength: 10000
        ServiceRoleArn:
          type: string
          pattern: arn:aws:iam::[0-9]{12}:role/.*
          maxLength: 10000
        DisableAutomatedBackup:
          type: boolean
        BackupId:
          type: string
          pattern: '[a-zA-Z][a-zA-Z0-9\-\.\:]*'
          maxLength: 79
        EngineModel:
          type: string
          maxLength: 10000
        PreferredMaintenanceWindow:
          type: string
          pattern: ^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
          maxLength: 10000
        AssociatePublicIpAddress:
          type: boolean
        InstanceProfileArn:
          type: string
          pattern: arn:aws:iam::[0-9]{12}:instance-profile/.*
          maxLength: 10000
        CustomCertificate:
          type: string
          pattern: (?s)\s*-----BEGIN CERTIFICATE-----.+-----END CERTIFICATE-----\s*
          maxLength: 2097152
        PreferredBackupWindow:
          type: string
          pattern: ^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):)?([0-1][0-9]|2[0-3]):[0-5][0-9]$
          maxLength: 10000
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
            maxLength: 10000
        SubnetIds:
          type: array
          uniqueItems: false
          items:
            type: string
            maxLength: 10000
        CustomDomain:
          type: string
          pattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$
          maxLength: 253
        Endpoint:
          type: string
          maxLength: 10000
        CustomPrivateKey:
          type: string
          pattern: (?ms)\s*^-----BEGIN (?-s:.*)PRIVATE KEY-----$.*?^-----END (?-s:.*)PRIVATE KEY-----$\s*
          maxLength: 4096
        ServerName:
          type: string
          minLength: 1
          maxLength: 40
          pattern: '[a-zA-Z][a-zA-Z0-9\-]*'
        EngineAttributes:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EngineAttribute'
        BackupRetentionCount:
          type: integer
          minLength: 1
        Arn:
          type: string
          maxLength: 10000
        InstanceType:
          type: string
          maxLength: 10000
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Engine:
          type: string
          maxLength: 10000
      required:
        - ServiceRoleArn
        - InstanceProfileArn
        - InstanceType
      x-stackql-resource-name: server
      x-stackql-primaryIdentifier:
        - ServerName
  x-stackQL-resources:
    servers:
      name: servers
      id: aws.opsworkscm.servers
      x-cfn-schema-name: Server
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ServerName') as server_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpsWorksCM::Server'
    server:
      name: server
      id: aws.opsworkscm.server
      x-cfn-schema-name: Server
      x-type: get
      x-identifiers:
        - ServerName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyPair') as key_pair,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.ServiceRoleArn') as service_role_arn,
              JSON_EXTRACT(Properties, '$.DisableAutomatedBackup') as disable_automated_backup,
              JSON_EXTRACT(Properties, '$.BackupId') as backup_id,
              JSON_EXTRACT(Properties, '$.EngineModel') as engine_model,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.AssociatePublicIpAddress') as associate_public_ip_address,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.CustomCertificate') as custom_certificate,
              JSON_EXTRACT(Properties, '$.PreferredBackupWindow') as preferred_backup_window,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.CustomDomain') as custom_domain,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.CustomPrivateKey') as custom_private_key,
              JSON_EXTRACT(Properties, '$.ServerName') as server_name,
              JSON_EXTRACT(Properties, '$.EngineAttributes') as engine_attributes,
              JSON_EXTRACT(Properties, '$.BackupRetentionCount') as backup_retention_count,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Engine') as engine
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::OpsWorksCM::Server'
