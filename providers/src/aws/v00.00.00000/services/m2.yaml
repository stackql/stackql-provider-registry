openapi: 3.0.0
info:
  title: M2
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Definition:
      oneOf:
        - type: object
          title: S3Location
          properties:
            S3Location:
              type: string
              pattern: ^\S{1,2000}$
          required:
            - S3Location
          additionalProperties: false
        - type: object
          title: Content
          properties:
            Content:
              type: string
              maxLength: 65000
              minLength: 1
          required:
            - Content
          additionalProperties: false
    EngineType:
      type: string
      description: The target platform for the environment.
      enum:
        - microfocus
        - bluage
    TagMap:
      type: object
      description: Defines tags associated to an environment.
      maxProperties: 200
      minProperties: 0
      x-patternProperties:
        ^(?!aws:).+$:
          type: string
          maxLength: 256
          minLength: 0
      additionalProperties: false
    Application:
      type: object
      properties:
        ApplicationArn:
          type: string
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
        ApplicationId:
          type: string
          pattern: ^\S{1,80}$
        Definition:
          $ref: '#/components/schemas/Definition'
        Description:
          type: string
          maxLength: 500
          minLength: 0
        EngineType:
          $ref: '#/components/schemas/EngineType'
        KmsKeyId:
          type: string
          maxLength: 2048
          description: The ID or the Amazon Resource Name (ARN) of the customer managed KMS Key used for encrypting application-related resources.
        Name:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
        RoleArn:
          type: string
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]|):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
        Tags:
          $ref: '#/components/schemas/TagMap'
      required:
        - EngineType
        - Name
      x-stackql-resource-name: application
      description: Represents an application that runs on an AWS Mainframe Modernization Environment
      x-type-name: AWS::M2::Application
      x-stackql-primary-identifier:
        - ApplicationArn
      x-create-only-properties:
        - EngineType
        - Name
        - KmsKeyId
        - RoleArn
      x-write-only-properties:
        - Definition
      x-read-only-properties:
        - ApplicationArn
        - ApplicationId
      x-required-properties:
        - EngineType
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - m2:CreateApplication
          - m2:GetApplication
          - m2:ListTagsForResource
          - m2:TagResource
          - s3:GetObject
          - s3:ListBucket
          - kms:DescribeKey
          - kms:CreateGrant
          - iam:PassRole
        read:
          - m2:GetApplication
          - m2:ListTagsForResource
        update:
          - m2:UpdateApplication
          - m2:GetApplication
          - m2:ListTagsForResource
          - m2:TagResource
          - m2:UntagResource
          - s3:GetObject
          - s3:ListBucket
        delete:
          - elasticloadbalancing:DeleteListener
          - elasticloadbalancing:DeleteTargetGroup
          - logs:DeleteLogDelivery
          - m2:GetApplication
          - m2:DeleteApplication
        list:
          - m2:ListApplications
    Deployment:
      type: object
      properties:
        EnvironmentId:
          type: string
          description: The environment ID.
          pattern: ^\S{1,80}$
        ApplicationId:
          type: string
          description: The application ID.
          pattern: ^\S{1,80}$
        ApplicationVersion:
          type: integer
          description: The version number of the application to deploy
        DeploymentId:
          type: string
          description: The deployment ID.
          pattern: ^\S{1,80}$
        Status:
          type: string
          description: The status of the deployment.
      required:
        - EnvironmentId
        - ApplicationId
        - ApplicationVersion
      x-stackql-resource-name: deployment
      description: Represents a deployment resource of an AWS Mainframe Modernization (M2) application to a specified environment
      x-type-name: AWS::M2::Deployment
      x-stackql-primary-identifier:
        - ApplicationId
      x-create-only-properties:
        - EnvironmentId
        - ApplicationId
      x-read-only-properties:
        - DeploymentId
        - Status
      x-required-properties:
        - EnvironmentId
        - ApplicationId
        - ApplicationVersion
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - m2:CreateDeployment
          - m2:ListDeployments
          - m2:GetDeployment
          - iam:PassRole
          - ec2:DescribeNetworkInterfaces
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:CreateLoadBalancer
          - elasticloadbalancing:CreateTargetGroup
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:RegisterTargets
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:CreateLogGroup
          - logs:PutResourcePolicy
        read:
          - m2:ListDeployments
          - m2:GetDeployment
        update:
          - m2:CreateDeployment
          - m2:ListDeployments
          - m2:GetDeployment
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:CreateLoadBalancer
          - elasticloadbalancing:CreateTargetGroup
          - elasticloadbalancing:DeleteListener
          - elasticloadbalancing:DeleteTargetGroup
          - elasticloadbalancing:DeregisterTargets
          - elasticloadbalancing:DeleteLoadBalancer
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:RegisterTargets
          - ec2:DescribeNetworkInterfaces
        delete:
          - elasticloadbalancing:DeleteListener
          - elasticloadbalancing:DeleteTargetGroup
          - elasticloadbalancing:DeregisterTargets
          - elasticloadbalancing:DeleteLoadBalancer
          - logs:DeleteLogDelivery
          - m2:ListDeployments
          - m2:GetDeployment
          - m2:DeleteApplicationFromEnvironment
        list:
          - m2:ListDeployments
    EfsStorageConfiguration:
      type: object
      description: Defines the storage configuration for an Amazon EFS file system.
      properties:
        FileSystemId:
          type: string
          description: The file system identifier.
          pattern: ^\S{1,200}$
        MountPoint:
          type: string
          description: The mount point for the file system.
          pattern: ^\S{1,200}$
      required:
        - FileSystemId
        - MountPoint
      additionalProperties: false
    FsxStorageConfiguration:
      type: object
      description: Defines the storage configuration for an Amazon FSx file system.
      properties:
        FileSystemId:
          type: string
          description: The file system identifier.
          pattern: ^\S{1,200}$
        MountPoint:
          type: string
          description: The mount point for the file system.
          pattern: ^\S{1,200}$
      required:
        - FileSystemId
        - MountPoint
      additionalProperties: false
    HighAvailabilityConfig:
      type: object
      description: Defines the details of a high availability configuration.
      properties:
        DesiredCapacity:
          type: integer
          maximum: 100
          minimum: 1
      required:
        - DesiredCapacity
      additionalProperties: false
    NetworkType:
      type: string
      enum:
        - ipv4
        - dual
    StorageConfiguration:
      type: object
      description: Defines the storage configuration for an environment.
      oneOf:
        - properties:
            Efs:
              $ref: '#/components/schemas/EfsStorageConfiguration'
          required:
            - Efs
          additionalProperties: false
        - properties:
            Fsx:
              $ref: '#/components/schemas/FsxStorageConfiguration'
          required:
            - Fsx
          additionalProperties: false
    Environment:
      type: object
      properties:
        Description:
          type: string
          description: The description of the environment.
          maxLength: 500
          minLength: 0
        EngineType:
          $ref: '#/components/schemas/EngineType'
        EngineVersion:
          type: string
          description: The version of the runtime engine for the environment.
          pattern: ^\S{1,10}$
        EnvironmentArn:
          type: string
          description: The Amazon Resource Name (ARN) of the runtime environment.
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
        EnvironmentId:
          type: string
          description: The unique identifier of the environment.
          pattern: ^\S{1,80}$
        HighAvailabilityConfig:
          $ref: '#/components/schemas/HighAvailabilityConfig'
        InstanceType:
          type: string
          description: The type of instance underlying the environment.
          pattern: ^\S{1,20}$
        KmsKeyId:
          type: string
          maxLength: 2048
          description: The ID or the Amazon Resource Name (ARN) of the customer managed KMS Key used for encrypting environment-related resources.
        Name:
          type: string
          description: The name of the environment.
          pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
        NetworkType:
          $ref: '#/components/schemas/NetworkType'
        PreferredMaintenanceWindow:
          type: string
          description: Configures a desired maintenance window for the environment. If you do not provide a value, a random system-generated value will be assigned.
          pattern: ^\S{1,50}$
        PubliclyAccessible:
          type: boolean
          description: Specifies whether the environment is publicly accessible.
        SecurityGroupIds:
          type: array
          description: The list of security groups for the VPC associated with this environment.
          x-insertionOrder: false
          items:
            type: string
            pattern: ^\S{1,50}$
        StorageConfigurations:
          type: array
          description: The storage configurations defined for the runtime environment.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/StorageConfiguration'
        SubnetIds:
          type: array
          description: The unique identifiers of the subnets assigned to this runtime environment.
          x-insertionOrder: false
          items:
            type: string
            pattern: ^\S{1,50}$
        Tags:
          description: Tags associated to this environment.
          $ref: '#/components/schemas/TagMap'
      required:
        - EngineType
        - InstanceType
        - Name
      x-stackql-resource-name: environment
      description: Represents a runtime environment that can run migrated mainframe applications.
      x-type-name: AWS::M2::Environment
      x-stackql-primary-identifier:
        - EnvironmentArn
      x-create-only-properties:
        - Description
        - EngineType
        - KmsKeyId
        - Name
        - NetworkType
        - PubliclyAccessible
        - SecurityGroupIds
        - StorageConfigurations
        - SubnetIds
      x-read-only-properties:
        - EnvironmentArn
        - EnvironmentId
      x-required-properties:
        - EngineType
        - InstanceType
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - ec2:CreateNetworkInterface
          - ec2:CreateNetworkInterfacePermission
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:ModifyNetworkInterfaceAttribute
          - elasticfilesystem:DescribeMountTargets
          - elasticloadbalancing:CreateLoadBalancer
          - elasticloadbalancing:DeleteLoadBalancer
          - elasticloadbalancing:AddTags
          - fsx:DescribeFileSystems
          - iam:CreateServiceLinkedRole
          - kms:DescribeKey
          - kms:CreateGrant
          - m2:CreateEnvironment
          - m2:GetEnvironment
          - m2:ListTagsForResource
          - m2:TagResource
        read:
          - m2:ListTagsForResource
          - m2:GetEnvironment
        update:
          - m2:TagResource
          - m2:UntagResource
          - m2:ListTagsForResource
          - m2:GetEnvironment
          - m2:UpdateEnvironment
          - kms:DescribeKey
        delete:
          - elasticloadbalancing:DeleteLoadBalancer
          - m2:DeleteEnvironment
          - m2:GetEnvironment
        list:
          - m2:ListEnvironments
    CreateApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationArn:
              type: string
              pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
            ApplicationId:
              type: string
              pattern: ^\S{1,80}$
            Definition:
              $ref: '#/components/schemas/Definition'
            Description:
              type: string
              maxLength: 500
              minLength: 0
            EngineType:
              $ref: '#/components/schemas/EngineType'
            KmsKeyId:
              type: string
              maxLength: 2048
              description: The ID or the Amazon Resource Name (ARN) of the customer managed KMS Key used for encrypting application-related resources.
            Name:
              type: string
              pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
            RoleArn:
              type: string
              pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]|):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
            Tags:
              $ref: '#/components/schemas/TagMap'
          x-stackQL-stringOnly: true
      x-title: CreateApplicationRequest
      type: object
      required: []
    CreateDeploymentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            EnvironmentId:
              type: string
              description: The environment ID.
              pattern: ^\S{1,80}$
            ApplicationId:
              type: string
              description: The application ID.
              pattern: ^\S{1,80}$
            ApplicationVersion:
              type: integer
              description: The version number of the application to deploy
            DeploymentId:
              type: string
              description: The deployment ID.
              pattern: ^\S{1,80}$
            Status:
              type: string
              description: The status of the deployment.
          x-stackQL-stringOnly: true
      x-title: CreateDeploymentRequest
      type: object
      required: []
    CreateEnvironmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              description: The description of the environment.
              maxLength: 500
              minLength: 0
            EngineType:
              $ref: '#/components/schemas/EngineType'
            EngineVersion:
              type: string
              description: The version of the runtime engine for the environment.
              pattern: ^\S{1,10}$
            EnvironmentArn:
              type: string
              description: The Amazon Resource Name (ARN) of the runtime environment.
              pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
            EnvironmentId:
              type: string
              description: The unique identifier of the environment.
              pattern: ^\S{1,80}$
            HighAvailabilityConfig:
              $ref: '#/components/schemas/HighAvailabilityConfig'
            InstanceType:
              type: string
              description: The type of instance underlying the environment.
              pattern: ^\S{1,20}$
            KmsKeyId:
              type: string
              maxLength: 2048
              description: The ID or the Amazon Resource Name (ARN) of the customer managed KMS Key used for encrypting environment-related resources.
            Name:
              type: string
              description: The name of the environment.
              pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
            NetworkType:
              $ref: '#/components/schemas/NetworkType'
            PreferredMaintenanceWindow:
              type: string
              description: Configures a desired maintenance window for the environment. If you do not provide a value, a random system-generated value will be assigned.
              pattern: ^\S{1,50}$
            PubliclyAccessible:
              type: boolean
              description: Specifies whether the environment is publicly accessible.
            SecurityGroupIds:
              type: array
              description: The list of security groups for the VPC associated with this environment.
              x-insertionOrder: false
              items:
                type: string
                pattern: ^\S{1,50}$
            StorageConfigurations:
              type: array
              description: The storage configurations defined for the runtime environment.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/StorageConfiguration'
            SubnetIds:
              type: array
              description: The unique identifiers of the subnets assigned to this runtime environment.
              x-insertionOrder: false
              items:
                type: string
                pattern: ^\S{1,50}$
            Tags:
              description: Tags associated to this environment.
              $ref: '#/components/schemas/TagMap'
          x-stackQL-stringOnly: true
      x-title: CreateEnvironmentRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.m2.applications
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::M2::Application
      x-identifiers:
        - ApplicationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Definition') as definition,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EngineType') as engine_type,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::M2::Application'
              AND data__Identifier = '<ApplicationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationArn') as application_arn,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.Definition') as definition,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EngineType') as engine_type,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::M2::Application'
                AND detail.data__TypeName = 'AWS::M2::Application'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'Definition') as definition,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EngineType') as engine_type,
                  json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::M2::Application'
                  AND data__Identifier = '<ApplicationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationArn') as application_arn,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'Definition') as definition,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EngineType') as engine_type,
                    json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::M2::Application'
                    AND detail.data__TypeName = 'AWS::M2::Application'
                    AND listing.region = 'us-east-1'
    applications_list_only:
      name: applications_list_only
      id: aws.m2.applications_list_only
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::M2::Application
      x-identifiers:
        - ApplicationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::M2::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::M2::Application'
                AND region = 'us-east-1'
    application_tags:
      name: application_tags
      id: aws.m2.application_tags
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::M2::Application
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.Definition') as definition,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EngineType') as engine_type,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::M2::Application'
              AND detail.data__TypeName = 'AWS::M2::Application'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'Definition') as definition,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EngineType') as engine_type,
                json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::M2::Application'
                AND detail.data__TypeName = 'AWS::M2::Application'
                AND listing.region = 'us-east-1'
    deployments:
      name: deployments
      id: aws.m2.deployments
      x-cfn-schema-name: Deployment
      x-cfn-type-name: AWS::M2::Deployment
      x-identifiers:
        - ApplicationId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Deployment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Deployment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Deployment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Deployment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.ApplicationVersion') as application_version,
              JSON_EXTRACT(Properties, '$.DeploymentId') as deployment_id,
              JSON_EXTRACT(Properties, '$.Status') as status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::M2::Deployment'
              AND data__Identifier = '<ApplicationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentId') as environment_id,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.ApplicationVersion') as application_version,
                JSON_EXTRACT(detail.Properties, '$.DeploymentId') as deployment_id,
                JSON_EXTRACT(detail.Properties, '$.Status') as status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::M2::Deployment'
                AND detail.data__TypeName = 'AWS::M2::Deployment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'EnvironmentId') as environment_id,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'ApplicationVersion') as application_version,
                  json_extract_path_text(Properties, 'DeploymentId') as deployment_id,
                  json_extract_path_text(Properties, 'Status') as status
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::M2::Deployment'
                  AND data__Identifier = '<ApplicationId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'EnvironmentId') as environment_id,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'ApplicationVersion') as application_version,
                    json_extract_path_text(detail.Properties, 'DeploymentId') as deployment_id,
                    json_extract_path_text(detail.Properties, 'Status') as status
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::M2::Deployment'
                    AND detail.data__TypeName = 'AWS::M2::Deployment'
                    AND listing.region = 'us-east-1'
    deployments_list_only:
      name: deployments_list_only
      id: aws.m2.deployments_list_only
      x-cfn-schema-name: Deployment
      x-cfn-type-name: AWS::M2::Deployment
      x-identifiers:
        - ApplicationId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::M2::Deployment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::M2::Deployment'
                AND region = 'us-east-1'
    environments:
      name: environments
      id: aws.m2.environments
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::M2::Environment
      x-identifiers:
        - EnvironmentArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Environment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::M2::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/environments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EngineType') as engine_type,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.EnvironmentArn') as environment_arn,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(Properties, '$.HighAvailabilityConfig') as high_availability_config,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.NetworkType') as network_type,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.StorageConfigurations') as storage_configurations,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::M2::Environment'
              AND data__Identifier = '<EnvironmentArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EngineType') as engine_type,
                JSON_EXTRACT(detail.Properties, '$.EngineVersion') as engine_version,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentArn') as environment_arn,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentId') as environment_id,
                JSON_EXTRACT(detail.Properties, '$.HighAvailabilityConfig') as high_availability_config,
                JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.NetworkType') as network_type,
                JSON_EXTRACT(detail.Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
                JSON_EXTRACT(detail.Properties, '$.PubliclyAccessible') as publicly_accessible,
                JSON_EXTRACT(detail.Properties, '$.SecurityGroupIds') as security_group_ids,
                JSON_EXTRACT(detail.Properties, '$.StorageConfigurations') as storage_configurations,
                JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::M2::Environment'
                AND detail.data__TypeName = 'AWS::M2::Environment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EngineType') as engine_type,
                  json_extract_path_text(Properties, 'EngineVersion') as engine_version,
                  json_extract_path_text(Properties, 'EnvironmentArn') as environment_arn,
                  json_extract_path_text(Properties, 'EnvironmentId') as environment_id,
                  json_extract_path_text(Properties, 'HighAvailabilityConfig') as high_availability_config,
                  json_extract_path_text(Properties, 'InstanceType') as instance_type,
                  json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'NetworkType') as network_type,
                  json_extract_path_text(Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                  json_extract_path_text(Properties, 'PubliclyAccessible') as publicly_accessible,
                  json_extract_path_text(Properties, 'SecurityGroupIds') as security_group_ids,
                  json_extract_path_text(Properties, 'StorageConfigurations') as storage_configurations,
                  json_extract_path_text(Properties, 'SubnetIds') as subnet_ids,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::M2::Environment'
                  AND data__Identifier = '<EnvironmentArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EngineType') as engine_type,
                    json_extract_path_text(detail.Properties, 'EngineVersion') as engine_version,
                    json_extract_path_text(detail.Properties, 'EnvironmentArn') as environment_arn,
                    json_extract_path_text(detail.Properties, 'EnvironmentId') as environment_id,
                    json_extract_path_text(detail.Properties, 'HighAvailabilityConfig') as high_availability_config,
                    json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                    json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'NetworkType') as network_type,
                    json_extract_path_text(detail.Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                    json_extract_path_text(detail.Properties, 'PubliclyAccessible') as publicly_accessible,
                    json_extract_path_text(detail.Properties, 'SecurityGroupIds') as security_group_ids,
                    json_extract_path_text(detail.Properties, 'StorageConfigurations') as storage_configurations,
                    json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::M2::Environment'
                    AND detail.data__TypeName = 'AWS::M2::Environment'
                    AND listing.region = 'us-east-1'
    environments_list_only:
      name: environments_list_only
      id: aws.m2.environments_list_only
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::M2::Environment
      x-identifiers:
        - EnvironmentArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnvironmentArn') as environment_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::M2::Environment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnvironmentArn') as environment_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::M2::Environment'
                AND region = 'us-east-1'
    environment_tags:
      name: environment_tags
      id: aws.m2.environment_tags
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::M2::Environment
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EngineType') as engine_type,
              JSON_EXTRACT(detail.Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentArn') as environment_arn,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(detail.Properties, '$.HighAvailabilityConfig') as high_availability_config,
              JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.NetworkType') as network_type,
              JSON_EXTRACT(detail.Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(detail.Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(detail.Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(detail.Properties, '$.StorageConfigurations') as storage_configurations,
              JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::M2::Environment'
              AND detail.data__TypeName = 'AWS::M2::Environment'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EngineType') as engine_type,
                json_extract_path_text(detail.Properties, 'EngineVersion') as engine_version,
                json_extract_path_text(detail.Properties, 'EnvironmentArn') as environment_arn,
                json_extract_path_text(detail.Properties, 'EnvironmentId') as environment_id,
                json_extract_path_text(detail.Properties, 'HighAvailabilityConfig') as high_availability_config,
                json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'NetworkType') as network_type,
                json_extract_path_text(detail.Properties, 'PreferredMaintenanceWindow') as preferred_maintenance_window,
                json_extract_path_text(detail.Properties, 'PubliclyAccessible') as publicly_accessible,
                json_extract_path_text(detail.Properties, 'SecurityGroupIds') as security_group_ids,
                json_extract_path_text(detail.Properties, 'StorageConfigurations') as storage_configurations,
                json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::M2::Environment'
                AND detail.data__TypeName = 'AWS::M2::Environment'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Deployment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDeployment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDeploymentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Environment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEnvironment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
