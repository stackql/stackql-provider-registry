openapi: 3.0.0
info:
  title: Events
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ApiDestination:
      type: object
      properties:
        Name:
          description: Name of the apiDestination.
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\.\-_A-Za-z0-9]+'
        Description:
          type: string
          maxLength: 512
        ConnectionArn:
          description: The arn of the connection.
          type: string
          pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:connection/[\.\-_A-Za-z0-9]+/[\-A-Za-z0-9]+$
        Arn:
          description: The arn of the api destination.
          type: string
          pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:api-destination/[\.\-_A-Za-z0-9]+/[\-A-Za-z0-9]+$
        InvocationRateLimitPerSecond:
          type: integer
          minimum: 1
        InvocationEndpoint:
          description: Url endpoint to invoke.
          type: string
          pattern: ^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$
        HttpMethod:
          type: string
          enum:
            - GET
            - HEAD
            - POST
            - OPTIONS
            - PUT
            - DELETE
            - PATCH
      required:
        - ConnectionArn
        - InvocationEndpoint
        - HttpMethod
      x-stackql-resource-name: api_destination
      description: Resource Type definition for AWS::Events::ApiDestination.
      x-type-name: AWS::Events::ApiDestination
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - ConnectionArn
        - InvocationEndpoint
        - HttpMethod
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - events:CreateApiDestination
          - events:DescribeApiDestination
        read:
          - events:DescribeApiDestination
        update:
          - events:UpdateApiDestination
          - events:DescribeApiDestination
        delete:
          - events:DeleteApiDestination
          - events:DescribeApiDestination
        list:
          - events:ListApiDestinations
    Archive:
      type: object
      properties:
        ArchiveName:
          type: string
          minLength: 1
          maxLength: 48
          pattern: '[\.\-_A-Za-z0-9]+'
        SourceArn:
          type: string
        Description:
          type: string
        EventPattern:
          type: object
        Arn:
          type: string
          pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:.+\/.+$
        RetentionDays:
          type: integer
      required:
        - SourceArn
      x-stackql-resource-name: archive
      description: Resource Type definition for AWS::Events::Archive
      x-type-name: AWS::Events::Archive
      x-stackql-primary-identifier:
        - ArchiveName
      x-create-only-properties:
        - ArchiveName
        - SourceArn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - SourceArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - events:DescribeArchive
          - events:CreateArchive
        delete:
          - events:DescribeArchive
          - events:DeleteArchive
        list:
          - events:ListArchives
        update:
          - events:DescribeArchive
          - events:UpdateArchive
        read:
          - events:DescribeArchive
    AuthParameters:
      type: object
      minProperties: 1
      maxProperties: 2
      properties:
        ApiKeyAuthParameters:
          $ref: '#/components/schemas/ApiKeyAuthParameters'
        BasicAuthParameters:
          $ref: '#/components/schemas/BasicAuthParameters'
        OAuthParameters:
          $ref: '#/components/schemas/OAuthParameters'
        InvocationHttpParameters:
          $ref: '#/components/schemas/ConnectionHttpParameters'
        ConnectivityParameters:
          $ref: '#/components/schemas/ConnectivityParameters'
      oneOf:
        - required:
            - BasicAuthParameters
        - required:
            - OAuthParameters
        - required:
            - ApiKeyAuthParameters
      additionalProperties: false
    BasicAuthParameters:
      type: object
      properties:
        Username:
          type: string
          pattern: ^[ \t]*[^\x00-\x1F\x7F]+([ \t]+[^\x00-\x1F\x7F]+)*[ \t]*$
        Password:
          type: string
          pattern: ^[ \t]*[^\x00-\x1F\x7F]+([ \t]+[^\x00-\x1F\x7F]+)*[ \t]*$
      required:
        - Username
        - Password
      additionalProperties: false
    OAuthParameters:
      type: object
      properties:
        ClientParameters:
          $ref: '#/components/schemas/ClientParameters'
        AuthorizationEndpoint:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: ^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$
        HttpMethod:
          type: string
          enum:
            - GET
            - POST
            - PUT
        OAuthHttpParameters:
          $ref: '#/components/schemas/ConnectionHttpParameters'
      required:
        - ClientParameters
        - AuthorizationEndpoint
        - HttpMethod
      additionalProperties: false
    ApiKeyAuthParameters:
      type: object
      properties:
        ApiKeyName:
          type: string
          pattern: ^[ \t]*[^\x00-\x1F\x7F]+([ \t]+[^\x00-\x1F\x7F]+)*[ \t]*$
        ApiKeyValue:
          type: string
          pattern: ^[ \t]*[^\x00-\x1F\x7F]+([ \t]+[^\x00-\x1F\x7F]+)*[ \t]*$
      required:
        - ApiKeyName
        - ApiKeyValue
      additionalProperties: false
    ClientParameters:
      type: object
      properties:
        ClientID:
          type: string
          pattern: ^[ \t]*[^\x00-\x1F\x7F]+([ \t]+[^\x00-\x1F\x7F]+)*[ \t]*$
        ClientSecret:
          type: string
          pattern: ^[ \t]*[^\x00-\x1F\x7F]+([ \t]+[^\x00-\x1F\x7F]+)*[ \t]*$
      required:
        - ClientID
        - ClientSecret
      additionalProperties: false
    ConnectionHttpParameters:
      type: object
      properties:
        HeaderParameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        QueryStringParameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        BodyParameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      additionalProperties: false
    ConnectivityParameters:
      type: object
      properties:
        ResourceParameters:
          $ref: '#/components/schemas/ResourceParameters'
      required:
        - ResourceParameters
      additionalProperties: false
    ResourceParameters:
      type: object
      properties:
        ResourceConfigurationArn:
          type: string
          maxLength: 2048
          pattern: ^arn:[a-z0-9f\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:resourceconfiguration/rcfg-[0-9a-z]{17}$
        ResourceAssociationArn:
          type: string
          minLength: 20
          maxLength: 2048
          pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkresourceassociation/snra-[0-9a-z]{17}$
      required:
        - ResourceConfigurationArn
      additionalProperties: false
    Parameter:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
        IsValueSecret:
          type: boolean
          default: true
      required:
        - Key
        - Value
      additionalProperties: false
    Connection:
      type: object
      properties:
        Name:
          description: Name of the connection.
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\.\-_A-Za-z0-9]+'
        Arn:
          description: The arn of the connection resource.
          type: string
          pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:connection\/[\.\-_A-Za-z0-9]+\/[\-A-Za-z0-9]+$
        SecretArn:
          description: The arn of the secrets manager secret created in the customer account.
          type: string
          pattern: ^arn:aws([a-z]|\-)*:secretsmanager:([a-z]|\d|\-)*:([0-9]{12})?:secret:([a-z]|\d|\-)*(!)*[\/_+=\.@\-A-Za-z0-9]+$
        Description:
          description: Description of the connection.
          type: string
          maxLength: 512
        AuthorizationType:
          type: string
          enum:
            - API_KEY
            - BASIC
            - OAUTH_CLIENT_CREDENTIALS
        AuthParameters:
          $ref: '#/components/schemas/AuthParameters'
        InvocationConnectivityParameters:
          description: The private resource the HTTP request will be sent to.
          type: object
          properties:
            ResourceParameters:
              $ref: '#/components/schemas/ResourceParameters'
          required:
            - ResourceParameters
          additionalProperties: false
      x-stackql-resource-name: connection
      description: Resource Type definition for AWS::Events::Connection.
      x-type-name: AWS::Events::Connection
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - AuthParameters/BasicAuthParameters/Password
        - AuthParameters/ApiKeyAuthParameters/ApiKeyValue
        - AuthParameters/OAuthParameters/ClientParameters/ClientSecret
        - AuthParameters/OAuthParameters/OAuthHttpParameters/HeaderParameters
        - AuthParameters/OAuthParameters/OAuthHttpParameters/QueryStringParameters
        - AuthParameters/OAuthParameters/OAuthHttpParameters/BodyParameters
        - AuthParameters/InvocationHttpParameters
      x-read-only-properties:
        - Arn
        - SecretArn
        - AuthParameters/ConnectivityParameters/ResourceParameters/ResourceAssociationArn
        - InvocationConnectivityParameters/ResourceParameters/ResourceAssociationArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - events:CreateConnection
          - events:DescribeConnection
          - secretsmanager:CreateSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
          - iam:CreateServiceLinkedRole
        read:
          - events:DescribeConnection
        update:
          - events:UpdateConnection
          - events:DescribeConnection
          - secretsmanager:CreateSecret
          - secretsmanager:UpdateSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
        delete:
          - events:DeleteConnection
          - events:DescribeConnection
        list:
          - events:ListConnections
    HealthCheck:
      type: string
      minLength: 1
      maxLength: 1600
      pattern: ^arn:aws([a-z]|\-)*:route53:::healthcheck/[\-a-z0-9]+$
    Primary:
      type: object
      additionalProperties: false
      properties:
        HealthCheck:
          $ref: '#/components/schemas/HealthCheck'
      required:
        - HealthCheck
    Route:
      type: string
      minLength: 9
      maxLength: 20
      pattern: ^[\-a-z0-9]+$
    Secondary:
      type: object
      additionalProperties: false
      properties:
        Route:
          $ref: '#/components/schemas/Route'
      required:
        - Route
    FailoverConfig:
      type: object
      additionalProperties: false
      properties:
        Primary:
          $ref: '#/components/schemas/Primary'
        Secondary:
          $ref: '#/components/schemas/Secondary'
      required:
        - Primary
        - Secondary
    RoutingConfig:
      type: object
      additionalProperties: false
      properties:
        FailoverConfig:
          $ref: '#/components/schemas/FailoverConfig'
      required:
        - FailoverConfig
    EventBusArn:
      type: string
      minLength: 1
      maxLength: 512
      pattern: ^arn:aws[a-z-]*:events:[a-z]{2}-[a-z-]+-\d+:\d{12}:event-bus/[\w.-]+$
    EndpointEventBus:
      type: object
      additionalProperties: false
      properties:
        EventBusArn:
          $ref: '#/components/schemas/EventBusArn'
      required:
        - EventBusArn
    EventBuses:
      type: array
      x-insertionOrder: false
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/EndpointEventBus'
    ReplicationState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ReplicationConfig:
      type: object
      additionalProperties: false
      properties:
        State:
          $ref: '#/components/schemas/ReplicationState'
      required:
        - State
    Endpoint:
      type: object
      properties:
        Name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[\.\-_A-Za-z0-9]+$
        Arn:
          type: string
          minLength: 1
          maxLength: 1600
          pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:endpoint\/[/\.\-_A-Za-z0-9]+$
        RoleArn:
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^arn:aws[a-z-]*:iam::\d{12}:role\/[\w+=,.@/-]+$
        Description:
          type: string
          maxLength: 512
          pattern: .*
        RoutingConfig:
          $ref: '#/components/schemas/RoutingConfig'
        ReplicationConfig:
          $ref: '#/components/schemas/ReplicationConfig'
        EventBuses:
          $ref: '#/components/schemas/EventBuses'
        EndpointId:
          type: string
          minLength: 1
          maxLength: 50
          pattern: ^[A-Za-z0-9\-]+[\.][A-Za-z0-9\-]+$
        EndpointUrl:
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^(https://)?[\.\-a-z0-9]+$
        State:
          type: string
          enum:
            - ACTIVE
            - CREATING
            - UPDATING
            - DELETING
            - CREATE_FAILED
            - UPDATE_FAILED
        StateReason:
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^.*$
      required:
        - RoutingConfig
        - EventBuses
      x-stackql-resource-name: endpoint
      description: Resource Type definition for AWS::Events::Endpoint.
      x-type-name: AWS::Events::Endpoint
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - EndpointId
        - EndpointUrl
        - State
        - StateReason
      x-required-properties:
        - RoutingConfig
        - EventBuses
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - events:CreateEndpoint
          - events:DescribeEndpoint
          - route53:GetHealthCheck
          - iam:PassRole
        read:
          - events:DescribeEndpoint
        update:
          - events:DescribeEndpoint
          - events:UpdateEndpoint
          - route53:GetHealthCheck
          - iam:PassRole
        delete:
          - events:DeleteEndpoint
          - events:DescribeEndpoint
        list:
          - events:ListEndpoints
    Tag:
      additionalProperties: false
      type: object
      properties:
        Value:
          type: string
        Key:
          type: string
    EventBus:
      type: object
      properties:
        EventSourceName:
          description: If you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with.
          type: string
        Name:
          description: The name of the event bus.
          type: string
        Tags:
          description: Any tags assigned to the event bus.
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Description:
          description: The description of the event bus.
          type: string
        KmsKeyIdentifier:
          description: Kms Key Identifier used to encrypt events at rest in the event bus.
          type: string
        Policy:
          description: A JSON string that describes the permission policy statement for the event bus.
          type: object
        Arn:
          description: The Amazon Resource Name (ARN) for the event bus.
          type: string
        DeadLetterConfig:
          description: Dead Letter Queue for the event bus.
          type: object
          additionalProperties: false
          properties:
            Arn:
              type: string
      required:
        - Name
      x-stackql-resource-name: event_bus
      description: Resource type definition for AWS::Events::EventBus
      x-type-name: AWS::Events::EventBus
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - EventSourceName
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - events:UntagResource
          - events:TagResource
          - events:ListTagsForResource
      x-required-permissions:
        create:
          - events:CreateEventBus
          - events:DescribeEventBus
          - events:PutPermission
          - events:ListTagsForResource
          - events:TagResource
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        read:
          - events:DescribeEventBus
          - events:ListTagsForResource
        update:
          - events:TagResource
          - events:UntagResource
          - events:PutPermission
          - events:DescribeEventBus
          - events:UpdateEventBus
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - events:DescribeEventBus
          - events:UpdateEventBus
          - events:ListTagsForResource
          - events:UntagResource
          - events:RemovePermission
          - events:DeleteEventBus
        list:
          - events:ListEventBuses
          - events:ListTagsForResource
    CapacityProviderStrategyItem:
      additionalProperties: false
      type: object
      properties:
        CapacityProvider:
          type: string
        Base:
          type: integer
        Weight:
          type: integer
      required:
        - CapacityProvider
    HttpParameters:
      additionalProperties: false
      type: object
      properties:
        PathParameterValues:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            type: string
        HeaderParameters:
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
          additionalProperties: false
          type: object
        QueryStringParameters:
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
          additionalProperties: false
          type: object
    DeadLetterConfig:
      additionalProperties: false
      type: object
      properties:
        Arn:
          type: string
    RunCommandParameters:
      additionalProperties: false
      type: object
      properties:
        RunCommandTargets:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/RunCommandTarget'
      required:
        - RunCommandTargets
    PlacementStrategy:
      additionalProperties: false
      type: object
      properties:
        Field:
          type: string
        Type:
          type: string
    InputTransformer:
      additionalProperties: false
      type: object
      properties:
        InputPathsMap:
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
          additionalProperties: false
          type: object
        InputTemplate:
          type: string
      required:
        - InputTemplate
    KinesisParameters:
      additionalProperties: false
      type: object
      properties:
        PartitionKeyPath:
          type: string
      required:
        - PartitionKeyPath
    BatchRetryStrategy:
      additionalProperties: false
      type: object
      properties:
        Attempts:
          type: integer
    RedshiftDataParameters:
      additionalProperties: false
      type: object
      properties:
        StatementName:
          type: string
        Sqls:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            type: string
        Database:
          type: string
        SecretManagerArn:
          type: string
        DbUser:
          type: string
        Sql:
          type: string
        WithEvent:
          type: boolean
      required:
        - Database
    AppSyncParameters:
      additionalProperties: false
      type: object
      properties:
        GraphQLOperation:
          type: string
      required:
        - GraphQLOperation
    Target:
      additionalProperties: false
      type: object
      properties:
        InputPath:
          type: string
        HttpParameters:
          $ref: '#/components/schemas/HttpParameters'
        DeadLetterConfig:
          $ref: '#/components/schemas/DeadLetterConfig'
        RunCommandParameters:
          $ref: '#/components/schemas/RunCommandParameters'
        InputTransformer:
          $ref: '#/components/schemas/InputTransformer'
        KinesisParameters:
          $ref: '#/components/schemas/KinesisParameters'
        RoleArn:
          type: string
        RedshiftDataParameters:
          $ref: '#/components/schemas/RedshiftDataParameters'
        AppSyncParameters:
          $ref: '#/components/schemas/AppSyncParameters'
        Input:
          type: string
        SqsParameters:
          $ref: '#/components/schemas/SqsParameters'
        EcsParameters:
          $ref: '#/components/schemas/EcsParameters'
        BatchParameters:
          $ref: '#/components/schemas/BatchParameters'
        Id:
          type: string
        Arn:
          type: string
        SageMakerPipelineParameters:
          $ref: '#/components/schemas/SageMakerPipelineParameters'
        RetryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
      required:
        - Id
        - Arn
    PlacementConstraint:
      additionalProperties: false
      type: object
      properties:
        Type:
          type: string
        Expression:
          type: string
    AwsVpcConfiguration:
      additionalProperties: false
      type: object
      properties:
        SecurityGroups:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            type: string
        Subnets:
          uniqueItems: false
          x-insertionOrder: true
          type: array
          items:
            type: string
        AssignPublicIp:
          type: string
      required:
        - Subnets
    SqsParameters:
      additionalProperties: false
      type: object
      properties:
        MessageGroupId:
          type: string
      required:
        - MessageGroupId
    RunCommandTarget:
      additionalProperties: false
      type: object
      properties:
        Values:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            type: string
        Key:
          type: string
      required:
        - Values
        - Key
    EcsParameters:
      additionalProperties: false
      type: object
      properties:
        PlatformVersion:
          type: string
        Group:
          type: string
        EnableECSManagedTags:
          type: boolean
        EnableExecuteCommand:
          type: boolean
        PlacementConstraints:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/PlacementConstraint'
        PropagateTags:
          type: string
        TaskCount:
          type: integer
        PlacementStrategies:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/PlacementStrategy'
        CapacityProviderStrategy:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/CapacityProviderStrategyItem'
        LaunchType:
          type: string
        ReferenceId:
          type: string
        TagList:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        TaskDefinitionArn:
          type: string
      required:
        - TaskDefinitionArn
    BatchParameters:
      additionalProperties: false
      type: object
      properties:
        ArrayProperties:
          $ref: '#/components/schemas/BatchArrayProperties'
        JobName:
          type: string
        RetryStrategy:
          $ref: '#/components/schemas/BatchRetryStrategy'
        JobDefinition:
          type: string
      required:
        - JobName
        - JobDefinition
    NetworkConfiguration:
      additionalProperties: false
      type: object
      properties:
        AwsVpcConfiguration:
          $ref: '#/components/schemas/AwsVpcConfiguration'
    SageMakerPipelineParameters:
      additionalProperties: false
      type: object
      properties:
        PipelineParameterList:
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/SageMakerPipelineParameter'
    RetryPolicy:
      additionalProperties: false
      type: object
      properties:
        MaximumRetryAttempts:
          type: integer
        MaximumEventAgeInSeconds:
          type: integer
    BatchArrayProperties:
      additionalProperties: false
      type: object
      properties:
        Size:
          type: integer
    SageMakerPipelineParameter:
      additionalProperties: false
      type: object
      properties:
        Value:
          type: string
        Name:
          type: string
      required:
        - Value
        - Name
    Rule:
      type: object
      properties:
        EventBusName:
          description: The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
          type: string
        EventPattern:
          description: The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.
          type: object
        ScheduleExpression:
          description: The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.
          type: string
        Description:
          description: The description of the rule.
          type: string
        State:
          description: The state of the rule.
          type: string
          enum:
            - DISABLED
            - ENABLED
            - ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS
        Targets:
          uniqueItems: true
          description: |-
            Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.
            Targets are the resources that are invoked when a rule is triggered.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/Target'
        Arn:
          description: The ARN of the rule, such as arn:aws:events:us-east-2:123456789012:rule/example.
          type: string
        RoleArn:
          description: The Amazon Resource Name (ARN) of the role that is used for target invocation.
          type: string
        Name:
          description: The name of the rule.
          type: string
      x-stackql-resource-name: rule
      description: Resource Type definition for AWS::Events::Rule
      x-type-name: AWS::Events::Rule
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-conditional-create-only-properties:
        - EventBusName
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: false
      x-required-permissions:
        read:
          - iam:PassRole
          - events:DescribeRule
          - events:ListTargetsByRule
        create:
          - iam:PassRole
          - events:DescribeRule
          - events:PutRule
          - events:PutTargets
        update:
          - iam:PassRole
          - events:DescribeRule
          - events:PutRule
          - events:RemoveTargets
          - events:PutTargets
        list:
          - events:ListRules
        delete:
          - iam:PassRole
          - events:DescribeRule
          - events:DeleteRule
          - events:RemoveTargets
          - events:ListTargetsByRule
    CreateApiDestinationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Name of the apiDestination.
              type: string
              minLength: 1
              maxLength: 64
              pattern: '[\.\-_A-Za-z0-9]+'
            Description:
              type: string
              maxLength: 512
            ConnectionArn:
              description: The arn of the connection.
              type: string
              pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:connection/[\.\-_A-Za-z0-9]+/[\-A-Za-z0-9]+$
            Arn:
              description: The arn of the api destination.
              type: string
              pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:api-destination/[\.\-_A-Za-z0-9]+/[\-A-Za-z0-9]+$
            InvocationRateLimitPerSecond:
              type: integer
              minimum: 1
            InvocationEndpoint:
              description: Url endpoint to invoke.
              type: string
              pattern: ^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$
            HttpMethod:
              type: string
              enum:
                - GET
                - HEAD
                - POST
                - OPTIONS
                - PUT
                - DELETE
                - PATCH
          x-stackQL-stringOnly: true
      x-title: CreateApiDestinationRequest
      type: object
      required: []
    CreateArchiveRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ArchiveName:
              type: string
              minLength: 1
              maxLength: 48
              pattern: '[\.\-_A-Za-z0-9]+'
            SourceArn:
              type: string
            Description:
              type: string
            EventPattern:
              type: object
            Arn:
              type: string
              pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:.+\/.+$
            RetentionDays:
              type: integer
          x-stackQL-stringOnly: true
      x-title: CreateArchiveRequest
      type: object
      required: []
    CreateConnectionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Name of the connection.
              type: string
              minLength: 1
              maxLength: 64
              pattern: '[\.\-_A-Za-z0-9]+'
            Arn:
              description: The arn of the connection resource.
              type: string
              pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:connection\/[\.\-_A-Za-z0-9]+\/[\-A-Za-z0-9]+$
            SecretArn:
              description: The arn of the secrets manager secret created in the customer account.
              type: string
              pattern: ^arn:aws([a-z]|\-)*:secretsmanager:([a-z]|\d|\-)*:([0-9]{12})?:secret:([a-z]|\d|\-)*(!)*[\/_+=\.@\-A-Za-z0-9]+$
            Description:
              description: Description of the connection.
              type: string
              maxLength: 512
            AuthorizationType:
              type: string
              enum:
                - API_KEY
                - BASIC
                - OAUTH_CLIENT_CREDENTIALS
            AuthParameters:
              $ref: '#/components/schemas/AuthParameters'
            InvocationConnectivityParameters:
              description: The private resource the HTTP request will be sent to.
              type: object
              properties:
                ResourceParameters:
                  $ref: '#/components/schemas/ResourceParameters'
              required:
                - ResourceParameters
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateConnectionRequest
      type: object
      required: []
    CreateEndpointRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[\.\-_A-Za-z0-9]+$
            Arn:
              type: string
              minLength: 1
              maxLength: 1600
              pattern: ^arn:aws([a-z]|\-)*:events:([a-z]|\d|\-)*:([0-9]{12})?:endpoint\/[/\.\-_A-Za-z0-9]+$
            RoleArn:
              type: string
              minLength: 1
              maxLength: 256
              pattern: ^arn:aws[a-z-]*:iam::\d{12}:role\/[\w+=,.@/-]+$
            Description:
              type: string
              maxLength: 512
              pattern: .*
            RoutingConfig:
              $ref: '#/components/schemas/RoutingConfig'
            ReplicationConfig:
              $ref: '#/components/schemas/ReplicationConfig'
            EventBuses:
              $ref: '#/components/schemas/EventBuses'
            EndpointId:
              type: string
              minLength: 1
              maxLength: 50
              pattern: ^[A-Za-z0-9\-]+[\.][A-Za-z0-9\-]+$
            EndpointUrl:
              type: string
              minLength: 1
              maxLength: 256
              pattern: ^(https://)?[\.\-a-z0-9]+$
            State:
              type: string
              enum:
                - ACTIVE
                - CREATING
                - UPDATING
                - DELETING
                - CREATE_FAILED
                - UPDATE_FAILED
            StateReason:
              type: string
              minLength: 1
              maxLength: 512
              pattern: ^.*$
          x-stackQL-stringOnly: true
      x-title: CreateEndpointRequest
      type: object
      required: []
    CreateEventBusRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            EventSourceName:
              description: If you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with.
              type: string
            Name:
              description: The name of the event bus.
              type: string
            Tags:
              description: Any tags assigned to the event bus.
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
            Description:
              description: The description of the event bus.
              type: string
            KmsKeyIdentifier:
              description: Kms Key Identifier used to encrypt events at rest in the event bus.
              type: string
            Policy:
              description: A JSON string that describes the permission policy statement for the event bus.
              type: object
            Arn:
              description: The Amazon Resource Name (ARN) for the event bus.
              type: string
            DeadLetterConfig:
              description: Dead Letter Queue for the event bus.
              type: object
              additionalProperties: false
              properties:
                Arn:
                  type: string
          x-stackQL-stringOnly: true
      x-title: CreateEventBusRequest
      type: object
      required: []
    CreateRuleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            EventBusName:
              description: The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
              type: string
            EventPattern:
              description: The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.
              type: object
            ScheduleExpression:
              description: The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.
              type: string
            Description:
              description: The description of the rule.
              type: string
            State:
              description: The state of the rule.
              type: string
              enum:
                - DISABLED
                - ENABLED
                - ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS
            Targets:
              uniqueItems: true
              description: |-
                Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.
                Targets are the resources that are invoked when a rule is triggered.
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/Target'
            Arn:
              description: The ARN of the rule, such as arn:aws:events:us-east-2:123456789012:rule/example.
              type: string
            RoleArn:
              description: The Amazon Resource Name (ARN) of the role that is used for target invocation.
              type: string
            Name:
              description: The name of the rule.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateRuleRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    api_destinations:
      name: api_destinations
      id: aws.events.api_destinations
      x-cfn-schema-name: ApiDestination
      x-cfn-type-name: AWS::Events::ApiDestination
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ApiDestination&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::ApiDestination"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::ApiDestination"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::ApiDestination"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/api_destinations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/api_destinations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/api_destinations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.InvocationRateLimitPerSecond') as invocation_rate_limit_per_second,
              JSON_EXTRACT(Properties, '$.InvocationEndpoint') as invocation_endpoint,
              JSON_EXTRACT(Properties, '$.HttpMethod') as http_method
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::ApiDestination'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ConnectionArn') as connection_arn,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.InvocationRateLimitPerSecond') as invocation_rate_limit_per_second,
                JSON_EXTRACT(detail.Properties, '$.InvocationEndpoint') as invocation_endpoint,
                JSON_EXTRACT(detail.Properties, '$.HttpMethod') as http_method
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Events::ApiDestination'
                AND detail.data__TypeName = 'AWS::Events::ApiDestination'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ConnectionArn') as connection_arn,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'InvocationRateLimitPerSecond') as invocation_rate_limit_per_second,
                  json_extract_path_text(Properties, 'InvocationEndpoint') as invocation_endpoint,
                  json_extract_path_text(Properties, 'HttpMethod') as http_method
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::ApiDestination'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ConnectionArn') as connection_arn,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'InvocationRateLimitPerSecond') as invocation_rate_limit_per_second,
                    json_extract_path_text(detail.Properties, 'InvocationEndpoint') as invocation_endpoint,
                    json_extract_path_text(detail.Properties, 'HttpMethod') as http_method
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Events::ApiDestination'
                    AND detail.data__TypeName = 'AWS::Events::ApiDestination'
                    AND listing.region = 'us-east-1'
    api_destinations_list_only:
      name: api_destinations_list_only
      id: aws.events.api_destinations_list_only
      x-cfn-schema-name: ApiDestination
      x-cfn-type-name: AWS::Events::ApiDestination
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::ApiDestination'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::ApiDestination'
                AND region = 'us-east-1'
    archives:
      name: archives
      id: aws.events.archives
      x-cfn-schema-name: Archive
      x-cfn-type-name: AWS::Events::Archive
      x-identifiers:
        - ArchiveName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Archive&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Archive"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Archive"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Archive"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/archives/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/archives/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/archives/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ArchiveName') as archive_name,
              JSON_EXTRACT(Properties, '$.SourceArn') as source_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EventPattern') as event_pattern,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.RetentionDays') as retention_days
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Archive'
              AND data__Identifier = '<ArchiveName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ArchiveName') as archive_name,
                JSON_EXTRACT(detail.Properties, '$.SourceArn') as source_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EventPattern') as event_pattern,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.RetentionDays') as retention_days
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Events::Archive'
                AND detail.data__TypeName = 'AWS::Events::Archive'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ArchiveName') as archive_name,
                  json_extract_path_text(Properties, 'SourceArn') as source_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EventPattern') as event_pattern,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'RetentionDays') as retention_days
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Archive'
                  AND data__Identifier = '<ArchiveName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ArchiveName') as archive_name,
                    json_extract_path_text(detail.Properties, 'SourceArn') as source_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EventPattern') as event_pattern,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'RetentionDays') as retention_days
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Events::Archive'
                    AND detail.data__TypeName = 'AWS::Events::Archive'
                    AND listing.region = 'us-east-1'
    archives_list_only:
      name: archives_list_only
      id: aws.events.archives_list_only
      x-cfn-schema-name: Archive
      x-cfn-type-name: AWS::Events::Archive
      x-identifiers:
        - ArchiveName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ArchiveName') as archive_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Archive'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ArchiveName') as archive_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Archive'
                AND region = 'us-east-1'
    connections:
      name: connections
      id: aws.events.connections
      x-cfn-schema-name: Connection
      x-cfn-type-name: AWS::Events::Connection
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Connection&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Connection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Connection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Connection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/connections/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/connections/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/connections/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.SecretArn') as secret_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AuthorizationType') as authorization_type,
              JSON_EXTRACT(Properties, '$.AuthParameters') as auth_parameters,
              JSON_EXTRACT(Properties, '$.InvocationConnectivityParameters') as invocation_connectivity_parameters
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Connection'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.SecretArn') as secret_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.AuthorizationType') as authorization_type,
                JSON_EXTRACT(detail.Properties, '$.AuthParameters') as auth_parameters,
                JSON_EXTRACT(detail.Properties, '$.InvocationConnectivityParameters') as invocation_connectivity_parameters
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Events::Connection'
                AND detail.data__TypeName = 'AWS::Events::Connection'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'SecretArn') as secret_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'AuthorizationType') as authorization_type,
                  json_extract_path_text(Properties, 'AuthParameters') as auth_parameters,
                  json_extract_path_text(Properties, 'InvocationConnectivityParameters') as invocation_connectivity_parameters
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Connection'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'SecretArn') as secret_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'AuthorizationType') as authorization_type,
                    json_extract_path_text(detail.Properties, 'AuthParameters') as auth_parameters,
                    json_extract_path_text(detail.Properties, 'InvocationConnectivityParameters') as invocation_connectivity_parameters
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Events::Connection'
                    AND detail.data__TypeName = 'AWS::Events::Connection'
                    AND listing.region = 'us-east-1'
    connections_list_only:
      name: connections_list_only
      id: aws.events.connections_list_only
      x-cfn-schema-name: Connection
      x-cfn-type-name: AWS::Events::Connection
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Connection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Connection'
                AND region = 'us-east-1'
    endpoints:
      name: endpoints
      id: aws.events.endpoints
      x-cfn-schema-name: Endpoint
      x-cfn-type-name: AWS::Events::Endpoint
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Endpoint&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RoutingConfig') as routing_config,
              JSON_EXTRACT(Properties, '$.ReplicationConfig') as replication_config,
              JSON_EXTRACT(Properties, '$.EventBuses') as event_buses,
              JSON_EXTRACT(Properties, '$.EndpointId') as endpoint_id,
              JSON_EXTRACT(Properties, '$.EndpointUrl') as endpoint_url,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.StateReason') as state_reason
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Endpoint'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.RoutingConfig') as routing_config,
                JSON_EXTRACT(detail.Properties, '$.ReplicationConfig') as replication_config,
                JSON_EXTRACT(detail.Properties, '$.EventBuses') as event_buses,
                JSON_EXTRACT(detail.Properties, '$.EndpointId') as endpoint_id,
                JSON_EXTRACT(detail.Properties, '$.EndpointUrl') as endpoint_url,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.StateReason') as state_reason
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Events::Endpoint'
                AND detail.data__TypeName = 'AWS::Events::Endpoint'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'RoutingConfig') as routing_config,
                  json_extract_path_text(Properties, 'ReplicationConfig') as replication_config,
                  json_extract_path_text(Properties, 'EventBuses') as event_buses,
                  json_extract_path_text(Properties, 'EndpointId') as endpoint_id,
                  json_extract_path_text(Properties, 'EndpointUrl') as endpoint_url,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'StateReason') as state_reason
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Endpoint'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'RoutingConfig') as routing_config,
                    json_extract_path_text(detail.Properties, 'ReplicationConfig') as replication_config,
                    json_extract_path_text(detail.Properties, 'EventBuses') as event_buses,
                    json_extract_path_text(detail.Properties, 'EndpointId') as endpoint_id,
                    json_extract_path_text(detail.Properties, 'EndpointUrl') as endpoint_url,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'StateReason') as state_reason
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Events::Endpoint'
                    AND detail.data__TypeName = 'AWS::Events::Endpoint'
                    AND listing.region = 'us-east-1'
    endpoints_list_only:
      name: endpoints_list_only
      id: aws.events.endpoints_list_only
      x-cfn-schema-name: Endpoint
      x-cfn-type-name: AWS::Events::Endpoint
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Endpoint'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Endpoint'
                AND region = 'us-east-1'
    event_buses:
      name: event_buses
      id: aws.events.event_buses
      x-cfn-schema-name: EventBus
      x-cfn-type-name: AWS::Events::EventBus
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EventBus&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::EventBus"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::EventBus"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::EventBus"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/event_buses/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/event_buses/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/event_buses/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.EventSourceName') as event_source_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KmsKeyIdentifier') as kms_key_identifier,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DeadLetterConfig') as dead_letter_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::EventBus'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.EventSourceName') as event_source_name,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyIdentifier') as kms_key_identifier,
                JSON_EXTRACT(detail.Properties, '$.Policy') as policy,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.DeadLetterConfig') as dead_letter_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Events::EventBus'
                AND detail.data__TypeName = 'AWS::Events::EventBus'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'EventSourceName') as event_source_name,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KmsKeyIdentifier') as kms_key_identifier,
                  json_extract_path_text(Properties, 'Policy') as policy,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'DeadLetterConfig') as dead_letter_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::EventBus'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'EventSourceName') as event_source_name,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KmsKeyIdentifier') as kms_key_identifier,
                    json_extract_path_text(detail.Properties, 'Policy') as policy,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'DeadLetterConfig') as dead_letter_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Events::EventBus'
                    AND detail.data__TypeName = 'AWS::Events::EventBus'
                    AND listing.region = 'us-east-1'
    event_buses_list_only:
      name: event_buses_list_only
      id: aws.events.event_buses_list_only
      x-cfn-schema-name: EventBus
      x-cfn-type-name: AWS::Events::EventBus
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::EventBus'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::EventBus'
                AND region = 'us-east-1'
    event_bus_tags:
      name: event_bus_tags
      id: aws.events.event_bus_tags
      x-cfn-schema-name: EventBus
      x-cfn-type-name: AWS::Events::EventBus
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.EventSourceName') as event_source_name,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyIdentifier') as kms_key_identifier,
              JSON_EXTRACT(detail.Properties, '$.Policy') as policy,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.DeadLetterConfig') as dead_letter_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Events::EventBus'
              AND detail.data__TypeName = 'AWS::Events::EventBus'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'EventSourceName') as event_source_name,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'KmsKeyIdentifier') as kms_key_identifier,
                json_extract_path_text(detail.Properties, 'Policy') as policy,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'DeadLetterConfig') as dead_letter_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Events::EventBus'
                AND detail.data__TypeName = 'AWS::Events::EventBus'
                AND listing.region = 'us-east-1'
    rules:
      name: rules
      id: aws.events.rules
      x-cfn-schema-name: Rule
      x-cfn-type-name: AWS::Events::Rule
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Rule&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Rule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Rule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Events::Rule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/rules/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/rules/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/rules/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.EventBusName') as event_bus_name,
              JSON_EXTRACT(Properties, '$.EventPattern') as event_pattern,
              JSON_EXTRACT(Properties, '$.ScheduleExpression') as schedule_expression,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Rule'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.EventBusName') as event_bus_name,
                JSON_EXTRACT(detail.Properties, '$.EventPattern') as event_pattern,
                JSON_EXTRACT(detail.Properties, '$.ScheduleExpression') as schedule_expression,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Targets') as targets,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Events::Rule'
                AND detail.data__TypeName = 'AWS::Events::Rule'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'EventBusName') as event_bus_name,
                  json_extract_path_text(Properties, 'EventPattern') as event_pattern,
                  json_extract_path_text(Properties, 'ScheduleExpression') as schedule_expression,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Targets') as targets,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Name') as name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Events::Rule'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'EventBusName') as event_bus_name,
                    json_extract_path_text(detail.Properties, 'EventPattern') as event_pattern,
                    json_extract_path_text(detail.Properties, 'ScheduleExpression') as schedule_expression,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Targets') as targets,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Events::Rule'
                    AND detail.data__TypeName = 'AWS::Events::Rule'
                    AND listing.region = 'us-east-1'
    rules_list_only:
      name: rules_list_only
      id: aws.events.rules_list_only
      x-cfn-schema-name: Rule
      x-cfn-type-name: AWS::Events::Rule
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Rule'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Events::Rule'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ApiDestination&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApiDestination
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApiDestinationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Archive&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateArchive
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateArchiveRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Connection&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConnection
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Endpoint&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEndpoint
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EventBus&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEventBus
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEventBusRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Rule&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRule
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRuleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
