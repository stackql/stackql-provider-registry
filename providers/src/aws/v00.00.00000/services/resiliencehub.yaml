openapi: 3.0.0
info:
  title: ResilienceHub
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    TagValue:
      type: string
      maxLength: 256
    TagMap:
      type: object
      x-patternProperties:
        .{1,128}:
          $ref: '#/components/schemas/TagValue'
      additionalProperties: false
    PhysicalResourceId:
      type: object
      additionalProperties: false
      properties:
        AwsAccountId:
          type: string
          pattern: ^[0-9]{12}$
        AwsRegion:
          type: string
          pattern: ^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]$
        Identifier:
          type: string
          minLength: 1
          maxLength: 255
        Type:
          type: string
          pattern: Arn|Native
      required:
        - Identifier
        - Type
    ResourceMapping:
      description: Resource mapping is used to map logical resources from template to physical resource
      type: object
      additionalProperties: false
      properties:
        LogicalStackName:
          type: string
        MappingType:
          type: string
          pattern: CfnStack|Resource|Terraform|EKS
        ResourceName:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
        TerraformSourceName:
          type: string
        EksSourceName:
          type: string
        PhysicalResourceId:
          $ref: '#/components/schemas/PhysicalResourceId'
      required:
        - MappingType
        - PhysicalResourceId
    IamRoleArn:
      type: string
      pattern: arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):iam::[0-9]{12}:role\/(([\u0021-\u007E]+\u002F){1,511})?[A-Za-z0-9+=,.@_/-]{1,64}$
    PermissionModel:
      description: Defines the roles and credentials that AWS Resilience Hub would use while creating the application, importing its resources, and running an assessment.
      type: object
      additionalProperties: false
      properties:
        Type:
          description: Defines how AWS Resilience Hub scans your resources. It can scan for the resources by using a pre-existing role in your AWS account, or by using the credentials of the current IAM user.
          type: string
          enum:
            - LegacyIAMUser
            - RoleBased
        InvokerRoleName:
          description: Existing AWS IAM role name in the primary AWS account that will be assumed by AWS Resilience Hub Service Principle to obtain a read-only access to your application resources while running an assessment.
          type: string
          pattern: ((\u002F[\u0021-\u007E]+\u002F){1,511})?[A-Za-z0-9+=,.@_/-]{1,64}
        CrossAccountRoleArns:
          description: Defines a list of role Amazon Resource Names (ARNs) to be used in other accounts. These ARNs are used for querying purposes while importing resources and assessing your application.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/IamRoleArn'
      required:
        - Type
    EventSubscription:
      description: Indicates an event you would like to subscribe and get notification for.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: Unique name to identify an event subscription.
          type: string
          maxLength: 256
        EventType:
          description: The type of event you would like to subscribe and get notification for.
          type: string
          enum:
            - ScheduledAssessmentFailure
            - DriftDetected
        SnsTopicArn:
          description: Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic.
          type: string
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+.-]{0,1023}$
      required:
        - Name
        - EventType
    App:
      type: object
      properties:
        Name:
          description: Name of the app.
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
        Description:
          description: App description.
          type: string
          minLength: 0
          maxLength: 500
        AppArn:
          type: string
          description: Amazon Resource Name (ARN) of the App.
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
        ResiliencyPolicyArn:
          type: string
          description: Amazon Resource Name (ARN) of the Resiliency Policy.
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
        RegulatoryPolicyArn:
          type: string
          description: Amazon Resource Name (ARN) of the Regulatory Policy.
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
        Tags:
          $ref: '#/components/schemas/TagMap'
        AppTemplateBody:
          description: A string containing full ResilienceHub app template body.
          type: string
          minLength: 0
          maxLength: 409600
          pattern: ^[\w\s:,-\.'\/{}\[\]:"]+$
        ResourceMappings:
          description: An array of ResourceMapping objects.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ResourceMapping'
        AppAssessmentSchedule:
          description: Assessment execution schedule.
          type: string
          enum:
            - Disabled
            - Daily
        PermissionModel:
          $ref: '#/components/schemas/PermissionModel'
        EventSubscriptions:
          description: The list of events you would like to subscribe and get notification for.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/EventSubscription'
        DriftStatus:
          description: Indicates if compliance drifts (deviations) were detected while running an assessment for your application.
          type: string
          enum:
            - NotChecked
            - NotDetected
            - Detected
      required:
        - Name
        - AppTemplateBody
        - ResourceMappings
      x-stackql-resource-name: app
      description: Resource Type Definition for AWS::ResilienceHub::App.
      x-type-name: AWS::ResilienceHub::App
      x-stackql-primary-identifier:
        - AppArn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - AppArn
        - DriftStatus
      x-required-properties:
        - Name
        - AppTemplateBody
        - ResourceMappings
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - resiliencehub:TagResource
          - resiliencehub:ListTagsForResource
          - resiliencehub:UntagResource
      x-required-permissions:
        create:
          - cloudformation:DescribeStacks
          - cloudformation:ListStackResources
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListAllMyBuckets
          - autoscaling:DescribeAutoScalingGroups
          - apigateway:GET
          - ec2:Describe*
          - ecs:DescribeServices
          - eks:DescribeCluster
          - elasticfilesystem:DescribeFileSystems
          - elasticloadbalancing:DescribeLoadBalancers
          - lambda:GetFunction*
          - rds:Describe*
          - dynamodb:Describe*
          - sqs:GetQueueAttributes
          - sns:GetTopicAttributes
          - route53:List*
          - iam:PassRole
          - resiliencehub:CreateApp
          - resiliencehub:DescribeApp
          - resiliencehub:DescribeAppVersionTemplate
          - resiliencehub:PutDraftAppVersionTemplate
          - resiliencehub:AddDraftAppVersionResourceMappings
          - resiliencehub:ListAppVersionResourceMappings
          - resiliencehub:ListAppVersions
          - resiliencehub:PublishAppVersion
          - resiliencehub:ListTagsForResource
          - resiliencehub:TagResource
          - resiliencehub:UntagResource
        read:
          - resiliencehub:DescribeApp
          - resiliencehub:DescribeAppVersionTemplate
          - resiliencehub:ListAppVersionResourceMappings
          - resiliencehub:ListTagsForResource
          - resiliencehub:ListAppVersions
        update:
          - cloudformation:DescribeStacks
          - cloudformation:ListStackResources
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListAllMyBuckets
          - autoscaling:DescribeAutoScalingGroups
          - apigateway:GET
          - ec2:Describe*
          - ecs:DescribeServices
          - eks:DescribeCluster
          - elasticfilesystem:DescribeFileSystems
          - elasticloadbalancing:DescribeLoadBalancers
          - lambda:GetFunction*
          - rds:Describe*
          - dynamodb:Describe*
          - sqs:GetQueueAttributes
          - sns:GetTopicAttributes
          - route53:List*
          - iam:PassRole
          - resiliencehub:UpdateApp
          - resiliencehub:DescribeApp
          - resiliencehub:DescribeAppVersionTemplate
          - resiliencehub:PutDraftAppVersionTemplate
          - resiliencehub:AddDraftAppVersionResourceMappings
          - resiliencehub:RemoveDraftAppVersionResourceMappings
          - resiliencehub:ListAppVersionResourceMappings
          - resiliencehub:ListAppVersions
          - resiliencehub:PublishAppVersion
          - resiliencehub:ListTagsForResource
          - resiliencehub:TagResource
          - resiliencehub:UntagResource
        delete:
          - resiliencehub:DeleteApp
          - resiliencehub:UntagResource
          - resiliencehub:ListApps
        list:
          - resiliencehub:ListApps
    FailurePolicy:
      description: Failure Policy.
      type: object
      properties:
        RtoInSecs:
          description: RTO in seconds.
          type: integer
        RpoInSecs:
          description: RPO in seconds.
          type: integer
      required:
        - RtoInSecs
        - RpoInSecs
      additionalProperties: false
    PolicyMap:
      type: object
      properties:
        AZ:
          $ref: '#/components/schemas/FailurePolicy'
        Hardware:
          $ref: '#/components/schemas/FailurePolicy'
        Software:
          $ref: '#/components/schemas/FailurePolicy'
        Region:
          $ref: '#/components/schemas/FailurePolicy'
      required:
        - AZ
        - Hardware
        - Software
      additionalProperties: false
    ResiliencyPolicy:
      type: object
      properties:
        PolicyName:
          description: Name of Resiliency Policy.
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
        PolicyDescription:
          description: Description of Resiliency Policy.
          type: string
          maxLength: 500
        DataLocationConstraint:
          type: string
          description: Data Location Constraint of the Policy.
          enum:
            - AnyLocation
            - SameContinent
            - SameCountry
        Tier:
          type: string
          description: Resiliency Policy Tier.
          enum:
            - MissionCritical
            - Critical
            - Important
            - CoreServices
            - NonCritical
        Policy:
          $ref: '#/components/schemas/PolicyMap'
        PolicyArn:
          type: string
          description: Amazon Resource Name (ARN) of the Resiliency Policy.
          pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
        Tags:
          $ref: '#/components/schemas/TagMap'
      required:
        - PolicyName
        - Tier
        - Policy
      x-stackql-resource-name: resiliency_policy
      description: Resource Type Definition for Resiliency Policy.
      x-type-name: AWS::ResilienceHub::ResiliencyPolicy
      x-stackql-primary-identifier:
        - PolicyArn
      x-read-only-properties:
        - PolicyArn
      x-required-properties:
        - PolicyName
        - Tier
        - Policy
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - resiliencehub:TagResource
          - resiliencehub:ListTagsForResource
          - resiliencehub:UntagResource
      x-required-permissions:
        create:
          - resiliencehub:CreateResiliencyPolicy
          - resiliencehub:DescribeResiliencyPolicy
          - resiliencehub:TagResource
        update:
          - resiliencehub:DescribeResiliencyPolicy
          - resiliencehub:UpdateResiliencyPolicy
          - resiliencehub:TagResource
          - resiliencehub:UntagResource
          - resiliencehub:ListTagsForResource
        read:
          - resiliencehub:DescribeResiliencyPolicy
          - resiliencehub:ListTagsForResource
        delete:
          - resiliencehub:DeleteResiliencyPolicy
          - resiliencehub:UntagResource
        list:
          - resiliencehub:ListResiliencyPolicies
    CreateAppRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Name of the app.
              type: string
              pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
            Description:
              description: App description.
              type: string
              minLength: 0
              maxLength: 500
            AppArn:
              type: string
              description: Amazon Resource Name (ARN) of the App.
              pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
            ResiliencyPolicyArn:
              type: string
              description: Amazon Resource Name (ARN) of the Resiliency Policy.
              pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
            RegulatoryPolicyArn:
              type: string
              description: Amazon Resource Name (ARN) of the Regulatory Policy.
              pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
            Tags:
              $ref: '#/components/schemas/TagMap'
            AppTemplateBody:
              description: A string containing full ResilienceHub app template body.
              type: string
              minLength: 0
              maxLength: 409600
              pattern: ^[\w\s:,-\.'\/{}\[\]:"]+$
            ResourceMappings:
              description: An array of ResourceMapping objects.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ResourceMapping'
            AppAssessmentSchedule:
              description: Assessment execution schedule.
              type: string
              enum:
                - Disabled
                - Daily
            PermissionModel:
              $ref: '#/components/schemas/PermissionModel'
            EventSubscriptions:
              description: The list of events you would like to subscribe and get notification for.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/EventSubscription'
            DriftStatus:
              description: Indicates if compliance drifts (deviations) were detected while running an assessment for your application.
              type: string
              enum:
                - NotChecked
                - NotDetected
                - Detected
          x-stackQL-stringOnly: true
      x-title: CreateAppRequest
      type: object
      required: []
    CreateResiliencyPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PolicyName:
              description: Name of Resiliency Policy.
              type: string
              pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
            PolicyDescription:
              description: Description of Resiliency Policy.
              type: string
              maxLength: 500
            DataLocationConstraint:
              type: string
              description: Data Location Constraint of the Policy.
              enum:
                - AnyLocation
                - SameContinent
                - SameCountry
            Tier:
              type: string
              description: Resiliency Policy Tier.
              enum:
                - MissionCritical
                - Critical
                - Important
                - CoreServices
                - NonCritical
            Policy:
              $ref: '#/components/schemas/PolicyMap'
            PolicyArn:
              type: string
              description: Amazon Resource Name (ARN) of the Resiliency Policy.
              pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
            Tags:
              $ref: '#/components/schemas/TagMap'
          x-stackQL-stringOnly: true
      x-title: CreateResiliencyPolicyRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    apps:
      name: apps
      id: aws.resiliencehub.apps
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::ResilienceHub::App
      x-identifiers:
        - AppArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__App&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ResilienceHub::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ResilienceHub::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ResilienceHub::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/apps/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/apps/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/apps/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AppArn') as app_arn,
              JSON_EXTRACT(Properties, '$.ResiliencyPolicyArn') as resiliency_policy_arn,
              JSON_EXTRACT(Properties, '$.RegulatoryPolicyArn') as regulatory_policy_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AppTemplateBody') as app_template_body,
              JSON_EXTRACT(Properties, '$.ResourceMappings') as resource_mappings,
              JSON_EXTRACT(Properties, '$.AppAssessmentSchedule') as app_assessment_schedule,
              JSON_EXTRACT(Properties, '$.PermissionModel') as permission_model,
              JSON_EXTRACT(Properties, '$.EventSubscriptions') as event_subscriptions,
              JSON_EXTRACT(Properties, '$.DriftStatus') as drift_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ResilienceHub::App'
              AND data__Identifier = '<AppArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.AppArn') as app_arn,
                JSON_EXTRACT(detail.Properties, '$.ResiliencyPolicyArn') as resiliency_policy_arn,
                JSON_EXTRACT(detail.Properties, '$.RegulatoryPolicyArn') as regulatory_policy_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AppTemplateBody') as app_template_body,
                JSON_EXTRACT(detail.Properties, '$.ResourceMappings') as resource_mappings,
                JSON_EXTRACT(detail.Properties, '$.AppAssessmentSchedule') as app_assessment_schedule,
                JSON_EXTRACT(detail.Properties, '$.PermissionModel') as permission_model,
                JSON_EXTRACT(detail.Properties, '$.EventSubscriptions') as event_subscriptions,
                JSON_EXTRACT(detail.Properties, '$.DriftStatus') as drift_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ResilienceHub::App'
                AND detail.data__TypeName = 'AWS::ResilienceHub::App'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'AppArn') as app_arn,
                  json_extract_path_text(Properties, 'ResiliencyPolicyArn') as resiliency_policy_arn,
                  json_extract_path_text(Properties, 'RegulatoryPolicyArn') as regulatory_policy_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AppTemplateBody') as app_template_body,
                  json_extract_path_text(Properties, 'ResourceMappings') as resource_mappings,
                  json_extract_path_text(Properties, 'AppAssessmentSchedule') as app_assessment_schedule,
                  json_extract_path_text(Properties, 'PermissionModel') as permission_model,
                  json_extract_path_text(Properties, 'EventSubscriptions') as event_subscriptions,
                  json_extract_path_text(Properties, 'DriftStatus') as drift_status
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ResilienceHub::App'
                  AND data__Identifier = '<AppArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'AppArn') as app_arn,
                    json_extract_path_text(detail.Properties, 'ResiliencyPolicyArn') as resiliency_policy_arn,
                    json_extract_path_text(detail.Properties, 'RegulatoryPolicyArn') as regulatory_policy_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AppTemplateBody') as app_template_body,
                    json_extract_path_text(detail.Properties, 'ResourceMappings') as resource_mappings,
                    json_extract_path_text(detail.Properties, 'AppAssessmentSchedule') as app_assessment_schedule,
                    json_extract_path_text(detail.Properties, 'PermissionModel') as permission_model,
                    json_extract_path_text(detail.Properties, 'EventSubscriptions') as event_subscriptions,
                    json_extract_path_text(detail.Properties, 'DriftStatus') as drift_status
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ResilienceHub::App'
                    AND detail.data__TypeName = 'AWS::ResilienceHub::App'
                    AND listing.region = 'us-east-1'
    apps_list_only:
      name: apps_list_only
      id: aws.resiliencehub.apps_list_only
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::ResilienceHub::App
      x-identifiers:
        - AppArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppArn') as app_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ResilienceHub::App'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppArn') as app_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ResilienceHub::App'
                AND region = 'us-east-1'
    app_tags:
      name: app_tags
      id: aws.resiliencehub.app_tags
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::ResilienceHub::App
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.AppArn') as app_arn,
              JSON_EXTRACT(detail.Properties, '$.ResiliencyPolicyArn') as resiliency_policy_arn,
              JSON_EXTRACT(detail.Properties, '$.RegulatoryPolicyArn') as regulatory_policy_arn,
              JSON_EXTRACT(detail.Properties, '$.AppTemplateBody') as app_template_body,
              JSON_EXTRACT(detail.Properties, '$.ResourceMappings') as resource_mappings,
              JSON_EXTRACT(detail.Properties, '$.AppAssessmentSchedule') as app_assessment_schedule,
              JSON_EXTRACT(detail.Properties, '$.PermissionModel') as permission_model,
              JSON_EXTRACT(detail.Properties, '$.EventSubscriptions') as event_subscriptions,
              JSON_EXTRACT(detail.Properties, '$.DriftStatus') as drift_status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ResilienceHub::App'
              AND detail.data__TypeName = 'AWS::ResilienceHub::App'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'AppArn') as app_arn,
                json_extract_path_text(detail.Properties, 'ResiliencyPolicyArn') as resiliency_policy_arn,
                json_extract_path_text(detail.Properties, 'RegulatoryPolicyArn') as regulatory_policy_arn,
                json_extract_path_text(detail.Properties, 'AppTemplateBody') as app_template_body,
                json_extract_path_text(detail.Properties, 'ResourceMappings') as resource_mappings,
                json_extract_path_text(detail.Properties, 'AppAssessmentSchedule') as app_assessment_schedule,
                json_extract_path_text(detail.Properties, 'PermissionModel') as permission_model,
                json_extract_path_text(detail.Properties, 'EventSubscriptions') as event_subscriptions,
                json_extract_path_text(detail.Properties, 'DriftStatus') as drift_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ResilienceHub::App'
                AND detail.data__TypeName = 'AWS::ResilienceHub::App'
                AND listing.region = 'us-east-1'
    resiliency_policies:
      name: resiliency_policies
      id: aws.resiliencehub.resiliency_policies
      x-cfn-schema-name: ResiliencyPolicy
      x-cfn-type-name: AWS::ResilienceHub::ResiliencyPolicy
      x-identifiers:
        - PolicyArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResiliencyPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ResilienceHub::ResiliencyPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ResilienceHub::ResiliencyPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ResilienceHub::ResiliencyPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resiliency_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resiliency_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/resiliency_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyDescription') as policy_description,
              JSON_EXTRACT(Properties, '$.DataLocationConstraint') as data_location_constraint,
              JSON_EXTRACT(Properties, '$.Tier') as tier,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.PolicyArn') as policy_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
              AND data__Identifier = '<PolicyArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.PolicyName') as policy_name,
                JSON_EXTRACT(detail.Properties, '$.PolicyDescription') as policy_description,
                JSON_EXTRACT(detail.Properties, '$.DataLocationConstraint') as data_location_constraint,
                JSON_EXTRACT(detail.Properties, '$.Tier') as tier,
                JSON_EXTRACT(detail.Properties, '$.Policy') as policy,
                JSON_EXTRACT(detail.Properties, '$.PolicyArn') as policy_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                AND detail.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'PolicyName') as policy_name,
                  json_extract_path_text(Properties, 'PolicyDescription') as policy_description,
                  json_extract_path_text(Properties, 'DataLocationConstraint') as data_location_constraint,
                  json_extract_path_text(Properties, 'Tier') as tier,
                  json_extract_path_text(Properties, 'Policy') as policy,
                  json_extract_path_text(Properties, 'PolicyArn') as policy_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                  AND data__Identifier = '<PolicyArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'PolicyName') as policy_name,
                    json_extract_path_text(detail.Properties, 'PolicyDescription') as policy_description,
                    json_extract_path_text(detail.Properties, 'DataLocationConstraint') as data_location_constraint,
                    json_extract_path_text(detail.Properties, 'Tier') as tier,
                    json_extract_path_text(detail.Properties, 'Policy') as policy,
                    json_extract_path_text(detail.Properties, 'PolicyArn') as policy_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                    AND detail.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                    AND listing.region = 'us-east-1'
    resiliency_policies_list_only:
      name: resiliency_policies_list_only
      id: aws.resiliencehub.resiliency_policies_list_only
      x-cfn-schema-name: ResiliencyPolicy
      x-cfn-type-name: AWS::ResilienceHub::ResiliencyPolicy
      x-identifiers:
        - PolicyArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PolicyArn') as policy_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PolicyArn') as policy_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                AND region = 'us-east-1'
    resiliency_policy_tags:
      name: resiliency_policy_tags
      id: aws.resiliencehub.resiliency_policy_tags
      x-cfn-schema-name: ResiliencyPolicy
      x-cfn-type-name: AWS::ResilienceHub::ResiliencyPolicy
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(detail.Properties, '$.PolicyDescription') as policy_description,
              JSON_EXTRACT(detail.Properties, '$.DataLocationConstraint') as data_location_constraint,
              JSON_EXTRACT(detail.Properties, '$.Tier') as tier,
              JSON_EXTRACT(detail.Properties, '$.Policy') as policy,
              JSON_EXTRACT(detail.Properties, '$.PolicyArn') as policy_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
              AND detail.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'PolicyName') as policy_name,
                json_extract_path_text(detail.Properties, 'PolicyDescription') as policy_description,
                json_extract_path_text(detail.Properties, 'DataLocationConstraint') as data_location_constraint,
                json_extract_path_text(detail.Properties, 'Tier') as tier,
                json_extract_path_text(detail.Properties, 'Policy') as policy,
                json_extract_path_text(detail.Properties, 'PolicyArn') as policy_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                AND detail.data__TypeName = 'AWS::ResilienceHub::ResiliencyPolicy'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__App&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApp
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResiliencyPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResiliencyPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResiliencyPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
