openapi: 3.0.0
info:
  title: CloudWatch
  version: 1.0.0
paths: {}
components:
  schemas:
    MetricStat:
      type: object
      additionalProperties: false
      properties:
        Period:
          type: integer
        Metric:
          $ref: '#/components/schemas/Metric'
        Stat:
          type: string
        Unit:
          type: string
      required:
        - Stat
        - Period
        - Metric
    Metric:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        Dimensions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Dimension'
        Namespace:
          type: string
      required:
        - MetricName
        - Namespace
    Dimension:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Name:
          type: string
      required:
        - Value
        - Name
    MetricDataQuery:
      type: object
      additionalProperties: false
      properties:
        AccountId:
          type: string
        ReturnData:
          type: boolean
        Expression:
          type: string
        MetricStat:
          $ref: '#/components/schemas/MetricStat'
        Label:
          type: string
        Period:
          type: integer
        Id:
          type: string
      required:
        - Id
    Alarm:
      type: object
      properties:
        ThresholdMetricId:
          type: string
        EvaluateLowSampleCountPercentile:
          type: string
        ExtendedStatistic:
          type: string
        ComparisonOperator:
          type: string
        TreatMissingData:
          type: string
        Dimensions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Dimension'
        Period:
          type: integer
        EvaluationPeriods:
          type: integer
        Unit:
          type: string
        Namespace:
          type: string
        OKActions:
          type: array
          uniqueItems: false
          items:
            type: string
        AlarmActions:
          type: array
          uniqueItems: false
          items:
            type: string
        MetricName:
          type: string
        ActionsEnabled:
          type: boolean
        Metrics:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricDataQuery'
        AlarmDescription:
          type: string
        AlarmName:
          type: string
        Statistic:
          type: string
        InsufficientDataActions:
          type: array
          uniqueItems: false
          items:
            type: string
        Id:
          type: string
        Arn:
          type: string
        DatapointsToAlarm:
          type: integer
        Threshold:
          type: number
      required:
        - ComparisonOperator
        - EvaluationPeriods
      x-stackql-resource-name: alarm
      x-stackql-primaryIdentifier:
        - Id
    MetricMathAnomalyDetector:
      type: object
      additionalProperties: false
      properties:
        MetricDataQueries:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/MetricDataQuery'
    Configuration:
      type: object
      additionalProperties: false
      properties:
        MetricTimeZone:
          type: string
        ExcludedTimeRanges:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Range'
    Range:
      type: object
      additionalProperties: false
      properties:
        EndTime:
          type: string
        StartTime:
          type: string
      required:
        - EndTime
        - StartTime
    SingleMetricAnomalyDetector:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        Dimensions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Dimension'
        Stat:
          type: string
        Namespace:
          type: string
    AnomalyDetector:
      type: object
      properties:
        MetricName:
          type: string
        Stat:
          type: string
        Configuration:
          $ref: '#/components/schemas/Configuration'
        MetricMathAnomalyDetector:
          $ref: '#/components/schemas/MetricMathAnomalyDetector'
        Dimensions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Dimension'
        Id:
          type: string
        Namespace:
          type: string
        SingleMetricAnomalyDetector:
          $ref: '#/components/schemas/SingleMetricAnomalyDetector'
      x-stackql-resource-name: anomaly_detector
      x-stackql-primaryIdentifier:
        - Id
    CompositeAlarm:
      type: object
      properties:
        Arn:
          type: string
          description: Amazon Resource Name (ARN) of the alarm
          minLength: 1
          maxLength: 1600
        AlarmName:
          description: The name of the Composite Alarm
          type: string
          minLength: 1
          maxLength: 255
        AlarmRule:
          type: string
          description: Expression which aggregates the state of other Alarms (Metric or Composite Alarms)
          minLength: 1
          maxLength: 10240
        AlarmDescription:
          type: string
          description: The description of the alarm
          minLength: 0
          maxLength: 1024
        ActionsEnabled:
          description: Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
          type: boolean
        OKActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          maxItems: 5
        AlarmActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN).
          maxItems: 5
        InsufficientDataActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          maxItems: 5
        ActionsSuppressor:
          description: 'Actions will be suppressed if the suppressor alarm is in the ALARM state. ActionsSuppressor can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm. '
          type: string
          minLength: 1
          maxLength: 1600
        ActionsSuppressorWaitPeriod:
          description: Actions will be suppressed if ExtensionPeriod is active. The length of time that actions are suppressed is in seconds.
          type: integer
          minimum: 0
        ActionsSuppressorExtensionPeriod:
          description: Actions will be suppressed if WaitPeriod is active. The length of time that actions are suppressed is in seconds.
          type: integer
          minimum: 0
      required:
        - AlarmRule
      x-stackql-resource-name: composite_alarm
      x-stackql-primaryIdentifier:
        - AlarmName
    Dashboard:
      type: object
      properties:
        DashboardName:
          type: string
        DashboardBody:
          type: string
        Id:
          type: string
      required:
        - DashboardBody
      x-stackql-resource-name: dashboard
      x-stackql-primaryIdentifier:
        - Id
    Tags:
      type: object
      additionalProperties: false
    InsightRule:
      type: object
      properties:
        RuleState:
          type: string
        Id:
          type: string
        Arn:
          type: string
        RuleBody:
          type: string
        RuleName:
          type: string
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - RuleState
        - RuleBody
        - RuleName
      x-stackql-resource-name: insight_rule
      x-stackql-primaryIdentifier:
        - Id
    MetricStreamFilter:
      description: This structure defines the metrics that will be streamed.
      type: object
      additionalProperties: false
      properties:
        Namespace:
          description: Only metrics with Namespace matching this value will be streamed.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - Namespace
    MetricStreamStatisticsConfiguration:
      description: This structure specifies a list of additional statistics to stream, and the metrics to stream those additional statistics for. All metrics that match the combination of metric name and namespace will be streamed with the extended statistics, no matter their dimensions.
      type: object
      additionalProperties: false
      properties:
        AdditionalStatistics:
          description: The additional statistics to stream for the metrics listed in IncludeMetrics.
          type: array
          maxItems: 20
          uniqueItems: true
          items:
            type: string
        IncludeMetrics:
          description: An array that defines the metrics that are to have additional statistics streamed.
          type: array
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamStatisticsMetric'
      required:
        - AdditionalStatistics
        - IncludeMetrics
    MetricStreamStatisticsMetric:
      description: A structure that specifies the metric name and namespace for one metric that is going to have additional statistics included in the stream.
      type: object
      additionalProperties: false
      properties:
        MetricName:
          description: The name of the metric.
          type: string
          minLength: 1
          maxLength: 255
        Namespace:
          description: The namespace of the metric.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - MetricName
        - Namespace
    Tag:
      description: Metadata that you can assign to a Metric Stream, consisting of a key-value pair.
      type: object
      additionalProperties: false
      properties:
        Key:
          description: A unique identifier for the tag.
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: An optional string, which you can use to describe or define the tag.
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Key
    MetricStream:
      type: object
      properties:
        Arn:
          description: Amazon Resource Name of the metric stream.
          type: string
          minLength: 20
          maxLength: 2048
        CreationDate:
          description: The date of creation of the metric stream.
          type: string
          anyOf:
            - format: date-time
            - format: timestamp
        ExcludeFilters:
          description: Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
          type: array
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamFilter'
        FirehoseArn:
          description: The ARN of the Kinesis Firehose where to stream the data.
          type: string
          minLength: 20
          maxLength: 2048
        IncludeFilters:
          description: Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
          type: array
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamFilter'
        LastUpdateDate:
          description: The date of the last update of the metric stream.
          type: string
          anyOf:
            - format: date-time
            - format: timestamp
        Name:
          description: Name of the metric stream.
          type: string
          minLength: 1
          maxLength: 255
        RoleArn:
          description: The ARN of the role that provides access to the Kinesis Firehose.
          type: string
          minLength: 20
          maxLength: 2048
        State:
          description: Displays the state of the Metric Stream.
          type: string
          minLength: 1
          maxLength: 255
        OutputFormat:
          description: The output format of the data streamed to the Kinesis Firehose.
          type: string
          minLength: 1
          maxLength: 255
        StatisticsConfigurations:
          description: By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
          type: array
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamStatisticsConfiguration'
        Tags:
          description: A set of tags to assign to the delivery stream.
          type: array
          maxItems: 50
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        IncludeLinkedAccountsMetrics:
          description: If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false.
          type: boolean
      required:
        - FirehoseArn
        - RoleArn
        - OutputFormat
      x-stackql-resource-name: metric_stream
      x-stackql-primaryIdentifier:
        - Name
  x-stackQL-resources:
    alarms:
      name: alarms
      id: aws.cloudwatch.alarms
      x-cfn-schema-name: Alarm
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
    alarm:
      name: alarm
      id: aws.cloudwatch.alarm
      x-cfn-schema-name: Alarm
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ThresholdMetricId') as threshold_metric_id,
              JSON_EXTRACT(Properties, '$.EvaluateLowSampleCountPercentile') as evaluate_low_sample_count_percentile,
              JSON_EXTRACT(Properties, '$.ExtendedStatistic') as extended_statistic,
              JSON_EXTRACT(Properties, '$.ComparisonOperator') as comparison_operator,
              JSON_EXTRACT(Properties, '$.TreatMissingData') as treat_missing_data,
              JSON_EXTRACT(Properties, '$.Dimensions') as dimensions,
              JSON_EXTRACT(Properties, '$.Period') as period,
              JSON_EXTRACT(Properties, '$.EvaluationPeriods') as evaluation_periods,
              JSON_EXTRACT(Properties, '$.Unit') as unit,
              JSON_EXTRACT(Properties, '$.Namespace') as namespace,
              JSON_EXTRACT(Properties, '$.OKActions') as o_kactions,
              JSON_EXTRACT(Properties, '$.AlarmActions') as alarm_actions,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.ActionsEnabled') as actions_enabled,
              JSON_EXTRACT(Properties, '$.Metrics') as metrics,
              JSON_EXTRACT(Properties, '$.AlarmDescription') as alarm_description,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name,
              JSON_EXTRACT(Properties, '$.Statistic') as statistic,
              JSON_EXTRACT(Properties, '$.InsufficientDataActions') as insufficient_data_actions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DatapointsToAlarm') as datapoints_to_alarm,
              JSON_EXTRACT(Properties, '$.Threshold') as threshold
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
    anomaly_detectors:
      name: anomaly_detectors
      id: aws.cloudwatch.anomaly_detectors
      x-cfn-schema-name: AnomalyDetector
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::AnomalyDetector'
    anomaly_detector:
      name: anomaly_detector
      id: aws.cloudwatch.anomaly_detector
      x-cfn-schema-name: AnomalyDetector
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.Stat') as stat,
              JSON_EXTRACT(Properties, '$.Configuration.MetricTimeZone') as configuration_metric_time_zone,
              JSON_EXTRACT(Properties, '$.Configuration.ExcludedTimeRanges') as configuration_excluded_time_ranges,
              JSON_EXTRACT(Properties, '$.MetricMathAnomalyDetector.MetricDataQueries') as metric_math_anomaly_detector_metric_data_queries,
              JSON_EXTRACT(Properties, '$.Dimensions') as dimensions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Namespace') as namespace,
              JSON_EXTRACT(Properties, '$.SingleMetricAnomalyDetector.MetricName') as single_metric_anomaly_detector_metric_name,
              JSON_EXTRACT(Properties, '$.SingleMetricAnomalyDetector.Dimensions') as single_metric_anomaly_detector_dimensions,
              JSON_EXTRACT(Properties, '$.SingleMetricAnomalyDetector.Stat') as single_metric_anomaly_detector_stat,
              JSON_EXTRACT(Properties, '$.SingleMetricAnomalyDetector.Namespace') as single_metric_anomaly_detector_namespace
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::AnomalyDetector'
    composite_alarms:
      name: composite_alarms
      id: aws.cloudwatch.composite_alarms
      x-cfn-schema-name: CompositeAlarm
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
    composite_alarm:
      name: composite_alarm
      id: aws.cloudwatch.composite_alarm
      x-cfn-schema-name: CompositeAlarm
      x-type: get
      x-identifiers:
        - AlarmName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name,
              JSON_EXTRACT(Properties, '$.AlarmRule') as alarm_rule,
              JSON_EXTRACT(Properties, '$.AlarmDescription') as alarm_description,
              JSON_EXTRACT(Properties, '$.ActionsEnabled') as actions_enabled,
              JSON_EXTRACT(Properties, '$.OKActions') as o_kactions,
              JSON_EXTRACT(Properties, '$.AlarmActions') as alarm_actions,
              JSON_EXTRACT(Properties, '$.InsufficientDataActions') as insufficient_data_actions,
              JSON_EXTRACT(Properties, '$.ActionsSuppressor') as actions_suppressor,
              JSON_EXTRACT(Properties, '$.ActionsSuppressorWaitPeriod') as actions_suppressor_wait_period,
              JSON_EXTRACT(Properties, '$.ActionsSuppressorExtensionPeriod') as actions_suppressor_extension_period
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
    dashboards:
      name: dashboards
      id: aws.cloudwatch.dashboards
      x-cfn-schema-name: Dashboard
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::Dashboard'
    dashboard:
      name: dashboard
      id: aws.cloudwatch.dashboard
      x-cfn-schema-name: Dashboard
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DashboardName') as dashboard_name,
              JSON_EXTRACT(Properties, '$.DashboardBody') as dashboard_body,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::Dashboard'
    insight_rules:
      name: insight_rules
      id: aws.cloudwatch.insight_rules
      x-cfn-schema-name: InsightRule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::InsightRule'
    insight_rule:
      name: insight_rule
      id: aws.cloudwatch.insight_rule
      x-cfn-schema-name: InsightRule
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RuleState') as rule_state,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.RuleBody') as rule_body,
              JSON_EXTRACT(Properties, '$.RuleName') as rule_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::InsightRule'
    metric_streams:
      name: metric_streams
      id: aws.cloudwatch.metric_streams
      x-cfn-schema-name: MetricStream
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
    metric_stream:
      name: metric_stream
      id: aws.cloudwatch.metric_stream
      x-cfn-schema-name: MetricStream
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.ExcludeFilters') as exclude_filters,
              JSON_EXTRACT(Properties, '$.FirehoseArn') as firehose_arn,
              JSON_EXTRACT(Properties, '$.IncludeFilters') as include_filters,
              JSON_EXTRACT(Properties, '$.LastUpdateDate') as last_update_date,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.OutputFormat') as output_format,
              JSON_EXTRACT(Properties, '$.StatisticsConfigurations') as statistics_configurations,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.IncludeLinkedAccountsMetrics') as include_linked_accounts_metrics
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
