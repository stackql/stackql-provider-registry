openapi: 3.0.0
info:
  title: CloudWatch
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    MetricStat:
      description: |-
        This structure defines the metric to be returned, along with the statistics, period, and units.
          ``MetricStat`` is a property of the [MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricdataquery.html) property type.
      type: object
      additionalProperties: false
      properties:
        Period:
          description: |-
            The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` call that includes a ``StorageResolution`` of 1 second.
             If the ``StartTime`` parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:
              +  Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).
              +  Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).
              +  Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).
          type: integer
        Metric:
          description: The metric to return, including the metric name, namespace, and dimensions.
          $ref: '#/components/schemas/Metric'
        Stat:
          description: The statistic to return. It can include any CW statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *User Guide*.
          type: string
        Unit:
          description: |-
            The unit to use for the returned data points. 
             Valid values are: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
          type: string
      required:
        - Stat
        - Period
        - Metric
    Metric:
      description: The ``Metric`` property type represents a specific metric. ``Metric`` is a property of the [MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudwatch-alarm-metricstat.html) property type.
      type: object
      additionalProperties: false
      properties:
        MetricName:
          description: The name of the metric that you want the alarm to watch. This is a required field.
          type: string
        Dimensions:
          description: The metric dimensions that you want to be used for the metric that the alarm will watch.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Dimension'
        Namespace:
          description: The namespace of the metric that the alarm will watch.
          type: string
    Dimension:
      description: Dimension is an embedded property of the ``AWS::CloudWatch::Alarm`` type. Dimensions are name/value pairs that can be associated with a CW metric. You can specify a maximum of 10 dimensions for a given metric.
      type: object
      additionalProperties: false
      properties:
        Value:
          description: The value for the dimension, from 1–255 characters in length.
          type: string
        Name:
          description: The name of the dimension, from 1–255 characters in length. This dimension name must have been included when the metric was published.
          type: string
      required:
        - Value
        - Name
    MetricDataQuery:
      description: |-
        The ``MetricDataQuery`` property type specifies the metric data to return, and whether this call is just retrieving a batch set of data for one metric, or is performing a math expression on metric data. 
         Any expression used must return a single time series. For more information, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User Guide*.
      type: object
      additionalProperties: false
      properties:
        Label:
          description: A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CW dashboard widget, the label is shown. If ``Label`` is omitted, CW generates a default.
          type: string
        MetricStat:
          description: |-
            The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
             Within one MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both.
          $ref: '#/components/schemas/MetricStat'
        Id:
          description: A short name used to tie this object to the results in the response. This name must be unique within a single call to ``GetMetricData``. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
          type: string
        ReturnData:
          description: |-
            This option indicates whether to return the timestamps and raw data values of this metric.
             When you create an alarm based on a metric math expression, specify ``True`` for this value for only the one math expression that the alarm is based on. You must specify ``False`` for ``ReturnData`` for all the other metrics and expressions used in the alarm.
             This field is required.
          type: boolean
        Expression:
          description: >-
            The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the ``Id`` of the other metrics to refer to those metrics, and can also use the ``Id`` of other expressions to use the result of those expressions. For more information about metric math expressions, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the *User
            Guide*.
             Within each MetricDataQuery object, you must specify either ``Expression`` or ``MetricStat`` but not both.
          type: string
        Period:
          description: The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a ``PutMetricData`` operation that includes a ``StorageResolution of 1 second``.
          type: integer
        AccountId:
          description: The ID of the account where the metrics are located, if this is a cross-account alarm.
          type: string
      required:
        - Id
    Tag:
      description: Metadata that you can assign to a Metric Stream, consisting of a key-value pair.
      type: object
      additionalProperties: false
      properties:
        Key:
          description: A unique identifier for the tag.
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: String which you can use to describe or define the tag.
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Key
        - Value
    Alarm:
      type: object
      properties:
        ThresholdMetricId:
          description: In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the threshold for the alarm.
          type: string
        EvaluateLowSampleCountPercentile:
          description: Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.
          type: string
        ExtendedStatistic:
          description: |-
            The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
             For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both.
             For an alarm based on a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
          type: string
        ComparisonOperator:
          description: The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.
          type: string
        TreatMissingData:
          description: |-
            Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data) in the *Amazon User Guide*.
             If you omit this parameter, the default behavior of ``missing`` is used.
          type: string
        Dimensions:
          description: The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``. Instead, you use ``Metrics``.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Dimension'
        Period:
          description: |-
            The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values are 10, 30, 60, and any multiple of 60.
             For an alarm based on a math expression, you can't specify ``Period``, and instead you use the ``Metrics`` parameter.
             *Minimum:* 10
          type: integer
        EvaluationPeriods:
          description: |-
            The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N, and ``DatapointsToAlarm`` is the M.
             For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.
          type: integer
        Unit:
          description: |-
            The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric. Do not specify this if you are specifying a ``Metrics`` array.
              You can specify the following values: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
          type: string
        Namespace:
          description: |-
            The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead.
             For a list of namespaces for metrics from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
          type: string
        OKActions:
          description: The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          type: array
          uniqueItems: false
          items:
            type: string
        AlarmActions:
          description: The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API Reference*.
          type: array
          uniqueItems: false
          items:
            type: string
        MetricName:
          description: The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
          type: string
        ActionsEnabled:
          description: Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
          type: boolean
          default: true
        Metrics:
          description: |-
            An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either retrieves a metric or performs a math expression.
             If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``, ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricDataQuery'
        AlarmDescription:
          description: The description of the alarm.
          type: string
        AlarmName:
          description: |-
            The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm name. 
              If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
          type: string
        Statistic:
          description: |-
            The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
             For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both.
             For an alarm based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
          type: string
        InsufficientDataActions:
          description: The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          type: array
          uniqueItems: false
          items:
            type: string
        Arn:
          description: ''
          type: string
        DatapointsToAlarm:
          description: |-
            The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.
             If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and the alarm goes to alarm state if that many consecutive periods are breaching.
          type: integer
        Threshold:
          description: The value to compare with the specified statistic.
          type: number
        Tags:
          description: ''
          type: array
          maxItems: 50
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ComparisonOperator
        - EvaluationPeriods
      x-stackql-resource-name: alarm
      description: |-
        The ``AWS::CloudWatch::Alarm`` type specifies an alarm and associates it with the specified metric or metric math expression.
         When this operation creates an alarm, the alarm state is immediately set to ``INSUFFICIENT_DATA``. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.
         When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm.
      x-type-name: AWS::CloudWatch::Alarm
      x-stackql-primary-identifier:
        - AlarmName
      x-create-only-properties:
        - AlarmName
      x-read-only-properties:
        - Arn
      x-required-properties:
        - ComparisonOperator
        - EvaluationPeriods
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - cloudwatch:PutMetricAlarm
          - cloudwatch:DescribeAlarms
          - cloudwatch:TagResource
        update:
          - cloudwatch:PutMetricAlarm
          - cloudwatch:DescribeAlarms
          - cloudwatch:TagResource
          - cloudwatch:UntagResource
        delete:
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
        list:
          - cloudwatch:DescribeAlarms
        read:
          - cloudwatch:DescribeAlarms
          - cloudwatch:ListTagsForResource
    AlarmActionARN:
      type: string
      description: Amazon Resource Name (ARN) of the action
      minLength: 1
      maxLength: 1024
    CompositeAlarm:
      type: object
      properties:
        Arn:
          type: string
          description: Amazon Resource Name (ARN) of the alarm
          minLength: 1
          maxLength: 1600
        AlarmName:
          description: The name of the Composite Alarm
          type: string
          minLength: 1
          maxLength: 255
        AlarmRule:
          type: string
          description: Expression which aggregates the state of other Alarms (Metric or Composite Alarms)
          minLength: 1
          maxLength: 10240
        AlarmDescription:
          type: string
          description: The description of the alarm
          minLength: 0
          maxLength: 1024
        ActionsEnabled:
          description: Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
          type: boolean
        OKActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          maxItems: 5
        AlarmActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN).
          maxItems: 5
        InsufficientDataActions:
          type: array
          items:
            type: string
            description: Amazon Resource Name (ARN) of the action
            minLength: 1
            maxLength: 1024
          description: The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
          maxItems: 5
        ActionsSuppressor:
          description: 'Actions will be suppressed if the suppressor alarm is in the ALARM state. ActionsSuppressor can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm. '
          type: string
          minLength: 1
          maxLength: 1600
        ActionsSuppressorWaitPeriod:
          description: Actions will be suppressed if ExtensionPeriod is active. The length of time that actions are suppressed is in seconds.
          type: integer
          minimum: 0
        ActionsSuppressorExtensionPeriod:
          description: Actions will be suppressed if WaitPeriod is active. The length of time that actions are suppressed is in seconds.
          type: integer
          minimum: 0
        Tags:
          description: A list of key-value pairs to associate with the composite alarm. You can associate as many as 50 tags with an alarm.
          type: array
          maxItems: 50
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AlarmRule
      x-stackql-resource-name: composite_alarm
      description: The AWS::CloudWatch::CompositeAlarm type specifies an alarm which aggregates the states of other Alarms (Metric or Composite Alarms) as defined by the AlarmRule expression
      x-type-name: AWS::CloudWatch::CompositeAlarm
      x-stackql-primary-identifier:
        - AlarmName
      x-create-only-properties:
        - AlarmName
      x-read-only-properties:
        - Arn
      x-required-properties:
        - AlarmRule
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - cloudwatch:DescribeAlarms
          - cloudwatch:PutCompositeAlarm
          - cloudwatch:TagResource
        read:
          - cloudwatch:DescribeAlarms
          - cloudwatch:ListTagsForResource
        update:
          - cloudwatch:DescribeAlarms
          - cloudwatch:PutCompositeAlarm
          - cloudwatch:TagResource
          - cloudwatch:UntagResource
        delete:
          - cloudwatch:DescribeAlarms
          - cloudwatch:DeleteAlarms
        list:
          - cloudwatch:DescribeAlarms
    MetricStreamFilter:
      description: This structure defines the metrics that will be streamed.
      type: object
      additionalProperties: false
      properties:
        Namespace:
          description: Only metrics with Namespace matching this value will be streamed.
          type: string
          minLength: 1
          maxLength: 255
        MetricNames:
          description: Only metrics with MetricNames matching these values will be streamed. Must be set together with Namespace.
          type: array
          maxItems: 999
          items:
            type: string
            minLength: 1
            maxLength: 255
      required:
        - Namespace
    MetricStreamStatisticsConfiguration:
      description: This structure specifies a list of additional statistics to stream, and the metrics to stream those additional statistics for. All metrics that match the combination of metric name and namespace will be streamed with the extended statistics, no matter their dimensions.
      type: object
      additionalProperties: false
      properties:
        AdditionalStatistics:
          description: The additional statistics to stream for the metrics listed in IncludeMetrics.
          type: array
          maxItems: 20
          uniqueItems: true
          items:
            type: string
        IncludeMetrics:
          description: An array that defines the metrics that are to have additional statistics streamed.
          type: array
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamStatisticsMetric'
      required:
        - AdditionalStatistics
        - IncludeMetrics
    MetricStreamStatisticsMetric:
      description: A structure that specifies the metric name and namespace for one metric that is going to have additional statistics included in the stream.
      type: object
      additionalProperties: false
      properties:
        MetricName:
          description: The name of the metric.
          type: string
          minLength: 1
          maxLength: 255
        Namespace:
          description: The namespace of the metric.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - MetricName
        - Namespace
    MetricStream:
      type: object
      properties:
        Arn:
          description: Amazon Resource Name of the metric stream.
          type: string
          minLength: 20
          maxLength: 2048
        CreationDate:
          description: The date of creation of the metric stream.
          type: string
          anyOf:
            - format: date-time
            - format: timestamp
        ExcludeFilters:
          description: Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
          type: array
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamFilter'
        FirehoseArn:
          description: The ARN of the Kinesis Firehose where to stream the data.
          type: string
          minLength: 20
          maxLength: 2048
        IncludeFilters:
          description: Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
          type: array
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamFilter'
        LastUpdateDate:
          description: The date of the last update of the metric stream.
          type: string
          anyOf:
            - format: date-time
            - format: timestamp
        Name:
          description: Name of the metric stream.
          type: string
          minLength: 1
          maxLength: 255
        RoleArn:
          description: The ARN of the role that provides access to the Kinesis Firehose.
          type: string
          minLength: 20
          maxLength: 2048
        State:
          description: Displays the state of the Metric Stream.
          type: string
          minLength: 1
          maxLength: 255
        OutputFormat:
          description: The output format of the data streamed to the Kinesis Firehose.
          type: string
          minLength: 1
          maxLength: 255
        StatisticsConfigurations:
          description: By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
          type: array
          maxItems: 100
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricStreamStatisticsConfiguration'
        Tags:
          description: A set of tags to assign to the delivery stream.
          type: array
          maxItems: 50
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        IncludeLinkedAccountsMetrics:
          description: If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false.
          type: boolean
      required:
        - FirehoseArn
        - RoleArn
        - OutputFormat
      x-stackql-resource-name: metric_stream
      description: Resource Type definition for Metric Stream
      x-type-name: AWS::CloudWatch::MetricStream
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - Arn
        - CreationDate
        - LastUpdateDate
        - State
      x-required-properties:
        - FirehoseArn
        - RoleArn
        - OutputFormat
      x-taggable: true
      x-required-permissions:
        create:
          - cloudwatch:PutMetricStream
          - cloudwatch:GetMetricStream
          - cloudwatch:TagResource
          - iam:PassRole
        update:
          - cloudwatch:PutMetricStream
          - cloudwatch:GetMetricStream
          - cloudwatch:TagResource
          - cloudwatch:UntagResource
          - iam:PassRole
        delete:
          - cloudwatch:DeleteMetricStream
          - cloudwatch:GetMetricStream
        list:
          - cloudwatch:ListMetricStreams
        read:
          - cloudwatch:GetMetricStream
    CreateAlarmRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ThresholdMetricId:
              description: In an alarm based on an anomaly detection model, this is the ID of the ``ANOMALY_DETECTION_BAND`` function used as the threshold for the alarm.
              type: string
            EvaluateLowSampleCountPercentile:
              description: Used only for alarms based on percentiles. If ``ignore``, the alarm state does not change during periods with too few data points to be statistically significant. If ``evaluate`` or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.
              type: string
            ExtendedStatistic:
              description: |-
                The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
                 For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both.
                 For an alarm based on a math expression, you can't specify ``ExtendedStatistic``. Instead, you use ``Metrics``.
              type: string
            ComparisonOperator:
              description: The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.
              type: string
            TreatMissingData:
              description: |-
                Sets how this alarm is to handle missing data points. Valid values are ``breaching``, ``notBreaching``, ``ignore``, and ``missing``. For more information, see [Configuring How Alarms Treat Missing Data](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data) in the *Amazon User Guide*.
                 If you omit this parameter, the default behavior of ``missing`` is used.
              type: string
            Dimensions:
              description: The dimensions for the metric associated with the alarm. For an alarm based on a math expression, you can't specify ``Dimensions``. Instead, you use ``Metrics``.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Dimension'
            Period:
              description: |-
                The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. Valid values are 10, 30, 60, and any multiple of 60.
                 For an alarm based on a math expression, you can't specify ``Period``, and instead you use the ``Metrics`` parameter.
                 *Minimum:* 10
              type: integer
            EvaluationPeriods:
              description: |-
                The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N, and ``DatapointsToAlarm`` is the M.
                 For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.
              type: integer
            Unit:
              description: |-
                The unit of the metric associated with the alarm. Specify this only if you are creating an alarm based on a single metric. Do not specify this if you are specifying a ``Metrics`` array.
                  You can specify the following values: Seconds, Microseconds, Milliseconds, Bytes, Kilobytes, Megabytes, Gigabytes, Terabytes, Bits, Kilobits, Megabits, Gigabits, Terabits, Percent, Count, Bytes/Second, Kilobytes/Second, Megabytes/Second, Gigabytes/Second, Terabytes/Second, Bits/Second, Kilobits/Second, Megabits/Second, Gigabits/Second, Terabits/Second, Count/Second, or None.
              type: string
            Namespace:
              description: |-
                The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you can't specify ``Namespace`` and you use ``Metrics`` instead.
                 For a list of namespaces for metrics from AWS services, see [Services That Publish Metrics.](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
              type: string
            OKActions:
              description: The actions to execute when this alarm transitions to the ``OK`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).
              type: array
              uniqueItems: false
              items:
                type: string
            AlarmActions:
              description: The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN). For more information about creating alarms and the actions that you can specify, see [PutMetricAlarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_PutMetricAlarm.html) in the *API Reference*.
              type: array
              uniqueItems: false
              items:
                type: string
            MetricName:
              description: The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you use ``Metrics`` instead and you can't specify ``MetricName``.
              type: string
            ActionsEnabled:
              description: Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
              type: boolean
              default: true
            Metrics:
              description: |-
                An array that enables you to create an alarm based on the result of a metric math expression. Each item in the array either retrieves a metric or performs a math expression.
                 If you specify the ``Metrics`` parameter, you cannot specify ``MetricName``, ``Dimensions``, ``Period``, ``Namespace``, ``Statistic``, ``ExtendedStatistic``, or ``Unit``.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/MetricDataQuery'
            AlarmDescription:
              description: The description of the alarm.
              type: string
            AlarmName:
              description: |-
                The name of the alarm. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the alarm name. 
                  If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
              type: string
            Statistic:
              description: |-
                The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use ``ExtendedStatistic``.
                 For an alarm based on a metric, you must specify either ``Statistic`` or ``ExtendedStatistic`` but not both.
                 For an alarm based on a math expression, you can't specify ``Statistic``. Instead, you use ``Metrics``.
              type: string
            InsufficientDataActions:
              description: The actions to execute when this alarm transitions to the ``INSUFFICIENT_DATA`` state from any other state. Each action is specified as an Amazon Resource Name (ARN).
              type: array
              uniqueItems: false
              items:
                type: string
            Arn:
              description: ''
              type: string
            DatapointsToAlarm:
              description: |-
                The number of datapoints that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M, and the value that you set for ``EvaluationPeriods`` is the N value. For more information, see [Evaluating an Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation) in the *User Guide*.
                 If you omit this parameter, CW uses the same value here that you set for ``EvaluationPeriods``, and the alarm goes to alarm state if that many consecutive periods are breaching.
              type: integer
            Threshold:
              description: The value to compare with the specified statistic.
              type: number
            Tags:
              description: ''
              type: array
              maxItems: 50
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateAlarmRequest
      type: object
      required: []
    CreateCompositeAlarmRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              description: Amazon Resource Name (ARN) of the alarm
              minLength: 1
              maxLength: 1600
            AlarmName:
              description: The name of the Composite Alarm
              type: string
              minLength: 1
              maxLength: 255
            AlarmRule:
              type: string
              description: Expression which aggregates the state of other Alarms (Metric or Composite Alarms)
              minLength: 1
              maxLength: 10240
            AlarmDescription:
              type: string
              description: The description of the alarm
              minLength: 0
              maxLength: 1024
            ActionsEnabled:
              description: Indicates whether actions should be executed during any changes to the alarm state. The default is TRUE.
              type: boolean
            OKActions:
              type: array
              items:
                type: string
                description: Amazon Resource Name (ARN) of the action
                minLength: 1
                maxLength: 1024
              description: The actions to execute when this alarm transitions to the OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
              maxItems: 5
            AlarmActions:
              type: array
              items:
                type: string
                description: Amazon Resource Name (ARN) of the action
                minLength: 1
                maxLength: 1024
              description: The list of actions to execute when this alarm transitions into an ALARM state from any other state. Specify each action as an Amazon Resource Name (ARN).
              maxItems: 5
            InsufficientDataActions:
              type: array
              items:
                type: string
                description: Amazon Resource Name (ARN) of the action
                minLength: 1
                maxLength: 1024
              description: The actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
              maxItems: 5
            ActionsSuppressor:
              description: 'Actions will be suppressed if the suppressor alarm is in the ALARM state. ActionsSuppressor can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm. '
              type: string
              minLength: 1
              maxLength: 1600
            ActionsSuppressorWaitPeriod:
              description: Actions will be suppressed if ExtensionPeriod is active. The length of time that actions are suppressed is in seconds.
              type: integer
              minimum: 0
            ActionsSuppressorExtensionPeriod:
              description: Actions will be suppressed if WaitPeriod is active. The length of time that actions are suppressed is in seconds.
              type: integer
              minimum: 0
            Tags:
              description: A list of key-value pairs to associate with the composite alarm. You can associate as many as 50 tags with an alarm.
              type: array
              maxItems: 50
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateCompositeAlarmRequest
      type: object
      required: []
    CreateMetricStreamRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Amazon Resource Name of the metric stream.
              type: string
              minLength: 20
              maxLength: 2048
            CreationDate:
              description: The date of creation of the metric stream.
              type: string
              anyOf:
                - format: date-time
                - format: timestamp
            ExcludeFilters:
              description: Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
              type: array
              maxItems: 1000
              uniqueItems: true
              items:
                $ref: '#/components/schemas/MetricStreamFilter'
            FirehoseArn:
              description: The ARN of the Kinesis Firehose where to stream the data.
              type: string
              minLength: 20
              maxLength: 2048
            IncludeFilters:
              description: Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
              type: array
              maxItems: 1000
              uniqueItems: true
              items:
                $ref: '#/components/schemas/MetricStreamFilter'
            LastUpdateDate:
              description: The date of the last update of the metric stream.
              type: string
              anyOf:
                - format: date-time
                - format: timestamp
            Name:
              description: Name of the metric stream.
              type: string
              minLength: 1
              maxLength: 255
            RoleArn:
              description: The ARN of the role that provides access to the Kinesis Firehose.
              type: string
              minLength: 20
              maxLength: 2048
            State:
              description: Displays the state of the Metric Stream.
              type: string
              minLength: 1
              maxLength: 255
            OutputFormat:
              description: The output format of the data streamed to the Kinesis Firehose.
              type: string
              minLength: 1
              maxLength: 255
            StatisticsConfigurations:
              description: By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.
              type: array
              maxItems: 100
              uniqueItems: true
              items:
                $ref: '#/components/schemas/MetricStreamStatisticsConfiguration'
            Tags:
              description: A set of tags to assign to the delivery stream.
              type: array
              maxItems: 50
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
            IncludeLinkedAccountsMetrics:
              description: If you are creating a metric stream in a monitoring account, specify true to include metrics from source accounts that are linked to this monitoring account, in the metric stream. The default is false.
              type: boolean
          x-stackQL-stringOnly: true
      x-title: CreateMetricStreamRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    alarms:
      name: alarms
      id: aws.cloudwatch.alarms
      x-cfn-schema-name: Alarm
      x-cfn-type-name: AWS::CloudWatch::Alarm
      x-identifiers:
        - AlarmName
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Alarm&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::Alarm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::Alarm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/alarms/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/alarms/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
                AND region = 'us-east-1'
    alarm:
      name: alarm
      id: aws.cloudwatch.alarm
      x-cfn-schema-name: Alarm
      x-cfn-type-name: AWS::CloudWatch::Alarm
      x-identifiers:
        - AlarmName
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::Alarm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/alarm/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ThresholdMetricId') as threshold_metric_id,
              JSON_EXTRACT(Properties, '$.EvaluateLowSampleCountPercentile') as evaluate_low_sample_count_percentile,
              JSON_EXTRACT(Properties, '$.ExtendedStatistic') as extended_statistic,
              JSON_EXTRACT(Properties, '$.ComparisonOperator') as comparison_operator,
              JSON_EXTRACT(Properties, '$.TreatMissingData') as treat_missing_data,
              JSON_EXTRACT(Properties, '$.Dimensions') as dimensions,
              JSON_EXTRACT(Properties, '$.Period') as period,
              JSON_EXTRACT(Properties, '$.EvaluationPeriods') as evaluation_periods,
              JSON_EXTRACT(Properties, '$.Unit') as unit,
              JSON_EXTRACT(Properties, '$.Namespace') as namespace,
              JSON_EXTRACT(Properties, '$.OKActions') as ok_actions,
              JSON_EXTRACT(Properties, '$.AlarmActions') as alarm_actions,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.ActionsEnabled') as actions_enabled,
              JSON_EXTRACT(Properties, '$.Metrics') as metrics,
              JSON_EXTRACT(Properties, '$.AlarmDescription') as alarm_description,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name,
              JSON_EXTRACT(Properties, '$.Statistic') as statistic,
              JSON_EXTRACT(Properties, '$.InsufficientDataActions') as insufficient_data_actions,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DatapointsToAlarm') as datapoints_to_alarm,
              JSON_EXTRACT(Properties, '$.Threshold') as threshold,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
              AND data__Identifier = '<AlarmName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ThresholdMetricId') as threshold_metric_id,
                json_extract_path_text(Properties, 'EvaluateLowSampleCountPercentile') as evaluate_low_sample_count_percentile,
                json_extract_path_text(Properties, 'ExtendedStatistic') as extended_statistic,
                json_extract_path_text(Properties, 'ComparisonOperator') as comparison_operator,
                json_extract_path_text(Properties, 'TreatMissingData') as treat_missing_data,
                json_extract_path_text(Properties, 'Dimensions') as dimensions,
                json_extract_path_text(Properties, 'Period') as period,
                json_extract_path_text(Properties, 'EvaluationPeriods') as evaluation_periods,
                json_extract_path_text(Properties, 'Unit') as unit,
                json_extract_path_text(Properties, 'Namespace') as namespace,
                json_extract_path_text(Properties, 'OKActions') as ok_actions,
                json_extract_path_text(Properties, 'AlarmActions') as alarm_actions,
                json_extract_path_text(Properties, 'MetricName') as metric_name,
                json_extract_path_text(Properties, 'ActionsEnabled') as actions_enabled,
                json_extract_path_text(Properties, 'Metrics') as metrics,
                json_extract_path_text(Properties, 'AlarmDescription') as alarm_description,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name,
                json_extract_path_text(Properties, 'Statistic') as statistic,
                json_extract_path_text(Properties, 'InsufficientDataActions') as insufficient_data_actions,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'DatapointsToAlarm') as datapoints_to_alarm,
                json_extract_path_text(Properties, 'Threshold') as threshold,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::Alarm'
                AND data__Identifier = '<AlarmName>'
                AND region = 'us-east-1'
    composite_alarms:
      name: composite_alarms
      id: aws.cloudwatch.composite_alarms
      x-cfn-schema-name: CompositeAlarm
      x-cfn-type-name: AWS::CloudWatch::CompositeAlarm
      x-identifiers:
        - AlarmName
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CompositeAlarm&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::CompositeAlarm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::CompositeAlarm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/composite_alarms/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/composite_alarms/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
                AND region = 'us-east-1'
    composite_alarm:
      name: composite_alarm
      id: aws.cloudwatch.composite_alarm
      x-cfn-schema-name: CompositeAlarm
      x-cfn-type-name: AWS::CloudWatch::CompositeAlarm
      x-identifiers:
        - AlarmName
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::CompositeAlarm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/composite_alarm/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AlarmName') as alarm_name,
              JSON_EXTRACT(Properties, '$.AlarmRule') as alarm_rule,
              JSON_EXTRACT(Properties, '$.AlarmDescription') as alarm_description,
              JSON_EXTRACT(Properties, '$.ActionsEnabled') as actions_enabled,
              JSON_EXTRACT(Properties, '$.OKActions') as ok_actions,
              JSON_EXTRACT(Properties, '$.AlarmActions') as alarm_actions,
              JSON_EXTRACT(Properties, '$.InsufficientDataActions') as insufficient_data_actions,
              JSON_EXTRACT(Properties, '$.ActionsSuppressor') as actions_suppressor,
              JSON_EXTRACT(Properties, '$.ActionsSuppressorWaitPeriod') as actions_suppressor_wait_period,
              JSON_EXTRACT(Properties, '$.ActionsSuppressorExtensionPeriod') as actions_suppressor_extension_period,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
              AND data__Identifier = '<AlarmName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'AlarmName') as alarm_name,
                json_extract_path_text(Properties, 'AlarmRule') as alarm_rule,
                json_extract_path_text(Properties, 'AlarmDescription') as alarm_description,
                json_extract_path_text(Properties, 'ActionsEnabled') as actions_enabled,
                json_extract_path_text(Properties, 'OKActions') as ok_actions,
                json_extract_path_text(Properties, 'AlarmActions') as alarm_actions,
                json_extract_path_text(Properties, 'InsufficientDataActions') as insufficient_data_actions,
                json_extract_path_text(Properties, 'ActionsSuppressor') as actions_suppressor,
                json_extract_path_text(Properties, 'ActionsSuppressorWaitPeriod') as actions_suppressor_wait_period,
                json_extract_path_text(Properties, 'ActionsSuppressorExtensionPeriod') as actions_suppressor_extension_period,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::CompositeAlarm'
                AND data__Identifier = '<AlarmName>'
                AND region = 'us-east-1'
    metric_streams:
      name: metric_streams
      id: aws.cloudwatch.metric_streams
      x-cfn-schema-name: MetricStream
      x-cfn-type-name: AWS::CloudWatch::MetricStream
      x-identifiers:
        - Name
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MetricStream&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::MetricStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::MetricStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/metric_streams/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/metric_streams/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
                AND region = 'us-east-1'
    metric_stream:
      name: metric_stream
      id: aws.cloudwatch.metric_stream
      x-cfn-schema-name: MetricStream
      x-cfn-type-name: AWS::CloudWatch::MetricStream
      x-identifiers:
        - Name
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudWatch::MetricStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/metric_stream/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.ExcludeFilters') as exclude_filters,
              JSON_EXTRACT(Properties, '$.FirehoseArn') as firehose_arn,
              JSON_EXTRACT(Properties, '$.IncludeFilters') as include_filters,
              JSON_EXTRACT(Properties, '$.LastUpdateDate') as last_update_date,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.OutputFormat') as output_format,
              JSON_EXTRACT(Properties, '$.StatisticsConfigurations') as statistics_configurations,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.IncludeLinkedAccountsMetrics') as include_linked_accounts_metrics
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CreationDate') as creation_date,
                json_extract_path_text(Properties, 'ExcludeFilters') as exclude_filters,
                json_extract_path_text(Properties, 'FirehoseArn') as firehose_arn,
                json_extract_path_text(Properties, 'IncludeFilters') as include_filters,
                json_extract_path_text(Properties, 'LastUpdateDate') as last_update_date,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'OutputFormat') as output_format,
                json_extract_path_text(Properties, 'StatisticsConfigurations') as statistics_configurations,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'IncludeLinkedAccountsMetrics') as include_linked_accounts_metrics
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudWatch::MetricStream'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Alarm&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAlarm
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAlarmRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CompositeAlarm&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCompositeAlarm
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCompositeAlarmRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MetricStream&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMetricStream
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMetricStreamRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  pagination:
    requestTranslate:
      algorithm: drop_double_underscore_params
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
