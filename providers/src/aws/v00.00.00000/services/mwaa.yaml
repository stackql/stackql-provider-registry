openapi: 3.0.0
info:
  title: MWAA
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    EnvironmentName:
      type: string
      description: Customer-defined identifier for the environment, unique per customer region.
      minLength: 1
      maxLength: 80
      pattern: ^[a-zA-Z][0-9a-zA-Z\-_]*$
    EnvironmentStatus:
      type: string
      description: The status of the environment.
      enum:
        - CREATING
        - CREATE_FAILED
        - AVAILABLE
        - UPDATING
        - DELETING
        - DELETED
        - UPDATE_FAILED
        - UNAVAILABLE
        - PENDING
    UpdateStatus:
      type: string
      description: ''
      enum:
        - SUCCESS
        - PENDING
        - FAILED
    UpdateError:
      type: object
      description: The error associated with an update request.
      additionalProperties: false
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
    AirflowArn:
      type: string
      description: ''
      minLength: 1
      maxLength: 1224
      pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+
    EnvironmentArn:
      type: string
      description: ARN for the MWAA environment.
      minLength: 1
      maxLength: 1224
      pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+
    S3BucketArn:
      type: string
      description: ARN for the AWS S3 bucket to use as the source of DAGs and plugins for the environment.
      minLength: 1
      maxLength: 1224
      pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:s3:::[a-z0-9.\-]+$
    CreatedAt:
      type: string
      description: When the environment resource was created.
    UpdateCreatedAt:
      type: string
      description: When the update request was created.
    WebserverUrl:
      type: string
      description: Url endpoint for the environment's Airflow UI.
      minLength: 1
      maxLength: 256
      pattern: ^https://.+$
    ExecutionRoleArn:
      type: string
      description: IAM role to be used by tasks.
      maxLength: 1224
      pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
    ServiceRoleArn:
      type: string
      description: IAM role to be used by MWAA to perform AWS API calls on behalf of the customer.
      maxLength: 1224
      pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
    KmsKey:
      type: string
      description: |-
        The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for MWAA data encryption.

            You can specify the CMK using any of the following:

            Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.

            Key alias. For example, alias/ExampleAlias.

            Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef.

            Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.

            AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.
      maxLength: 1224
      pattern: ^(((arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$
    AirflowVersion:
      type: string
      description: Version of airflow to deploy to the environment.
      maxLength: 32
      pattern: ^[0-9a-z.]+$
    RelativePath:
      type: string
      description: Represents an S3 prefix relative to the root of an S3 bucket.
      maxLength: 1024
      pattern: .*
    ConfigKey:
      type: string
      description: ''
      maxLength: 64
      pattern: ^[a-z]+([a-z._]*[a-z]+)?$
    ConfigValue:
      type: string
      description: ''
      maxLength: 256
      pattern: .*
    SecurityGroupId:
      type: string
      description: ''
      minLength: 1
      maxLength: 1024
      pattern: ^sg-[a-zA-Z0-9\-._]+$
    SubnetId:
      type: string
      description: ''
      maxLength: 1024
      pattern: ^subnet-[a-zA-Z0-9\-._]+$
    CloudWatchLogGroupArn:
      type: string
      description: ''
      maxLength: 1224
      pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b)(-[a-z]+)?:logs:[a-z0-9\-]+:\d{12}:log-group:\w+
    LoggingEnabled:
      type: boolean
      description: ''
    LoggingLevel:
      type: string
      description: ''
      enum:
        - CRITICAL
        - ERROR
        - WARNING
        - INFO
        - DEBUG
    EnvironmentClass:
      type: string
      description: Templated configuration for airflow processes and backing infrastructure.
      minLength: 1
      maxLength: 1024
    MaxWorkers:
      type: integer
      description: Maximum worker compute units.
      minimum: 1
    MinWorkers:
      type: integer
      description: Minimum worker compute units.
      minimum: 1
    MaxWebservers:
      type: integer
      description: Maximum webserver compute units.
      minimum: 1
    MinWebservers:
      type: integer
      description: Minimum webserver compute units.
      minimum: 1
    Schedulers:
      type: integer
      description: Scheduler compute units.
      minimum: 1
    NetworkConfiguration:
      type: object
      description: Configures the network resources of the environment.
      additionalProperties: false
      properties:
        SubnetIds:
          type: array
          x-insertionOrder: true
          description: A list of subnets to use for the environment. These must be private subnets, in the same VPC, in two different availability zones.
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/SubnetId'
        SecurityGroupIds:
          type: array
          x-insertionOrder: true
          description: A list of security groups to use for the environment.
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/SecurityGroupId'
    LoggingConfiguration:
      type: object
      description: Logging configuration for the environment.
      additionalProperties: false
      properties:
        DagProcessingLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        SchedulerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        WebserverLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        WorkerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
        TaskLogs:
          $ref: '#/components/schemas/ModuleLoggingConfiguration'
    LoggingConfigurationInput:
      type: object
      description: Configures logging for the environment.
      additionalProperties: false
      properties:
        DagProcessingLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        SchedulerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        WebserverLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        WorkerLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
        TaskLogs:
          $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
    ModuleLoggingConfiguration:
      type: object
      description: Logging configuration for a specific airflow component.
      additionalProperties: false
      properties:
        Enabled:
          $ref: '#/components/schemas/LoggingEnabled'
        LogLevel:
          $ref: '#/components/schemas/LoggingLevel'
        CloudWatchLogGroupArn:
          $ref: '#/components/schemas/CloudWatchLogGroupArn'
    ModuleLoggingConfigurationInput:
      type: object
      description: Configures airflow component logging for the environment.
      additionalProperties: false
      properties:
        Enabled:
          $ref: '#/components/schemas/LoggingEnabled'
        LogLevel:
          $ref: '#/components/schemas/LoggingLevel'
    LastUpdate:
      type: object
      description: Details about the last update performed on the environment.
      additionalProperties: false
      properties:
        Status:
          $ref: '#/components/schemas/UpdateStatus'
        CreatedAt:
          $ref: '#/components/schemas/UpdateCreatedAt'
        Error:
          $ref: '#/components/schemas/UpdateError'
    ErrorCode:
      type: string
      description: The error code associated with an error.
    ErrorMessage:
      type: string
      description: Error message describing a failed operation.
      minLength: 1
      maxLength: 1024
      pattern: ^.+$
    S3ObjectVersion:
      type: string
      description: Represents an version ID for an S3 object.
      maxLength: 1024
    WeeklyMaintenanceWindowStart:
      type: string
      description: Start time for the weekly maintenance window.
      maxLength: 9
      pattern: (MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)
    WebserverAccessMode:
      type: string
      description: Choice for mode of webserver access including over public internet or via private VPC endpoint.
      enum:
        - PRIVATE_ONLY
        - PUBLIC_ONLY
    EndpointManagement:
      type: string
      description: Defines whether the VPC endpoints configured for the environment are created, and managed, by the customer or by Amazon MWAA.
      enum:
        - CUSTOMER
        - SERVICE
    CeleryExecutorQueue:
      type: string
      description: The celery executor queue associated with the environment.
      maxLength: 1224
    DatabaseVpcEndpointService:
      type: string
      description: The database VPC endpoint service name.
      maxLength: 1224
    WebserverVpcEndpointService:
      type: string
      description: The webserver VPC endpoint service name, applicable if private webserver access mode selected.
      maxLength: 1224
    Environment:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EnvironmentName'
        Arn:
          $ref: '#/components/schemas/EnvironmentArn'
        WebserverUrl:
          $ref: '#/components/schemas/WebserverUrl'
        ExecutionRoleArn:
          $ref: '#/components/schemas/ExecutionRoleArn'
        KmsKey:
          $ref: '#/components/schemas/KmsKey'
        AirflowVersion:
          $ref: '#/components/schemas/AirflowVersion'
        SourceBucketArn:
          $ref: '#/components/schemas/S3BucketArn'
        DagS3Path:
          $ref: '#/components/schemas/RelativePath'
        PluginsS3Path:
          $ref: '#/components/schemas/RelativePath'
        PluginsS3ObjectVersion:
          $ref: '#/components/schemas/S3ObjectVersion'
        RequirementsS3Path:
          $ref: '#/components/schemas/RelativePath'
        RequirementsS3ObjectVersion:
          $ref: '#/components/schemas/S3ObjectVersion'
        StartupScriptS3Path:
          $ref: '#/components/schemas/RelativePath'
        StartupScriptS3ObjectVersion:
          $ref: '#/components/schemas/S3ObjectVersion'
        AirflowConfigurationOptions:
          type: object
          description: |-
            Key/value pairs representing Airflow configuration variables.
                Keys are prefixed by their section:

                [core]
                dags_folder={AIRFLOW_HOME}/dags

                Would be represented as

                "core.dags_folder": "{AIRFLOW_HOME}/dags"
        EnvironmentClass:
          $ref: '#/components/schemas/EnvironmentClass'
        MaxWorkers:
          $ref: '#/components/schemas/MaxWorkers'
        MinWorkers:
          $ref: '#/components/schemas/MinWorkers'
        MaxWebservers:
          $ref: '#/components/schemas/MaxWebservers'
        MinWebservers:
          $ref: '#/components/schemas/MinWebservers'
        Schedulers:
          $ref: '#/components/schemas/Schedulers'
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
        WeeklyMaintenanceWindowStart:
          $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
        Tags:
          type: object
          description: A map of tags for the environment.
        WebserverAccessMode:
          $ref: '#/components/schemas/WebserverAccessMode'
        EndpointManagement:
          $ref: '#/components/schemas/EndpointManagement'
        CeleryExecutorQueue:
          $ref: '#/components/schemas/CeleryExecutorQueue'
        DatabaseVpcEndpointService:
          $ref: '#/components/schemas/DatabaseVpcEndpointService'
        WebserverVpcEndpointService:
          $ref: '#/components/schemas/WebserverVpcEndpointService'
      required:
        - Name
      x-stackql-resource-name: environment
      description: Resource schema for AWS::MWAA::Environment
      x-type-name: AWS::MWAA::Environment
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - KmsKey
        - NetworkConfiguration/SubnetIds
        - EndpointManagement
      x-read-only-properties:
        - Arn
        - CeleryExecutorQueue
        - DatabaseVpcEndpointService
        - WebserverVpcEndpointService
        - WebserverUrl
        - LoggingConfiguration/DagProcessingLogs/CloudWatchLogGroupArn
        - LoggingConfiguration/SchedulerLogs/CloudWatchLogGroupArn
        - LoggingConfiguration/WebserverLogs/CloudWatchLogGroupArn
        - LoggingConfiguration/WorkerLogs/CloudWatchLogGroupArn
        - LoggingConfiguration/TaskLogs/CloudWatchLogGroupArn
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - airflow:UntagResource
          - airflow:TagResource
      x-required-permissions:
        create:
          - airflow:CreateEnvironment
        read:
          - airflow:GetEnvironment
        update:
          - airflow:UpdateEnvironment
          - airflow:TagResource
          - airflow:UntagResource
        delete:
          - airflow:DeleteEnvironment
        list:
          - airflow:ListEnvironments
    CreateEnvironmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              $ref: '#/components/schemas/EnvironmentName'
            Arn:
              $ref: '#/components/schemas/EnvironmentArn'
            WebserverUrl:
              $ref: '#/components/schemas/WebserverUrl'
            ExecutionRoleArn:
              $ref: '#/components/schemas/ExecutionRoleArn'
            KmsKey:
              $ref: '#/components/schemas/KmsKey'
            AirflowVersion:
              $ref: '#/components/schemas/AirflowVersion'
            SourceBucketArn:
              $ref: '#/components/schemas/S3BucketArn'
            DagS3Path:
              $ref: '#/components/schemas/RelativePath'
            PluginsS3Path:
              $ref: '#/components/schemas/RelativePath'
            PluginsS3ObjectVersion:
              $ref: '#/components/schemas/S3ObjectVersion'
            RequirementsS3Path:
              $ref: '#/components/schemas/RelativePath'
            RequirementsS3ObjectVersion:
              $ref: '#/components/schemas/S3ObjectVersion'
            StartupScriptS3Path:
              $ref: '#/components/schemas/RelativePath'
            StartupScriptS3ObjectVersion:
              $ref: '#/components/schemas/S3ObjectVersion'
            AirflowConfigurationOptions:
              type: object
              description: |-
                Key/value pairs representing Airflow configuration variables.
                    Keys are prefixed by their section:

                    [core]
                    dags_folder={AIRFLOW_HOME}/dags

                    Would be represented as

                    "core.dags_folder": "{AIRFLOW_HOME}/dags"
            EnvironmentClass:
              $ref: '#/components/schemas/EnvironmentClass'
            MaxWorkers:
              $ref: '#/components/schemas/MaxWorkers'
            MinWorkers:
              $ref: '#/components/schemas/MinWorkers'
            MaxWebservers:
              $ref: '#/components/schemas/MaxWebservers'
            MinWebservers:
              $ref: '#/components/schemas/MinWebservers'
            Schedulers:
              $ref: '#/components/schemas/Schedulers'
            NetworkConfiguration:
              $ref: '#/components/schemas/NetworkConfiguration'
            LoggingConfiguration:
              $ref: '#/components/schemas/LoggingConfiguration'
            WeeklyMaintenanceWindowStart:
              $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
            Tags:
              type: object
              description: A map of tags for the environment.
            WebserverAccessMode:
              $ref: '#/components/schemas/WebserverAccessMode'
            EndpointManagement:
              $ref: '#/components/schemas/EndpointManagement'
            CeleryExecutorQueue:
              $ref: '#/components/schemas/CeleryExecutorQueue'
            DatabaseVpcEndpointService:
              $ref: '#/components/schemas/DatabaseVpcEndpointService'
            WebserverVpcEndpointService:
              $ref: '#/components/schemas/WebserverVpcEndpointService'
          x-stackQL-stringOnly: true
      x-title: CreateEnvironmentRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    environments:
      name: environments
      id: aws.mwaa.environments
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::MWAA::Environment
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Environment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MWAA::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MWAA::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MWAA::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/environments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.WebserverUrl') as webserver_url,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(Properties, '$.AirflowVersion') as airflow_version,
              JSON_EXTRACT(Properties, '$.SourceBucketArn') as source_bucket_arn,
              JSON_EXTRACT(Properties, '$.DagS3Path') as dag_s3_path,
              JSON_EXTRACT(Properties, '$.PluginsS3Path') as plugins_s3_path,
              JSON_EXTRACT(Properties, '$.PluginsS3ObjectVersion') as plugins_s3_object_version,
              JSON_EXTRACT(Properties, '$.RequirementsS3Path') as requirements_s3_path,
              JSON_EXTRACT(Properties, '$.RequirementsS3ObjectVersion') as requirements_s3_object_version,
              JSON_EXTRACT(Properties, '$.StartupScriptS3Path') as startup_script_s3_path,
              JSON_EXTRACT(Properties, '$.StartupScriptS3ObjectVersion') as startup_script_s3_object_version,
              JSON_EXTRACT(Properties, '$.AirflowConfigurationOptions') as airflow_configuration_options,
              JSON_EXTRACT(Properties, '$.EnvironmentClass') as environment_class,
              JSON_EXTRACT(Properties, '$.MaxWorkers') as max_workers,
              JSON_EXTRACT(Properties, '$.MinWorkers') as min_workers,
              JSON_EXTRACT(Properties, '$.MaxWebservers') as max_webservers,
              JSON_EXTRACT(Properties, '$.MinWebservers') as min_webservers,
              JSON_EXTRACT(Properties, '$.Schedulers') as schedulers,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration') as network_configuration,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration') as logging_configuration,
              JSON_EXTRACT(Properties, '$.WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.WebserverAccessMode') as webserver_access_mode,
              JSON_EXTRACT(Properties, '$.EndpointManagement') as endpoint_management,
              JSON_EXTRACT(Properties, '$.CeleryExecutorQueue') as celery_executor_queue,
              JSON_EXTRACT(Properties, '$.DatabaseVpcEndpointService') as database_vpc_endpoint_service,
              JSON_EXTRACT(Properties, '$.WebserverVpcEndpointService') as webserver_vpc_endpoint_service
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MWAA::Environment'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.WebserverUrl') as webserver_url,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRoleArn') as execution_role_arn,
                JSON_EXTRACT(detail.Properties, '$.KmsKey') as kms_key,
                JSON_EXTRACT(detail.Properties, '$.AirflowVersion') as airflow_version,
                JSON_EXTRACT(detail.Properties, '$.SourceBucketArn') as source_bucket_arn,
                JSON_EXTRACT(detail.Properties, '$.DagS3Path') as dag_s3_path,
                JSON_EXTRACT(detail.Properties, '$.PluginsS3Path') as plugins_s3_path,
                JSON_EXTRACT(detail.Properties, '$.PluginsS3ObjectVersion') as plugins_s3_object_version,
                JSON_EXTRACT(detail.Properties, '$.RequirementsS3Path') as requirements_s3_path,
                JSON_EXTRACT(detail.Properties, '$.RequirementsS3ObjectVersion') as requirements_s3_object_version,
                JSON_EXTRACT(detail.Properties, '$.StartupScriptS3Path') as startup_script_s3_path,
                JSON_EXTRACT(detail.Properties, '$.StartupScriptS3ObjectVersion') as startup_script_s3_object_version,
                JSON_EXTRACT(detail.Properties, '$.AirflowConfigurationOptions') as airflow_configuration_options,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentClass') as environment_class,
                JSON_EXTRACT(detail.Properties, '$.MaxWorkers') as max_workers,
                JSON_EXTRACT(detail.Properties, '$.MinWorkers') as min_workers,
                JSON_EXTRACT(detail.Properties, '$.MaxWebservers') as max_webservers,
                JSON_EXTRACT(detail.Properties, '$.MinWebservers') as min_webservers,
                JSON_EXTRACT(detail.Properties, '$.Schedulers') as schedulers,
                JSON_EXTRACT(detail.Properties, '$.NetworkConfiguration') as network_configuration,
                JSON_EXTRACT(detail.Properties, '$.LoggingConfiguration') as logging_configuration,
                JSON_EXTRACT(detail.Properties, '$.WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.WebserverAccessMode') as webserver_access_mode,
                JSON_EXTRACT(detail.Properties, '$.EndpointManagement') as endpoint_management,
                JSON_EXTRACT(detail.Properties, '$.CeleryExecutorQueue') as celery_executor_queue,
                JSON_EXTRACT(detail.Properties, '$.DatabaseVpcEndpointService') as database_vpc_endpoint_service,
                JSON_EXTRACT(detail.Properties, '$.WebserverVpcEndpointService') as webserver_vpc_endpoint_service
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MWAA::Environment'
                AND detail.data__TypeName = 'AWS::MWAA::Environment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'WebserverUrl') as webserver_url,
                  json_extract_path_text(Properties, 'ExecutionRoleArn') as execution_role_arn,
                  json_extract_path_text(Properties, 'KmsKey') as kms_key,
                  json_extract_path_text(Properties, 'AirflowVersion') as airflow_version,
                  json_extract_path_text(Properties, 'SourceBucketArn') as source_bucket_arn,
                  json_extract_path_text(Properties, 'DagS3Path') as dag_s3_path,
                  json_extract_path_text(Properties, 'PluginsS3Path') as plugins_s3_path,
                  json_extract_path_text(Properties, 'PluginsS3ObjectVersion') as plugins_s3_object_version,
                  json_extract_path_text(Properties, 'RequirementsS3Path') as requirements_s3_path,
                  json_extract_path_text(Properties, 'RequirementsS3ObjectVersion') as requirements_s3_object_version,
                  json_extract_path_text(Properties, 'StartupScriptS3Path') as startup_script_s3_path,
                  json_extract_path_text(Properties, 'StartupScriptS3ObjectVersion') as startup_script_s3_object_version,
                  json_extract_path_text(Properties, 'AirflowConfigurationOptions') as airflow_configuration_options,
                  json_extract_path_text(Properties, 'EnvironmentClass') as environment_class,
                  json_extract_path_text(Properties, 'MaxWorkers') as max_workers,
                  json_extract_path_text(Properties, 'MinWorkers') as min_workers,
                  json_extract_path_text(Properties, 'MaxWebservers') as max_webservers,
                  json_extract_path_text(Properties, 'MinWebservers') as min_webservers,
                  json_extract_path_text(Properties, 'Schedulers') as schedulers,
                  json_extract_path_text(Properties, 'NetworkConfiguration') as network_configuration,
                  json_extract_path_text(Properties, 'LoggingConfiguration') as logging_configuration,
                  json_extract_path_text(Properties, 'WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'WebserverAccessMode') as webserver_access_mode,
                  json_extract_path_text(Properties, 'EndpointManagement') as endpoint_management,
                  json_extract_path_text(Properties, 'CeleryExecutorQueue') as celery_executor_queue,
                  json_extract_path_text(Properties, 'DatabaseVpcEndpointService') as database_vpc_endpoint_service,
                  json_extract_path_text(Properties, 'WebserverVpcEndpointService') as webserver_vpc_endpoint_service
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MWAA::Environment'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'WebserverUrl') as webserver_url,
                    json_extract_path_text(detail.Properties, 'ExecutionRoleArn') as execution_role_arn,
                    json_extract_path_text(detail.Properties, 'KmsKey') as kms_key,
                    json_extract_path_text(detail.Properties, 'AirflowVersion') as airflow_version,
                    json_extract_path_text(detail.Properties, 'SourceBucketArn') as source_bucket_arn,
                    json_extract_path_text(detail.Properties, 'DagS3Path') as dag_s3_path,
                    json_extract_path_text(detail.Properties, 'PluginsS3Path') as plugins_s3_path,
                    json_extract_path_text(detail.Properties, 'PluginsS3ObjectVersion') as plugins_s3_object_version,
                    json_extract_path_text(detail.Properties, 'RequirementsS3Path') as requirements_s3_path,
                    json_extract_path_text(detail.Properties, 'RequirementsS3ObjectVersion') as requirements_s3_object_version,
                    json_extract_path_text(detail.Properties, 'StartupScriptS3Path') as startup_script_s3_path,
                    json_extract_path_text(detail.Properties, 'StartupScriptS3ObjectVersion') as startup_script_s3_object_version,
                    json_extract_path_text(detail.Properties, 'AirflowConfigurationOptions') as airflow_configuration_options,
                    json_extract_path_text(detail.Properties, 'EnvironmentClass') as environment_class,
                    json_extract_path_text(detail.Properties, 'MaxWorkers') as max_workers,
                    json_extract_path_text(detail.Properties, 'MinWorkers') as min_workers,
                    json_extract_path_text(detail.Properties, 'MaxWebservers') as max_webservers,
                    json_extract_path_text(detail.Properties, 'MinWebservers') as min_webservers,
                    json_extract_path_text(detail.Properties, 'Schedulers') as schedulers,
                    json_extract_path_text(detail.Properties, 'NetworkConfiguration') as network_configuration,
                    json_extract_path_text(detail.Properties, 'LoggingConfiguration') as logging_configuration,
                    json_extract_path_text(detail.Properties, 'WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'WebserverAccessMode') as webserver_access_mode,
                    json_extract_path_text(detail.Properties, 'EndpointManagement') as endpoint_management,
                    json_extract_path_text(detail.Properties, 'CeleryExecutorQueue') as celery_executor_queue,
                    json_extract_path_text(detail.Properties, 'DatabaseVpcEndpointService') as database_vpc_endpoint_service,
                    json_extract_path_text(detail.Properties, 'WebserverVpcEndpointService') as webserver_vpc_endpoint_service
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MWAA::Environment'
                    AND detail.data__TypeName = 'AWS::MWAA::Environment'
                    AND listing.region = 'us-east-1'
    environments_list_only:
      name: environments_list_only
      id: aws.mwaa.environments_list_only
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::MWAA::Environment
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MWAA::Environment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MWAA::Environment'
                AND region = 'us-east-1'
    environment_tags:
      name: environment_tags
      id: aws.mwaa.environment_tags
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::MWAA::Environment
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.WebserverUrl') as webserver_url,
              JSON_EXTRACT(detail.Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(detail.Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(detail.Properties, '$.AirflowVersion') as airflow_version,
              JSON_EXTRACT(detail.Properties, '$.SourceBucketArn') as source_bucket_arn,
              JSON_EXTRACT(detail.Properties, '$.DagS3Path') as dag_s3_path,
              JSON_EXTRACT(detail.Properties, '$.PluginsS3Path') as plugins_s3_path,
              JSON_EXTRACT(detail.Properties, '$.PluginsS3ObjectVersion') as plugins_s3_object_version,
              JSON_EXTRACT(detail.Properties, '$.RequirementsS3Path') as requirements_s3_path,
              JSON_EXTRACT(detail.Properties, '$.RequirementsS3ObjectVersion') as requirements_s3_object_version,
              JSON_EXTRACT(detail.Properties, '$.StartupScriptS3Path') as startup_script_s3_path,
              JSON_EXTRACT(detail.Properties, '$.StartupScriptS3ObjectVersion') as startup_script_s3_object_version,
              JSON_EXTRACT(detail.Properties, '$.AirflowConfigurationOptions') as airflow_configuration_options,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentClass') as environment_class,
              JSON_EXTRACT(detail.Properties, '$.MaxWorkers') as max_workers,
              JSON_EXTRACT(detail.Properties, '$.MinWorkers') as min_workers,
              JSON_EXTRACT(detail.Properties, '$.MaxWebservers') as max_webservers,
              JSON_EXTRACT(detail.Properties, '$.MinWebservers') as min_webservers,
              JSON_EXTRACT(detail.Properties, '$.Schedulers') as schedulers,
              JSON_EXTRACT(detail.Properties, '$.NetworkConfiguration') as network_configuration,
              JSON_EXTRACT(detail.Properties, '$.LoggingConfiguration') as logging_configuration,
              JSON_EXTRACT(detail.Properties, '$.WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
              JSON_EXTRACT(detail.Properties, '$.WebserverAccessMode') as webserver_access_mode,
              JSON_EXTRACT(detail.Properties, '$.EndpointManagement') as endpoint_management,
              JSON_EXTRACT(detail.Properties, '$.CeleryExecutorQueue') as celery_executor_queue,
              JSON_EXTRACT(detail.Properties, '$.DatabaseVpcEndpointService') as database_vpc_endpoint_service,
              JSON_EXTRACT(detail.Properties, '$.WebserverVpcEndpointService') as webserver_vpc_endpoint_service
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::MWAA::Environment'
              AND detail.data__TypeName = 'AWS::MWAA::Environment'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'WebserverUrl') as webserver_url,
                json_extract_path_text(detail.Properties, 'ExecutionRoleArn') as execution_role_arn,
                json_extract_path_text(detail.Properties, 'KmsKey') as kms_key,
                json_extract_path_text(detail.Properties, 'AirflowVersion') as airflow_version,
                json_extract_path_text(detail.Properties, 'SourceBucketArn') as source_bucket_arn,
                json_extract_path_text(detail.Properties, 'DagS3Path') as dag_s3_path,
                json_extract_path_text(detail.Properties, 'PluginsS3Path') as plugins_s3_path,
                json_extract_path_text(detail.Properties, 'PluginsS3ObjectVersion') as plugins_s3_object_version,
                json_extract_path_text(detail.Properties, 'RequirementsS3Path') as requirements_s3_path,
                json_extract_path_text(detail.Properties, 'RequirementsS3ObjectVersion') as requirements_s3_object_version,
                json_extract_path_text(detail.Properties, 'StartupScriptS3Path') as startup_script_s3_path,
                json_extract_path_text(detail.Properties, 'StartupScriptS3ObjectVersion') as startup_script_s3_object_version,
                json_extract_path_text(detail.Properties, 'AirflowConfigurationOptions') as airflow_configuration_options,
                json_extract_path_text(detail.Properties, 'EnvironmentClass') as environment_class,
                json_extract_path_text(detail.Properties, 'MaxWorkers') as max_workers,
                json_extract_path_text(detail.Properties, 'MinWorkers') as min_workers,
                json_extract_path_text(detail.Properties, 'MaxWebservers') as max_webservers,
                json_extract_path_text(detail.Properties, 'MinWebservers') as min_webservers,
                json_extract_path_text(detail.Properties, 'Schedulers') as schedulers,
                json_extract_path_text(detail.Properties, 'NetworkConfiguration') as network_configuration,
                json_extract_path_text(detail.Properties, 'LoggingConfiguration') as logging_configuration,
                json_extract_path_text(detail.Properties, 'WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
                json_extract_path_text(detail.Properties, 'WebserverAccessMode') as webserver_access_mode,
                json_extract_path_text(detail.Properties, 'EndpointManagement') as endpoint_management,
                json_extract_path_text(detail.Properties, 'CeleryExecutorQueue') as celery_executor_queue,
                json_extract_path_text(detail.Properties, 'DatabaseVpcEndpointService') as database_vpc_endpoint_service,
                json_extract_path_text(detail.Properties, 'WebserverVpcEndpointService') as webserver_vpc_endpoint_service
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::MWAA::Environment'
                AND detail.data__TypeName = 'AWS::MWAA::Environment'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Environment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEnvironment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
