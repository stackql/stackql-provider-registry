openapi: 3.0.0
info:
  title: AppStream
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    S3Location:
      type: object
      properties:
        S3Bucket:
          type: string
        S3Key:
          type: string
      additionalProperties: false
      required:
        - S3Bucket
        - S3Key
    ScriptDetails:
      type: object
      properties:
        ScriptS3Location:
          $ref: '#/components/schemas/S3Location'
        ExecutablePath:
          type: string
        ExecutableParameters:
          type: string
        TimeoutInSeconds:
          type: integer
      additionalProperties: false
      required:
        - ScriptS3Location
        - ExecutablePath
        - TimeoutInSeconds
    Arn:
      type: string
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    PackagingType:
      type: string
    AppBlock:
      type: object
      properties:
        Name:
          type: string
        Arn:
          $ref: '#/components/schemas/Arn'
        Description:
          type: string
        DisplayName:
          type: string
        SourceS3Location:
          $ref: '#/components/schemas/S3Location'
        SetupScriptDetails:
          $ref: '#/components/schemas/ScriptDetails'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        CreatedTime:
          type: string
        PackagingType:
          $ref: '#/components/schemas/PackagingType'
        PostSetupScriptDetails:
          $ref: '#/components/schemas/ScriptDetails'
      required:
        - Name
        - SourceS3Location
      x-stackql-resource-name: app_block
      description: Resource Type definition for AWS::AppStream::AppBlock
      x-type-name: AWS::AppStream::AppBlock
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - DisplayName
        - Description
        - SourceS3Location
        - SetupScriptDetails
        - PackagingType
        - PostSetupScriptDetails
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - Arn
        - CreatedTime
      x-required-properties:
        - Name
        - SourceS3Location
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - appstream:CreateAppBlock
          - appstream:TagResource
          - s3:GetObject
          - s3:ListBucket
          - s3:GetBucketOwnershipControls
        read:
          - appstream:DescribeAppBlocks
        delete:
          - appstream:DeleteAppBlock
    PlatformType:
      type: string
    AccessEndpoint:
      type: object
      additionalProperties: false
      properties:
        EndpointType:
          type: string
        VpceId:
          type: string
      required:
        - EndpointType
        - VpceId
    VpcConfig:
      type: object
      additionalProperties: false
      properties:
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        SubnetIds:
          type: array
          uniqueItems: false
          items:
            type: string
    AppBlockBuilder:
      type: object
      properties:
        Name:
          type: string
        Arn:
          $ref: '#/components/schemas/Arn'
        Description:
          type: string
        DisplayName:
          type: string
        Platform:
          $ref: '#/components/schemas/PlatformType'
        AccessEndpoints:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AccessEndpoint'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
        EnableDefaultInternetAccess:
          type: boolean
        IamRoleArn:
          type: string
        CreatedTime:
          type: string
        InstanceType:
          type: string
        AppBlockArns:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Arn'
      required:
        - Name
        - Platform
        - InstanceType
        - VpcConfig
      x-stackql-resource-name: app_block_builder
      description: Resource Type definition for AWS::AppStream::AppBlockBuilder.
      x-type-name: AWS::AppStream::AppBlockBuilder
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - Tags
        - AppBlockArns
      x-read-only-properties:
        - Arn
        - CreatedTime
      x-required-properties:
        - Name
        - Platform
        - InstanceType
        - VpcConfig
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - appstream:CreateAppBlockBuilder
          - appstream:DescribeAppBlockBuilders
          - appstream:StartAppBlockBuilder
          - appstream:AssociateAppBlockBuilderAppBlock
          - appstream:DescribeAppBlockBuilderAppBlockAssociations
          - appstream:TagResource
          - iam:PassRole
        read:
          - appstream:DescribeAppBlockBuilders
        update:
          - appstream:UpdateAppBlockBuilder
          - appstream:DescribeAppBlockBuilders
          - appstream:StartAppBlockBuilder
          - appstream:StopAppBlockBuilder
          - appstream:AssociateAppBlockBuilderAppBlock
          - appstream:DisassociateAppBlockBuilderAppBlock
          - appstream:DescribeAppBlockBuilderAppBlockAssociations
          - appstream:ListTagsForResource
          - appstream:TagResource
          - appstream:UntagResource
          - iam:PassRole
        delete:
          - appstream:DescribeAppBlockBuilders
          - appstream:DeleteAppBlockBuilder
          - appstream:DisassociateAppBlockBuilderAppBlock
          - appstream:DescribeAppBlockBuilderAppBlockAssociations
        list:
          - appstream:DescribeAppBlockBuilders
    ApplicationAttribute:
      type: string
    Application:
      type: object
      properties:
        Name:
          type: string
        DisplayName:
          type: string
        Description:
          type: string
        LaunchPath:
          type: string
        LaunchParameters:
          type: string
        WorkingDirectory:
          type: string
        InstanceFamilies:
          type: array
          uniqueItems: true
          items:
            type: string
          x-insertionOrder: false
        IconS3Location:
          $ref: '#/components/schemas/S3Location'
        Arn:
          $ref: '#/components/schemas/Arn'
        AppBlockArn:
          $ref: '#/components/schemas/Arn'
        Platforms:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PlatformType'
          x-insertionOrder: false
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        AttributesToDelete:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ApplicationAttribute'
          x-insertionOrder: false
        CreatedTime:
          type: string
      required:
        - Name
        - IconS3Location
        - LaunchPath
        - Platforms
        - InstanceFamilies
        - AppBlockArn
      x-stackql-resource-name: application
      description: Resource Type definition for AWS::AppStream::Application
      x-type-name: AWS::AppStream::Application
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - InstanceFamilies
        - Platforms
      x-write-only-properties:
        - Tags
        - AttributesToDelete
      x-read-only-properties:
        - Arn
        - CreatedTime
      x-required-properties:
        - Name
        - IconS3Location
        - LaunchPath
        - Platforms
        - InstanceFamilies
        - AppBlockArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - s3:GetObject
          - appstream:CreateApplication
          - appstream:TagResource
        read:
          - appstream:DescribeApplications
        update:
          - appstream:UpdateApplication
          - s3:GetObject
        delete:
          - appstream:DeleteApplication
    ApplicationEntitlementAssociation:
      type: object
      properties:
        StackName:
          type: string
        EntitlementName:
          type: string
        ApplicationIdentifier:
          type: string
      required:
        - StackName
        - EntitlementName
        - ApplicationIdentifier
      x-stackql-resource-name: application_entitlement_association
      description: Resource Type definition for AWS::AppStream::ApplicationEntitlementAssociation
      x-type-name: AWS::AppStream::ApplicationEntitlementAssociation
      x-stackql-primary-identifier:
        - StackName
        - EntitlementName
        - ApplicationIdentifier
      x-create-only-properties:
        - StackName
        - EntitlementName
        - ApplicationIdentifier
      x-required-properties:
        - StackName
        - EntitlementName
        - ApplicationIdentifier
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - appstream:AssociateApplicationToEntitlement
          - appstream:ListEntitledApplications
        read:
          - appstream:ListEntitledApplications
        delete:
          - appstream:DisassociateApplicationFromEntitlement
          - appstream:ListEntitledApplications
    ApplicationFleetAssociation:
      type: object
      properties:
        FleetName:
          type: string
        ApplicationArn:
          $ref: '#/components/schemas/Arn'
      required:
        - FleetName
        - ApplicationArn
      x-stackql-resource-name: application_fleet_association
      description: Resource Type definition for AWS::AppStream::ApplicationFleetAssociation
      x-type-name: AWS::AppStream::ApplicationFleetAssociation
      x-stackql-primary-identifier:
        - FleetName
        - ApplicationArn
      x-create-only-properties:
        - FleetName
        - ApplicationArn
      x-required-properties:
        - FleetName
        - ApplicationArn
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - appstream:AssociateApplicationFleet
          - appstream:DescribeApplicationFleetAssociations
        read:
          - appstream:DescribeApplicationFleetAssociations
        delete:
          - appstream:DisassociateApplicationFleet
          - appstream:DescribeApplicationFleetAssociations
    ServiceAccountCredentials:
      type: object
      additionalProperties: false
      properties:
        AccountName:
          type: string
        AccountPassword:
          type: string
      required:
        - AccountName
        - AccountPassword
    CertificateBasedAuthProperties:
      type: object
      additionalProperties: false
      properties:
        Status:
          type: string
        CertificateAuthorityArn:
          type: string
    DirectoryConfig:
      type: object
      properties:
        OrganizationalUnitDistinguishedNames:
          type: array
          uniqueItems: false
          items:
            type: string
        ServiceAccountCredentials:
          $ref: '#/components/schemas/ServiceAccountCredentials'
        DirectoryName:
          type: string
        CertificateBasedAuthProperties:
          $ref: '#/components/schemas/CertificateBasedAuthProperties'
      required:
        - DirectoryName
        - OrganizationalUnitDistinguishedNames
        - ServiceAccountCredentials
      x-stackql-resource-name: directory_config
      description: Resource Type definition for AWS::AppStream::DirectoryConfig
      x-type-name: AWS::AppStream::DirectoryConfig
      x-stackql-primary-identifier:
        - DirectoryName
      x-create-only-properties:
        - DirectoryName
      x-write-only-properties:
        - ServiceAccountCredentials/AccountPassword
      x-required-properties:
        - DirectoryName
        - OrganizationalUnitDistinguishedNames
        - ServiceAccountCredentials
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - appstream:CreateDirectoryConfig
          - appstream:DeleteDirectoryConfig
          - appstream:DescribeDirectoryConfigs
          - appstream:UpdateDirectoryConfig
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
        update:
          - appstream:CreateDirectoryConfig
          - appstream:DeleteDirectoryConfig
          - appstream:DescribeDirectoryConfigs
          - appstream:UpdateDirectoryConfig
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
        read:
          - appstream:CreateDirectoryConfig
          - appstream:DeleteDirectoryConfig
          - appstream:DescribeDirectoryConfigs
          - appstream:UpdateDirectoryConfig
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
        delete:
          - appstream:CreateDirectoryConfig
          - appstream:DeleteDirectoryConfig
          - appstream:DescribeDirectoryConfigs
          - appstream:UpdateDirectoryConfig
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
        list:
          - appstream:CreateDirectoryConfig
          - appstream:DeleteDirectoryConfig
          - appstream:DescribeDirectoryConfigs
          - appstream:UpdateDirectoryConfig
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
    Attribute:
      type: object
      properties:
        Name:
          type: string
        Value:
          type: string
      required:
        - Name
        - Value
      additionalProperties: false
    Entitlement:
      type: object
      properties:
        Name:
          type: string
        StackName:
          type: string
        Description:
          type: string
        AppVisibility:
          type: string
        Attributes:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Attribute'
        CreatedTime:
          type: string
        LastModifiedTime:
          type: string
      required:
        - Name
        - StackName
        - AppVisibility
        - Attributes
      x-stackql-resource-name: entitlement
      description: Resource Type definition for AWS::AppStream::Entitlement
      x-type-name: AWS::AppStream::Entitlement
      x-stackql-primary-identifier:
        - StackName
        - Name
      x-create-only-properties:
        - Name
        - StackName
      x-read-only-properties:
        - CreatedTime
        - LastModifiedTime
      x-required-properties:
        - Name
        - StackName
        - AppVisibility
        - Attributes
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - appstream:CreateEntitlement
        read:
          - appstream:DescribeEntitlements
        update:
          - appstream:UpdateEntitlement
        delete:
          - appstream:DeleteEntitlement
    DomainJoinInfo:
      type: object
      additionalProperties: false
      properties:
        OrganizationalUnitDistinguishedName:
          type: string
        DirectoryName:
          type: string
    ImageBuilder:
      type: object
      properties:
        Description:
          type: string
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
        EnableDefaultInternetAccess:
          type: boolean
        DomainJoinInfo:
          $ref: '#/components/schemas/DomainJoinInfo'
        AppstreamAgentVersion:
          type: string
        Name:
          type: string
        ImageName:
          type: string
        DisplayName:
          type: string
        IamRoleArn:
          type: string
        InstanceType:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        StreamingUrl:
          type: string
        ImageArn:
          type: string
        AccessEndpoints:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/AccessEndpoint'
      required:
        - InstanceType
        - Name
      x-stackql-resource-name: image_builder
      description: Resource Type definition for AWS::AppStream::ImageBuilder
      x-type-name: AWS::AppStream::ImageBuilder
      x-stackql-primary-identifier:
        - Name
      x-read-only-properties:
        - StreamingUrl
      x-required-properties:
        - InstanceType
        - Name
      x-tagging:
        taggable: false
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - appstream:CreateImageBuilder
          - appstream:CreateImageBuilderStreamingURL
          - appstream:CreateStreamingURL
          - appstream:DeleteImageBuilder
          - appstream:DescribeImageBuilders
          - appstream:StartImageBuilder
          - appstream:StopImageBuilder
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
        read:
          - appstream:CreateImageBuilder
          - appstream:CreateImageBuilderStreamingURL
          - appstream:CreateStreamingURL
          - appstream:DeleteImageBuilder
          - appstream:DescribeImageBuilders
          - appstream:StartImageBuilder
          - appstream:StopImageBuilder
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
        delete:
          - appstream:CreateImageBuilder
          - appstream:CreateImageBuilderStreamingURL
          - appstream:CreateStreamingURL
          - appstream:DeleteImageBuilder
          - appstream:DescribeImageBuilders
          - appstream:StartImageBuilder
          - appstream:StopImageBuilder
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
        list:
          - appstream:CreateImageBuilder
          - appstream:CreateImageBuilderStreamingURL
          - appstream:CreateStreamingURL
          - appstream:DeleteImageBuilder
          - appstream:DescribeImageBuilders
          - appstream:StartImageBuilder
          - appstream:StopImageBuilder
          - iam:CreateServiceLinkedRole
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
    CreateAppBlockRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
            Arn:
              $ref: '#/components/schemas/Arn'
            Description:
              type: string
            DisplayName:
              type: string
            SourceS3Location:
              $ref: '#/components/schemas/S3Location'
            SetupScriptDetails:
              $ref: '#/components/schemas/ScriptDetails'
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
            CreatedTime:
              type: string
            PackagingType:
              $ref: '#/components/schemas/PackagingType'
            PostSetupScriptDetails:
              $ref: '#/components/schemas/ScriptDetails'
          x-stackQL-stringOnly: true
      x-title: CreateAppBlockRequest
      type: object
      required: []
    CreateAppBlockBuilderRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
            Arn:
              $ref: '#/components/schemas/Arn'
            Description:
              type: string
            DisplayName:
              type: string
            Platform:
              $ref: '#/components/schemas/PlatformType'
            AccessEndpoints:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/AccessEndpoint'
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
            VpcConfig:
              $ref: '#/components/schemas/VpcConfig'
            EnableDefaultInternetAccess:
              type: boolean
            IamRoleArn:
              type: string
            CreatedTime:
              type: string
            InstanceType:
              type: string
            AppBlockArns:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Arn'
          x-stackQL-stringOnly: true
      x-title: CreateAppBlockBuilderRequest
      type: object
      required: []
    CreateApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
            DisplayName:
              type: string
            Description:
              type: string
            LaunchPath:
              type: string
            LaunchParameters:
              type: string
            WorkingDirectory:
              type: string
            InstanceFamilies:
              type: array
              uniqueItems: true
              items:
                type: string
              x-insertionOrder: false
            IconS3Location:
              $ref: '#/components/schemas/S3Location'
            Arn:
              $ref: '#/components/schemas/Arn'
            AppBlockArn:
              $ref: '#/components/schemas/Arn'
            Platforms:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/PlatformType'
              x-insertionOrder: false
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
            AttributesToDelete:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ApplicationAttribute'
              x-insertionOrder: false
            CreatedTime:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateApplicationRequest
      type: object
      required: []
    CreateApplicationEntitlementAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            StackName:
              type: string
            EntitlementName:
              type: string
            ApplicationIdentifier:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateApplicationEntitlementAssociationRequest
      type: object
      required: []
    CreateApplicationFleetAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FleetName:
              type: string
            ApplicationArn:
              $ref: '#/components/schemas/Arn'
          x-stackQL-stringOnly: true
      x-title: CreateApplicationFleetAssociationRequest
      type: object
      required: []
    CreateDirectoryConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            OrganizationalUnitDistinguishedNames:
              type: array
              uniqueItems: false
              items:
                type: string
            ServiceAccountCredentials:
              $ref: '#/components/schemas/ServiceAccountCredentials'
            DirectoryName:
              type: string
            CertificateBasedAuthProperties:
              $ref: '#/components/schemas/CertificateBasedAuthProperties'
          x-stackQL-stringOnly: true
      x-title: CreateDirectoryConfigRequest
      type: object
      required: []
    CreateEntitlementRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
            StackName:
              type: string
            Description:
              type: string
            AppVisibility:
              type: string
            Attributes:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Attribute'
            CreatedTime:
              type: string
            LastModifiedTime:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateEntitlementRequest
      type: object
      required: []
    CreateImageBuilderRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
            VpcConfig:
              $ref: '#/components/schemas/VpcConfig'
            EnableDefaultInternetAccess:
              type: boolean
            DomainJoinInfo:
              $ref: '#/components/schemas/DomainJoinInfo'
            AppstreamAgentVersion:
              type: string
            Name:
              type: string
            ImageName:
              type: string
            DisplayName:
              type: string
            IamRoleArn:
              type: string
            InstanceType:
              type: string
            Tags:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
            StreamingUrl:
              type: string
            ImageArn:
              type: string
            AccessEndpoints:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/AccessEndpoint'
          x-stackQL-stringOnly: true
      x-title: CreateImageBuilderRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    app_blocks:
      name: app_blocks
      id: aws.appstream.app_blocks
      x-cfn-schema-name: AppBlock
      x-cfn-type-name: AWS::AppStream::AppBlock
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AppBlock&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::AppBlock"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::AppBlock"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/app_blocks/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/app_blocks/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.SourceS3Location') as source_s3_location,
              JSON_EXTRACT(Properties, '$.SetupScriptDetails') as setup_script_details,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.PackagingType') as packaging_type,
              JSON_EXTRACT(Properties, '$.PostSetupScriptDetails') as post_setup_script_details
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::AppBlock'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DisplayName') as display_name,
                json_extract_path_text(Properties, 'SourceS3Location') as source_s3_location,
                json_extract_path_text(Properties, 'SetupScriptDetails') as setup_script_details,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CreatedTime') as created_time,
                json_extract_path_text(Properties, 'PackagingType') as packaging_type,
                json_extract_path_text(Properties, 'PostSetupScriptDetails') as post_setup_script_details
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::AppBlock'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    app_block_builders:
      name: app_block_builders
      id: aws.appstream.app_block_builders
      x-cfn-schema-name: AppBlockBuilder
      x-cfn-type-name: AWS::AppStream::AppBlockBuilder
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AppBlockBuilder&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::AppBlockBuilder"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::AppBlockBuilder"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::AppBlockBuilder"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/app_block_builders/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/app_block_builders/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/app_block_builders/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.Platform') as platform,
              JSON_EXTRACT(Properties, '$.AccessEndpoints') as access_endpoints,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(Properties, '$.EnableDefaultInternetAccess') as enable_default_internet_access,
              JSON_EXTRACT(Properties, '$.IamRoleArn') as iam_role_arn,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.AppBlockArns') as app_block_arns
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::AppBlockBuilder'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.Platform') as platform,
                JSON_EXTRACT(detail.Properties, '$.AccessEndpoints') as access_endpoints,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
                JSON_EXTRACT(detail.Properties, '$.EnableDefaultInternetAccess') as enable_default_internet_access,
                JSON_EXTRACT(detail.Properties, '$.IamRoleArn') as iam_role_arn,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
                JSON_EXTRACT(detail.Properties, '$.AppBlockArns') as app_block_arns
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                AND detail.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'Platform') as platform,
                  json_extract_path_text(Properties, 'AccessEndpoints') as access_endpoints,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'VpcConfig') as vpc_config,
                  json_extract_path_text(Properties, 'EnableDefaultInternetAccess') as enable_default_internet_access,
                  json_extract_path_text(Properties, 'IamRoleArn') as iam_role_arn,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'InstanceType') as instance_type,
                  json_extract_path_text(Properties, 'AppBlockArns') as app_block_arns
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'Platform') as platform,
                    json_extract_path_text(detail.Properties, 'AccessEndpoints') as access_endpoints,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                    json_extract_path_text(detail.Properties, 'EnableDefaultInternetAccess') as enable_default_internet_access,
                    json_extract_path_text(detail.Properties, 'IamRoleArn') as iam_role_arn,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                    json_extract_path_text(detail.Properties, 'AppBlockArns') as app_block_arns
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                    AND detail.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                    AND listing.region = 'us-east-1'
    app_block_builders_list_only:
      name: app_block_builders_list_only
      id: aws.appstream.app_block_builders_list_only
      x-cfn-schema-name: AppBlockBuilder
      x-cfn-type-name: AWS::AppStream::AppBlockBuilder
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppStream::AppBlockBuilder'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                AND region = 'us-east-1'
    app_block_builder_tags:
      name: app_block_builder_tags
      id: aws.appstream.app_block_builder_tags
      x-cfn-schema-name: AppBlockBuilder
      x-cfn-type-name: AWS::AppStream::AppBlockBuilder
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.Platform') as platform,
              JSON_EXTRACT(detail.Properties, '$.AccessEndpoints') as access_endpoints,
              JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(detail.Properties, '$.EnableDefaultInternetAccess') as enable_default_internet_access,
              JSON_EXTRACT(detail.Properties, '$.IamRoleArn') as iam_role_arn,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(detail.Properties, '$.AppBlockArns') as app_block_arns
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
              AND detail.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'Platform') as platform,
                json_extract_path_text(detail.Properties, 'AccessEndpoints') as access_endpoints,
                json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                json_extract_path_text(detail.Properties, 'EnableDefaultInternetAccess') as enable_default_internet_access,
                json_extract_path_text(detail.Properties, 'IamRoleArn') as iam_role_arn,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                json_extract_path_text(detail.Properties, 'AppBlockArns') as app_block_arns
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                AND detail.data__TypeName = 'AWS::AppStream::AppBlockBuilder'
                AND listing.region = 'us-east-1'
    applications:
      name: applications
      id: aws.appstream.applications
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::AppStream::Application
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LaunchPath') as launch_path,
              JSON_EXTRACT(Properties, '$.LaunchParameters') as launch_parameters,
              JSON_EXTRACT(Properties, '$.WorkingDirectory') as working_directory,
              JSON_EXTRACT(Properties, '$.InstanceFamilies') as instance_families,
              JSON_EXTRACT(Properties, '$.IconS3Location') as icon_s3_location,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AppBlockArn') as app_block_arn,
              JSON_EXTRACT(Properties, '$.Platforms') as platforms,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AttributesToDelete') as attributes_to_delete,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::Application'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'DisplayName') as display_name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'LaunchPath') as launch_path,
                json_extract_path_text(Properties, 'LaunchParameters') as launch_parameters,
                json_extract_path_text(Properties, 'WorkingDirectory') as working_directory,
                json_extract_path_text(Properties, 'InstanceFamilies') as instance_families,
                json_extract_path_text(Properties, 'IconS3Location') as icon_s3_location,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'AppBlockArn') as app_block_arn,
                json_extract_path_text(Properties, 'Platforms') as platforms,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'AttributesToDelete') as attributes_to_delete,
                json_extract_path_text(Properties, 'CreatedTime') as created_time
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::Application'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    application_entitlement_associations:
      name: application_entitlement_associations
      id: aws.appstream.application_entitlement_associations
      x-cfn-schema-name: ApplicationEntitlementAssociation
      x-cfn-type-name: AWS::AppStream::ApplicationEntitlementAssociation
      x-identifiers:
        - StackName
        - EntitlementName
        - ApplicationIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ApplicationEntitlementAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::ApplicationEntitlementAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::ApplicationEntitlementAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/application_entitlement_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/application_entitlement_associations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.StackName') as stack_name,
              JSON_EXTRACT(Properties, '$.EntitlementName') as entitlement_name,
              JSON_EXTRACT(Properties, '$.ApplicationIdentifier') as application_identifier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::ApplicationEntitlementAssociation'
              AND data__Identifier = '<StackName>|<EntitlementName>|<ApplicationIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'StackName') as stack_name,
                json_extract_path_text(Properties, 'EntitlementName') as entitlement_name,
                json_extract_path_text(Properties, 'ApplicationIdentifier') as application_identifier
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::ApplicationEntitlementAssociation'
                AND data__Identifier = '<StackName>|<EntitlementName>|<ApplicationIdentifier>'
                AND region = 'us-east-1'
    application_fleet_associations:
      name: application_fleet_associations
      id: aws.appstream.application_fleet_associations
      x-cfn-schema-name: ApplicationFleetAssociation
      x-cfn-type-name: AWS::AppStream::ApplicationFleetAssociation
      x-identifiers:
        - FleetName
        - ApplicationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ApplicationFleetAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::ApplicationFleetAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::ApplicationFleetAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/application_fleet_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/application_fleet_associations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FleetName') as fleet_name,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::ApplicationFleetAssociation'
              AND data__Identifier = '<FleetName>|<ApplicationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'FleetName') as fleet_name,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::ApplicationFleetAssociation'
                AND data__Identifier = '<FleetName>|<ApplicationArn>'
                AND region = 'us-east-1'
    directory_configs:
      name: directory_configs
      id: aws.appstream.directory_configs
      x-cfn-schema-name: DirectoryConfig
      x-cfn-type-name: AWS::AppStream::DirectoryConfig
      x-identifiers:
        - DirectoryName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DirectoryConfig&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::DirectoryConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::DirectoryConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::DirectoryConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/directory_configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/directory_configs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/directory_configs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.OrganizationalUnitDistinguishedNames') as organizational_unit_distinguished_names,
              JSON_EXTRACT(Properties, '$.ServiceAccountCredentials') as service_account_credentials,
              JSON_EXTRACT(Properties, '$.DirectoryName') as directory_name,
              JSON_EXTRACT(Properties, '$.CertificateBasedAuthProperties') as certificate_based_auth_properties
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::DirectoryConfig'
              AND data__Identifier = '<DirectoryName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.OrganizationalUnitDistinguishedNames') as organizational_unit_distinguished_names,
                JSON_EXTRACT(detail.Properties, '$.ServiceAccountCredentials') as service_account_credentials,
                JSON_EXTRACT(detail.Properties, '$.DirectoryName') as directory_name,
                JSON_EXTRACT(detail.Properties, '$.CertificateBasedAuthProperties') as certificate_based_auth_properties
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppStream::DirectoryConfig'
                AND detail.data__TypeName = 'AWS::AppStream::DirectoryConfig'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'OrganizationalUnitDistinguishedNames') as organizational_unit_distinguished_names,
                  json_extract_path_text(Properties, 'ServiceAccountCredentials') as service_account_credentials,
                  json_extract_path_text(Properties, 'DirectoryName') as directory_name,
                  json_extract_path_text(Properties, 'CertificateBasedAuthProperties') as certificate_based_auth_properties
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::DirectoryConfig'
                  AND data__Identifier = '<DirectoryName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'OrganizationalUnitDistinguishedNames') as organizational_unit_distinguished_names,
                    json_extract_path_text(detail.Properties, 'ServiceAccountCredentials') as service_account_credentials,
                    json_extract_path_text(detail.Properties, 'DirectoryName') as directory_name,
                    json_extract_path_text(detail.Properties, 'CertificateBasedAuthProperties') as certificate_based_auth_properties
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppStream::DirectoryConfig'
                    AND detail.data__TypeName = 'AWS::AppStream::DirectoryConfig'
                    AND listing.region = 'us-east-1'
    directory_configs_list_only:
      name: directory_configs_list_only
      id: aws.appstream.directory_configs_list_only
      x-cfn-schema-name: DirectoryConfig
      x-cfn-type-name: AWS::AppStream::DirectoryConfig
      x-identifiers:
        - DirectoryName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DirectoryName') as directory_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppStream::DirectoryConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DirectoryName') as directory_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppStream::DirectoryConfig'
                AND region = 'us-east-1'
    entitlements:
      name: entitlements
      id: aws.appstream.entitlements
      x-cfn-schema-name: Entitlement
      x-cfn-type-name: AWS::AppStream::Entitlement
      x-identifiers:
        - StackName
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Entitlement&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::Entitlement"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::Entitlement"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::Entitlement"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/entitlements/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/entitlements/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/entitlements/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.StackName') as stack_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AppVisibility') as app_visibility,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::Entitlement'
              AND data__Identifier = '<StackName>|<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'StackName') as stack_name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'AppVisibility') as app_visibility,
                json_extract_path_text(Properties, 'Attributes') as attributes,
                json_extract_path_text(Properties, 'CreatedTime') as created_time,
                json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::Entitlement'
                AND data__Identifier = '<StackName>|<Name>'
                AND region = 'us-east-1'
    image_builders:
      name: image_builders
      id: aws.appstream.image_builders
      x-cfn-schema-name: ImageBuilder
      x-cfn-type-name: AWS::AppStream::ImageBuilder
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ImageBuilder&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::ImageBuilder"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppStream::ImageBuilder"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/image_builders/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/image_builders/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(Properties, '$.EnableDefaultInternetAccess') as enable_default_internet_access,
              JSON_EXTRACT(Properties, '$.DomainJoinInfo') as domain_join_info,
              JSON_EXTRACT(Properties, '$.AppstreamAgentVersion') as appstream_agent_version,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ImageName') as image_name,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.IamRoleArn') as iam_role_arn,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.StreamingUrl') as streaming_url,
              JSON_EXTRACT(Properties, '$.ImageArn') as image_arn,
              JSON_EXTRACT(Properties, '$.AccessEndpoints') as access_endpoints
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::ImageBuilder'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
                JSON_EXTRACT(detail.Properties, '$.EnableDefaultInternetAccess') as enable_default_internet_access,
                JSON_EXTRACT(detail.Properties, '$.DomainJoinInfo') as domain_join_info,
                JSON_EXTRACT(detail.Properties, '$.AppstreamAgentVersion') as appstream_agent_version,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ImageName') as image_name,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.IamRoleArn') as iam_role_arn,
                JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.StreamingUrl') as streaming_url,
                JSON_EXTRACT(detail.Properties, '$.ImageArn') as image_arn,
                JSON_EXTRACT(detail.Properties, '$.AccessEndpoints') as access_endpoints
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppStream::ImageBuilder'
                AND detail.data__TypeName = 'AWS::AppStream::ImageBuilder'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'VpcConfig') as vpc_config,
                  json_extract_path_text(Properties, 'EnableDefaultInternetAccess') as enable_default_internet_access,
                  json_extract_path_text(Properties, 'DomainJoinInfo') as domain_join_info,
                  json_extract_path_text(Properties, 'AppstreamAgentVersion') as appstream_agent_version,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ImageName') as image_name,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'IamRoleArn') as iam_role_arn,
                  json_extract_path_text(Properties, 'InstanceType') as instance_type,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'StreamingUrl') as streaming_url,
                  json_extract_path_text(Properties, 'ImageArn') as image_arn,
                  json_extract_path_text(Properties, 'AccessEndpoints') as access_endpoints
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppStream::ImageBuilder'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                    json_extract_path_text(detail.Properties, 'EnableDefaultInternetAccess') as enable_default_internet_access,
                    json_extract_path_text(detail.Properties, 'DomainJoinInfo') as domain_join_info,
                    json_extract_path_text(detail.Properties, 'AppstreamAgentVersion') as appstream_agent_version,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ImageName') as image_name,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'IamRoleArn') as iam_role_arn,
                    json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'StreamingUrl') as streaming_url,
                    json_extract_path_text(detail.Properties, 'ImageArn') as image_arn,
                    json_extract_path_text(detail.Properties, 'AccessEndpoints') as access_endpoints
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppStream::ImageBuilder'
                    AND detail.data__TypeName = 'AWS::AppStream::ImageBuilder'
                    AND listing.region = 'us-east-1'
    image_builders_list_only:
      name: image_builders_list_only
      id: aws.appstream.image_builders_list_only
      x-cfn-schema-name: ImageBuilder
      x-cfn-type-name: AWS::AppStream::ImageBuilder
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppStream::ImageBuilder'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppStream::ImageBuilder'
                AND region = 'us-east-1'
    image_builder_tags:
      name: image_builder_tags
      id: aws.appstream.image_builder_tags
      x-cfn-schema-name: ImageBuilder
      x-cfn-type-name: AWS::AppStream::ImageBuilder
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(detail.Properties, '$.EnableDefaultInternetAccess') as enable_default_internet_access,
              JSON_EXTRACT(detail.Properties, '$.DomainJoinInfo') as domain_join_info,
              JSON_EXTRACT(detail.Properties, '$.AppstreamAgentVersion') as appstream_agent_version,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ImageName') as image_name,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.IamRoleArn') as iam_role_arn,
              JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(detail.Properties, '$.StreamingUrl') as streaming_url,
              JSON_EXTRACT(detail.Properties, '$.ImageArn') as image_arn,
              JSON_EXTRACT(detail.Properties, '$.AccessEndpoints') as access_endpoints
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppStream::ImageBuilder'
              AND detail.data__TypeName = 'AWS::AppStream::ImageBuilder'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                json_extract_path_text(detail.Properties, 'EnableDefaultInternetAccess') as enable_default_internet_access,
                json_extract_path_text(detail.Properties, 'DomainJoinInfo') as domain_join_info,
                json_extract_path_text(detail.Properties, 'AppstreamAgentVersion') as appstream_agent_version,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ImageName') as image_name,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'IamRoleArn') as iam_role_arn,
                json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                json_extract_path_text(detail.Properties, 'StreamingUrl') as streaming_url,
                json_extract_path_text(detail.Properties, 'ImageArn') as image_arn,
                json_extract_path_text(detail.Properties, 'AccessEndpoints') as access_endpoints
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppStream::ImageBuilder'
                AND detail.data__TypeName = 'AWS::AppStream::ImageBuilder'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AppBlock&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAppBlock
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAppBlockRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AppBlockBuilder&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAppBlockBuilder
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAppBlockBuilderRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ApplicationEntitlementAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplicationEntitlementAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationEntitlementAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ApplicationFleetAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplicationFleetAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationFleetAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DirectoryConfig&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDirectoryConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDirectoryConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Entitlement&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEntitlement
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEntitlementRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ImageBuilder&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateImageBuilder
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateImageBuilderRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
