openapi: 3.0.0
info:
  title: CE
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Arn:
      description: Subscription ARN
      type: string
      pattern: ^arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+$
    ResourceTag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: The key name for the tag.
          pattern: ^(?!aws:).*$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: The value for the tag.
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
    AnomalyMonitor:
      type: object
      properties:
        MonitorArn:
          $ref: '#/components/schemas/Arn'
        MonitorType:
          type: string
          enum:
            - DIMENSIONAL
            - CUSTOM
        MonitorName:
          description: The name of the monitor.
          type: string
          pattern: '[\S\s]*'
          minLength: 0
          maxLength: 1024
        CreationDate:
          description: 'The date when the monitor was created. '
          type: string
          minLength: 0
          maxLength: 40
          pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
        LastEvaluatedDate:
          description: The date when the monitor last evaluated for anomalies.
          type: string
          minLength: 0
          maxLength: 40
          pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?|(NOT_EVALUATED_YET)
        LastUpdatedDate:
          description: The date when the monitor was last updated.
          type: string
          minLength: 0
          maxLength: 40
          pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
        MonitorDimension:
          description: The dimensions to evaluate
          type: string
          enum:
            - SERVICE
        MonitorSpecification:
          type: string
        DimensionalValueCount:
          description: The value for evaluated dimensions.
          type: integer
          minimum: 0
        ResourceTags:
          type: array
          description: Tags to assign to monitor.
          items:
            $ref: '#/components/schemas/ResourceTag'
          minItems: 0
          maxItems: 200
          x-insertionOrder: false
      required:
        - MonitorName
        - MonitorType
      x-stackql-resource-name: anomaly_monitor
      description: AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. You can use Cost Anomaly Detection by creating monitor.
      x-type-name: AWS::CE::AnomalyMonitor
      x-stackql-primary-identifier:
        - MonitorArn
      x-create-only-properties:
        - MonitorType
        - MonitorDimension
        - MonitorSpecification
        - ResourceTags
      x-write-only-properties:
        - ResourceTags
      x-read-only-properties:
        - MonitorArn
        - CreationDate
        - LastEvaluatedDate
        - LastUpdatedDate
        - DimensionalValueCount
      x-required-properties:
        - MonitorName
        - MonitorType
      x-required-permissions:
        create:
          - ce:CreateAnomalyMonitor
          - ce:TagResource
        read:
          - ce:GetAnomalyMonitors
        update:
          - ce:UpdateAnomalyMonitor
        delete:
          - ce:DeleteAnomalyMonitor
        list:
          - ce:GetAnomalyMonitors
    Subscriber:
      type: object
      properties:
        Address:
          type: string
          pattern: (^[a-zA-Z0-9.!#$%&'*+=?^_‘{|}~-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$)|(^arn:(aws[a-zA-Z-]*):sns:[a-zA-Z0-9-]+:[0-9]{12}:[a-zA-Z0-9_-]+(\.fifo)?$)
        Status:
          type: string
          enum:
            - CONFIRMED
            - DECLINED
        Type:
          type: string
          enum:
            - EMAIL
            - SNS
      required:
        - Address
        - Type
      additionalProperties: false
    AnomalySubscription:
      type: object
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/Arn'
        SubscriptionName:
          description: The name of the subscription.
          type: string
          pattern: '[\S\s]*'
          minLength: 0
          maxLength: 1024
        AccountId:
          description: The accountId
          type: string
          minLength: 0
          maxLength: 1024
        MonitorArnList:
          description: A list of cost anomaly monitors.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Arn'
        Subscribers:
          description: A list of subscriber
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Subscriber'
        Threshold:
          description: 'The dollar value that triggers a notification if the threshold is exceeded. '
          type: number
          minimum: 0
        ThresholdExpression:
          description: An Expression object in JSON String format used to specify the anomalies that you want to generate alerts for.
          type: string
        Frequency:
          description: 'The frequency at which anomaly reports are sent over email. '
          type: string
          enum:
            - DAILY
            - IMMEDIATE
            - WEEKLY
        ResourceTags:
          type: array
          description: Tags to assign to subscription.
          items:
            $ref: '#/components/schemas/ResourceTag'
          minItems: 0
          maxItems: 200
          x-insertionOrder: false
      required:
        - MonitorArnList
        - Subscribers
        - Frequency
        - SubscriptionName
      x-stackql-resource-name: anomaly_subscription
      description: AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
      x-type-name: AWS::CE::AnomalySubscription
      x-stackql-primary-identifier:
        - SubscriptionArn
      x-create-only-properties:
        - ResourceTags
      x-write-only-properties:
        - ResourceTags
      x-read-only-properties:
        - SubscriptionArn
        - AccountId
        - Subscribers/*/Status
      x-required-properties:
        - MonitorArnList
        - Subscribers
        - Frequency
        - SubscriptionName
      x-required-permissions:
        create:
          - ce:CreateAnomalySubscription
          - ce:TagResource
        read:
          - ce:GetAnomalySubscriptions
        update:
          - ce:UpdateAnomalySubscription
        delete:
          - ce:DeleteAnomalySubscription
        list:
          - ce:GetAnomalySubscriptions
    ZonedDateTime:
      description: ISO 8601 date time with offset format
      type: string
      pattern: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$
      minLength: 20
      maxLength: 25
    CostCategory:
      type: object
      properties:
        Arn:
          description: Cost category ARN
          type: string
          pattern: ^arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+$
        EffectiveStart:
          $ref: '#/components/schemas/ZonedDateTime'
        Name:
          type: string
          minLength: 1
          maxLength: 50
        RuleVersion:
          type: string
          enum:
            - CostCategoryExpression.v1
        Rules:
          type: string
          description: JSON array format of Expression in Billing and Cost Management API
        SplitChargeRules:
          type: string
          description: Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
        DefaultValue:
          type: string
          description: The default value for the cost category
          minLength: 1
          maxLength: 50
      required:
        - Name
        - RuleVersion
        - Rules
      x-stackql-resource-name: cost_category
      description: Cost Category enables you to map your cost and usage into meaningful categories. You can use Cost Category to organize your costs using a rule-based engine.
      x-type-name: AWS::CE::CostCategory
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - EffectiveStart
      x-required-properties:
        - Name
        - RuleVersion
        - Rules
      x-required-permissions:
        create:
          - ce:CreateCostCategoryDefinition
        read:
          - ce:DescribeCostCategoryDefinition
        update:
          - ce:UpdateCostCategoryDefinition
        delete:
          - ce:DeleteCostCategoryDefinition
        list:
          - ce:ListCostCategoryDefinitions
    CreateAnomalyMonitorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            MonitorArn:
              $ref: '#/components/schemas/Arn'
            MonitorType:
              type: string
              enum:
                - DIMENSIONAL
                - CUSTOM
            MonitorName:
              description: The name of the monitor.
              type: string
              pattern: '[\S\s]*'
              minLength: 0
              maxLength: 1024
            CreationDate:
              description: 'The date when the monitor was created. '
              type: string
              minLength: 0
              maxLength: 40
              pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
            LastEvaluatedDate:
              description: The date when the monitor last evaluated for anomalies.
              type: string
              minLength: 0
              maxLength: 40
              pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?|(NOT_EVALUATED_YET)
            LastUpdatedDate:
              description: The date when the monitor was last updated.
              type: string
              minLength: 0
              maxLength: 40
              pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
            MonitorDimension:
              description: The dimensions to evaluate
              type: string
              enum:
                - SERVICE
            MonitorSpecification:
              type: string
            DimensionalValueCount:
              description: The value for evaluated dimensions.
              type: integer
              minimum: 0
            ResourceTags:
              type: array
              description: Tags to assign to monitor.
              items:
                $ref: '#/components/schemas/ResourceTag'
              minItems: 0
              maxItems: 200
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateAnomalyMonitorRequest
      type: object
      required: []
    CreateAnomalySubscriptionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            SubscriptionArn:
              $ref: '#/components/schemas/Arn'
            SubscriptionName:
              description: The name of the subscription.
              type: string
              pattern: '[\S\s]*'
              minLength: 0
              maxLength: 1024
            AccountId:
              description: The accountId
              type: string
              minLength: 0
              maxLength: 1024
            MonitorArnList:
              description: A list of cost anomaly monitors.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Arn'
            Subscribers:
              description: A list of subscriber
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Subscriber'
            Threshold:
              description: 'The dollar value that triggers a notification if the threshold is exceeded. '
              type: number
              minimum: 0
            ThresholdExpression:
              description: An Expression object in JSON String format used to specify the anomalies that you want to generate alerts for.
              type: string
            Frequency:
              description: 'The frequency at which anomaly reports are sent over email. '
              type: string
              enum:
                - DAILY
                - IMMEDIATE
                - WEEKLY
            ResourceTags:
              type: array
              description: Tags to assign to subscription.
              items:
                $ref: '#/components/schemas/ResourceTag'
              minItems: 0
              maxItems: 200
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateAnomalySubscriptionRequest
      type: object
      required: []
    CreateCostCategoryRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Cost category ARN
              type: string
              pattern: ^arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+$
            EffectiveStart:
              $ref: '#/components/schemas/ZonedDateTime'
            Name:
              type: string
              minLength: 1
              maxLength: 50
            RuleVersion:
              type: string
              enum:
                - CostCategoryExpression.v1
            Rules:
              type: string
              description: JSON array format of Expression in Billing and Cost Management API
            SplitChargeRules:
              type: string
              description: Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
            DefaultValue:
              type: string
              description: The default value for the cost category
              minLength: 1
              maxLength: 50
          x-stackQL-stringOnly: true
      x-title: CreateCostCategoryRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    anomaly_monitors:
      name: anomaly_monitors
      id: aws.ce.anomaly_monitors
      x-cfn-schema-name: AnomalyMonitor
      x-cfn-type-name: AWS::CE::AnomalyMonitor
      x-identifiers:
        - MonitorArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AnomalyMonitor&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::AnomalyMonitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::AnomalyMonitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::AnomalyMonitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/anomaly_monitors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/anomaly_monitors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/anomaly_monitors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MonitorArn') as monitor_arn,
              JSON_EXTRACT(Properties, '$.MonitorType') as monitor_type,
              JSON_EXTRACT(Properties, '$.MonitorName') as monitor_name,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.LastEvaluatedDate') as last_evaluated_date,
              JSON_EXTRACT(Properties, '$.LastUpdatedDate') as last_updated_date,
              JSON_EXTRACT(Properties, '$.MonitorDimension') as monitor_dimension,
              JSON_EXTRACT(Properties, '$.MonitorSpecification') as monitor_specification,
              JSON_EXTRACT(Properties, '$.DimensionalValueCount') as dimensional_value_count,
              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::AnomalyMonitor'
              AND data__Identifier = '<MonitorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.MonitorArn') as monitor_arn,
                JSON_EXTRACT(detail.Properties, '$.MonitorType') as monitor_type,
                JSON_EXTRACT(detail.Properties, '$.MonitorName') as monitor_name,
                JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
                JSON_EXTRACT(detail.Properties, '$.LastEvaluatedDate') as last_evaluated_date,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedDate') as last_updated_date,
                JSON_EXTRACT(detail.Properties, '$.MonitorDimension') as monitor_dimension,
                JSON_EXTRACT(detail.Properties, '$.MonitorSpecification') as monitor_specification,
                JSON_EXTRACT(detail.Properties, '$.DimensionalValueCount') as dimensional_value_count,
                JSON_EXTRACT(detail.Properties, '$.ResourceTags') as resource_tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CE::AnomalyMonitor'
                AND detail.data__TypeName = 'AWS::CE::AnomalyMonitor'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'MonitorArn') as monitor_arn,
                  json_extract_path_text(Properties, 'MonitorType') as monitor_type,
                  json_extract_path_text(Properties, 'MonitorName') as monitor_name,
                  json_extract_path_text(Properties, 'CreationDate') as creation_date,
                  json_extract_path_text(Properties, 'LastEvaluatedDate') as last_evaluated_date,
                  json_extract_path_text(Properties, 'LastUpdatedDate') as last_updated_date,
                  json_extract_path_text(Properties, 'MonitorDimension') as monitor_dimension,
                  json_extract_path_text(Properties, 'MonitorSpecification') as monitor_specification,
                  json_extract_path_text(Properties, 'DimensionalValueCount') as dimensional_value_count,
                  json_extract_path_text(Properties, 'ResourceTags') as resource_tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::AnomalyMonitor'
                  AND data__Identifier = '<MonitorArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'MonitorArn') as monitor_arn,
                    json_extract_path_text(detail.Properties, 'MonitorType') as monitor_type,
                    json_extract_path_text(detail.Properties, 'MonitorName') as monitor_name,
                    json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                    json_extract_path_text(detail.Properties, 'LastEvaluatedDate') as last_evaluated_date,
                    json_extract_path_text(detail.Properties, 'LastUpdatedDate') as last_updated_date,
                    json_extract_path_text(detail.Properties, 'MonitorDimension') as monitor_dimension,
                    json_extract_path_text(detail.Properties, 'MonitorSpecification') as monitor_specification,
                    json_extract_path_text(detail.Properties, 'DimensionalValueCount') as dimensional_value_count,
                    json_extract_path_text(detail.Properties, 'ResourceTags') as resource_tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CE::AnomalyMonitor'
                    AND detail.data__TypeName = 'AWS::CE::AnomalyMonitor'
                    AND listing.region = 'us-east-1'
    anomaly_monitors_list_only:
      name: anomaly_monitors_list_only
      id: aws.ce.anomaly_monitors_list_only
      x-cfn-schema-name: AnomalyMonitor
      x-cfn-type-name: AWS::CE::AnomalyMonitor
      x-identifiers:
        - MonitorArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MonitorArn') as monitor_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::AnomalyMonitor'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MonitorArn') as monitor_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::AnomalyMonitor'
                AND region = 'us-east-1'
    anomaly_subscriptions:
      name: anomaly_subscriptions
      id: aws.ce.anomaly_subscriptions
      x-cfn-schema-name: AnomalySubscription
      x-cfn-type-name: AWS::CE::AnomalySubscription
      x-identifiers:
        - SubscriptionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AnomalySubscription&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::AnomalySubscription"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::AnomalySubscription"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::AnomalySubscription"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/anomaly_subscriptions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/anomaly_subscriptions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/anomaly_subscriptions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SubscriptionArn') as subscription_arn,
              JSON_EXTRACT(Properties, '$.SubscriptionName') as subscription_name,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id,
              JSON_EXTRACT(Properties, '$.MonitorArnList') as monitor_arn_list,
              JSON_EXTRACT(Properties, '$.Subscribers') as subscribers,
              JSON_EXTRACT(Properties, '$.Threshold') as threshold,
              JSON_EXTRACT(Properties, '$.ThresholdExpression') as threshold_expression,
              JSON_EXTRACT(Properties, '$.Frequency') as frequency,
              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::AnomalySubscription'
              AND data__Identifier = '<SubscriptionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.SubscriptionArn') as subscription_arn,
                JSON_EXTRACT(detail.Properties, '$.SubscriptionName') as subscription_name,
                JSON_EXTRACT(detail.Properties, '$.AccountId') as account_id,
                JSON_EXTRACT(detail.Properties, '$.MonitorArnList') as monitor_arn_list,
                JSON_EXTRACT(detail.Properties, '$.Subscribers') as subscribers,
                JSON_EXTRACT(detail.Properties, '$.Threshold') as threshold,
                JSON_EXTRACT(detail.Properties, '$.ThresholdExpression') as threshold_expression,
                JSON_EXTRACT(detail.Properties, '$.Frequency') as frequency,
                JSON_EXTRACT(detail.Properties, '$.ResourceTags') as resource_tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CE::AnomalySubscription'
                AND detail.data__TypeName = 'AWS::CE::AnomalySubscription'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'SubscriptionArn') as subscription_arn,
                  json_extract_path_text(Properties, 'SubscriptionName') as subscription_name,
                  json_extract_path_text(Properties, 'AccountId') as account_id,
                  json_extract_path_text(Properties, 'MonitorArnList') as monitor_arn_list,
                  json_extract_path_text(Properties, 'Subscribers') as subscribers,
                  json_extract_path_text(Properties, 'Threshold') as threshold,
                  json_extract_path_text(Properties, 'ThresholdExpression') as threshold_expression,
                  json_extract_path_text(Properties, 'Frequency') as frequency,
                  json_extract_path_text(Properties, 'ResourceTags') as resource_tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::AnomalySubscription'
                  AND data__Identifier = '<SubscriptionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'SubscriptionArn') as subscription_arn,
                    json_extract_path_text(detail.Properties, 'SubscriptionName') as subscription_name,
                    json_extract_path_text(detail.Properties, 'AccountId') as account_id,
                    json_extract_path_text(detail.Properties, 'MonitorArnList') as monitor_arn_list,
                    json_extract_path_text(detail.Properties, 'Subscribers') as subscribers,
                    json_extract_path_text(detail.Properties, 'Threshold') as threshold,
                    json_extract_path_text(detail.Properties, 'ThresholdExpression') as threshold_expression,
                    json_extract_path_text(detail.Properties, 'Frequency') as frequency,
                    json_extract_path_text(detail.Properties, 'ResourceTags') as resource_tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CE::AnomalySubscription'
                    AND detail.data__TypeName = 'AWS::CE::AnomalySubscription'
                    AND listing.region = 'us-east-1'
    anomaly_subscriptions_list_only:
      name: anomaly_subscriptions_list_only
      id: aws.ce.anomaly_subscriptions_list_only
      x-cfn-schema-name: AnomalySubscription
      x-cfn-type-name: AWS::CE::AnomalySubscription
      x-identifiers:
        - SubscriptionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SubscriptionArn') as subscription_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::AnomalySubscription'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SubscriptionArn') as subscription_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::AnomalySubscription'
                AND region = 'us-east-1'
    cost_categories:
      name: cost_categories
      id: aws.ce.cost_categories
      x-cfn-schema-name: CostCategory
      x-cfn-type-name: AWS::CE::CostCategory
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CostCategory&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::CostCategory"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::CostCategory"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CE::CostCategory"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/cost_categories/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/cost_categories/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/cost_categories/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.EffectiveStart') as effective_start,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RuleVersion') as rule_version,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.SplitChargeRules') as split_charge_rules,
              JSON_EXTRACT(Properties, '$.DefaultValue') as default_value
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::CostCategory'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.EffectiveStart') as effective_start,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.RuleVersion') as rule_version,
                JSON_EXTRACT(detail.Properties, '$.Rules') as rules,
                JSON_EXTRACT(detail.Properties, '$.SplitChargeRules') as split_charge_rules,
                JSON_EXTRACT(detail.Properties, '$.DefaultValue') as default_value
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CE::CostCategory'
                AND detail.data__TypeName = 'AWS::CE::CostCategory'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'EffectiveStart') as effective_start,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'RuleVersion') as rule_version,
                  json_extract_path_text(Properties, 'Rules') as rules,
                  json_extract_path_text(Properties, 'SplitChargeRules') as split_charge_rules,
                  json_extract_path_text(Properties, 'DefaultValue') as default_value
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::CostCategory'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'EffectiveStart') as effective_start,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'RuleVersion') as rule_version,
                    json_extract_path_text(detail.Properties, 'Rules') as rules,
                    json_extract_path_text(detail.Properties, 'SplitChargeRules') as split_charge_rules,
                    json_extract_path_text(detail.Properties, 'DefaultValue') as default_value
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CE::CostCategory'
                    AND detail.data__TypeName = 'AWS::CE::CostCategory'
                    AND listing.region = 'us-east-1'
    cost_categories_list_only:
      name: cost_categories_list_only
      id: aws.ce.cost_categories_list_only
      x-cfn-schema-name: CostCategory
      x-cfn-type-name: AWS::CE::CostCategory
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::CostCategory'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::CostCategory'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AnomalyMonitor&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAnomalyMonitor
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAnomalyMonitorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AnomalySubscription&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAnomalySubscription
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAnomalySubscriptionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CostCategory&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCostCategory
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCostCategoryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
