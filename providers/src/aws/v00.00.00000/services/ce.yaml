openapi: 3.0.0
info:
  title: CE
  version: 1.0.0
paths: {}
components:
  schemas:
    Arn:
      description: Subscription ARN
      type: string
      pattern: ^arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+$
    ResourceTag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: The key name for the tag.
          pattern: ^(?!aws:).*$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: The value for the tag.
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
    AnomalyMonitor:
      type: object
      properties:
        MonitorArn:
          $ref: '#/components/schemas/Arn'
        MonitorType:
          type: string
          enum:
            - DIMENSIONAL
            - CUSTOM
        MonitorName:
          description: The name of the monitor.
          type: string
          pattern: '[\S\s]*'
          minLength: 0
          maxLength: 1024
        CreationDate:
          description: 'The date when the monitor was created. '
          type: string
          minLength: 0
          maxLength: 40
          pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
        LastEvaluatedDate:
          description: The date when the monitor last evaluated for anomalies.
          type: string
          minLength: 0
          maxLength: 40
          pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
        LastUpdatedDate:
          description: The date when the monitor was last updated.
          type: string
          minLength: 0
          maxLength: 40
          pattern: (\d{4}-\d{2}-\d{2})(T\d{2}:\d{2}:\d{2}Z)?
        MonitorDimension:
          description: The dimensions to evaluate
          type: string
          enum:
            - SERVICE
        MonitorSpecification:
          type: string
        DimensionalValueCount:
          description: The value for evaluated dimensions.
          type: integer
          minimum: 0
        ResourceTags:
          type: array
          description: Tags to assign to monitor.
          items:
            $ref: '#/components/schemas/ResourceTag'
          minItems: 0
          maxItems: 200
          x-insertionOrder: false
      required:
        - MonitorName
        - MonitorType
      x-stackql-resource-name: anomaly_monitor
      x-stackql-primaryIdentifier:
        - MonitorArn
    Subscriber:
      type: object
      properties:
        Address:
          type: string
          pattern: (^[a-zA-Z0-9.!#$%&'*+=?^_â€˜{|}~-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$)|(^arn:(aws[a-zA-Z-]*):sns:[a-zA-Z0-9-]+:[0-9]{12}:[a-zA-Z0-9_-]+(\.fifo)?$)
        Status:
          type: string
          enum:
            - CONFIRMED
            - DECLINED
        Type:
          type: string
          enum:
            - EMAIL
            - SNS
      required:
        - Address
        - Type
      additionalProperties: false
    AnomalySubscription:
      type: object
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/Arn'
        SubscriptionName:
          description: The name of the subscription.
          type: string
          pattern: '[\S\s]*'
          minLength: 0
          maxLength: 1024
        AccountId:
          description: The accountId
          type: string
          minLength: 0
          maxLength: 1024
        MonitorArnList:
          description: A list of cost anomaly monitors.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Arn'
        Subscribers:
          description: A list of subscriber
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Subscriber'
        Threshold:
          description: 'The dollar value that triggers a notification if the threshold is exceeded. '
          type: number
          minimum: 0
        ThresholdExpression:
          description: An Expression object in JSON String format used to specify the anomalies that you want to generate alerts for.
          type: string
        Frequency:
          description: 'The frequency at which anomaly reports are sent over email. '
          type: string
          enum:
            - DAILY
            - IMMEDIATE
            - WEEKLY
        ResourceTags:
          type: array
          description: Tags to assign to subscription.
          items:
            $ref: '#/components/schemas/ResourceTag'
          minItems: 0
          maxItems: 200
          x-insertionOrder: false
      required:
        - MonitorArnList
        - Subscribers
        - Frequency
        - SubscriptionName
      x-stackql-resource-name: anomaly_subscription
      x-stackql-primaryIdentifier:
        - SubscriptionArn
    ZonedDateTime:
      description: ISO 8601 date time with offset format
      type: string
      pattern: ^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(([+-]\d\d:\d\d)|Z)$
      minLength: 20
      maxLength: 25
    CostCategory:
      type: object
      properties:
        Arn:
          description: Cost category ARN
          type: string
          pattern: ^arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+$
        EffectiveStart:
          $ref: '#/components/schemas/ZonedDateTime'
        Name:
          type: string
          minLength: 1
          maxLength: 50
        RuleVersion:
          type: string
          enum:
            - CostCategoryExpression.v1
        Rules:
          type: string
          description: JSON array format of Expression in Billing and Cost Management API
        SplitChargeRules:
          type: string
          description: Json array format of CostCategorySplitChargeRule in Billing and Cost Management API
        DefaultValue:
          type: string
          description: The default value for the cost category
          minLength: 1
          maxLength: 50
      required:
        - Name
        - RuleVersion
        - Rules
      x-stackql-resource-name: cost_category
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    anomaly_monitors:
      name: anomaly_monitors
      id: aws.ce.anomaly_monitors
      x-cfn-schema-name: AnomalyMonitor
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MonitorArn') as monitor_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::AnomalyMonitor'
    anomaly_monitor:
      name: anomaly_monitor
      id: aws.ce.anomaly_monitor
      x-cfn-schema-name: AnomalyMonitor
      x-type: get
      x-identifiers:
        - MonitorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MonitorType') as monitor_type,
              JSON_EXTRACT(Properties, '$.MonitorName') as monitor_name,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.LastEvaluatedDate') as last_evaluated_date,
              JSON_EXTRACT(Properties, '$.LastUpdatedDate') as last_updated_date,
              JSON_EXTRACT(Properties, '$.MonitorDimension') as monitor_dimension,
              JSON_EXTRACT(Properties, '$.MonitorSpecification') as monitor_specification,
              JSON_EXTRACT(Properties, '$.DimensionalValueCount') as dimensional_value_count,
              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::AnomalyMonitor'
    anomaly_subscriptions:
      name: anomaly_subscriptions
      id: aws.ce.anomaly_subscriptions
      x-cfn-schema-name: AnomalySubscription
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SubscriptionArn') as subscription_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::AnomalySubscription'
    anomaly_subscription:
      name: anomaly_subscription
      id: aws.ce.anomaly_subscription
      x-cfn-schema-name: AnomalySubscription
      x-type: get
      x-identifiers:
        - SubscriptionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SubscriptionName') as subscription_name,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id,
              JSON_EXTRACT(Properties, '$.MonitorArnList') as monitor_arn_list,
              JSON_EXTRACT(Properties, '$.Subscribers') as subscribers,
              JSON_EXTRACT(Properties, '$.Threshold') as threshold,
              JSON_EXTRACT(Properties, '$.ThresholdExpression') as threshold_expression,
              JSON_EXTRACT(Properties, '$.Frequency') as frequency,
              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::AnomalySubscription'
    cost_categories:
      name: cost_categories
      id: aws.ce.cost_categories
      x-cfn-schema-name: CostCategory
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CE::CostCategory'
    cost_category:
      name: cost_category
      id: aws.ce.cost_category
      x-cfn-schema-name: CostCategory
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RuleVersion') as rule_version,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.SplitChargeRules') as split_charge_rules,
              JSON_EXTRACT(Properties, '$.DefaultValue') as default_value
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CE::CostCategory'
