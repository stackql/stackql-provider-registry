openapi: 3.0.0
info:
  title: Scheduler
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AssignPublicIp:
      type: string
      description: Specifies whether the task's elastic network interface receives a public IP address. You can specify ENABLED only when LaunchType in EcsParameters is set to FARGATE.
      enum:
        - ENABLED
        - DISABLED
    AwsVpcConfiguration:
      type: object
      description: This structure specifies the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode.
      properties:
        Subnets:
          type: array
          items:
            type: string
            maxLength: 1000
            minLength: 1
            description: Specifies the subnet associated with the task.
          maxItems: 16
          minItems: 1
          description: Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
          x-insertionOrder: false
        SecurityGroups:
          type: array
          items:
            type: string
            maxLength: 1000
            minLength: 1
            description: Specifies the security group associated with the task.
          maxItems: 5
          minItems: 1
          description: Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.
          x-insertionOrder: false
        AssignPublicIp:
          $ref: '#/components/schemas/AssignPublicIp'
      required:
        - Subnets
      additionalProperties: false
    CapacityProviderStrategyItem:
      type: object
      description: The details of a capacity provider strategy.
      properties:
        CapacityProvider:
          type: string
          maxLength: 255
          minLength: 1
          description: The short name of the capacity provider.
        Weight:
          type: number
          default: 0
          maximum: 1000
          minimum: 0
          description: The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.
        Base:
          type: number
          default: 0
          maximum: 100000
          minimum: 0
          description: The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used.
      required:
        - CapacityProvider
      additionalProperties: false
    DeadLetterConfig:
      type: object
      description: A DeadLetterConfig object that contains information about a dead-letter queue configuration.
      properties:
        Arn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:aws[a-z-]*:sqs:[a-z0-9\-]+:\d{12}:[a-zA-Z0-9\-_]+$
          description: The ARN of the SQS queue specified as the target for the dead-letter queue.
      additionalProperties: false
    EcsParameters:
      type: object
      description: The custom parameters to be used when the target is an Amazon ECS task.
      properties:
        TaskDefinitionArn:
          type: string
          maxLength: 1600
          minLength: 1
          description: The ARN of the task definition to use if the event target is an Amazon ECS task.
        TaskCount:
          type: number
          maximum: 10
          minimum: 1
          description: The number of tasks to create based on TaskDefinition. The default is 1.
        LaunchType:
          $ref: '#/components/schemas/LaunchType'
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        PlatformVersion:
          type: string
          maxLength: 64
          minLength: 1
          description: Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0.
        Group:
          type: string
          maxLength: 255
          minLength: 1
          description: Specifies an ECS task group for the task. The maximum length is 255 characters.
        CapacityProviderStrategy:
          type: array
          items:
            $ref: '#/components/schemas/CapacityProviderStrategyItem'
          maxItems: 6
          description: The capacity provider strategy to use for the task.
          x-insertionOrder: false
        EnableECSManagedTags:
          type: boolean
          description: Specifies whether to enable Amazon ECS managed tags for the task. For more information, see Tagging Your Amazon ECS Resources in the Amazon Elastic Container Service Developer Guide.
        EnableExecuteCommand:
          type: boolean
          description: Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
        PlacementConstraints:
          type: array
          items:
            $ref: '#/components/schemas/PlacementConstraint'
          maxItems: 10
          description: An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime).
          x-insertionOrder: false
        PlacementStrategy:
          type: array
          items:
            $ref: '#/components/schemas/PlacementStrategy'
          maxItems: 5
          description: The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
          x-insertionOrder: false
        PropagateTags:
          $ref: '#/components/schemas/PropagateTags'
        ReferenceId:
          type: string
          maxLength: 1024
          description: The reference ID to use for the task.
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/TagMap'
          maxItems: 50
          minItems: 0
          description: The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see RunTask in the Amazon ECS API Reference.
          x-insertionOrder: false
      required:
        - TaskDefinitionArn
      additionalProperties: false
    EventBridgeParameters:
      type: object
      description: EventBridge PutEvent predefined target type.
      properties:
        DetailType:
          type: string
          maxLength: 128
          minLength: 1
          description: Free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.
        Source:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^(?=[/\.\-_A-Za-z0-9]+)((?!aws\.).*)|(\$(\.[\w_-]+(\[(\d+|\*)\])*)*)$
          description: The source of the event.
      required:
        - DetailType
        - Source
      additionalProperties: false
    FlexibleTimeWindow:
      type: object
      description: Flexible time window allows configuration of a window within which a schedule can be invoked
      properties:
        Mode:
          $ref: '#/components/schemas/FlexibleTimeWindowMode'
        MaximumWindowInMinutes:
          type: number
          maximum: 1440
          minimum: 1
          description: The maximum time window during which a schedule can be invoked.
      required:
        - Mode
      additionalProperties: false
    FlexibleTimeWindowMode:
      type: string
      description: Determines whether the schedule is executed within a flexible time window.
      enum:
        - 'OFF'
        - FLEXIBLE
    KinesisParameters:
      type: object
      description: The custom parameter you can use to control the shard to which EventBridge Scheduler sends the event.
      properties:
        PartitionKey:
          type: string
          maxLength: 256
          minLength: 1
          description: The custom parameter used as the Kinesis partition key. For more information, see Amazon Kinesis Streams Key Concepts in the Amazon Kinesis Streams Developer Guide.
      required:
        - PartitionKey
      additionalProperties: false
    LaunchType:
      type: string
      description: Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The FARGATE value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. For more information, see AWS Fargate on Amazon ECS in the Amazon Elastic Container Service Developer Guide.
      enum:
        - EC2
        - FARGATE
        - EXTERNAL
    NetworkConfiguration:
      type: object
      description: This structure specifies the network configuration for an ECS task.
      properties:
        AwsvpcConfiguration:
          $ref: '#/components/schemas/AwsVpcConfiguration'
      additionalProperties: false
    PlacementConstraint:
      type: object
      description: An object representing a constraint on task placement.
      properties:
        Type:
          $ref: '#/components/schemas/PlacementConstraintType'
        Expression:
          type: string
          maxLength: 2000
          description: A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance. To learn more, see Cluster Query Language in the Amazon Elastic Container Service Developer Guide.
      additionalProperties: false
    PlacementConstraintType:
      type: string
      description: The type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates.
      enum:
        - distinctInstance
        - memberOf
    PlacementStrategy:
      type: object
      description: The task placement strategy for a task or service.
      properties:
        Type:
          $ref: '#/components/schemas/PlacementStrategyType'
        Field:
          type: string
          maxLength: 255
          description: The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used.
      additionalProperties: false
    PlacementStrategyType:
      type: string
      description: >-
        The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory
        (but still enough to run the task).
      enum:
        - random
        - spread
        - binpack
    PropagateTags:
      type: string
      description: Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action.
      enum:
        - TASK_DEFINITION
    RetryPolicy:
      type: object
      description: A RetryPolicy object that includes information about the retry policy settings.
      properties:
        MaximumEventAgeInSeconds:
          type: number
          maximum: 86400
          minimum: 60
          description: The maximum amount of time, in seconds, to continue to make retry attempts.
        MaximumRetryAttempts:
          type: number
          maximum: 185
          minimum: 0
          description: The maximum number of retry attempts to make before the request fails. Retry attempts with exponential backoff continue until either the maximum number of attempts is made or until the duration of the MaximumEventAgeInSeconds is reached.
      additionalProperties: false
    SageMakerPipelineParameter:
      type: object
      description: Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.
      properties:
        Name:
          type: string
          maxLength: 256
          minLength: 1
          pattern: ^[A-Za-z0-9\-_]*$
          description: Name of parameter to start execution of a SageMaker Model Building Pipeline.
        Value:
          type: string
          maxLength: 1024
          minLength: 1
          description: Value of parameter to start execution of a SageMaker Model Building Pipeline.
      required:
        - Name
        - Value
      additionalProperties: false
    SageMakerPipelineParameters:
      type: object
      description: These are custom parameters to use when the target is a SageMaker Model Building Pipeline that starts based on AWS EventBridge Scheduler schedules.
      properties:
        PipelineParameterList:
          type: array
          items:
            $ref: '#/components/schemas/SageMakerPipelineParameter'
          maxItems: 200
          minItems: 0
          description: List of Parameter names and values for SageMaker Model Building Pipeline execution.
          x-insertionOrder: false
      additionalProperties: false
    ScheduleState:
      type: string
      description: Specifies whether the schedule is enabled or disabled.
      enum:
        - ENABLED
        - DISABLED
    SqsParameters:
      type: object
      description: Contains the message group ID to use when the target is a FIFO queue. If you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.
      properties:
        MessageGroupId:
          type: string
          maxLength: 128
          minLength: 1
          description: The FIFO message group ID to use as the target.
      additionalProperties: false
    TagMap:
      type: object
      x-patternProperties:
        .+:
          type: string
          maxLength: 256
          minLength: 1
      additionalProperties: false
    Target:
      type: object
      description: The schedule target.
      properties:
        Arn:
          type: string
          maxLength: 1600
          minLength: 1
          description: The Amazon Resource Name (ARN) of the target.
        RoleArn:
          type: string
          maxLength: 1600
          minLength: 1
          pattern: ^arn:aws[a-z-]*:iam::\d{12}:role\/[\w+=,.@\/-]+$
          description: The Amazon Resource Name (ARN) of the IAM role to be used for this target when the schedule is triggered.
        DeadLetterConfig:
          $ref: '#/components/schemas/DeadLetterConfig'
        RetryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
        Input:
          type: string
          minLength: 1
          description: The text, or well-formed JSON, passed to the target. If you are configuring a templated Lambda, AWS Step Functions, or Amazon EventBridge target, the input must be a well-formed JSON. For all other target types, a JSON is not required. If you do not specify anything for this field, EventBridge Scheduler delivers a default notification to the target.
        EcsParameters:
          $ref: '#/components/schemas/EcsParameters'
        EventBridgeParameters:
          $ref: '#/components/schemas/EventBridgeParameters'
        KinesisParameters:
          $ref: '#/components/schemas/KinesisParameters'
        SageMakerPipelineParameters:
          $ref: '#/components/schemas/SageMakerPipelineParameters'
        SqsParameters:
          $ref: '#/components/schemas/SqsParameters'
      required:
        - Arn
        - RoleArn
      additionalProperties: false
    Schedule:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 1224
          minLength: 1
          pattern: ^arn:aws[a-z-]*:scheduler:[a-z0-9\-]+:\d{12}:schedule\/[0-9a-zA-Z-_.]+\/[0-9a-zA-Z-_.]+$
          description: The Amazon Resource Name (ARN) of the schedule.
        Description:
          type: string
          maxLength: 512
          minLength: 0
          description: The description of the schedule.
        EndDate:
          type: string
          description: The date, in UTC, before which the schedule can invoke its target. Depending on the schedule's recurrence expression, invocations might stop on, or before, the EndDate you specify.
          format: date-time
        FlexibleTimeWindow:
          $ref: '#/components/schemas/FlexibleTimeWindow'
        GroupName:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[0-9a-zA-Z-_.]+$
          description: The name of the schedule group to associate with this schedule. If you omit this, the default schedule group is used.
        KmsKeyArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws[a-z-]*:kms:[a-z0-9\-]+:\d{12}:(key|alias)\/[0-9a-zA-Z-_]*$
          description: The ARN for a KMS Key that will be used to encrypt customer data.
        Name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[0-9a-zA-Z-_.]+$
        ScheduleExpression:
          type: string
          maxLength: 256
          minLength: 1
          description: The scheduling expression.
        ScheduleExpressionTimezone:
          type: string
          maxLength: 50
          minLength: 1
          description: The timezone in which the scheduling expression is evaluated.
        StartDate:
          type: string
          description: The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule's recurrence expression, invocations might occur on, or after, the StartDate you specify.
          format: date-time
        State:
          $ref: '#/components/schemas/ScheduleState'
        Target:
          $ref: '#/components/schemas/Target'
      required:
        - FlexibleTimeWindow
        - ScheduleExpression
        - Target
      x-stackql-resource-name: schedule
      description: Definition of AWS::Scheduler::Schedule Resource Type
      x-type-name: AWS::Scheduler::Schedule
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - FlexibleTimeWindow
        - ScheduleExpression
        - Target
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - scheduler:CreateSchedule
          - scheduler:GetSchedule
          - iam:PassRole
        read:
          - scheduler:GetSchedule
        update:
          - scheduler:UpdateSchedule
          - scheduler:GetSchedule
          - iam:PassRole
        delete:
          - scheduler:DeleteSchedule
          - scheduler:GetSchedule
        list:
          - scheduler:ListSchedules
    ScheduleGroupState:
      type: string
      description: Specifies the state of the schedule group.
      enum:
        - ACTIVE
        - DELETING
    Tag:
      type: object
      description: Tag to associate with the resource.
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          description: Key for the tag
        Value:
          type: string
          maxLength: 256
          minLength: 1
          description: Value for the tag
      required:
        - Key
        - Value
      additionalProperties: false
    ScheduleGroup:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 1224
          minLength: 1
          pattern: ^arn:aws[a-z-]*:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$
          description: The Amazon Resource Name (ARN) of the schedule group.
        CreationDate:
          type: string
          description: The time at which the schedule group was created.
          format: date-time
        LastModificationDate:
          type: string
          description: The time at which the schedule group was last modified.
          format: date-time
        Name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[0-9a-zA-Z-_.]+$
        State:
          $ref: '#/components/schemas/ScheduleGroupState'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          description: The list of tags to associate with the schedule group.
          x-insertionOrder: false
      x-stackql-resource-name: schedule_group
      description: Definition of AWS::Scheduler::ScheduleGroup Resource Type
      x-type-name: AWS::Scheduler::ScheduleGroup
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreationDate
        - LastModificationDate
        - State
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - scheduler:UntagResource
          - scheduler:ListTagsForResource
          - scheduler:TagResource
      x-required-permissions:
        create:
          - scheduler:TagResource
          - scheduler:CreateScheduleGroup
          - scheduler:GetScheduleGroup
          - scheduler:ListTagsForResource
        read:
          - scheduler:GetScheduleGroup
          - scheduler:ListTagsForResource
        update:
          - scheduler:TagResource
          - scheduler:UntagResource
          - scheduler:ListTagsForResource
          - scheduler:GetScheduleGroup
        delete:
          - scheduler:DeleteScheduleGroup
          - scheduler:GetScheduleGroup
          - scheduler:DeleteSchedule
        list:
          - scheduler:ListScheduleGroups
    CreateScheduleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 1224
              minLength: 1
              pattern: ^arn:aws[a-z-]*:scheduler:[a-z0-9\-]+:\d{12}:schedule\/[0-9a-zA-Z-_.]+\/[0-9a-zA-Z-_.]+$
              description: The Amazon Resource Name (ARN) of the schedule.
            Description:
              type: string
              maxLength: 512
              minLength: 0
              description: The description of the schedule.
            EndDate:
              type: string
              description: The date, in UTC, before which the schedule can invoke its target. Depending on the schedule's recurrence expression, invocations might stop on, or before, the EndDate you specify.
              format: date-time
            FlexibleTimeWindow:
              $ref: '#/components/schemas/FlexibleTimeWindow'
            GroupName:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[0-9a-zA-Z-_.]+$
              description: The name of the schedule group to associate with this schedule. If you omit this, the default schedule group is used.
            KmsKeyArn:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^arn:aws[a-z-]*:kms:[a-z0-9\-]+:\d{12}:(key|alias)\/[0-9a-zA-Z-_]*$
              description: The ARN for a KMS Key that will be used to encrypt customer data.
            Name:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[0-9a-zA-Z-_.]+$
            ScheduleExpression:
              type: string
              maxLength: 256
              minLength: 1
              description: The scheduling expression.
            ScheduleExpressionTimezone:
              type: string
              maxLength: 50
              minLength: 1
              description: The timezone in which the scheduling expression is evaluated.
            StartDate:
              type: string
              description: The date, in UTC, after which the schedule can begin invoking its target. Depending on the schedule's recurrence expression, invocations might occur on, or after, the StartDate you specify.
              format: date-time
            State:
              $ref: '#/components/schemas/ScheduleState'
            Target:
              $ref: '#/components/schemas/Target'
          x-stackQL-stringOnly: true
      x-title: CreateScheduleRequest
      type: object
      required: []
    CreateScheduleGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 1224
              minLength: 1
              pattern: ^arn:aws[a-z-]*:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$
              description: The Amazon Resource Name (ARN) of the schedule group.
            CreationDate:
              type: string
              description: The time at which the schedule group was created.
              format: date-time
            LastModificationDate:
              type: string
              description: The time at which the schedule group was last modified.
              format: date-time
            Name:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[0-9a-zA-Z-_.]+$
            State:
              $ref: '#/components/schemas/ScheduleGroupState'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              description: The list of tags to associate with the schedule group.
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateScheduleGroupRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    schedules:
      name: schedules
      id: aws.scheduler.schedules
      x-cfn-schema-name: Schedule
      x-cfn-type-name: AWS::Scheduler::Schedule
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Schedule&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Scheduler::Schedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Scheduler::Schedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Scheduler::Schedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EndDate') as end_date,
              JSON_EXTRACT(Properties, '$.FlexibleTimeWindow') as flexible_time_window,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ScheduleExpression') as schedule_expression,
              JSON_EXTRACT(Properties, '$.ScheduleExpressionTimezone') as schedule_expression_timezone,
              JSON_EXTRACT(Properties, '$.StartDate') as start_date,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Target') as target
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Scheduler::Schedule'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EndDate') as end_date,
                JSON_EXTRACT(detail.Properties, '$.FlexibleTimeWindow') as flexible_time_window,
                JSON_EXTRACT(detail.Properties, '$.GroupName') as group_name,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ScheduleExpression') as schedule_expression,
                JSON_EXTRACT(detail.Properties, '$.ScheduleExpressionTimezone') as schedule_expression_timezone,
                JSON_EXTRACT(detail.Properties, '$.StartDate') as start_date,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Target') as target
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Scheduler::Schedule'
                AND detail.data__TypeName = 'AWS::Scheduler::Schedule'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EndDate') as end_date,
                  json_extract_path_text(Properties, 'FlexibleTimeWindow') as flexible_time_window,
                  json_extract_path_text(Properties, 'GroupName') as group_name,
                  json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ScheduleExpression') as schedule_expression,
                  json_extract_path_text(Properties, 'ScheduleExpressionTimezone') as schedule_expression_timezone,
                  json_extract_path_text(Properties, 'StartDate') as start_date,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Target') as target
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Scheduler::Schedule'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EndDate') as end_date,
                    json_extract_path_text(detail.Properties, 'FlexibleTimeWindow') as flexible_time_window,
                    json_extract_path_text(detail.Properties, 'GroupName') as group_name,
                    json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ScheduleExpression') as schedule_expression,
                    json_extract_path_text(detail.Properties, 'ScheduleExpressionTimezone') as schedule_expression_timezone,
                    json_extract_path_text(detail.Properties, 'StartDate') as start_date,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Target') as target
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Scheduler::Schedule'
                    AND detail.data__TypeName = 'AWS::Scheduler::Schedule'
                    AND listing.region = 'us-east-1'
    schedules_list_only:
      name: schedules_list_only
      id: aws.scheduler.schedules_list_only
      x-cfn-schema-name: Schedule
      x-cfn-type-name: AWS::Scheduler::Schedule
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Scheduler::Schedule'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Scheduler::Schedule'
                AND region = 'us-east-1'
    schedule_groups:
      name: schedule_groups
      id: aws.scheduler.schedule_groups
      x-cfn-schema-name: ScheduleGroup
      x-cfn-type-name: AWS::Scheduler::ScheduleGroup
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ScheduleGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Scheduler::ScheduleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Scheduler::ScheduleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Scheduler::ScheduleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/schedule_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/schedule_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/schedule_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.LastModificationDate') as last_modification_date,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Scheduler::ScheduleGroup'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
                JSON_EXTRACT(detail.Properties, '$.LastModificationDate') as last_modification_date,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                AND detail.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationDate') as creation_date,
                  json_extract_path_text(Properties, 'LastModificationDate') as last_modification_date,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                    json_extract_path_text(detail.Properties, 'LastModificationDate') as last_modification_date,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                    AND detail.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                    AND listing.region = 'us-east-1'
    schedule_groups_list_only:
      name: schedule_groups_list_only
      id: aws.scheduler.schedule_groups_list_only
      x-cfn-schema-name: ScheduleGroup
      x-cfn-type-name: AWS::Scheduler::ScheduleGroup
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Scheduler::ScheduleGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                AND region = 'us-east-1'
    schedule_group_tags:
      name: schedule_group_tags
      id: aws.scheduler.schedule_group_tags
      x-cfn-schema-name: ScheduleGroup
      x-cfn-type-name: AWS::Scheduler::ScheduleGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(detail.Properties, '$.LastModificationDate') as last_modification_date,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.State') as state
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
              AND detail.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreationDate') as creation_date,
                json_extract_path_text(detail.Properties, 'LastModificationDate') as last_modification_date,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'State') as state
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                AND detail.data__TypeName = 'AWS::Scheduler::ScheduleGroup'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Schedule&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSchedule
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateScheduleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ScheduleGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateScheduleGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateScheduleGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
