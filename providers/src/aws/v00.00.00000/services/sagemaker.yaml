openapi: 3.0.0
info:
  title: SageMaker
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ResourceSpec:
      type: object
      additionalProperties: false
      properties:
        InstanceType:
          type: string
          description: The instance type that the image version runs on.
          enum:
            - system
            - ml.t3.micro
            - ml.t3.small
            - ml.t3.medium
            - ml.t3.large
            - ml.t3.xlarge
            - ml.t3.2xlarge
            - ml.m5.large
            - ml.m5.xlarge
            - ml.m5.2xlarge
            - ml.m5.4xlarge
            - ml.m5.8xlarge
            - ml.m5.12xlarge
            - ml.m5.16xlarge
            - ml.m5.24xlarge
            - ml.c5.large
            - ml.c5.xlarge
            - ml.c5.2xlarge
            - ml.c5.4xlarge
            - ml.c5.9xlarge
            - ml.c5.12xlarge
            - ml.c5.18xlarge
            - ml.c5.24xlarge
            - ml.p3.2xlarge
            - ml.p3.8xlarge
            - ml.p3.16xlarge
            - ml.g4dn.xlarge
            - ml.g4dn.2xlarge
            - ml.g4dn.4xlarge
            - ml.g4dn.8xlarge
            - ml.g4dn.12xlarge
            - ml.g4dn.16xlarge
            - ml.r5.large
            - ml.r5.xlarge
            - ml.r5.2xlarge
            - ml.r5.4xlarge
            - ml.r5.8xlarge
            - ml.r5.12xlarge
            - ml.r5.16xlarge
            - ml.r5.24xlarge
            - ml.p3dn.24xlarge
            - ml.m5d.large
            - ml.m5d.xlarge
            - ml.m5d.2xlarge
            - ml.m5d.4xlarge
            - ml.m5d.8xlarge
            - ml.m5d.12xlarge
            - ml.m5d.16xlarge
            - ml.m5d.24xlarge
            - ml.g5.xlarge
            - ml.g5.2xlarge
            - ml.g5.4xlarge
            - ml.g5.8xlarge
            - ml.g5.12xlarge
            - ml.g5.16xlarge
            - ml.g5.24xlarge
            - ml.g5.48xlarge
            - ml.p4d.24xlarge
            - ml.p4de.24xlarge
            - ml.geospatial.interactive
            - ml.trn1.2xlarge
            - ml.trn1.32xlarge
            - ml.trn1n.32xlarge
        SageMakerImageArn:
          type: string
          description: The ARN of the SageMaker image that the image version belongs to.
          maxLength: 256
          pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$
        SageMakerImageVersionArn:
          type: string
          description: The ARN of the image version created on the instance.
          maxLength: 256
          pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$
        LifecycleConfigArn:
          type: string
          description: The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:studio-lifecycle-config/.*
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
          minLength: 1
          maxLength: 128
        Key:
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Key
        - Value
    App:
      type: object
      properties:
        AppArn:
          type: string
          description: The Amazon Resource Name (ARN) of the app.
          minLength: 1
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app/.*
        AppName:
          type: string
          description: The name of the app.
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
        AppType:
          type: string
          description: The type of app.
          enum:
            - JupyterServer
            - KernelGateway
            - RStudioServerPro
            - RSessionGateway
            - Canvas
        DomainId:
          type: string
          description: The domain ID.
          minLength: 1
          maxLength: 63
        ResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
        Tags:
          type: array
          description: A list of tags to apply to the app.
          uniqueItems: false
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        UserProfileName:
          type: string
          description: The user profile name.
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
      required:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
      x-stackql-resource-name: app
      description: Resource Type definition for AWS::SageMaker::App
      x-type-name: AWS::SageMaker::App
      x-stackql-primary-identifier:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
      x-create-only-properties:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
        - Tags
        - ResourceSpec
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - AppArn
      x-required-properties:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
      x-required-permissions:
        create:
          - sagemaker:CreateApp
          - sagemaker:DescribeApp
        read:
          - sagemaker:DescribeApp
          - sagemaker:DescribeApp
        delete:
          - sagemaker:DeleteApp
          - sagemaker:DescribeApp
        list:
          - sagemaker:ListApps
    KernelGatewayImageConfig:
      type: object
      description: The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
      additionalProperties: false
      properties:
        FileSystemConfig:
          $ref: '#/components/schemas/FileSystemConfig'
          description: The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
        KernelSpecs:
          type: array
          description: The specification of the Jupyter kernels in the image.
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/KernelSpec'
      required:
        - KernelSpecs
    JupyterLabAppImageConfig:
      type: object
      description: The configuration for the kernels in a SageMaker image running as a JupyterLab app.
      additionalProperties: false
      properties:
        ContainerConfig:
          $ref: '#/components/schemas/ContainerConfig'
          description: The container configuration for a SageMaker image.
    CodeEditorAppImageConfig:
      type: object
      description: The configuration for the kernels in a SageMaker image running as a CodeEditor app.
      additionalProperties: false
      properties:
        ContainerConfig:
          $ref: '#/components/schemas/ContainerConfig'
          description: The container configuration for a SageMaker image.
    ContainerConfig:
      type: object
      description: The container configuration for a SageMaker image.
      additionalProperties: false
      properties:
        ContainerArguments:
          type: array
          description: A list of arguments to apply to the container.
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CustomImageContainerArguments'
          minItems: 0
          maxItems: 50
        ContainerEntrypoint:
          type: array
          description: The custom entry point to use on container.
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CustomImageContainerEntrypoint'
          minItems: 0
          maxItems: 1
        ContainerEnvironmentVariables:
          type: array
          description: A list of variables to apply to the custom container.
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CustomImageContainerEnvironmentVariable'
          minItems: 0
          maxItems: 25
    CustomImageContainerArguments:
      type: string
      description: The container image arguments
      minLength: 1
      maxLength: 64
      pattern: ^(?!\s*$).+
    CustomImageContainerEntrypoint:
      type: string
      description: The container entry point
      minLength: 1
      maxLength: 256
      pattern: ^(?!\s*$).+
    CustomImageContainerEnvironmentVariable:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^(?!\s*$).+
        Key:
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^(?!\s*$).+
      required:
        - Key
        - Value
    FileSystemConfig:
      type: object
      description: The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
      additionalProperties: false
      properties:
        DefaultGid:
          type: integer
          description: The default POSIX group ID (GID). If not specified, defaults to 100.
          minimum: 0
          maximum: 65535
        DefaultUid:
          type: integer
          description: The default POSIX user ID (UID). If not specified, defaults to 1000.
          minimum: 0
          maximum: 65535
        MountPath:
          type: string
          description: The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
          minLength: 1
          maxLength: 1024
          pattern: ^/.*
    KernelSpec:
      type: object
      additionalProperties: false
      properties:
        DisplayName:
          type: string
          description: The display name of the kernel.
          minLength: 1
          maxLength: 1024
        Name:
          type: string
          description: The name of the kernel.
          minLength: 1
          maxLength: 1024
      required:
        - Name
    AppImageConfig:
      type: object
      properties:
        AppImageConfigArn:
          type: string
          description: The Amazon Resource Name (ARN) of the AppImageConfig.
          minLength: 1
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app-image-config/.*
        AppImageConfigName:
          type: string
          description: The Name of the AppImageConfig.
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
        KernelGatewayImageConfig:
          $ref: '#/components/schemas/KernelGatewayImageConfig'
          description: The KernelGatewayImageConfig.
        JupyterLabAppImageConfig:
          $ref: '#/components/schemas/JupyterLabAppImageConfig'
          description: The JupyterLabAppImageConfig.
        CodeEditorAppImageConfig:
          $ref: '#/components/schemas/CodeEditorAppImageConfig'
          description: The CodeEditorAppImageConfig.
        Tags:
          type: array
          description: A list of tags to apply to the AppImageConfig.
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
      required:
        - AppImageConfigName
      x-stackql-resource-name: app_image_config
      description: Resource Type definition for AWS::SageMaker::AppImageConfig
      x-type-name: AWS::SageMaker::AppImageConfig
      x-stackql-primary-identifier:
        - AppImageConfigName
      x-create-only-properties:
        - AppImageConfigName
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - AppImageConfigArn
      x-required-properties:
        - AppImageConfigName
      x-required-permissions:
        create:
          - sagemaker:CreateAppImageConfig
          - sagemaker:DescribeAppImageConfig
        read:
          - sagemaker:DescribeAppImageConfig
        update:
          - sagemaker:UpdateAppImageConfig
          - sagemaker:DescribeAppImageConfig
        delete:
          - sagemaker:DeleteAppImageConfig
          - sagemaker:DescribeAppImageConfig
        list:
          - sagemaker:ListAppImageConfigs
    ClusterOrchestratorEksConfig:
      description: Specifies parameter(s) related to EKS as orchestrator, e.g. the EKS cluster nodes will attach to,
      additionalProperties: false
      type: object
      properties:
        ClusterArn:
          description: The ARN of the EKS cluster, such as arn:aws:eks:us-west-2:123456789012:cluster/my-eks-cluster
          type: string
      required:
        - ClusterArn
    DeepHealthCheckType:
      description: The type of deep health check(s) to be performed on the instances in the SageMaker HyperPod cluster instance group.
      type: string
      enum:
        - InstanceStress
        - InstanceConnectivity
    ClusterInstanceStorageConfig:
      oneOf:
        - additionalProperties: false
          type: object
          properties:
            EbsVolumeConfig:
              $ref: '#/components/schemas/ClusterEbsVolumeConfig'
      description: Defines the configuration for attaching additional storage to the instances in the SageMaker HyperPod cluster instance group.
      type: object
    VpcConfig:
      type: object
      additionalProperties: false
      description: Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
      properties:
        SecurityGroupIds:
          description: The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
          type: array
          minItems: 1
          maxItems: 5
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
        Subnets:
          description: The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
          type: array
          minItems: 1
          maxItems: 16
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
      required:
        - SecurityGroupIds
        - Subnets
    InstanceGroupName:
      minLength: 1
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      description: The name of the instance group of a SageMaker HyperPod cluster.
      type: string
      maxLength: 63
    ClusterInstanceGroupsList:
      minItems: 1
      description: The instance groups of the SageMaker HyperPod cluster.
      x-insertionOrder: false
      type: array
      items:
        $ref: '#/components/schemas/ClusterInstanceGroup'
    Orchestrator:
      description: Specifies parameter(s) specific to the orchestrator, e.g. specify the EKS cluster.
      additionalProperties: false
      type: object
      properties:
        Eks:
          $ref: '#/components/schemas/ClusterOrchestratorEksConfig'
      required:
        - Eks
    ClusterEbsVolumeConfig:
      description: Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.
      additionalProperties: false
      type: object
      properties:
        VolumeSizeInGB:
          description: The size in gigabytes (GB) of the additional EBS volume to be attached to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.
          maximum: 16384
          type: integer
          minimum: 1
    ClusterLifeCycleConfig:
      description: The lifecycle configuration for a SageMaker HyperPod cluster.
      additionalProperties: false
      type: object
      properties:
        SourceS3Uri:
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          description: An Amazon S3 bucket path where your lifecycle scripts are stored.
          type: string
          maxLength: 1024
        OnCreate:
          minLength: 1
          pattern: ^[\S\s]+$
          description: The file name of the entrypoint script of lifecycle scripts under SourceS3Uri. This entrypoint script runs during cluster creation.
          type: string
          maxLength: 128
      required:
        - OnCreate
        - SourceS3Uri
    OnStartDeepHealthChecks:
      description: Nodes will undergo advanced stress test to detect and replace faulty instances, based on the type of deep health check(s) passed in.
      x-insertionOrder: false
      type: array
      items:
        $ref: '#/components/schemas/DeepHealthCheckType'
    ClusterInstanceGroup:
      description: Details of an instance group in a SageMaker HyperPod cluster.
      additionalProperties: false
      type: object
      properties:
        OverrideVpcConfig:
          $ref: '#/components/schemas/VpcConfig'
        InstanceCount:
          description: The number of instances you specified to add to the instance group of a SageMaker HyperPod cluster.
          type: integer
          minimum: 0
        OnStartDeepHealthChecks:
          $ref: '#/components/schemas/OnStartDeepHealthChecks'
        InstanceGroupName:
          $ref: '#/components/schemas/InstanceGroupName'
        InstanceStorageConfigs:
          $ref: '#/components/schemas/ClusterInstanceStorageConfigs'
        CurrentCount:
          description: The number of instances that are currently in the instance group of a SageMaker HyperPod cluster.
          type: integer
          minimum: 0
        LifeCycleConfig:
          $ref: '#/components/schemas/ClusterLifeCycleConfig'
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
        ThreadsPerCore:
          description: The number you specified to TreadsPerCore in CreateCluster for enabling or disabling multithreading. For instance types that support multithreading, you can specify 1 for disabling multithreading and 2 for enabling multithreading.
          maximum: 2
          type: integer
          minimum: 1
        ExecutionRole:
          $ref: '#/components/schemas/ExecutionRole'
      required:
        - ExecutionRole
        - InstanceCount
        - InstanceGroupName
        - InstanceType
        - LifeCycleConfig
    ClusterInstanceStorageConfigs:
      maxItems: 1
      description: The instance storage configuration for the instance group.
      x-insertionOrder: false
      type: array
      items:
        $ref: '#/components/schemas/ClusterInstanceStorageConfig'
    InstanceType:
      description: The instance type of the instance group of a SageMaker HyperPod cluster.
      type: string
    ExecutionRole:
      minLength: 20
      pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      description: The execution role for the instance group to assume.
      type: string
      maxLength: 2048
    Cluster:
      type: object
      properties:
        ClusterArn:
          pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:cluster/[a-z0-9]{12}$
          description: The Amazon Resource Name (ARN) of the HyperPod Cluster.
          type: string
          maxLength: 256
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
        NodeRecovery:
          description: If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.
          type: string
          enum:
            - Automatic
            - None
        CreationTime:
          description: The time at which the HyperPod cluster was created.
          type: string
        InstanceGroups:
          $ref: '#/components/schemas/ClusterInstanceGroupsList'
        ClusterName:
          minLength: 1
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
          description: The name of the HyperPod Cluster.
          type: string
          maxLength: 63
        FailureMessage:
          description: The failure message of the HyperPod Cluster.
          type: string
        Orchestrator:
          $ref: '#/components/schemas/Orchestrator'
        ClusterStatus:
          description: The status of the HyperPod Cluster.
          type: string
          enum:
            - Creating
            - Deleting
            - Failed
            - InService
            - RollingBack
            - SystemUpdating
            - Updating
        Tags:
          maxItems: 50
          uniqueItems: true
          description: Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceGroups
      x-stackql-resource-name: cluster
      description: Resource Type definition for AWS::SageMaker::Cluster
      x-type-name: AWS::SageMaker::Cluster
      x-stackql-primary-identifier:
        - ClusterArn
      x-stackql-additional-identifiers:
        - - ClusterName
      x-create-only-properties:
        - ClusterName
        - VpcConfig
        - Orchestrator
        - InstanceGroups/*/OverrideVpcConfig
        - InstanceGroups/*/ExecutionRole
        - InstanceGroups/*/InstanceGroupName
        - InstanceGroups/*/InstanceType
        - InstanceGroups/*/ThreadsPerCore
      x-read-only-properties:
        - ClusterArn
        - CreationTime
        - ClusterStatus
        - FailureMessage
        - InstanceGroups/*/CurrentCount
      x-required-properties:
        - InstanceGroups
      x-tagging:
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
      x-required-permissions:
        read:
          - sagemaker:DescribeCluster
          - sagemaker:ListTags
        create:
          - sagemaker:CreateCluster
          - sagemaker:DescribeCluster
          - sagemaker:AddTags
          - sagemaker:ListTags
          - eks:DescribeAccessEntry
          - eks:DescribeCluster
          - eks:CreateAccessEntry
          - eks:DeleteAccessEntry
          - eks:AssociateAccessPolicy
          - iam:CreateServiceLinkedRole
          - iam:PassRole
        update:
          - sagemaker:UpdateCluster
          - sagemaker:DescribeCluster
          - sagemaker:ListTags
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - eks:DescribeAccessEntry
          - eks:DescribeCluster
          - eks:CreateAccessEntry
          - eks:DeleteAccessEntry
          - iam:PassRole
        list:
          - sagemaker:ListClusters
        delete:
          - sagemaker:DeleteCluster
          - sagemaker:DescribeCluster
          - eks:DescribeAccessEntry
          - eks:DeleteAccessEntry
    DataQualityBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
        StatisticsResource:
          $ref: '#/components/schemas/StatisticsResource'
    ConstraintsResource:
      type: object
      additionalProperties: false
      description: The baseline constraints resource for a monitoring job.
      properties:
        S3Uri:
          description: The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
          $ref: '#/components/schemas/S3Uri'
    StatisticsResource:
      type: object
      additionalProperties: false
      description: The baseline statistics resource for a monitoring job.
      properties:
        S3Uri:
          description: The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
          $ref: '#/components/schemas/S3Uri'
    S3Uri:
      type: string
      description: The Amazon S3 URI.
      pattern: ^(https|s3)://([^/]+)/?(.*)$
      maxLength: 1024
    DataQualityAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ContainerArguments:
          type: array
          description: An array of arguments for the container used to run the monitoring job.
          maxItems: 50
          items:
            type: string
            minLength: 1
            maxLength: 256
        ContainerEntrypoint:
          type: array
          description: Specifies the entrypoint for a container used to run the monitoring job.
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 256
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        PostAnalyticsProcessorSourceUri:
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
          $ref: '#/components/schemas/S3Uri'
        RecordPreprocessorSourceUri:
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
      required:
        - ImageUri
    DataQualityJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
    EndpointInput:
      type: object
      additionalProperties: false
      description: The endpoint for a monitoring job.
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        LocalPath:
          type: string
          description: Path to the filesystem where the endpoint data is available to the container.
          pattern: .*
          maxLength: 256
        S3DataDistributionType:
          type: string
          description: Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
          enum:
            - FullyReplicated
            - ShardedByS3Key
        S3InputMode:
          type: string
          description: Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
          enum:
            - Pipe
            - File
        ExcludeFeaturesAttribute:
          type: string
          description: Indexes or names of the features to be excluded from analysis
          maxLength: 100
      required:
        - EndpointName
        - LocalPath
    BatchTransformInput:
      type: object
      additionalProperties: false
      description: The batch transform input for a monitoring job.
      properties:
        DataCapturedDestinationS3Uri:
          type: string
          description: A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 512
        DatasetFormat:
          $ref: '#/components/schemas/DatasetFormat'
        LocalPath:
          type: string
          description: Path to the filesystem where the endpoint data is available to the container.
          pattern: .*
          maxLength: 256
        S3DataDistributionType:
          type: string
          description: Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
          enum:
            - FullyReplicated
            - ShardedByS3Key
        S3InputMode:
          type: string
          description: Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
          enum:
            - Pipe
            - File
        ExcludeFeaturesAttribute:
          type: string
          description: Indexes or names of the features to be excluded from analysis
          maxLength: 100
      required:
        - DataCapturedDestinationS3Uri
        - DatasetFormat
        - LocalPath
    MonitoringOutputConfig:
      type: object
      additionalProperties: false
      description: The output configuration for monitoring jobs.
      properties:
        KmsKeyId:
          type: string
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
          pattern: .*
          maxLength: 2048
        MonitoringOutputs:
          type: array
          description: Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
          minLength: 1
          maxLength: 1
          items:
            $ref: '#/components/schemas/MonitoringOutput'
      required:
        - MonitoringOutputs
    MonitoringOutput:
      type: object
      additionalProperties: false
      description: The output object for a monitoring job.
      properties:
        S3Output:
          $ref: '#/components/schemas/S3Output'
      required:
        - S3Output
    S3Output:
      type: object
      additionalProperties: false
      description: Information about where and how to store the results of a monitoring job.
      properties:
        LocalPath:
          type: string
          description: The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
          pattern: .*
          maxLength: 256
        S3UploadMode:
          type: string
          description: Whether to upload the results of the monitoring job continuously or after the job completes.
          enum:
            - Continuous
            - EndOfJob
        S3Uri:
          type: string
          description: A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 512
      required:
        - LocalPath
        - S3Uri
    MonitoringResources:
      type: object
      additionalProperties: false
      description: Identifies the resources to deploy for a monitoring job.
      properties:
        ClusterConfig:
          $ref: '#/components/schemas/ClusterConfig'
      required:
        - ClusterConfig
    ClusterConfig:
      type: object
      additionalProperties: false
      description: Configuration for the cluster used to run model monitoring jobs.
      properties:
        InstanceCount:
          description: The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
          type: integer
          minimum: 1
          maximum: 100
        InstanceType:
          description: The ML compute instance type for the processing job.
          type: string
        VolumeKmsKeyId:
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
          type: string
          minimum: 1
          maximum: 2048
        VolumeSizeInGB:
          description: The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
          type: integer
          minimum: 1
          maximum: 16384
      required:
        - InstanceCount
        - InstanceType
        - VolumeSizeInGB
    NetworkConfig:
      type: object
      additionalProperties: false
      description: Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
      properties:
        EnableInterContainerTrafficEncryption:
          description: Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
          type: boolean
        EnableNetworkIsolation:
          description: Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
          type: boolean
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
    StoppingCondition:
      type: object
      additionalProperties: false
      description: Specifies a time limit for how long the monitoring job is allowed to run.
      properties:
        MaxRuntimeInSeconds:
          description: The maximum runtime allowed in seconds.
          type: integer
          minimum: 1
          maximum: 86400
      required:
        - MaxRuntimeInSeconds
    EndpointName:
      type: string
      description: The name of the endpoint used to run the monitoring job.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    JobDefinitionName:
      type: string
      description: The name of the job definition.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    ProcessingJobName:
      type: string
      description: The name of a processing job
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      minLength: 1
      maxLength: 63
    DatasetFormat:
      description: The dataset format of the data to monitor
      type: object
      properties:
        Csv:
          $ref: '#/components/schemas/Csv'
        Json:
          $ref: '#/components/schemas/Json'
        Parquet:
          $ref: '#/components/schemas/Parquet'
    Csv:
      description: The CSV format
      type: object
      properties:
        Header:
          description: A boolean flag indicating if given CSV has header
          type: boolean
    Json:
      description: The Json format
      type: object
      properties:
        Line:
          description: A boolean flag indicating if it is JSON line format
          type: boolean
    Parquet:
      description: A flag indicating if the dataset format is Parquet
      type: boolean
    DataQualityJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        DataQualityBaselineConfig:
          $ref: '#/components/schemas/DataQualityBaselineConfig'
        DataQualityAppSpecification:
          $ref: '#/components/schemas/DataQualityAppSpecification'
        DataQualityJobInput:
          $ref: '#/components/schemas/DataQualityJobInput'
        DataQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - DataQualityAppSpecification
        - DataQualityJobInput
        - DataQualityJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: data_quality_job_definition
      description: Resource Type definition for AWS::SageMaker::DataQualityJobDefinition
      x-type-name: AWS::SageMaker::DataQualityJobDefinition
      x-stackql-primary-identifier:
        - JobDefinitionArn
      x-create-only-properties:
        - JobDefinitionName
        - DataQualityAppSpecification
        - DataQualityBaselineConfig
        - DataQualityJobInput
        - DataQualityJobOutputConfig
        - JobResources
        - NetworkConfig
        - RoleArn
        - StoppingCondition
        - Tags
        - EndpointName
      x-write-only-properties:
        - EndpointName
        - Tags
        - Tags/*/Key
        - Tags/*/Value
      x-read-only-properties:
        - CreationTime
        - JobDefinitionArn
      x-required-properties:
        - DataQualityAppSpecification
        - DataQualityJobInput
        - DataQualityJobOutputConfig
        - JobResources
        - RoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
      x-required-permissions:
        create:
          - sagemaker:CreateDataQualityJobDefinition
          - sagemaker:DescribeDataQualityJobDefinition
          - sagemaker:AddTags
          - iam:PassRole
        delete:
          - sagemaker:DeleteDataQualityJobDefinition
        read:
          - sagemaker:DescribeDataQualityJobDefinition
        list:
          - sagemaker:ListDataQualityJobDefinitions
          - sagemaker:ListTags
    Device:
      type: object
      properties:
        DeviceFleetName:
          description: The name of the edge device fleet
          type: string
          pattern: ^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        Device:
          description: The Edge Device you want to register against a device fleet
          $ref: '#/components/schemas/Device'
        Tags:
          description: Associate tags with the resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DeviceFleetName
      x-stackql-resource-name: device
      description: Resource schema for AWS::SageMaker::Device
      x-type-name: AWS::SageMaker::Device
      x-stackql-primary-identifier:
        - Device/DeviceName
      x-create-only-properties:
        - Device/DeviceName
      x-required-properties:
        - DeviceFleetName
      x-required-permissions:
        create:
          - sagemaker:RegisterDevices
        read:
          - sagemaker:DescribeDevice
        update:
          - sagemaker:UpdateDevices
        delete:
          - sagemaker:DeregisterDevices
    EdgeOutputConfig:
      type: object
      properties:
        S3OutputLocation:
          description: The Amazon Simple Storage (S3) bucket URI
          type: string
          pattern: ^s3://([^/]+)/?(.*)$
          maxLength: 1024
        KmsKeyId:
          description: The KMS key id used for encryption on the S3 bucket
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 2048
      required:
        - S3OutputLocation
      additionalProperties: false
    DeviceFleet:
      type: object
      properties:
        Description:
          description: Description for the edge device fleet
          type: string
          pattern: '[\S\s]+'
          minLength: 0
          maxLength: 800
        DeviceFleetName:
          description: The name of the edge device fleet
          type: string
          pattern: ^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        OutputConfig:
          description: S3 bucket and an ecryption key id (if available) to store outputs for the fleet
          $ref: '#/components/schemas/EdgeOutputConfig'
        RoleArn:
          description: Role associated with the device fleet
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        Tags:
          description: Associate tags with the resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DeviceFleetName
        - OutputConfig
        - RoleArn
      x-stackql-resource-name: device_fleet
      description: Resource schema for AWS::SageMaker::DeviceFleet
      x-type-name: AWS::SageMaker::DeviceFleet
      x-stackql-primary-identifier:
        - DeviceFleetName
      x-create-only-properties:
        - DeviceFleetName
      x-required-properties:
        - DeviceFleetName
        - OutputConfig
        - RoleArn
      x-required-permissions:
        create:
          - sagemaker:CreateDeviceFleet
          - iam:PassRole
        read:
          - sagemaker:DescribeDeviceFleet
        update:
          - sagemaker:UpdateDeviceFleet
          - iam:PassRole
        delete:
          - sagemaker:DeleteDeviceFleet
    UserSettings:
      type: object
      description: A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
      additionalProperties: false
      properties:
        ExecutionRole:
          type: string
          description: The user profile Amazon Resource Name (ARN).
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
        RStudioServerProAppSettings:
          $ref: '#/components/schemas/RStudioServerProAppSettings'
        JupyterLabAppSettings:
          $ref: '#/components/schemas/JupyterLabAppSettings'
        SpaceStorageSettings:
          $ref: '#/components/schemas/DefaultSpaceStorageSettings'
        CodeEditorAppSettings:
          $ref: '#/components/schemas/CodeEditorAppSettings'
        StudioWebPortalSettings:
          $ref: '#/components/schemas/StudioWebPortalSettings'
        DefaultLandingUri:
          type: string
          description: Defines which Amazon SageMaker application users are directed to by default.
          maxLength: 1023
        StudioWebPortal:
          type: string
          description: Indicates whether the Studio experience is available to users. If not, users cannot access Studio.
          enum:
            - ENABLED
            - DISABLED
        CustomPosixUserConfig:
          $ref: '#/components/schemas/CustomPosixUserConfig'
        CustomFileSystemConfigs:
          type: array
          uniqueItems: true
          minItems: 0
          maxItems: 2
          items:
            $ref: '#/components/schemas/CustomFileSystemConfig'
        SecurityGroups:
          type: array
          description: The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
          uniqueItems: false
          minItems: 0
          maxItems: 5
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
        SharingSettings:
          $ref: '#/components/schemas/SharingSettings'
          description: The sharing settings.
    DefaultSpaceSettings:
      type: object
      description: A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the Create/Update Domain API is called.
      additionalProperties: false
      properties:
        ExecutionRole:
          type: string
          description: The execution role for the space.
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
        SecurityGroups:
          type: array
          description: The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
          uniqueItems: false
          x-insertionOrder: false
          minItems: 0
          maxItems: 5
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
        JupyterLabAppSettings:
          $ref: '#/components/schemas/JupyterLabAppSettings'
          description: The Jupyter lab's app settings.
        SpaceStorageSettings:
          $ref: '#/components/schemas/DefaultSpaceStorageSettings'
          description: The Jupyter lab's space storage settings.
        CustomPosixUserConfig:
          $ref: '#/components/schemas/CustomPosixUserConfig'
          description: The Jupyter lab's custom posix user configurations.
        CustomFileSystemConfigs:
          type: array
          uniqueItems: true
          minItems: 0
          maxItems: 2
          items:
            $ref: '#/components/schemas/CustomFileSystemConfig'
      required:
        - ExecutionRole
    JupyterServerAppSettings:
      type: object
      description: The JupyterServer app settings.
      additionalProperties: false
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
        LifecycleConfigArns:
          type: array
          description: A list of LifecycleConfigArns available for use with JupyterServer apps.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/StudioLifecycleConfigArn'
    KernelGatewayAppSettings:
      type: object
      description: The kernel gateway app settings.
      additionalProperties: false
      properties:
        CustomImages:
          type: array
          description: A list of custom SageMaker images that are configured to run as a KernelGateway app.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/CustomImage'
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
        LifecycleConfigArns:
          type: array
          description: A list of LifecycleConfigArns available for use with KernelGateway apps.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/StudioLifecycleConfigArn'
    JupyterLabAppSettings:
      type: object
      description: The JupyterLab app settings.
      additionalProperties: false
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.
        LifecycleConfigArns:
          type: array
          description: A list of LifecycleConfigArns available for use with JupyterLab apps.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/StudioLifecycleConfigArn'
        CodeRepositories:
          type: array
          description: A list of CodeRepositories available for use with JupyterLab apps.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/CodeRepository'
        CustomImages:
          type: array
          description: A list of custom images available for use for JupyterLab apps
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/CustomImage'
        AppLifecycleManagement:
          $ref: '#/components/schemas/AppLifecycleManagement'
    AppLifecycleManagement:
      type: object
      properties:
        IdleSettings:
          $ref: '#/components/schemas/IdleSettings'
      additionalProperties: false
    IdleSettings:
      type: object
      properties:
        LifecycleManagement:
          $ref: '#/components/schemas/LifecycleManagement'
        IdleTimeoutInMinutes:
          $ref: '#/components/schemas/IdleTimeoutInMinutes'
        MinIdleTimeoutInMinutes:
          $ref: '#/components/schemas/MinIdleTimeoutInMinutes'
        MaxIdleTimeoutInMinutes:
          $ref: '#/components/schemas/MaxIdleTimeoutInMinutes'
      additionalProperties: false
    LifecycleManagement:
      type: string
      description: A flag to enable/disable AppLifecycleManagement settings
      enum:
        - ENABLED
        - DISABLED
    IdleTimeoutInMinutes:
      type: integer
      description: The idle timeout value set in minutes
      minimum: 60
      maximum: 525600
    MinIdleTimeoutInMinutes:
      type: integer
      description: The minimum idle timeout value set in minutes
      minimum: 60
      maximum: 525600
    MaxIdleTimeoutInMinutes:
      type: integer
      description: The maximum idle timeout value set in minutes
      minimum: 60
      maximum: 525600
    CodeRepository:
      type: object
      additionalProperties: false
      properties:
        RepositoryUrl:
          type: string
          description: A CodeRepository (valid URL) to be used within Jupyter's Git extension.
          maxLength: 256
          pattern: ^https://([.\-_a-zA-Z0-9]+/?){3,1016}$
      required:
        - RepositoryUrl
    DefaultSpaceStorageSettings:
      type: object
      description: Default storage settings for a space.
      additionalProperties: false
      properties:
        DefaultEbsStorageSettings:
          $ref: '#/components/schemas/DefaultEbsStorageSettings'
    DefaultEbsStorageSettings:
      type: object
      description: Properties related to the Amazon Elastic Block Store volume.
      additionalProperties: false
      properties:
        DefaultEbsVolumeSizeInGb:
          description: Default size of the Amazon EBS volume in Gb
          $ref: '#/components/schemas/SpaceEbsVolumeSizeInGb'
        MaximumEbsVolumeSizeInGb:
          description: Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.
          $ref: '#/components/schemas/SpaceEbsVolumeSizeInGb'
      required:
        - DefaultEbsVolumeSizeInGb
        - MaximumEbsVolumeSizeInGb
    SpaceEbsVolumeSizeInGb:
      type: integer
      minimum: 5
      maximum: 16384
    CodeEditorAppSettings:
      type: object
      description: The CodeEditor app settings.
      additionalProperties: false
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.
        LifecycleConfigArns:
          type: array
          description: A list of LifecycleConfigArns available for use with CodeEditor apps.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/StudioLifecycleConfigArn'
        CustomImages:
          type: array
          description: A list of custom images for use for CodeEditor apps.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/CustomImage'
        AppLifecycleManagement:
          $ref: '#/components/schemas/AppLifecycleManagement'
    StudioLifecycleConfigArn:
      type: string
      description: The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.
      maxLength: 256
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:studio-lifecycle-config/.*
    CustomPosixUserConfig:
      type: object
      additionalProperties: false
      properties:
        Uid:
          type: integer
          minimum: 10000
          maximum: 4000000
        Gid:
          type: integer
          minimum: 1001
          maximum: 4000000
      required:
        - Uid
        - Gid
    CustomFileSystemConfig:
      type: object
      additionalProperties: false
      properties:
        EFSFileSystemConfig:
          $ref: '#/components/schemas/EFSFileSystemConfig'
        FSxLustreFileSystemConfig:
          $ref: '#/components/schemas/FSxLustreFileSystemConfig'
    EFSFileSystemConfig:
      type: object
      additionalProperties: false
      properties:
        FileSystemPath:
          type: string
          pattern: ^\/\S*$
          minLength: 1
          maxLength: 256
        FileSystemId:
          type: string
          minLength: 11
          maxLength: 21
          pattern: ^(fs-[0-9a-f]{8,})$
      required:
        - FileSystemId
    FSxLustreFileSystemConfig:
      type: object
      additionalProperties: false
      properties:
        FileSystemPath:
          type: string
          pattern: ^\/\S*$
          minLength: 1
          maxLength: 256
        FileSystemId:
          type: string
          minLength: 11
          maxLength: 21
          pattern: ^(fs-[0-9a-f]{8,})$
      required:
        - FileSystemId
    CustomImage:
      type: object
      description: A custom SageMaker image.
      additionalProperties: false
      properties:
        AppImageConfigName:
          type: string
          description: The Name of the AppImageConfig.
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
        ImageName:
          type: string
          description: The name of the CustomImage. Must be unique to your account.
          maxLength: 63
          pattern: ^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$
        ImageVersionNumber:
          type: integer
          description: The version number of the CustomImage.
          minimum: 0
      required:
        - AppImageConfigName
        - ImageName
    SharingSettings:
      type: object
      description: Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
      additionalProperties: false
      properties:
        NotebookOutputOption:
          type: string
          description: Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
          enum:
            - Allowed
            - Disabled
        S3KmsKeyId:
          type: string
          description: When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
          maxLength: 2048
          pattern: .*
        S3OutputPath:
          type: string
          description: When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
    DomainSettings:
      type: object
      description: A collection of Domain settings.
      additionalProperties: false
      properties:
        SecurityGroupIds:
          type: array
          description: The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 3
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
        RStudioServerProDomainSettings:
          $ref: '#/components/schemas/RStudioServerProDomainSettings'
        DockerSettings:
          $ref: '#/components/schemas/DockerSettings'
        ExecutionRoleIdentityConfig:
          type: string
          description: The configuration for attaching a SageMaker user profile name to the execution role as a sts:SourceIdentity key.
          enum:
            - USER_PROFILE_NAME
            - DISABLED
    DockerSettings:
      type: object
      description: A collection of settings that are required to start docker-proxy server.
      additionalProperties: false
      properties:
        EnableDockerAccess:
          type: string
          description: The flag to enable/disable docker-proxy server
          enum:
            - ENABLED
            - DISABLED
        VpcOnlyTrustedAccounts:
          type: array
          description: A list of account id's that would be used to pull images from in VpcOnly mode
          uniqueItems: false
          x-insertionOrder: false
          minItems: 0
          maxItems: 20
          items:
            type: string
            minLength: 12
            maxLength: 12
            pattern: ^\d+$
    RStudioServerProDomainSettings:
      type: object
      description: A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.
      additionalProperties: false
      properties:
        DomainExecutionRoleArn:
          type: string
          description: The ARN of the execution role for the RStudioServerPro Domain-level app.
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        RStudioConnectUrl:
          type: string
          description: A URL pointing to an RStudio Connect server.
          pattern: ^(https:|http:|www\.)\S*
        RStudioPackageManagerUrl:
          type: string
          description: A URL pointing to an RStudio Package Manager server.
          pattern: ^(https:|http:|www\.)\S*
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
      required:
        - DomainExecutionRoleArn
    RSessionAppSettings:
      type: object
      description: A collection of settings that apply to an RSessionGateway app.
      additionalProperties: false
      properties:
        CustomImages:
          type: array
          description: A list of custom SageMaker images that are configured to run as a KernelGateway app.
          x-insertionOrder: false
          uniqueItems: false
          minItems: 0
          maxItems: 200
          items:
            $ref: '#/components/schemas/CustomImage'
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
    RStudioServerProAppSettings:
      type: object
      description: A collection of settings that configure user interaction with the RStudioServerPro app.
      additionalProperties: false
      properties:
        AccessStatus:
          type: string
          description: Indicates whether the current user has access to the RStudioServerPro app.
          enum:
            - ENABLED
            - DISABLED
        UserGroup:
          type: string
          description: The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
          enum:
            - R_STUDIO_ADMIN
            - R_STUDIO_USER
    StudioWebPortalSettings:
      type: object
      description: Studio settings. If these settings are applied on a user level, they take priority over the settings applied on a domain level.
      additionalProperties: false
      properties:
        HiddenMlTools:
          type: array
          description: The machine learning tools that are hidden from the Studio left navigation pane.
          x-insertionOrder: false
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/components/schemas/MlTools'
        HiddenAppTypes:
          type: array
          description: Applications supported in Studio that are hidden from the Studio left navigation pane.
          x-insertionOrder: false
          uniqueItems: true
          minItems: 0
          items:
            $ref: '#/components/schemas/AppType'
    MlTools:
      type: string
      enum:
        - DataWrangler
        - FeatureStore
        - EmrClusters
        - AutoMl
        - Experiments
        - Training
        - ModelEvaluation
        - Pipelines
        - Models
        - JumpStart
        - InferenceRecommender
        - Endpoints
        - Projects
        - InferenceOptimization
        - HyperPodClusters
        - Comet
        - DeepchecksLLMEvaluation
        - Fiddler
        - LakeraGuard
    AppType:
      type: string
      enum:
        - JupyterServer
        - TensorBoard
        - RStudioServerPro
        - JupyterLab
        - CodeEditor
        - DetailedProfiler
        - Canvas
    Domain:
      description: The machine learning domain of the model package you specified.
      type: string
    Alarm:
      type: object
      additionalProperties: false
      properties:
        AlarmName:
          type: string
          description: The name of the CloudWatch alarm.
      required:
        - AlarmName
    AutoRollbackConfig:
      type: object
      additionalProperties: false
      properties:
        Alarms:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Alarm'
          description: List of CloudWatch alarms to monitor during the deployment. If any alarm goes off, the deployment is rolled back.
      required:
        - Alarms
    BlueGreenUpdatePolicy:
      type: object
      additionalProperties: false
      properties:
        MaximumExecutionTimeoutInSeconds:
          type: integer
          description: The maximum time allowed for the blue/green update, in seconds.
        TerminationWaitInSeconds:
          type: integer
          description: The wait time before terminating the old endpoint during a blue/green deployment.
        TrafficRoutingConfiguration:
          $ref: '#/components/schemas/TrafficRoutingConfig'
          description: The traffic routing configuration for the blue/green deployment.
      required:
        - TrafficRoutingConfiguration
    CapacitySize:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
          description: Specifies whether the `Value` is an instance count or a capacity unit.
        Value:
          type: integer
          description: The value representing either the number of instances or the number of capacity units.
      required:
        - Type
        - Value
    DeploymentConfig:
      type: object
      additionalProperties: false
      properties:
        AutoRollbackConfiguration:
          $ref: '#/components/schemas/AutoRollbackConfig'
          description: Configuration for automatic rollback if an error occurs during deployment.
        BlueGreenUpdatePolicy:
          $ref: '#/components/schemas/BlueGreenUpdatePolicy'
          description: Configuration for blue-green update deployment policies.
        RollingUpdatePolicy:
          $ref: '#/components/schemas/RollingUpdatePolicy'
          description: Configuration for rolling update deployment policies.
    RollingUpdatePolicy:
      type: object
      additionalProperties: false
      properties:
        MaximumBatchSize:
          $ref: '#/components/schemas/CapacitySize'
          description: Specifies the maximum batch size for each rolling update.
        MaximumExecutionTimeoutInSeconds:
          type: integer
          description: The maximum time allowed for the rolling update, in seconds.
        RollbackMaximumBatchSize:
          $ref: '#/components/schemas/CapacitySize'
          description: The maximum batch size for rollback during an update failure.
        WaitIntervalInSeconds:
          type: integer
          description: The time to wait between steps during the rolling update, in seconds.
      required:
        - MaximumBatchSize
        - WaitIntervalInSeconds
    TrafficRoutingConfig:
      type: object
      additionalProperties: false
      properties:
        CanarySize:
          $ref: '#/components/schemas/CapacitySize'
          description: Specifies the size of the canary traffic in a canary deployment.
        LinearStepSize:
          $ref: '#/components/schemas/CapacitySize'
          description: Specifies the step size for linear traffic routing.
        Type:
          type: string
          description: Specifies the type of traffic routing (e.g., 'AllAtOnce', 'Canary', 'Linear').
        WaitIntervalInSeconds:
          type: integer
          description: Specifies the wait interval between traffic shifts, in seconds.
      required:
        - Type
    VariantProperty:
      type: object
      additionalProperties: false
      properties:
        VariantPropertyType:
          type: string
          description: The type of variant property (e.g., 'DesiredInstanceCount', 'DesiredWeight', 'DataCaptureConfig').
    Endpoint:
      type: object
      properties:
        DeploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
          description: Specifies deployment configuration for updating the SageMaker endpoint. Includes rollback and update policies.
        EndpointArn:
          type: string
          description: The Amazon Resource Name (ARN) of the endpoint.
        EndpointConfigName:
          type: string
          description: The name of the endpoint configuration for the SageMaker endpoint. This is a required property.
        EndpointName:
          type: string
          description: The name of the SageMaker endpoint. This name must be unique within an AWS Region.
        ExcludeRetainedVariantProperties:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VariantProperty'
          description: Specifies a list of variant properties that you want to exclude when updating an endpoint.
        RetainAllVariantProperties:
          type: boolean
          description: When set to true, retains all variant properties for an endpoint when it is updated.
        RetainDeploymentConfig:
          type: boolean
          description: When set to true, retains the deployment configuration during endpoint updates.
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
          description: An array of key-value pairs to apply to this resource.
      required:
        - EndpointConfigName
      x-stackql-resource-name: endpoint
      description: Resource Type definition for AWS::SageMaker::Endpoint
      x-type-name: AWS::SageMaker::Endpoint
      x-stackql-primary-identifier:
        - EndpointArn
      x-create-only-properties:
        - EndpointName
      x-write-only-properties:
        - ExcludeRetainedVariantProperties
        - RetainAllVariantProperties
        - RetainDeploymentConfig
      x-read-only-properties:
        - EndpointArn
        - EndpointName
      x-required-properties:
        - EndpointConfigName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - sagemaker:ListTags
      x-required-permissions:
        create:
          - sagemaker:CreateEndpoint
          - sagemaker:DescribeEndpoint
          - sagemaker:AddTags
        read:
          - sagemaker:DescribeEndpoint
          - sagemaker:ListTags
        update:
          - sagemaker:UpdateEndpoint
          - sagemaker:DescribeEndpoint
          - sagemaker:AddTags
          - sagemaker:DeleteTags
        delete:
          - sagemaker:DeleteEndpoint
          - sagemaker:DescribeEndpoint
        list:
          - sagemaker:ListEndpoints
    FeatureDefinition:
      type: object
      additionalProperties: false
      properties:
        FeatureName:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        FeatureType:
          type: string
          enum:
            - Integral
            - Fractional
            - String
      required:
        - FeatureName
        - FeatureType
    KmsKeyId:
      type: string
      maxLength: 2048
    StorageType:
      type: string
      enum:
        - Standard
        - InMemory
    TtlDuration:
      type: object
      description: TTL configuration of the feature group
      additionalProperties: false
      properties:
        Unit:
          $ref: '#/components/schemas/Unit'
        Value:
          $ref: '#/components/schemas/Value'
    Unit:
      type: string
      description: Unit of ttl configuration
      enum:
        - Seconds
        - Minutes
        - Hours
        - Days
        - Weeks
    Value:
      type: integer
      description: Value of ttl configuration
    OnlineStoreSecurityConfig:
      type: object
      additionalProperties: false
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
    S3StorageConfig:
      type: object
      additionalProperties: false
      properties:
        S3Uri:
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
      required:
        - S3Uri
    DataCatalogConfig:
      type: object
      additionalProperties: false
      properties:
        TableName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\t]*"
        Catalog:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\t]*"
        Database:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\t]*"
      required:
        - TableName
        - Catalog
        - Database
    TableFormat:
      type: string
      description: Format for the offline store feature group. Iceberg is the optimal format for feature groups shared between offline and online stores.
      enum:
        - Iceberg
        - Glue
    ThroughputMode:
      type: string
      description: Throughput mode configuration of the feature group
      enum:
        - OnDemand
        - Provisioned
    ThroughputConfig:
      type: object
      additionalProperties: false
      properties:
        ThroughputMode:
          $ref: '#/components/schemas/ThroughputMode'
        ProvisionedReadCapacityUnits:
          type: integer
          description: For provisioned feature groups with online store enabled, this indicates the read throughput you are billed for and can consume without throttling.
        ProvisionedWriteCapacityUnits:
          type: integer
          description: For provisioned feature groups, this indicates the write throughput you are billed for and can consume without throttling.
      required:
        - ThroughputMode
    FeatureGroup:
      type: object
      properties:
        FeatureGroupName:
          type: string
          description: The Name of the FeatureGroup.
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        RecordIdentifierFeatureName:
          type: string
          description: The Record Identifier Feature Name.
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        EventTimeFeatureName:
          type: string
          description: The Event Time Feature Name.
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        FeatureDefinitions:
          type: array
          description: An Array of Feature Definition
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 2500
          items:
            $ref: '#/components/schemas/FeatureDefinition'
        OnlineStoreConfig:
          type: object
          additionalProperties: false
          properties:
            SecurityConfig:
              $ref: '#/components/schemas/OnlineStoreSecurityConfig'
            EnableOnlineStore:
              type: boolean
            StorageType:
              $ref: '#/components/schemas/StorageType'
            TtlDuration:
              $ref: '#/components/schemas/TtlDuration'
        OfflineStoreConfig:
          type: object
          additionalProperties: false
          properties:
            S3StorageConfig:
              $ref: '#/components/schemas/S3StorageConfig'
            DisableGlueTableCreation:
              type: boolean
            DataCatalogConfig:
              $ref: '#/components/schemas/DataCatalogConfig'
            TableFormat:
              $ref: '#/components/schemas/TableFormat'
          required:
            - S3StorageConfig
        ThroughputConfig:
          $ref: '#/components/schemas/ThroughputConfig'
        RoleArn:
          type: string
          description: Role Arn
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        Description:
          type: string
          description: Description about the FeatureGroup.
          maxLength: 128
        CreationTime:
          description: A timestamp of FeatureGroup creation time.
          type: string
        FeatureGroupStatus:
          description: The status of the feature group.
          type: string
        Tags:
          type: array
          description: An array of key-value pair to apply to this resource.
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - FeatureGroupName
        - RecordIdentifierFeatureName
        - EventTimeFeatureName
        - FeatureDefinitions
      x-stackql-resource-name: feature_group
      description: Resource Type definition for AWS::SageMaker::FeatureGroup
      x-type-name: AWS::SageMaker::FeatureGroup
      x-stackql-primary-identifier:
        - FeatureGroupName
      x-create-only-properties:
        - FeatureGroupName
        - RecordIdentifierFeatureName
        - EventTimeFeatureName
        - OnlineStoreConfig/SecurityConfig
        - OnlineStoreConfig/EnableOnlineStore
        - OnlineStoreConfig/StorageType
        - OfflineStoreConfig
        - RoleArn
        - Description
        - Tags
      x-read-only-properties:
        - CreationTime
        - FeatureGroupStatus
      x-required-properties:
        - FeatureGroupName
        - RecordIdentifierFeatureName
        - EventTimeFeatureName
        - FeatureDefinitions
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:PassRole
          - kms:CreateGrant
          - kms:DescribeKey
          - glue:CreateTable
          - glue:GetTable
          - glue:CreateDatabase
          - glue:GetDatabase
          - sagemaker:CreateFeatureGroup
          - sagemaker:DescribeFeatureGroup
          - sagemaker:AddTags
          - sagemaker:ListTags
        update:
          - sagemaker:UpdateFeatureGroup
          - sagemaker:DescribeFeatureGroup
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
        read:
          - sagemaker:DescribeFeatureGroup
          - sagemaker:ListTags
        delete:
          - sagemaker:DeleteFeatureGroup
          - sagemaker:DescribeFeatureGroup
        list:
          - sagemaker:ListFeatureGroups
    ImageName:
      type: string
      description: The name of the image this version belongs to.
      pattern: ^[A-Za-z0-9]([-.]?[A-Za-z0-9])*$
      minLength: 1
      maxLength: 63
    ImageArn:
      type: string
      description: The Amazon Resource Name (ARN) of the parent image.
      minLength: 1
      maxLength: 256
      pattern: ^arn:aws(-[\w]+)*:sagemaker:[a-z0-9\-]*:[0-9]{12}:image\/[a-zA-Z0-9]([-.]?[a-zA-Z0-9])*$
    ImageRoleArn:
      description: The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on behalf of the customer.
      type: string
      minLength: 1
      maxLength: 256
      pattern: ^arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*$
    ImageDisplayName:
      type: string
      description: The display name of the image.
      pattern: ^[A-Za-z0-9 -_]+$
      minLength: 1
      maxLength: 128
    ImageDescription:
      type: string
      description: A description of the image.
      pattern: .+
      minLength: 1
      maxLength: 512
    Image:
      type: object
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
        ImageRoleArn:
          $ref: '#/components/schemas/ImageRoleArn'
        ImageDisplayName:
          $ref: '#/components/schemas/ImageDisplayName'
        ImageDescription:
          $ref: '#/components/schemas/ImageDescription'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ImageName
        - ImageRoleArn
      x-stackql-resource-name: image
      description: Resource Type definition for AWS::SageMaker::Image
      x-type-name: AWS::SageMaker::Image
      x-stackql-primary-identifier:
        - ImageArn
      x-stackql-additional-identifiers:
        - - ImageName
      x-create-only-properties:
        - ImageName
      x-read-only-properties:
        - ImageArn
      x-required-properties:
        - ImageName
        - ImageRoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - sagemaker:CreateImage
          - sagemaker:DescribeImage
          - iam:PassRole
          - sagemaker:AddTags
          - sagemaker:ListTags
        read:
          - sagemaker:DescribeImage
          - sagemaker:ListTags
        update:
          - sagemaker:UpdateImage
          - sagemaker:DescribeImage
          - sagemaker:ListTags
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - iam:PassRole
        delete:
          - sagemaker:DeleteImage
          - sagemaker:DescribeImage
        list:
          - sagemaker:ListImages
    ImageVersionArn:
      type: string
      description: The Amazon Resource Name (ARN) of the image version.
      minLength: 1
      maxLength: 256
      pattern: ^arn:aws(-[\w]+)*:sagemaker:[a-z0-9\-]*:[0-9]{12}:image-version\/[a-zA-Z0-9]([-.]?[a-zA-Z0-9])*\/[0-9]+$
    BaseImage:
      type: string
      description: The registry path of the container image on which this image version is based.
      minLength: 1
      maxLength: 255
      pattern: .+
    ContainerImage:
      description: The image to use for the container that will be materialized for the inference component
      type: string
      pattern: '[\S]+'
      maxLength: 255
    Alias:
      type: string
      description: The alias of the image version.
      minLength: 1
      maxLength: 128
      pattern: (?!^[.-])^([a-zA-Z0-9-_.]+)$
    Aliases:
      type: array
      description: List of aliases for the image version.
      items:
        $ref: '#/components/schemas/Alias'
    Version:
      type: integer
      description: The version number of the image version.
      minimum: 1
    VendorGuidance:
      type: string
      description: The availability of the image version specified by the maintainer.
      enum:
        - NOT_PROVIDED
        - STABLE
        - TO_BE_ARCHIVED
        - ARCHIVED
    JobType:
      type: string
      description: Indicates SageMaker job type compatibility.
      enum:
        - TRAINING
        - INFERENCE
        - NOTEBOOK_KERNEL
    MLFramework:
      type: string
      description: The machine learning framework vended in the image version.
      pattern: ^[a-zA-Z]+ ?\d+\.\d+(\.\d+)?$
      minLength: 1
      maxLength: 128
    ProgrammingLang:
      type: string
      description: The supported programming language and its version.
      pattern: ^[a-zA-Z]+ ?\d+\.\d+(\.\d+)?$
      minLength: 1
      maxLength: 128
    Processor:
      type: string
      description: Indicates CPU or GPU compatibility.
      enum:
        - CPU
        - GPU
    Horovod:
      type: boolean
      description: Indicates Horovod compatibility.
    ReleaseNotes:
      type: string
      description: The maintainer description of the image version.
      pattern: .*
      minLength: 1
      maxLength: 255
    ImageVersion:
      type: object
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
        ImageVersionArn:
          $ref: '#/components/schemas/ImageVersionArn'
        BaseImage:
          $ref: '#/components/schemas/BaseImage'
        ContainerImage:
          $ref: '#/components/schemas/ContainerImage'
        Version:
          $ref: '#/components/schemas/Version'
        Alias:
          $ref: '#/components/schemas/Alias'
        Aliases:
          $ref: '#/components/schemas/Aliases'
        VendorGuidance:
          $ref: '#/components/schemas/VendorGuidance'
        JobType:
          $ref: '#/components/schemas/JobType'
        MLFramework:
          $ref: '#/components/schemas/MLFramework'
        ProgrammingLang:
          $ref: '#/components/schemas/ProgrammingLang'
        Processor:
          $ref: '#/components/schemas/Processor'
        Horovod:
          $ref: '#/components/schemas/Horovod'
        ReleaseNotes:
          $ref: '#/components/schemas/ReleaseNotes'
      required:
        - ImageName
        - BaseImage
      x-stackql-resource-name: image_version
      description: Resource Type definition for AWS::SageMaker::ImageVersion
      x-type-name: AWS::SageMaker::ImageVersion
      x-stackql-primary-identifier:
        - ImageVersionArn
      x-create-only-properties:
        - ImageName
        - BaseImage
      x-write-only-properties:
        - Aliases
        - Alias
      x-read-only-properties:
        - ImageVersionArn
        - ImageArn
        - Version
        - ContainerImage
      x-required-properties:
        - ImageName
        - BaseImage
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - sagemaker:CreateImageVersion
          - sagemaker:DescribeImageVersion
        read:
          - sagemaker:DescribeImageVersion
        update:
          - sagemaker:UpdateImageVersion
          - sagemaker:DescribeImageVersion
          - sagemaker:ListAliases
        delete:
          - sagemaker:DeleteImageVersion
          - sagemaker:DescribeImageVersion
        list:
          - sagemaker:ListImageVersions
    InferenceComponentArn:
      description: The Amazon Resource Name (ARN) of the inference component
      type: string
      minLength: 1
      maxLength: 256
    InferenceComponentName:
      description: The name of the inference component
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    EndpointArn:
      description: The Amazon Resource Name (ARN) of the endpoint the inference component is associated with
      type: string
      minLength: 1
      maxLength: 256
    VariantName:
      description: The name of the endpoint variant the inference component is associated with
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    FailureReason:
      description: The failure reason if the inference component is in a failed state
      type: string
      maxLength: 63
    ModelName:
      description: The name of the model to use with the inference component
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    Timestamp:
      type: string
    DeployedImage:
      description: ''
      type: object
      additionalProperties: false
      properties:
        SpecifiedImage:
          $ref: '#/components/schemas/ContainerImage'
        ResolvedImage:
          $ref: '#/components/schemas/ContainerImage'
        ResolutionTime:
          $ref: '#/components/schemas/Timestamp'
    Url:
      type: string
      pattern: ^(https|s3)://([^/]+)/?(.*)$
      maxLength: 1024
    EnvironmentMap:
      description: Environment variables to specify on the container
      type: object
      additionalProperties: false
      maxProperties: 16
      x-patternProperties:
        ^[a-zA-Z_][a-zA-Z0-9_]{1,1024}$:
          type: string
          pattern: ^[\S\s]*$
          maxLength: 1024
    InferenceComponentContainerSpecification:
      description: ''
      type: object
      additionalProperties: false
      properties:
        DeployedImage:
          $ref: '#/components/schemas/DeployedImage'
        Image:
          $ref: '#/components/schemas/ContainerImage'
        ArtifactUrl:
          $ref: '#/components/schemas/Url'
        Environment:
          $ref: '#/components/schemas/EnvironmentMap'
    StartupParameterTimeoutInSeconds:
      type: integer
      minimum: 60
      maximum: 3600
    BaseInferenceComponentName:
      description: The name of the base inference component
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    InferenceComponentStartupParameters:
      description: ''
      type: object
      additionalProperties: false
      properties:
        ModelDataDownloadTimeoutInSeconds:
          $ref: '#/components/schemas/StartupParameterTimeoutInSeconds'
        ContainerStartupHealthCheckTimeoutInSeconds:
          $ref: '#/components/schemas/StartupParameterTimeoutInSeconds'
    NumberOfCpuCores:
      type: number
      minimum: 0.25
    NumberOfAcceleratorDevices:
      type: number
      minimum: 1
    MemoryInMb:
      type: integer
      minimum: 128
    InferenceComponentComputeResourceRequirements:
      description: ''
      type: object
      additionalProperties: false
      properties:
        NumberOfCpuCoresRequired:
          $ref: '#/components/schemas/NumberOfCpuCores'
        NumberOfAcceleratorDevicesRequired:
          $ref: '#/components/schemas/NumberOfAcceleratorDevices'
        MinMemoryRequiredInMb:
          $ref: '#/components/schemas/MemoryInMb'
        MaxMemoryRequiredInMb:
          $ref: '#/components/schemas/MemoryInMb'
    InferenceComponentSpecification:
      description: The specification for the inference component
      type: object
      additionalProperties: false
      properties:
        ModelName:
          $ref: '#/components/schemas/ModelName'
        BaseInferenceComponentName:
          $ref: '#/components/schemas/BaseInferenceComponentName'
        Container:
          $ref: '#/components/schemas/InferenceComponentContainerSpecification'
        StartupParameters:
          $ref: '#/components/schemas/InferenceComponentStartupParameters'
        ComputeResourceRequirements:
          $ref: '#/components/schemas/InferenceComponentComputeResourceRequirements'
    InferenceComponentCopyCount:
      description: The number of copies for the inference component
      type: integer
      minimum: 0
    InferenceComponentRuntimeConfig:
      description: The runtime config for the inference component
      type: object
      additionalProperties: false
      properties:
        CopyCount:
          $ref: '#/components/schemas/InferenceComponentCopyCount'
        DesiredCopyCount:
          $ref: '#/components/schemas/InferenceComponentCopyCount'
        CurrentCopyCount:
          $ref: '#/components/schemas/InferenceComponentCopyCount'
    InferenceComponentStatus:
      type: string
      enum:
        - InService
        - Creating
        - Updating
        - Failed
        - Deleting
    TagList:
      type: array
      maxItems: 50
      description: An array of tags to apply to the resource
      items:
        $ref: '#/components/schemas/Tag'
    InferenceComponent:
      type: object
      properties:
        InferenceComponentArn:
          $ref: '#/components/schemas/InferenceComponentArn'
        InferenceComponentName:
          $ref: '#/components/schemas/InferenceComponentName'
        EndpointArn:
          $ref: '#/components/schemas/EndpointArn'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        VariantName:
          $ref: '#/components/schemas/VariantName'
        FailureReason:
          $ref: '#/components/schemas/FailureReason'
        Specification:
          $ref: '#/components/schemas/InferenceComponentSpecification'
        RuntimeConfig:
          $ref: '#/components/schemas/InferenceComponentRuntimeConfig'
        InferenceComponentStatus:
          $ref: '#/components/schemas/InferenceComponentStatus'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
        LastModifiedTime:
          $ref: '#/components/schemas/Timestamp'
        Tags:
          $ref: '#/components/schemas/TagList'
      required:
        - EndpointName
        - Specification
      x-stackql-resource-name: inference_component
      description: Resource Type definition for AWS::SageMaker::InferenceComponent
      x-type-name: AWS::SageMaker::InferenceComponent
      x-stackql-primary-identifier:
        - InferenceComponentArn
      x-write-only-properties:
        - Specification/Container/Image
        - RuntimeConfig/CopyCount
      x-read-only-properties:
        - InferenceComponentArn
        - Specification/Container/DeployedImage
        - RuntimeConfig/DesiredCopyCount
        - RuntimeConfig/CurrentCopyCount
        - CreationTime
        - LastModifiedTime
        - FailureReason
        - InferenceComponentStatus
      x-required-properties:
        - EndpointName
        - Specification
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:CreateInferenceComponent
          - sagemaker:DescribeInferenceComponent
        update:
          - sagemaker:UpdateInferenceComponent
          - sagemaker:UpdateInferenceComponentRuntimeConfig
          - sagemaker:DescribeInferenceComponent
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
        delete:
          - sagemaker:DescribeInferenceComponent
          - sagemaker:DeleteInferenceComponent
          - sagemaker:DeleteTags
        read:
          - sagemaker:DescribeInferenceComponent
          - sagemaker:ListTags
        list:
          - sagemaker:ListInferenceComponents
          - sagemaker:DescribeInferenceComponent
          - sagemaker:ListTags
    EndpointMetadata:
      description: The metadata of the endpoint on which the inference experiment ran.
      type: object
      additionalProperties: false
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        EndpointConfigName:
          description: The name of the endpoint configuration.
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
          maxLength: 63
        EndpointStatus:
          description: The status of the endpoint. For possible values of the status of an endpoint.
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
          enum:
            - Creating
            - Updating
            - SystemUpdating
            - RollingBack
            - InService
            - OutOfService
            - Deleting
            - Failed
      required:
        - EndpointName
    CaptureContentTypeHeader:
      description: Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
      type: object
      additionalProperties: false
      properties:
        CsvContentTypes:
          description: The list of all content type headers that SageMaker will treat as CSV and capture accordingly.
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
            pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*/[a-zA-Z0-9](-*[a-zA-Z0-9.])*
            minLength: 1
            maxLength: 256
        JsonContentTypes:
          description: The list of all content type headers that SageMaker will treat as JSON and capture accordingly.
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
            pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*/[a-zA-Z0-9](-*[a-zA-Z0-9.])*
            minLength: 1
            maxLength: 256
    DataStorageConfig:
      description: The Amazon S3 location and configuration for storing inference request and response data.
      type: object
      additionalProperties: false
      properties:
        Destination:
          description: The Amazon S3 bucket where the inference request and response data is stored.
          type: string
          pattern: ^(https|s3)://([^/])/?(.*)$
          maxLength: 512
        KmsKey:
          description: The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
          type: string
          pattern: .*
          maxLength: 2048
        ContentType:
          $ref: '#/components/schemas/CaptureContentTypeHeader'
      required:
        - Destination
    InferenceExperimentSchedule:
      description: The duration for which you want the inference experiment to run.
      type: object
      additionalProperties: false
      properties:
        StartTime:
          description: The timestamp at which the inference experiment started or will start.
          type: string
        EndTime:
          description: The timestamp at which the inference experiment ended or will end.
          type: string
    RealTimeInferenceConfig:
      description: The infrastructure configuration for deploying the model to a real-time inference endpoint.
      type: object
      additionalProperties: false
      properties:
        InstanceType:
          description: The instance type the model is deployed to.
          type: string
        InstanceCount:
          description: The number of instances of the type specified by InstanceType.
          type: integer
      required:
        - InstanceType
        - InstanceCount
    ModelInfrastructureConfig:
      description: The configuration for the infrastructure that the model will be deployed to.
      type: object
      additionalProperties: false
      properties:
        InfrastructureType:
          description: The type of the inference experiment that you want to run.
          type: string
          enum:
            - RealTimeInference
        RealTimeInferenceConfig:
          $ref: '#/components/schemas/RealTimeInferenceConfig'
      required:
        - InfrastructureType
        - RealTimeInferenceConfig
    ModelVariantConfig:
      description: Contains information about the deployment options of a model.
      type: object
      additionalProperties: false
      properties:
        ModelName:
          description: The name of the Amazon SageMaker Model entity.
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
          maxLength: 63
        VariantName:
          description: The name of the variant.
          type: string
          pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
          maxLength: 63
        InfrastructureConfig:
          $ref: '#/components/schemas/ModelInfrastructureConfig'
      required:
        - ModelName
        - VariantName
        - InfrastructureConfig
    ShadowModelVariantConfig:
      description: The name and sampling percentage of a shadow variant.
      type: object
      additionalProperties: false
      properties:
        ShadowModelVariantName:
          description: The name of the shadow variant.
          type: string
          pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
          maxLength: 63
        SamplingPercentage:
          description: The percentage of inference requests that Amazon SageMaker replicates from the production variant to the shadow variant.
          type: integer
          maximum: 100
      required:
        - ShadowModelVariantName
        - SamplingPercentage
    ShadowModeConfig:
      description: The configuration of ShadowMode inference experiment type. Use this field to specify a production variant which takes all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant also specify the percentage of requests that Amazon SageMaker replicates.
      type: object
      additionalProperties: false
      properties:
        SourceModelVariantName:
          description: The name of the production variant, which takes all the inference requests.
          type: string
          pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
          maxLength: 63
        ShadowModelVariants:
          description: List of shadow variant configurations.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/ShadowModelVariantConfig'
      required:
        - SourceModelVariantName
        - ShadowModelVariants
    InferenceExperiment:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the inference experiment.
          type: string
          pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:inference-experiment/[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 256
        Name:
          description: The name for the inference experiment.
          type: string
          minLength: 1
          maxLength: 120
        Type:
          description: The type of the inference experiment that you want to run.
          type: string
          enum:
            - ShadowMode
        Description:
          description: The description of the inference experiment.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 1024
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        EndpointMetadata:
          $ref: '#/components/schemas/EndpointMetadata'
        Schedule:
          $ref: '#/components/schemas/InferenceExperimentSchedule'
        KmsKey:
          type: string
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
          pattern: .*
          maxLength: 2048
        DataStorageConfig:
          $ref: '#/components/schemas/DataStorageConfig'
        ModelVariants:
          type: array
          description: An array of ModelVariantConfig objects. Each ModelVariantConfig object in the array describes the infrastructure configuration for the corresponding variant.
          maxItems: 2
          items:
            $ref: '#/components/schemas/ModelVariantConfig'
        ShadowModeConfig:
          $ref: '#/components/schemas/ShadowModeConfig'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The timestamp at which you created the inference experiment.
          type: string
        LastModifiedTime:
          description: The timestamp at which you last modified the inference experiment.
          type: string
        Status:
          description: The status of the inference experiment.
          type: string
          enum:
            - Creating
            - Created
            - Updating
            - Starting
            - Stopping
            - Running
            - Completed
            - Cancelled
        StatusReason:
          description: The error message or client-specified reason from the StopInferenceExperiment API, that explains the status of the inference experiment.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 1024
        DesiredState:
          description: The desired state of the experiment after starting or stopping operation.
          type: string
          enum:
            - Running
            - Completed
            - Cancelled
      required:
        - Name
        - Type
        - RoleArn
        - EndpointName
        - ModelVariants
      x-stackql-resource-name: inference_experiment
      description: Resource Type definition for AWS::SageMaker::InferenceExperiment
      x-type-name: AWS::SageMaker::InferenceExperiment
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - Type
        - RoleArn
        - EndpointName
        - KmsKey
      x-read-only-properties:
        - Arn
        - CreationTime
        - LastModifiedTime
        - EndpointMetadata
        - Status
      x-required-properties:
        - Name
        - Type
        - RoleArn
        - EndpointName
        - ModelVariants
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - sagemaker:CreateInferenceExperiment
          - sagemaker:DescribeInferenceExperiment
          - sagemaker:AddTags
          - sagemaker:ListTags
          - iam:PassRole
        delete:
          - sagemaker:DeleteInferenceExperiment
          - sagemaker:DescribeInferenceExperiment
          - sagemaker:StopInferenceExperiment
          - sagemaker:ListTags
        list:
          - sagemaker:ListInferenceExperiments
        read:
          - sagemaker:DescribeInferenceExperiment
          - sagemaker:ListTags
        update:
          - sagemaker:UpdateInferenceExperiment
          - sagemaker:StartInferenceExperiment
          - sagemaker:StopInferenceExperiment
          - sagemaker:DescribeInferenceExperiment
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - sagemaker:ListTags
    MlflowTrackingServer:
      type: object
      properties:
        TrackingServerName:
          type: string
          description: The name of the MLFlow Tracking Server.
          minLength: 1
          maxLength: 256
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,255}$
        TrackingServerArn:
          description: The Amazon Resource Name (ARN) of the MLFlow Tracking Server.
          type: string
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:mlflow-tracking-server/.*$
        TrackingServerSize:
          type: string
          description: The size of the MLFlow Tracking Server.
          enum:
            - Small
            - Medium
            - Large
        MlflowVersion:
          type: string
          description: The MLFlow Version used on the MLFlow Tracking Server.
          minLength: 1
          maxLength: 32
          pattern: ^\d+(\.\d+)+$
        RoleArn:
          type: string
          description: The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on behalf of the customer.
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role\/?[a-zA-Z_0-9+=,.@\-_\/]+$
        ArtifactStoreUri:
          type: string
          description: The Amazon S3 URI for MLFlow Tracking Server artifacts.
          minLength: 1
          maxLength: 2048
          pattern: ^s3:\/\/([^\/]+)\/?(.*)$
        AutomaticModelRegistration:
          type: boolean
          description: A flag to enable Automatic SageMaker Model Registration.
        WeeklyMaintenanceWindowStart:
          type: string
          description: The start of the time window for maintenance of the MLFlow Tracking Server in UTC time.
          pattern: ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):([01]\d|2[0-3]):([0-5]\d)$
          maxLength: 9
        Tags:
          type: array
          minItems: 1
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TrackingServerName
        - ArtifactStoreUri
        - RoleArn
      x-stackql-resource-name: mlflow_tracking_server
      description: Resource Type definition for AWS::SageMaker::MlflowTrackingServer
      x-type-name: AWS::SageMaker::MlflowTrackingServer
      x-stackql-primary-identifier:
        - TrackingServerName
      x-create-only-properties:
        - TrackingServerName
      x-conditional-create-only-properties:
        - MlflowVersion
        - RoleArn
      x-read-only-properties:
        - TrackingServerArn
      x-required-properties:
        - TrackingServerName
        - ArtifactStoreUri
        - RoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
      x-required-permissions:
        create:
          - sagemaker:CreateMlflowTrackingServer
          - sagemaker:DescribeMlflowTrackingServer
          - sagemaker:AddTags
          - sagemaker:ListTags
          - iam:PassRole
        read:
          - sagemaker:DescribeMlflowTrackingServer
          - sagemaker:ListTags
        update:
          - sagemaker:UpdateMlflowTrackingServer
          - sagemaker:DescribeMlflowTrackingServer
          - sagemaker:ListTags
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - iam:PassRole
        delete:
          - sagemaker:DeleteMlflowTrackingServer
          - sagemaker:DescribeMlflowTrackingServer
        list:
          - sagemaker:ListMlflowTrackingServers
    ModelBiasBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
    ModelBiasAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        ConfigUri:
          description: The S3 URI to an analysis configuration file
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
      required:
        - ImageUri
        - ConfigUri
    ModelBiasJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
        GroundTruthS3Input:
          $ref: '#/components/schemas/MonitoringGroundTruthS3Input'
      required:
        - GroundTruthS3Input
    MonitoringTimeOffsetString:
      type: string
      description: The time offsets in ISO duration format
      pattern: ^.?P.*
      minLength: 1
      maxLength: 15
    MonitoringGroundTruthS3Input:
      type: object
      additionalProperties: false
      description: 'Ground truth input provided in S3 '
      properties:
        S3Uri:
          type: string
          description: A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 512
      required:
        - S3Uri
    ModelBiasJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        ModelBiasBaselineConfig:
          $ref: '#/components/schemas/ModelBiasBaselineConfig'
        ModelBiasAppSpecification:
          $ref: '#/components/schemas/ModelBiasAppSpecification'
        ModelBiasJobInput:
          $ref: '#/components/schemas/ModelBiasJobInput'
        ModelBiasJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - ModelBiasAppSpecification
        - ModelBiasJobInput
        - ModelBiasJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: model_bias_job_definition
      description: Resource Type definition for AWS::SageMaker::ModelBiasJobDefinition
      x-type-name: AWS::SageMaker::ModelBiasJobDefinition
      x-stackql-primary-identifier:
        - JobDefinitionArn
      x-create-only-properties:
        - JobDefinitionName
        - ModelBiasAppSpecification
        - ModelBiasBaselineConfig
        - ModelBiasJobInput
        - ModelBiasJobOutputConfig
        - JobResources
        - NetworkConfig
        - RoleArn
        - StoppingCondition
        - Tags
        - EndpointName
      x-write-only-properties:
        - EndpointName
        - Tags
        - Tags/*/Key
        - Tags/*/Value
      x-read-only-properties:
        - CreationTime
        - JobDefinitionArn
      x-required-properties:
        - ModelBiasAppSpecification
        - ModelBiasJobInput
        - ModelBiasJobOutputConfig
        - JobResources
        - RoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
      x-required-permissions:
        create:
          - sagemaker:CreateModelBiasJobDefinition
          - sagemaker:DescribeModelBiasJobDefinition
          - iam:PassRole
          - sagemaker:AddTags
        delete:
          - sagemaker:DeleteModelBiasJobDefinition
        read:
          - sagemaker:DescribeModelBiasJobDefinition
        list:
          - sagemaker:ListModelBiasJobDefinitions
          - sagemaker:ListTags
    SecurityConfig:
      description: An optional AWS Key Management Service key to encrypt, decrypt, and re-encrypt model package information for regulated workloads with highly sensitive data.
      type: object
      additionalProperties: false
      properties:
        KmsKeyId:
          description: The AWS KMS Key ID (KMSKeyId) used for encryption of model package information.
          type: string
          maxLength: 2048
          pattern: ^[a-zA-Z0-9:/_-]*$
      required:
        - KmsKeyId
    UserContext:
      description: Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
      type: object
      additionalProperties: false
      properties:
        UserProfileArn:
          description: The Amazon Resource Name (ARN) of the user's profile.
          type: string
          default: UnsetValue
        UserProfileName:
          description: The name of the user's profile.
          type: string
          default: UnsetValue
        DomainId:
          description: The domain associated with the user.
          type: string
          default: UnsetValue
    Content:
      type: object
      description: The content of the model card.
      additionalProperties: false
      properties:
        ModelOverview:
          $ref: '#/components/schemas/ModelOverview'
        ModelPackageDetails:
          $ref: '#/components/schemas/ModelPackageDetails'
        IntendedUses:
          $ref: '#/components/schemas/IntendedUses'
        BusinessDetails:
          $ref: '#/components/schemas/BusinessDetails'
        TrainingDetails:
          $ref: '#/components/schemas/TrainingDetails'
        EvaluationDetails:
          $ref: '#/components/schemas/EvaluationDetails'
        AdditionalInformation:
          $ref: '#/components/schemas/AdditionalInformation'
    ModelOverview:
      type: object
      description: Overview about the model.
      additionalProperties: false
      properties:
        ModelDescription:
          description: description of model.
          type: string
          maxLength: 1024
        ModelOwner:
          description: Owner of model.
          type: string
          maxLength: 1024
        ModelCreator:
          description: Creator of model.
          type: string
          maxLength: 1024
        ProblemType:
          description: Problem being solved with the model.
          type: string
          maxLength: 1024
        AlgorithmType:
          description: Algorithm used to solve the problem.
          type: string
          maxLength: 1024
        ModelId:
          description: SageMaker Model Arn or Non SageMaker Model id.
          type: string
          maxLength: 1024
        ModelArtifact:
          description: Location of the model artifact.
          type: array
          x-insertionOrder: true
          maxItems: 15
          items:
            type: string
            maxLength: 1024
        ModelName:
          description: Name of the model.
          type: string
          maxLength: 1024
        ModelVersion:
          description: Version of the model.
          type: number
          minimum: 1
        InferenceEnvironment:
          description: Overview about the inference.
          type: object
          additionalProperties: false
          properties:
            ContainerImage:
              description: SageMaker inference image uri.
              type: array
              x-insertionOrder: true
              maxItems: 15
              items:
                type: string
                maxLength: 1024
    ModelPackageDetails:
      description: Metadata information related to model package version
      type: object
      additionalProperties: false
      properties:
        ModelPackageDescription:
          description: A brief summary of the model package
          type: string
          maxLength: 1024
        ModelPackageArn:
          description: The Amazon Resource Name (ARN) of the model package
          type: string
          minLength: 1
          maxLength: 2048
        CreatedBy:
          description: Information about the user who created model package.
          $ref: '#/components/schemas/ModelPackageCreator'
        ModelPackageStatus:
          description: Current status of model package
          type: string
          enum:
            - Pending
            - InProgress
            - Completed
            - Failed
            - Deleting
        ModelApprovalStatus:
          description: Current approval status of model package
          type: string
          enum:
            - Approved
            - Rejected
            - PendingManualApproval
        ApprovalDescription:
          description: A description provided for the model approval
          type: string
          maxLength: 1024
        ModelPackageGroupName:
          description: If the model is a versioned model, the name of the model group that the versioned model belongs to.
          type: string
          minLength: 1
          maxLength: 63
        ModelPackageName:
          description: Name of the model package
          type: string
          minLength: 1
          maxLength: 63
        ModelPackageVersion:
          description: Version of the model package
          type: number
          minimum: 1
        Domain:
          description: The machine learning domain of the model package you specified. Common machine learning domains include computer vision and natural language processing.
          type: string
        Task:
          description: The machine learning task you specified that your model package accomplishes. Common machine learning tasks include object detection and image classification.
          type: string
        SourceAlgorithms:
          description: A list of algorithms that were used to create a model package.
          $ref: '#/components/schemas/SourceAlgorithms'
        InferenceSpecification:
          description: Details about inference jobs that can be run with models based on this model package.
          $ref: '#/components/schemas/InferenceSpecification'
    IntendedUses:
      description: Intended usage of model.
      type: object
      additionalProperties: false
      properties:
        PurposeOfModel:
          description: Why the model was developed?
          type: string
          maxLength: 2048
        IntendedUses:
          description: intended use cases.
          type: string
          maxLength: 2048
        FactorsAffectingModelEfficiency:
          type: string
          maxLength: 2048
        RiskRating:
          $ref: '#/components/schemas/RiskRating'
        ExplanationsForRiskRating:
          type: string
          maxLength: 2048
    BusinessDetails:
      description: Business details.
      type: object
      additionalProperties: false
      properties:
        BusinessProblem:
          type: string
          description: What business problem does the model solve?
          maxLength: 2048
        BusinessStakeholders:
          type: string
          description: Business stakeholders.
          maxLength: 2048
        LineOfBusiness:
          type: string
          description: Line of business.
          maxLength: 2048
    TrainingDetails:
      description: Overview about the training.
      type: object
      additionalProperties: false
      properties:
        ObjectiveFunction:
          $ref: '#/components/schemas/ObjectiveFunction'
        TrainingObservations:
          type: string
          maxLength: 1024
        TrainingJobDetails:
          type: object
          additionalProperties: false
          properties:
            TrainingArn:
              description: SageMaker Training job arn.
              type: string
              maxLength: 1024
            TrainingDatasets:
              description: Location of the model datasets.
              type: array
              x-insertionOrder: true
              maxItems: 15
              items:
                type: string
                maxLength: 1024
            TrainingEnvironment:
              type: object
              additionalProperties: false
              properties:
                ContainerImage:
                  description: SageMaker training image uri.
                  type: array
                  x-insertionOrder: true
                  maxItems: 15
                  items:
                    type: string
                    maxLength: 1024
            TrainingMetrics:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 50
                $ref: '#/components/schemas/TrainingMetric'
            UserProvidedTrainingMetrics:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 50
                $ref: '#/components/schemas/TrainingMetric'
            HyperParameters:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 100
                $ref: '#/components/schemas/TrainingHyperParameter'
            UserProvidedHyperParameters:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 100
                $ref: '#/components/schemas/TrainingHyperParameter'
    EvaluationDetails:
      type: array
      default: []
      x-insertionOrder: true
      items:
        $ref: '#/components/schemas/EvaluationDetail'
    EvaluationDetail:
      description: item of evaluation details
      type: object
      required:
        - Name
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,63}
        EvaluationObservation:
          type: string
          maxLength: 2096
        EvaluationJobArn:
          type: string
          maxLength: 256
        Datasets:
          type: array
          x-insertionOrder: true
          items:
            type: string
            maxLength: 1024
          maxItems: 10
        Metadata:
          description: additional attributes associated with the evaluation results.
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              maxLength: 1024
        MetricGroups:
          type: array
          x-insertionOrder: true
          default: []
          items:
            $ref: '#/components/schemas/MetricGroup'
    MetricGroup:
      type: object
      description: item in metric groups
      additionalProperties: false
      required:
        - Name
        - MetricData
      properties:
        Name:
          type: string
          pattern: .{1,63}
        MetricData:
          type: array
          x-insertionOrder: true
          items:
            anyOf:
              - $ref: '#/components/schemas/SimpleMetric'
              - $ref: '#/components/schemas/LinearGraphMetric'
              - $ref: '#/components/schemas/BarChartMetric'
              - $ref: '#/components/schemas/MatrixMetric'
    AdditionalInformation:
      type: object
      additionalProperties: false
      properties:
        EthicalConsiderations:
          description: Any ethical considerations that the author wants to provide.
          type: string
          maxLength: 2048
        CaveatsAndRecommendations:
          description: Caveats and recommendations for people who might use this model in their applications.
          type: string
          maxLength: 2048
        CustomDetails:
          type: object
          description: customer details.
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              maxLength: 1024
    ModelPackageCreator:
      type: object
      additionalProperties: false
      properties:
        UserProfileName:
          description: The name of the user's profile in Studio
          type: string
          maxLength: 63
    SourceAlgorithms:
      type: array
      minItems: 1
      maxItems: 1
      x-insertionOrder: true
      items:
        $ref: '#/components/schemas/SourceAlgorithm'
    SourceAlgorithm:
      description: Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
      type: object
      additionalProperties: false
      properties:
        AlgorithmName:
          description: The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
          type: string
          minLength: 1
          maxLength: 170
          pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
        ModelDataUrl:
          description: The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - AlgorithmName
    InferenceSpecification:
      description: Details about inference jobs that can be run with models based on this model package.
      type: object
      additionalProperties: false
      properties:
        Containers:
          description: The Amazon ECR registry path of the Docker image that contains the inference code.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ModelPackageContainerDefinition'
          minItems: 1
          maxItems: 15
          x-insertionOrder: true
        SupportedContentTypes:
          description: The supported MIME types for the input data.
          type: array
          items:
            $ref: '#/components/schemas/ContentType'
          x-insertionOrder: true
        SupportedRealtimeInferenceInstanceTypes:
          description: A list of the instance types that are used to generate inferences in real-time
          type: array
          items:
            $ref: '#/components/schemas/InferenceInstanceType'
          x-insertionOrder: true
        SupportedResponseMIMETypes:
          description: The supported MIME types for the output data.
          type: array
          items:
            $ref: '#/components/schemas/ResponseMIMEType'
          x-insertionOrder: true
        SupportedTransformInstanceTypes:
          description: A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TransformInstanceType'
          x-insertionOrder: true
      required:
        - Containers
        - SupportedContentTypes
        - SupportedResponseMIMETypes
    Container:
      type: object
      additionalProperties: false
      required:
        - Image
      properties:
        ModelDataUrl:
          description: The Amazon S3 path where the model artifacts, which result from model training, are stored.
          type: string
          maxLength: 1024
        Image:
          description: Inference environment path. The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
          type: string
          maxLength: 255
        NearestModelName:
          description: The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
          type: string
    RiskRating:
      description: Risk rating of model.
      type: string
      enum:
        - High
        - Medium
        - Low
        - Unknown
    ObjectiveFunction:
      description: the objective function the model will optimize for.
      type: object
      additionalProperties: false
      properties:
        Function:
          description: objective function that training job is optimized for.
          type: object
          additionalProperties: false
          properties:
            Function:
              type: string
              enum:
                - Maximize
                - Minimize
            Facet:
              type: string
              maxLength: 63
            Condition:
              type: string
              maxLength: 63
        Notes:
          type: string
          maxLength: 1024
    TrainingMetric:
      description: training metric data.
      type: object
      required:
        - Name
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Value:
          type: number
    TrainingHyperParameter:
      description: training hyper parameter
      type: object
      required:
        - Name
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Value:
          type: string
          pattern: .{1,255}
    LinearGraphMetric:
      description: Linear graph metric.
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - linear_graph
        Value:
          anyOf:
            - type: array
              insertionOrder: true
              items:
                type: array
                insertionOrder: true
                items:
                  type: number
                minItems: 2
                maxItems: 2
              minItems: 1
        XAxisName:
          $ref: '#/components/schemas/AxisNameString'
        YAxisName:
          $ref: '#/components/schemas/AxisNameString'
    BarChartMetric:
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - bar_chart
        Value:
          anyOf:
            - type: array
              insertionOrder: true
              items:
                type: number
              minItems: 1
        XAxisName:
          $ref: '#/components/schemas/AxisNameArray'
        YAxisName:
          $ref: '#/components/schemas/AxisNameString'
    MatrixMetric:
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - matrix
        Value:
          anyOf:
            - type: array
              insertionOrder: true
              items:
                type: array
                insertionOrder: true
                items:
                  type: number
                minItems: 1
                maxItems: 20
              minItems: 1
              maxItems: 20
        XAxisName:
          $ref: '#/components/schemas/AxisNameArray'
        YAxisName:
          $ref: '#/components/schemas/AxisNameArray'
    SimpleMetric:
      description: metric data
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - number
            - string
            - boolean
        Value:
          anyOf:
            - type: number
            - type: string
              maxLength: 63
            - type: boolean
        XAxisName:
          $ref: '#/components/schemas/AxisNameString'
        YAxisName:
          $ref: '#/components/schemas/AxisNameString'
    AxisNameString:
      type: string
      maxLength: 63
    AxisNameArray:
      type: array
      x-insertionOrder: true
      items:
        type: string
        maxLength: 63
    ModelCard:
      description: The model card associated with the model package.
      type: object
      additionalProperties: false
      properties:
        ModelCardContent:
          description: The content of the model card.
          type: string
          minLength: 0
          maxLength: 100000
          pattern: .*
        ModelCardStatus:
          description: The approval status of the model card within your organization.
          type: string
          enum:
            - Draft
            - PendingReview
            - Approved
            - Archived
      required:
        - ModelCardContent
        - ModelCardStatus
    ModelExplainabilityBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
    ModelExplainabilityAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        ConfigUri:
          description: The S3 URI to an analysis configuration file
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
      required:
        - ImageUri
        - ConfigUri
    ModelExplainabilityJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
    ModelExplainabilityJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        ModelExplainabilityBaselineConfig:
          $ref: '#/components/schemas/ModelExplainabilityBaselineConfig'
        ModelExplainabilityAppSpecification:
          $ref: '#/components/schemas/ModelExplainabilityAppSpecification'
        ModelExplainabilityJobInput:
          $ref: '#/components/schemas/ModelExplainabilityJobInput'
        ModelExplainabilityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - ModelExplainabilityAppSpecification
        - ModelExplainabilityJobInput
        - ModelExplainabilityJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: model_explainability_job_definition
      description: Resource Type definition for AWS::SageMaker::ModelExplainabilityJobDefinition
      x-type-name: AWS::SageMaker::ModelExplainabilityJobDefinition
      x-stackql-primary-identifier:
        - JobDefinitionArn
      x-create-only-properties:
        - JobDefinitionName
        - ModelExplainabilityAppSpecification
        - ModelExplainabilityBaselineConfig
        - ModelExplainabilityJobInput
        - ModelExplainabilityJobOutputConfig
        - JobResources
        - NetworkConfig
        - RoleArn
        - StoppingCondition
        - Tags
        - EndpointName
      x-write-only-properties:
        - EndpointName
        - Tags
        - Tags/*/Key
        - Tags/*/Value
      x-read-only-properties:
        - CreationTime
        - JobDefinitionArn
      x-required-properties:
        - ModelExplainabilityAppSpecification
        - ModelExplainabilityJobInput
        - ModelExplainabilityJobOutputConfig
        - JobResources
        - RoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
      x-required-permissions:
        create:
          - sagemaker:CreateModelExplainabilityJobDefinition
          - sagemaker:DescribeModelExplainabilityJobDefinition
          - iam:PassRole
          - sagemaker:AddTags
        delete:
          - sagemaker:DeleteModelExplainabilityJobDefinition
        read:
          - sagemaker:DescribeModelExplainabilityJobDefinition
        list:
          - sagemaker:ListModelExplainabilityJobDefinitions
          - sagemaker:ListTags
    AdditionalInferenceSpecifications:
      type: array
      minItems: 1
      maxItems: 15
      description: An array of additional Inference Specification objects.
      items:
        $ref: '#/components/schemas/AdditionalInferenceSpecificationDefinition'
      x-insertionOrder: true
    AdditionalInferenceSpecificationDefinition:
      description: Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package.AdditionalInferenceSpecifications can be added to existing model packages using AdditionalInferenceSpecificationsToAdd.
      type: object
      additionalProperties: false
      properties:
        Containers:
          description: The Amazon ECR registry path of the Docker image that contains the inference code.
          type: array
          items:
            $ref: '#/components/schemas/ModelPackageContainerDefinition'
          minItems: 1
          maxItems: 15
          x-insertionOrder: true
        Description:
          description: A description of the additional Inference specification.
          type: string
          maxLength: 1024
          pattern: .*
        Name:
          description: A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
        SupportedContentTypes:
          description: The supported MIME types for the input data.
          type: array
          items:
            $ref: '#/components/schemas/ContentType'
          x-insertionOrder: true
        SupportedRealtimeInferenceInstanceTypes:
          description: A list of the instance types that are used to generate inferences in real-time
          type: array
          items:
            $ref: '#/components/schemas/InferenceInstanceType'
          x-insertionOrder: true
        SupportedResponseMIMETypes:
          description: The supported MIME types for the output data.
          type: array
          items:
            $ref: '#/components/schemas/ResponseMIMEType'
          x-insertionOrder: true
        SupportedTransformInstanceTypes:
          description: A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TransformInstanceType'
          x-insertionOrder: true
      required:
        - Containers
        - Name
    TransformInstanceType:
      description: Instance types on which a transformation job can be run or on which an endpoint can be deployed.
      type: string
    InferenceInstanceType:
      description: Instance type that is used to generate inferences in real-time
      type: string
    ContentType:
      description: The supported MIME type for the input data.
      type: string
      maxLength: 256
      pattern: .*
    ResponseMIMEType:
      description: The supported MIME types for the output data.
      type: string
      maxLength: 1024
      pattern: ^[-\w]+\/.+$
    CertifyForMarketplace:
      description: Whether to certify the model package for listing on AWS Marketplace.
      type: boolean
    ClientToken:
      description: A unique token that guarantees that the call to this API is idempotent.
      type: string
      minLength: 1
      maxLength: 36
      pattern: ^[a-zA-Z0-9-]+$
    CustomerMetadataProperties:
      type: object
      description: The metadata properties associated with the model package versions.
      maxProperties: 50
      minProperties: 1
      x-patternProperties:
        ^([\p{L}\p{Z}\p{N}_.:\/=+\-@]*)${1,128}:
          type: string
          minLength: 1
          maxLength: 128
        ^([\p{L}\p{Z}\p{N}_.:\/=+\-@]*)${1,256}:
          type: string
          minLength: 1
          maxLength: 256
      additionalProperties: false
    DriftCheckBaselines:
      description: Represents the drift check baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        Bias:
          $ref: '#/components/schemas/DriftCheckBias'
        Explainability:
          $ref: '#/components/schemas/DriftCheckExplainability'
        ModelDataQuality:
          $ref: '#/components/schemas/DriftCheckModelDataQuality'
        ModelQuality:
          $ref: '#/components/schemas/DriftCheckModelQuality'
    DriftCheckBias:
      description: Represents the drift check bias baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        PostTrainingConstraints:
          $ref: '#/components/schemas/MetricsSource'
        PreTrainingConstraints:
          $ref: '#/components/schemas/MetricsSource'
        ConfigFile:
          $ref: '#/components/schemas/FileSource'
    DriftCheckExplainability:
      description: Contains explainability metrics for a model.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        ConfigFile:
          $ref: '#/components/schemas/FileSource'
    DriftCheckModelDataQuality:
      description: Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    DriftCheckModelQuality:
      description: Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    MetricsSource:
      description: Represents a Metric Source Object.
      type: object
      additionalProperties: false
      properties:
        ContentDigest:
          description: The digest of the metric source.
          type: string
          maxLength: 72
          pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
        ContentType:
          description: The type of content stored in the metric source.
          type: string
          maxLength: 256
          pattern: .*
        S3Uri:
          description: The Amazon S3 URI for the metric source.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - ContentType
        - S3Uri
    FileSource:
      description: Represents a File Source Object.
      type: object
      additionalProperties: false
      properties:
        ContentDigest:
          description: The digest of the file source.
          type: string
          maxLength: 72
          pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
        ContentType:
          description: The type of content stored in the file source.
          type: string
          maxLength: 256
          pattern: .*
        S3Uri:
          description: The Amazon S3 URI for the file source.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - S3Uri
    Environment:
      type: object
      description: Sets the environment variables in the Docker container
      maxProperties: 16
      x-patternProperties:
        '[a-zA-Z_][a-zA-Z0-9_]*':
          type: string
          maxLength: 1024
        '[\S\s]*':
          type: string
          maxLength: 1024
      additionalProperties: false
    ModelPackageContainerDefinition:
      type: object
      additionalProperties: false
      description: Describes the Docker container for the model package.
      properties:
        ContainerHostname:
          type: string
          description: The DNS host name for the Docker container.
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
          maxLength: 63
        Environment:
          $ref: '#/components/schemas/Environment'
        ModelInput:
          type: object
          additionalProperties: false
          properties:
            DataInputConfig:
              type: string
              description: The input configuration object for the model.
              pattern: '[\S\s]+'
              minLength: 1
              maxLength: 1024
          required:
            - DataInputConfig
        Image:
          type: string
          description: The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
          pattern: '[\S]{1,255}'
          minLength: 1
          maxLength: 255
        ImageDigest:
          type: string
          description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
          pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
          maxLength: 72
        ModelDataUrl:
          type: string
          description: A structure with Model Input details.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 1024
        ModelDataSource:
          $ref: '#/components/schemas/ModelDataSource'
        Framework:
          type: string
          description: The machine learning framework of the model package container image.
        FrameworkVersion:
          type: string
          description: The framework version of the Model Package Container Image.
          pattern: '[0-9]\.[A-Za-z0-9.]+'
          minLength: 3
          maxLength: 10
        NearestModelName:
          type: string
          description: The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
      required:
        - Image
    MetadataProperties:
      description: Metadata properties of the tracking entity, trial, or trial component.
      type: object
      properties:
        CommitId:
          type: string
          description: The commit ID.
          pattern: .*
          maxLength: 1024
        GeneratedBy:
          type: string
          description: The entity this entity was generated by.
          pattern: .*
          maxLength: 1024
        ProjectId:
          type: string
          description: The project ID metadata.
          pattern: .*
          maxLength: 1024
        Repository:
          type: string
          description: The repository metadata.
          pattern: .*
          maxLength: 1024
      additionalProperties: false
    ModelApprovalStatus:
      type: string
      description: The approval status of the model package.
      enum:
        - Approved
        - Rejected
        - PendingManualApproval
    SkipModelValidation:
      type: string
      description: Indicates if you want to skip model validation.
      enum:
        - None
        - All
    ModelMetrics:
      description: A structure that contains model metrics reports.
      type: object
      additionalProperties: false
      properties:
        Bias:
          $ref: '#/components/schemas/Bias'
        Explainability:
          $ref: '#/components/schemas/Explainability'
        ModelDataQuality:
          $ref: '#/components/schemas/ModelDataQuality'
        ModelQuality:
          $ref: '#/components/schemas/ModelQuality'
    Bias:
      description: Contains bias metrics for a model.
      type: object
      additionalProperties: false
      properties:
        Report:
          $ref: '#/components/schemas/MetricsSource'
        PreTrainingReport:
          $ref: '#/components/schemas/MetricsSource'
        PostTrainingReport:
          $ref: '#/components/schemas/MetricsSource'
    Explainability:
      description: Contains explainability metrics for a model.
      type: object
      additionalProperties: false
      properties:
        Report:
          $ref: '#/components/schemas/MetricsSource'
    ModelDataQuality:
      description: Metrics that measure the quality of the input data for a model.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    ModelQuality:
      description: Metrics that measure the quality of a model.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    ModelPackageDescription:
      type: string
      description: The description of the model package.
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 1024
    ModelPackageGroupName:
      type: string
      description: The name of the model package group.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    ModelPackageName:
      type: string
      description: The name or arn of the model package.
    SamplePayloadUrl:
      description: The Amazon Simple Storage Service (Amazon S3) path where the sample payload are stored pointing to single gzip compressed tar archive.
      type: string
      maxLength: 1024
      pattern: ^(https|s3)://([^/]+)/?(.*)$
    SourceAlgorithmSpecification:
      description: Details about the algorithm that was used to create the model package.
      type: object
      additionalProperties: false
      properties:
        SourceAlgorithms:
          description: A list of algorithms that were used to create a model package.
          type: array
          items:
            $ref: '#/components/schemas/SourceAlgorithm'
          minItems: 1
          maxItems: 1
          x-insertionOrder: true
      required:
        - SourceAlgorithms
      x-insertionOrder: true
    ValidationSpecification:
      description: Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
      type: object
      additionalProperties: false
      properties:
        ValidationProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ValidationProfile'
          minItems: 1
          maxItems: 1
          x-insertionOrder: true
        ValidationRole:
          description: The IAM roles to be used for the validation of the model package.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      required:
        - ValidationProfiles
        - ValidationRole
      x-insertionOrder: true
    ValidationProfile:
      description: Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.
      type: object
      additionalProperties: false
      properties:
        TransformJobDefinition:
          $ref: '#/components/schemas/TransformJobDefinition'
        ProfileName:
          description: The name of the profile for the model package.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
      required:
        - TransformJobDefinition
        - ProfileName
    TransformJobDefinition:
      description: Defines the input needed to run a transform job using the inference specification specified in the algorithm.
      type: object
      additionalProperties: false
      properties:
        Environment:
          $ref: '#/components/schemas/Environment'
        BatchStrategy:
          description: A string that determines the number of records included in a single mini-batch.
          type: string
          enum:
            - MultiRecord
            - SingleRecord
        MaxConcurrentTransforms:
          description: The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
          type: integer
          minimum: 0
        MaxPayloadInMB:
          description: The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).
          type: integer
          minimum: 0
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
      required:
        - TransformResources
        - TransformOutput
        - TransformInput
    TransformInput:
      description: Describes the input source of a transform job and the way the transform job consumes it.
      type: object
      additionalProperties: false
      properties:
        CompressionType:
          description: If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.
          type: string
          enum:
            - None
            - Gzip
        ContentType:
          description: The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
          type: string
          maxLength: 256
          pattern: .*
        DataSource:
          $ref: '#/components/schemas/DataSource'
        SplitType:
          description: 'The method to use to split the transform job''s data files into smaller batches. '
          type: string
          enum:
            - None
            - TFRecord
            - Line
            - RecordIO
      required:
        - DataSource
    DataSource:
      description: Describes the input source of a transform job and the way the transform job consumes it.
      type: object
      additionalProperties: false
      properties:
        S3DataSource:
          $ref: '#/components/schemas/S3DataSource'
      required:
        - S3DataSource
    S3DataSource:
      description: Describes the S3 data source.
      type: object
      additionalProperties: false
      properties:
        S3DataType:
          description: The S3 Data Source Type
          type: string
          enum:
            - ManifestFile
            - S3Prefix
            - AugmentedManifestFile
        S3Uri:
          description: Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - S3DataType
        - S3Uri
    TransformOutput:
      description: Describes the results of a transform job.
      type: object
      additionalProperties: false
      properties:
        Accept:
          description: The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
          type: string
          maxLength: 256
          pattern: .*
        KmsKeyId:
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
          type: string
          maxLength: 2048
          pattern: .*
        S3OutputPath:
          description: The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
        AssembleWith:
          description: Defines how to assemble the results of the transform job as a single S3 object.
          type: string
          enum:
            - None
            - Line
      required:
        - S3OutputPath
    TransformResources:
      description: Describes the resources, including ML instance types and ML instance count, to use for transform job.
      type: object
      additionalProperties: false
      properties:
        InstanceCount:
          description: The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is 1.
          type: integer
          minimum: 1
        InstanceType:
          description: The ML compute instance type for the transform job.
          type: string
        VolumeKmsKeyId:
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.
          type: string
          maxLength: 2048
          pattern: .*
      required:
        - InstanceCount
        - InstanceType
    ModelPackageArn:
      type: string
      description: The Amazon Resource Name (ARN) of the model package group.
      pattern: ^arn:aws(-cn|-us-gov|-iso-f)?:sagemaker:[a-z0-9\-]{9,16}:[0-9]{12}:model-package/[\S]{1,2048}$
      minLength: 1
      maxLength: 2048
    ApprovalDescription:
      description: A description provided for the model approval.
      type: string
      maxLength: 1024
      pattern: .*
    CreationTime:
      description: The time at which the model package was created.
      type: string
    LastModifiedTime:
      description: The time at which the model package was last modified.
      type: string
    ModelPackageStatus:
      description: The current status of the model package.
      type: string
      enum:
        - Pending
        - Deleting
        - InProgress
        - Completed
        - Failed
    ModelPackageStatusDetails:
      description: Details about the current status of the model package.
      type: object
      properties:
        ValidationStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ModelPackageStatusItem'
          x-insertionOrder: true
      additionalProperties: false
    ModelPackageStatusItem:
      description: Represents the overall status of a model package.
      type: object
      properties:
        FailureReason:
          description: If the overall status is Failed, the reason for the failure.
          type: string
        Name:
          description: The name of the model package for which the overall status is being reported.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
        Status:
          description: The current status.
          type: string
          enum:
            - NotStarted
            - Failed
            - InProgress
            - Completed
      required:
        - Name
        - Status
      additionalProperties: false
    ModelPackageVersion:
      type: integer
      description: The version of the model package.
      minimum: 1
    Task:
      description: The machine learning task your model package accomplishes.
      type: string
    ModelDataSource:
      description: Specifies the location of ML model data to deploy during endpoint creation.
      type: object
      additionalProperties: false
      properties:
        S3DataSource:
          $ref: '#/components/schemas/S3ModelDataSource'
    S3ModelDataSource:
      description: Specifies the S3 location of ML model data to deploy.
      type: object
      additionalProperties: false
      properties:
        S3DataType:
          description: Specifies the type of ML model data to deploy.
          type: string
          enum:
            - S3Prefix
            - S3Object
        S3Uri:
          description: Specifies the S3 path of ML model data to deploy.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
        CompressionType:
          description: Specifies how the ML model data is prepared.
          type: string
          enum:
            - None
            - Gzip
        ModelAccessConfig:
          $ref: '#/components/schemas/ModelAccessConfig'
      required:
        - S3DataType
        - S3Uri
        - CompressionType
    ModelAccessConfig:
      description: Specifies the access configuration file for the ML model.
      type: object
      additionalProperties: false
      properties:
        AcceptEula:
          description: Specifies agreement to the model end-user license agreement (EULA).
          type: boolean
      required:
        - AcceptEula
    SourceUri:
      description: The URI of the source for the model package.
      type: string
      minLength: 0
      maxLength: 1024
      pattern: '[\p{L}\p{M}\p{Z}\p{N}\p{P}]{0,1024}'
    ModelPackage:
      type: object
      properties:
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        AdditionalInferenceSpecifications:
          $ref: '#/components/schemas/AdditionalInferenceSpecifications'
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
        CustomerMetadataProperties:
          $ref: '#/components/schemas/CustomerMetadataProperties'
        Domain:
          $ref: '#/components/schemas/Domain'
        DriftCheckBaselines:
          $ref: '#/components/schemas/DriftCheckBaselines'
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
        ModelMetrics:
          $ref: '#/components/schemas/ModelMetrics'
        ModelPackageDescription:
          $ref: '#/components/schemas/ModelPackageDescription'
        ModelPackageGroupName:
          $ref: '#/components/schemas/ModelPackageGroupName'
        ModelPackageName:
          $ref: '#/components/schemas/ModelPackageName'
        SamplePayloadUrl:
          $ref: '#/components/schemas/SamplePayloadUrl'
        SkipModelValidation:
          $ref: '#/components/schemas/SkipModelValidation'
        SourceAlgorithmSpecification:
          $ref: '#/components/schemas/SourceAlgorithmSpecification'
        Task:
          $ref: '#/components/schemas/Task'
        ValidationSpecification:
          $ref: '#/components/schemas/ValidationSpecification'
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
        ApprovalDescription:
          $ref: '#/components/schemas/ApprovalDescription'
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
        ModelPackageStatus:
          $ref: '#/components/schemas/ModelPackageStatus'
        ModelPackageVersion:
          $ref: '#/components/schemas/ModelPackageVersion'
        AdditionalInferenceSpecificationsToAdd:
          $ref: '#/components/schemas/AdditionalInferenceSpecifications'
        ModelPackageStatusDetails:
          $ref: '#/components/schemas/ModelPackageStatusDetails'
        SourceUri:
          $ref: '#/components/schemas/SourceUri'
        ModelCard:
          $ref: '#/components/schemas/ModelCard'
        SecurityConfig:
          $ref: '#/components/schemas/SecurityConfig'
      x-stackql-resource-name: model_package
      description: Resource Type definition for AWS::SageMaker::ModelPackage
      x-type-name: AWS::SageMaker::ModelPackage
      x-stackql-primary-identifier:
        - ModelPackageArn
      x-create-only-properties:
        - ModelPackageGroupName
        - ModelPackageDescription
        - InferenceSpecification
        - ValidationSpecification
        - SourceAlgorithmSpecification
        - MetadataProperties
        - ModelMetrics
        - ClientToken
        - DriftCheckBaselines
        - Domain
        - Task
        - SamplePayloadUrl
        - SecurityConfig
      x-conditional-create-only-properties:
        - ModelCard
        - SourceUri
      x-write-only-properties:
        - ClientToken
        - AdditionalInferenceSpecificationsToAdd
      x-read-only-properties:
        - ModelPackageArn
        - CreationTime
        - ModelPackageStatus
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
      x-required-permissions:
        create:
          - ecr:BatchGetImage
          - ecr:DescribeImages
          - ecr:StartImageScan
          - ecr:DescribeImageScanFindings
          - sagemaker:AddTags
          - sagemaker:CreateModel
          - sagemaker:CreateModelPackage
          - sagemaker:CreateTrainingJob
          - sagemaker:CreateTransformJob
          - sagemaker:DescribeTransformJob
          - sagemaker:DescribeModelPackage
          - sagemaker:ListTags
          - sagemaker:UpdateModelPackage
          - iam:PassRole
          - s3:GetObject
          - s3:ListBucket
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        read:
          - sagemaker:DescribeModelPackage
          - sagemaker:ListTags
          - kms:DescribeKey
          - kms:Decrypt
        update:
          - ecr:BatchGetImage
          - sagemaker:UpdateModelPackage
          - sagemaker:DescribeModelPackage
          - sagemaker:ListTags
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - s3:GetObject
          - s3:ListBucket
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - sagemaker:DeleteModelPackage
          - sagemaker:DescribeModelPackage
          - kms:DescribeKey
          - kms:Decrypt
        list:
          - sagemaker:ListModelPackages
    ModelPackageGroupDescription:
      type: string
      description: The description of the model package group.
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 1024
    ModelPackageGroupArn:
      description: The Amazon Resource Name (ARN) of the model package group.
      type: string
      minLength: 1
      maxLength: 256
      pattern: arn:.*
    ModelPackageGroup:
      type: object
      properties:
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        ModelPackageGroupArn:
          $ref: '#/components/schemas/ModelPackageGroupArn'
        ModelPackageGroupName:
          $ref: '#/components/schemas/ModelPackageGroupName'
        ModelPackageGroupDescription:
          $ref: '#/components/schemas/ModelPackageGroupDescription'
        ModelPackageGroupPolicy:
          type: object
        CreationTime:
          description: The time at which the model package group was created.
          type: string
        ModelPackageGroupStatus:
          description: The status of a modelpackage group job.
          type: string
          enum:
            - Pending
            - InProgress
            - Completed
            - Failed
            - Deleting
            - DeleteFailed
      required:
        - ModelPackageGroupName
      x-stackql-resource-name: model_package_group
      description: Resource Type definition for AWS::SageMaker::ModelPackageGroup
      x-type-name: AWS::SageMaker::ModelPackageGroup
      x-stackql-primary-identifier:
        - ModelPackageGroupArn
      x-create-only-properties:
        - ModelPackageGroupName
        - ModelPackageGroupDescription
      x-read-only-properties:
        - ModelPackageGroupArn
        - CreationTime
        - ModelPackageGroupStatus
      x-required-properties:
        - ModelPackageGroupName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
      x-required-permissions:
        create:
          - sagemaker:CreateModelPackageGroup
          - sagemaker:DescribeModelPackageGroup
          - sagemaker:GetModelPackageGroupPolicy
          - sagemaker:PutModelPackageGroupPolicy
          - sagemaker:ListTags
          - sagemaker:AddTags
        delete:
          - sagemaker:DeleteModelPackageGroup
          - sagemaker:DescribeModelPackageGroup
          - sagemaker:GetModelPackageGroupPolicy
          - sagemaker:DeleteModelPackageGroupPolicy
        list:
          - sagemaker:ListModelPackageGroups
        read:
          - sagemaker:DescribeModelPackageGroup
          - sagemaker:GetModelPackageGroupPolicy
          - sagemaker:PutModelPackageGroupPolicy
          - sagemaker:ListTags
        update:
          - sagemaker:DescribeModelPackageGroup
          - sagemaker:GetModelPackageGroupPolicy
          - sagemaker:DeleteModelPackageGroupPolicy
          - sagemaker:PutModelPackageGroupPolicy
          - sagemaker:ListTags
          - sagemaker:AddTags
          - sagemaker:DeleteTags
    ModelQualityBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
    ModelQualityAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ContainerArguments:
          type: array
          description: An array of arguments for the container used to run the monitoring job.
          maxItems: 50
          items:
            type: string
            minLength: 1
            maxLength: 256
        ContainerEntrypoint:
          type: array
          description: Specifies the entrypoint for a container used to run the monitoring job.
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 256
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        PostAnalyticsProcessorSourceUri:
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
          $ref: '#/components/schemas/S3Uri'
        RecordPreprocessorSourceUri:
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
      required:
        - ImageUri
        - ProblemType
    ModelQualityJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
        GroundTruthS3Input:
          $ref: '#/components/schemas/MonitoringGroundTruthS3Input'
      required:
        - GroundTruthS3Input
    ProblemType:
      description: The status of the monitoring job.
      type: string
      enum:
        - BinaryClassification
        - MulticlassClassification
        - Regression
    ModelQualityJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        ModelQualityBaselineConfig:
          $ref: '#/components/schemas/ModelQualityBaselineConfig'
        ModelQualityAppSpecification:
          $ref: '#/components/schemas/ModelQualityAppSpecification'
        ModelQualityJobInput:
          $ref: '#/components/schemas/ModelQualityJobInput'
        ModelQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - ModelQualityAppSpecification
        - ModelQualityJobInput
        - ModelQualityJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: model_quality_job_definition
      description: Resource Type definition for AWS::SageMaker::ModelQualityJobDefinition
      x-type-name: AWS::SageMaker::ModelQualityJobDefinition
      x-stackql-primary-identifier:
        - JobDefinitionArn
      x-create-only-properties:
        - JobDefinitionName
        - ModelQualityAppSpecification
        - ModelQualityBaselineConfig
        - ModelQualityJobInput
        - ModelQualityJobOutputConfig
        - JobResources
        - NetworkConfig
        - RoleArn
        - StoppingCondition
        - Tags
        - EndpointName
      x-write-only-properties:
        - EndpointName
        - Tags
        - Tags/*/Key
        - Tags/*/Value
      x-read-only-properties:
        - CreationTime
        - JobDefinitionArn
      x-required-properties:
        - ModelQualityAppSpecification
        - ModelQualityJobInput
        - ModelQualityJobOutputConfig
        - JobResources
        - RoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
      x-required-permissions:
        create:
          - sagemaker:CreateModelQualityJobDefinition
          - sagemaker:DescribeModelQualityJobDefinition
          - sagemaker:AddTags
          - iam:PassRole
        delete:
          - sagemaker:DeleteModelQualityJobDefinition
        read:
          - sagemaker:DescribeModelQualityJobDefinition
        list:
          - sagemaker:ListModelQualityJobDefinitions
          - sagemaker:ListTags
    MonitoringScheduleConfig:
      type: object
      additionalProperties: false
      description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
      properties:
        MonitoringJobDefinition:
          $ref: '#/components/schemas/MonitoringJobDefinition'
        MonitoringJobDefinitionName:
          description: Name of the job definition
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        MonitoringType:
          $ref: '#/components/schemas/MonitoringType'
        ScheduleConfig:
          $ref: '#/components/schemas/ScheduleConfig'
    MonitoringType:
      description: The type of monitoring job.
      type: string
      enum:
        - DataQuality
        - ModelQuality
        - ModelBias
        - ModelExplainability
    MonitoringJobDefinition:
      type: object
      additionalProperties: false
      description: Defines the monitoring job.
      properties:
        BaselineConfig:
          $ref: '#/components/schemas/BaselineConfig'
        Environment:
          type: object
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
        MonitoringAppSpecification:
          $ref: '#/components/schemas/MonitoringAppSpecification'
        MonitoringInputs:
          $ref: '#/components/schemas/MonitoringInputs'
        MonitoringOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        MonitoringResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
      required:
        - MonitoringAppSpecification
        - MonitoringInputs
        - MonitoringOutputConfig
        - MonitoringResources
        - RoleArn
    BaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
        StatisticsResource:
          $ref: '#/components/schemas/StatisticsResource'
    MonitoringAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ContainerArguments:
          type: array
          description: An array of arguments for the container used to run the monitoring job.
          maxItems: 50
          items:
            $ref: '#/components/schemas/ContainerArgument'
        ContainerEntrypoint:
          type: array
          description: Specifies the entrypoint for a container used to run the monitoring job.
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 256
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        PostAnalyticsProcessorSourceUri:
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
          $ref: '#/components/schemas/S3Uri'
        RecordPreprocessorSourceUri:
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
          $ref: '#/components/schemas/S3Uri'
      required:
        - ImageUri
    ContainerArgument:
      type: string
      additionalProperties: false
      description: Arguments for the container used to run the monitoring job.
      minLength: 1
      maxLength: 256
    MonitoringInputs:
      type: array
      additionalProperties: false
      description: The array of inputs for the monitoring job.
      minItems: 1
      maxItems: 1
      items:
        $ref: '#/components/schemas/MonitoringInput'
    MonitoringInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
    ScheduleConfig:
      type: object
      additionalProperties: false
      description: Configuration details about the monitoring schedule.
      properties:
        ScheduleExpression:
          description: A cron expression or 'NOW' that describes details about the monitoring schedule.
          type: string
          minLength: 1
          maxLength: 256
        DataAnalysisStartTime:
          description: Data Analysis start time, e.g. -PT1H
          $ref: '#/components/schemas/DataAnalysisTimeString'
        DataAnalysisEndTime:
          description: Data Analysis end time, e.g. PT0H
          $ref: '#/components/schemas/DataAnalysisTimeString'
      required:
        - ScheduleExpression
    DataAnalysisTimeString:
      type: string
      description: Analysis time in ISO duration format
      pattern: ^.?P.*
      minLength: 1
      maxLength: 15
    MonitoringExecutionSummary:
      description: Summary of information about monitoring job
      type: object
      properties:
        CreationTime:
          description: The time at which the monitoring job was created.
          type: string
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        FailureReason:
          type: string
          description: Contains the reason a monitoring job failed, if it failed.
          maxLength: 1024
        LastModifiedTime:
          description: A timestamp that indicates the last time the monitoring job was modified.
          type: string
        MonitoringExecutionStatus:
          description: The status of the monitoring job.
          type: string
          enum:
            - Pending
            - Completed
            - CompletedWithViolations
            - InProgress
            - Failed
            - Stopping
            - Stopped
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
        ProcessingJobArn:
          description: The Amazon Resource Name (ARN) of the monitoring job.
          type: string
          pattern: aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
          maxLength: 256
        ScheduledTime:
          description: The time the monitoring job was scheduled.
          type: string
      required:
        - CreationTime
        - LastModifiedTime
        - MonitoringExecutionStatus
        - MonitoringScheduleName
        - ScheduledTime
    MonitoringScheduleName:
      type: string
      description: The name of the monitoring schedule.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    MonitoringSchedule:
      type: object
      properties:
        MonitoringScheduleArn:
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
          type: string
          minLength: 1
          maxLength: 256
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the schedule was created.
          type: string
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        FailureReason:
          type: string
          description: Contains the reason a monitoring job failed, if it failed.
          minLength: 1
          maxLength: 1024
        LastModifiedTime:
          description: A timestamp that indicates the last time the monitoring job was modified.
          type: string
        LastMonitoringExecutionSummary:
          description: Describes metadata on the last execution to run, if there was one.
          $ref: '#/components/schemas/MonitoringExecutionSummary'
        MonitoringScheduleStatus:
          description: The status of a schedule job.
          type: string
          enum:
            - Pending
            - Failed
            - Scheduled
            - Stopped
      required:
        - MonitoringScheduleConfig
        - MonitoringScheduleName
      x-stackql-resource-name: monitoring_schedule
      description: Resource Type definition for AWS::SageMaker::MonitoringSchedule
      x-type-name: AWS::SageMaker::MonitoringSchedule
      x-stackql-primary-identifier:
        - MonitoringScheduleArn
      x-create-only-properties:
        - MonitoringScheduleName
      x-read-only-properties:
        - MonitoringScheduleArn
        - CreationTime
        - LastModifiedTime
      x-required-properties:
        - MonitoringScheduleConfig
        - MonitoringScheduleName
      x-required-permissions:
        create:
          - sagemaker:CreateMonitoringSchedule
          - sagemaker:DescribeMonitoringSchedule
          - iam:PassRole
        delete:
          - sagemaker:DeleteMonitoringSchedule
          - sagemaker:DescribeMonitoringSchedule
        list:
          - sagemaker:ListMonitoringSchedule
        read:
          - sagemaker:DescribeMonitoringSchedule
        update:
          - sagemaker:UpdateMonitoringSchedule
          - sagemaker:DescribeMonitoringSchedule
    PartnerAppConfig:
      type: object
      description: A collection of configuration settings for the PartnerApp.
      additionalProperties: false
      properties:
        AdminUsers:
          type: array
          description: A list of users with administrator privileges for the PartnerApp.
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 5
          items:
            $ref: '#/components/schemas/PartnerAppAdminUserList'
        Arguments:
          description: A list of arguments to pass to the PartnerApp.
          type: object
          additionalProperties: false
          maxProperties: 5
          x-patternProperties:
            ^(?!\s*$).{1,256}$:
              type: string
              pattern: ^.{0,1024}$
              maxLength: 1024
    PartnerAppAdminUserList:
      type: string
      description: A collection of AdminUsers for the PartnerApp
      additionalProperties: false
      minLength: 1
      maxLength: 256
    PartnerAppMaintenanceConfig:
      type: object
      description: A collection of settings that specify the maintenance schedule for the PartnerApp.
      additionalProperties: false
      properties:
        MaintenanceWindowStart:
          type: string
          description: The maintenance window start day and time for the PartnerApp.
          maxLength: 9
          pattern: (Mon|Tue|Wed|Thu|Fri|Sat|Sun):([01]\d|2[0-3]):([0-5]\d)
      required:
        - MaintenanceWindowStart
    PartnerApp:
      type: object
      properties:
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the created PartnerApp.
          minLength: 1
          maxLength: 128
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:partner-app/app-[A-Z0-9]{12}$
        Name:
          type: string
          description: A name for the PartnerApp.
          minLength: 1
          maxLength: 256
          pattern: ^[a-zA-Z0-9]+
        Type:
          type: string
          description: The type of PartnerApp.
          enum:
            - lakera-guard
            - comet
            - deepchecks-llm-evaluation
            - fiddler
        ExecutionRoleArn:
          type: string
          description: The execution role for the user.
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        Tier:
          type: string
          description: The tier of the PartnerApp.
          minLength: 1
          maxLength: 64
        EnableIamSessionBasedIdentity:
          type: boolean
          description: Enables IAM Session based Identity for PartnerApp.
        ApplicationConfig:
          $ref: '#/components/schemas/PartnerAppConfig'
          description: A collection of settings that specify the maintenance schedule for the PartnerApp.
        AuthType:
          type: string
          description: The Auth type of PartnerApp.
          enum:
            - IAM
        BaseUrl:
          type: string
          description: The AppServerUrl based on app and account-info.
          maxLength: 2048
        MaintenanceConfig:
          $ref: '#/components/schemas/PartnerAppMaintenanceConfig'
          description: A collection of settings that specify the maintenance schedule for the PartnerApp.
        ClientToken:
          type: string
          description: The client token for the PartnerApp.
          minLength: 1
          maxLength: 36
          pattern: ^[a-zA-Z0-9-]+$
        Tags:
          type: array
          description: A list of tags to apply to the PartnerApp.
          uniqueItems: false
          x-insertionOrder: false
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Type
        - AuthType
        - ExecutionRoleArn
        - Tier
      x-stackql-resource-name: partner_app
      description: Resource Type definition for AWS::SageMaker::PartnerApp
      x-type-name: AWS::SageMaker::PartnerApp
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Type
        - ExecutionRoleArn
        - AuthType
      x-write-only-properties:
        - ClientToken
      x-read-only-properties:
        - Arn
        - BaseUrl
      x-required-properties:
        - Name
        - Type
        - AuthType
        - ExecutionRoleArn
        - Tier
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - sagemaker:ListTags
      x-required-permissions:
        create:
          - sagemaker:CreatePartnerApp
          - sagemaker:DescribePartnerApp
          - sagemaker:AddTags
          - sagemaker:ListTags
          - iam:PassRole
        read:
          - sagemaker:DescribePartnerApp
          - sagemaker:ListTags
        update:
          - sagemaker:UpdatePartnerApp
          - sagemaker:DescribePartnerApp
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
        delete:
          - sagemaker:DeletePartnerApp
          - sagemaker:DescribePartnerApp
          - sagemaker:DeleteTags
        list:
          - sagemaker:ListPartnerApps
          - sagemaker:DescribePartnerApp
          - sagemaker:ListTags
    S3Location:
      type: object
      additionalProperties: false
      properties:
        Bucket:
          description: The name of the S3 bucket where the PipelineDefinition file is stored.
          type: string
        Key:
          description: The file name of the PipelineDefinition file (Amazon S3 object name).
          type: string
        Version:
          description: For versioning-enabled buckets, a specific version of the PipelineDefinition file.
          type: string
        ETag:
          description: The Amazon S3 ETag (a file checksum) of the PipelineDefinition file. If you don't specify a value, SageMaker skips ETag validation of your PipelineDefinition file.
          type: string
      required:
        - Bucket
        - Key
    Pipeline:
      type: object
      properties:
        PipelineName:
          type: string
          description: The name of the Pipeline.
          minLength: 1
          maxLength: 256
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
        PipelineDisplayName:
          type: string
          description: The display name of the Pipeline.
          minLength: 1
          maxLength: 256
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
        PipelineDescription:
          type: string
          description: The description of the Pipeline.
          minLength: 0
          maxLength: 3072
        PipelineDefinition:
          type: object
          oneOf:
            - additionalProperties: false
              properties:
                PipelineDefinitionBody:
                  type: string
                  description: A specification that defines the pipeline in JSON format.
              required:
                - PipelineDefinitionBody
            - additionalProperties: false
              properties:
                PipelineDefinitionS3Location:
                  $ref: '#/components/schemas/S3Location'
              required:
                - PipelineDefinitionS3Location
        RoleArn:
          type: string
          description: Role Arn
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        ParallelismConfiguration:
          type: object
          additionalProperties: false
          properties:
            MaxParallelExecutionSteps:
              description: Maximum parallel execution steps
              type: integer
              minimum: 1
          required:
            - MaxParallelExecutionSteps
      required:
        - PipelineName
        - PipelineDefinition
        - RoleArn
      x-stackql-resource-name: pipeline
      description: Resource Type definition for AWS::SageMaker::Pipeline
      x-type-name: AWS::SageMaker::Pipeline
      x-stackql-primary-identifier:
        - PipelineName
      x-create-only-properties:
        - PipelineName
      x-required-properties:
        - PipelineName
        - PipelineDefinition
        - RoleArn
      x-required-permissions:
        create:
          - iam:PassRole
          - s3:GetObject
          - sagemaker:CreatePipeline
          - sagemaker:DescribePipeline
          - sagemaker:AddTags
          - sagemaker:ListTags
        read:
          - sagemaker:DescribePipeline
          - sagemaker:ListTags
        update:
          - iam:PassRole
          - s3:GetObject
          - sagemaker:UpdatePipeline
          - sagemaker:DescribePipeline
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - sagemaker:ListTags
        delete:
          - sagemaker:DeletePipeline
        list:
          - sagemaker:ListPipelines
    ProjectDescription:
      type: string
      description: The description of the project.
      pattern: .*
      maxLength: 1024
    ProjectId:
      type: string
      description: Project Id.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 20
    ProvisionedProductStatusMessage:
      type: string
      description: Provisioned Product Status Message
    ProjectName:
      type: string
      description: The name of the project.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      minLength: 1
      maxLength: 32
    ProjectArn:
      description: The Amazon Resource Name (ARN) of the Project.
      type: string
      minLength: 1
      maxLength: 2048
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:project.*
    ProductId:
      type: string
      description: Service Catalog product identifier.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 100
    ProvisioningArtifactId:
      type: string
      description: The identifier of the provisioning artifact (also known as a version).
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 100
    PathId:
      type: string
      description: The path identifier of the product.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 100
    ProvisioningParameter:
      description: Information about a parameter used to provision a product.
      type: object
      properties:
        Key:
          type: string
          description: The parameter key.
          minLength: 1
          maxLength: 1000
          pattern: .*
        Value:
          type: string
          description: The parameter value.
          maxLength: 4096
          pattern: .*
      required:
        - Key
        - Value
      additionalProperties: false
    Project:
      type: object
      properties:
        Tags:
          type: array
          maxItems: 40
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        ProjectArn:
          $ref: '#/components/schemas/ProjectArn'
        ProjectId:
          $ref: '#/components/schemas/ProjectId'
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
        ProjectDescription:
          $ref: '#/components/schemas/ProjectDescription'
        CreationTime:
          description: The time at which the project was created.
          type: string
        ServiceCatalogProvisioningDetails:
          description: Input ServiceCatalog Provisioning Details
          type: object
          properties:
            ProductId:
              $ref: '#/components/schemas/ProductId'
            ProvisioningArtifactId:
              $ref: '#/components/schemas/ProvisioningArtifactId'
            PathId:
              $ref: '#/components/schemas/PathId'
            ProvisioningParameters:
              type: array
              description: Parameters specified by the administrator that are required for provisioning the product.
              items:
                $ref: '#/components/schemas/ProvisioningParameter'
          required:
            - ProductId
          additionalProperties: false
        ServiceCatalogProvisionedProductDetails:
          description: Provisioned ServiceCatalog  Details
          type: object
          properties:
            ProvisionedProductId:
              $ref: '#/components/schemas/ProvisioningArtifactId'
            ProvisionedProductStatusMessage:
              $ref: '#/components/schemas/ProvisionedProductStatusMessage'
          additionalProperties: false
        ProjectStatus:
          description: The status of a project.
          type: string
          enum:
            - Pending
            - CreateInProgress
            - CreateCompleted
            - CreateFailed
            - DeleteInProgress
            - DeleteFailed
            - DeleteCompleted
      required:
        - ProjectName
        - ServiceCatalogProvisioningDetails
      x-stackql-resource-name: project
      description: Resource Type definition for AWS::SageMaker::Project
      x-type-name: AWS::SageMaker::Project
      x-stackql-primary-identifier:
        - ProjectArn
      x-create-only-properties:
        - ProjectName
        - ProjectDescription
        - ServiceCatalogProvisioningDetails
        - Tags
      x-read-only-properties:
        - ProjectArn
        - CreationTime
        - ProjectId
        - ProjectStatus
      x-required-properties:
        - ProjectName
        - ServiceCatalogProvisioningDetails
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
      x-required-permissions:
        create:
          - sagemaker:AddTags
          - sagemaker:CreateProject
          - sagemaker:DescribeProject
          - sagemaker:ListTags
          - servicecatalog:DescribeProduct
          - servicecatalog:DescribeProvisioningArtifact
          - servicecatalog:ProvisionProduct
          - servicecatalog:DescribeProvisionedProduct
          - servicecatalog:TerminateProvisionedProduct
        read:
          - sagemaker:DescribeProject
          - sagemaker:ListTags
        update:
          - sagemaker:DescribeProject
          - sagemaker:ListTags
          - sagemaker:AddTags
          - sagemaker:DeleteTags
        delete:
          - sagemaker:DeleteProject
          - sagemaker:DescribeProject
          - servicecatalog:TerminateProvisionedProduct
          - servicecatalog:DescribeRecord
        list:
          - sagemaker:ListProjects
    SpaceSharingSettings:
      type: object
      additionalProperties: false
      properties:
        SharingType:
          type: string
          enum:
            - Private
            - Shared
      required:
        - SharingType
    OwnershipSettings:
      type: object
      additionalProperties: false
      properties:
        OwnerUserProfileName:
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
      required:
        - OwnerUserProfileName
    SpaceSettings:
      type: object
      description: A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the CreateSpace API is called.
      additionalProperties: false
      properties:
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
        JupyterLabAppSettings:
          $ref: '#/components/schemas/SpaceJupyterLabAppSettings'
          description: The JupyterLab app settings.
        CodeEditorAppSettings:
          $ref: '#/components/schemas/SpaceCodeEditorAppSettings'
          description: The CodeEditor app settings.
        SpaceStorageSettings:
          $ref: '#/components/schemas/SpaceStorageSettings'
          description: Default storage settings for a space.
        AppType:
          $ref: '#/components/schemas/AppType'
        CustomFileSystems:
          $ref: '#/components/schemas/CustomFileSystems'
    CustomFileSystems:
      type: array
      uniqueItems: true
      minItems: 0
      maxItems: 1
      items:
        $ref: '#/components/schemas/CustomFileSystem'
    CustomFileSystem:
      type: object
      additionalProperties: false
      properties:
        EFSFileSystem:
          $ref: '#/components/schemas/EFSFileSystem'
        FSxLustreFileSystem:
          $ref: '#/components/schemas/FSxLustreFileSystem'
    EFSFileSystem:
      type: object
      additionalProperties: false
      properties:
        FileSystemId:
          type: string
          minLength: 11
          maxLength: 21
          pattern: ^(fs-[0-9a-f]{8,})$
      required:
        - FileSystemId
    FSxLustreFileSystem:
      type: object
      additionalProperties: false
      properties:
        FileSystemId:
          type: string
          minLength: 11
          maxLength: 21
          pattern: ^(fs-[0-9a-f]{8,})$
      required:
        - FileSystemId
    SpaceJupyterLabAppSettings:
      type: object
      description: The JupyterServer app settings.
      additionalProperties: false
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
        AppLifecycleManagement:
          $ref: '#/components/schemas/SpaceAppLifecycleManagement'
        CodeRepositories:
          type: array
          description: A list of CodeRepositories available for use with JupyterLab apps.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/CodeRepository'
    SpaceAppLifecycleManagement:
      type: object
      additionalProperties: false
      properties:
        IdleSettings:
          $ref: '#/components/schemas/SpaceIdleSettings'
    SpaceIdleSettings:
      type: object
      additionalProperties: false
      properties:
        IdleTimeoutInMinutes:
          type: integer
          description: The space idle timeout value set in minutes
          minimum: 60
          maximum: 525600
    SpaceCodeEditorAppSettings:
      type: object
      description: The CodeEditor app settings.
      additionalProperties: false
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
        AppLifecycleManagement:
          $ref: '#/components/schemas/SpaceAppLifecycleManagement'
    SpaceStorageSettings:
      type: object
      additionalProperties: false
      properties:
        EbsStorageSettings:
          $ref: '#/components/schemas/EbsStorageSettings'
    EbsStorageSettings:
      type: object
      description: Properties related to the space's Amazon Elastic Block Store volume.
      additionalProperties: false
      properties:
        EbsVolumeSizeInGb:
          description: Size of the Amazon EBS volume in Gb
          $ref: '#/components/schemas/SpaceEbsVolumeSizeInGb'
      required:
        - EbsVolumeSizeInGb
    Space:
      type: object
      properties:
        SpaceArn:
          type: string
          description: The space Amazon Resource Name (ARN).
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:space/.*
        DomainId:
          type: string
          description: The ID of the associated Domain.
          minLength: 1
          maxLength: 63
        SpaceName:
          type: string
          description: A name for the Space.
          minLength: 1
          maxLength: 63
        SpaceSettings:
          $ref: '#/components/schemas/SpaceSettings'
          description: A collection of settings.
          uniqueItems: false
          minItems: 0
          maxItems: 50
        Tags:
          type: array
          description: A list of tags to apply to the space.
          uniqueItems: false
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        OwnershipSettings:
          $ref: '#/components/schemas/OwnershipSettings'
        SpaceSharingSettings:
          $ref: '#/components/schemas/SpaceSharingSettings'
        SpaceDisplayName:
          type: string
          maxLength: 64
          pattern: ^(?!\s*$).+
        Url:
          type: string
          maxLength: 1024
      required:
        - DomainId
        - SpaceName
      x-stackql-resource-name: space
      description: Resource Type definition for AWS::SageMaker::Space
      x-type-name: AWS::SageMaker::Space
      x-stackql-primary-identifier:
        - DomainId
        - SpaceName
      x-create-only-properties:
        - DomainId
        - SpaceName
        - SpaceSharingSettings
        - OwnershipSettings
      x-write-only-properties:
        - SpaceSettings
      x-read-only-properties:
        - SpaceArn
        - Url
      x-required-properties:
        - DomainId
        - SpaceName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - sagemaker:ListTags
      x-required-permissions:
        create:
          - sagemaker:CreateSpace
          - sagemaker:DescribeSpace
          - sagemaker:ListTags
          - sagemaker:AddTags
        read:
          - sagemaker:DescribeSpace
          - sagemaker:ListTags
        update:
          - sagemaker:UpdateSpace
          - sagemaker:DescribeSpace
          - sagemaker:AddTags
          - sagemaker:DeleteTags
          - sagemaker:ListTags
        delete:
          - sagemaker:DeleteSpace
          - sagemaker:DescribeSpace
          - sagemaker:DeleteTags
        list:
          - sagemaker:ListSpaces
          - sagemaker:ListTags
    StudioLifecycleConfig:
      type: object
      properties:
        StudioLifecycleConfigArn:
          type: string
          description: The Amazon Resource Name (ARN) of the Lifecycle Configuration.
          minLength: 1
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:studio-lifecycle-config/.*
        StudioLifecycleConfigAppType:
          type: string
          description: The App type that the Lifecycle Configuration is attached to.
          enum:
            - JupyterServer
            - KernelGateway
            - CodeEditor
            - JupyterLab
        StudioLifecycleConfigContent:
          type: string
          description: The content of your Amazon SageMaker Studio Lifecycle Configuration script. This content must be base64 encoded.
          minLength: 1
          maxLength: 16384
          pattern: '[\S\s]+'
        StudioLifecycleConfigName:
          type: string
          description: The name of the Amazon SageMaker Studio Lifecycle Configuration.
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
        Tags:
          type: array
          description: Tags to be associated with the Lifecycle Configuration. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the Search API.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
      required:
        - StudioLifecycleConfigAppType
        - StudioLifecycleConfigContent
        - StudioLifecycleConfigName
      x-stackql-resource-name: studio_lifecycle_config
      description: Resource Type definition for AWS::SageMaker::StudioLifecycleConfig
      x-type-name: AWS::SageMaker::StudioLifecycleConfig
      x-stackql-primary-identifier:
        - StudioLifecycleConfigName
      x-create-only-properties:
        - StudioLifecycleConfigAppType
        - StudioLifecycleConfigContent
        - StudioLifecycleConfigName
        - Tags
      x-read-only-properties:
        - StudioLifecycleConfigArn
      x-required-properties:
        - StudioLifecycleConfigAppType
        - StudioLifecycleConfigContent
        - StudioLifecycleConfigName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - sagemaker:AddTags
          - sagemaker:ListTags
          - sagemaker:DeleteTags
      x-required-permissions:
        create:
          - sagemaker:CreateStudioLifecycleConfig
          - sagemaker:DescribeStudioLifecycleConfig
          - sagemaker:AddTags
          - sagemaker:ListTags
        read:
          - sagemaker:DescribeStudioLifecycleConfig
          - sagemaker:ListTags
        delete:
          - sagemaker:DeleteStudioLifecycleConfig
          - sagemaker:DescribeStudioLifecycleConfig
          - sagemaker:DeleteTags
          - sagemaker:ListTags
        list:
          - sagemaker:ListStudioLifecycleConfigs
          - sagemaker:ListTags
    UserProfile:
      type: object
      properties:
        UserProfileArn:
          type: string
          description: The user profile Amazon Resource Name (ARN).
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*
        DomainId:
          type: string
          description: The ID of the associated Domain.
          minLength: 1
          maxLength: 63
        SingleSignOnUserIdentifier:
          type: string
          description: A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
          pattern: UserName
        SingleSignOnUserValue:
          type: string
          description: The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
          minLength: 1
          maxLength: 256
        UserProfileName:
          type: string
          description: A name for the UserProfile.
          minLength: 1
          maxLength: 63
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
          uniqueItems: false
          minItems: 0
          maxItems: 50
        Tags:
          type: array
          description: A list of tags to apply to the user profile.
          uniqueItems: false
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DomainId
        - UserProfileName
      x-stackql-resource-name: user_profile
      description: Resource Type definition for AWS::SageMaker::UserProfile
      x-type-name: AWS::SageMaker::UserProfile
      x-stackql-primary-identifier:
        - UserProfileName
        - DomainId
      x-create-only-properties:
        - DomainId
        - UserProfileName
        - SingleSignOnUserIdentifier
        - SingleSignOnUserValue
        - UserSettings/RStudioServerProAppSettings/AccessStatus
        - UserSettings/RStudioServerProAppSettings/UserGroup
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - UserProfileArn
      x-required-properties:
        - DomainId
        - UserProfileName
      x-required-permissions:
        create:
          - sagemaker:CreateUserProfile
          - sagemaker:DescribeUserProfile
          - sagemaker:DescribeImage
          - sagemaker:DescribeImageVersion
          - iam:PassRole
        read:
          - sagemaker:DescribeUserProfile
        update:
          - sagemaker:UpdateUserProfile
          - sagemaker:DescribeUserProfile
          - sagemaker:DescribeImage
          - sagemaker:DescribeImageVersion
          - iam:PassRole
        delete:
          - sagemaker:DeleteUserProfile
          - sagemaker:DescribeUserProfile
        list:
          - sagemaker:ListUserProfiles
    CreateAppRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AppArn:
              type: string
              description: The Amazon Resource Name (ARN) of the app.
              minLength: 1
              maxLength: 256
              pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app/.*
            AppName:
              type: string
              description: The name of the app.
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
            AppType:
              type: string
              description: The type of app.
              enum:
                - JupyterServer
                - KernelGateway
                - RStudioServerPro
                - RSessionGateway
                - Canvas
            DomainId:
              type: string
              description: The domain ID.
              minLength: 1
              maxLength: 63
            ResourceSpec:
              $ref: '#/components/schemas/ResourceSpec'
              description: The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
            Tags:
              type: array
              description: A list of tags to apply to the app.
              uniqueItems: false
              minItems: 0
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            UserProfileName:
              type: string
              description: The user profile name.
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
          x-stackQL-stringOnly: true
      x-title: CreateAppRequest
      type: object
      required: []
    CreateAppImageConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AppImageConfigArn:
              type: string
              description: The Amazon Resource Name (ARN) of the AppImageConfig.
              minLength: 1
              maxLength: 256
              pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app-image-config/.*
            AppImageConfigName:
              type: string
              description: The Name of the AppImageConfig.
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
            KernelGatewayImageConfig:
              $ref: '#/components/schemas/KernelGatewayImageConfig'
              description: The KernelGatewayImageConfig.
            JupyterLabAppImageConfig:
              $ref: '#/components/schemas/JupyterLabAppImageConfig'
              description: The JupyterLabAppImageConfig.
            CodeEditorAppImageConfig:
              $ref: '#/components/schemas/CodeEditorAppImageConfig'
              description: The CodeEditorAppImageConfig.
            Tags:
              type: array
              description: A list of tags to apply to the AppImageConfig.
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
          x-stackQL-stringOnly: true
      x-title: CreateAppImageConfigRequest
      type: object
      required: []
    CreateClusterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ClusterArn:
              pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:cluster/[a-z0-9]{12}$
              description: The Amazon Resource Name (ARN) of the HyperPod Cluster.
              type: string
              maxLength: 256
            VpcConfig:
              $ref: '#/components/schemas/VpcConfig'
            NodeRecovery:
              description: If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.
              type: string
              enum:
                - Automatic
                - None
            CreationTime:
              description: The time at which the HyperPod cluster was created.
              type: string
            InstanceGroups:
              $ref: '#/components/schemas/ClusterInstanceGroupsList'
            ClusterName:
              minLength: 1
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
              description: The name of the HyperPod Cluster.
              type: string
              maxLength: 63
            FailureMessage:
              description: The failure message of the HyperPod Cluster.
              type: string
            Orchestrator:
              $ref: '#/components/schemas/Orchestrator'
            ClusterStatus:
              description: The status of the HyperPod Cluster.
              type: string
              enum:
                - Creating
                - Deleting
                - Failed
                - InService
                - RollingBack
                - SystemUpdating
                - Updating
            Tags:
              maxItems: 50
              uniqueItems: true
              description: Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateClusterRequest
      type: object
      required: []
    CreateDataQualityJobDefinitionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            JobDefinitionArn:
              description: The Amazon Resource Name (ARN) of job definition.
              type: string
              minLength: 1
              maxLength: 256
            JobDefinitionName:
              $ref: '#/components/schemas/JobDefinitionName'
            DataQualityBaselineConfig:
              $ref: '#/components/schemas/DataQualityBaselineConfig'
            DataQualityAppSpecification:
              $ref: '#/components/schemas/DataQualityAppSpecification'
            DataQualityJobInput:
              $ref: '#/components/schemas/DataQualityJobInput'
            DataQualityJobOutputConfig:
              $ref: '#/components/schemas/MonitoringOutputConfig'
            JobResources:
              $ref: '#/components/schemas/MonitoringResources'
            NetworkConfig:
              $ref: '#/components/schemas/NetworkConfig'
            EndpointName:
              $ref: '#/components/schemas/EndpointName'
            RoleArn:
              description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
              type: string
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
              minLength: 20
              maxLength: 2048
            StoppingCondition:
              $ref: '#/components/schemas/StoppingCondition'
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            CreationTime:
              description: The time at which the job definition was created.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateDataQualityJobDefinitionRequest
      type: object
      required: []
    CreateDeviceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DeviceFleetName:
              description: The name of the edge device fleet
              type: string
              pattern: ^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$
              minLength: 1
              maxLength: 63
            Device:
              description: The Edge Device you want to register against a device fleet
              $ref: '#/components/schemas/Device'
            Tags:
              description: Associate tags with the resource
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateDeviceRequest
      type: object
      required: []
    CreateDeviceFleetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              description: Description for the edge device fleet
              type: string
              pattern: '[\S\s]+'
              minLength: 0
              maxLength: 800
            DeviceFleetName:
              description: The name of the edge device fleet
              type: string
              pattern: ^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$
              minLength: 1
              maxLength: 63
            OutputConfig:
              description: S3 bucket and an ecryption key id (if available) to store outputs for the fleet
              $ref: '#/components/schemas/EdgeOutputConfig'
            RoleArn:
              description: Role associated with the device fleet
              type: string
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
              minLength: 20
              maxLength: 2048
            Tags:
              description: Associate tags with the resource
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateDeviceFleetRequest
      type: object
      required: []
    CreateEndpointRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DeploymentConfig:
              $ref: '#/components/schemas/DeploymentConfig'
              description: Specifies deployment configuration for updating the SageMaker endpoint. Includes rollback and update policies.
            EndpointArn:
              type: string
              description: The Amazon Resource Name (ARN) of the endpoint.
            EndpointConfigName:
              type: string
              description: The name of the endpoint configuration for the SageMaker endpoint. This is a required property.
            EndpointName:
              type: string
              description: The name of the SageMaker endpoint. This name must be unique within an AWS Region.
            ExcludeRetainedVariantProperties:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/VariantProperty'
              description: Specifies a list of variant properties that you want to exclude when updating an endpoint.
            RetainAllVariantProperties:
              type: boolean
              description: When set to true, retains all variant properties for an endpoint when it is updated.
            RetainDeploymentConfig:
              type: boolean
              description: When set to true, retains the deployment configuration during endpoint updates.
            Tags:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
              description: An array of key-value pairs to apply to this resource.
          x-stackQL-stringOnly: true
      x-title: CreateEndpointRequest
      type: object
      required: []
    CreateFeatureGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FeatureGroupName:
              type: string
              description: The Name of the FeatureGroup.
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
            RecordIdentifierFeatureName:
              type: string
              description: The Record Identifier Feature Name.
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
            EventTimeFeatureName:
              type: string
              description: The Event Time Feature Name.
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
            FeatureDefinitions:
              type: array
              description: An Array of Feature Definition
              uniqueItems: false
              x-insertionOrder: false
              minItems: 1
              maxItems: 2500
              items:
                $ref: '#/components/schemas/FeatureDefinition'
            OnlineStoreConfig:
              type: object
              additionalProperties: false
              properties:
                SecurityConfig:
                  $ref: '#/components/schemas/OnlineStoreSecurityConfig'
                EnableOnlineStore:
                  type: boolean
                StorageType:
                  $ref: '#/components/schemas/StorageType'
                TtlDuration:
                  $ref: '#/components/schemas/TtlDuration'
            OfflineStoreConfig:
              type: object
              additionalProperties: false
              properties:
                S3StorageConfig:
                  $ref: '#/components/schemas/S3StorageConfig'
                DisableGlueTableCreation:
                  type: boolean
                DataCatalogConfig:
                  $ref: '#/components/schemas/DataCatalogConfig'
                TableFormat:
                  $ref: '#/components/schemas/TableFormat'
              required:
                - S3StorageConfig
            ThroughputConfig:
              $ref: '#/components/schemas/ThroughputConfig'
            RoleArn:
              type: string
              description: Role Arn
              minLength: 20
              maxLength: 2048
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
            Description:
              type: string
              description: Description about the FeatureGroup.
              maxLength: 128
            CreationTime:
              description: A timestamp of FeatureGroup creation time.
              type: string
            FeatureGroupStatus:
              description: The status of the feature group.
              type: string
            Tags:
              type: array
              description: An array of key-value pair to apply to this resource.
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateFeatureGroupRequest
      type: object
      required: []
    CreateImageRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ImageName:
              $ref: '#/components/schemas/ImageName'
            ImageArn:
              $ref: '#/components/schemas/ImageArn'
            ImageRoleArn:
              $ref: '#/components/schemas/ImageRoleArn'
            ImageDisplayName:
              $ref: '#/components/schemas/ImageDisplayName'
            ImageDescription:
              $ref: '#/components/schemas/ImageDescription'
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateImageRequest
      type: object
      required: []
    CreateImageVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ImageName:
              $ref: '#/components/schemas/ImageName'
            ImageArn:
              $ref: '#/components/schemas/ImageArn'
            ImageVersionArn:
              $ref: '#/components/schemas/ImageVersionArn'
            BaseImage:
              $ref: '#/components/schemas/BaseImage'
            ContainerImage:
              $ref: '#/components/schemas/ContainerImage'
            Version:
              $ref: '#/components/schemas/Version'
            Alias:
              $ref: '#/components/schemas/Alias'
            Aliases:
              $ref: '#/components/schemas/Aliases'
            VendorGuidance:
              $ref: '#/components/schemas/VendorGuidance'
            JobType:
              $ref: '#/components/schemas/JobType'
            MLFramework:
              $ref: '#/components/schemas/MLFramework'
            ProgrammingLang:
              $ref: '#/components/schemas/ProgrammingLang'
            Processor:
              $ref: '#/components/schemas/Processor'
            Horovod:
              $ref: '#/components/schemas/Horovod'
            ReleaseNotes:
              $ref: '#/components/schemas/ReleaseNotes'
          x-stackQL-stringOnly: true
      x-title: CreateImageVersionRequest
      type: object
      required: []
    CreateInferenceComponentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InferenceComponentArn:
              $ref: '#/components/schemas/InferenceComponentArn'
            InferenceComponentName:
              $ref: '#/components/schemas/InferenceComponentName'
            EndpointArn:
              $ref: '#/components/schemas/EndpointArn'
            EndpointName:
              $ref: '#/components/schemas/EndpointName'
            VariantName:
              $ref: '#/components/schemas/VariantName'
            FailureReason:
              $ref: '#/components/schemas/FailureReason'
            Specification:
              $ref: '#/components/schemas/InferenceComponentSpecification'
            RuntimeConfig:
              $ref: '#/components/schemas/InferenceComponentRuntimeConfig'
            InferenceComponentStatus:
              $ref: '#/components/schemas/InferenceComponentStatus'
            CreationTime:
              $ref: '#/components/schemas/Timestamp'
            LastModifiedTime:
              $ref: '#/components/schemas/Timestamp'
            Tags:
              $ref: '#/components/schemas/TagList'
          x-stackQL-stringOnly: true
      x-title: CreateInferenceComponentRequest
      type: object
      required: []
    CreateInferenceExperimentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the inference experiment.
              type: string
              pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:inference-experiment/[a-zA-Z_0-9+=,.@\-_/]+$
              minLength: 20
              maxLength: 256
            Name:
              description: The name for the inference experiment.
              type: string
              minLength: 1
              maxLength: 120
            Type:
              description: The type of the inference experiment that you want to run.
              type: string
              enum:
                - ShadowMode
            Description:
              description: The description of the inference experiment.
              type: string
              pattern: .*
              minLength: 1
              maxLength: 1024
            RoleArn:
              description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment.
              type: string
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
              minLength: 20
              maxLength: 2048
            EndpointName:
              $ref: '#/components/schemas/EndpointName'
            EndpointMetadata:
              $ref: '#/components/schemas/EndpointMetadata'
            Schedule:
              $ref: '#/components/schemas/InferenceExperimentSchedule'
            KmsKey:
              type: string
              description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
              pattern: .*
              maxLength: 2048
            DataStorageConfig:
              $ref: '#/components/schemas/DataStorageConfig'
            ModelVariants:
              type: array
              description: An array of ModelVariantConfig objects. Each ModelVariantConfig object in the array describes the infrastructure configuration for the corresponding variant.
              maxItems: 2
              items:
                $ref: '#/components/schemas/ModelVariantConfig'
            ShadowModeConfig:
              $ref: '#/components/schemas/ShadowModeConfig'
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            CreationTime:
              description: The timestamp at which you created the inference experiment.
              type: string
            LastModifiedTime:
              description: The timestamp at which you last modified the inference experiment.
              type: string
            Status:
              description: The status of the inference experiment.
              type: string
              enum:
                - Creating
                - Created
                - Updating
                - Starting
                - Stopping
                - Running
                - Completed
                - Cancelled
            StatusReason:
              description: The error message or client-specified reason from the StopInferenceExperiment API, that explains the status of the inference experiment.
              type: string
              pattern: .*
              minLength: 1
              maxLength: 1024
            DesiredState:
              description: The desired state of the experiment after starting or stopping operation.
              type: string
              enum:
                - Running
                - Completed
                - Cancelled
          x-stackQL-stringOnly: true
      x-title: CreateInferenceExperimentRequest
      type: object
      required: []
    CreateMlflowTrackingServerRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            TrackingServerName:
              type: string
              description: The name of the MLFlow Tracking Server.
              minLength: 1
              maxLength: 256
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,255}$
            TrackingServerArn:
              description: The Amazon Resource Name (ARN) of the MLFlow Tracking Server.
              type: string
              maxLength: 2048
              pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:mlflow-tracking-server/.*$
            TrackingServerSize:
              type: string
              description: The size of the MLFlow Tracking Server.
              enum:
                - Small
                - Medium
                - Large
            MlflowVersion:
              type: string
              description: The MLFlow Version used on the MLFlow Tracking Server.
              minLength: 1
              maxLength: 32
              pattern: ^\d+(\.\d+)+$
            RoleArn:
              type: string
              description: The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on behalf of the customer.
              minLength: 20
              maxLength: 2048
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role\/?[a-zA-Z_0-9+=,.@\-_\/]+$
            ArtifactStoreUri:
              type: string
              description: The Amazon S3 URI for MLFlow Tracking Server artifacts.
              minLength: 1
              maxLength: 2048
              pattern: ^s3:\/\/([^\/]+)\/?(.*)$
            AutomaticModelRegistration:
              type: boolean
              description: A flag to enable Automatic SageMaker Model Registration.
            WeeklyMaintenanceWindowStart:
              type: string
              description: The start of the time window for maintenance of the MLFlow Tracking Server in UTC time.
              pattern: ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):([01]\d|2[0-3]):([0-5]\d)$
              maxLength: 9
            Tags:
              type: array
              minItems: 1
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateMlflowTrackingServerRequest
      type: object
      required: []
    CreateModelBiasJobDefinitionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            JobDefinitionArn:
              description: The Amazon Resource Name (ARN) of job definition.
              type: string
              minLength: 1
              maxLength: 256
            JobDefinitionName:
              $ref: '#/components/schemas/JobDefinitionName'
            ModelBiasBaselineConfig:
              $ref: '#/components/schemas/ModelBiasBaselineConfig'
            ModelBiasAppSpecification:
              $ref: '#/components/schemas/ModelBiasAppSpecification'
            ModelBiasJobInput:
              $ref: '#/components/schemas/ModelBiasJobInput'
            ModelBiasJobOutputConfig:
              $ref: '#/components/schemas/MonitoringOutputConfig'
            JobResources:
              $ref: '#/components/schemas/MonitoringResources'
            NetworkConfig:
              $ref: '#/components/schemas/NetworkConfig'
            EndpointName:
              $ref: '#/components/schemas/EndpointName'
            RoleArn:
              description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
              type: string
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
              minLength: 20
              maxLength: 2048
            StoppingCondition:
              $ref: '#/components/schemas/StoppingCondition'
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            CreationTime:
              description: The time at which the job definition was created.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateModelBiasJobDefinitionRequest
      type: object
      required: []
    CreateModelExplainabilityJobDefinitionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            JobDefinitionArn:
              description: The Amazon Resource Name (ARN) of job definition.
              type: string
              minLength: 1
              maxLength: 256
            JobDefinitionName:
              $ref: '#/components/schemas/JobDefinitionName'
            ModelExplainabilityBaselineConfig:
              $ref: '#/components/schemas/ModelExplainabilityBaselineConfig'
            ModelExplainabilityAppSpecification:
              $ref: '#/components/schemas/ModelExplainabilityAppSpecification'
            ModelExplainabilityJobInput:
              $ref: '#/components/schemas/ModelExplainabilityJobInput'
            ModelExplainabilityJobOutputConfig:
              $ref: '#/components/schemas/MonitoringOutputConfig'
            JobResources:
              $ref: '#/components/schemas/MonitoringResources'
            NetworkConfig:
              $ref: '#/components/schemas/NetworkConfig'
            EndpointName:
              $ref: '#/components/schemas/EndpointName'
            RoleArn:
              description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
              type: string
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
              minLength: 20
              maxLength: 2048
            StoppingCondition:
              $ref: '#/components/schemas/StoppingCondition'
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            CreationTime:
              description: The time at which the job definition was created.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateModelExplainabilityJobDefinitionRequest
      type: object
      required: []
    CreateModelPackageRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            AdditionalInferenceSpecifications:
              $ref: '#/components/schemas/AdditionalInferenceSpecifications'
            CertifyForMarketplace:
              $ref: '#/components/schemas/CertifyForMarketplace'
            ClientToken:
              $ref: '#/components/schemas/ClientToken'
            CustomerMetadataProperties:
              $ref: '#/components/schemas/CustomerMetadataProperties'
            Domain:
              $ref: '#/components/schemas/Domain'
            DriftCheckBaselines:
              $ref: '#/components/schemas/DriftCheckBaselines'
            InferenceSpecification:
              $ref: '#/components/schemas/InferenceSpecification'
            MetadataProperties:
              $ref: '#/components/schemas/MetadataProperties'
            ModelApprovalStatus:
              $ref: '#/components/schemas/ModelApprovalStatus'
            ModelMetrics:
              $ref: '#/components/schemas/ModelMetrics'
            ModelPackageDescription:
              $ref: '#/components/schemas/ModelPackageDescription'
            ModelPackageGroupName:
              $ref: '#/components/schemas/ModelPackageGroupName'
            ModelPackageName:
              $ref: '#/components/schemas/ModelPackageName'
            SamplePayloadUrl:
              $ref: '#/components/schemas/SamplePayloadUrl'
            SkipModelValidation:
              $ref: '#/components/schemas/SkipModelValidation'
            SourceAlgorithmSpecification:
              $ref: '#/components/schemas/SourceAlgorithmSpecification'
            Task:
              $ref: '#/components/schemas/Task'
            ValidationSpecification:
              $ref: '#/components/schemas/ValidationSpecification'
            ModelPackageArn:
              $ref: '#/components/schemas/ModelPackageArn'
            ApprovalDescription:
              $ref: '#/components/schemas/ApprovalDescription'
            CreationTime:
              $ref: '#/components/schemas/CreationTime'
            LastModifiedTime:
              $ref: '#/components/schemas/LastModifiedTime'
            ModelPackageStatus:
              $ref: '#/components/schemas/ModelPackageStatus'
            ModelPackageVersion:
              $ref: '#/components/schemas/ModelPackageVersion'
            AdditionalInferenceSpecificationsToAdd:
              $ref: '#/components/schemas/AdditionalInferenceSpecifications'
            ModelPackageStatusDetails:
              $ref: '#/components/schemas/ModelPackageStatusDetails'
            SourceUri:
              $ref: '#/components/schemas/SourceUri'
            ModelCard:
              $ref: '#/components/schemas/ModelCard'
            SecurityConfig:
              $ref: '#/components/schemas/SecurityConfig'
          x-stackQL-stringOnly: true
      x-title: CreateModelPackageRequest
      type: object
      required: []
    CreateModelPackageGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            ModelPackageGroupArn:
              $ref: '#/components/schemas/ModelPackageGroupArn'
            ModelPackageGroupName:
              $ref: '#/components/schemas/ModelPackageGroupName'
            ModelPackageGroupDescription:
              $ref: '#/components/schemas/ModelPackageGroupDescription'
            ModelPackageGroupPolicy:
              type: object
            CreationTime:
              description: The time at which the model package group was created.
              type: string
            ModelPackageGroupStatus:
              description: The status of a modelpackage group job.
              type: string
              enum:
                - Pending
                - InProgress
                - Completed
                - Failed
                - Deleting
                - DeleteFailed
          x-stackQL-stringOnly: true
      x-title: CreateModelPackageGroupRequest
      type: object
      required: []
    CreateModelQualityJobDefinitionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            JobDefinitionArn:
              description: The Amazon Resource Name (ARN) of job definition.
              type: string
              minLength: 1
              maxLength: 256
            JobDefinitionName:
              $ref: '#/components/schemas/JobDefinitionName'
            ModelQualityBaselineConfig:
              $ref: '#/components/schemas/ModelQualityBaselineConfig'
            ModelQualityAppSpecification:
              $ref: '#/components/schemas/ModelQualityAppSpecification'
            ModelQualityJobInput:
              $ref: '#/components/schemas/ModelQualityJobInput'
            ModelQualityJobOutputConfig:
              $ref: '#/components/schemas/MonitoringOutputConfig'
            JobResources:
              $ref: '#/components/schemas/MonitoringResources'
            NetworkConfig:
              $ref: '#/components/schemas/NetworkConfig'
            EndpointName:
              $ref: '#/components/schemas/EndpointName'
            RoleArn:
              description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
              type: string
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
              minLength: 20
              maxLength: 2048
            StoppingCondition:
              $ref: '#/components/schemas/StoppingCondition'
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            CreationTime:
              description: The time at which the job definition was created.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateModelQualityJobDefinitionRequest
      type: object
      required: []
    CreateMonitoringScheduleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            MonitoringScheduleArn:
              description: The Amazon Resource Name (ARN) of the monitoring schedule.
              type: string
              minLength: 1
              maxLength: 256
            MonitoringScheduleName:
              $ref: '#/components/schemas/MonitoringScheduleName'
            MonitoringScheduleConfig:
              $ref: '#/components/schemas/MonitoringScheduleConfig'
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            CreationTime:
              description: The time at which the schedule was created.
              type: string
            EndpointName:
              $ref: '#/components/schemas/EndpointName'
            FailureReason:
              type: string
              description: Contains the reason a monitoring job failed, if it failed.
              minLength: 1
              maxLength: 1024
            LastModifiedTime:
              description: A timestamp that indicates the last time the monitoring job was modified.
              type: string
            LastMonitoringExecutionSummary:
              description: Describes metadata on the last execution to run, if there was one.
              $ref: '#/components/schemas/MonitoringExecutionSummary'
            MonitoringScheduleStatus:
              description: The status of a schedule job.
              type: string
              enum:
                - Pending
                - Failed
                - Scheduled
                - Stopped
          x-stackQL-stringOnly: true
      x-title: CreateMonitoringScheduleRequest
      type: object
      required: []
    CreatePartnerAppRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              description: The Amazon Resource Name (ARN) of the created PartnerApp.
              minLength: 1
              maxLength: 128
              pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:partner-app/app-[A-Z0-9]{12}$
            Name:
              type: string
              description: A name for the PartnerApp.
              minLength: 1
              maxLength: 256
              pattern: ^[a-zA-Z0-9]+
            Type:
              type: string
              description: The type of PartnerApp.
              enum:
                - lakera-guard
                - comet
                - deepchecks-llm-evaluation
                - fiddler
            ExecutionRoleArn:
              type: string
              description: The execution role for the user.
              minLength: 20
              maxLength: 2048
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
            Tier:
              type: string
              description: The tier of the PartnerApp.
              minLength: 1
              maxLength: 64
            EnableIamSessionBasedIdentity:
              type: boolean
              description: Enables IAM Session based Identity for PartnerApp.
            ApplicationConfig:
              $ref: '#/components/schemas/PartnerAppConfig'
              description: A collection of settings that specify the maintenance schedule for the PartnerApp.
            AuthType:
              type: string
              description: The Auth type of PartnerApp.
              enum:
                - IAM
            BaseUrl:
              type: string
              description: The AppServerUrl based on app and account-info.
              maxLength: 2048
            MaintenanceConfig:
              $ref: '#/components/schemas/PartnerAppMaintenanceConfig'
              description: A collection of settings that specify the maintenance schedule for the PartnerApp.
            ClientToken:
              type: string
              description: The client token for the PartnerApp.
              minLength: 1
              maxLength: 36
              pattern: ^[a-zA-Z0-9-]+$
            Tags:
              type: array
              description: A list of tags to apply to the PartnerApp.
              uniqueItems: false
              x-insertionOrder: false
              minItems: 0
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreatePartnerAppRequest
      type: object
      required: []
    CreatePipelineRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PipelineName:
              type: string
              description: The name of the Pipeline.
              minLength: 1
              maxLength: 256
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
            PipelineDisplayName:
              type: string
              description: The display name of the Pipeline.
              minLength: 1
              maxLength: 256
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
            PipelineDescription:
              type: string
              description: The description of the Pipeline.
              minLength: 0
              maxLength: 3072
            PipelineDefinition:
              type: object
              oneOf:
                - additionalProperties: false
                  properties:
                    PipelineDefinitionBody:
                      type: string
                      description: A specification that defines the pipeline in JSON format.
                  required:
                    - PipelineDefinitionBody
                - additionalProperties: false
                  properties:
                    PipelineDefinitionS3Location:
                      $ref: '#/components/schemas/S3Location'
                  required:
                    - PipelineDefinitionS3Location
            RoleArn:
              type: string
              description: Role Arn
              minLength: 20
              maxLength: 2048
              pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
            Tags:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
            ParallelismConfiguration:
              type: object
              additionalProperties: false
              properties:
                MaxParallelExecutionSteps:
                  description: Maximum parallel execution steps
                  type: integer
                  minimum: 1
              required:
                - MaxParallelExecutionSteps
          x-stackQL-stringOnly: true
      x-title: CreatePipelineRequest
      type: object
      required: []
    CreateProjectRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Tags:
              type: array
              maxItems: 40
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            ProjectArn:
              $ref: '#/components/schemas/ProjectArn'
            ProjectId:
              $ref: '#/components/schemas/ProjectId'
            ProjectName:
              $ref: '#/components/schemas/ProjectName'
            ProjectDescription:
              $ref: '#/components/schemas/ProjectDescription'
            CreationTime:
              description: The time at which the project was created.
              type: string
            ServiceCatalogProvisioningDetails:
              description: Input ServiceCatalog Provisioning Details
              type: object
              properties:
                ProductId:
                  $ref: '#/components/schemas/ProductId'
                ProvisioningArtifactId:
                  $ref: '#/components/schemas/ProvisioningArtifactId'
                PathId:
                  $ref: '#/components/schemas/PathId'
                ProvisioningParameters:
                  type: array
                  description: Parameters specified by the administrator that are required for provisioning the product.
                  items:
                    $ref: '#/components/schemas/ProvisioningParameter'
              required:
                - ProductId
              additionalProperties: false
            ServiceCatalogProvisionedProductDetails:
              description: Provisioned ServiceCatalog  Details
              type: object
              properties:
                ProvisionedProductId:
                  $ref: '#/components/schemas/ProvisioningArtifactId'
                ProvisionedProductStatusMessage:
                  $ref: '#/components/schemas/ProvisionedProductStatusMessage'
              additionalProperties: false
            ProjectStatus:
              description: The status of a project.
              type: string
              enum:
                - Pending
                - CreateInProgress
                - CreateCompleted
                - CreateFailed
                - DeleteInProgress
                - DeleteFailed
                - DeleteCompleted
          x-stackQL-stringOnly: true
      x-title: CreateProjectRequest
      type: object
      required: []
    CreateSpaceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            SpaceArn:
              type: string
              description: The space Amazon Resource Name (ARN).
              maxLength: 256
              pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:space/.*
            DomainId:
              type: string
              description: The ID of the associated Domain.
              minLength: 1
              maxLength: 63
            SpaceName:
              type: string
              description: A name for the Space.
              minLength: 1
              maxLength: 63
            SpaceSettings:
              $ref: '#/components/schemas/SpaceSettings'
              description: A collection of settings.
              uniqueItems: false
              minItems: 0
              maxItems: 50
            Tags:
              type: array
              description: A list of tags to apply to the space.
              uniqueItems: false
              minItems: 0
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            OwnershipSettings:
              $ref: '#/components/schemas/OwnershipSettings'
            SpaceSharingSettings:
              $ref: '#/components/schemas/SpaceSharingSettings'
            SpaceDisplayName:
              type: string
              maxLength: 64
              pattern: ^(?!\s*$).+
            Url:
              type: string
              maxLength: 1024
          x-stackQL-stringOnly: true
      x-title: CreateSpaceRequest
      type: object
      required: []
    CreateStudioLifecycleConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            StudioLifecycleConfigArn:
              type: string
              description: The Amazon Resource Name (ARN) of the Lifecycle Configuration.
              minLength: 1
              maxLength: 256
              pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:studio-lifecycle-config/.*
            StudioLifecycleConfigAppType:
              type: string
              description: The App type that the Lifecycle Configuration is attached to.
              enum:
                - JupyterServer
                - KernelGateway
                - CodeEditor
                - JupyterLab
            StudioLifecycleConfigContent:
              type: string
              description: The content of your Amazon SageMaker Studio Lifecycle Configuration script. This content must be base64 encoded.
              minLength: 1
              maxLength: 16384
              pattern: '[\S\s]+'
            StudioLifecycleConfigName:
              type: string
              description: The name of the Amazon SageMaker Studio Lifecycle Configuration.
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
            Tags:
              type: array
              description: Tags to be associated with the Lifecycle Configuration. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the Search API.
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
          x-stackQL-stringOnly: true
      x-title: CreateStudioLifecycleConfigRequest
      type: object
      required: []
    CreateUserProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            UserProfileArn:
              type: string
              description: The user profile Amazon Resource Name (ARN).
              maxLength: 256
              pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*
            DomainId:
              type: string
              description: The ID of the associated Domain.
              minLength: 1
              maxLength: 63
            SingleSignOnUserIdentifier:
              type: string
              description: A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
              pattern: UserName
            SingleSignOnUserValue:
              type: string
              description: The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
              minLength: 1
              maxLength: 256
            UserProfileName:
              type: string
              description: A name for the UserProfile.
              minLength: 1
              maxLength: 63
            UserSettings:
              $ref: '#/components/schemas/UserSettings'
              description: A collection of settings.
              uniqueItems: false
              minItems: 0
              maxItems: 50
            Tags:
              type: array
              description: A list of tags to apply to the user profile.
              uniqueItems: false
              minItems: 0
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateUserProfileRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    apps:
      name: apps
      id: aws.sagemaker.apps
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::SageMaker::App
      x-identifiers:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__App&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/apps/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/apps/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AppArn') as app_arn,
              JSON_EXTRACT(Properties, '$.AppName') as app_name,
              JSON_EXTRACT(Properties, '$.AppType') as app_type,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.ResourceSpec') as resource_spec,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::App'
              AND data__Identifier = '<AppName>|<AppType>|<DomainId>|<UserProfileName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AppArn') as app_arn,
                JSON_EXTRACT(detail.Properties, '$.AppName') as app_name,
                JSON_EXTRACT(detail.Properties, '$.AppType') as app_type,
                JSON_EXTRACT(detail.Properties, '$.DomainId') as domain_id,
                JSON_EXTRACT(detail.Properties, '$.ResourceSpec') as resource_spec,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UserProfileName') as user_profile_name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::App'
                AND detail.data__TypeName = 'AWS::SageMaker::App'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AppArn') as app_arn,
                  json_extract_path_text(Properties, 'AppName') as app_name,
                  json_extract_path_text(Properties, 'AppType') as app_type,
                  json_extract_path_text(Properties, 'DomainId') as domain_id,
                  json_extract_path_text(Properties, 'ResourceSpec') as resource_spec,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UserProfileName') as user_profile_name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::App'
                  AND data__Identifier = '<AppName>|<AppType>|<DomainId>|<UserProfileName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AppArn') as app_arn,
                    json_extract_path_text(detail.Properties, 'AppName') as app_name,
                    json_extract_path_text(detail.Properties, 'AppType') as app_type,
                    json_extract_path_text(detail.Properties, 'DomainId') as domain_id,
                    json_extract_path_text(detail.Properties, 'ResourceSpec') as resource_spec,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UserProfileName') as user_profile_name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::App'
                    AND detail.data__TypeName = 'AWS::SageMaker::App'
                    AND listing.region = 'us-east-1'
    apps_list_only:
      name: apps_list_only
      id: aws.sagemaker.apps_list_only
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::SageMaker::App
      x-identifiers:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppName') as app_name,
              JSON_EXTRACT(Properties, '$.AppType') as app_type,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::App'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppName') as app_name,
                json_extract_path_text(Properties, 'AppType') as app_type,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'UserProfileName') as user_profile_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::App'
                AND region = 'us-east-1'
    app_tags:
      name: app_tags
      id: aws.sagemaker.app_tags
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::SageMaker::App
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AppArn') as app_arn,
              JSON_EXTRACT(detail.Properties, '$.AppName') as app_name,
              JSON_EXTRACT(detail.Properties, '$.AppType') as app_type,
              JSON_EXTRACT(detail.Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(detail.Properties, '$.ResourceSpec') as resource_spec,
              JSON_EXTRACT(detail.Properties, '$.UserProfileName') as user_profile_name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::App'
              AND detail.data__TypeName = 'AWS::SageMaker::App'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AppArn') as app_arn,
                json_extract_path_text(detail.Properties, 'AppName') as app_name,
                json_extract_path_text(detail.Properties, 'AppType') as app_type,
                json_extract_path_text(detail.Properties, 'DomainId') as domain_id,
                json_extract_path_text(detail.Properties, 'ResourceSpec') as resource_spec,
                json_extract_path_text(detail.Properties, 'UserProfileName') as user_profile_name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::App'
                AND detail.data__TypeName = 'AWS::SageMaker::App'
                AND listing.region = 'us-east-1'
    app_image_configs:
      name: app_image_configs
      id: aws.sagemaker.app_image_configs
      x-cfn-schema-name: AppImageConfig
      x-cfn-type-name: AWS::SageMaker::AppImageConfig
      x-identifiers:
        - AppImageConfigName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AppImageConfig&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::AppImageConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::AppImageConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::AppImageConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/app_image_configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/app_image_configs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/app_image_configs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AppImageConfigArn') as app_image_config_arn,
              JSON_EXTRACT(Properties, '$.AppImageConfigName') as app_image_config_name,
              JSON_EXTRACT(Properties, '$.KernelGatewayImageConfig') as kernel_gateway_image_config,
              JSON_EXTRACT(Properties, '$.JupyterLabAppImageConfig') as jupyter_lab_app_image_config,
              JSON_EXTRACT(Properties, '$.CodeEditorAppImageConfig') as code_editor_app_image_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::AppImageConfig'
              AND data__Identifier = '<AppImageConfigName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AppImageConfigArn') as app_image_config_arn,
                JSON_EXTRACT(detail.Properties, '$.AppImageConfigName') as app_image_config_name,
                JSON_EXTRACT(detail.Properties, '$.KernelGatewayImageConfig') as kernel_gateway_image_config,
                JSON_EXTRACT(detail.Properties, '$.JupyterLabAppImageConfig') as jupyter_lab_app_image_config,
                JSON_EXTRACT(detail.Properties, '$.CodeEditorAppImageConfig') as code_editor_app_image_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::AppImageConfig'
                AND detail.data__TypeName = 'AWS::SageMaker::AppImageConfig'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AppImageConfigArn') as app_image_config_arn,
                  json_extract_path_text(Properties, 'AppImageConfigName') as app_image_config_name,
                  json_extract_path_text(Properties, 'KernelGatewayImageConfig') as kernel_gateway_image_config,
                  json_extract_path_text(Properties, 'JupyterLabAppImageConfig') as jupyter_lab_app_image_config,
                  json_extract_path_text(Properties, 'CodeEditorAppImageConfig') as code_editor_app_image_config,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::AppImageConfig'
                  AND data__Identifier = '<AppImageConfigName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AppImageConfigArn') as app_image_config_arn,
                    json_extract_path_text(detail.Properties, 'AppImageConfigName') as app_image_config_name,
                    json_extract_path_text(detail.Properties, 'KernelGatewayImageConfig') as kernel_gateway_image_config,
                    json_extract_path_text(detail.Properties, 'JupyterLabAppImageConfig') as jupyter_lab_app_image_config,
                    json_extract_path_text(detail.Properties, 'CodeEditorAppImageConfig') as code_editor_app_image_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::AppImageConfig'
                    AND detail.data__TypeName = 'AWS::SageMaker::AppImageConfig'
                    AND listing.region = 'us-east-1'
    app_image_configs_list_only:
      name: app_image_configs_list_only
      id: aws.sagemaker.app_image_configs_list_only
      x-cfn-schema-name: AppImageConfig
      x-cfn-type-name: AWS::SageMaker::AppImageConfig
      x-identifiers:
        - AppImageConfigName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppImageConfigName') as app_image_config_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::AppImageConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AppImageConfigName') as app_image_config_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::AppImageConfig'
                AND region = 'us-east-1'
    app_image_config_tags:
      name: app_image_config_tags
      id: aws.sagemaker.app_image_config_tags
      x-cfn-schema-name: AppImageConfig
      x-cfn-type-name: AWS::SageMaker::AppImageConfig
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AppImageConfigArn') as app_image_config_arn,
              JSON_EXTRACT(detail.Properties, '$.AppImageConfigName') as app_image_config_name,
              JSON_EXTRACT(detail.Properties, '$.KernelGatewayImageConfig') as kernel_gateway_image_config,
              JSON_EXTRACT(detail.Properties, '$.JupyterLabAppImageConfig') as jupyter_lab_app_image_config,
              JSON_EXTRACT(detail.Properties, '$.CodeEditorAppImageConfig') as code_editor_app_image_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::AppImageConfig'
              AND detail.data__TypeName = 'AWS::SageMaker::AppImageConfig'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AppImageConfigArn') as app_image_config_arn,
                json_extract_path_text(detail.Properties, 'AppImageConfigName') as app_image_config_name,
                json_extract_path_text(detail.Properties, 'KernelGatewayImageConfig') as kernel_gateway_image_config,
                json_extract_path_text(detail.Properties, 'JupyterLabAppImageConfig') as jupyter_lab_app_image_config,
                json_extract_path_text(detail.Properties, 'CodeEditorAppImageConfig') as code_editor_app_image_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::AppImageConfig'
                AND detail.data__TypeName = 'AWS::SageMaker::AppImageConfig'
                AND listing.region = 'us-east-1'
    clusters:
      name: clusters
      id: aws.sagemaker.clusters
      x-cfn-schema-name: Cluster
      x-cfn-type-name: AWS::SageMaker::Cluster
      x-identifiers:
        - ClusterArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Cluster&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Cluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Cluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Cluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(Properties, '$.NodeRecovery') as node_recovery,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.InstanceGroups') as instance_groups,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.FailureMessage') as failure_message,
              JSON_EXTRACT(Properties, '$.Orchestrator') as orchestrator,
              JSON_EXTRACT(Properties, '$.ClusterStatus') as cluster_status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Cluster'
              AND data__Identifier = '<ClusterArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ClusterArn') as cluster_arn,
                JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
                JSON_EXTRACT(detail.Properties, '$.NodeRecovery') as node_recovery,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.InstanceGroups') as instance_groups,
                JSON_EXTRACT(detail.Properties, '$.ClusterName') as cluster_name,
                JSON_EXTRACT(detail.Properties, '$.FailureMessage') as failure_message,
                JSON_EXTRACT(detail.Properties, '$.Orchestrator') as orchestrator,
                JSON_EXTRACT(detail.Properties, '$.ClusterStatus') as cluster_status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::Cluster'
                AND detail.data__TypeName = 'AWS::SageMaker::Cluster'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                  json_extract_path_text(Properties, 'VpcConfig') as vpc_config,
                  json_extract_path_text(Properties, 'NodeRecovery') as node_recovery,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'InstanceGroups') as instance_groups,
                  json_extract_path_text(Properties, 'ClusterName') as cluster_name,
                  json_extract_path_text(Properties, 'FailureMessage') as failure_message,
                  json_extract_path_text(Properties, 'Orchestrator') as orchestrator,
                  json_extract_path_text(Properties, 'ClusterStatus') as cluster_status,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Cluster'
                  AND data__Identifier = '<ClusterArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ClusterArn') as cluster_arn,
                    json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                    json_extract_path_text(detail.Properties, 'NodeRecovery') as node_recovery,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'InstanceGroups') as instance_groups,
                    json_extract_path_text(detail.Properties, 'ClusterName') as cluster_name,
                    json_extract_path_text(detail.Properties, 'FailureMessage') as failure_message,
                    json_extract_path_text(detail.Properties, 'Orchestrator') as orchestrator,
                    json_extract_path_text(detail.Properties, 'ClusterStatus') as cluster_status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::Cluster'
                    AND detail.data__TypeName = 'AWS::SageMaker::Cluster'
                    AND listing.region = 'us-east-1'
    clusters_list_only:
      name: clusters_list_only
      id: aws.sagemaker.clusters_list_only
      x-cfn-schema-name: Cluster
      x-cfn-type-name: AWS::SageMaker::Cluster
      x-identifiers:
        - ClusterArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Cluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Cluster'
                AND region = 'us-east-1'
    cluster_tags:
      name: cluster_tags
      id: aws.sagemaker.cluster_tags
      x-cfn-schema-name: Cluster
      x-cfn-type-name: AWS::SageMaker::Cluster
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(detail.Properties, '$.NodeRecovery') as node_recovery,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.InstanceGroups') as instance_groups,
              JSON_EXTRACT(detail.Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(detail.Properties, '$.FailureMessage') as failure_message,
              JSON_EXTRACT(detail.Properties, '$.Orchestrator') as orchestrator,
              JSON_EXTRACT(detail.Properties, '$.ClusterStatus') as cluster_status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::Cluster'
              AND detail.data__TypeName = 'AWS::SageMaker::Cluster'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ClusterArn') as cluster_arn,
                json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                json_extract_path_text(detail.Properties, 'NodeRecovery') as node_recovery,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'InstanceGroups') as instance_groups,
                json_extract_path_text(detail.Properties, 'ClusterName') as cluster_name,
                json_extract_path_text(detail.Properties, 'FailureMessage') as failure_message,
                json_extract_path_text(detail.Properties, 'Orchestrator') as orchestrator,
                json_extract_path_text(detail.Properties, 'ClusterStatus') as cluster_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::Cluster'
                AND detail.data__TypeName = 'AWS::SageMaker::Cluster'
                AND listing.region = 'us-east-1'
    data_quality_job_definitions:
      name: data_quality_job_definitions
      id: aws.sagemaker.data_quality_job_definitions
      x-cfn-schema-name: DataQualityJobDefinition
      x-cfn-type-name: AWS::SageMaker::DataQualityJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataQualityJobDefinition&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::DataQualityJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::DataQualityJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_quality_job_definitions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_quality_job_definitions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(Properties, '$.DataQualityBaselineConfig') as data_quality_baseline_config,
              JSON_EXTRACT(Properties, '$.DataQualityAppSpecification') as data_quality_app_specification,
              JSON_EXTRACT(Properties, '$.DataQualityJobInput') as data_quality_job_input,
              JSON_EXTRACT(Properties, '$.DataQualityJobOutputConfig') as data_quality_job_output_config,
              JSON_EXTRACT(Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
              AND data__Identifier = '<JobDefinitionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
                JSON_EXTRACT(detail.Properties, '$.DataQualityBaselineConfig') as data_quality_baseline_config,
                JSON_EXTRACT(detail.Properties, '$.DataQualityAppSpecification') as data_quality_app_specification,
                JSON_EXTRACT(detail.Properties, '$.DataQualityJobInput') as data_quality_job_input,
                JSON_EXTRACT(detail.Properties, '$.DataQualityJobOutputConfig') as data_quality_job_output_config,
                JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
                JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn,
                  json_extract_path_text(Properties, 'JobDefinitionName') as job_definition_name,
                  json_extract_path_text(Properties, 'DataQualityBaselineConfig') as data_quality_baseline_config,
                  json_extract_path_text(Properties, 'DataQualityAppSpecification') as data_quality_app_specification,
                  json_extract_path_text(Properties, 'DataQualityJobInput') as data_quality_job_input,
                  json_extract_path_text(Properties, 'DataQualityJobOutputConfig') as data_quality_job_output_config,
                  json_extract_path_text(Properties, 'JobResources') as job_resources,
                  json_extract_path_text(Properties, 'NetworkConfig') as network_config,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'StoppingCondition') as stopping_condition,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                  AND data__Identifier = '<JobDefinitionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                    json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                    json_extract_path_text(detail.Properties, 'DataQualityBaselineConfig') as data_quality_baseline_config,
                    json_extract_path_text(detail.Properties, 'DataQualityAppSpecification') as data_quality_app_specification,
                    json_extract_path_text(detail.Properties, 'DataQualityJobInput') as data_quality_job_input,
                    json_extract_path_text(detail.Properties, 'DataQualityJobOutputConfig') as data_quality_job_output_config,
                    json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                    json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                    AND detail.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                    AND listing.region = 'us-east-1'
    data_quality_job_definitions_list_only:
      name: data_quality_job_definitions_list_only
      id: aws.sagemaker.data_quality_job_definitions_list_only
      x-cfn-schema-name: DataQualityJobDefinition
      x-cfn-type-name: AWS::SageMaker::DataQualityJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                AND region = 'us-east-1'
    data_quality_job_definition_tags:
      name: data_quality_job_definition_tags
      id: aws.sagemaker.data_quality_job_definition_tags
      x-cfn-schema-name: DataQualityJobDefinition
      x-cfn-type-name: AWS::SageMaker::DataQualityJobDefinition
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(detail.Properties, '$.DataQualityBaselineConfig') as data_quality_baseline_config,
              JSON_EXTRACT(detail.Properties, '$.DataQualityAppSpecification') as data_quality_app_specification,
              JSON_EXTRACT(detail.Properties, '$.DataQualityJobInput') as data_quality_job_input,
              JSON_EXTRACT(detail.Properties, '$.DataQualityJobOutputConfig') as data_quality_job_output_config,
              JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
              AND detail.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                json_extract_path_text(detail.Properties, 'DataQualityBaselineConfig') as data_quality_baseline_config,
                json_extract_path_text(detail.Properties, 'DataQualityAppSpecification') as data_quality_app_specification,
                json_extract_path_text(detail.Properties, 'DataQualityJobInput') as data_quality_job_input,
                json_extract_path_text(detail.Properties, 'DataQualityJobOutputConfig') as data_quality_job_output_config,
                json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
                AND listing.region = 'us-east-1'
    devices:
      name: devices
      id: aws.sagemaker.devices
      x-cfn-schema-name: Device
      x-cfn-type-name: AWS::SageMaker::Device
      x-identifiers:
        - Device/DeviceName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Device&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Device"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Device"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Device"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/devices/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DeviceFleetName') as device_fleet_name,
              JSON_EXTRACT(Properties, '$.Device') as device,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Device'
              AND data__Identifier = '<Device/DeviceName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'DeviceFleetName') as device_fleet_name,
                json_extract_path_text(Properties, 'Device') as device,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Device'
                AND data__Identifier = '<Device/DeviceName>'
                AND region = 'us-east-1'
    device_fleets:
      name: device_fleets
      id: aws.sagemaker.device_fleets
      x-cfn-schema-name: DeviceFleet
      x-cfn-type-name: AWS::SageMaker::DeviceFleet
      x-identifiers:
        - DeviceFleetName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DeviceFleet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::DeviceFleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::DeviceFleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::DeviceFleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/device_fleets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/device_fleets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/device_fleets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DeviceFleetName') as device_fleet_name,
              JSON_EXTRACT(Properties, '$.OutputConfig') as output_config,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::DeviceFleet'
              AND data__Identifier = '<DeviceFleetName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DeviceFleetName') as device_fleet_name,
                json_extract_path_text(Properties, 'OutputConfig') as output_config,
                json_extract_path_text(Properties, 'RoleArn') as role_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::DeviceFleet'
                AND data__Identifier = '<DeviceFleetName>'
                AND region = 'us-east-1'
    endpoints:
      name: endpoints
      id: aws.sagemaker.endpoints
      x-cfn-schema-name: Endpoint
      x-cfn-type-name: AWS::SageMaker::Endpoint
      x-identifiers:
        - EndpointArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Endpoint&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DeploymentConfig') as deployment_config,
              JSON_EXTRACT(Properties, '$.EndpointArn') as endpoint_arn,
              JSON_EXTRACT(Properties, '$.EndpointConfigName') as endpoint_config_name,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.ExcludeRetainedVariantProperties') as exclude_retained_variant_properties,
              JSON_EXTRACT(Properties, '$.RetainAllVariantProperties') as retain_all_variant_properties,
              JSON_EXTRACT(Properties, '$.RetainDeploymentConfig') as retain_deployment_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Endpoint'
              AND data__Identifier = '<EndpointArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DeploymentConfig') as deployment_config,
                JSON_EXTRACT(detail.Properties, '$.EndpointArn') as endpoint_arn,
                JSON_EXTRACT(detail.Properties, '$.EndpointConfigName') as endpoint_config_name,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.ExcludeRetainedVariantProperties') as exclude_retained_variant_properties,
                JSON_EXTRACT(detail.Properties, '$.RetainAllVariantProperties') as retain_all_variant_properties,
                JSON_EXTRACT(detail.Properties, '$.RetainDeploymentConfig') as retain_deployment_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::Endpoint'
                AND detail.data__TypeName = 'AWS::SageMaker::Endpoint'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DeploymentConfig') as deployment_config,
                  json_extract_path_text(Properties, 'EndpointArn') as endpoint_arn,
                  json_extract_path_text(Properties, 'EndpointConfigName') as endpoint_config_name,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'ExcludeRetainedVariantProperties') as exclude_retained_variant_properties,
                  json_extract_path_text(Properties, 'RetainAllVariantProperties') as retain_all_variant_properties,
                  json_extract_path_text(Properties, 'RetainDeploymentConfig') as retain_deployment_config,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Endpoint'
                  AND data__Identifier = '<EndpointArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DeploymentConfig') as deployment_config,
                    json_extract_path_text(detail.Properties, 'EndpointArn') as endpoint_arn,
                    json_extract_path_text(detail.Properties, 'EndpointConfigName') as endpoint_config_name,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'ExcludeRetainedVariantProperties') as exclude_retained_variant_properties,
                    json_extract_path_text(detail.Properties, 'RetainAllVariantProperties') as retain_all_variant_properties,
                    json_extract_path_text(detail.Properties, 'RetainDeploymentConfig') as retain_deployment_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::Endpoint'
                    AND detail.data__TypeName = 'AWS::SageMaker::Endpoint'
                    AND listing.region = 'us-east-1'
    endpoints_list_only:
      name: endpoints_list_only
      id: aws.sagemaker.endpoints_list_only
      x-cfn-schema-name: Endpoint
      x-cfn-type-name: AWS::SageMaker::Endpoint
      x-identifiers:
        - EndpointArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EndpointArn') as endpoint_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Endpoint'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EndpointArn') as endpoint_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Endpoint'
                AND region = 'us-east-1'
    endpoint_tags:
      name: endpoint_tags
      id: aws.sagemaker.endpoint_tags
      x-cfn-schema-name: Endpoint
      x-cfn-type-name: AWS::SageMaker::Endpoint
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DeploymentConfig') as deployment_config,
              JSON_EXTRACT(detail.Properties, '$.EndpointArn') as endpoint_arn,
              JSON_EXTRACT(detail.Properties, '$.EndpointConfigName') as endpoint_config_name,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.ExcludeRetainedVariantProperties') as exclude_retained_variant_properties,
              JSON_EXTRACT(detail.Properties, '$.RetainAllVariantProperties') as retain_all_variant_properties,
              JSON_EXTRACT(detail.Properties, '$.RetainDeploymentConfig') as retain_deployment_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::Endpoint'
              AND detail.data__TypeName = 'AWS::SageMaker::Endpoint'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DeploymentConfig') as deployment_config,
                json_extract_path_text(detail.Properties, 'EndpointArn') as endpoint_arn,
                json_extract_path_text(detail.Properties, 'EndpointConfigName') as endpoint_config_name,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'ExcludeRetainedVariantProperties') as exclude_retained_variant_properties,
                json_extract_path_text(detail.Properties, 'RetainAllVariantProperties') as retain_all_variant_properties,
                json_extract_path_text(detail.Properties, 'RetainDeploymentConfig') as retain_deployment_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::Endpoint'
                AND detail.data__TypeName = 'AWS::SageMaker::Endpoint'
                AND listing.region = 'us-east-1'
    feature_groups:
      name: feature_groups
      id: aws.sagemaker.feature_groups
      x-cfn-schema-name: FeatureGroup
      x-cfn-type-name: AWS::SageMaker::FeatureGroup
      x-identifiers:
        - FeatureGroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__FeatureGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::FeatureGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::FeatureGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::FeatureGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/feature_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FeatureGroupName') as feature_group_name,
              JSON_EXTRACT(Properties, '$.RecordIdentifierFeatureName') as record_identifier_feature_name,
              JSON_EXTRACT(Properties, '$.EventTimeFeatureName') as event_time_feature_name,
              JSON_EXTRACT(Properties, '$.FeatureDefinitions') as feature_definitions,
              JSON_EXTRACT(Properties, '$.OnlineStoreConfig') as online_store_config,
              JSON_EXTRACT(Properties, '$.OfflineStoreConfig') as offline_store_config,
              JSON_EXTRACT(Properties, '$.ThroughputConfig') as throughput_config,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.FeatureGroupStatus') as feature_group_status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::FeatureGroup'
              AND data__Identifier = '<FeatureGroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FeatureGroupName') as feature_group_name,
                JSON_EXTRACT(detail.Properties, '$.RecordIdentifierFeatureName') as record_identifier_feature_name,
                JSON_EXTRACT(detail.Properties, '$.EventTimeFeatureName') as event_time_feature_name,
                JSON_EXTRACT(detail.Properties, '$.FeatureDefinitions') as feature_definitions,
                JSON_EXTRACT(detail.Properties, '$.OnlineStoreConfig') as online_store_config,
                JSON_EXTRACT(detail.Properties, '$.OfflineStoreConfig') as offline_store_config,
                JSON_EXTRACT(detail.Properties, '$.ThroughputConfig') as throughput_config,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.FeatureGroupStatus') as feature_group_status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::FeatureGroup'
                AND detail.data__TypeName = 'AWS::SageMaker::FeatureGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FeatureGroupName') as feature_group_name,
                  json_extract_path_text(Properties, 'RecordIdentifierFeatureName') as record_identifier_feature_name,
                  json_extract_path_text(Properties, 'EventTimeFeatureName') as event_time_feature_name,
                  json_extract_path_text(Properties, 'FeatureDefinitions') as feature_definitions,
                  json_extract_path_text(Properties, 'OnlineStoreConfig') as online_store_config,
                  json_extract_path_text(Properties, 'OfflineStoreConfig') as offline_store_config,
                  json_extract_path_text(Properties, 'ThroughputConfig') as throughput_config,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'FeatureGroupStatus') as feature_group_status,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::FeatureGroup'
                  AND data__Identifier = '<FeatureGroupName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FeatureGroupName') as feature_group_name,
                    json_extract_path_text(detail.Properties, 'RecordIdentifierFeatureName') as record_identifier_feature_name,
                    json_extract_path_text(detail.Properties, 'EventTimeFeatureName') as event_time_feature_name,
                    json_extract_path_text(detail.Properties, 'FeatureDefinitions') as feature_definitions,
                    json_extract_path_text(detail.Properties, 'OnlineStoreConfig') as online_store_config,
                    json_extract_path_text(detail.Properties, 'OfflineStoreConfig') as offline_store_config,
                    json_extract_path_text(detail.Properties, 'ThroughputConfig') as throughput_config,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'FeatureGroupStatus') as feature_group_status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::FeatureGroup'
                    AND detail.data__TypeName = 'AWS::SageMaker::FeatureGroup'
                    AND listing.region = 'us-east-1'
    feature_groups_list_only:
      name: feature_groups_list_only
      id: aws.sagemaker.feature_groups_list_only
      x-cfn-schema-name: FeatureGroup
      x-cfn-type-name: AWS::SageMaker::FeatureGroup
      x-identifiers:
        - FeatureGroupName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FeatureGroupName') as feature_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::FeatureGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FeatureGroupName') as feature_group_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::FeatureGroup'
                AND region = 'us-east-1'
    feature_group_tags:
      name: feature_group_tags
      id: aws.sagemaker.feature_group_tags
      x-cfn-schema-name: FeatureGroup
      x-cfn-type-name: AWS::SageMaker::FeatureGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.FeatureGroupName') as feature_group_name,
              JSON_EXTRACT(detail.Properties, '$.RecordIdentifierFeatureName') as record_identifier_feature_name,
              JSON_EXTRACT(detail.Properties, '$.EventTimeFeatureName') as event_time_feature_name,
              JSON_EXTRACT(detail.Properties, '$.FeatureDefinitions') as feature_definitions,
              JSON_EXTRACT(detail.Properties, '$.OnlineStoreConfig') as online_store_config,
              JSON_EXTRACT(detail.Properties, '$.OfflineStoreConfig') as offline_store_config,
              JSON_EXTRACT(detail.Properties, '$.ThroughputConfig') as throughput_config,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.FeatureGroupStatus') as feature_group_status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::FeatureGroup'
              AND detail.data__TypeName = 'AWS::SageMaker::FeatureGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'FeatureGroupName') as feature_group_name,
                json_extract_path_text(detail.Properties, 'RecordIdentifierFeatureName') as record_identifier_feature_name,
                json_extract_path_text(detail.Properties, 'EventTimeFeatureName') as event_time_feature_name,
                json_extract_path_text(detail.Properties, 'FeatureDefinitions') as feature_definitions,
                json_extract_path_text(detail.Properties, 'OnlineStoreConfig') as online_store_config,
                json_extract_path_text(detail.Properties, 'OfflineStoreConfig') as offline_store_config,
                json_extract_path_text(detail.Properties, 'ThroughputConfig') as throughput_config,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'FeatureGroupStatus') as feature_group_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::FeatureGroup'
                AND detail.data__TypeName = 'AWS::SageMaker::FeatureGroup'
                AND listing.region = 'us-east-1'
    images:
      name: images
      id: aws.sagemaker.images
      x-cfn-schema-name: Image
      x-cfn-type-name: AWS::SageMaker::Image
      x-identifiers:
        - ImageArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Image&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Image"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Image"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Image"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/images/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/images/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/images/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ImageName') as image_name,
              JSON_EXTRACT(Properties, '$.ImageArn') as image_arn,
              JSON_EXTRACT(Properties, '$.ImageRoleArn') as image_role_arn,
              JSON_EXTRACT(Properties, '$.ImageDisplayName') as image_display_name,
              JSON_EXTRACT(Properties, '$.ImageDescription') as image_description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Image'
              AND data__Identifier = '<ImageArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ImageName') as image_name,
                JSON_EXTRACT(detail.Properties, '$.ImageArn') as image_arn,
                JSON_EXTRACT(detail.Properties, '$.ImageRoleArn') as image_role_arn,
                JSON_EXTRACT(detail.Properties, '$.ImageDisplayName') as image_display_name,
                JSON_EXTRACT(detail.Properties, '$.ImageDescription') as image_description,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::Image'
                AND detail.data__TypeName = 'AWS::SageMaker::Image'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ImageName') as image_name,
                  json_extract_path_text(Properties, 'ImageArn') as image_arn,
                  json_extract_path_text(Properties, 'ImageRoleArn') as image_role_arn,
                  json_extract_path_text(Properties, 'ImageDisplayName') as image_display_name,
                  json_extract_path_text(Properties, 'ImageDescription') as image_description,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Image'
                  AND data__Identifier = '<ImageArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ImageName') as image_name,
                    json_extract_path_text(detail.Properties, 'ImageArn') as image_arn,
                    json_extract_path_text(detail.Properties, 'ImageRoleArn') as image_role_arn,
                    json_extract_path_text(detail.Properties, 'ImageDisplayName') as image_display_name,
                    json_extract_path_text(detail.Properties, 'ImageDescription') as image_description,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::Image'
                    AND detail.data__TypeName = 'AWS::SageMaker::Image'
                    AND listing.region = 'us-east-1'
    images_list_only:
      name: images_list_only
      id: aws.sagemaker.images_list_only
      x-cfn-schema-name: Image
      x-cfn-type-name: AWS::SageMaker::Image
      x-identifiers:
        - ImageArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ImageArn') as image_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Image'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ImageArn') as image_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Image'
                AND region = 'us-east-1'
    image_tags:
      name: image_tags
      id: aws.sagemaker.image_tags
      x-cfn-schema-name: Image
      x-cfn-type-name: AWS::SageMaker::Image
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ImageName') as image_name,
              JSON_EXTRACT(detail.Properties, '$.ImageArn') as image_arn,
              JSON_EXTRACT(detail.Properties, '$.ImageRoleArn') as image_role_arn,
              JSON_EXTRACT(detail.Properties, '$.ImageDisplayName') as image_display_name,
              JSON_EXTRACT(detail.Properties, '$.ImageDescription') as image_description
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::Image'
              AND detail.data__TypeName = 'AWS::SageMaker::Image'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ImageName') as image_name,
                json_extract_path_text(detail.Properties, 'ImageArn') as image_arn,
                json_extract_path_text(detail.Properties, 'ImageRoleArn') as image_role_arn,
                json_extract_path_text(detail.Properties, 'ImageDisplayName') as image_display_name,
                json_extract_path_text(detail.Properties, 'ImageDescription') as image_description
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::Image'
                AND detail.data__TypeName = 'AWS::SageMaker::Image'
                AND listing.region = 'us-east-1'
    image_versions:
      name: image_versions
      id: aws.sagemaker.image_versions
      x-cfn-schema-name: ImageVersion
      x-cfn-type-name: AWS::SageMaker::ImageVersion
      x-identifiers:
        - ImageVersionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ImageVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ImageVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ImageVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ImageVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ImageName') as image_name,
              JSON_EXTRACT(Properties, '$.ImageArn') as image_arn,
              JSON_EXTRACT(Properties, '$.ImageVersionArn') as image_version_arn,
              JSON_EXTRACT(Properties, '$.BaseImage') as base_image,
              JSON_EXTRACT(Properties, '$.ContainerImage') as container_image,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.Aliases') as aliases,
              JSON_EXTRACT(Properties, '$.VendorGuidance') as vendor_guidance,
              JSON_EXTRACT(Properties, '$.JobType') as job_type,
              JSON_EXTRACT(Properties, '$.MLFramework') as ml_framework,
              JSON_EXTRACT(Properties, '$.ProgrammingLang') as programming_lang,
              JSON_EXTRACT(Properties, '$.Processor') as processor,
              JSON_EXTRACT(Properties, '$.Horovod') as horovod,
              JSON_EXTRACT(Properties, '$.ReleaseNotes') as release_notes
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ImageVersion'
              AND data__Identifier = '<ImageVersionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ImageName') as image_name,
                JSON_EXTRACT(detail.Properties, '$.ImageArn') as image_arn,
                JSON_EXTRACT(detail.Properties, '$.ImageVersionArn') as image_version_arn,
                JSON_EXTRACT(detail.Properties, '$.BaseImage') as base_image,
                JSON_EXTRACT(detail.Properties, '$.ContainerImage') as container_image,
                JSON_EXTRACT(detail.Properties, '$.Version') as version,
                JSON_EXTRACT(detail.Properties, '$.Alias') as alias,
                JSON_EXTRACT(detail.Properties, '$.Aliases') as aliases,
                JSON_EXTRACT(detail.Properties, '$.VendorGuidance') as vendor_guidance,
                JSON_EXTRACT(detail.Properties, '$.JobType') as job_type,
                JSON_EXTRACT(detail.Properties, '$.MLFramework') as ml_framework,
                JSON_EXTRACT(detail.Properties, '$.ProgrammingLang') as programming_lang,
                JSON_EXTRACT(detail.Properties, '$.Processor') as processor,
                JSON_EXTRACT(detail.Properties, '$.Horovod') as horovod,
                JSON_EXTRACT(detail.Properties, '$.ReleaseNotes') as release_notes
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::ImageVersion'
                AND detail.data__TypeName = 'AWS::SageMaker::ImageVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ImageName') as image_name,
                  json_extract_path_text(Properties, 'ImageArn') as image_arn,
                  json_extract_path_text(Properties, 'ImageVersionArn') as image_version_arn,
                  json_extract_path_text(Properties, 'BaseImage') as base_image,
                  json_extract_path_text(Properties, 'ContainerImage') as container_image,
                  json_extract_path_text(Properties, 'Version') as version,
                  json_extract_path_text(Properties, 'Alias') as alias,
                  json_extract_path_text(Properties, 'Aliases') as aliases,
                  json_extract_path_text(Properties, 'VendorGuidance') as vendor_guidance,
                  json_extract_path_text(Properties, 'JobType') as job_type,
                  json_extract_path_text(Properties, 'MLFramework') as ml_framework,
                  json_extract_path_text(Properties, 'ProgrammingLang') as programming_lang,
                  json_extract_path_text(Properties, 'Processor') as processor,
                  json_extract_path_text(Properties, 'Horovod') as horovod,
                  json_extract_path_text(Properties, 'ReleaseNotes') as release_notes
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ImageVersion'
                  AND data__Identifier = '<ImageVersionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ImageName') as image_name,
                    json_extract_path_text(detail.Properties, 'ImageArn') as image_arn,
                    json_extract_path_text(detail.Properties, 'ImageVersionArn') as image_version_arn,
                    json_extract_path_text(detail.Properties, 'BaseImage') as base_image,
                    json_extract_path_text(detail.Properties, 'ContainerImage') as container_image,
                    json_extract_path_text(detail.Properties, 'Version') as version,
                    json_extract_path_text(detail.Properties, 'Alias') as alias,
                    json_extract_path_text(detail.Properties, 'Aliases') as aliases,
                    json_extract_path_text(detail.Properties, 'VendorGuidance') as vendor_guidance,
                    json_extract_path_text(detail.Properties, 'JobType') as job_type,
                    json_extract_path_text(detail.Properties, 'MLFramework') as ml_framework,
                    json_extract_path_text(detail.Properties, 'ProgrammingLang') as programming_lang,
                    json_extract_path_text(detail.Properties, 'Processor') as processor,
                    json_extract_path_text(detail.Properties, 'Horovod') as horovod,
                    json_extract_path_text(detail.Properties, 'ReleaseNotes') as release_notes
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::ImageVersion'
                    AND detail.data__TypeName = 'AWS::SageMaker::ImageVersion'
                    AND listing.region = 'us-east-1'
    image_versions_list_only:
      name: image_versions_list_only
      id: aws.sagemaker.image_versions_list_only
      x-cfn-schema-name: ImageVersion
      x-cfn-type-name: AWS::SageMaker::ImageVersion
      x-identifiers:
        - ImageVersionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ImageVersionArn') as image_version_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ImageVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ImageVersionArn') as image_version_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ImageVersion'
                AND region = 'us-east-1'
    inference_components:
      name: inference_components
      id: aws.sagemaker.inference_components
      x-cfn-schema-name: InferenceComponent
      x-cfn-type-name: AWS::SageMaker::InferenceComponent
      x-identifiers:
        - InferenceComponentArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__InferenceComponent&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::InferenceComponent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::InferenceComponent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::InferenceComponent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/inference_components/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/inference_components/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/inference_components/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InferenceComponentArn') as inference_component_arn,
              JSON_EXTRACT(Properties, '$.InferenceComponentName') as inference_component_name,
              JSON_EXTRACT(Properties, '$.EndpointArn') as endpoint_arn,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.VariantName') as variant_name,
              JSON_EXTRACT(Properties, '$.FailureReason') as failure_reason,
              JSON_EXTRACT(Properties, '$.Specification') as specification,
              JSON_EXTRACT(Properties, '$.RuntimeConfig') as runtime_config,
              JSON_EXTRACT(Properties, '$.InferenceComponentStatus') as inference_component_status,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::InferenceComponent'
              AND data__Identifier = '<InferenceComponentArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InferenceComponentArn') as inference_component_arn,
                JSON_EXTRACT(detail.Properties, '$.InferenceComponentName') as inference_component_name,
                JSON_EXTRACT(detail.Properties, '$.EndpointArn') as endpoint_arn,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.VariantName') as variant_name,
                JSON_EXTRACT(detail.Properties, '$.FailureReason') as failure_reason,
                JSON_EXTRACT(detail.Properties, '$.Specification') as specification,
                JSON_EXTRACT(detail.Properties, '$.RuntimeConfig') as runtime_config,
                JSON_EXTRACT(detail.Properties, '$.InferenceComponentStatus') as inference_component_status,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceComponent'
                AND detail.data__TypeName = 'AWS::SageMaker::InferenceComponent'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InferenceComponentArn') as inference_component_arn,
                  json_extract_path_text(Properties, 'InferenceComponentName') as inference_component_name,
                  json_extract_path_text(Properties, 'EndpointArn') as endpoint_arn,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'VariantName') as variant_name,
                  json_extract_path_text(Properties, 'FailureReason') as failure_reason,
                  json_extract_path_text(Properties, 'Specification') as specification,
                  json_extract_path_text(Properties, 'RuntimeConfig') as runtime_config,
                  json_extract_path_text(Properties, 'InferenceComponentStatus') as inference_component_status,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::InferenceComponent'
                  AND data__Identifier = '<InferenceComponentArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InferenceComponentArn') as inference_component_arn,
                    json_extract_path_text(detail.Properties, 'InferenceComponentName') as inference_component_name,
                    json_extract_path_text(detail.Properties, 'EndpointArn') as endpoint_arn,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'VariantName') as variant_name,
                    json_extract_path_text(detail.Properties, 'FailureReason') as failure_reason,
                    json_extract_path_text(detail.Properties, 'Specification') as specification,
                    json_extract_path_text(detail.Properties, 'RuntimeConfig') as runtime_config,
                    json_extract_path_text(detail.Properties, 'InferenceComponentStatus') as inference_component_status,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceComponent'
                    AND detail.data__TypeName = 'AWS::SageMaker::InferenceComponent'
                    AND listing.region = 'us-east-1'
    inference_components_list_only:
      name: inference_components_list_only
      id: aws.sagemaker.inference_components_list_only
      x-cfn-schema-name: InferenceComponent
      x-cfn-type-name: AWS::SageMaker::InferenceComponent
      x-identifiers:
        - InferenceComponentArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InferenceComponentArn') as inference_component_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::InferenceComponent'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InferenceComponentArn') as inference_component_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::InferenceComponent'
                AND region = 'us-east-1'
    inference_component_tags:
      name: inference_component_tags
      id: aws.sagemaker.inference_component_tags
      x-cfn-schema-name: InferenceComponent
      x-cfn-type-name: AWS::SageMaker::InferenceComponent
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InferenceComponentArn') as inference_component_arn,
              JSON_EXTRACT(detail.Properties, '$.InferenceComponentName') as inference_component_name,
              JSON_EXTRACT(detail.Properties, '$.EndpointArn') as endpoint_arn,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.VariantName') as variant_name,
              JSON_EXTRACT(detail.Properties, '$.FailureReason') as failure_reason,
              JSON_EXTRACT(detail.Properties, '$.Specification') as specification,
              JSON_EXTRACT(detail.Properties, '$.RuntimeConfig') as runtime_config,
              JSON_EXTRACT(detail.Properties, '$.InferenceComponentStatus') as inference_component_status,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceComponent'
              AND detail.data__TypeName = 'AWS::SageMaker::InferenceComponent'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InferenceComponentArn') as inference_component_arn,
                json_extract_path_text(detail.Properties, 'InferenceComponentName') as inference_component_name,
                json_extract_path_text(detail.Properties, 'EndpointArn') as endpoint_arn,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'VariantName') as variant_name,
                json_extract_path_text(detail.Properties, 'FailureReason') as failure_reason,
                json_extract_path_text(detail.Properties, 'Specification') as specification,
                json_extract_path_text(detail.Properties, 'RuntimeConfig') as runtime_config,
                json_extract_path_text(detail.Properties, 'InferenceComponentStatus') as inference_component_status,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceComponent'
                AND detail.data__TypeName = 'AWS::SageMaker::InferenceComponent'
                AND listing.region = 'us-east-1'
    inference_experiments:
      name: inference_experiments
      id: aws.sagemaker.inference_experiments
      x-cfn-schema-name: InferenceExperiment
      x-cfn-type-name: AWS::SageMaker::InferenceExperiment
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__InferenceExperiment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::InferenceExperiment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::InferenceExperiment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::InferenceExperiment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/inference_experiments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/inference_experiments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/inference_experiments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.EndpointMetadata') as endpoint_metadata,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(Properties, '$.DataStorageConfig') as data_storage_config,
              JSON_EXTRACT(Properties, '$.ModelVariants') as model_variants,
              JSON_EXTRACT(Properties, '$.ShadowModeConfig') as shadow_mode_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.DesiredState') as desired_state
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::InferenceExperiment'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.EndpointMetadata') as endpoint_metadata,
                JSON_EXTRACT(detail.Properties, '$.Schedule') as schedule,
                JSON_EXTRACT(detail.Properties, '$.KmsKey') as kms_key,
                JSON_EXTRACT(detail.Properties, '$.DataStorageConfig') as data_storage_config,
                JSON_EXTRACT(detail.Properties, '$.ModelVariants') as model_variants,
                JSON_EXTRACT(detail.Properties, '$.ShadowModeConfig') as shadow_mode_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.StatusReason') as status_reason,
                JSON_EXTRACT(detail.Properties, '$.DesiredState') as desired_state
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                AND detail.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'EndpointMetadata') as endpoint_metadata,
                  json_extract_path_text(Properties, 'Schedule') as schedule,
                  json_extract_path_text(Properties, 'KmsKey') as kms_key,
                  json_extract_path_text(Properties, 'DataStorageConfig') as data_storage_config,
                  json_extract_path_text(Properties, 'ModelVariants') as model_variants,
                  json_extract_path_text(Properties, 'ShadowModeConfig') as shadow_mode_config,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'StatusReason') as status_reason,
                  json_extract_path_text(Properties, 'DesiredState') as desired_state
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'EndpointMetadata') as endpoint_metadata,
                    json_extract_path_text(detail.Properties, 'Schedule') as schedule,
                    json_extract_path_text(detail.Properties, 'KmsKey') as kms_key,
                    json_extract_path_text(detail.Properties, 'DataStorageConfig') as data_storage_config,
                    json_extract_path_text(detail.Properties, 'ModelVariants') as model_variants,
                    json_extract_path_text(detail.Properties, 'ShadowModeConfig') as shadow_mode_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'StatusReason') as status_reason,
                    json_extract_path_text(detail.Properties, 'DesiredState') as desired_state
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                    AND detail.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                    AND listing.region = 'us-east-1'
    inference_experiments_list_only:
      name: inference_experiments_list_only
      id: aws.sagemaker.inference_experiments_list_only
      x-cfn-schema-name: InferenceExperiment
      x-cfn-type-name: AWS::SageMaker::InferenceExperiment
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::InferenceExperiment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                AND region = 'us-east-1'
    inference_experiment_tags:
      name: inference_experiment_tags
      id: aws.sagemaker.inference_experiment_tags
      x-cfn-schema-name: InferenceExperiment
      x-cfn-type-name: AWS::SageMaker::InferenceExperiment
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.EndpointMetadata') as endpoint_metadata,
              JSON_EXTRACT(detail.Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(detail.Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(detail.Properties, '$.DataStorageConfig') as data_storage_config,
              JSON_EXTRACT(detail.Properties, '$.ModelVariants') as model_variants,
              JSON_EXTRACT(detail.Properties, '$.ShadowModeConfig') as shadow_mode_config,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(detail.Properties, '$.DesiredState') as desired_state
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
              AND detail.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'EndpointMetadata') as endpoint_metadata,
                json_extract_path_text(detail.Properties, 'Schedule') as schedule,
                json_extract_path_text(detail.Properties, 'KmsKey') as kms_key,
                json_extract_path_text(detail.Properties, 'DataStorageConfig') as data_storage_config,
                json_extract_path_text(detail.Properties, 'ModelVariants') as model_variants,
                json_extract_path_text(detail.Properties, 'ShadowModeConfig') as shadow_mode_config,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'StatusReason') as status_reason,
                json_extract_path_text(detail.Properties, 'DesiredState') as desired_state
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                AND detail.data__TypeName = 'AWS::SageMaker::InferenceExperiment'
                AND listing.region = 'us-east-1'
    mlflow_tracking_servers:
      name: mlflow_tracking_servers
      id: aws.sagemaker.mlflow_tracking_servers
      x-cfn-schema-name: MlflowTrackingServer
      x-cfn-type-name: AWS::SageMaker::MlflowTrackingServer
      x-identifiers:
        - TrackingServerName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MlflowTrackingServer&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::MlflowTrackingServer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::MlflowTrackingServer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::MlflowTrackingServer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/mlflow_tracking_servers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/mlflow_tracking_servers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/mlflow_tracking_servers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.TrackingServerName') as tracking_server_name,
              JSON_EXTRACT(Properties, '$.TrackingServerArn') as tracking_server_arn,
              JSON_EXTRACT(Properties, '$.TrackingServerSize') as tracking_server_size,
              JSON_EXTRACT(Properties, '$.MlflowVersion') as mlflow_version,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.ArtifactStoreUri') as artifact_store_uri,
              JSON_EXTRACT(Properties, '$.AutomaticModelRegistration') as automatic_model_registration,
              JSON_EXTRACT(Properties, '$.WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
              AND data__Identifier = '<TrackingServerName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.TrackingServerName') as tracking_server_name,
                JSON_EXTRACT(detail.Properties, '$.TrackingServerArn') as tracking_server_arn,
                JSON_EXTRACT(detail.Properties, '$.TrackingServerSize') as tracking_server_size,
                JSON_EXTRACT(detail.Properties, '$.MlflowVersion') as mlflow_version,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.ArtifactStoreUri') as artifact_store_uri,
                JSON_EXTRACT(detail.Properties, '$.AutomaticModelRegistration') as automatic_model_registration,
                JSON_EXTRACT(detail.Properties, '$.WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                AND detail.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'TrackingServerName') as tracking_server_name,
                  json_extract_path_text(Properties, 'TrackingServerArn') as tracking_server_arn,
                  json_extract_path_text(Properties, 'TrackingServerSize') as tracking_server_size,
                  json_extract_path_text(Properties, 'MlflowVersion') as mlflow_version,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'ArtifactStoreUri') as artifact_store_uri,
                  json_extract_path_text(Properties, 'AutomaticModelRegistration') as automatic_model_registration,
                  json_extract_path_text(Properties, 'WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                  AND data__Identifier = '<TrackingServerName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'TrackingServerName') as tracking_server_name,
                    json_extract_path_text(detail.Properties, 'TrackingServerArn') as tracking_server_arn,
                    json_extract_path_text(detail.Properties, 'TrackingServerSize') as tracking_server_size,
                    json_extract_path_text(detail.Properties, 'MlflowVersion') as mlflow_version,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'ArtifactStoreUri') as artifact_store_uri,
                    json_extract_path_text(detail.Properties, 'AutomaticModelRegistration') as automatic_model_registration,
                    json_extract_path_text(detail.Properties, 'WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                    AND detail.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                    AND listing.region = 'us-east-1'
    mlflow_tracking_servers_list_only:
      name: mlflow_tracking_servers_list_only
      id: aws.sagemaker.mlflow_tracking_servers_list_only
      x-cfn-schema-name: MlflowTrackingServer
      x-cfn-type-name: AWS::SageMaker::MlflowTrackingServer
      x-identifiers:
        - TrackingServerName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TrackingServerName') as tracking_server_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TrackingServerName') as tracking_server_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                AND region = 'us-east-1'
    mlflow_tracking_server_tags:
      name: mlflow_tracking_server_tags
      id: aws.sagemaker.mlflow_tracking_server_tags
      x-cfn-schema-name: MlflowTrackingServer
      x-cfn-type-name: AWS::SageMaker::MlflowTrackingServer
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.TrackingServerName') as tracking_server_name,
              JSON_EXTRACT(detail.Properties, '$.TrackingServerArn') as tracking_server_arn,
              JSON_EXTRACT(detail.Properties, '$.TrackingServerSize') as tracking_server_size,
              JSON_EXTRACT(detail.Properties, '$.MlflowVersion') as mlflow_version,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.ArtifactStoreUri') as artifact_store_uri,
              JSON_EXTRACT(detail.Properties, '$.AutomaticModelRegistration') as automatic_model_registration,
              JSON_EXTRACT(detail.Properties, '$.WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
              AND detail.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'TrackingServerName') as tracking_server_name,
                json_extract_path_text(detail.Properties, 'TrackingServerArn') as tracking_server_arn,
                json_extract_path_text(detail.Properties, 'TrackingServerSize') as tracking_server_size,
                json_extract_path_text(detail.Properties, 'MlflowVersion') as mlflow_version,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'ArtifactStoreUri') as artifact_store_uri,
                json_extract_path_text(detail.Properties, 'AutomaticModelRegistration') as automatic_model_registration,
                json_extract_path_text(detail.Properties, 'WeeklyMaintenanceWindowStart') as weekly_maintenance_window_start
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                AND detail.data__TypeName = 'AWS::SageMaker::MlflowTrackingServer'
                AND listing.region = 'us-east-1'
    model_bias_job_definitions:
      name: model_bias_job_definitions
      id: aws.sagemaker.model_bias_job_definitions
      x-cfn-schema-name: ModelBiasJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelBiasJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModelBiasJobDefinition&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelBiasJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelBiasJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/model_bias_job_definitions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/model_bias_job_definitions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(Properties, '$.ModelBiasBaselineConfig') as model_bias_baseline_config,
              JSON_EXTRACT(Properties, '$.ModelBiasAppSpecification') as model_bias_app_specification,
              JSON_EXTRACT(Properties, '$.ModelBiasJobInput') as model_bias_job_input,
              JSON_EXTRACT(Properties, '$.ModelBiasJobOutputConfig') as model_bias_job_output_config,
              JSON_EXTRACT(Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
              AND data__Identifier = '<JobDefinitionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
                JSON_EXTRACT(detail.Properties, '$.ModelBiasBaselineConfig') as model_bias_baseline_config,
                JSON_EXTRACT(detail.Properties, '$.ModelBiasAppSpecification') as model_bias_app_specification,
                JSON_EXTRACT(detail.Properties, '$.ModelBiasJobInput') as model_bias_job_input,
                JSON_EXTRACT(detail.Properties, '$.ModelBiasJobOutputConfig') as model_bias_job_output_config,
                JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
                JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn,
                  json_extract_path_text(Properties, 'JobDefinitionName') as job_definition_name,
                  json_extract_path_text(Properties, 'ModelBiasBaselineConfig') as model_bias_baseline_config,
                  json_extract_path_text(Properties, 'ModelBiasAppSpecification') as model_bias_app_specification,
                  json_extract_path_text(Properties, 'ModelBiasJobInput') as model_bias_job_input,
                  json_extract_path_text(Properties, 'ModelBiasJobOutputConfig') as model_bias_job_output_config,
                  json_extract_path_text(Properties, 'JobResources') as job_resources,
                  json_extract_path_text(Properties, 'NetworkConfig') as network_config,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'StoppingCondition') as stopping_condition,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                  AND data__Identifier = '<JobDefinitionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                    json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                    json_extract_path_text(detail.Properties, 'ModelBiasBaselineConfig') as model_bias_baseline_config,
                    json_extract_path_text(detail.Properties, 'ModelBiasAppSpecification') as model_bias_app_specification,
                    json_extract_path_text(detail.Properties, 'ModelBiasJobInput') as model_bias_job_input,
                    json_extract_path_text(detail.Properties, 'ModelBiasJobOutputConfig') as model_bias_job_output_config,
                    json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                    json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                    AND detail.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                    AND listing.region = 'us-east-1'
    model_bias_job_definitions_list_only:
      name: model_bias_job_definitions_list_only
      id: aws.sagemaker.model_bias_job_definitions_list_only
      x-cfn-schema-name: ModelBiasJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelBiasJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                AND region = 'us-east-1'
    model_bias_job_definition_tags:
      name: model_bias_job_definition_tags
      id: aws.sagemaker.model_bias_job_definition_tags
      x-cfn-schema-name: ModelBiasJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelBiasJobDefinition
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(detail.Properties, '$.ModelBiasBaselineConfig') as model_bias_baseline_config,
              JSON_EXTRACT(detail.Properties, '$.ModelBiasAppSpecification') as model_bias_app_specification,
              JSON_EXTRACT(detail.Properties, '$.ModelBiasJobInput') as model_bias_job_input,
              JSON_EXTRACT(detail.Properties, '$.ModelBiasJobOutputConfig') as model_bias_job_output_config,
              JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
              AND detail.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                json_extract_path_text(detail.Properties, 'ModelBiasBaselineConfig') as model_bias_baseline_config,
                json_extract_path_text(detail.Properties, 'ModelBiasAppSpecification') as model_bias_app_specification,
                json_extract_path_text(detail.Properties, 'ModelBiasJobInput') as model_bias_job_input,
                json_extract_path_text(detail.Properties, 'ModelBiasJobOutputConfig') as model_bias_job_output_config,
                json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
                AND listing.region = 'us-east-1'
    model_explainability_job_definitions:
      name: model_explainability_job_definitions
      id: aws.sagemaker.model_explainability_job_definitions
      x-cfn-schema-name: ModelExplainabilityJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelExplainabilityJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModelExplainabilityJobDefinition&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelExplainabilityJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelExplainabilityJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/model_explainability_job_definitions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/model_explainability_job_definitions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityBaselineConfig') as model_explainability_baseline_config,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityAppSpecification') as model_explainability_app_specification,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityJobInput') as model_explainability_job_input,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityJobOutputConfig') as model_explainability_job_output_config,
              JSON_EXTRACT(Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
              AND data__Identifier = '<JobDefinitionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
                JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityBaselineConfig') as model_explainability_baseline_config,
                JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityAppSpecification') as model_explainability_app_specification,
                JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityJobInput') as model_explainability_job_input,
                JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityJobOutputConfig') as model_explainability_job_output_config,
                JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
                JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn,
                  json_extract_path_text(Properties, 'JobDefinitionName') as job_definition_name,
                  json_extract_path_text(Properties, 'ModelExplainabilityBaselineConfig') as model_explainability_baseline_config,
                  json_extract_path_text(Properties, 'ModelExplainabilityAppSpecification') as model_explainability_app_specification,
                  json_extract_path_text(Properties, 'ModelExplainabilityJobInput') as model_explainability_job_input,
                  json_extract_path_text(Properties, 'ModelExplainabilityJobOutputConfig') as model_explainability_job_output_config,
                  json_extract_path_text(Properties, 'JobResources') as job_resources,
                  json_extract_path_text(Properties, 'NetworkConfig') as network_config,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'StoppingCondition') as stopping_condition,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                  AND data__Identifier = '<JobDefinitionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                    json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                    json_extract_path_text(detail.Properties, 'ModelExplainabilityBaselineConfig') as model_explainability_baseline_config,
                    json_extract_path_text(detail.Properties, 'ModelExplainabilityAppSpecification') as model_explainability_app_specification,
                    json_extract_path_text(detail.Properties, 'ModelExplainabilityJobInput') as model_explainability_job_input,
                    json_extract_path_text(detail.Properties, 'ModelExplainabilityJobOutputConfig') as model_explainability_job_output_config,
                    json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                    json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                    AND detail.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                    AND listing.region = 'us-east-1'
    model_explainability_job_definitions_list_only:
      name: model_explainability_job_definitions_list_only
      id: aws.sagemaker.model_explainability_job_definitions_list_only
      x-cfn-schema-name: ModelExplainabilityJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelExplainabilityJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                AND region = 'us-east-1'
    model_explainability_job_definition_tags:
      name: model_explainability_job_definition_tags
      id: aws.sagemaker.model_explainability_job_definition_tags
      x-cfn-schema-name: ModelExplainabilityJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelExplainabilityJobDefinition
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityBaselineConfig') as model_explainability_baseline_config,
              JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityAppSpecification') as model_explainability_app_specification,
              JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityJobInput') as model_explainability_job_input,
              JSON_EXTRACT(detail.Properties, '$.ModelExplainabilityJobOutputConfig') as model_explainability_job_output_config,
              JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
              AND detail.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                json_extract_path_text(detail.Properties, 'ModelExplainabilityBaselineConfig') as model_explainability_baseline_config,
                json_extract_path_text(detail.Properties, 'ModelExplainabilityAppSpecification') as model_explainability_app_specification,
                json_extract_path_text(detail.Properties, 'ModelExplainabilityJobInput') as model_explainability_job_input,
                json_extract_path_text(detail.Properties, 'ModelExplainabilityJobOutputConfig') as model_explainability_job_output_config,
                json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
                AND listing.region = 'us-east-1'
    model_packages:
      name: model_packages
      id: aws.sagemaker.model_packages
      x-cfn-schema-name: ModelPackage
      x-cfn-type-name: AWS::SageMaker::ModelPackage
      x-identifiers:
        - ModelPackageArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModelPackage&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelPackage"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelPackage"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelPackage"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/model_packages/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/model_packages/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/model_packages/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecifications') as additional_inference_specifications,
              JSON_EXTRACT(Properties, '$.CertifyForMarketplace') as certify_for_marketplace,
              JSON_EXTRACT(Properties, '$.ClientToken') as client_token,
              JSON_EXTRACT(Properties, '$.CustomerMetadataProperties') as customer_metadata_properties,
              JSON_EXTRACT(Properties, '$.Domain') as domain,
              JSON_EXTRACT(Properties, '$.DriftCheckBaselines') as drift_check_baselines,
              JSON_EXTRACT(Properties, '$.InferenceSpecification') as inference_specification,
              JSON_EXTRACT(Properties, '$.MetadataProperties') as metadata_properties,
              JSON_EXTRACT(Properties, '$.ModelApprovalStatus') as model_approval_status,
              JSON_EXTRACT(Properties, '$.ModelMetrics') as model_metrics,
              JSON_EXTRACT(Properties, '$.ModelPackageDescription') as model_package_description,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupName') as model_package_group_name,
              JSON_EXTRACT(Properties, '$.ModelPackageName') as model_package_name,
              JSON_EXTRACT(Properties, '$.SamplePayloadUrl') as sample_payload_url,
              JSON_EXTRACT(Properties, '$.SkipModelValidation') as skip_model_validation,
              JSON_EXTRACT(Properties, '$.SourceAlgorithmSpecification') as source_algorithm_specification,
              JSON_EXTRACT(Properties, '$.Task') as task,
              JSON_EXTRACT(Properties, '$.ValidationSpecification') as validation_specification,
              JSON_EXTRACT(Properties, '$.ModelPackageArn') as model_package_arn,
              JSON_EXTRACT(Properties, '$.ApprovalDescription') as approval_description,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.ModelPackageStatus') as model_package_status,
              JSON_EXTRACT(Properties, '$.ModelPackageVersion') as model_package_version,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationsToAdd') as additional_inference_specifications_to_add,
              JSON_EXTRACT(Properties, '$.ModelPackageStatusDetails') as model_package_status_details,
              JSON_EXTRACT(Properties, '$.SourceUri') as source_uri,
              JSON_EXTRACT(Properties, '$.ModelCard') as model_card,
              JSON_EXTRACT(Properties, '$.SecurityConfig') as security_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelPackage'
              AND data__Identifier = '<ModelPackageArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AdditionalInferenceSpecifications') as additional_inference_specifications,
                JSON_EXTRACT(detail.Properties, '$.CertifyForMarketplace') as certify_for_marketplace,
                JSON_EXTRACT(detail.Properties, '$.ClientToken') as client_token,
                JSON_EXTRACT(detail.Properties, '$.CustomerMetadataProperties') as customer_metadata_properties,
                JSON_EXTRACT(detail.Properties, '$.Domain') as domain,
                JSON_EXTRACT(detail.Properties, '$.DriftCheckBaselines') as drift_check_baselines,
                JSON_EXTRACT(detail.Properties, '$.InferenceSpecification') as inference_specification,
                JSON_EXTRACT(detail.Properties, '$.MetadataProperties') as metadata_properties,
                JSON_EXTRACT(detail.Properties, '$.ModelApprovalStatus') as model_approval_status,
                JSON_EXTRACT(detail.Properties, '$.ModelMetrics') as model_metrics,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageDescription') as model_package_description,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupName') as model_package_group_name,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageName') as model_package_name,
                JSON_EXTRACT(detail.Properties, '$.SamplePayloadUrl') as sample_payload_url,
                JSON_EXTRACT(detail.Properties, '$.SkipModelValidation') as skip_model_validation,
                JSON_EXTRACT(detail.Properties, '$.SourceAlgorithmSpecification') as source_algorithm_specification,
                JSON_EXTRACT(detail.Properties, '$.Task') as task,
                JSON_EXTRACT(detail.Properties, '$.ValidationSpecification') as validation_specification,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageArn') as model_package_arn,
                JSON_EXTRACT(detail.Properties, '$.ApprovalDescription') as approval_description,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageStatus') as model_package_status,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageVersion') as model_package_version,
                JSON_EXTRACT(detail.Properties, '$.AdditionalInferenceSpecificationsToAdd') as additional_inference_specifications_to_add,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageStatusDetails') as model_package_status_details,
                JSON_EXTRACT(detail.Properties, '$.SourceUri') as source_uri,
                JSON_EXTRACT(detail.Properties, '$.ModelCard') as model_card,
                JSON_EXTRACT(detail.Properties, '$.SecurityConfig') as security_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackage'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelPackage'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AdditionalInferenceSpecifications') as additional_inference_specifications,
                  json_extract_path_text(Properties, 'CertifyForMarketplace') as certify_for_marketplace,
                  json_extract_path_text(Properties, 'ClientToken') as client_token,
                  json_extract_path_text(Properties, 'CustomerMetadataProperties') as customer_metadata_properties,
                  json_extract_path_text(Properties, 'Domain') as domain,
                  json_extract_path_text(Properties, 'DriftCheckBaselines') as drift_check_baselines,
                  json_extract_path_text(Properties, 'InferenceSpecification') as inference_specification,
                  json_extract_path_text(Properties, 'MetadataProperties') as metadata_properties,
                  json_extract_path_text(Properties, 'ModelApprovalStatus') as model_approval_status,
                  json_extract_path_text(Properties, 'ModelMetrics') as model_metrics,
                  json_extract_path_text(Properties, 'ModelPackageDescription') as model_package_description,
                  json_extract_path_text(Properties, 'ModelPackageGroupName') as model_package_group_name,
                  json_extract_path_text(Properties, 'ModelPackageName') as model_package_name,
                  json_extract_path_text(Properties, 'SamplePayloadUrl') as sample_payload_url,
                  json_extract_path_text(Properties, 'SkipModelValidation') as skip_model_validation,
                  json_extract_path_text(Properties, 'SourceAlgorithmSpecification') as source_algorithm_specification,
                  json_extract_path_text(Properties, 'Task') as task,
                  json_extract_path_text(Properties, 'ValidationSpecification') as validation_specification,
                  json_extract_path_text(Properties, 'ModelPackageArn') as model_package_arn,
                  json_extract_path_text(Properties, 'ApprovalDescription') as approval_description,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time,
                  json_extract_path_text(Properties, 'ModelPackageStatus') as model_package_status,
                  json_extract_path_text(Properties, 'ModelPackageVersion') as model_package_version,
                  json_extract_path_text(Properties, 'AdditionalInferenceSpecificationsToAdd') as additional_inference_specifications_to_add,
                  json_extract_path_text(Properties, 'ModelPackageStatusDetails') as model_package_status_details,
                  json_extract_path_text(Properties, 'SourceUri') as source_uri,
                  json_extract_path_text(Properties, 'ModelCard') as model_card,
                  json_extract_path_text(Properties, 'SecurityConfig') as security_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelPackage'
                  AND data__Identifier = '<ModelPackageArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AdditionalInferenceSpecifications') as additional_inference_specifications,
                    json_extract_path_text(detail.Properties, 'CertifyForMarketplace') as certify_for_marketplace,
                    json_extract_path_text(detail.Properties, 'ClientToken') as client_token,
                    json_extract_path_text(detail.Properties, 'CustomerMetadataProperties') as customer_metadata_properties,
                    json_extract_path_text(detail.Properties, 'Domain') as domain,
                    json_extract_path_text(detail.Properties, 'DriftCheckBaselines') as drift_check_baselines,
                    json_extract_path_text(detail.Properties, 'InferenceSpecification') as inference_specification,
                    json_extract_path_text(detail.Properties, 'MetadataProperties') as metadata_properties,
                    json_extract_path_text(detail.Properties, 'ModelApprovalStatus') as model_approval_status,
                    json_extract_path_text(detail.Properties, 'ModelMetrics') as model_metrics,
                    json_extract_path_text(detail.Properties, 'ModelPackageDescription') as model_package_description,
                    json_extract_path_text(detail.Properties, 'ModelPackageGroupName') as model_package_group_name,
                    json_extract_path_text(detail.Properties, 'ModelPackageName') as model_package_name,
                    json_extract_path_text(detail.Properties, 'SamplePayloadUrl') as sample_payload_url,
                    json_extract_path_text(detail.Properties, 'SkipModelValidation') as skip_model_validation,
                    json_extract_path_text(detail.Properties, 'SourceAlgorithmSpecification') as source_algorithm_specification,
                    json_extract_path_text(detail.Properties, 'Task') as task,
                    json_extract_path_text(detail.Properties, 'ValidationSpecification') as validation_specification,
                    json_extract_path_text(detail.Properties, 'ModelPackageArn') as model_package_arn,
                    json_extract_path_text(detail.Properties, 'ApprovalDescription') as approval_description,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                    json_extract_path_text(detail.Properties, 'ModelPackageStatus') as model_package_status,
                    json_extract_path_text(detail.Properties, 'ModelPackageVersion') as model_package_version,
                    json_extract_path_text(detail.Properties, 'AdditionalInferenceSpecificationsToAdd') as additional_inference_specifications_to_add,
                    json_extract_path_text(detail.Properties, 'ModelPackageStatusDetails') as model_package_status_details,
                    json_extract_path_text(detail.Properties, 'SourceUri') as source_uri,
                    json_extract_path_text(detail.Properties, 'ModelCard') as model_card,
                    json_extract_path_text(detail.Properties, 'SecurityConfig') as security_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackage'
                    AND detail.data__TypeName = 'AWS::SageMaker::ModelPackage'
                    AND listing.region = 'us-east-1'
    model_packages_list_only:
      name: model_packages_list_only
      id: aws.sagemaker.model_packages_list_only
      x-cfn-schema-name: ModelPackage
      x-cfn-type-name: AWS::SageMaker::ModelPackage
      x-identifiers:
        - ModelPackageArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ModelPackageArn') as model_package_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelPackage'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ModelPackageArn') as model_package_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelPackage'
                AND region = 'us-east-1'
    model_package_tags:
      name: model_package_tags
      id: aws.sagemaker.model_package_tags
      x-cfn-schema-name: ModelPackage
      x-cfn-type-name: AWS::SageMaker::ModelPackage
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AdditionalInferenceSpecifications') as additional_inference_specifications,
              JSON_EXTRACT(detail.Properties, '$.CertifyForMarketplace') as certify_for_marketplace,
              JSON_EXTRACT(detail.Properties, '$.ClientToken') as client_token,
              JSON_EXTRACT(detail.Properties, '$.CustomerMetadataProperties') as customer_metadata_properties,
              JSON_EXTRACT(detail.Properties, '$.Domain') as domain,
              JSON_EXTRACT(detail.Properties, '$.DriftCheckBaselines') as drift_check_baselines,
              JSON_EXTRACT(detail.Properties, '$.InferenceSpecification') as inference_specification,
              JSON_EXTRACT(detail.Properties, '$.MetadataProperties') as metadata_properties,
              JSON_EXTRACT(detail.Properties, '$.ModelApprovalStatus') as model_approval_status,
              JSON_EXTRACT(detail.Properties, '$.ModelMetrics') as model_metrics,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageDescription') as model_package_description,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupName') as model_package_group_name,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageName') as model_package_name,
              JSON_EXTRACT(detail.Properties, '$.SamplePayloadUrl') as sample_payload_url,
              JSON_EXTRACT(detail.Properties, '$.SkipModelValidation') as skip_model_validation,
              JSON_EXTRACT(detail.Properties, '$.SourceAlgorithmSpecification') as source_algorithm_specification,
              JSON_EXTRACT(detail.Properties, '$.Task') as task,
              JSON_EXTRACT(detail.Properties, '$.ValidationSpecification') as validation_specification,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageArn') as model_package_arn,
              JSON_EXTRACT(detail.Properties, '$.ApprovalDescription') as approval_description,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageStatus') as model_package_status,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageVersion') as model_package_version,
              JSON_EXTRACT(detail.Properties, '$.AdditionalInferenceSpecificationsToAdd') as additional_inference_specifications_to_add,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageStatusDetails') as model_package_status_details,
              JSON_EXTRACT(detail.Properties, '$.SourceUri') as source_uri,
              JSON_EXTRACT(detail.Properties, '$.ModelCard') as model_card,
              JSON_EXTRACT(detail.Properties, '$.SecurityConfig') as security_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackage'
              AND detail.data__TypeName = 'AWS::SageMaker::ModelPackage'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AdditionalInferenceSpecifications') as additional_inference_specifications,
                json_extract_path_text(detail.Properties, 'CertifyForMarketplace') as certify_for_marketplace,
                json_extract_path_text(detail.Properties, 'ClientToken') as client_token,
                json_extract_path_text(detail.Properties, 'CustomerMetadataProperties') as customer_metadata_properties,
                json_extract_path_text(detail.Properties, 'Domain') as domain,
                json_extract_path_text(detail.Properties, 'DriftCheckBaselines') as drift_check_baselines,
                json_extract_path_text(detail.Properties, 'InferenceSpecification') as inference_specification,
                json_extract_path_text(detail.Properties, 'MetadataProperties') as metadata_properties,
                json_extract_path_text(detail.Properties, 'ModelApprovalStatus') as model_approval_status,
                json_extract_path_text(detail.Properties, 'ModelMetrics') as model_metrics,
                json_extract_path_text(detail.Properties, 'ModelPackageDescription') as model_package_description,
                json_extract_path_text(detail.Properties, 'ModelPackageGroupName') as model_package_group_name,
                json_extract_path_text(detail.Properties, 'ModelPackageName') as model_package_name,
                json_extract_path_text(detail.Properties, 'SamplePayloadUrl') as sample_payload_url,
                json_extract_path_text(detail.Properties, 'SkipModelValidation') as skip_model_validation,
                json_extract_path_text(detail.Properties, 'SourceAlgorithmSpecification') as source_algorithm_specification,
                json_extract_path_text(detail.Properties, 'Task') as task,
                json_extract_path_text(detail.Properties, 'ValidationSpecification') as validation_specification,
                json_extract_path_text(detail.Properties, 'ModelPackageArn') as model_package_arn,
                json_extract_path_text(detail.Properties, 'ApprovalDescription') as approval_description,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                json_extract_path_text(detail.Properties, 'ModelPackageStatus') as model_package_status,
                json_extract_path_text(detail.Properties, 'ModelPackageVersion') as model_package_version,
                json_extract_path_text(detail.Properties, 'AdditionalInferenceSpecificationsToAdd') as additional_inference_specifications_to_add,
                json_extract_path_text(detail.Properties, 'ModelPackageStatusDetails') as model_package_status_details,
                json_extract_path_text(detail.Properties, 'SourceUri') as source_uri,
                json_extract_path_text(detail.Properties, 'ModelCard') as model_card,
                json_extract_path_text(detail.Properties, 'SecurityConfig') as security_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackage'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelPackage'
                AND listing.region = 'us-east-1'
    model_package_groups:
      name: model_package_groups
      id: aws.sagemaker.model_package_groups
      x-cfn-schema-name: ModelPackageGroup
      x-cfn-type-name: AWS::SageMaker::ModelPackageGroup
      x-identifiers:
        - ModelPackageGroupArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModelPackageGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelPackageGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelPackageGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelPackageGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/model_package_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/model_package_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/model_package_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupArn') as model_package_group_arn,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupName') as model_package_group_name,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupDescription') as model_package_group_description,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupPolicy') as model_package_group_policy,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupStatus') as model_package_group_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
              AND data__Identifier = '<ModelPackageGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupArn') as model_package_group_arn,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupName') as model_package_group_name,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupDescription') as model_package_group_description,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupPolicy') as model_package_group_policy,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupStatus') as model_package_group_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ModelPackageGroupArn') as model_package_group_arn,
                  json_extract_path_text(Properties, 'ModelPackageGroupName') as model_package_group_name,
                  json_extract_path_text(Properties, 'ModelPackageGroupDescription') as model_package_group_description,
                  json_extract_path_text(Properties, 'ModelPackageGroupPolicy') as model_package_group_policy,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'ModelPackageGroupStatus') as model_package_group_status
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                  AND data__Identifier = '<ModelPackageGroupArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ModelPackageGroupArn') as model_package_group_arn,
                    json_extract_path_text(detail.Properties, 'ModelPackageGroupName') as model_package_group_name,
                    json_extract_path_text(detail.Properties, 'ModelPackageGroupDescription') as model_package_group_description,
                    json_extract_path_text(detail.Properties, 'ModelPackageGroupPolicy') as model_package_group_policy,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'ModelPackageGroupStatus') as model_package_group_status
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                    AND detail.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                    AND listing.region = 'us-east-1'
    model_package_groups_list_only:
      name: model_package_groups_list_only
      id: aws.sagemaker.model_package_groups_list_only
      x-cfn-schema-name: ModelPackageGroup
      x-cfn-type-name: AWS::SageMaker::ModelPackageGroup
      x-identifiers:
        - ModelPackageGroupArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupArn') as model_package_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ModelPackageGroupArn') as model_package_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                AND region = 'us-east-1'
    model_package_group_tags:
      name: model_package_group_tags
      id: aws.sagemaker.model_package_group_tags
      x-cfn-schema-name: ModelPackageGroup
      x-cfn-type-name: AWS::SageMaker::ModelPackageGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupArn') as model_package_group_arn,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupName') as model_package_group_name,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupDescription') as model_package_group_description,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupPolicy') as model_package_group_policy,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.ModelPackageGroupStatus') as model_package_group_status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
              AND detail.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ModelPackageGroupArn') as model_package_group_arn,
                json_extract_path_text(detail.Properties, 'ModelPackageGroupName') as model_package_group_name,
                json_extract_path_text(detail.Properties, 'ModelPackageGroupDescription') as model_package_group_description,
                json_extract_path_text(detail.Properties, 'ModelPackageGroupPolicy') as model_package_group_policy,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'ModelPackageGroupStatus') as model_package_group_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
                AND listing.region = 'us-east-1'
    model_quality_job_definitions:
      name: model_quality_job_definitions
      id: aws.sagemaker.model_quality_job_definitions
      x-cfn-schema-name: ModelQualityJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelQualityJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModelQualityJobDefinition&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelQualityJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::ModelQualityJobDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/model_quality_job_definitions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/model_quality_job_definitions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(Properties, '$.ModelQualityBaselineConfig') as model_quality_baseline_config,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification') as model_quality_app_specification,
              JSON_EXTRACT(Properties, '$.ModelQualityJobInput') as model_quality_job_input,
              JSON_EXTRACT(Properties, '$.ModelQualityJobOutputConfig') as model_quality_job_output_config,
              JSON_EXTRACT(Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
              AND data__Identifier = '<JobDefinitionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
                JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
                JSON_EXTRACT(detail.Properties, '$.ModelQualityBaselineConfig') as model_quality_baseline_config,
                JSON_EXTRACT(detail.Properties, '$.ModelQualityAppSpecification') as model_quality_app_specification,
                JSON_EXTRACT(detail.Properties, '$.ModelQualityJobInput') as model_quality_job_input,
                JSON_EXTRACT(detail.Properties, '$.ModelQualityJobOutputConfig') as model_quality_job_output_config,
                JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
                JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn,
                  json_extract_path_text(Properties, 'JobDefinitionName') as job_definition_name,
                  json_extract_path_text(Properties, 'ModelQualityBaselineConfig') as model_quality_baseline_config,
                  json_extract_path_text(Properties, 'ModelQualityAppSpecification') as model_quality_app_specification,
                  json_extract_path_text(Properties, 'ModelQualityJobInput') as model_quality_job_input,
                  json_extract_path_text(Properties, 'ModelQualityJobOutputConfig') as model_quality_job_output_config,
                  json_extract_path_text(Properties, 'JobResources') as job_resources,
                  json_extract_path_text(Properties, 'NetworkConfig') as network_config,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'StoppingCondition') as stopping_condition,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                  AND data__Identifier = '<JobDefinitionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                    json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                    json_extract_path_text(detail.Properties, 'ModelQualityBaselineConfig') as model_quality_baseline_config,
                    json_extract_path_text(detail.Properties, 'ModelQualityAppSpecification') as model_quality_app_specification,
                    json_extract_path_text(detail.Properties, 'ModelQualityJobInput') as model_quality_job_input,
                    json_extract_path_text(detail.Properties, 'ModelQualityJobOutputConfig') as model_quality_job_output_config,
                    json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                    json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                    AND detail.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                    AND listing.region = 'us-east-1'
    model_quality_job_definitions_list_only:
      name: model_quality_job_definitions_list_only
      id: aws.sagemaker.model_quality_job_definitions_list_only
      x-cfn-schema-name: ModelQualityJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelQualityJobDefinition
      x-identifiers:
        - JobDefinitionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'JobDefinitionArn') as job_definition_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                AND region = 'us-east-1'
    model_quality_job_definition_tags:
      name: model_quality_job_definition_tags
      id: aws.sagemaker.model_quality_job_definition_tags
      x-cfn-schema-name: ModelQualityJobDefinition
      x-cfn-type-name: AWS::SageMaker::ModelQualityJobDefinition
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(detail.Properties, '$.JobDefinitionName') as job_definition_name,
              JSON_EXTRACT(detail.Properties, '$.ModelQualityBaselineConfig') as model_quality_baseline_config,
              JSON_EXTRACT(detail.Properties, '$.ModelQualityAppSpecification') as model_quality_app_specification,
              JSON_EXTRACT(detail.Properties, '$.ModelQualityJobInput') as model_quality_job_input,
              JSON_EXTRACT(detail.Properties, '$.ModelQualityJobOutputConfig') as model_quality_job_output_config,
              JSON_EXTRACT(detail.Properties, '$.JobResources') as job_resources,
              JSON_EXTRACT(detail.Properties, '$.NetworkConfig') as network_config,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.StoppingCondition') as stopping_condition,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
              AND detail.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'JobDefinitionArn') as job_definition_arn,
                json_extract_path_text(detail.Properties, 'JobDefinitionName') as job_definition_name,
                json_extract_path_text(detail.Properties, 'ModelQualityBaselineConfig') as model_quality_baseline_config,
                json_extract_path_text(detail.Properties, 'ModelQualityAppSpecification') as model_quality_app_specification,
                json_extract_path_text(detail.Properties, 'ModelQualityJobInput') as model_quality_job_input,
                json_extract_path_text(detail.Properties, 'ModelQualityJobOutputConfig') as model_quality_job_output_config,
                json_extract_path_text(detail.Properties, 'JobResources') as job_resources,
                json_extract_path_text(detail.Properties, 'NetworkConfig') as network_config,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'StoppingCondition') as stopping_condition,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                AND detail.data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
                AND listing.region = 'us-east-1'
    monitoring_schedules:
      name: monitoring_schedules
      id: aws.sagemaker.monitoring_schedules
      x-cfn-schema-name: MonitoringSchedule
      x-cfn-type-name: AWS::SageMaker::MonitoringSchedule
      x-identifiers:
        - MonitoringScheduleArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MonitoringSchedule&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::MonitoringSchedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::MonitoringSchedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::MonitoringSchedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/monitoring_schedules/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/monitoring_schedules/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/monitoring_schedules/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleArn') as monitoring_schedule_arn,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleName') as monitoring_schedule_name,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleConfig') as monitoring_schedule_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.FailureReason') as failure_reason,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary') as last_monitoring_execution_summary,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleStatus') as monitoring_schedule_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
              AND data__Identifier = '<MonitoringScheduleArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleArn') as monitoring_schedule_arn,
                JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleName') as monitoring_schedule_name,
                JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleConfig') as monitoring_schedule_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
                JSON_EXTRACT(detail.Properties, '$.FailureReason') as failure_reason,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
                JSON_EXTRACT(detail.Properties, '$.LastMonitoringExecutionSummary') as last_monitoring_execution_summary,
                JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleStatus') as monitoring_schedule_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                AND detail.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'MonitoringScheduleArn') as monitoring_schedule_arn,
                  json_extract_path_text(Properties, 'MonitoringScheduleName') as monitoring_schedule_name,
                  json_extract_path_text(Properties, 'MonitoringScheduleConfig') as monitoring_schedule_config,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'EndpointName') as endpoint_name,
                  json_extract_path_text(Properties, 'FailureReason') as failure_reason,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time,
                  json_extract_path_text(Properties, 'LastMonitoringExecutionSummary') as last_monitoring_execution_summary,
                  json_extract_path_text(Properties, 'MonitoringScheduleStatus') as monitoring_schedule_status
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                  AND data__Identifier = '<MonitoringScheduleArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'MonitoringScheduleArn') as monitoring_schedule_arn,
                    json_extract_path_text(detail.Properties, 'MonitoringScheduleName') as monitoring_schedule_name,
                    json_extract_path_text(detail.Properties, 'MonitoringScheduleConfig') as monitoring_schedule_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                    json_extract_path_text(detail.Properties, 'FailureReason') as failure_reason,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                    json_extract_path_text(detail.Properties, 'LastMonitoringExecutionSummary') as last_monitoring_execution_summary,
                    json_extract_path_text(detail.Properties, 'MonitoringScheduleStatus') as monitoring_schedule_status
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                    AND detail.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                    AND listing.region = 'us-east-1'
    monitoring_schedules_list_only:
      name: monitoring_schedules_list_only
      id: aws.sagemaker.monitoring_schedules_list_only
      x-cfn-schema-name: MonitoringSchedule
      x-cfn-type-name: AWS::SageMaker::MonitoringSchedule
      x-identifiers:
        - MonitoringScheduleArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleArn') as monitoring_schedule_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MonitoringScheduleArn') as monitoring_schedule_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                AND region = 'us-east-1'
    monitoring_schedule_tags:
      name: monitoring_schedule_tags
      id: aws.sagemaker.monitoring_schedule_tags
      x-cfn-schema-name: MonitoringSchedule
      x-cfn-type-name: AWS::SageMaker::MonitoringSchedule
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleArn') as monitoring_schedule_arn,
              JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleName') as monitoring_schedule_name,
              JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleConfig') as monitoring_schedule_config,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(detail.Properties, '$.FailureReason') as failure_reason,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(detail.Properties, '$.LastMonitoringExecutionSummary') as last_monitoring_execution_summary,
              JSON_EXTRACT(detail.Properties, '$.MonitoringScheduleStatus') as monitoring_schedule_status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
              AND detail.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'MonitoringScheduleArn') as monitoring_schedule_arn,
                json_extract_path_text(detail.Properties, 'MonitoringScheduleName') as monitoring_schedule_name,
                json_extract_path_text(detail.Properties, 'MonitoringScheduleConfig') as monitoring_schedule_config,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'EndpointName') as endpoint_name,
                json_extract_path_text(detail.Properties, 'FailureReason') as failure_reason,
                json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                json_extract_path_text(detail.Properties, 'LastMonitoringExecutionSummary') as last_monitoring_execution_summary,
                json_extract_path_text(detail.Properties, 'MonitoringScheduleStatus') as monitoring_schedule_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                AND detail.data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
                AND listing.region = 'us-east-1'
    partner_apps:
      name: partner_apps
      id: aws.sagemaker.partner_apps
      x-cfn-schema-name: PartnerApp
      x-cfn-type-name: AWS::SageMaker::PartnerApp
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PartnerApp&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::PartnerApp"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::PartnerApp"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::PartnerApp"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_apps/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_apps/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/partner_apps/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.Tier') as tier,
              JSON_EXTRACT(Properties, '$.EnableIamSessionBasedIdentity') as enable_iam_session_based_identity,
              JSON_EXTRACT(Properties, '$.ApplicationConfig') as application_config,
              JSON_EXTRACT(Properties, '$.AuthType') as auth_type,
              JSON_EXTRACT(Properties, '$.BaseUrl') as base_url,
              JSON_EXTRACT(Properties, '$.MaintenanceConfig') as maintenance_config,
              JSON_EXTRACT(Properties, '$.ClientToken') as client_token,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::PartnerApp'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRoleArn') as execution_role_arn,
                JSON_EXTRACT(detail.Properties, '$.Tier') as tier,
                JSON_EXTRACT(detail.Properties, '$.EnableIamSessionBasedIdentity') as enable_iam_session_based_identity,
                JSON_EXTRACT(detail.Properties, '$.ApplicationConfig') as application_config,
                JSON_EXTRACT(detail.Properties, '$.AuthType') as auth_type,
                JSON_EXTRACT(detail.Properties, '$.BaseUrl') as base_url,
                JSON_EXTRACT(detail.Properties, '$.MaintenanceConfig') as maintenance_config,
                JSON_EXTRACT(detail.Properties, '$.ClientToken') as client_token,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::PartnerApp'
                AND detail.data__TypeName = 'AWS::SageMaker::PartnerApp'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'ExecutionRoleArn') as execution_role_arn,
                  json_extract_path_text(Properties, 'Tier') as tier,
                  json_extract_path_text(Properties, 'EnableIamSessionBasedIdentity') as enable_iam_session_based_identity,
                  json_extract_path_text(Properties, 'ApplicationConfig') as application_config,
                  json_extract_path_text(Properties, 'AuthType') as auth_type,
                  json_extract_path_text(Properties, 'BaseUrl') as base_url,
                  json_extract_path_text(Properties, 'MaintenanceConfig') as maintenance_config,
                  json_extract_path_text(Properties, 'ClientToken') as client_token,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::PartnerApp'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'ExecutionRoleArn') as execution_role_arn,
                    json_extract_path_text(detail.Properties, 'Tier') as tier,
                    json_extract_path_text(detail.Properties, 'EnableIamSessionBasedIdentity') as enable_iam_session_based_identity,
                    json_extract_path_text(detail.Properties, 'ApplicationConfig') as application_config,
                    json_extract_path_text(detail.Properties, 'AuthType') as auth_type,
                    json_extract_path_text(detail.Properties, 'BaseUrl') as base_url,
                    json_extract_path_text(detail.Properties, 'MaintenanceConfig') as maintenance_config,
                    json_extract_path_text(detail.Properties, 'ClientToken') as client_token,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::PartnerApp'
                    AND detail.data__TypeName = 'AWS::SageMaker::PartnerApp'
                    AND listing.region = 'us-east-1'
    partner_apps_list_only:
      name: partner_apps_list_only
      id: aws.sagemaker.partner_apps_list_only
      x-cfn-schema-name: PartnerApp
      x-cfn-type-name: AWS::SageMaker::PartnerApp
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::PartnerApp'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::PartnerApp'
                AND region = 'us-east-1'
    partner_app_tags:
      name: partner_app_tags
      id: aws.sagemaker.partner_app_tags
      x-cfn-schema-name: PartnerApp
      x-cfn-type-name: AWS::SageMaker::PartnerApp
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(detail.Properties, '$.Tier') as tier,
              JSON_EXTRACT(detail.Properties, '$.EnableIamSessionBasedIdentity') as enable_iam_session_based_identity,
              JSON_EXTRACT(detail.Properties, '$.ApplicationConfig') as application_config,
              JSON_EXTRACT(detail.Properties, '$.AuthType') as auth_type,
              JSON_EXTRACT(detail.Properties, '$.BaseUrl') as base_url,
              JSON_EXTRACT(detail.Properties, '$.MaintenanceConfig') as maintenance_config,
              JSON_EXTRACT(detail.Properties, '$.ClientToken') as client_token
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::PartnerApp'
              AND detail.data__TypeName = 'AWS::SageMaker::PartnerApp'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'ExecutionRoleArn') as execution_role_arn,
                json_extract_path_text(detail.Properties, 'Tier') as tier,
                json_extract_path_text(detail.Properties, 'EnableIamSessionBasedIdentity') as enable_iam_session_based_identity,
                json_extract_path_text(detail.Properties, 'ApplicationConfig') as application_config,
                json_extract_path_text(detail.Properties, 'AuthType') as auth_type,
                json_extract_path_text(detail.Properties, 'BaseUrl') as base_url,
                json_extract_path_text(detail.Properties, 'MaintenanceConfig') as maintenance_config,
                json_extract_path_text(detail.Properties, 'ClientToken') as client_token
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::PartnerApp'
                AND detail.data__TypeName = 'AWS::SageMaker::PartnerApp'
                AND listing.region = 'us-east-1'
    pipelines:
      name: pipelines
      id: aws.sagemaker.pipelines
      x-cfn-schema-name: Pipeline
      x-cfn-type-name: AWS::SageMaker::Pipeline
      x-identifiers:
        - PipelineName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Pipeline&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Pipeline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Pipeline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Pipeline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PipelineName') as pipeline_name,
              JSON_EXTRACT(Properties, '$.PipelineDisplayName') as pipeline_display_name,
              JSON_EXTRACT(Properties, '$.PipelineDescription') as pipeline_description,
              JSON_EXTRACT(Properties, '$.PipelineDefinition') as pipeline_definition,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ParallelismConfiguration') as parallelism_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Pipeline'
              AND data__Identifier = '<PipelineName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.PipelineName') as pipeline_name,
                JSON_EXTRACT(detail.Properties, '$.PipelineDisplayName') as pipeline_display_name,
                JSON_EXTRACT(detail.Properties, '$.PipelineDescription') as pipeline_description,
                JSON_EXTRACT(detail.Properties, '$.PipelineDefinition') as pipeline_definition,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ParallelismConfiguration') as parallelism_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::Pipeline'
                AND detail.data__TypeName = 'AWS::SageMaker::Pipeline'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'PipelineName') as pipeline_name,
                  json_extract_path_text(Properties, 'PipelineDisplayName') as pipeline_display_name,
                  json_extract_path_text(Properties, 'PipelineDescription') as pipeline_description,
                  json_extract_path_text(Properties, 'PipelineDefinition') as pipeline_definition,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ParallelismConfiguration') as parallelism_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Pipeline'
                  AND data__Identifier = '<PipelineName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'PipelineName') as pipeline_name,
                    json_extract_path_text(detail.Properties, 'PipelineDisplayName') as pipeline_display_name,
                    json_extract_path_text(detail.Properties, 'PipelineDescription') as pipeline_description,
                    json_extract_path_text(detail.Properties, 'PipelineDefinition') as pipeline_definition,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ParallelismConfiguration') as parallelism_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::Pipeline'
                    AND detail.data__TypeName = 'AWS::SageMaker::Pipeline'
                    AND listing.region = 'us-east-1'
    pipelines_list_only:
      name: pipelines_list_only
      id: aws.sagemaker.pipelines_list_only
      x-cfn-schema-name: Pipeline
      x-cfn-type-name: AWS::SageMaker::Pipeline
      x-identifiers:
        - PipelineName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PipelineName') as pipeline_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Pipeline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PipelineName') as pipeline_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Pipeline'
                AND region = 'us-east-1'
    pipeline_tags:
      name: pipeline_tags
      id: aws.sagemaker.pipeline_tags
      x-cfn-schema-name: Pipeline
      x-cfn-type-name: AWS::SageMaker::Pipeline
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.PipelineName') as pipeline_name,
              JSON_EXTRACT(detail.Properties, '$.PipelineDisplayName') as pipeline_display_name,
              JSON_EXTRACT(detail.Properties, '$.PipelineDescription') as pipeline_description,
              JSON_EXTRACT(detail.Properties, '$.PipelineDefinition') as pipeline_definition,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.ParallelismConfiguration') as parallelism_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::Pipeline'
              AND detail.data__TypeName = 'AWS::SageMaker::Pipeline'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'PipelineName') as pipeline_name,
                json_extract_path_text(detail.Properties, 'PipelineDisplayName') as pipeline_display_name,
                json_extract_path_text(detail.Properties, 'PipelineDescription') as pipeline_description,
                json_extract_path_text(detail.Properties, 'PipelineDefinition') as pipeline_definition,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'ParallelismConfiguration') as parallelism_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::Pipeline'
                AND detail.data__TypeName = 'AWS::SageMaker::Pipeline'
                AND listing.region = 'us-east-1'
    projects:
      name: projects
      id: aws.sagemaker.projects
      x-cfn-schema-name: Project
      x-cfn-type-name: AWS::SageMaker::Project
      x-identifiers:
        - ProjectArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Project&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/projects/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ProjectArn') as project_arn,
              JSON_EXTRACT(Properties, '$.ProjectId') as project_id,
              JSON_EXTRACT(Properties, '$.ProjectName') as project_name,
              JSON_EXTRACT(Properties, '$.ProjectDescription') as project_description,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.ServiceCatalogProvisioningDetails') as service_catalog_provisioning_details,
              JSON_EXTRACT(Properties, '$.ServiceCatalogProvisionedProductDetails') as service_catalog_provisioned_product_details,
              JSON_EXTRACT(Properties, '$.ProjectStatus') as project_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Project'
              AND data__Identifier = '<ProjectArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ProjectArn') as project_arn,
                JSON_EXTRACT(detail.Properties, '$.ProjectId') as project_id,
                JSON_EXTRACT(detail.Properties, '$.ProjectName') as project_name,
                JSON_EXTRACT(detail.Properties, '$.ProjectDescription') as project_description,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.ServiceCatalogProvisioningDetails') as service_catalog_provisioning_details,
                JSON_EXTRACT(detail.Properties, '$.ServiceCatalogProvisionedProductDetails') as service_catalog_provisioned_product_details,
                JSON_EXTRACT(detail.Properties, '$.ProjectStatus') as project_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::Project'
                AND detail.data__TypeName = 'AWS::SageMaker::Project'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ProjectArn') as project_arn,
                  json_extract_path_text(Properties, 'ProjectId') as project_id,
                  json_extract_path_text(Properties, 'ProjectName') as project_name,
                  json_extract_path_text(Properties, 'ProjectDescription') as project_description,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'ServiceCatalogProvisioningDetails') as service_catalog_provisioning_details,
                  json_extract_path_text(Properties, 'ServiceCatalogProvisionedProductDetails') as service_catalog_provisioned_product_details,
                  json_extract_path_text(Properties, 'ProjectStatus') as project_status
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Project'
                  AND data__Identifier = '<ProjectArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ProjectArn') as project_arn,
                    json_extract_path_text(detail.Properties, 'ProjectId') as project_id,
                    json_extract_path_text(detail.Properties, 'ProjectName') as project_name,
                    json_extract_path_text(detail.Properties, 'ProjectDescription') as project_description,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'ServiceCatalogProvisioningDetails') as service_catalog_provisioning_details,
                    json_extract_path_text(detail.Properties, 'ServiceCatalogProvisionedProductDetails') as service_catalog_provisioned_product_details,
                    json_extract_path_text(detail.Properties, 'ProjectStatus') as project_status
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::Project'
                    AND detail.data__TypeName = 'AWS::SageMaker::Project'
                    AND listing.region = 'us-east-1'
    projects_list_only:
      name: projects_list_only
      id: aws.sagemaker.projects_list_only
      x-cfn-schema-name: Project
      x-cfn-type-name: AWS::SageMaker::Project
      x-identifiers:
        - ProjectArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProjectArn') as project_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Project'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProjectArn') as project_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Project'
                AND region = 'us-east-1'
    project_tags:
      name: project_tags
      id: aws.sagemaker.project_tags
      x-cfn-schema-name: Project
      x-cfn-type-name: AWS::SageMaker::Project
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ProjectArn') as project_arn,
              JSON_EXTRACT(detail.Properties, '$.ProjectId') as project_id,
              JSON_EXTRACT(detail.Properties, '$.ProjectName') as project_name,
              JSON_EXTRACT(detail.Properties, '$.ProjectDescription') as project_description,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.ServiceCatalogProvisioningDetails') as service_catalog_provisioning_details,
              JSON_EXTRACT(detail.Properties, '$.ServiceCatalogProvisionedProductDetails') as service_catalog_provisioned_product_details,
              JSON_EXTRACT(detail.Properties, '$.ProjectStatus') as project_status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::Project'
              AND detail.data__TypeName = 'AWS::SageMaker::Project'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ProjectArn') as project_arn,
                json_extract_path_text(detail.Properties, 'ProjectId') as project_id,
                json_extract_path_text(detail.Properties, 'ProjectName') as project_name,
                json_extract_path_text(detail.Properties, 'ProjectDescription') as project_description,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'ServiceCatalogProvisioningDetails') as service_catalog_provisioning_details,
                json_extract_path_text(detail.Properties, 'ServiceCatalogProvisionedProductDetails') as service_catalog_provisioned_product_details,
                json_extract_path_text(detail.Properties, 'ProjectStatus') as project_status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::Project'
                AND detail.data__TypeName = 'AWS::SageMaker::Project'
                AND listing.region = 'us-east-1'
    spaces:
      name: spaces
      id: aws.sagemaker.spaces
      x-cfn-schema-name: Space
      x-cfn-type-name: AWS::SageMaker::Space
      x-identifiers:
        - DomainId
        - SpaceName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Space&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Space"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Space"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::Space"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/spaces/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/spaces/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/spaces/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SpaceArn') as space_arn,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.SpaceName') as space_name,
              JSON_EXTRACT(Properties, '$.SpaceSettings') as space_settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.OwnershipSettings') as ownership_settings,
              JSON_EXTRACT(Properties, '$.SpaceSharingSettings') as space_sharing_settings,
              JSON_EXTRACT(Properties, '$.SpaceDisplayName') as space_display_name,
              JSON_EXTRACT(Properties, '$.Url') as url
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Space'
              AND data__Identifier = '<DomainId>|<SpaceName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.SpaceArn') as space_arn,
                JSON_EXTRACT(detail.Properties, '$.DomainId') as domain_id,
                JSON_EXTRACT(detail.Properties, '$.SpaceName') as space_name,
                JSON_EXTRACT(detail.Properties, '$.SpaceSettings') as space_settings,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.OwnershipSettings') as ownership_settings,
                JSON_EXTRACT(detail.Properties, '$.SpaceSharingSettings') as space_sharing_settings,
                JSON_EXTRACT(detail.Properties, '$.SpaceDisplayName') as space_display_name,
                JSON_EXTRACT(detail.Properties, '$.Url') as url
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::Space'
                AND detail.data__TypeName = 'AWS::SageMaker::Space'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'SpaceArn') as space_arn,
                  json_extract_path_text(Properties, 'DomainId') as domain_id,
                  json_extract_path_text(Properties, 'SpaceName') as space_name,
                  json_extract_path_text(Properties, 'SpaceSettings') as space_settings,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'OwnershipSettings') as ownership_settings,
                  json_extract_path_text(Properties, 'SpaceSharingSettings') as space_sharing_settings,
                  json_extract_path_text(Properties, 'SpaceDisplayName') as space_display_name,
                  json_extract_path_text(Properties, 'Url') as url
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Space'
                  AND data__Identifier = '<DomainId>|<SpaceName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'SpaceArn') as space_arn,
                    json_extract_path_text(detail.Properties, 'DomainId') as domain_id,
                    json_extract_path_text(detail.Properties, 'SpaceName') as space_name,
                    json_extract_path_text(detail.Properties, 'SpaceSettings') as space_settings,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'OwnershipSettings') as ownership_settings,
                    json_extract_path_text(detail.Properties, 'SpaceSharingSettings') as space_sharing_settings,
                    json_extract_path_text(detail.Properties, 'SpaceDisplayName') as space_display_name,
                    json_extract_path_text(detail.Properties, 'Url') as url
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::Space'
                    AND detail.data__TypeName = 'AWS::SageMaker::Space'
                    AND listing.region = 'us-east-1'
    spaces_list_only:
      name: spaces_list_only
      id: aws.sagemaker.spaces_list_only
      x-cfn-schema-name: Space
      x-cfn-type-name: AWS::SageMaker::Space
      x-identifiers:
        - DomainId
        - SpaceName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.SpaceName') as space_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Space'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'SpaceName') as space_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Space'
                AND region = 'us-east-1'
    space_tags:
      name: space_tags
      id: aws.sagemaker.space_tags
      x-cfn-schema-name: Space
      x-cfn-type-name: AWS::SageMaker::Space
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.SpaceArn') as space_arn,
              JSON_EXTRACT(detail.Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(detail.Properties, '$.SpaceName') as space_name,
              JSON_EXTRACT(detail.Properties, '$.SpaceSettings') as space_settings,
              JSON_EXTRACT(detail.Properties, '$.OwnershipSettings') as ownership_settings,
              JSON_EXTRACT(detail.Properties, '$.SpaceSharingSettings') as space_sharing_settings,
              JSON_EXTRACT(detail.Properties, '$.SpaceDisplayName') as space_display_name,
              JSON_EXTRACT(detail.Properties, '$.Url') as url
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::Space'
              AND detail.data__TypeName = 'AWS::SageMaker::Space'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'SpaceArn') as space_arn,
                json_extract_path_text(detail.Properties, 'DomainId') as domain_id,
                json_extract_path_text(detail.Properties, 'SpaceName') as space_name,
                json_extract_path_text(detail.Properties, 'SpaceSettings') as space_settings,
                json_extract_path_text(detail.Properties, 'OwnershipSettings') as ownership_settings,
                json_extract_path_text(detail.Properties, 'SpaceSharingSettings') as space_sharing_settings,
                json_extract_path_text(detail.Properties, 'SpaceDisplayName') as space_display_name,
                json_extract_path_text(detail.Properties, 'Url') as url
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::Space'
                AND detail.data__TypeName = 'AWS::SageMaker::Space'
                AND listing.region = 'us-east-1'
    studio_lifecycle_configs:
      name: studio_lifecycle_configs
      id: aws.sagemaker.studio_lifecycle_configs
      x-cfn-schema-name: StudioLifecycleConfig
      x-cfn-type-name: AWS::SageMaker::StudioLifecycleConfig
      x-identifiers:
        - StudioLifecycleConfigName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__StudioLifecycleConfig&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::StudioLifecycleConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::StudioLifecycleConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/studio_lifecycle_configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/studio_lifecycle_configs/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.StudioLifecycleConfigArn') as studio_lifecycle_config_arn,
              JSON_EXTRACT(Properties, '$.StudioLifecycleConfigAppType') as studio_lifecycle_config_app_type,
              JSON_EXTRACT(Properties, '$.StudioLifecycleConfigContent') as studio_lifecycle_config_content,
              JSON_EXTRACT(Properties, '$.StudioLifecycleConfigName') as studio_lifecycle_config_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
              AND data__Identifier = '<StudioLifecycleConfigName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigArn') as studio_lifecycle_config_arn,
                JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigAppType') as studio_lifecycle_config_app_type,
                JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigContent') as studio_lifecycle_config_content,
                JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigName') as studio_lifecycle_config_name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                AND detail.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'StudioLifecycleConfigArn') as studio_lifecycle_config_arn,
                  json_extract_path_text(Properties, 'StudioLifecycleConfigAppType') as studio_lifecycle_config_app_type,
                  json_extract_path_text(Properties, 'StudioLifecycleConfigContent') as studio_lifecycle_config_content,
                  json_extract_path_text(Properties, 'StudioLifecycleConfigName') as studio_lifecycle_config_name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                  AND data__Identifier = '<StudioLifecycleConfigName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'StudioLifecycleConfigArn') as studio_lifecycle_config_arn,
                    json_extract_path_text(detail.Properties, 'StudioLifecycleConfigAppType') as studio_lifecycle_config_app_type,
                    json_extract_path_text(detail.Properties, 'StudioLifecycleConfigContent') as studio_lifecycle_config_content,
                    json_extract_path_text(detail.Properties, 'StudioLifecycleConfigName') as studio_lifecycle_config_name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                    AND detail.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                    AND listing.region = 'us-east-1'
    studio_lifecycle_configs_list_only:
      name: studio_lifecycle_configs_list_only
      id: aws.sagemaker.studio_lifecycle_configs_list_only
      x-cfn-schema-name: StudioLifecycleConfig
      x-cfn-type-name: AWS::SageMaker::StudioLifecycleConfig
      x-identifiers:
        - StudioLifecycleConfigName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StudioLifecycleConfigName') as studio_lifecycle_config_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'StudioLifecycleConfigName') as studio_lifecycle_config_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                AND region = 'us-east-1'
    studio_lifecycle_config_tags:
      name: studio_lifecycle_config_tags
      id: aws.sagemaker.studio_lifecycle_config_tags
      x-cfn-schema-name: StudioLifecycleConfig
      x-cfn-type-name: AWS::SageMaker::StudioLifecycleConfig
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigArn') as studio_lifecycle_config_arn,
              JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigAppType') as studio_lifecycle_config_app_type,
              JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigContent') as studio_lifecycle_config_content,
              JSON_EXTRACT(detail.Properties, '$.StudioLifecycleConfigName') as studio_lifecycle_config_name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
              AND detail.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'StudioLifecycleConfigArn') as studio_lifecycle_config_arn,
                json_extract_path_text(detail.Properties, 'StudioLifecycleConfigAppType') as studio_lifecycle_config_app_type,
                json_extract_path_text(detail.Properties, 'StudioLifecycleConfigContent') as studio_lifecycle_config_content,
                json_extract_path_text(detail.Properties, 'StudioLifecycleConfigName') as studio_lifecycle_config_name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                AND detail.data__TypeName = 'AWS::SageMaker::StudioLifecycleConfig'
                AND listing.region = 'us-east-1'
    user_profiles:
      name: user_profiles
      id: aws.sagemaker.user_profiles
      x-cfn-schema-name: UserProfile
      x-cfn-type-name: AWS::SageMaker::UserProfile
      x-identifiers:
        - UserProfileName
        - DomainId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::UserProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::UserProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SageMaker::UserProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.UserProfileArn') as user_profile_arn,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.SingleSignOnUserIdentifier') as single_sign_on_user_identifier,
              JSON_EXTRACT(Properties, '$.SingleSignOnUserValue') as single_sign_on_user_value,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name,
              JSON_EXTRACT(Properties, '$.UserSettings') as user_settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::UserProfile'
              AND data__Identifier = '<UserProfileName>|<DomainId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.UserProfileArn') as user_profile_arn,
                JSON_EXTRACT(detail.Properties, '$.DomainId') as domain_id,
                JSON_EXTRACT(detail.Properties, '$.SingleSignOnUserIdentifier') as single_sign_on_user_identifier,
                JSON_EXTRACT(detail.Properties, '$.SingleSignOnUserValue') as single_sign_on_user_value,
                JSON_EXTRACT(detail.Properties, '$.UserProfileName') as user_profile_name,
                JSON_EXTRACT(detail.Properties, '$.UserSettings') as user_settings,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SageMaker::UserProfile'
                AND detail.data__TypeName = 'AWS::SageMaker::UserProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'UserProfileArn') as user_profile_arn,
                  json_extract_path_text(Properties, 'DomainId') as domain_id,
                  json_extract_path_text(Properties, 'SingleSignOnUserIdentifier') as single_sign_on_user_identifier,
                  json_extract_path_text(Properties, 'SingleSignOnUserValue') as single_sign_on_user_value,
                  json_extract_path_text(Properties, 'UserProfileName') as user_profile_name,
                  json_extract_path_text(Properties, 'UserSettings') as user_settings,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::UserProfile'
                  AND data__Identifier = '<UserProfileName>|<DomainId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'UserProfileArn') as user_profile_arn,
                    json_extract_path_text(detail.Properties, 'DomainId') as domain_id,
                    json_extract_path_text(detail.Properties, 'SingleSignOnUserIdentifier') as single_sign_on_user_identifier,
                    json_extract_path_text(detail.Properties, 'SingleSignOnUserValue') as single_sign_on_user_value,
                    json_extract_path_text(detail.Properties, 'UserProfileName') as user_profile_name,
                    json_extract_path_text(detail.Properties, 'UserSettings') as user_settings,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SageMaker::UserProfile'
                    AND detail.data__TypeName = 'AWS::SageMaker::UserProfile'
                    AND listing.region = 'us-east-1'
    user_profiles_list_only:
      name: user_profiles_list_only
      id: aws.sagemaker.user_profiles_list_only
      x-cfn-schema-name: UserProfile
      x-cfn-type-name: AWS::SageMaker::UserProfile
      x-identifiers:
        - UserProfileName
        - DomainId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::UserProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserProfileName') as user_profile_name,
                json_extract_path_text(Properties, 'DomainId') as domain_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::UserProfile'
                AND region = 'us-east-1'
    user_profile_tags:
      name: user_profile_tags
      id: aws.sagemaker.user_profile_tags
      x-cfn-schema-name: UserProfile
      x-cfn-type-name: AWS::SageMaker::UserProfile
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.UserProfileArn') as user_profile_arn,
              JSON_EXTRACT(detail.Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(detail.Properties, '$.SingleSignOnUserIdentifier') as single_sign_on_user_identifier,
              JSON_EXTRACT(detail.Properties, '$.SingleSignOnUserValue') as single_sign_on_user_value,
              JSON_EXTRACT(detail.Properties, '$.UserProfileName') as user_profile_name,
              JSON_EXTRACT(detail.Properties, '$.UserSettings') as user_settings
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SageMaker::UserProfile'
              AND detail.data__TypeName = 'AWS::SageMaker::UserProfile'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'UserProfileArn') as user_profile_arn,
                json_extract_path_text(detail.Properties, 'DomainId') as domain_id,
                json_extract_path_text(detail.Properties, 'SingleSignOnUserIdentifier') as single_sign_on_user_identifier,
                json_extract_path_text(detail.Properties, 'SingleSignOnUserValue') as single_sign_on_user_value,
                json_extract_path_text(detail.Properties, 'UserProfileName') as user_profile_name,
                json_extract_path_text(detail.Properties, 'UserSettings') as user_settings
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SageMaker::UserProfile'
                AND detail.data__TypeName = 'AWS::SageMaker::UserProfile'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__App&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApp
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AppImageConfig&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAppImageConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAppImageConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Cluster&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCluster
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataQualityJobDefinition&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataQualityJobDefinition
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataQualityJobDefinitionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Device&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDevice
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DeviceFleet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDeviceFleet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDeviceFleetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Endpoint&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEndpoint
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__FeatureGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFeatureGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFeatureGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Image&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateImage
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateImageRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ImageVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateImageVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateImageVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__InferenceComponent&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInferenceComponent
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInferenceComponentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__InferenceExperiment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInferenceExperiment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInferenceExperimentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MlflowTrackingServer&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMlflowTrackingServer
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMlflowTrackingServerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModelBiasJobDefinition&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModelBiasJobDefinition
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModelBiasJobDefinitionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModelExplainabilityJobDefinition&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModelExplainabilityJobDefinition
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModelExplainabilityJobDefinitionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModelPackage&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModelPackage
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModelPackageRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModelPackageGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModelPackageGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModelPackageGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModelQualityJobDefinition&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModelQualityJobDefinition
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModelQualityJobDefinitionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MonitoringSchedule&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMonitoringSchedule
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMonitoringScheduleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PartnerApp&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePartnerApp
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePartnerAppRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Pipeline&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePipeline
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Project&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProject
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Space&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSpace
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSpaceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__StudioLifecycleConfig&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStudioLifecycleConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStudioLifecycleConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
