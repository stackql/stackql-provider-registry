openapi: 3.0.0
info:
  title: SageMaker
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourceSpec:
      type: object
      additionalProperties: false
      properties:
        InstanceType:
          type: string
          description: The instance type that the image version runs on.
          enum:
            - system
            - ml.t3.micro
            - ml.t3.small
            - ml.t3.medium
            - ml.t3.large
            - ml.t3.xlarge
            - ml.t3.2xlarge
            - ml.m5.large
            - ml.m5.xlarge
            - ml.m5.2xlarge
            - ml.m5.4xlarge
            - ml.m5.8xlarge
            - ml.m5.12xlarge
            - ml.m5.16xlarge
            - ml.m5.24xlarge
            - ml.c5.large
            - ml.c5.xlarge
            - ml.c5.2xlarge
            - ml.c5.4xlarge
            - ml.c5.9xlarge
            - ml.c5.12xlarge
            - ml.c5.18xlarge
            - ml.c5.24xlarge
            - ml.p3.2xlarge
            - ml.p3.8xlarge
            - ml.p3.16xlarge
            - ml.g4dn.xlarge
            - ml.g4dn.2xlarge
            - ml.g4dn.4xlarge
            - ml.g4dn.8xlarge
            - ml.g4dn.12xlarge
            - ml.g4dn.16xlarge
            - ml.r5.large
            - ml.r5.xlarge
            - ml.r5.2xlarge
            - ml.r5.4xlarge
            - ml.r5.8xlarge
            - ml.r5.12xlarge
            - ml.r5.16xlarge
            - ml.r5.24xlarge
            - ml.p3dn.24xlarge
            - ml.m5d.large
            - ml.m5d.xlarge
            - ml.m5d.2xlarge
            - ml.m5d.4xlarge
            - ml.m5d.8xlarge
            - ml.m5d.12xlarge
            - ml.m5d.16xlarge
            - ml.m5d.24xlarge
            - ml.g5.xlarge
            - ml.g5.2xlarge
            - ml.g5.4xlarge
            - ml.g5.8xlarge
            - ml.g5.12xlarge
            - ml.g5.16xlarge
            - ml.g5.24xlarge
            - ml.g5.48xlarge
        SageMakerImageArn:
          type: string
          description: The ARN of the SageMaker image that the image version belongs to.
          maxLength: 256
          pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$
        SageMakerImageVersionArn:
          type: string
          description: The ARN of the image version created on the instance.
          maxLength: 256
          pattern: ^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    App:
      type: object
      properties:
        AppArn:
          type: string
          description: The Amazon Resource Name (ARN) of the app.
          minLength: 1
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app/.*
        AppName:
          type: string
          description: The name of the app.
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
        AppType:
          type: string
          description: The type of app.
          enum:
            - JupyterServer
            - KernelGateway
            - RStudioServerPro
            - RSessionGateway
            - Canvas
        DomainId:
          type: string
          description: The domain ID.
          minLength: 1
          maxLength: 63
        ResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.
        Tags:
          type: array
          description: A list of tags to apply to the app.
          uniqueItems: false
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        UserProfileName:
          type: string
          description: The user profile name.
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
      required:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
      x-stackql-resource-name: app
      x-stackql-primaryIdentifier:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
    KernelGatewayImageConfig:
      type: object
      description: The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.
      additionalProperties: false
      properties:
        FileSystemConfig:
          $ref: '#/components/schemas/FileSystemConfig'
          description: The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
        KernelSpecs:
          type: array
          description: The specification of the Jupyter kernels in the image.
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/KernelSpec'
      required:
        - KernelSpecs
    FileSystemConfig:
      type: object
      description: The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.
      additionalProperties: false
      properties:
        DefaultGid:
          type: integer
          description: The default POSIX group ID (GID). If not specified, defaults to 100.
          minimum: 0
          maximum: 65535
        DefaultUid:
          type: integer
          description: The default POSIX user ID (UID). If not specified, defaults to 1000.
          minimum: 0
          maximum: 65535
        MountPath:
          type: string
          description: The path within the image to mount the user's EFS home directory. The directory should be empty. If not specified, defaults to /home/sagemaker-user.
          minLength: 1
          maxLength: 1024
          pattern: ^/.*
    KernelSpec:
      type: object
      additionalProperties: false
      properties:
        DisplayName:
          type: string
          description: The display name of the kernel.
          minLength: 1
          maxLength: 1024
        Name:
          type: string
          description: The name of the kernel.
          minLength: 1
          maxLength: 1024
      required:
        - Name
    AppImageConfig:
      type: object
      properties:
        AppImageConfigArn:
          type: string
          description: The Amazon Resource Name (ARN) of the AppImageConfig.
          minLength: 1
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:app-image-config/.*
        AppImageConfigName:
          type: string
          description: The Name of the AppImageConfig.
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
        KernelGatewayImageConfig:
          $ref: '#/components/schemas/KernelGatewayImageConfig'
          description: The KernelGatewayImageConfig.
        Tags:
          type: array
          description: A list of tags to apply to the AppImageConfig.
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
      required:
        - AppImageConfigName
      x-stackql-resource-name: app_image_config
      x-stackql-primaryIdentifier:
        - AppImageConfigName
    GitConfig:
      type: object
      additionalProperties: false
      properties:
        SecretArn:
          type: string
        RepositoryUrl:
          type: string
        Branch:
          type: string
      required:
        - RepositoryUrl
    CodeRepository:
      type: object
      properties:
        GitConfig:
          $ref: '#/components/schemas/GitConfig'
        CodeRepositoryName:
          type: string
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - GitConfig
      x-stackql-resource-name: code_repository
      x-stackql-primaryIdentifier:
        - Id
    DataQualityBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
        StatisticsResource:
          $ref: '#/components/schemas/StatisticsResource'
    ConstraintsResource:
      type: object
      additionalProperties: false
      description: The baseline constraints resource for a monitoring job.
      properties:
        S3Uri:
          description: The Amazon S3 URI for baseline constraint file in Amazon S3 that the current monitoring job should validated against.
          $ref: '#/components/schemas/S3Uri'
    StatisticsResource:
      type: object
      additionalProperties: false
      description: The baseline statistics resource for a monitoring job.
      properties:
        S3Uri:
          description: The Amazon S3 URI for the baseline statistics file in Amazon S3 that the current monitoring job should be validated against.
          $ref: '#/components/schemas/S3Uri'
    S3Uri:
      type: string
      description: The Amazon S3 URI.
      pattern: ^(https|s3)://([^/]+)/?(.*)$
      maxLength: 1024
    DataQualityAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ContainerArguments:
          type: array
          description: An array of arguments for the container used to run the monitoring job.
          maxItems: 50
          items:
            type: string
            minLength: 1
            maxLength: 256
        ContainerEntrypoint:
          type: array
          description: Specifies the entrypoint for a container used to run the monitoring job.
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 256
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        PostAnalyticsProcessorSourceUri:
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
          $ref: '#/components/schemas/S3Uri'
        RecordPreprocessorSourceUri:
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
      required:
        - ImageUri
    DataQualityJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
    EndpointInput:
      type: object
      additionalProperties: false
      description: The endpoint for a monitoring job.
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        LocalPath:
          type: string
          description: Path to the filesystem where the endpoint data is available to the container.
          pattern: .*
          maxLength: 256
        S3DataDistributionType:
          type: string
          description: Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
          enum:
            - FullyReplicated
            - ShardedByS3Key
        S3InputMode:
          type: string
          description: Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
          enum:
            - Pipe
            - File
      required:
        - EndpointName
        - LocalPath
    BatchTransformInput:
      type: object
      additionalProperties: false
      description: The batch transform input for a monitoring job.
      properties:
        DataCapturedDestinationS3Uri:
          type: string
          description: A URI that identifies the Amazon S3 storage location where Batch Transform Job captures data.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 512
        DatasetFormat:
          $ref: '#/components/schemas/DatasetFormat'
        LocalPath:
          type: string
          description: Path to the filesystem where the endpoint data is available to the container.
          pattern: .*
          maxLength: 256
        S3DataDistributionType:
          type: string
          description: Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defauts to FullyReplicated
          enum:
            - FullyReplicated
            - ShardedByS3Key
        S3InputMode:
          type: string
          description: Whether the Pipe or File is used as the input mode for transfering data for the monitoring job. Pipe mode is recommended for large datasets. File mode is useful for small files that fit in memory. Defaults to File.
          enum:
            - Pipe
            - File
      required:
        - DataCapturedDestinationS3Uri
        - DatasetFormat
        - LocalPath
    MonitoringOutputConfig:
      type: object
      additionalProperties: false
      description: The output configuration for monitoring jobs.
      properties:
        KmsKeyId:
          type: string
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
          pattern: .*
          maxLength: 2048
        MonitoringOutputs:
          type: array
          description: Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded.
          minLength: 1
          maxLength: 1
          items:
            $ref: '#/components/schemas/MonitoringOutput'
      required:
        - MonitoringOutputs
    MonitoringOutput:
      type: object
      additionalProperties: false
      description: The output object for a monitoring job.
      properties:
        S3Output:
          $ref: '#/components/schemas/S3Output'
      required:
        - S3Output
    S3Output:
      type: object
      additionalProperties: false
      description: Information about where and how to store the results of a monitoring job.
      properties:
        LocalPath:
          type: string
          description: The local path to the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job. LocalPath is an absolute path for the output data.
          pattern: .*
          maxLength: 256
        S3UploadMode:
          type: string
          description: Whether to upload the results of the monitoring job continuously or after the job completes.
          enum:
            - Continuous
            - EndOfJob
        S3Uri:
          type: string
          description: A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 512
      required:
        - LocalPath
        - S3Uri
    MonitoringResources:
      type: object
      additionalProperties: false
      description: Identifies the resources to deploy for a monitoring job.
      properties:
        ClusterConfig:
          $ref: '#/components/schemas/ClusterConfig'
      required:
        - ClusterConfig
    ClusterConfig:
      type: object
      additionalProperties: false
      description: Configuration for the cluster used to run model monitoring jobs.
      properties:
        InstanceCount:
          description: The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1. The default value is 1.
          type: integer
          minimum: 1
          maximum: 100
        InstanceType:
          description: The ML compute instance type for the processing job.
          type: string
        VolumeKmsKeyId:
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the model monitoring job.
          type: string
          minimum: 1
          maximum: 2048
        VolumeSizeInGB:
          description: The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario.
          type: integer
          minimum: 1
          maximum: 16384
      required:
        - InstanceCount
        - InstanceType
        - VolumeSizeInGB
    NetworkConfig:
      type: object
      additionalProperties: false
      description: Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
      properties:
        EnableInterContainerTrafficEncryption:
          description: Whether to encrypt all communications between distributed processing jobs. Choose True to encrypt communications. Encryption provides greater security for distributed processing jobs, but the processing might take longer.
          type: boolean
        EnableNetworkIsolation:
          description: Whether to allow inbound and outbound network calls to and from the containers used for the processing job.
          type: boolean
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
    VpcConfig:
      type: object
      additionalProperties: false
      description: Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC.
      properties:
        SecurityGroupIds:
          description: The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.
          type: array
          minItems: 1
          maxItems: 5
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
        Subnets:
          description: The ID of the subnets in the VPC to which you want to connect to your monitoring jobs.
          type: array
          minItems: 1
          maxItems: 16
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
      required:
        - SecurityGroupIds
        - Subnets
    StoppingCondition:
      type: object
      additionalProperties: false
      description: Specifies a time limit for how long the monitoring job is allowed to run.
      properties:
        MaxRuntimeInSeconds:
          description: The maximum runtime allowed in seconds.
          type: integer
          minimum: 1
          maximum: 86400
      required:
        - MaxRuntimeInSeconds
    EndpointName:
      type: string
      description: The name of the endpoint used to run the monitoring job.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    JobDefinitionName:
      type: string
      description: The name of the job definition.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    ProcessingJobName:
      type: string
      description: The name of a processing job
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      minLength: 1
      maxLength: 63
    DatasetFormat:
      description: The dataset format of the data to monitor
      type: object
      properties:
        Csv:
          $ref: '#/components/schemas/Csv'
        Json:
          $ref: '#/components/schemas/Json'
        Parquet:
          $ref: '#/components/schemas/Parquet'
    Csv:
      description: The CSV format
      type: object
      properties:
        Header:
          description: A boolean flag indicating if given CSV has header
          type: boolean
    Json:
      description: The Json format
      type: object
      properties:
        Line:
          description: A boolean flag indicating if it is JSON line format
          type: boolean
    Parquet:
      description: A flag indicating if the dataset format is Parquet
      type: boolean
    DataQualityJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        DataQualityBaselineConfig:
          $ref: '#/components/schemas/DataQualityBaselineConfig'
        DataQualityAppSpecification:
          $ref: '#/components/schemas/DataQualityAppSpecification'
        DataQualityJobInput:
          $ref: '#/components/schemas/DataQualityJobInput'
        DataQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - DataQualityAppSpecification
        - DataQualityJobInput
        - DataQualityJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: data_quality_job_definition
      x-stackql-primaryIdentifier:
        - JobDefinitionArn
    Device:
      type: object
      properties:
        DeviceFleetName:
          description: The name of the edge device fleet
          type: string
          pattern: ^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        Device:
          description: The Edge Device you want to register against a device fleet
          $ref: '#/components/schemas/Device'
        Tags:
          description: Associate tags with the resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DeviceFleetName
      x-stackql-resource-name: device
      x-stackql-primaryIdentifier:
        - Device/DeviceName
    EdgeOutputConfig:
      type: object
      properties:
        S3OutputLocation:
          description: The Amazon Simple Storage (S3) bucket URI
          type: string
          pattern: ^s3://([^/]+)/?(.*)$
          maxLength: 1024
        KmsKeyId:
          description: The KMS key id used for encryption on the S3 bucket
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 2048
      required:
        - S3OutputLocation
      additionalProperties: false
    DeviceFleet:
      type: object
      properties:
        Description:
          description: Description for the edge device fleet
          type: string
          pattern: '[\S\s]+'
          minLength: 0
          maxLength: 800
        DeviceFleetName:
          description: The name of the edge device fleet
          type: string
          pattern: ^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        OutputConfig:
          description: S3 bucket and an ecryption key id (if available) to store outputs for the fleet
          $ref: '#/components/schemas/EdgeOutputConfig'
        RoleArn:
          description: Role associated with the device fleet
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        Tags:
          description: Associate tags with the resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DeviceFleetName
        - OutputConfig
        - RoleArn
      x-stackql-resource-name: device_fleet
      x-stackql-primaryIdentifier:
        - DeviceFleetName
    UserSettings:
      type: object
      description: A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
      additionalProperties: false
      properties:
        ExecutionRole:
          type: string
          description: The user profile Amazon Resource Name (ARN).
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
        RStudioServerProAppSettings:
          $ref: '#/components/schemas/RStudioServerProAppSettings'
        SecurityGroups:
          type: array
          description: The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
          uniqueItems: false
          minItems: 0
          maxItems: 5
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
        SharingSettings:
          $ref: '#/components/schemas/SharingSettings'
          description: The sharing settings.
    DefaultSpaceSettings:
      type: object
      description: A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the Create/Update Domain API is called.
      additionalProperties: false
      properties:
        ExecutionRole:
          type: string
          description: The execution role for the space.
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
        SecurityGroups:
          type: array
          description: The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.
          uniqueItems: false
          x-insertionOrder: false
          minItems: 0
          maxItems: 5
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
    JupyterServerAppSettings:
      type: object
      description: The JupyterServer app settings.
      additionalProperties: false
      properties:
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
    KernelGatewayAppSettings:
      type: object
      description: The kernel gateway app settings.
      additionalProperties: false
      properties:
        CustomImages:
          type: array
          description: A list of custom SageMaker images that are configured to run as a KernelGateway app.
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/CustomImage'
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
          description: The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.
    CustomImage:
      type: object
      description: A custom SageMaker image.
      additionalProperties: false
      properties:
        AppImageConfigName:
          type: string
          description: The Name of the AppImageConfig.
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
        ImageName:
          type: string
          description: The name of the CustomImage. Must be unique to your account.
          maxLength: 63
          pattern: ^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$
        ImageVersionNumber:
          type: integer
          description: The version number of the CustomImage.
          minimum: 0
      required:
        - AppImageConfigName
        - ImageName
    SharingSettings:
      type: object
      description: Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
      additionalProperties: false
      properties:
        NotebookOutputOption:
          type: string
          description: Whether to include the notebook cell output when sharing the notebook. The default is Disabled.
          enum:
            - Allowed
            - Disabled
        S3KmsKeyId:
          type: string
          description: When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.
          maxLength: 2048
          pattern: .*
        S3OutputPath:
          type: string
          description: When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
    DomainSettings:
      type: object
      description: A collection of Domain settings.
      additionalProperties: false
      properties:
        SecurityGroupIds:
          type: array
          description: The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          maxItems: 3
          items:
            type: string
            maxLength: 32
            pattern: '[-0-9a-zA-Z]+'
        RStudioServerProDomainSettings:
          $ref: '#/components/schemas/RStudioServerProDomainSettings'
    RStudioServerProDomainSettings:
      type: object
      description: A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.
      additionalProperties: false
      properties:
        DomainExecutionRoleArn:
          type: string
          description: The ARN of the execution role for the RStudioServerPro Domain-level app.
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        RStudioConnectUrl:
          type: string
          description: A URL pointing to an RStudio Connect server.
          pattern: ^(https:|http:|www\.)\S*
        RStudioPackageManagerUrl:
          type: string
          description: A URL pointing to an RStudio Package Manager server.
          pattern: ^(https:|http:|www\.)\S*
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
      required:
        - DomainExecutionRoleArn
    RSessionAppSettings:
      type: object
      description: A collection of settings that apply to an RSessionGateway app.
      additionalProperties: false
      properties:
        CustomImages:
          type: array
          description: A list of custom SageMaker images that are configured to run as a KernelGateway app.
          x-insertionOrder: false
          uniqueItems: false
          minItems: 0
          maxItems: 30
          items:
            $ref: '#/components/schemas/CustomImage'
        DefaultResourceSpec:
          $ref: '#/components/schemas/ResourceSpec'
    RStudioServerProAppSettings:
      type: object
      description: A collection of settings that configure user interaction with the RStudioServerPro app.
      additionalProperties: false
      properties:
        AccessStatus:
          type: string
          description: Indicates whether the current user has access to the RStudioServerPro app.
          enum:
            - ENABLED
            - DISABLED
        UserGroup:
          type: string
          description: The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.
          enum:
            - R_STUDIO_ADMIN
            - R_STUDIO_USER
    Domain:
      description: The machine learning domain of the model package you specified.
      type: string
    CapacitySize:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: integer
        Type:
          type: string
      required:
        - Type
        - Value
    Alarm:
      type: object
      additionalProperties: false
      properties:
        AlarmName:
          type: string
      required:
        - AlarmName
    AutoRollbackConfig:
      type: object
      additionalProperties: false
      properties:
        Alarms:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Alarm'
      required:
        - Alarms
    DeploymentConfig:
      type: object
      additionalProperties: false
      properties:
        AutoRollbackConfiguration:
          $ref: '#/components/schemas/AutoRollbackConfig'
        BlueGreenUpdatePolicy:
          $ref: '#/components/schemas/BlueGreenUpdatePolicy'
      required:
        - BlueGreenUpdatePolicy
    BlueGreenUpdatePolicy:
      type: object
      additionalProperties: false
      properties:
        MaximumExecutionTimeoutInSeconds:
          type: integer
        TerminationWaitInSeconds:
          type: integer
        TrafficRoutingConfiguration:
          $ref: '#/components/schemas/TrafficRoutingConfig'
      required:
        - TrafficRoutingConfiguration
    TrafficRoutingConfig:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        LinearStepSize:
          $ref: '#/components/schemas/CapacitySize'
        CanarySize:
          $ref: '#/components/schemas/CapacitySize'
        WaitIntervalInSeconds:
          type: integer
      required:
        - Type
    VariantProperty:
      type: object
      additionalProperties: false
      properties:
        VariantPropertyType:
          type: string
    Endpoint:
      type: object
      properties:
        RetainAllVariantProperties:
          type: boolean
        EndpointName:
          type: string
        ExcludeRetainedVariantProperties:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VariantProperty'
        EndpointConfigName:
          type: string
        Id:
          type: string
        DeploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
        RetainDeploymentConfig:
          type: boolean
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - EndpointConfigName
      x-stackql-resource-name: endpoint
      x-stackql-primaryIdentifier:
        - Id
    AsyncInferenceNotificationConfig:
      type: object
      additionalProperties: false
      properties:
        SuccessTopic:
          type: string
        ErrorTopic:
          type: string
    ClarifyHeader:
      type: object
      additionalProperties: false
    ProductionVariant:
      type: object
      additionalProperties: false
      properties:
        ModelDataDownloadTimeoutInSeconds:
          type: integer
        ModelName:
          type: string
        VolumeSizeInGB:
          type: integer
        EnableSSMAccess:
          type: boolean
        VariantName:
          type: string
        ContainerStartupHealthCheckTimeoutInSeconds:
          type: integer
        InitialInstanceCount:
          type: integer
        ServerlessConfig:
          $ref: '#/components/schemas/ServerlessConfig'
        InstanceType:
          type: string
        AcceleratorType:
          type: string
        InitialVariantWeight:
          type: number
      required:
        - ModelName
        - VariantName
        - InitialVariantWeight
    ClarifyInferenceConfig:
      type: object
      additionalProperties: false
      properties:
        ContentTemplate:
          type: string
        LabelHeaders:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ClarifyHeader'
        MaxPayloadInMB:
          type: integer
        ProbabilityIndex:
          type: integer
        LabelAttribute:
          type: string
        FeatureTypes:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ClarifyFeatureType'
        FeatureHeaders:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ClarifyHeader'
        LabelIndex:
          type: integer
        ProbabilityAttribute:
          type: string
        FeaturesAttribute:
          type: string
        MaxRecordCount:
          type: integer
    ExplainerConfig:
      type: object
      additionalProperties: false
      properties:
        ClarifyExplainerConfig:
          $ref: '#/components/schemas/ClarifyExplainerConfig'
    ClarifyFeatureType:
      type: object
      additionalProperties: false
    CaptureContentTypeHeader:
      description: Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data.
      type: object
      additionalProperties: false
      properties:
        CsvContentTypes:
          description: The list of all content type headers that SageMaker will treat as CSV and capture accordingly.
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
            pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*/[a-zA-Z0-9](-*[a-zA-Z0-9.])*
            minLength: 1
            maxLength: 256
        JsonContentTypes:
          description: The list of all content type headers that SageMaker will treat as JSON and capture accordingly.
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
            pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*/[a-zA-Z0-9](-*[a-zA-Z0-9.])*
            minLength: 1
            maxLength: 256
    ClarifyTextConfig:
      type: object
      additionalProperties: false
      properties:
        Language:
          type: string
        Granularity:
          type: string
      required:
        - Language
        - Granularity
    DataCaptureConfig:
      type: object
      additionalProperties: false
      properties:
        CaptureOptions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CaptureOption'
        KmsKeyId:
          type: string
        DestinationS3Uri:
          type: string
        InitialSamplingPercentage:
          type: integer
        CaptureContentTypeHeader:
          $ref: '#/components/schemas/CaptureContentTypeHeader'
        EnableCapture:
          type: boolean
      required:
        - CaptureOptions
        - DestinationS3Uri
        - InitialSamplingPercentage
    AsyncInferenceConfig:
      type: object
      additionalProperties: false
      properties:
        ClientConfig:
          $ref: '#/components/schemas/AsyncInferenceClientConfig'
        OutputConfig:
          $ref: '#/components/schemas/AsyncInferenceOutputConfig'
      required:
        - OutputConfig
    AsyncInferenceClientConfig:
      type: object
      additionalProperties: false
      properties:
        MaxConcurrentInvocationsPerInstance:
          type: integer
    ClarifyShapBaselineConfig:
      type: object
      additionalProperties: false
      properties:
        MimeType:
          type: string
        ShapBaseline:
          type: string
        ShapBaselineUri:
          type: string
    ServerlessConfig:
      type: object
      additionalProperties: false
      properties:
        MaxConcurrency:
          type: integer
        MemorySizeInMB:
          type: integer
      required:
        - MaxConcurrency
        - MemorySizeInMB
    ClarifyShapConfig:
      type: object
      additionalProperties: false
      properties:
        TextConfig:
          $ref: '#/components/schemas/ClarifyTextConfig'
        UseLogit:
          type: boolean
        Seed:
          type: integer
        ShapBaselineConfig:
          $ref: '#/components/schemas/ClarifyShapBaselineConfig'
        NumberOfSamples:
          type: integer
      required:
        - ShapBaselineConfig
    ClarifyExplainerConfig:
      type: object
      additionalProperties: false
      properties:
        EnableExplanations:
          type: string
        ShapConfig:
          $ref: '#/components/schemas/ClarifyShapConfig'
        InferenceConfig:
          $ref: '#/components/schemas/ClarifyInferenceConfig'
      required:
        - ShapConfig
    CaptureOption:
      type: object
      additionalProperties: false
      properties:
        CaptureMode:
          type: string
      required:
        - CaptureMode
    AsyncInferenceOutputConfig:
      type: object
      additionalProperties: false
      properties:
        NotificationConfig:
          $ref: '#/components/schemas/AsyncInferenceNotificationConfig'
        KmsKeyId:
          type: string
        S3OutputPath:
          type: string
      required:
        - S3OutputPath
    EndpointConfig:
      type: object
      properties:
        ShadowProductionVariants:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ProductionVariant'
        DataCaptureConfig:
          $ref: '#/components/schemas/DataCaptureConfig'
        ProductionVariants:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ProductionVariant'
        KmsKeyId:
          type: string
        AsyncInferenceConfig:
          $ref: '#/components/schemas/AsyncInferenceConfig'
        EndpointConfigName:
          type: string
        ExplainerConfig:
          $ref: '#/components/schemas/ExplainerConfig'
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ProductionVariants
      x-stackql-resource-name: endpoint_config
      x-stackql-primaryIdentifier:
        - Id
    FeatureDefinition:
      type: object
      additionalProperties: false
      properties:
        FeatureName:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        FeatureType:
          type: string
          enum:
            - Integral
            - Fractional
            - String
      required:
        - FeatureName
        - FeatureType
    KmsKeyId:
      type: string
      maxLength: 2048
    OnlineStoreSecurityConfig:
      type: object
      additionalProperties: false
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
    S3StorageConfig:
      type: object
      additionalProperties: false
      properties:
        S3Uri:
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
      required:
        - S3Uri
    DataCatalogConfig:
      type: object
      additionalProperties: false
      properties:
        TableName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\t]*"
        Catalog:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\t]*"
        Database:
          type: string
          minLength: 1
          maxLength: 255
          pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\t]*"
      required:
        - TableName
        - Catalog
        - Database
    TableFormat:
      type: string
      description: Format for the offline store feature group. Iceberg is the optimal format for feature groups shared between offline and online stores.
      enum:
        - Iceberg
        - Glue
    FeatureGroup:
      type: object
      properties:
        FeatureGroupName:
          type: string
          description: The Name of the FeatureGroup.
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        RecordIdentifierFeatureName:
          type: string
          description: The Record Identifier Feature Name.
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        EventTimeFeatureName:
          type: string
          description: The Event Time Feature Name.
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}
        FeatureDefinitions:
          type: array
          description: An Array of Feature Definition
          uniqueItems: false
          minItems: 1
          maxItems: 2500
          items:
            $ref: '#/components/schemas/FeatureDefinition'
        OnlineStoreConfig:
          type: object
          additionalProperties: false
          properties:
            SecurityConfig:
              $ref: '#/components/schemas/OnlineStoreSecurityConfig'
            EnableOnlineStore:
              type: boolean
        OfflineStoreConfig:
          type: object
          additionalProperties: false
          properties:
            S3StorageConfig:
              $ref: '#/components/schemas/S3StorageConfig'
            DisableGlueTableCreation:
              type: boolean
            DataCatalogConfig:
              $ref: '#/components/schemas/DataCatalogConfig'
            TableFormat:
              $ref: '#/components/schemas/TableFormat'
          required:
            - S3StorageConfig
        RoleArn:
          type: string
          description: Role Arn
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        Description:
          type: string
          description: Description about the FeatureGroup.
          maxLength: 128
        Tags:
          type: array
          description: An array of key-value pair to apply to this resource.
          uniqueItems: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - FeatureGroupName
        - RecordIdentifierFeatureName
        - EventTimeFeatureName
        - FeatureDefinitions
      x-stackql-resource-name: feature_group
      x-stackql-primaryIdentifier:
        - FeatureGroupName
    ImageName:
      type: string
      description: The name of the image this version belongs to.
      pattern: ^[A-Za-z0-9]([-.]?[A-Za-z0-9])*$
      minLength: 1
      maxLength: 63
    ImageArn:
      type: string
      description: The Amazon Resource Name (ARN) of the parent image.
      minLength: 1
      maxLength: 256
      pattern: ^arn:aws(-[\w]+)*:sagemaker:[a-z0-9\-]*:[0-9]{12}:image\/[a-z0-9]([-.]?[a-z0-9])*$
    ImageRoleArn:
      description: The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on behalf of the customer.
      type: string
      minLength: 1
      maxLength: 256
      pattern: ^arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*$
    ImageDisplayName:
      type: string
      description: The display name of the image.
      pattern: ^[A-Za-z0-9 -_]+$
      minLength: 1
      maxLength: 128
    ImageDescription:
      type: string
      description: A description of the image.
      pattern: .+
      minLength: 1
      maxLength: 512
    Image:
      type: object
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
        ImageRoleArn:
          $ref: '#/components/schemas/ImageRoleArn'
        ImageDisplayName:
          $ref: '#/components/schemas/ImageDisplayName'
        ImageDescription:
          $ref: '#/components/schemas/ImageDescription'
        Tags:
          type: array
          minItems: 1
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ImageName
        - ImageRoleArn
      x-stackql-resource-name: image
      x-stackql-primaryIdentifier:
        - ImageArn
    ImageVersionArn:
      type: string
      description: The Amazon Resource Name (ARN) of the image version.
      minLength: 1
      maxLength: 256
      pattern: ^arn:aws(-[\w]+)*:sagemaker:[a-z0-9\-]*:[0-9]{12}:image-version\/[a-z0-9]([-.]?[a-z0-9])*\/[0-9]+$
    BaseImage:
      type: string
      description: The registry path of the container image on which this image version is based.
      minLength: 1
      maxLength: 255
      pattern: .+
    ContainerImage:
      type: string
      description: The registry path of the container image that contains this image version.
      minLength: 1
      maxLength: 255
      pattern: .+
    Version:
      type: integer
      description: The version number of the image version.
      minimum: 1
    ImageVersion:
      type: object
      properties:
        ImageName:
          $ref: '#/components/schemas/ImageName'
        ImageArn:
          $ref: '#/components/schemas/ImageArn'
        ImageVersionArn:
          $ref: '#/components/schemas/ImageVersionArn'
        BaseImage:
          $ref: '#/components/schemas/BaseImage'
        ContainerImage:
          $ref: '#/components/schemas/ContainerImage'
        Version:
          $ref: '#/components/schemas/Version'
      required:
        - ImageName
        - BaseImage
      x-stackql-resource-name: image_version
      x-stackql-primaryIdentifier:
        - ImageVersionArn
    EndpointMetadata:
      description: The metadata of the endpoint on which the inference experiment ran.
      type: object
      additionalProperties: false
      properties:
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        EndpointConfigName:
          description: The name of the endpoint configuration.
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
          maxLength: 63
        EndpointStatus:
          description: The status of the endpoint. For possible values of the status of an endpoint.
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
          enum:
            - Creating
            - Updating
            - SystemUpdating
            - RollingBack
            - InService
            - OutOfService
            - Deleting
            - Failed
      required:
        - EndpointName
    DataStorageConfig:
      description: The Amazon S3 location and configuration for storing inference request and response data.
      type: object
      additionalProperties: false
      properties:
        Destination:
          description: The Amazon S3 bucket where the inference request and response data is stored.
          type: string
          pattern: ^(https|s3)://([^/])/?(.*)$
          maxLength: 512
        KmsKey:
          description: The AWS Key Management Service key that Amazon SageMaker uses to encrypt captured data at rest using Amazon S3 server-side encryption.
          type: string
          pattern: .*
          maxLength: 2048
        ContentType:
          $ref: '#/components/schemas/CaptureContentTypeHeader'
      required:
        - Destination
    InferenceExperimentSchedule:
      description: The duration for which you want the inference experiment to run.
      type: object
      additionalProperties: false
      properties:
        StartTime:
          description: The timestamp at which the inference experiment started or will start.
          type: string
        EndTime:
          description: The timestamp at which the inference experiment ended or will end.
          type: string
    RealTimeInferenceConfig:
      description: The infrastructure configuration for deploying the model to a real-time inference endpoint.
      type: object
      additionalProperties: false
      properties:
        InstanceType:
          description: The instance type the model is deployed to.
          type: string
        InstanceCount:
          description: The number of instances of the type specified by InstanceType.
          type: integer
      required:
        - InstanceType
        - InstanceCount
    ModelInfrastructureConfig:
      description: The configuration for the infrastructure that the model will be deployed to.
      type: object
      additionalProperties: false
      properties:
        InfrastructureType:
          description: The type of the inference experiment that you want to run.
          type: string
          enum:
            - RealTimeInference
        RealTimeInferenceConfig:
          $ref: '#/components/schemas/RealTimeInferenceConfig'
      required:
        - InfrastructureType
        - RealTimeInferenceConfig
    ModelVariantConfig:
      description: Contains information about the deployment options of a model.
      type: object
      additionalProperties: false
      properties:
        ModelName:
          description: The name of the Amazon SageMaker Model entity.
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
          maxLength: 63
        VariantName:
          description: The name of the variant.
          type: string
          pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
          maxLength: 63
        InfrastructureConfig:
          $ref: '#/components/schemas/ModelInfrastructureConfig'
      required:
        - ModelName
        - VariantName
        - InfrastructureConfig
    ShadowModelVariantConfig:
      description: The name and sampling percentage of a shadow variant.
      type: object
      additionalProperties: false
      properties:
        ShadowModelVariantName:
          description: The name of the shadow variant.
          type: string
          pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
          maxLength: 63
        SamplingPercentage:
          description: The percentage of inference requests that Amazon SageMaker replicates from the production variant to the shadow variant.
          type: integer
          maximum: 100
      required:
        - ShadowModelVariantName
        - SamplingPercentage
    ShadowModeConfig:
      description: The configuration of ShadowMode inference experiment type. Use this field to specify a production variant which takes all the inference requests, and a shadow variant to which Amazon SageMaker replicates a percentage of the inference requests. For the shadow variant also specify the percentage of requests that Amazon SageMaker replicates.
      type: object
      additionalProperties: false
      properties:
        SourceModelVariantName:
          description: The name of the production variant, which takes all the inference requests.
          type: string
          pattern: ^[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])?
          maxLength: 63
        ShadowModelVariants:
          description: List of shadow variant configurations.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/ShadowModelVariantConfig'
      required:
        - SourceModelVariantName
        - ShadowModelVariants
    InferenceExperiment:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the inference experiment.
          type: string
          pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:inference-experiment/[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 256
        Name:
          description: The name for the inference experiment.
          type: string
          minLength: 1
          maxLength: 120
        Type:
          description: The type of the inference experiment that you want to run.
          type: string
          enum:
            - ShadowMode
        Description:
          description: The description of the inference experiment.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 1024
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to access model artifacts and container images, and manage Amazon SageMaker Inference endpoints for model deployment.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        EndpointMetadata:
          $ref: '#/components/schemas/EndpointMetadata'
        Schedule:
          $ref: '#/components/schemas/InferenceExperimentSchedule'
        KmsKey:
          type: string
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
          pattern: .*
          maxLength: 2048
        DataStorageConfig:
          $ref: '#/components/schemas/DataStorageConfig'
        ModelVariants:
          type: array
          description: An array of ModelVariantConfig objects. Each ModelVariantConfig object in the array describes the infrastructure configuration for the corresponding variant.
          maxItems: 2
          items:
            $ref: '#/components/schemas/ModelVariantConfig'
        ShadowModeConfig:
          $ref: '#/components/schemas/ShadowModeConfig'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The timestamp at which you created the inference experiment.
          type: string
        LastModifiedTime:
          description: The timestamp at which you last modified the inference experiment.
          type: string
        Status:
          description: The status of the inference experiment.
          type: string
          enum:
            - Creating
            - Created
            - Updating
            - Starting
            - Stopping
            - Running
            - Completed
            - Cancelled
        StatusReason:
          description: The error message or client-specified reason from the StopInferenceExperiment API, that explains the status of the inference experiment.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 1024
        DesiredState:
          description: The desired state of the experiment after starting or stopping operation.
          type: string
          enum:
            - Running
            - Completed
            - Cancelled
      required:
        - Name
        - Type
        - RoleArn
        - EndpointName
        - ModelVariants
      x-stackql-resource-name: inference_experiment
      x-stackql-primaryIdentifier:
        - Name
    ImageConfig:
      type: object
      additionalProperties: false
      properties:
        RepositoryAuthConfig:
          $ref: '#/components/schemas/RepositoryAuthConfig'
        RepositoryAccessMode:
          type: string
      required:
        - RepositoryAccessMode
    RepositoryAuthConfig:
      type: object
      additionalProperties: false
      properties:
        RepositoryCredentialsProviderArn:
          type: string
      required:
        - RepositoryCredentialsProviderArn
    ContainerDefinition:
      type: object
      additionalProperties: false
      properties:
        ImageConfig:
          $ref: '#/components/schemas/ImageConfig'
        InferenceSpecificationName:
          type: string
        ContainerHostname:
          type: string
        ModelPackageName:
          type: string
        Mode:
          type: string
        Environment:
          type: object
        ModelDataUrl:
          type: string
        Image:
          type: string
        MultiModelConfig:
          $ref: '#/components/schemas/MultiModelConfig'
    InferenceExecutionConfig:
      type: object
      additionalProperties: false
      properties:
        Mode:
          type: string
      required:
        - Mode
    MultiModelConfig:
      type: object
      additionalProperties: false
      properties:
        ModelCacheSetting:
          type: string
    Model:
      type: object
      properties:
        ExecutionRoleArn:
          type: string
        EnableNetworkIsolation:
          type: boolean
        PrimaryContainer:
          $ref: '#/components/schemas/ContainerDefinition'
        ModelName:
          type: string
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
        Containers:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ContainerDefinition'
        InferenceExecutionConfig:
          $ref: '#/components/schemas/InferenceExecutionConfig'
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ExecutionRoleArn
      x-stackql-resource-name: model
      x-stackql-primaryIdentifier:
        - Id
    ModelBiasBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
    ModelBiasAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        ConfigUri:
          description: The S3 URI to an analysis configuration file
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
      required:
        - ImageUri
        - ConfigUri
    ModelBiasJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
        GroundTruthS3Input:
          $ref: '#/components/schemas/MonitoringGroundTruthS3Input'
      required:
        - GroundTruthS3Input
    MonitoringTimeOffsetString:
      type: string
      description: The time offsets in ISO duration format
      pattern: ^.?P.*
      minLength: 1
      maxLength: 15
    MonitoringGroundTruthS3Input:
      type: object
      additionalProperties: false
      description: 'Ground truth input provided in S3 '
      properties:
        S3Uri:
          type: string
          description: A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 512
      required:
        - S3Uri
    ModelBiasJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        ModelBiasBaselineConfig:
          $ref: '#/components/schemas/ModelBiasBaselineConfig'
        ModelBiasAppSpecification:
          $ref: '#/components/schemas/ModelBiasAppSpecification'
        ModelBiasJobInput:
          $ref: '#/components/schemas/ModelBiasJobInput'
        ModelBiasJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - ModelBiasAppSpecification
        - ModelBiasJobInput
        - ModelBiasJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: model_bias_job_definition
      x-stackql-primaryIdentifier:
        - JobDefinitionArn
    SecurityConfig:
      type: object
      description: |+
        An optional Key Management Service key to encrypt, decrypt, and re-encrypt model card content for regulated workloads with highly sensitive data.

      additionalProperties: false
      properties:
        KmsKeyId:
          type: string
          description: A Key Management Service key ID to use for encrypting a model card.
          maxLength: 2048
          pattern: .*
    UserContext:
      type: object
      additionalProperties: false
      description: Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.
      properties:
        DomainId:
          type: string
          description: The domain associated with the user.
        UserProfileArn:
          type: string
          description: The Amazon Resource Name (ARN) of the user's profile.
        UserProfileName:
          type: string
          description: The name of the user's profile.
    Content:
      type: object
      description: The content of the model card.
      additionalProperties: false
      properties:
        ModelOverview:
          $ref: '#/components/schemas/ModelOverview'
        IntendedUses:
          $ref: '#/components/schemas/IntendedUses'
        BusinessDetails:
          $ref: '#/components/schemas/BusinessDetails'
        TrainingDetails:
          $ref: '#/components/schemas/TrainingDetails'
        EvaluationDetails:
          $ref: '#/components/schemas/EvaluationDetails'
        AdditionalInformation:
          $ref: '#/components/schemas/AdditionalInformation'
    ModelOverview:
      type: object
      description: Overview about the model.
      additionalProperties: false
      properties:
        ModelDescription:
          description: description of model.
          type: string
          maxLength: 1024
        ModelOwner:
          description: Owner of model.
          type: string
          maxLength: 1024
        ModelCreator:
          description: Creator of model.
          type: string
          maxLength: 1024
        ProblemType:
          description: Problem being solved with the model.
          type: string
          maxLength: 1024
        AlgorithmType:
          description: Algorithm used to solve the problem.
          type: string
          maxLength: 1024
        ModelId:
          description: SageMaker Model Arn or Non SageMaker Model id.
          type: string
          maxLength: 1024
        ModelArtifact:
          description: Location of the model artifact.
          type: array
          x-insertionOrder: true
          maxItems: 15
          items:
            type: string
            maxLength: 1024
        ModelName:
          description: Name of the model.
          type: string
          maxLength: 1024
        ModelVersion:
          description: Version of the model.
          type: number
          minimum: 1
        InferenceEnvironment:
          description: Overview about the inference.
          type: object
          additionalProperties: false
          properties:
            ContainerImage:
              description: SageMaker inference image uri.
              type: array
              x-insertionOrder: true
              maxItems: 15
              items:
                type: string
                maxLength: 1024
    IntendedUses:
      description: Intended usage of model.
      type: object
      additionalProperties: false
      properties:
        PurposeOfModel:
          description: Why the model was developed?
          type: string
          maxLength: 2048
        IntendedUses:
          description: intended use cases.
          type: string
          maxLength: 2048
        FactorsAffectingModelEfficiency:
          type: string
          maxLength: 2048
        RiskRating:
          $ref: '#/components/schemas/RiskRating'
        ExplanationsForRiskRating:
          type: string
          maxLength: 2048
    BusinessDetails:
      description: Business details.
      type: object
      additionalProperties: false
      properties:
        BusinessProblem:
          type: string
          description: What business problem does the model solve?
          maxLength: 2048
        BusinessStakeholders:
          type: string
          description: Business stakeholders.
          maxLength: 2048
        LineOfBusiness:
          type: string
          description: Line of business.
          maxLength: 2048
    TrainingDetails:
      description: Overview about the training.
      type: object
      additionalProperties: false
      properties:
        ObjectiveFunction:
          $ref: '#/components/schemas/ObjectiveFunction'
        TrainingObservations:
          type: string
          maxLength: 1024
        TrainingJobDetails:
          type: object
          additionalProperties: false
          properties:
            TrainingArn:
              description: SageMaker Training job arn.
              type: string
              maxLength: 1024
            TrainingDatasets:
              description: Location of the model datasets.
              type: array
              x-insertionOrder: true
              maxItems: 15
              items:
                type: string
                maxLength: 1024
            TrainingEnvironment:
              type: object
              additionalProperties: false
              properties:
                ContainerImage:
                  description: SageMaker training image uri.
                  type: array
                  x-insertionOrder: true
                  maxItems: 15
                  items:
                    type: string
                    maxLength: 1024
            TrainingMetrics:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 50
                $ref: '#/components/schemas/TrainingMetric'
            UserProvidedTrainingMetrics:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 50
                $ref: '#/components/schemas/TrainingMetric'
            HyperParameters:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 100
                $ref: '#/components/schemas/TrainingHyperParameter'
            UserProvidedHyperParameters:
              type: array
              x-insertionOrder: true
              items:
                maxItems: 100
                $ref: '#/components/schemas/TrainingHyperParameter'
    EvaluationDetails:
      type: array
      default: []
      x-insertionOrder: true
      items:
        $ref: '#/components/schemas/EvaluationDetail'
    EvaluationDetail:
      description: item of evaluation details
      type: object
      required:
        - Name
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,63}
        EvaluationObservation:
          type: string
          maxLength: 2096
        EvaluationJobArn:
          type: string
          maxLength: 256
        Datasets:
          type: array
          x-insertionOrder: true
          items:
            type: string
            maxLength: 1024
          maxItems: 10
        Metadata:
          description: additional attributes associated with the evaluation results.
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              maxLength: 1024
        MetricGroups:
          type: array
          x-insertionOrder: true
          default: []
          items:
            $ref: '#/components/schemas/MetricGroup'
    MetricGroup:
      type: object
      description: item in metric groups
      additionalProperties: false
      required:
        - Name
        - MetricData
      properties:
        Name:
          type: string
          pattern: .{1,63}
        MetricData:
          type: array
          x-insertionOrder: true
          items:
            anyOf:
              - $ref: '#/components/schemas/SimpleMetric'
              - $ref: '#/components/schemas/LinearGraphMetric'
              - $ref: '#/components/schemas/BarChartMetric'
              - $ref: '#/components/schemas/MatrixMetric'
    AdditionalInformation:
      type: object
      additionalProperties: false
      properties:
        EthicalConsiderations:
          description: Any ethical considerations that the author wants to provide.
          type: string
          maxLength: 2048
        CaveatsAndRecommendations:
          description: Caveats and recommendations for people who might use this model in their applications.
          type: string
          maxLength: 2048
        CustomDetails:
          type: object
          description: customer details.
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              maxLength: 1024
    RiskRating:
      description: Risk rating of model.
      type: string
      enum:
        - High
        - Medium
        - Low
        - Unknown
    ObjectiveFunction:
      description: the objective function the model will optimize for.
      type: object
      additionalProperties: false
      properties:
        Function:
          description: objective function that training job is optimized for.
          type: object
          additionalProperties: false
          properties:
            Function:
              type: string
              enum:
                - Maximize
                - Minimize
            Facet:
              type: string
              maxLength: 63
            Condition:
              type: string
              maxLength: 63
        Notes:
          type: string
          maxLength: 1024
    TrainingMetric:
      description: training metric data.
      type: object
      required:
        - Name
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Value:
          type: number
    TrainingHyperParameter:
      description: training hyper parameter
      type: object
      required:
        - Name
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Value:
          type: string
          pattern: .{1,255}
    LinearGraphMetric:
      description: Linear graph metric.
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - linear_graph
        Value:
          anyOf:
            - type: array
              insertionOrder: true
              items:
                type: array
                insertionOrder: true
                items:
                  type: number
                minItems: 2
                maxItems: 2
              minItems: 1
              maxItems: 20
        XAxisName:
          $ref: '#/components/schemas/AxisNameString'
        YAxisName:
          $ref: '#/components/schemas/AxisNameString'
    BarChartMetric:
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - bar_chart
        Value:
          anyOf:
            - type: array
              insertionOrder: true
              items:
                type: number
              minItems: 1
              maxItems: 20
        XAxisName:
          $ref: '#/components/schemas/AxisNameArray'
        YAxisName:
          $ref: '#/components/schemas/AxisNameString'
    MatrixMetric:
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - matrix
        Value:
          anyOf:
            - type: array
              insertionOrder: true
              items:
                type: array
                insertionOrder: true
                items:
                  type: number
                minItems: 1
                maxItems: 20
              minItems: 1
              maxItems: 20
        XAxisName:
          $ref: '#/components/schemas/AxisNameArray'
        YAxisName:
          $ref: '#/components/schemas/AxisNameArray'
    SimpleMetric:
      description: metric data
      type: object
      required:
        - Name
        - Type
        - Value
      additionalProperties: false
      properties:
        Name:
          type: string
          pattern: .{1,255}
        Notes:
          type: string
          maxLength: 1024
        Type:
          type: string
          enum:
            - number
            - string
            - boolean
        Value:
          anyOf:
            - type: number
            - type: string
              maxLength: 63
            - type: boolean
        XAxisName:
          $ref: '#/components/schemas/AxisNameString'
        YAxisName:
          $ref: '#/components/schemas/AxisNameString'
    AxisNameString:
      type: string
      maxLength: 63
    AxisNameArray:
      type: array
      x-insertionOrder: true
      items:
        type: string
        maxLength: 63
    ModelCard:
      type: object
      properties:
        ModelCardArn:
          description: The Amazon Resource Name (ARN) of the successfully created model card.
          type: string
          minLength: 1
          maxLength: 256
          pattern: ^arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]{9,16}:[0-9]{12}:model-card/[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
        ModelCardVersion:
          description: A version of the model card.
          type: integer
          minimum: 1
        ModelCardName:
          description: The unique name of the model card.
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
        SecurityConfig:
          $ref: '#/components/schemas/SecurityConfig'
        ModelCardStatus:
          description: The approval status of the model card within your organization. Different organizations might have different criteria for model card review and approval.
          type: string
          enum:
            - Draft
            - PendingReview
            - Approved
            - Archived
        Content:
          $ref: '#/components/schemas/Content'
        CreationTime:
          description: The date and time the model card was created.
          type: string
        CreatedBy:
          description: Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
          $ref: '#/components/schemas/UserContext'
        LastModifiedTime:
          description: The date and time the model card was last modified.
          type: string
        LastModifiedBy:
          description: Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
          $ref: '#/components/schemas/UserContext'
        ModelCardProcessingStatus:
          description: The processing status of model card deletion. The ModelCardProcessingStatus updates throughout the different deletion steps.
          type: string
          default: UnsetValue
          enum:
            - UnsetValue
            - DeleteInProgress
            - DeletePending
            - ContentDeleted
            - ExportJobsDeleted
            - DeleteCompleted
            - DeleteFailed
        Tags:
          type: array
          minItems: 1
          maxItems: 50
          description: Key-value pairs used to manage metadata for model cards.
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ModelCardName
        - Content
        - ModelCardStatus
      x-stackql-resource-name: model_card
      x-stackql-primaryIdentifier:
        - ModelCardName
    ModelExplainabilityBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
    ModelExplainabilityAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        ConfigUri:
          description: The S3 URI to an analysis configuration file
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
      required:
        - ImageUri
        - ConfigUri
    ModelExplainabilityJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
    ModelExplainabilityJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        ModelExplainabilityBaselineConfig:
          $ref: '#/components/schemas/ModelExplainabilityBaselineConfig'
        ModelExplainabilityAppSpecification:
          $ref: '#/components/schemas/ModelExplainabilityAppSpecification'
        ModelExplainabilityJobInput:
          $ref: '#/components/schemas/ModelExplainabilityJobInput'
        ModelExplainabilityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - ModelExplainabilityAppSpecification
        - ModelExplainabilityJobInput
        - ModelExplainabilityJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: model_explainability_job_definition
      x-stackql-primaryIdentifier:
        - JobDefinitionArn
    AdditionalInferenceSpecifications:
      type: array
      minItems: 1
      maxItems: 15
      description: An array of additional Inference Specification objects.
      items:
        $ref: '#/components/schemas/AdditionalInferenceSpecificationDefinition'
      x-insertionOrder: true
    AdditionalInferenceSpecificationDefinition:
      description: Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package.AdditionalInferenceSpecifications can be added to existing model packages using AdditionalInferenceSpecificationsToAdd.
      type: object
      additionalProperties: false
      properties:
        Containers:
          description: The Amazon ECR registry path of the Docker image that contains the inference code.
          type: array
          items:
            $ref: '#/components/schemas/ModelPackageContainerDefinition'
          minItems: 1
          maxItems: 15
          x-insertionOrder: true
        Description:
          description: A description of the additional Inference specification.
          type: string
          maxLength: 1024
          pattern: .*
        Name:
          description: A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
        SupportedContentTypes:
          description: The supported MIME types for the input data.
          type: array
          items:
            $ref: '#/components/schemas/ContentType'
          x-insertionOrder: true
        SupportedRealtimeInferenceInstanceTypes:
          description: A list of the instance types that are used to generate inferences in real-time
          type: array
          items:
            $ref: '#/components/schemas/InferenceInstanceType'
          x-insertionOrder: true
        SupportedResponseMIMETypes:
          description: The supported MIME types for the output data.
          type: array
          items:
            $ref: '#/components/schemas/ResponseMIMEType'
          x-insertionOrder: true
        SupportedTransformInstanceTypes:
          description: A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TransformInstanceType'
          x-insertionOrder: true
      required:
        - Containers
        - Name
    TransformInstanceType:
      description: Instance types on which a transformation job can be run or on which an endpoint can be deployed.
      type: string
    InferenceInstanceType:
      description: Instance type that is used to generate inferences in real-time
      type: string
    ContentType:
      description: The supported MIME type for the input data.
      type: string
      maxLength: 256
      pattern: .*
    ResponseMIMEType:
      description: The supported MIME types for the output data.
      type: string
      maxLength: 1024
      pattern: ^[-\w]+\/.+$
    CertifyForMarketplace:
      description: Whether to certify the model package for listing on AWS Marketplace.
      type: boolean
    ClientToken:
      description: A unique token that guarantees that the call to this API is idempotent.
      type: string
      minLength: 1
      maxLength: 36
      pattern: ^[a-zA-Z0-9-]+$
    CustomerMetadataProperties:
      type: object
      description: The metadata properties associated with the model package versions.
      maxProperties: 50
      minProperties: 1
      x-patternProperties:
        ^([\p{L}\p{Z}\p{N}_.:\/=+\-@]*)${1,128}:
          type: string
          minLength: 1
          maxLength: 128
        ^([\p{L}\p{Z}\p{N}_.:\/=+\-@]*)${1,256}:
          type: string
          minLength: 1
          maxLength: 256
      additionalProperties: false
    DriftCheckBaselines:
      description: Represents the drift check baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        Bias:
          $ref: '#/components/schemas/DriftCheckBias'
        Explainability:
          $ref: '#/components/schemas/DriftCheckExplainability'
        ModelDataQuality:
          $ref: '#/components/schemas/DriftCheckModelDataQuality'
        ModelQuality:
          $ref: '#/components/schemas/DriftCheckModelQuality'
    DriftCheckBias:
      description: Represents the drift check bias baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        PostTrainingConstraints:
          $ref: '#/components/schemas/MetricsSource'
        PreTrainingConstraints:
          $ref: '#/components/schemas/MetricsSource'
        ConfigFile:
          $ref: '#/components/schemas/FileSource'
    DriftCheckExplainability:
      description: Contains explainability metrics for a model.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        ConfigFile:
          $ref: '#/components/schemas/FileSource'
    DriftCheckModelDataQuality:
      description: Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    DriftCheckModelQuality:
      description: Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    MetricsSource:
      description: Represents a Metric Source Object.
      type: object
      additionalProperties: false
      properties:
        ContentDigest:
          description: The digest of the metric source.
          type: string
          maxLength: 72
          pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
        ContentType:
          description: The type of content stored in the metric source.
          type: string
          maxLength: 256
          pattern: .*
        S3Uri:
          description: The Amazon S3 URI for the metric source.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - ContentType
        - S3Uri
    FileSource:
      description: Represents a File Source Object.
      type: object
      additionalProperties: false
      properties:
        ContentDigest:
          description: The digest of the file source.
          type: string
          maxLength: 72
          pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
        ContentType:
          description: The type of content stored in the file source.
          type: string
          maxLength: 256
          pattern: .*
        S3Uri:
          description: The Amazon S3 URI for the file source.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - S3Uri
    InferenceSpecification:
      description: Details about inference jobs that can be run with models based on this model package.
      type: object
      additionalProperties: false
      properties:
        Containers:
          description: The Amazon ECR registry path of the Docker image that contains the inference code.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ModelPackageContainerDefinition'
          minItems: 1
          maxItems: 15
          x-insertionOrder: true
        SupportedContentTypes:
          description: The supported MIME types for the input data.
          type: array
          items:
            $ref: '#/components/schemas/ContentType'
          x-insertionOrder: true
        SupportedRealtimeInferenceInstanceTypes:
          description: A list of the instance types that are used to generate inferences in real-time
          type: array
          items:
            $ref: '#/components/schemas/InferenceInstanceType'
          x-insertionOrder: true
        SupportedResponseMIMETypes:
          description: The supported MIME types for the output data.
          type: array
          items:
            $ref: '#/components/schemas/ResponseMIMEType'
          x-insertionOrder: true
        SupportedTransformInstanceTypes:
          description: A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/TransformInstanceType'
          x-insertionOrder: true
      required:
        - Containers
        - SupportedContentTypes
        - SupportedResponseMIMETypes
    Environment:
      type: object
      description: Sets the environment variables in the Docker container
      maxProperties: 16
      x-patternProperties:
        '[a-zA-Z_][a-zA-Z0-9_]*':
          type: string
          maxLength: 1024
        '[\S\s]*':
          type: string
          maxLength: 1024
      additionalProperties: false
    ModelPackageContainerDefinition:
      type: object
      additionalProperties: false
      description: Describes the Docker container for the model package.
      properties:
        ContainerHostname:
          type: string
          description: The DNS host name for the Docker container.
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}
          maxLength: 63
        Environment:
          $ref: '#/components/schemas/Environment'
        ModelInput:
          type: object
          additionalProperties: false
          properties:
            DataInputConfig:
              type: string
              description: The input configuration object for the model.
              pattern: '[\S\s]+'
              minLength: 1
              maxLength: 1024
          required:
            - DataInputConfig
        Image:
          type: string
          description: The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.
          pattern: '[\S]{1,255}'
          minLength: 1
          maxLength: 255
        ImageDigest:
          type: string
          description: An MD5 hash of the training algorithm that identifies the Docker image used for training.
          pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
          maxLength: 72
        ModelDataUrl:
          type: string
          description: A structure with Model Input details.
          pattern: ^(https|s3)://([^/]+)/?(.*)$
          maxLength: 1024
        ProductId:
          type: string
          description: The AWS Marketplace product ID of the model package.
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
          maxLength: 256
        Framework:
          type: string
          description: The machine learning framework of the model package container image.
        FrameworkVersion:
          type: string
          description: The framework version of the Model Package Container Image.
          pattern: '[0-9]\.[A-Za-z0-9.]+'
          minLength: 3
          maxLength: 10
        NearestModelName:
          type: string
          description: The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.
      required:
        - Image
    MetadataProperties:
      description: Metadata properties of the tracking entity, trial, or trial component.
      type: object
      properties:
        CommitId:
          type: string
          description: The commit ID.
          pattern: .*
          maxLength: 1024
        GeneratedBy:
          type: string
          description: The entity this entity was generated by.
          pattern: .*
          maxLength: 1024
        ProjectId:
          type: string
          description: The project ID metadata.
          pattern: .*
          maxLength: 1024
        Repository:
          type: string
          description: The repository metadata.
          pattern: .*
          maxLength: 1024
      additionalProperties: false
    ModelApprovalStatus:
      type: string
      description: The approval status of the model package.
      enum:
        - Approved
        - Rejected
        - PendingManualApproval
    ModelMetrics:
      description: A structure that contains model metrics reports.
      type: object
      additionalProperties: false
      properties:
        Bias:
          $ref: '#/components/schemas/Bias'
        Explainability:
          $ref: '#/components/schemas/Explainability'
        ModelDataQuality:
          $ref: '#/components/schemas/ModelDataQuality'
        ModelQuality:
          $ref: '#/components/schemas/ModelQuality'
    Bias:
      description: Contains bias metrics for a model.
      type: object
      additionalProperties: false
      properties:
        Report:
          $ref: '#/components/schemas/MetricsSource'
        PreTrainingReport:
          $ref: '#/components/schemas/MetricsSource'
        PostTrainingReport:
          $ref: '#/components/schemas/MetricsSource'
    Explainability:
      description: Contains explainability metrics for a model.
      type: object
      additionalProperties: false
      properties:
        Report:
          $ref: '#/components/schemas/MetricsSource'
    ModelDataQuality:
      description: Metrics that measure the quality of the input data for a model.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    ModelQuality:
      description: Metrics that measure the quality of a model.
      type: object
      additionalProperties: false
      properties:
        Constraints:
          $ref: '#/components/schemas/MetricsSource'
        Statistics:
          $ref: '#/components/schemas/MetricsSource'
    ModelPackageDescription:
      type: string
      description: The description of the model package.
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 1024
    ModelPackageGroupName:
      type: string
      description: The name of the model package group.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    ModelPackageName:
      type: string
      description: The name or arn of the model package.
    SamplePayloadUrl:
      description: The Amazon Simple Storage Service (Amazon S3) path where the sample payload are stored pointing to single gzip compressed tar archive.
      type: string
      maxLength: 1024
      pattern: ^(https|s3)://([^/]+)/?(.*)$
    SourceAlgorithmSpecification:
      description: Details about the algorithm that was used to create the model package.
      type: object
      additionalProperties: false
      properties:
        SourceAlgorithms:
          description: A list of algorithms that were used to create a model package.
          type: array
          items:
            $ref: '#/components/schemas/SourceAlgorithm'
          minItems: 1
          maxItems: 1
          x-insertionOrder: true
      required:
        - SourceAlgorithms
      x-insertionOrder: true
    SourceAlgorithm:
      description: Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
      type: object
      additionalProperties: false
      properties:
        AlgorithmName:
          description: The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.
          type: string
          minLength: 1
          maxLength: 170
          pattern: (arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:[a-z\-]*\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$
        ModelDataUrl:
          description: The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - AlgorithmName
    ValidationSpecification:
      description: Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.
      type: object
      additionalProperties: false
      properties:
        ValidationProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ValidationProfile'
          minItems: 1
          maxItems: 1
          x-insertionOrder: true
        ValidationRole:
          description: The IAM roles to be used for the validation of the model package.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      required:
        - ValidationProfiles
        - ValidationRole
      x-insertionOrder: true
    ValidationProfile:
      description: Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.
      type: object
      additionalProperties: false
      properties:
        TransformJobDefinition:
          $ref: '#/components/schemas/TransformJobDefinition'
        ProfileName:
          description: The name of the profile for the model package.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
      required:
        - TransformJobDefinition
        - ProfileName
    TransformJobDefinition:
      description: Defines the input needed to run a transform job using the inference specification specified in the algorithm.
      type: object
      additionalProperties: false
      properties:
        Environment:
          $ref: '#/components/schemas/Environment'
        BatchStrategy:
          description: A string that determines the number of records included in a single mini-batch.
          type: string
          enum:
            - MultiRecord
            - SingleRecord
        MaxConcurrentTransforms:
          description: The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.
          type: integer
          minimum: 0
        MaxPayloadInMB:
          description: The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).
          type: integer
          minimum: 0
        TransformInput:
          $ref: '#/components/schemas/TransformInput'
        TransformOutput:
          $ref: '#/components/schemas/TransformOutput'
        TransformResources:
          $ref: '#/components/schemas/TransformResources'
      required:
        - TransformResources
        - TransformOutput
        - TransformInput
    TransformInput:
      description: Describes the input source of a transform job and the way the transform job consumes it.
      type: object
      additionalProperties: false
      properties:
        CompressionType:
          description: If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.
          type: string
          enum:
            - None
            - Gzip
        ContentType:
          description: The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.
          type: string
          maxLength: 256
          pattern: .*
        DataSource:
          $ref: '#/components/schemas/DataSource'
        SplitType:
          description: 'The method to use to split the transform job''s data files into smaller batches. '
          type: string
          enum:
            - None
            - TFRecord
            - Line
            - RecordIO
      required:
        - DataSource
    DataSource:
      description: Describes the input source of a transform job and the way the transform job consumes it.
      type: object
      additionalProperties: false
      properties:
        S3DataSource:
          $ref: '#/components/schemas/S3DataSource'
      required:
        - S3DataSource
    S3DataSource:
      description: Describes the S3 data source.
      type: object
      additionalProperties: false
      properties:
        S3DataType:
          description: The S3 Data Source Type
          type: string
          enum:
            - ManifestFile
            - S3Prefix
            - AugmentedManifestFile
        S3Uri:
          description: Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
      required:
        - S3DataType
        - S3Uri
    TransformOutput:
      description: Describes the results of a transform job.
      type: object
      additionalProperties: false
      properties:
        Accept:
          description: The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.
          type: string
          maxLength: 256
          pattern: .*
        KmsKeyId:
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
          type: string
          maxLength: 2048
          pattern: .*
        S3OutputPath:
          description: The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.
          type: string
          maxLength: 1024
          pattern: ^(https|s3)://([^/]+)/?(.*)$
        AssembleWith:
          description: Defines how to assemble the results of the transform job as a single S3 object.
          type: string
          enum:
            - None
            - Line
      required:
        - S3OutputPath
    TransformResources:
      description: Describes the resources, including ML instance types and ML instance count, to use for transform job.
      type: object
      additionalProperties: false
      properties:
        InstanceCount:
          description: The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is 1.
          type: integer
          minimum: 1
        InstanceType:
          description: The ML compute instance type for the transform job.
          type: string
        VolumeKmsKeyId:
          description: The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.
          type: string
          maxLength: 2048
          pattern: .*
      required:
        - InstanceCount
        - InstanceType
    ModelPackageArn:
      type: string
      description: The Amazon Resource Name (ARN) of the model package group.
      pattern: ^arn:aws(-cn|-us-gov)?:sagemaker:[a-z0-9\-]{9,16}:[0-9]{12}:model-package/[\S]{1,2048}$
      minLength: 1
      maxLength: 2048
    ApprovalDescription:
      description: A description provided for the model approval.
      type: string
      maxLength: 1024
      pattern: .*
    CreatedBy:
      $ref: '#/components/schemas/UserContext'
    CreationTime:
      description: The time at which the model package was created.
      type: string
    LastModifiedBy:
      $ref: '#/components/schemas/UserContext'
    LastModifiedTime:
      description: The time at which the model package was last modified.
      type: string
    ModelPackageStatus:
      description: The current status of the model package.
      type: string
      enum:
        - Pending
        - Deleting
        - InProgress
        - Completed
        - Failed
    ModelPackageStatusDetails:
      description: Details about the current status of the model package.
      type: object
      properties:
        ImageScanStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ModelPackageStatusItem'
          x-insertionOrder: true
        ValidationStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ModelPackageStatusItem'
          x-insertionOrder: true
      required:
        - ValidationStatuses
      additionalProperties: false
    ModelPackageStatusItem:
      description: Represents the overall status of a model package.
      type: object
      properties:
        FailureReason:
          description: If the overall status is Failed, the reason for the failure.
          type: string
        Name:
          description: The name of the model package for which the overall status is being reported.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$
        Status:
          description: The current status.
          type: string
          enum:
            - NotStarted
            - Failed
            - InProgress
            - Completed
      required:
        - Name
        - Status
      additionalProperties: false
    ModelPackageVersion:
      type: integer
      description: The version of the model package.
      minimum: 1
    Task:
      description: The machine learning task your model package accomplishes.
      type: string
    ModelPackage:
      type: object
      properties:
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        AdditionalInferenceSpecifications:
          $ref: '#/components/schemas/AdditionalInferenceSpecifications'
        AdditionalInferenceSpecificationDefinition:
          $ref: '#/components/schemas/AdditionalInferenceSpecificationDefinition'
        CertifyForMarketplace:
          $ref: '#/components/schemas/CertifyForMarketplace'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
        CustomerMetadataProperties:
          $ref: '#/components/schemas/CustomerMetadataProperties'
        Domain:
          $ref: '#/components/schemas/Domain'
        DriftCheckBaselines:
          $ref: '#/components/schemas/DriftCheckBaselines'
        InferenceSpecification:
          $ref: '#/components/schemas/InferenceSpecification'
        MetadataProperties:
          $ref: '#/components/schemas/MetadataProperties'
        ModelApprovalStatus:
          $ref: '#/components/schemas/ModelApprovalStatus'
        ModelMetrics:
          $ref: '#/components/schemas/ModelMetrics'
        ModelPackageDescription:
          $ref: '#/components/schemas/ModelPackageDescription'
        ModelPackageGroupName:
          $ref: '#/components/schemas/ModelPackageGroupName'
        ModelPackageName:
          $ref: '#/components/schemas/ModelPackageName'
        SamplePayloadUrl:
          $ref: '#/components/schemas/SamplePayloadUrl'
        SourceAlgorithmSpecification:
          $ref: '#/components/schemas/SourceAlgorithmSpecification'
        Task:
          $ref: '#/components/schemas/Task'
        ValidationSpecification:
          $ref: '#/components/schemas/ValidationSpecification'
        ModelPackageArn:
          $ref: '#/components/schemas/ModelPackageArn'
        ApprovalDescription:
          $ref: '#/components/schemas/ApprovalDescription'
        CreationTime:
          $ref: '#/components/schemas/CreationTime'
        LastModifiedBy:
          $ref: '#/components/schemas/LastModifiedBy'
        LastModifiedTime:
          $ref: '#/components/schemas/LastModifiedTime'
        ModelPackageStatus:
          $ref: '#/components/schemas/ModelPackageStatus'
        ModelPackageVersion:
          $ref: '#/components/schemas/ModelPackageVersion'
        AdditionalInferenceSpecificationsToAdd:
          $ref: '#/components/schemas/AdditionalInferenceSpecifications'
        ModelPackageStatusDetails:
          $ref: '#/components/schemas/ModelPackageStatusDetails'
        ModelPackageStatusItem:
          $ref: '#/components/schemas/ModelPackageStatusItem'
        CreatedBy:
          $ref: '#/components/schemas/CreatedBy'
        Environment:
          $ref: '#/components/schemas/Environment'
      x-stackql-resource-name: model_package
      x-stackql-primaryIdentifier:
        - ModelPackageArn
    ModelPackageGroupDescription:
      type: string
      description: The description of the model package group.
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      maxLength: 1024
    ModelPackageGroupArn:
      description: The Amazon Resource Name (ARN) of the model package group.
      type: string
      minLength: 1
      maxLength: 256
      pattern: arn:.*
    ModelPackageGroup:
      type: object
      properties:
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        ModelPackageGroupArn:
          $ref: '#/components/schemas/ModelPackageGroupArn'
        ModelPackageGroupName:
          $ref: '#/components/schemas/ModelPackageGroupName'
        ModelPackageGroupDescription:
          $ref: '#/components/schemas/ModelPackageGroupDescription'
        ModelPackageGroupPolicy:
          type: string
        CreationTime:
          description: The time at which the model package group was created.
          type: string
        ModelPackageGroupStatus:
          description: The status of a modelpackage group job.
          type: string
          enum:
            - Pending
            - InProgress
            - Completed
            - Failed
            - Deleting
            - DeleteFailed
      required:
        - ModelPackageGroupName
      x-stackql-resource-name: model_package_group
      x-stackql-primaryIdentifier:
        - ModelPackageGroupArn
    ModelQualityBaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        BaseliningJobName:
          $ref: '#/components/schemas/ProcessingJobName'
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
    ModelQualityAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ContainerArguments:
          type: array
          description: An array of arguments for the container used to run the monitoring job.
          maxItems: 50
          items:
            type: string
            minLength: 1
            maxLength: 256
        ContainerEntrypoint:
          type: array
          description: Specifies the entrypoint for a container used to run the monitoring job.
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 256
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        PostAnalyticsProcessorSourceUri:
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
          $ref: '#/components/schemas/S3Uri'
        RecordPreprocessorSourceUri:
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
          $ref: '#/components/schemas/S3Uri'
        Environment:
          type: object
          additionalProperties: false
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
        ProblemType:
          $ref: '#/components/schemas/ProblemType'
      required:
        - ImageUri
        - ProblemType
    ModelQualityJobInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
        GroundTruthS3Input:
          $ref: '#/components/schemas/MonitoringGroundTruthS3Input'
      required:
        - GroundTruthS3Input
    ProblemType:
      description: The status of the monitoring job.
      type: string
      enum:
        - BinaryClassification
        - MulticlassClassification
        - Regression
    ModelQualityJobDefinition:
      type: object
      properties:
        JobDefinitionArn:
          description: The Amazon Resource Name (ARN) of job definition.
          type: string
          minLength: 1
          maxLength: 256
        JobDefinitionName:
          $ref: '#/components/schemas/JobDefinitionName'
        ModelQualityBaselineConfig:
          $ref: '#/components/schemas/ModelQualityBaselineConfig'
        ModelQualityAppSpecification:
          $ref: '#/components/schemas/ModelQualityAppSpecification'
        ModelQualityJobInput:
          $ref: '#/components/schemas/ModelQualityJobInput'
        ModelQualityJobOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        JobResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the job definition was created.
          type: string
      required:
        - ModelQualityAppSpecification
        - ModelQualityJobInput
        - ModelQualityJobOutputConfig
        - JobResources
        - RoleArn
      x-stackql-resource-name: model_quality_job_definition
      x-stackql-primaryIdentifier:
        - JobDefinitionArn
    MonitoringScheduleConfig:
      type: object
      additionalProperties: false
      description: The configuration object that specifies the monitoring schedule and defines the monitoring job.
      properties:
        MonitoringJobDefinition:
          $ref: '#/components/schemas/MonitoringJobDefinition'
        MonitoringJobDefinitionName:
          description: Name of the job definition
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        MonitoringType:
          $ref: '#/components/schemas/MonitoringType'
        ScheduleConfig:
          $ref: '#/components/schemas/ScheduleConfig'
    MonitoringType:
      description: The type of monitoring job.
      type: string
      enum:
        - DataQuality
        - ModelQuality
        - ModelBias
        - ModelExplainability
    MonitoringJobDefinition:
      type: object
      additionalProperties: false
      description: Defines the monitoring job.
      properties:
        BaselineConfig:
          $ref: '#/components/schemas/BaselineConfig'
        Environment:
          type: object
          description: Sets the environment variables in the Docker container
          x-patternProperties:
            '[a-zA-Z_][a-zA-Z0-9_]*':
              type: string
              minLength: 1
              maxLength: 256
            '[\S\s]*':
              type: string
              maxLength: 256
        MonitoringAppSpecification:
          $ref: '#/components/schemas/MonitoringAppSpecification'
        MonitoringInputs:
          $ref: '#/components/schemas/MonitoringInputs'
        MonitoringOutputConfig:
          $ref: '#/components/schemas/MonitoringOutputConfig'
        MonitoringResources:
          $ref: '#/components/schemas/MonitoringResources'
        NetworkConfig:
          $ref: '#/components/schemas/NetworkConfig'
        RoleArn:
          description: The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
          type: string
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
          minLength: 20
          maxLength: 2048
        StoppingCondition:
          $ref: '#/components/schemas/StoppingCondition'
      required:
        - MonitoringAppSpecification
        - MonitoringInputs
        - MonitoringOutputConfig
        - MonitoringResources
        - RoleArn
    BaselineConfig:
      type: object
      additionalProperties: false
      description: Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
      properties:
        ConstraintsResource:
          $ref: '#/components/schemas/ConstraintsResource'
        StatisticsResource:
          $ref: '#/components/schemas/StatisticsResource'
    MonitoringAppSpecification:
      type: object
      additionalProperties: false
      description: Container image configuration object for the monitoring job.
      properties:
        ContainerArguments:
          type: array
          description: An array of arguments for the container used to run the monitoring job.
          maxItems: 50
          items:
            $ref: '#/components/schemas/ContainerArgument'
        ContainerEntrypoint:
          type: array
          description: Specifies the entrypoint for a container used to run the monitoring job.
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 256
        ImageUri:
          type: string
          description: The container image to be run by the monitoring job.
          pattern: .*
          maxLength: 255
        PostAnalyticsProcessorSourceUri:
          description: An Amazon S3 URI to a script that is called after analysis has been performed. Applicable only for the built-in (first party) containers.
          $ref: '#/components/schemas/S3Uri'
        RecordPreprocessorSourceUri:
          description: An Amazon S3 URI to a script that is called per row prior to running analysis. It can base64 decode the payload and convert it into a flatted json so that the built-in container can use the converted data. Applicable only for the built-in (first party) containers
          $ref: '#/components/schemas/S3Uri'
      required:
        - ImageUri
    ContainerArgument:
      type: string
      additionalProperties: false
      description: Arguments for the container used to run the monitoring job.
      minLength: 1
      maxLength: 256
    MonitoringInputs:
      type: array
      additionalProperties: false
      description: The array of inputs for the monitoring job.
      minItems: 1
      maxItems: 1
      items:
        $ref: '#/components/schemas/MonitoringInput'
    MonitoringInput:
      type: object
      additionalProperties: false
      description: The inputs for a monitoring job.
      properties:
        EndpointInput:
          $ref: '#/components/schemas/EndpointInput'
        BatchTransformInput:
          $ref: '#/components/schemas/BatchTransformInput'
    ScheduleConfig:
      type: object
      additionalProperties: false
      description: Configuration details about the monitoring schedule.
      properties:
        ScheduleExpression:
          description: A cron expression that describes details about the monitoring schedule.
          type: string
          minLength: 1
          maxLength: 256
      required:
        - ScheduleExpression
    MonitoringExecutionSummary:
      description: Summary of information about monitoring job
      type: object
      properties:
        CreationTime:
          description: The time at which the monitoring job was created.
          type: string
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        FailureReason:
          type: string
          description: Contains the reason a monitoring job failed, if it failed.
          maxLength: 1024
        LastModifiedTime:
          description: A timestamp that indicates the last time the monitoring job was modified.
          type: string
        MonitoringExecutionStatus:
          description: The status of the monitoring job.
          type: string
          enum:
            - Pending
            - Completed
            - CompletedWithViolations
            - InProgress
            - Failed
            - Stopping
            - Stopped
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
        ProcessingJobArn:
          description: The Amazon Resource Name (ARN) of the monitoring job.
          type: string
          pattern: aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:processing-job/.*
          maxLength: 256
        ScheduledTime:
          description: The time the monitoring job was scheduled.
          type: string
      required:
        - CreationTime
        - LastModifiedTime
        - MonitoringExecutionStatus
        - MonitoringScheduleName
        - ScheduledTime
    MonitoringScheduleName:
      type: string
      description: The name of the monitoring schedule.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 63
    MonitoringSchedule:
      type: object
      properties:
        MonitoringScheduleArn:
          description: The Amazon Resource Name (ARN) of the monitoring schedule.
          type: string
          minLength: 1
          maxLength: 256
        MonitoringScheduleName:
          $ref: '#/components/schemas/MonitoringScheduleName'
        MonitoringScheduleConfig:
          $ref: '#/components/schemas/MonitoringScheduleConfig'
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        CreationTime:
          description: The time at which the schedule was created.
          type: string
        EndpointName:
          $ref: '#/components/schemas/EndpointName'
        FailureReason:
          type: string
          description: Contains the reason a monitoring job failed, if it failed.
          minLength: 1
          maxLength: 1024
        LastModifiedTime:
          description: A timestamp that indicates the last time the monitoring job was modified.
          type: string
        LastMonitoringExecutionSummary:
          description: Describes metadata on the last execution to run, if there was one.
          $ref: '#/components/schemas/MonitoringExecutionSummary'
        MonitoringScheduleStatus:
          description: The status of a schedule job.
          type: string
          enum:
            - Pending
            - Failed
            - Scheduled
            - Stopped
      required:
        - MonitoringScheduleConfig
        - MonitoringScheduleName
      x-stackql-resource-name: monitoring_schedule
      x-stackql-primaryIdentifier:
        - MonitoringScheduleArn
    InstanceMetadataServiceConfiguration:
      type: object
      additionalProperties: false
      properties:
        MinimumInstanceMetadataServiceVersion:
          type: string
      required:
        - MinimumInstanceMetadataServiceVersion
    NotebookInstance:
      type: object
      properties:
        KmsKeyId:
          type: string
        VolumeSizeInGB:
          type: integer
        AdditionalCodeRepositories:
          type: array
          uniqueItems: false
          items:
            type: string
        DefaultCodeRepository:
          type: string
        DirectInternetAccess:
          type: string
        PlatformIdentifier:
          type: string
        AcceleratorTypes:
          type: array
          uniqueItems: false
          items:
            type: string
        SubnetId:
          type: string
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        RoleArn:
          type: string
        InstanceMetadataServiceConfiguration:
          $ref: '#/components/schemas/InstanceMetadataServiceConfiguration'
        RootAccess:
          type: string
        Id:
          type: string
        NotebookInstanceName:
          type: string
        InstanceType:
          type: string
        LifecycleConfigName:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceType
        - RoleArn
      x-stackql-resource-name: notebook_instance
      x-stackql-primaryIdentifier:
        - Id
    NotebookInstanceLifecycleHook:
      type: object
      additionalProperties: false
      properties:
        Content:
          type: string
    NotebookInstanceLifecycleConfig:
      type: object
      properties:
        Id:
          type: string
        NotebookInstanceLifecycleConfigName:
          type: string
        OnStart:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/NotebookInstanceLifecycleHook'
        OnCreate:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/NotebookInstanceLifecycleHook'
      x-stackql-resource-name: notebook_instance_lifecycle_config
      x-stackql-primaryIdentifier:
        - Id
    S3Location:
      type: object
      additionalProperties: false
      properties:
        Bucket:
          description: The name of the S3 bucket where the PipelineDefinition file is stored.
          type: string
        Key:
          description: The file name of the PipelineDefinition file (Amazon S3 object name).
          type: string
        Version:
          description: For versioning-enabled buckets, a specific version of the PipelineDefinition file.
          type: string
        ETag:
          description: The Amazon S3 ETag (a file checksum) of the PipelineDefinition file. If you don't specify a value, SageMaker skips ETag validation of your PipelineDefinition file.
          type: string
      required:
        - Bucket
        - Key
    Pipeline:
      type: object
      properties:
        PipelineName:
          type: string
          description: The name of the Pipeline.
          minLength: 1
          maxLength: 256
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
        PipelineDisplayName:
          type: string
          description: The display name of the Pipeline.
          minLength: 1
          maxLength: 256
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
        PipelineDescription:
          type: string
          description: The description of the Pipeline.
          minLength: 0
          maxLength: 3072
        PipelineDefinition:
          type: object
          oneOf:
            - additionalProperties: false
              properties:
                PipelineDefinitionBody:
                  type: string
                  description: A specification that defines the pipeline in JSON format.
              required:
                - PipelineDefinitionBody
            - additionalProperties: false
              properties:
                PipelineDefinitionS3Location:
                  $ref: '#/components/schemas/S3Location'
              required:
                - PipelineDefinitionS3Location
        RoleArn:
          type: string
          description: Role Arn
          minLength: 20
          maxLength: 2048
          pattern: ^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        ParallelismConfiguration:
          type: object
          additionalProperties: false
          properties:
            MaxParallelExecutionSteps:
              description: Maximum parallel execution steps
              type: integer
              minimum: 1
          required:
            - MaxParallelExecutionSteps
      required:
        - PipelineName
        - PipelineDefinition
        - RoleArn
      x-stackql-resource-name: pipeline
      x-stackql-primaryIdentifier:
        - PipelineName
    ProjectDescription:
      type: string
      description: The description of the project.
      pattern: .*
      maxLength: 1024
    ProjectId:
      type: string
      description: Project Id.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 20
    ProvisionedProductStatusMessage:
      type: string
      description: Provisioned Product Status Message
    ProjectName:
      type: string
      description: The name of the project.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      minLength: 1
      maxLength: 32
    ProjectArn:
      description: The Amazon Resource Name (ARN) of the Project.
      type: string
      minLength: 1
      maxLength: 2048
      pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:project.*
    ProductId:
      type: string
      description: Service Catalog product identifier.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 100
    ProvisioningArtifactId:
      type: string
      description: The identifier of the provisioning artifact (also known as a version).
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 100
    PathId:
      type: string
      description: The path identifier of the product.
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      maxLength: 100
    ProvisioningParameter:
      description: Information about a parameter used to provision a product.
      type: object
      properties:
        Key:
          type: string
          description: The parameter key.
          minLength: 1
          maxLength: 1000
          pattern: .*
        Value:
          type: string
          description: The parameter value.
          maxLength: 4096
          pattern: .*
      required:
        - Key
        - Value
      additionalProperties: false
    Project:
      type: object
      properties:
        Tags:
          type: array
          maxItems: 40
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        ProjectArn:
          $ref: '#/components/schemas/ProjectArn'
        ProjectId:
          $ref: '#/components/schemas/ProjectId'
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
        ProjectDescription:
          $ref: '#/components/schemas/ProjectDescription'
        CreationTime:
          description: The time at which the project was created.
          type: string
        ServiceCatalogProvisioningDetails:
          description: Input ServiceCatalog Provisioning Details
          type: object
          properties:
            ProductId:
              $ref: '#/components/schemas/ProductId'
            ProvisioningArtifactId:
              $ref: '#/components/schemas/ProvisioningArtifactId'
            PathId:
              $ref: '#/components/schemas/PathId'
            ProvisioningParameters:
              type: array
              description: Parameters specified by the administrator that are required for provisioning the product.
              items:
                $ref: '#/components/schemas/ProvisioningParameter'
          required:
            - ProductId
          additionalProperties: false
        ServiceCatalogProvisionedProductDetails:
          description: Provisioned ServiceCatalog  Details
          type: object
          properties:
            ProvisionedProductId:
              $ref: '#/components/schemas/ProvisioningArtifactId'
            ProvisionedProductStatusMessage:
              $ref: '#/components/schemas/ProvisionedProductStatusMessage'
          additionalProperties: false
        ProjectStatus:
          description: The status of a project.
          type: string
          enum:
            - Pending
            - CreateInProgress
            - CreateCompleted
            - CreateFailed
            - DeleteInProgress
            - DeleteFailed
            - DeleteCompleted
      required:
        - ProjectName
        - ServiceCatalogProvisioningDetails
      x-stackql-resource-name: project
      x-stackql-primaryIdentifier:
        - ProjectArn
    SpaceSettings:
      type: object
      description: A collection of settings that apply to spaces of Amazon SageMaker Studio. These settings are specified when the CreateSpace API is called.
      additionalProperties: false
      properties:
        JupyterServerAppSettings:
          $ref: '#/components/schemas/JupyterServerAppSettings'
          description: The Jupyter server's app settings.
        KernelGatewayAppSettings:
          $ref: '#/components/schemas/KernelGatewayAppSettings'
          description: The kernel gateway app settings.
    Space:
      type: object
      properties:
        SpaceArn:
          type: string
          description: The space Amazon Resource Name (ARN).
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:space/.*
        DomainId:
          type: string
          description: The ID of the associated Domain.
          minLength: 1
          maxLength: 63
        SpaceName:
          type: string
          description: A name for the Space.
          minLength: 1
          maxLength: 63
        SpaceSettings:
          $ref: '#/components/schemas/SpaceSettings'
          description: A collection of settings.
          uniqueItems: false
          minItems: 0
          maxItems: 50
        Tags:
          type: array
          description: A list of tags to apply to the space.
          uniqueItems: false
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DomainId
        - SpaceName
      x-stackql-resource-name: space
      x-stackql-primaryIdentifier:
        - DomainId
        - SpaceName
    UserProfile:
      type: object
      properties:
        UserProfileArn:
          type: string
          description: The user profile Amazon Resource Name (ARN).
          maxLength: 256
          pattern: arn:aws[a-z\-]*:sagemaker:[a-z0-9\-]*:[0-9]{12}:user-profile/.*
        DomainId:
          type: string
          description: The ID of the associated Domain.
          minLength: 1
          maxLength: 63
        SingleSignOnUserIdentifier:
          type: string
          description: A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
          pattern: UserName
        SingleSignOnUserValue:
          type: string
          description: The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
          minLength: 1
          maxLength: 256
        UserProfileName:
          type: string
          description: A name for the UserProfile.
          minLength: 1
          maxLength: 63
        UserSettings:
          $ref: '#/components/schemas/UserSettings'
          description: A collection of settings.
          uniqueItems: false
          minItems: 0
          maxItems: 50
        Tags:
          type: array
          description: A list of tags to apply to the user profile.
          uniqueItems: false
          minItems: 0
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DomainId
        - UserProfileName
      x-stackql-resource-name: user_profile
      x-stackql-primaryIdentifier:
        - UserProfileName
        - DomainId
    OidcMemberDefinition:
      type: object
      additionalProperties: false
      properties:
        OidcGroups:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - OidcGroups
    NotificationConfiguration:
      type: object
      additionalProperties: false
      properties:
        NotificationTopicArn:
          type: string
      required:
        - NotificationTopicArn
    MemberDefinition:
      type: object
      additionalProperties: false
      properties:
        CognitoMemberDefinition:
          $ref: '#/components/schemas/CognitoMemberDefinition'
        OidcMemberDefinition:
          $ref: '#/components/schemas/OidcMemberDefinition'
    CognitoMemberDefinition:
      type: object
      additionalProperties: false
      properties:
        CognitoUserGroup:
          type: string
        CognitoUserPool:
          type: string
        CognitoClientId:
          type: string
      required:
        - CognitoUserPool
        - CognitoClientId
        - CognitoUserGroup
    Workteam:
      type: object
      properties:
        Description:
          type: string
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
        WorkteamName:
          type: string
        MemberDefinitions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/MemberDefinition'
        Id:
          type: string
        WorkforceName:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: workteam
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    apps:
      name: apps
      id: aws.sagemaker.apps
      x-cfn-schema-name: App
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppName') as app_name,
              JSON_EXTRACT(Properties, '$.AppType') as app_type,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::App'
    app:
      name: app
      id: aws.sagemaker.app
      x-cfn-schema-name: App
      x-type: get
      x-identifiers:
        - AppName
        - AppType
        - DomainId
        - UserProfileName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppArn') as app_arn,
              JSON_EXTRACT(Properties, '$.AppName') as app_name,
              JSON_EXTRACT(Properties, '$.AppType') as app_type,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.ResourceSpec.InstanceType') as resource_spec_instance_type,
              JSON_EXTRACT(Properties, '$.ResourceSpec.SageMakerImageArn') as resource_spec_sage_maker_image_arn,
              JSON_EXTRACT(Properties, '$.ResourceSpec.SageMakerImageVersionArn') as resource_spec_sage_maker_image_version_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::App'
    app_image_configs:
      name: app_image_configs
      id: aws.sagemaker.app_image_configs
      x-cfn-schema-name: AppImageConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppImageConfigName') as app_image_config_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::AppImageConfig'
    app_image_config:
      name: app_image_config
      id: aws.sagemaker.app_image_config
      x-cfn-schema-name: AppImageConfig
      x-type: get
      x-identifiers:
        - AppImageConfigName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AppImageConfigArn') as app_image_config_arn,
              JSON_EXTRACT(Properties, '$.AppImageConfigName') as app_image_config_name,
              JSON_EXTRACT(Properties, '$.KernelGatewayImageConfig.FileSystemConfig') as kernel_gateway_image_config_file_system_config,
              JSON_EXTRACT(Properties, '$.KernelGatewayImageConfig.KernelSpecs') as kernel_gateway_image_config_kernel_specs,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::AppImageConfig'
    code_repositories:
      name: code_repositories
      id: aws.sagemaker.code_repositories
      x-cfn-schema-name: CodeRepository
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::CodeRepository'
    code_repository:
      name: code_repository
      id: aws.sagemaker.code_repository
      x-cfn-schema-name: CodeRepository
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GitConfig.SecretArn') as git_config_secret_arn,
              JSON_EXTRACT(Properties, '$.GitConfig.RepositoryUrl') as git_config_repository_url,
              JSON_EXTRACT(Properties, '$.GitConfig.Branch') as git_config_branch,
              JSON_EXTRACT(Properties, '$.CodeRepositoryName') as code_repository_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::CodeRepository'
    data_quality_job_definitions:
      name: data_quality_job_definitions
      id: aws.sagemaker.data_quality_job_definitions
      x-cfn-schema-name: DataQualityJobDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
    data_quality_job_definition:
      name: data_quality_job_definition
      id: aws.sagemaker.data_quality_job_definition
      x-cfn-schema-name: DataQualityJobDefinition
      x-type: get
      x-identifiers:
        - JobDefinitionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.DataQualityBaselineConfig.BaseliningJobName') as data_quality_baseline_config_baselining_job_name,
              JSON_EXTRACT(Properties, '$.DataQualityBaselineConfig.ConstraintsResource') as data_quality_baseline_config_constraints_resource,
              JSON_EXTRACT(Properties, '$.DataQualityBaselineConfig.StatisticsResource') as data_quality_baseline_config_statistics_resource,
              JSON_EXTRACT(Properties, '$.DataQualityAppSpecification.ContainerArguments') as data_quality_app_specification_container_arguments,
              JSON_EXTRACT(Properties, '$.DataQualityAppSpecification.ContainerEntrypoint') as data_quality_app_specification_container_entrypoint,
              JSON_EXTRACT(Properties, '$.DataQualityAppSpecification.ImageUri') as data_quality_app_specification_image_uri,
              JSON_EXTRACT(Properties, '$.DataQualityAppSpecification.PostAnalyticsProcessorSourceUri') as data_quality_app_specification_post_analytics_processor_source_uri,
              JSON_EXTRACT(Properties, '$.DataQualityAppSpecification.RecordPreprocessorSourceUri') as data_quality_app_specification_record_preprocessor_source_uri,
              JSON_EXTRACT(Properties, '$.DataQualityAppSpecification.Environment') as data_quality_app_specification_environment,
              JSON_EXTRACT(Properties, '$.DataQualityJobInput.EndpointInput') as data_quality_job_input_endpoint_input,
              JSON_EXTRACT(Properties, '$.DataQualityJobInput.BatchTransformInput') as data_quality_job_input_batch_transform_input,
              JSON_EXTRACT(Properties, '$.DataQualityJobOutputConfig.KmsKeyId') as data_quality_job_output_config_kms_key_id,
              JSON_EXTRACT(Properties, '$.DataQualityJobOutputConfig.MonitoringOutputs') as data_quality_job_output_config_monitoring_outputs,
              JSON_EXTRACT(Properties, '$.JobResources.ClusterConfig') as job_resources_cluster_config,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableInterContainerTrafficEncryption') as network_config_enable_inter_container_traffic_encryption,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableNetworkIsolation') as network_config_enable_network_isolation,
              JSON_EXTRACT(Properties, '$.NetworkConfig.VpcConfig') as network_config_vpc_config,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition.MaxRuntimeInSeconds') as stopping_condition_max_runtime_in_seconds,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::DataQualityJobDefinition'
    devices:
      name: devices
      id: aws.sagemaker.devices
      x-cfn-schema-name: Device
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Device.DeviceName') as device.device_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Device'
    device:
      name: device
      id: aws.sagemaker.device
      x-cfn-schema-name: Device
      x-type: get
      x-identifiers:
        - Device/DeviceName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeviceFleetName') as device_fleet_name,
              JSON_EXTRACT(Properties, '$.Device.DeviceFleetName') as device_device_fleet_name,
              JSON_EXTRACT(Properties, '$.Device.Device') as device_device,
              JSON_EXTRACT(Properties, '$.Device.Tags') as device_tags,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Device'
    device_fleets:
      name: device_fleets
      id: aws.sagemaker.device_fleets
      x-cfn-schema-name: DeviceFleet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeviceFleetName') as device_fleet_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::DeviceFleet'
    device_fleet:
      name: device_fleet
      id: aws.sagemaker.device_fleet
      x-cfn-schema-name: DeviceFleet
      x-type: get
      x-identifiers:
        - DeviceFleetName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DeviceFleetName') as device_fleet_name,
              JSON_EXTRACT(Properties, '$.OutputConfig.S3OutputLocation') as output_config_s3_output_location,
              JSON_EXTRACT(Properties, '$.OutputConfig.KmsKeyId') as output_config_kms_key_id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::DeviceFleet'
    endpoints:
      name: endpoints
      id: aws.sagemaker.endpoints
      x-cfn-schema-name: Endpoint
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Endpoint'
    endpoint:
      name: endpoint
      id: aws.sagemaker.endpoint
      x-cfn-schema-name: Endpoint
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RetainAllVariantProperties') as retain_all_variant_properties,
              JSON_EXTRACT(Properties, '$.EndpointName') as endpoint_name,
              JSON_EXTRACT(Properties, '$.ExcludeRetainedVariantProperties') as exclude_retained_variant_properties,
              JSON_EXTRACT(Properties, '$.EndpointConfigName') as endpoint_config_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DeploymentConfig.AutoRollbackConfiguration') as deployment_config_auto_rollback_configuration,
              JSON_EXTRACT(Properties, '$.DeploymentConfig.BlueGreenUpdatePolicy') as deployment_config_blue_green_update_policy,
              JSON_EXTRACT(Properties, '$.RetainDeploymentConfig') as retain_deployment_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Endpoint'
    endpoint_configs:
      name: endpoint_configs
      id: aws.sagemaker.endpoint_configs
      x-cfn-schema-name: EndpointConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::EndpointConfig'
    endpoint_config:
      name: endpoint_config
      id: aws.sagemaker.endpoint_config
      x-cfn-schema-name: EndpointConfig
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ShadowProductionVariants') as shadow_production_variants,
              JSON_EXTRACT(Properties, '$.DataCaptureConfig.CaptureOptions') as data_capture_config_capture_options,
              JSON_EXTRACT(Properties, '$.DataCaptureConfig.KmsKeyId') as data_capture_config_kms_key_id,
              JSON_EXTRACT(Properties, '$.DataCaptureConfig.DestinationS3Uri') as data_capture_config_destination_s3_uri,
              JSON_EXTRACT(Properties, '$.DataCaptureConfig.InitialSamplingPercentage') as data_capture_config_initial_sampling_percentage,
              JSON_EXTRACT(Properties, '$.DataCaptureConfig.CaptureContentTypeHeader') as data_capture_config_capture_content_type_header,
              JSON_EXTRACT(Properties, '$.DataCaptureConfig.EnableCapture') as data_capture_config_enable_capture,
              JSON_EXTRACT(Properties, '$.ProductionVariants') as production_variants,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.AsyncInferenceConfig.ClientConfig') as async_inference_config_client_config,
              JSON_EXTRACT(Properties, '$.AsyncInferenceConfig.OutputConfig') as async_inference_config_output_config,
              JSON_EXTRACT(Properties, '$.EndpointConfigName') as endpoint_config_name,
              JSON_EXTRACT(Properties, '$.ExplainerConfig.ClarifyExplainerConfig') as explainer_config_clarify_explainer_config,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::EndpointConfig'
    feature_groups:
      name: feature_groups
      id: aws.sagemaker.feature_groups
      x-cfn-schema-name: FeatureGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FeatureGroupName') as feature_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::FeatureGroup'
    feature_group:
      name: feature_group
      id: aws.sagemaker.feature_group
      x-cfn-schema-name: FeatureGroup
      x-type: get
      x-identifiers:
        - FeatureGroupName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FeatureGroupName') as feature_group_name,
              JSON_EXTRACT(Properties, '$.RecordIdentifierFeatureName') as record_identifier_feature_name,
              JSON_EXTRACT(Properties, '$.EventTimeFeatureName') as event_time_feature_name,
              JSON_EXTRACT(Properties, '$.FeatureDefinitions') as feature_definitions,
              JSON_EXTRACT(Properties, '$.OnlineStoreConfig') as online_store_config,
              JSON_EXTRACT(Properties, '$.OfflineStoreConfig') as offline_store_config,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::FeatureGroup'
    images:
      name: images
      id: aws.sagemaker.images
      x-cfn-schema-name: Image
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ImageArn') as image_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Image'
    image:
      name: image
      id: aws.sagemaker.image
      x-cfn-schema-name: Image
      x-type: get
      x-identifiers:
        - ImageArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Image'
    image_versions:
      name: image_versions
      id: aws.sagemaker.image_versions
      x-cfn-schema-name: ImageVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ImageVersionArn') as image_version_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ImageVersion'
    image_version:
      name: image_version
      id: aws.sagemaker.image_version
      x-cfn-schema-name: ImageVersion
      x-type: get
      x-identifiers:
        - ImageVersionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ImageVersion'
    inference_experiments:
      name: inference_experiments
      id: aws.sagemaker.inference_experiments
      x-cfn-schema-name: InferenceExperiment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::InferenceExperiment'
    inference_experiment:
      name: inference_experiment
      id: aws.sagemaker.inference_experiment
      x-cfn-schema-name: InferenceExperiment
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.EndpointMetadata.EndpointName') as endpoint_metadata_endpoint_name,
              JSON_EXTRACT(Properties, '$.EndpointMetadata.EndpointConfigName') as endpoint_metadata_endpoint_config_name,
              JSON_EXTRACT(Properties, '$.EndpointMetadata.EndpointStatus') as endpoint_metadata_endpoint_status,
              JSON_EXTRACT(Properties, '$.Schedule.StartTime') as schedule_start_time,
              JSON_EXTRACT(Properties, '$.Schedule.EndTime') as schedule_end_time,
              JSON_EXTRACT(Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(Properties, '$.DataStorageConfig.Destination') as data_storage_config_destination,
              JSON_EXTRACT(Properties, '$.DataStorageConfig.KmsKey') as data_storage_config_kms_key,
              JSON_EXTRACT(Properties, '$.DataStorageConfig.ContentType') as data_storage_config_content_type,
              JSON_EXTRACT(Properties, '$.ModelVariants') as model_variants,
              JSON_EXTRACT(Properties, '$.ShadowModeConfig.SourceModelVariantName') as shadow_mode_config_source_model_variant_name,
              JSON_EXTRACT(Properties, '$.ShadowModeConfig.ShadowModelVariants') as shadow_mode_config_shadow_model_variants,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.DesiredState') as desired_state
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::InferenceExperiment'
    models:
      name: models
      id: aws.sagemaker.models
      x-cfn-schema-name: Model
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Model'
    model:
      name: model
      id: aws.sagemaker.model
      x-cfn-schema-name: Model
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.EnableNetworkIsolation') as enable_network_isolation,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.ImageConfig') as primary_container_image_config,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.InferenceSpecificationName') as primary_container_inference_specification_name,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.ContainerHostname') as primary_container_container_hostname,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.ModelPackageName') as primary_container_model_package_name,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.Mode') as primary_container_mode,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.Environment') as primary_container_environment,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.ModelDataUrl') as primary_container_model_data_url,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.Image') as primary_container_image,
              JSON_EXTRACT(Properties, '$.PrimaryContainer.MultiModelConfig') as primary_container_multi_model_config,
              JSON_EXTRACT(Properties, '$.ModelName') as model_name,
              JSON_EXTRACT(Properties, '$.VpcConfig.SecurityGroupIds') as vpc_config_security_group_ids,
              JSON_EXTRACT(Properties, '$.VpcConfig.Subnets') as vpc_config_subnets,
              JSON_EXTRACT(Properties, '$.Containers') as containers,
              JSON_EXTRACT(Properties, '$.InferenceExecutionConfig.Mode') as inference_execution_config_mode,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Model'
    model_bias_job_definitions:
      name: model_bias_job_definitions
      id: aws.sagemaker.model_bias_job_definitions
      x-cfn-schema-name: ModelBiasJobDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
    model_bias_job_definition:
      name: model_bias_job_definition
      id: aws.sagemaker.model_bias_job_definition
      x-cfn-schema-name: ModelBiasJobDefinition
      x-type: get
      x-identifiers:
        - JobDefinitionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.ModelBiasBaselineConfig.BaseliningJobName') as model_bias_baseline_config_baselining_job_name,
              JSON_EXTRACT(Properties, '$.ModelBiasBaselineConfig.ConstraintsResource') as model_bias_baseline_config_constraints_resource,
              JSON_EXTRACT(Properties, '$.ModelBiasAppSpecification.ImageUri') as model_bias_app_specification_image_uri,
              JSON_EXTRACT(Properties, '$.ModelBiasAppSpecification.ConfigUri') as model_bias_app_specification_config_uri,
              JSON_EXTRACT(Properties, '$.ModelBiasAppSpecification.Environment') as model_bias_app_specification_environment,
              JSON_EXTRACT(Properties, '$.ModelBiasJobInput.EndpointInput') as model_bias_job_input_endpoint_input,
              JSON_EXTRACT(Properties, '$.ModelBiasJobInput.BatchTransformInput') as model_bias_job_input_batch_transform_input,
              JSON_EXTRACT(Properties, '$.ModelBiasJobInput.GroundTruthS3Input') as model_bias_job_input_ground_truth_s3_input,
              JSON_EXTRACT(Properties, '$.ModelBiasJobOutputConfig.KmsKeyId') as model_bias_job_output_config_kms_key_id,
              JSON_EXTRACT(Properties, '$.ModelBiasJobOutputConfig.MonitoringOutputs') as model_bias_job_output_config_monitoring_outputs,
              JSON_EXTRACT(Properties, '$.JobResources.ClusterConfig') as job_resources_cluster_config,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableInterContainerTrafficEncryption') as network_config_enable_inter_container_traffic_encryption,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableNetworkIsolation') as network_config_enable_network_isolation,
              JSON_EXTRACT(Properties, '$.NetworkConfig.VpcConfig') as network_config_vpc_config,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition.MaxRuntimeInSeconds') as stopping_condition_max_runtime_in_seconds,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelBiasJobDefinition'
    model_cards:
      name: model_cards
      id: aws.sagemaker.model_cards
      x-cfn-schema-name: ModelCard
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ModelCardName') as model_card_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelCard'
    model_card:
      name: model_card
      id: aws.sagemaker.model_card
      x-cfn-schema-name: ModelCard
      x-type: get
      x-identifiers:
        - ModelCardName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ModelCardArn') as model_card_arn,
              JSON_EXTRACT(Properties, '$.ModelCardVersion') as model_card_version,
              JSON_EXTRACT(Properties, '$.ModelCardName') as model_card_name,
              JSON_EXTRACT(Properties, '$.SecurityConfig.KmsKeyId') as security_config_kms_key_id,
              JSON_EXTRACT(Properties, '$.ModelCardStatus') as model_card_status,
              JSON_EXTRACT(Properties, '$.Content.ModelOverview') as content_model_overview,
              JSON_EXTRACT(Properties, '$.Content.IntendedUses') as content_intended_uses,
              JSON_EXTRACT(Properties, '$.Content.BusinessDetails') as content_business_details,
              JSON_EXTRACT(Properties, '$.Content.TrainingDetails') as content_training_details,
              JSON_EXTRACT(Properties, '$.Content.EvaluationDetails') as content_evaluation_details,
              JSON_EXTRACT(Properties, '$.Content.AdditionalInformation') as content_additional_information,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.CreatedBy.DomainId') as created_by_domain_id,
              JSON_EXTRACT(Properties, '$.CreatedBy.UserProfileArn') as created_by_user_profile_arn,
              JSON_EXTRACT(Properties, '$.CreatedBy.UserProfileName') as created_by_user_profile_name,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.LastModifiedBy.DomainId') as last_modified_by_domain_id,
              JSON_EXTRACT(Properties, '$.LastModifiedBy.UserProfileArn') as last_modified_by_user_profile_arn,
              JSON_EXTRACT(Properties, '$.LastModifiedBy.UserProfileName') as last_modified_by_user_profile_name,
              JSON_EXTRACT(Properties, '$.ModelCardProcessingStatus') as model_card_processing_status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelCard'
    model_explainability_job_definitions:
      name: model_explainability_job_definitions
      id: aws.sagemaker.model_explainability_job_definitions
      x-cfn-schema-name: ModelExplainabilityJobDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
    model_explainability_job_definition:
      name: model_explainability_job_definition
      id: aws.sagemaker.model_explainability_job_definition
      x-cfn-schema-name: ModelExplainabilityJobDefinition
      x-type: get
      x-identifiers:
        - JobDefinitionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityBaselineConfig.BaseliningJobName') as model_explainability_baseline_config_baselining_job_name,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityBaselineConfig.ConstraintsResource') as model_explainability_baseline_config_constraints_resource,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityAppSpecification.ImageUri') as model_explainability_app_specification_image_uri,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityAppSpecification.ConfigUri') as model_explainability_app_specification_config_uri,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityAppSpecification.Environment') as model_explainability_app_specification_environment,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityJobInput.EndpointInput') as model_explainability_job_input_endpoint_input,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityJobInput.BatchTransformInput') as model_explainability_job_input_batch_transform_input,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityJobOutputConfig.KmsKeyId') as model_explainability_job_output_config_kms_key_id,
              JSON_EXTRACT(Properties, '$.ModelExplainabilityJobOutputConfig.MonitoringOutputs') as model_explainability_job_output_config_monitoring_outputs,
              JSON_EXTRACT(Properties, '$.JobResources.ClusterConfig') as job_resources_cluster_config,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableInterContainerTrafficEncryption') as network_config_enable_inter_container_traffic_encryption,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableNetworkIsolation') as network_config_enable_network_isolation,
              JSON_EXTRACT(Properties, '$.NetworkConfig.VpcConfig') as network_config_vpc_config,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition.MaxRuntimeInSeconds') as stopping_condition_max_runtime_in_seconds,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelExplainabilityJobDefinition'
    model_packages:
      name: model_packages
      id: aws.sagemaker.model_packages
      x-cfn-schema-name: ModelPackage
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ModelPackageArn') as model_package_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelPackage'
    model_package:
      name: model_package
      id: aws.sagemaker.model_package
      x-cfn-schema-name: ModelPackage
      x-type: get
      x-identifiers:
        - ModelPackageArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationDefinition.Containers') as additional_inference_specification_definition_containers,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationDefinition.Description') as additional_inference_specification_definition_description,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationDefinition.Name') as additional_inference_specification_definition_name,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationDefinition.SupportedContentTypes') as additional_inference_specification_definition_supported_content_types,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationDefinition.SupportedRealtimeInferenceInstanceTypes') as additional_inference_specification_definition_supported_realtime_inference_instance_types,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationDefinition.SupportedResponseMIMETypes') as additional_inference_specification_definition_supported_response_mi_me_types,
              JSON_EXTRACT(Properties, '$.AdditionalInferenceSpecificationDefinition.SupportedTransformInstanceTypes') as additional_inference_specification_definition_supported_transform_instance_types,
              JSON_EXTRACT(Properties, '$.DriftCheckBaselines.Bias') as drift_check_baselines_bias,
              JSON_EXTRACT(Properties, '$.DriftCheckBaselines.Explainability') as drift_check_baselines_explainability,
              JSON_EXTRACT(Properties, '$.DriftCheckBaselines.ModelDataQuality') as drift_check_baselines_model_data_quality,
              JSON_EXTRACT(Properties, '$.DriftCheckBaselines.ModelQuality') as drift_check_baselines_model_quality,
              JSON_EXTRACT(Properties, '$.InferenceSpecification.Containers') as inference_specification_containers,
              JSON_EXTRACT(Properties, '$.InferenceSpecification.SupportedContentTypes') as inference_specification_supported_content_types,
              JSON_EXTRACT(Properties, '$.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes') as inference_specification_supported_realtime_inference_instance_types,
              JSON_EXTRACT(Properties, '$.InferenceSpecification.SupportedResponseMIMETypes') as inference_specification_supported_response_mi_me_types,
              JSON_EXTRACT(Properties, '$.InferenceSpecification.SupportedTransformInstanceTypes') as inference_specification_supported_transform_instance_types,
              JSON_EXTRACT(Properties, '$.MetadataProperties.CommitId') as metadata_properties_commit_id,
              JSON_EXTRACT(Properties, '$.MetadataProperties.GeneratedBy') as metadata_properties_generated_by,
              JSON_EXTRACT(Properties, '$.MetadataProperties.ProjectId') as metadata_properties_project_id,
              JSON_EXTRACT(Properties, '$.MetadataProperties.Repository') as metadata_properties_repository,
              JSON_EXTRACT(Properties, '$.ModelMetrics.Bias') as model_metrics_bias,
              JSON_EXTRACT(Properties, '$.ModelMetrics.Explainability') as model_metrics_explainability,
              JSON_EXTRACT(Properties, '$.ModelMetrics.ModelDataQuality') as model_metrics_model_data_quality,
              JSON_EXTRACT(Properties, '$.ModelMetrics.ModelQuality') as model_metrics_model_quality,
              JSON_EXTRACT(Properties, '$.SourceAlgorithmSpecification.SourceAlgorithms') as source_algorithm_specification_source_algorithms,
              JSON_EXTRACT(Properties, '$.ValidationSpecification.ValidationProfiles') as validation_specification_validation_profiles,
              JSON_EXTRACT(Properties, '$.ValidationSpecification.ValidationRole') as validation_specification_validation_role,
              JSON_EXTRACT(Properties, '$.ModelPackageStatusDetails.ImageScanStatuses') as model_package_status_details_image_scan_statuses,
              JSON_EXTRACT(Properties, '$.ModelPackageStatusDetails.ValidationStatuses') as model_package_status_details_validation_statuses,
              JSON_EXTRACT(Properties, '$.ModelPackageStatusItem.FailureReason') as model_package_status_item_failure_reason,
              JSON_EXTRACT(Properties, '$.ModelPackageStatusItem.Name') as model_package_status_item_name,
              JSON_EXTRACT(Properties, '$.ModelPackageStatusItem.Status') as model_package_status_item_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelPackage'
    model_package_groups:
      name: model_package_groups
      id: aws.sagemaker.model_package_groups
      x-cfn-schema-name: ModelPackageGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupArn') as model_package_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
    model_package_group:
      name: model_package_group
      id: aws.sagemaker.model_package_group
      x-cfn-schema-name: ModelPackageGroup
      x-type: get
      x-identifiers:
        - ModelPackageGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupPolicy') as model_package_group_policy,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.ModelPackageGroupStatus') as model_package_group_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelPackageGroup'
    model_quality_job_definitions:
      name: model_quality_job_definitions
      id: aws.sagemaker.model_quality_job_definitions
      x-cfn-schema-name: ModelQualityJobDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
    model_quality_job_definition:
      name: model_quality_job_definition
      id: aws.sagemaker.model_quality_job_definition
      x-cfn-schema-name: ModelQualityJobDefinition
      x-type: get
      x-identifiers:
        - JobDefinitionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobDefinitionArn') as job_definition_arn,
              JSON_EXTRACT(Properties, '$.ModelQualityBaselineConfig.BaseliningJobName') as model_quality_baseline_config_baselining_job_name,
              JSON_EXTRACT(Properties, '$.ModelQualityBaselineConfig.ConstraintsResource') as model_quality_baseline_config_constraints_resource,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification.ContainerArguments') as model_quality_app_specification_container_arguments,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification.ContainerEntrypoint') as model_quality_app_specification_container_entrypoint,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification.ImageUri') as model_quality_app_specification_image_uri,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification.PostAnalyticsProcessorSourceUri') as model_quality_app_specification_post_analytics_processor_source_uri,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification.RecordPreprocessorSourceUri') as model_quality_app_specification_record_preprocessor_source_uri,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification.Environment') as model_quality_app_specification_environment,
              JSON_EXTRACT(Properties, '$.ModelQualityAppSpecification.ProblemType') as model_quality_app_specification_problem_type,
              JSON_EXTRACT(Properties, '$.ModelQualityJobInput.EndpointInput') as model_quality_job_input_endpoint_input,
              JSON_EXTRACT(Properties, '$.ModelQualityJobInput.BatchTransformInput') as model_quality_job_input_batch_transform_input,
              JSON_EXTRACT(Properties, '$.ModelQualityJobInput.GroundTruthS3Input') as model_quality_job_input_ground_truth_s3_input,
              JSON_EXTRACT(Properties, '$.ModelQualityJobOutputConfig.KmsKeyId') as model_quality_job_output_config_kms_key_id,
              JSON_EXTRACT(Properties, '$.ModelQualityJobOutputConfig.MonitoringOutputs') as model_quality_job_output_config_monitoring_outputs,
              JSON_EXTRACT(Properties, '$.JobResources.ClusterConfig') as job_resources_cluster_config,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableInterContainerTrafficEncryption') as network_config_enable_inter_container_traffic_encryption,
              JSON_EXTRACT(Properties, '$.NetworkConfig.EnableNetworkIsolation') as network_config_enable_network_isolation,
              JSON_EXTRACT(Properties, '$.NetworkConfig.VpcConfig') as network_config_vpc_config,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.StoppingCondition.MaxRuntimeInSeconds') as stopping_condition_max_runtime_in_seconds,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::ModelQualityJobDefinition'
    monitoring_schedules:
      name: monitoring_schedules
      id: aws.sagemaker.monitoring_schedules
      x-cfn-schema-name: MonitoringSchedule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleArn') as monitoring_schedule_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
    monitoring_schedule:
      name: monitoring_schedule
      id: aws.sagemaker.monitoring_schedule
      x-cfn-schema-name: MonitoringSchedule
      x-type: get
      x-identifiers:
        - MonitoringScheduleArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleArn') as monitoring_schedule_arn,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleConfig.MonitoringJobDefinition') as monitoring_schedule_config_monitoring_job_definition,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleConfig.MonitoringJobDefinitionName') as monitoring_schedule_config_monitoring_job_definition_name,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleConfig.MonitoringType') as monitoring_schedule_config_monitoring_type,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleConfig.ScheduleConfig') as monitoring_schedule_config_schedule_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.FailureReason') as failure_reason,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.CreationTime') as last_monitoring_execution_summary_creation_time,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.EndpointName') as last_monitoring_execution_summary_endpoint_name,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.FailureReason') as last_monitoring_execution_summary_failure_reason,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.LastModifiedTime') as last_monitoring_execution_summary_last_modified_time,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.MonitoringExecutionStatus') as last_monitoring_execution_summary_monitoring_execution_status,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.MonitoringScheduleName') as last_monitoring_execution_summary_monitoring_schedule_name,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.ProcessingJobArn') as last_monitoring_execution_summary_processing_job_arn,
              JSON_EXTRACT(Properties, '$.LastMonitoringExecutionSummary.ScheduledTime') as last_monitoring_execution_summary_scheduled_time,
              JSON_EXTRACT(Properties, '$.MonitoringScheduleStatus') as monitoring_schedule_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::MonitoringSchedule'
    notebook_instances:
      name: notebook_instances
      id: aws.sagemaker.notebook_instances
      x-cfn-schema-name: NotebookInstance
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::NotebookInstance'
    notebook_instance:
      name: notebook_instance
      id: aws.sagemaker.notebook_instance
      x-cfn-schema-name: NotebookInstance
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.VolumeSizeInGB') as volume_size_in_gb,
              JSON_EXTRACT(Properties, '$.AdditionalCodeRepositories') as additional_code_repositories,
              JSON_EXTRACT(Properties, '$.DefaultCodeRepository') as default_code_repository,
              JSON_EXTRACT(Properties, '$.DirectInternetAccess') as direct_internet_access,
              JSON_EXTRACT(Properties, '$.PlatformIdentifier') as platform_identifier,
              JSON_EXTRACT(Properties, '$.AcceleratorTypes') as accelerator_types,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.InstanceMetadataServiceConfiguration.MinimumInstanceMetadataServiceVersion') as instance_metadata_service_configuration_minimum_instance_metadata_service_version,
              JSON_EXTRACT(Properties, '$.RootAccess') as root_access,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.NotebookInstanceName') as notebook_instance_name,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.LifecycleConfigName') as lifecycle_config_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::NotebookInstance'
    notebook_instance_lifecycle_configs:
      name: notebook_instance_lifecycle_configs
      id: aws.sagemaker.notebook_instance_lifecycle_configs
      x-cfn-schema-name: NotebookInstanceLifecycleConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::NotebookInstanceLifecycleConfig'
    notebook_instance_lifecycle_config:
      name: notebook_instance_lifecycle_config
      id: aws.sagemaker.notebook_instance_lifecycle_config
      x-cfn-schema-name: NotebookInstanceLifecycleConfig
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.NotebookInstanceLifecycleConfigName') as notebook_instance_lifecycle_config_name,
              JSON_EXTRACT(Properties, '$.OnStart') as on_start,
              JSON_EXTRACT(Properties, '$.OnCreate') as on_create
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::NotebookInstanceLifecycleConfig'
    pipelines:
      name: pipelines
      id: aws.sagemaker.pipelines
      x-cfn-schema-name: Pipeline
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PipelineName') as pipeline_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Pipeline'
    pipeline:
      name: pipeline
      id: aws.sagemaker.pipeline
      x-cfn-schema-name: Pipeline
      x-type: get
      x-identifiers:
        - PipelineName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PipelineName') as pipeline_name,
              JSON_EXTRACT(Properties, '$.PipelineDisplayName') as pipeline_display_name,
              JSON_EXTRACT(Properties, '$.PipelineDescription') as pipeline_description,
              JSON_EXTRACT(Properties, '$.PipelineDefinition') as pipeline_definition,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ParallelismConfiguration') as parallelism_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Pipeline'
    projects:
      name: projects
      id: aws.sagemaker.projects
      x-cfn-schema-name: Project
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProjectArn') as project_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Project'
    project:
      name: project
      id: aws.sagemaker.project
      x-cfn-schema-name: Project
      x-type: get
      x-identifiers:
        - ProjectArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.ServiceCatalogProvisioningDetails') as service_catalog_provisioning_details,
              JSON_EXTRACT(Properties, '$.ServiceCatalogProvisionedProductDetails') as service_catalog_provisioned_product_details,
              JSON_EXTRACT(Properties, '$.ProjectStatus') as project_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Project'
    spaces:
      name: spaces
      id: aws.sagemaker.spaces
      x-cfn-schema-name: Space
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.SpaceName') as space_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Space'
    space:
      name: space
      id: aws.sagemaker.space
      x-cfn-schema-name: Space
      x-type: get
      x-identifiers:
        - DomainId
        - SpaceName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SpaceArn') as space_arn,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.SpaceName') as space_name,
              JSON_EXTRACT(Properties, '$.SpaceSettings.JupyterServerAppSettings') as space_settings_jupyter_server_app_settings,
              JSON_EXTRACT(Properties, '$.SpaceSettings.KernelGatewayAppSettings') as space_settings_kernel_gateway_app_settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Space'
    user_profiles:
      name: user_profiles
      id: aws.sagemaker.user_profiles
      x-cfn-schema-name: UserProfile
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::UserProfile'
    user_profile:
      name: user_profile
      id: aws.sagemaker.user_profile
      x-cfn-schema-name: UserProfile
      x-type: get
      x-identifiers:
        - UserProfileName
        - DomainId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserProfileArn') as user_profile_arn,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.SingleSignOnUserIdentifier') as single_sign_on_user_identifier,
              JSON_EXTRACT(Properties, '$.SingleSignOnUserValue') as single_sign_on_user_value,
              JSON_EXTRACT(Properties, '$.UserProfileName') as user_profile_name,
              JSON_EXTRACT(Properties, '$.UserSettings.ExecutionRole') as user_settings_execution_role,
              JSON_EXTRACT(Properties, '$.UserSettings.JupyterServerAppSettings') as user_settings_jupyter_server_app_settings,
              JSON_EXTRACT(Properties, '$.UserSettings.KernelGatewayAppSettings') as user_settings_kernel_gateway_app_settings,
              JSON_EXTRACT(Properties, '$.UserSettings.RStudioServerProAppSettings') as user_settings_rstudio_server_pro_app_settings,
              JSON_EXTRACT(Properties, '$.UserSettings.SecurityGroups') as user_settings_security_groups,
              JSON_EXTRACT(Properties, '$.UserSettings.SharingSettings') as user_settings_sharing_settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::UserProfile'
    workteams:
      name: workteams
      id: aws.sagemaker.workteams
      x-cfn-schema-name: Workteam
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SageMaker::Workteam'
    workteam:
      name: workteam
      id: aws.sagemaker.workteam
      x-cfn-schema-name: Workteam
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.NotificationConfiguration.NotificationTopicArn') as notification_configuration_notification_topic_arn,
              JSON_EXTRACT(Properties, '$.WorkteamName') as workteam_name,
              JSON_EXTRACT(Properties, '$.MemberDefinitions') as member_definitions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.WorkforceName') as workforce_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SageMaker::Workteam'
