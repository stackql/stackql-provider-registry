openapi: 3.0.0
info:
  title: SSMIncidents
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Arn:
      description: The ARN of the ReplicationSet.
      type: string
      pattern: ^arn:aws(-(cn|us-gov|iso(-b)?))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
      maxLength: 1000
    RegionName:
      description: The AWS region name.
      type: string
      maxLength: 20
    ReplicationRegion:
      description: The ReplicationSet regional configuration.
      type: object
      additionalProperties: false
      properties:
        RegionName:
          $ref: '#/components/schemas/RegionName'
        RegionConfiguration:
          $ref: '#/components/schemas/RegionConfiguration'
    RegionConfiguration:
      description: The ReplicationSet regional configuration.
      type: object
      additionalProperties: false
      properties:
        SseKmsKeyId:
          $ref: '#/components/schemas/Arn'
      required:
        - SseKmsKeyId
    DeletionProtected:
      description: Configures the ReplicationSet deletion protection.
      type: boolean
    RegionList:
      type: array
      minItems: 1
      maxItems: 3
      items:
        $ref: '#/components/schemas/ReplicationRegion'
      x-insertionOrder: false
      uniqueItems: true
    Tag:
      description: A key-value pair to tag a resource.
      additionalProperties: false
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    ReplicationSet:
      type: object
      properties:
        Arn:
          description: The ARN of the ReplicationSet.
          $ref: '#/components/schemas/Arn'
          additionalProperties: false
        Regions:
          description: The ReplicationSet configuration.
          $ref: '#/components/schemas/RegionList'
        DeletionProtected:
          $ref: '#/components/schemas/DeletionProtected'
          default: false
        Tags:
          description: The tags to apply to the replication set.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Regions
      x-stackql-resource-name: replication_set
      description: Resource type definition for AWS::SSMIncidents::ReplicationSet
      x-type-name: AWS::SSMIncidents::ReplicationSet
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Regions
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - ssm-incidents:CreateReplicationSet
          - ssm-incidents:ListReplicationSets
          - ssm-incidents:UpdateDeletionProtection
          - ssm-incidents:GetReplicationSet
          - ssm-incidents:TagResource
          - ssm-incidents:ListTagsForResource
          - iam:CreateServiceLinkedRole
        read:
          - ssm-incidents:ListReplicationSets
          - ssm-incidents:GetReplicationSet
          - ssm-incidents:ListTagsForResource
        update:
          - ssm-incidents:UpdateReplicationSet
          - ssm-incidents:UpdateDeletionProtection
          - ssm-incidents:GetReplicationSet
          - ssm-incidents:TagResource
          - ssm-incidents:UntagResource
          - ssm-incidents:ListTagsForResource
        delete:
          - ssm-incidents:DeleteReplicationSet
          - ssm-incidents:GetReplicationSet
        list:
          - ssm-incidents:ListReplicationSets
    SSMContact:
      description: The ARN of the contact.
      type: string
      pattern: ^arn:aws(-(cn|us-gov))?:ssm-contacts:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
      maxLength: 1000
    SnsArn:
      description: The ARN of the Chatbot SNS topic.
      type: string
      pattern: ^arn:aws(-(cn|us-gov))?:sns:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
      maxLength: 1000
    NotificationTargetItem:
      description: A notification target.
      type: object
      additionalProperties: false
      properties:
        SnsTopicArn:
          $ref: '#/components/schemas/SnsArn'
    Action:
      description: The automation configuration to launch.
      additionalProperties: false
      type: object
      properties:
        SsmAutomation:
          $ref: '#/components/schemas/SsmAutomation'
    SsmAutomation:
      description: The configuration to use when starting the SSM automation document.
      type: object
      additionalProperties: false
      required:
        - RoleArn
        - DocumentName
      properties:
        RoleArn:
          description: The role ARN to use when starting the SSM automation document.
          type: string
          pattern: ^arn:aws(-(cn|us-gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
          maxLength: 1000
        DocumentName:
          description: The document name to use when starting the SSM automation document.
          type: string
          maxLength: 128
        DocumentVersion:
          description: The version of the document to use when starting the SSM automation document.
          type: string
          maxLength: 128
        TargetAccount:
          description: The account type to use when starting the SSM automation document.
          type: string
          enum:
            - IMPACTED_ACCOUNT
            - RESPONSE_PLAN_OWNER_ACCOUNT
        Parameters:
          description: The parameters to set when starting the SSM automation document.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SsmParameter'
          minItems: 1
          maxItems: 200
          default: []
        DynamicParameters:
          description: The parameters with dynamic values to set when starting the SSM automation document.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DynamicSsmParameter'
          maxItems: 200
          default: []
    SsmParameter:
      description: A parameter to set when starting the SSM automation document.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 50
        Values:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          maxItems: 10
          items:
            $ref: '#/components/schemas/SsmParameterValue'
      required:
        - Values
        - Key
      additionalProperties: false
    SsmParameterValue:
      description: A value of the parameter to set when starting the SSM automation document.
      type: string
      maxLength: 10000
    DynamicSsmParameter:
      description: A parameter with a dynamic value to set when starting the SSM automation document.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 50
        Value:
          $ref: '#/components/schemas/DynamicSsmParameterValue'
      required:
        - Value
        - Key
      additionalProperties: false
    DynamicSsmParameterValue:
      description: Value of the dynamic parameter to set when starting the SSM automation document.
      additionalProperties: false
      type: object
      properties:
        Variable:
          $ref: '#/components/schemas/VariableType'
    VariableType:
      description: The variable types used as dynamic parameter value when starting the SSM automation document.
      type: string
      enum:
        - INCIDENT_RECORD_ARN
        - INVOLVED_RESOURCES
    Integration:
      type: object
      additionalProperties: false
      properties:
        PagerDutyConfiguration:
          $ref: '#/components/schemas/PagerDutyConfiguration'
      oneOf:
        - required:
            - PagerDutyConfiguration
    PagerDutyConfiguration:
      description: The pagerDuty configuration to use when starting the incident.
      type: object
      additionalProperties: false
      required:
        - Name
        - SecretId
        - PagerDutyIncidentConfiguration
      properties:
        Name:
          description: The name of the pagerDuty configuration.
          type: string
          minLength: 1
          maxLength: 200
        SecretId:
          description: The AWS secrets manager secretId storing the pagerDuty token.
          type: string
          minLength: 1
          maxLength: 512
        PagerDutyIncidentConfiguration:
          $ref: '#/components/schemas/PagerDutyIncidentConfiguration'
    PagerDutyIncidentConfiguration:
      description: The pagerDuty incident configuration.
      additionalProperties: false
      type: object
      properties:
        ServiceId:
          description: The pagerDuty serviceId.
          type: string
          minLength: 1
          maxLength: 200
      required:
        - ServiceId
    IncidentTemplate:
      description: The incident template configuration.
      additionalProperties: false
      type: object
      required:
        - Title
        - Impact
      properties:
        DedupeString:
          description: The deduplication string.
          type: string
          maxLength: 1000
          minLength: 1
        Impact:
          description: The impact value.
          type: integer
          minimum: 1
          maximum: 5
        NotificationTargets:
          description: The list of notification targets.
          type: array
          default: []
          maxItems: 10
          items:
            $ref: '#/components/schemas/NotificationTargetItem'
          x-insertionOrder: false
        Summary:
          description: The summary string.
          type: string
          maxLength: 4000
          minLength: 1
        Title:
          description: The title string.
          type: string
          maxLength: 200
        IncidentTags:
          description: Tags that get applied to incidents created by the StartIncident API action.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          default: []
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
    ChatbotSns:
      type: array
      uniqueItems: true
      x-insertionOrder: true
      default: []
      items:
        $ref: '#/components/schemas/SnsArn'
    ChatChannel:
      description: The chat channel configuration.
      additionalProperties: false
      type: object
      properties:
        ChatbotSns:
          $ref: '#/components/schemas/ChatbotSns'
    ResponsePlan:
      type: object
      properties:
        Arn:
          description: The ARN of the response plan.
          type: string
          pattern: ^arn:aws(-(cn|us-gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
          maxLength: 1000
        Name:
          description: The name of the response plan.
          type: string
          pattern: ^[a-zA-Z0-9_-]*$
          maxLength: 200
          minLength: 1
        DisplayName:
          description: The display name of the response plan.
          type: string
          maxLength: 200
          minLength: 1
        ChatChannel:
          $ref: '#/components/schemas/ChatChannel'
        Engagements:
          description: The list of engagements to use.
          type: array
          default: []
          maxItems: 5
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SSMContact'
        Actions:
          description: The list of actions.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: true
          maxItems: 1
          items:
            $ref: '#/components/schemas/Action'
        Integrations:
          description: The list of integrations.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: true
          maxItems: 1
          items:
            $ref: '#/components/schemas/Integration'
        Tags:
          description: The tags to apply to the response plan.
          type: array
          default: []
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        IncidentTemplate:
          $ref: '#/components/schemas/IncidentTemplate'
      required:
        - Name
        - IncidentTemplate
      x-stackql-resource-name: response_plan
      description: Resource type definition for AWS::SSMIncidents::ResponsePlan
      x-type-name: AWS::SSMIncidents::ResponsePlan
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - IncidentTemplate
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - ssm-incidents:CreateResponsePlan
          - ssm-incidents:GetResponsePlan
          - ssm-incidents:TagResource
          - ssm-incidents:ListTagsForResource
          - iam:PassRole
          - secretsmanager:GetSecretValue
          - kms:Decrypt
          - kms:GenerateDataKey
          - kms:GenerateDataKeyPair
          - kms:GenerateDataKeyPairWithoutPlaintext
          - kms:GenerateDataKeyWithoutPlaintext
        read:
          - ssm-incidents:GetResponsePlan
          - ssm-incidents:ListTagsForResource
        update:
          - ssm-incidents:UpdateResponsePlan
          - ssm-incidents:GetResponsePlan
          - ssm-incidents:TagResource
          - ssm-incidents:UntagResource
          - ssm-incidents:ListTagsForResource
          - iam:PassRole
          - secretsmanager:GetSecretValue
          - kms:Decrypt
          - kms:GenerateDataKey
          - kms:GenerateDataKeyPair
          - kms:GenerateDataKeyPairWithoutPlaintext
          - kms:GenerateDataKeyWithoutPlaintext
        delete:
          - ssm-incidents:DeleteResponsePlan
          - ssm-incidents:GetResponsePlan
        list:
          - ssm-incidents:ListResponsePlans
    CreateReplicationSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The ARN of the ReplicationSet.
              $ref: '#/components/schemas/Arn'
              additionalProperties: false
            Regions:
              description: The ReplicationSet configuration.
              $ref: '#/components/schemas/RegionList'
            DeletionProtected:
              $ref: '#/components/schemas/DeletionProtected'
              default: false
            Tags:
              description: The tags to apply to the replication set.
              type: array
              default: []
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateReplicationSetRequest
      type: object
      required: []
    CreateResponsePlanRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The ARN of the response plan.
              type: string
              pattern: ^arn:aws(-(cn|us-gov))?:[a-z-]+:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$
              maxLength: 1000
            Name:
              description: The name of the response plan.
              type: string
              pattern: ^[a-zA-Z0-9_-]*$
              maxLength: 200
              minLength: 1
            DisplayName:
              description: The display name of the response plan.
              type: string
              maxLength: 200
              minLength: 1
            ChatChannel:
              $ref: '#/components/schemas/ChatChannel'
            Engagements:
              description: The list of engagements to use.
              type: array
              default: []
              maxItems: 5
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/SSMContact'
            Actions:
              description: The list of actions.
              type: array
              default: []
              uniqueItems: true
              x-insertionOrder: true
              maxItems: 1
              items:
                $ref: '#/components/schemas/Action'
            Integrations:
              description: The list of integrations.
              type: array
              default: []
              uniqueItems: true
              x-insertionOrder: true
              maxItems: 1
              items:
                $ref: '#/components/schemas/Integration'
            Tags:
              description: The tags to apply to the response plan.
              type: array
              default: []
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            IncidentTemplate:
              $ref: '#/components/schemas/IncidentTemplate'
          x-stackQL-stringOnly: true
      x-title: CreateResponsePlanRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    replication_sets:
      name: replication_sets
      id: aws.ssmincidents.replication_sets
      x-cfn-schema-name: ReplicationSet
      x-cfn-type-name: AWS::SSMIncidents::ReplicationSet
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ReplicationSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMIncidents::ReplicationSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMIncidents::ReplicationSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMIncidents::ReplicationSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/replication_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/replication_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/replication_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Regions') as regions,
              JSON_EXTRACT(Properties, '$.DeletionProtected') as deletion_protected,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Regions') as regions,
                JSON_EXTRACT(detail.Properties, '$.DeletionProtected') as deletion_protected,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                AND detail.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Regions') as regions,
                  json_extract_path_text(Properties, 'DeletionProtected') as deletion_protected,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Regions') as regions,
                    json_extract_path_text(detail.Properties, 'DeletionProtected') as deletion_protected,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                    AND detail.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                    AND listing.region = 'us-east-1'
    replication_sets_list_only:
      name: replication_sets_list_only
      id: aws.ssmincidents.replication_sets_list_only
      x-cfn-schema-name: ReplicationSet
      x-cfn-type-name: AWS::SSMIncidents::ReplicationSet
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                AND region = 'us-east-1'
    replication_set_tags:
      name: replication_set_tags
      id: aws.ssmincidents.replication_set_tags
      x-cfn-schema-name: ReplicationSet
      x-cfn-type-name: AWS::SSMIncidents::ReplicationSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Regions') as regions,
              JSON_EXTRACT(detail.Properties, '$.DeletionProtected') as deletion_protected
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
              AND detail.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Regions') as regions,
                json_extract_path_text(detail.Properties, 'DeletionProtected') as deletion_protected
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                AND detail.data__TypeName = 'AWS::SSMIncidents::ReplicationSet'
                AND listing.region = 'us-east-1'
    response_plans:
      name: response_plans
      id: aws.ssmincidents.response_plans
      x-cfn-schema-name: ResponsePlan
      x-cfn-type-name: AWS::SSMIncidents::ResponsePlan
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResponsePlan&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMIncidents::ResponsePlan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMIncidents::ResponsePlan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMIncidents::ResponsePlan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/response_plans/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/response_plans/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/response_plans/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.ChatChannel') as chat_channel,
              JSON_EXTRACT(Properties, '$.Engagements') as engagements,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.Integrations') as integrations,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.IncidentTemplate') as incident_template
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.ChatChannel') as chat_channel,
                JSON_EXTRACT(detail.Properties, '$.Engagements') as engagements,
                JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
                JSON_EXTRACT(detail.Properties, '$.Integrations') as integrations,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.IncidentTemplate') as incident_template
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                AND detail.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'ChatChannel') as chat_channel,
                  json_extract_path_text(Properties, 'Engagements') as engagements,
                  json_extract_path_text(Properties, 'Actions') as actions,
                  json_extract_path_text(Properties, 'Integrations') as integrations,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'IncidentTemplate') as incident_template
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'ChatChannel') as chat_channel,
                    json_extract_path_text(detail.Properties, 'Engagements') as engagements,
                    json_extract_path_text(detail.Properties, 'Actions') as actions,
                    json_extract_path_text(detail.Properties, 'Integrations') as integrations,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'IncidentTemplate') as incident_template
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                    AND detail.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                    AND listing.region = 'us-east-1'
    response_plans_list_only:
      name: response_plans_list_only
      id: aws.ssmincidents.response_plans_list_only
      x-cfn-schema-name: ResponsePlan
      x-cfn-type-name: AWS::SSMIncidents::ResponsePlan
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                AND region = 'us-east-1'
    response_plan_tags:
      name: response_plan_tags
      id: aws.ssmincidents.response_plan_tags
      x-cfn-schema-name: ResponsePlan
      x-cfn-type-name: AWS::SSMIncidents::ResponsePlan
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.ChatChannel') as chat_channel,
              JSON_EXTRACT(detail.Properties, '$.Engagements') as engagements,
              JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
              JSON_EXTRACT(detail.Properties, '$.Integrations') as integrations,
              JSON_EXTRACT(detail.Properties, '$.IncidentTemplate') as incident_template
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
              AND detail.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'ChatChannel') as chat_channel,
                json_extract_path_text(detail.Properties, 'Engagements') as engagements,
                json_extract_path_text(detail.Properties, 'Actions') as actions,
                json_extract_path_text(detail.Properties, 'Integrations') as integrations,
                json_extract_path_text(detail.Properties, 'IncidentTemplate') as incident_template
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                AND detail.data__TypeName = 'AWS::SSMIncidents::ResponsePlan'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ReplicationSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateReplicationSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateReplicationSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResponsePlan&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResponsePlan
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResponsePlanRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
