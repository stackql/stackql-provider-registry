openapi: 3.0.0
info:
  title: XRay
  version: 1.0.0
paths: {}
components:
  schemas:
    InsightsConfiguration:
      type: object
      additionalProperties: false
      properties:
        InsightsEnabled:
          description: Set the InsightsEnabled value to true to enable insights or false to disable insights.
          type: boolean
        NotificationsEnabled:
          description: Set the NotificationsEnabled value to true to enable insights notifications. Notifications can only be enabled on a group with InsightsEnabled set to true.
          type: boolean
    Tags:
      type: array
      x-insertionOrder: false
      items:
        type: object
        required:
          - Key
          - Value
        properties:
          Key:
            type: string
          Value:
            type: string
        additionalProperties: false
    Group:
      type: object
      properties:
        FilterExpression:
          description: The filter expression defining criteria by which to group traces.
          type: string
        GroupName:
          description: The case-sensitive name of the new group. Names must be unique.
          type: string
          minLength: 1
          maxLength: 32
        GroupARN:
          description: The ARN of the group that was generated on creation.
          type: string
          minLength: 1
          maxLength: 400
        InsightsConfiguration:
          $ref: '#/components/schemas/InsightsConfiguration'
        Tags:
          $ref: '#/components/schemas/Tags'
      x-stackql-resource-name: group
      x-stackql-primaryIdentifier:
        - GroupARN
    ResourcePolicy:
      type: object
      properties:
        PolicyName:
          description: The name of the resource policy. Must be unique within a specific AWS account.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        PolicyDocument:
          description: The resource policy document, which can be up to 5kb in size.
          type: string
          minLength: 1
          maxLength: 5120
        BypassPolicyLockoutCheck:
          description: A flag to indicate whether to bypass the resource policy lockout safety check
          type: boolean
      required:
        - PolicyName
        - PolicyDocument
      x-stackql-resource-name: resource_policy
      x-stackql-primaryIdentifier:
        - PolicyName
    SamplingRule:
      type: object
      properties:
        SamplingRule:
          $ref: '#/components/schemas/SamplingRule'
        SamplingRuleRecord:
          $ref: '#/components/schemas/SamplingRuleRecord'
        SamplingRuleUpdate:
          $ref: '#/components/schemas/SamplingRuleUpdate'
        RuleARN:
          $ref: '#/components/schemas/RuleARN'
        RuleName:
          $ref: '#/components/schemas/RuleName'
        Tags:
          $ref: '#/components/schemas/Tags'
      x-stackql-resource-name: sampling_rule
      x-stackql-primaryIdentifier:
        - RuleARN
    SamplingRuleRecord:
      type: object
      additionalProperties: false
      properties:
        CreatedAt:
          description: When the rule was created, in Unix time seconds.
          type: string
        ModifiedAt:
          description: When the rule was modified, in Unix time seconds.
          type: string
        SamplingRule:
          $ref: '#/components/schemas/SamplingRule'
    SamplingRuleUpdate:
      type: object
      additionalProperties: false
      properties:
        Attributes:
          x-$comment: String to string map
          description: Matches attributes derived from the request.
          type: object
          x-patternProperties:
            .{1,}:
              type: string
          additionalProperties: false
        FixedRate:
          description: The percentage of matching requests to instrument, after the reservoir is exhausted.
          type: number
          minimum: 0
          maximum: 1
        Host:
          description: Matches the hostname from a request URL.
          type: string
          maxLength: 64
        HTTPMethod:
          description: Matches the HTTP method from a request URL.
          type: string
          maxLength: 10
        Priority:
          description: The priority of the sampling rule.
          type: integer
          minimum: 1
          maximum: 9999
        ReservoirSize:
          description: A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.
          type: integer
          minimum: 0
        ResourceARN:
          description: Matches the ARN of the AWS resource on which the service runs.
          type: string
          maxLength: 500
        RuleARN:
          $ref: '#/components/schemas/RuleARN'
        RuleName:
          $ref: '#/components/schemas/RuleName'
        ServiceName:
          description: Matches the name that the service uses to identify itself in segments.
          type: string
          maxLength: 64
        ServiceType:
          description: Matches the origin that the service uses to identify its type in segments.
          type: string
          maxLength: 64
        URLPath:
          description: Matches the path from a request URL.
          type: string
          maxLength: 128
    RuleName:
      description: The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.
      type: string
      minLength: 1
      maxLength: 32
    RuleARN:
      description: The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.
      type: string
  x-stackQL-resources:
    groups:
      name: groups
      id: aws.xray.groups
      x-cfn-schema-name: Group
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GroupARN') as group_ar_n
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::XRay::Group'
    group:
      name: group
      id: aws.xray.group
      x-cfn-schema-name: Group
      x-type: get
      x-identifiers:
        - GroupARN
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FilterExpression') as filter_expression,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.GroupARN') as group_ar_n,
              JSON_EXTRACT(Properties, '$.InsightsConfiguration.InsightsEnabled') as insights_configuration_insights_enabled,
              JSON_EXTRACT(Properties, '$.InsightsConfiguration.NotificationsEnabled') as insights_configuration_notifications_enabled
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::XRay::Group'
    resource_policies:
      name: resource_policies
      id: aws.xray.resource_policies
      x-cfn-schema-name: ResourcePolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::XRay::ResourcePolicy'
    resource_policy:
      name: resource_policy
      id: aws.xray.resource_policy
      x-cfn-schema-name: ResourcePolicy
      x-type: get
      x-identifiers:
        - PolicyName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.BypassPolicyLockoutCheck') as bypass_policy_lockout_check
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::XRay::ResourcePolicy'
    sampling_rules:
      name: sampling_rules
      id: aws.xray.sampling_rules
      x-cfn-schema-name: SamplingRule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RuleARN') as rule_ar_n
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::XRay::SamplingRule'
    sampling_rule:
      name: sampling_rule
      id: aws.xray.sampling_rule
      x-cfn-schema-name: SamplingRule
      x-type: get
      x-identifiers:
        - RuleARN
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SamplingRule.SamplingRule') as sampling_rule_sampling_rule,
              JSON_EXTRACT(Properties, '$.SamplingRule.SamplingRuleRecord') as sampling_rule_sampling_rule_record,
              JSON_EXTRACT(Properties, '$.SamplingRule.SamplingRuleUpdate') as sampling_rule_sampling_rule_update,
              JSON_EXTRACT(Properties, '$.SamplingRule.RuleARN') as sampling_rule_rule_ar_n,
              JSON_EXTRACT(Properties, '$.SamplingRule.RuleName') as sampling_rule_rule_name,
              JSON_EXTRACT(Properties, '$.SamplingRule.Tags') as sampling_rule_tags,
              JSON_EXTRACT(Properties, '$.SamplingRuleRecord.CreatedAt') as sampling_rule_record_created_at,
              JSON_EXTRACT(Properties, '$.SamplingRuleRecord.ModifiedAt') as sampling_rule_record_modified_at,
              JSON_EXTRACT(Properties, '$.SamplingRuleRecord.SamplingRule') as sampling_rule_record_sampling_rule,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.Attributes') as sampling_rule_update_attributes,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.FixedRate') as sampling_rule_update_fixed_rate,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.Host') as sampling_rule_update_host,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.HTTPMethod') as sampling_rule_update_ht_tp_method,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.Priority') as sampling_rule_update_priority,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.ReservoirSize') as sampling_rule_update_reservoir_size,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.ResourceARN') as sampling_rule_update_resource_ar_n,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.RuleARN') as sampling_rule_update_rule_ar_n,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.RuleName') as sampling_rule_update_rule_name,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.ServiceName') as sampling_rule_update_service_name,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.ServiceType') as sampling_rule_update_service_type,
              JSON_EXTRACT(Properties, '$.SamplingRuleUpdate.URLPath') as sampling_rule_update_ur_lpath
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::XRay::SamplingRule'
