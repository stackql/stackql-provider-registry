openapi: 3.0.0
info:
  title: CodeConnections
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    Connection:
      type: object
      properties:
        ConnectionArn:
          description: The Amazon Resource Name (ARN) of the  connection. The ARN is used as the connection reference when the connection is shared between AWS services.
          type: string
          minLength: 0
          maxLength: 256
          pattern: arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+
        ConnectionName:
          description: The name of the connection. Connection names must be unique in an AWS user account.
          type: string
          minLength: 1
          maxLength: 32
        ConnectionStatus:
          description: The current status of the connection.
          type: string
        OwnerAccountId:
          description: The name of the external provider where your third-party code repository is configured. For Bitbucket, this is the account ID of the owner of the Bitbucket repository.
          type: string
          minLength: 12
          maxLength: 12
          pattern: '[0-9]{12}'
        ProviderType:
          description: The name of the external provider where your third-party code repository is configured. You must specify either a ProviderType or a HostArn.
          type: string
        HostArn:
          description: The host arn configured to represent the infrastructure where your third-party provider is installed. You must specify either a ProviderType or a HostArn.
          type: string
          minLength: 0
          maxLength: 256
          pattern: arn:aws(-[\w]+)*:.+:.+:[0-9]{12}:.+
        Tags:
          description: Specifies the tags applied to a connection.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
      required:
        - ConnectionName
      x-stackql-resource-name: connection
      description: Schema for AWS::CodeConnections::Connection resource which can be used to connect external source providers with other AWS services (i.e. AWS CodePipeline)
      x-type-name: AWS::CodeConnections::Connection
      x-stackql-primary-identifier:
        - ConnectionArn
      x-create-only-properties:
        - ConnectionName
        - ProviderType
        - HostArn
      x-read-only-properties:
        - ConnectionArn
        - ConnectionStatus
        - OwnerAccountId
      x-required-properties:
        - ConnectionName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - codeconnections:CreateConnection
          - codeconnections:TagResource
        read:
          - codeconnections:GetConnection
          - codeconnections:ListTagsForResource
        update:
          - codeconnections:ListTagsForResource
          - codeconnections:TagResource
          - codeconnections:UntagResource
        delete:
          - codeconnections:DeleteConnection
        list:
          - codeconnections:ListConnections
          - codeconnections:ListTagsForResource
  x-stackQL-resources:
    connections:
      name: connections
      id: aws.codeconnections.connections
      x-cfn-schema-name: Connection
      x-type: list
      x-identifiers:
        - ConnectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeConnections::Connection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectionArn') as connection_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeConnections::Connection'
                AND region = 'us-east-1'
    connection:
      name: connection
      id: aws.codeconnections.connection
      x-cfn-schema-name: Connection
      x-type: get
      x-identifiers:
        - ConnectionArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn,
              JSON_EXTRACT(Properties, '$.ConnectionName') as connection_name,
              JSON_EXTRACT(Properties, '$.ConnectionStatus') as connection_status,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.ProviderType') as provider_type,
              JSON_EXTRACT(Properties, '$.HostArn') as host_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeConnections::Connection'
              AND data__Identifier = '<ConnectionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ConnectionArn') as connection_arn,
                json_extract_path_text(Properties, 'ConnectionName') as connection_name,
                json_extract_path_text(Properties, 'ConnectionStatus') as connection_status,
                json_extract_path_text(Properties, 'OwnerAccountId') as owner_account_id,
                json_extract_path_text(Properties, 'ProviderType') as provider_type,
                json_extract_path_text(Properties, 'HostArn') as host_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeConnections::Connection'
                AND data__Identifier = '<ConnectionArn>'
                AND region = 'us-east-1'
