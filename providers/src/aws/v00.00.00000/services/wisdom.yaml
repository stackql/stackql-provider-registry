openapi: 3.0.0
info:
  title: Wisdom
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AIAgentAssociationConfigurationType:
      type: string
      enum:
        - KNOWLEDGE_BASE
    AIAgentConfiguration:
      oneOf:
        - type: object
          title: ManualSearchAIAgentConfiguration
          properties:
            ManualSearchAIAgentConfiguration:
              $ref: '#/components/schemas/ManualSearchAIAgentConfiguration'
          required:
            - ManualSearchAIAgentConfiguration
          additionalProperties: false
        - type: object
          title: AnswerRecommendationAIAgentConfiguration
          properties:
            AnswerRecommendationAIAgentConfiguration:
              $ref: '#/components/schemas/AnswerRecommendationAIAgentConfiguration'
          required:
            - AnswerRecommendationAIAgentConfiguration
          additionalProperties: false
        - type: object
          title: SelfServiceAIAgentConfiguration
          properties:
            SelfServiceAIAgentConfiguration:
              $ref: '#/components/schemas/SelfServiceAIAgentConfiguration'
          required:
            - SelfServiceAIAgentConfiguration
          additionalProperties: false
    AIAgentType:
      type: string
      enum:
        - MANUAL_SEARCH
        - ANSWER_RECOMMENDATION
        - SELF_SERVICE
    SelfServiceAIAgentConfiguration:
      type: object
      properties:
        SelfServicePreProcessingAIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        SelfServiceAnswerGenerationAIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        SelfServiceAIGuardrailId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        AssociationConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/AssociationConfiguration'
      additionalProperties: false
    AnswerRecommendationAIAgentConfiguration:
      type: object
      properties:
        IntentLabelingGenerationAIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        QueryReformulationAIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        AnswerGenerationAIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        AnswerGenerationAIGuardrailId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        AssociationConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/AssociationConfiguration'
      additionalProperties: false
    AssociationConfiguration:
      type: object
      properties:
        AssociationId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AssociationType:
          $ref: '#/components/schemas/AIAgentAssociationConfigurationType'
        AssociationConfigurationData:
          $ref: '#/components/schemas/AssociationConfigurationData'
      additionalProperties: false
    AssociationConfigurationData:
      oneOf:
        - type: object
          title: KnowledgeBaseAssociationConfigurationData
          properties:
            KnowledgeBaseAssociationConfigurationData:
              $ref: '#/components/schemas/KnowledgeBaseAssociationConfigurationData'
          required:
            - KnowledgeBaseAssociationConfigurationData
          additionalProperties: false
    KnowledgeBaseAssociationConfigurationData:
      type: object
      properties:
        ContentTagFilter:
          $ref: '#/components/schemas/TagFilter'
        MaxResults:
          type: number
          maximum: 100
          minimum: 1
        OverrideKnowledgeBaseSearchType:
          $ref: '#/components/schemas/KnowledgeBaseSearchType'
      additionalProperties: false
    KnowledgeBaseSearchType:
      type: string
      enum:
        - HYBRID
        - SEMANTIC
    ManualSearchAIAgentConfiguration:
      type: object
      properties:
        AnswerGenerationAIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        AnswerGenerationAIGuardrailId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        AssociationConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/AssociationConfiguration'
      additionalProperties: false
    OrCondition:
      oneOf:
        - type: object
          title: AndConditions
          properties:
            AndConditions:
              type: array
              items:
                $ref: '#/components/schemas/TagCondition'
          required:
            - AndConditions
          additionalProperties: false
        - type: object
          title: TagCondition
          properties:
            TagCondition:
              $ref: '#/components/schemas/TagCondition'
          required:
            - TagCondition
          additionalProperties: false
    TagCondition:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
        Value:
          type: string
          maxLength: 256
          minLength: 1
      required:
        - Key
      additionalProperties: false
    TagFilter:
      oneOf:
        - type: object
          title: TagCondition
          properties:
            TagCondition:
              $ref: '#/components/schemas/TagCondition'
          required:
            - TagCondition
          additionalProperties: false
        - type: object
          title: AndConditions
          properties:
            AndConditions:
              type: array
              items:
                $ref: '#/components/schemas/TagCondition'
          required:
            - AndConditions
          additionalProperties: false
        - type: object
          title: OrConditions
          properties:
            OrConditions:
              type: array
              items:
                $ref: '#/components/schemas/OrCondition'
          required:
            - OrConditions
          additionalProperties: false
    Tags:
      type: object
      x-patternProperties:
        ^(?!aws:)[a-zA-Z+-=._:/]+$:
          type: string
          maxLength: 256
          minLength: 1
      additionalProperties: false
    AIAgent:
      type: object
      properties:
        AIAgentId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
        AIAgentArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        Configuration:
          $ref: '#/components/schemas/AIAgentConfiguration'
        Description:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^[a-zA-Z0-9\s_.,-]+
        Name:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^[a-zA-Z0-9\s_.,-]+
        Tags:
          $ref: '#/components/schemas/Tags'
        Type:
          $ref: '#/components/schemas/AIAgentType'
        ModifiedTimeSeconds:
          type: number
      required:
        - AssistantId
        - Configuration
        - Type
      x-stackql-resource-name: ai_agent
      description: Definition of AWS::Wisdom::AIAgent Resource Type
      x-type-name: AWS::Wisdom::AIAgent
      x-stackql-primary-identifier:
        - AIAgentId
        - AssistantId
      x-stackql-additional-identifiers:
        - - AIAgentArn
          - AssistantArn
      x-create-only-properties:
        - AssistantId
        - Name
        - Tags
        - Type
      x-read-only-properties:
        - AIAgentArn
        - AIAgentId
        - AssistantArn
        - ModifiedTimeSeconds
      x-required-properties:
        - AssistantId
        - Configuration
        - Type
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - wisdom:TagResource
      x-required-permissions:
        create:
          - wisdom:CreateAIAgent
          - wisdom:TagResource
        read:
          - wisdom:GetAIAgent
        update:
          - wisdom:UpdateAIAgent
        delete:
          - wisdom:DeleteAIAgent
        list:
          - wisdom:ListAIAgents
    AIAgentVersion:
      type: object
      properties:
        AIAgentArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AIAgentId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AIAgentVersionId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        VersionNumber:
          type: number
        ModifiedTimeSeconds:
          type: number
      required:
        - AssistantId
        - AIAgentId
      x-stackql-resource-name: ai_agent_version
      description: Definition of AWS::Wisdom::AIAgentVersion Resource Type
      x-type-name: AWS::Wisdom::AIAgentVersion
      x-stackql-primary-identifier:
        - AssistantId
        - AIAgentId
        - VersionNumber
      x-stackql-additional-identifiers:
        - - AIAgentArn
          - AssistantArn
      x-create-only-properties:
        - AssistantId
        - AIAgentId
        - ModifiedTimeSeconds
      x-read-only-properties:
        - AIAgentVersionId
        - AIAgentArn
        - AssistantArn
        - VersionNumber
      x-required-properties:
        - AssistantId
        - AIAgentId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - wisdom:CreateAIAgentVersion
        read:
          - wisdom:GetAIAgent
          - wisdom:GetAIAgentVersion
        update:
          - wisdom:GetAIAgent
          - wisdom:GetAIAgentVersion
        delete:
          - wisdom:DeleteAIAgentVersion
        list:
          - wisdom:ListAIAgentVersions
    AIGuardrailContentPolicyConfig:
      type: object
      description: Content policy config for a guardrail.
      properties:
        FiltersConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuardrailContentFilterConfig'
          maxItems: 6
          minItems: 1
          description: List of content filter configs in content policy.
      required:
        - FiltersConfig
      additionalProperties: false
    AIGuardrailContextualGroundingPolicyConfig:
      type: object
      description: Contextual grounding policy config for a guardrail.
      properties:
        FiltersConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuardrailContextualGroundingFilterConfig'
          minItems: 1
          description: List of contextual grounding filter configs.
      required:
        - FiltersConfig
      additionalProperties: false
    AIGuardrailSensitiveInformationPolicyConfig:
      type: object
      description: Sensitive information policy config for a guardrail.
      properties:
        PiiEntitiesConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuardrailPiiEntityConfig'
          minItems: 1
          uniqueItems: true
          description: List of entities.
        RegexesConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuardrailRegexConfig'
          minItems: 1
          description: List of regex.
      additionalProperties: false
    AIGuardrailTopicPolicyConfig:
      type: object
      description: Topic policy config for a guardrail.
      properties:
        TopicsConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuardrailTopicConfig'
          minItems: 1
          description: List of topic configs in topic policy.
      required:
        - TopicsConfig
      additionalProperties: false
    AIGuardrailWordPolicyConfig:
      type: object
      description: Word policy config for a guardrail.
      properties:
        WordsConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuardrailWordConfig'
          minItems: 1
          description: List of custom word configs.
        ManagedWordListsConfig:
          type: array
          items:
            $ref: '#/components/schemas/GuardrailManagedWordsConfig'
          description: A config for the list of managed words.
      additionalProperties: false
    GuardrailContentFilterConfig:
      type: object
      description: Content filter config in content policy.
      properties:
        Type:
          $ref: '#/components/schemas/GuardrailContentFilterType'
        InputStrength:
          $ref: '#/components/schemas/GuardrailFilterStrength'
        OutputStrength:
          $ref: '#/components/schemas/GuardrailFilterStrength'
      required:
        - InputStrength
        - OutputStrength
        - Type
      additionalProperties: false
    GuardrailContentFilterType:
      type: string
      description: Type of text to text filter in content policy
      enum:
        - SEXUAL
        - VIOLENCE
        - HATE
        - INSULTS
        - MISCONDUCT
        - PROMPT_ATTACK
    GuardrailContextualGroundingFilterConfig:
      type: object
      description: A config for grounding filter.
      properties:
        Type:
          $ref: '#/components/schemas/GuardrailContextualGroundingFilterType'
        Threshold:
          type: number
          default: 0
          minimum: 0
          description: The threshold for this filter.
      required:
        - Threshold
        - Type
      additionalProperties: false
    GuardrailContextualGroundingFilterType:
      type: string
      description: Type of contextual grounding filter
      enum:
        - GROUNDING
        - RELEVANCE
    GuardrailFilterStrength:
      type: string
      description: Strength for filters
      enum:
        - NONE
        - LOW
        - MEDIUM
        - HIGH
    GuardrailManagedWordsConfig:
      type: object
      description: A managed words config.
      properties:
        Type:
          $ref: '#/components/schemas/GuardrailManagedWordsType'
      required:
        - Type
      additionalProperties: false
    GuardrailManagedWordsType:
      type: string
      description: Options for managed words.
      enum:
        - PROFANITY
    GuardrailPiiEntityConfig:
      type: object
      description: Pii entity configuration.
      properties:
        Type:
          $ref: '#/components/schemas/GuardrailPiiEntityType'
        Action:
          $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
      required:
        - Action
        - Type
      additionalProperties: false
    GuardrailPiiEntityType:
      type: string
      description: The currently supported PII entities
      enum:
        - ADDRESS
        - AGE
        - AWS_ACCESS_KEY
        - AWS_SECRET_KEY
        - CA_HEALTH_NUMBER
        - CA_SOCIAL_INSURANCE_NUMBER
        - CREDIT_DEBIT_CARD_CVV
        - CREDIT_DEBIT_CARD_EXPIRY
        - CREDIT_DEBIT_CARD_NUMBER
        - DRIVER_ID
        - EMAIL
        - INTERNATIONAL_BANK_ACCOUNT_NUMBER
        - IP_ADDRESS
        - LICENSE_PLATE
        - MAC_ADDRESS
        - NAME
        - PASSWORD
        - PHONE
        - PIN
        - SWIFT_CODE
        - UK_NATIONAL_HEALTH_SERVICE_NUMBER
        - UK_NATIONAL_INSURANCE_NUMBER
        - UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER
        - URL
        - USERNAME
        - US_BANK_ACCOUNT_NUMBER
        - US_BANK_ROUTING_NUMBER
        - US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER
        - US_PASSPORT_NUMBER
        - US_SOCIAL_SECURITY_NUMBER
        - VEHICLE_IDENTIFICATION_NUMBER
    GuardrailRegexConfig:
      type: object
      description: A regex configuration.
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          description: The regex name.
        Description:
          type: string
          maxLength: 1000
          minLength: 1
          description: The regex description.
        Pattern:
          type: string
          minLength: 1
          description: The regex pattern.
        Action:
          $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
      required:
        - Action
        - Name
        - Pattern
      additionalProperties: false
    GuardrailSensitiveInformationAction:
      type: string
      description: Options for sensitive information action.
      enum:
        - BLOCK
        - ANONYMIZE
    GuardrailTopicConfig:
      type: object
      description: Topic config in topic policy.
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[0-9a-zA-Z-_ !?.]+$
          description: Name of topic in topic policy
        Definition:
          type: string
          maxLength: 200
          minLength: 1
          description: Definition of topic in topic policy
        Examples:
          type: array
          items:
            type: string
            maxLength: 100
            minLength: 1
            description: Text example in topic policy
          minItems: 0
          description: List of text examples
        Type:
          $ref: '#/components/schemas/GuardrailTopicType'
      required:
        - Definition
        - Name
        - Type
      additionalProperties: false
    GuardrailTopicType:
      type: string
      description: Type of topic in a policy
      enum:
        - DENY
    GuardrailWordConfig:
      type: object
      description: A custom word config.
      properties:
        Text:
          type: string
          minLength: 1
          description: The custom word text.
      required:
        - Text
      additionalProperties: false
    AIGuardrail:
      type: object
      properties:
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        AIGuardrailArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        AIGuardrailId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
        Name:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^[a-zA-Z0-9\s_.,-]+
        BlockedInputMessaging:
          type: string
          maxLength: 500
          minLength: 1
          description: Messaging for when violations are detected in text
        BlockedOutputsMessaging:
          type: string
          maxLength: 500
          minLength: 1
          description: Messaging for when violations are detected in text
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the guardrail or its version
        TopicPolicyConfig:
          $ref: '#/components/schemas/AIGuardrailTopicPolicyConfig'
        ContentPolicyConfig:
          $ref: '#/components/schemas/AIGuardrailContentPolicyConfig'
        WordPolicyConfig:
          $ref: '#/components/schemas/AIGuardrailWordPolicyConfig'
        SensitiveInformationPolicyConfig:
          $ref: '#/components/schemas/AIGuardrailSensitiveInformationPolicyConfig'
        ContextualGroundingPolicyConfig:
          $ref: '#/components/schemas/AIGuardrailContextualGroundingPolicyConfig'
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - AssistantId
        - BlockedInputMessaging
        - BlockedOutputsMessaging
      x-stackql-resource-name: ai_guardrail
      description: Definition of AWS::Wisdom::AIGuardrail Resource Type
      x-type-name: AWS::Wisdom::AIGuardrail
      x-stackql-primary-identifier:
        - AIGuardrailId
        - AssistantId
      x-stackql-additional-identifiers:
        - - AIGuardrailArn
          - AssistantArn
      x-create-only-properties:
        - AssistantId
        - Name
        - Tags
      x-read-only-properties:
        - AIGuardrailArn
        - AIGuardrailId
        - AssistantArn
      x-required-properties:
        - AssistantId
        - BlockedInputMessaging
        - BlockedOutputsMessaging
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - wisdom:TagResource
      x-required-permissions:
        create:
          - wisdom:CreateAIGuardrail
          - wisdom:TagResource
        read:
          - wisdom:GetAIGuardrail
        update:
          - wisdom:UpdateAIGuardrail
        delete:
          - wisdom:DeleteAIGuardrail
        list:
          - wisdom:ListAIGuardrails
    AIGuardrailVersion:
      type: object
      properties:
        AIGuardrailArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AIGuardrailId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AIGuardrailVersionId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        VersionNumber:
          type: number
        ModifiedTimeSeconds:
          type: number
      required:
        - AssistantId
        - AIGuardrailId
      x-stackql-resource-name: ai_guardrail_version
      description: Definition of AWS::Wisdom::AIGuardrailVersion Resource Type
      x-type-name: AWS::Wisdom::AIGuardrailVersion
      x-stackql-primary-identifier:
        - AssistantId
        - AIGuardrailId
        - VersionNumber
      x-stackql-additional-identifiers:
        - - AIGuardrailArn
          - AssistantArn
      x-create-only-properties:
        - AssistantId
        - AIGuardrailId
        - ModifiedTimeSeconds
      x-read-only-properties:
        - AIGuardrailVersionId
        - AIGuardrailArn
        - AssistantArn
        - VersionNumber
      x-required-properties:
        - AssistantId
        - AIGuardrailId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - wisdom:CreateAIGuardrailVersion
        read:
          - wisdom:GetAIGuardrail
          - wisdom:GetAIGuardrailVersion
        update:
          - wisdom:GetAIGuardrail
          - wisdom:GetAIGuardrailVersion
        delete:
          - wisdom:DeleteAIGuardrailVersion
        list:
          - wisdom:ListAIGuardrailVersions
    AIPromptAPIFormat:
      type: string
      enum:
        - ANTHROPIC_CLAUDE_MESSAGES
        - ANTHROPIC_CLAUDE_TEXT_COMPLETIONS
    AIPromptTemplateConfiguration:
      type: object
      oneOf:
        - type: object
          title: TextFullAIPromptEditTemplateConfiguration
          properties:
            TextFullAIPromptEditTemplateConfiguration:
              $ref: '#/components/schemas/TextFullAIPromptEditTemplateConfiguration'
          required:
            - TextFullAIPromptEditTemplateConfiguration
          additionalProperties: false
    AIPromptTemplateType:
      type: string
      enum:
        - TEXT
    AIPromptType:
      type: string
      enum:
        - ANSWER_GENERATION
        - INTENT_LABELING_GENERATION
        - QUERY_REFORMULATION
        - SELF_SERVICE_PRE_PROCESSING
        - SELF_SERVICE_ANSWER_GENERATION
    TextFullAIPromptEditTemplateConfiguration:
      type: object
      properties:
        Text:
          type: string
          maxLength: 200000
          minLength: 1
      required:
        - Text
      additionalProperties: false
    AIPrompt:
      type: object
      properties:
        AIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
        AIPromptArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        ApiFormat:
          $ref: '#/components/schemas/AIPromptAPIFormat'
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
        Description:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^[a-zA-Z0-9\s_.,-]+
        ModelId:
          type: string
          maxLength: 2048
          minLength: 1
        Name:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^[a-zA-Z0-9\s_.,-]+
        Tags:
          $ref: '#/components/schemas/Tags'
        TemplateConfiguration:
          $ref: '#/components/schemas/AIPromptTemplateConfiguration'
        TemplateType:
          $ref: '#/components/schemas/AIPromptTemplateType'
        Type:
          $ref: '#/components/schemas/AIPromptType'
        ModifiedTimeSeconds:
          type: number
      required:
        - ApiFormat
        - ModelId
        - TemplateConfiguration
        - TemplateType
        - Type
      x-stackql-resource-name: ai_prompt
      description: Definition of AWS::Wisdom::AIPrompt Resource Type
      x-type-name: AWS::Wisdom::AIPrompt
      x-stackql-primary-identifier:
        - AIPromptId
        - AssistantId
      x-stackql-additional-identifiers:
        - - AIPromptArn
          - AssistantArn
      x-create-only-properties:
        - ApiFormat
        - AssistantId
        - ModelId
        - Name
        - Tags
        - TemplateType
        - Type
      x-read-only-properties:
        - AIPromptArn
        - AIPromptId
        - AssistantArn
        - ModifiedTimeSeconds
      x-required-properties:
        - ApiFormat
        - ModelId
        - TemplateConfiguration
        - TemplateType
        - Type
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - wisdom:TagResource
      x-required-permissions:
        create:
          - wisdom:CreateAIPrompt
          - wisdom:TagResource
        read:
          - wisdom:GetAIPrompt
        update:
          - wisdom:UpdateAIPrompt
        delete:
          - wisdom:DeleteAIPrompt
        list:
          - wisdom:ListAIPrompts
    AIPromptVersion:
      type: object
      properties:
        AIPromptArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AIPromptId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AIPromptVersionId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
        VersionNumber:
          type: number
        ModifiedTimeSeconds:
          type: number
      required:
        - AssistantId
        - AIPromptId
      x-stackql-resource-name: ai_prompt_version
      description: Definition of AWS::Wisdom::AIPromptVersion Resource Type
      x-type-name: AWS::Wisdom::AIPromptVersion
      x-stackql-primary-identifier:
        - AssistantId
        - AIPromptId
        - VersionNumber
      x-stackql-additional-identifiers:
        - - AIPromptArn
          - AssistantArn
      x-create-only-properties:
        - AssistantId
        - AIPromptId
        - ModifiedTimeSeconds
      x-read-only-properties:
        - AIPromptArn
        - AIPromptVersionId
        - AssistantArn
        - VersionNumber
      x-required-properties:
        - AssistantId
        - AIPromptId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - wisdom:CreateAIPromptVersion
        read:
          - wisdom:GetAIPrompt
          - wisdom:GetAIPromptVersion
        update:
          - wisdom:GetAIPrompt
          - wisdom:GetAIPromptVersion
        delete:
          - wisdom:DeleteAIPromptVersion
        list:
          - wisdom:ListAIPromptVersions
    AssistantType:
      type: string
      enum:
        - AGENT
    ServerSideEncryptionConfiguration:
      type: object
      properties:
        KmsKeyId:
          type: string
          maxLength: 4096
          minLength: 1
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -'
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -'
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Assistant:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/AssistantType'
        Description:
          type: string
          maxLength: 255
          minLength: 1
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
        Tags:
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        Name:
          type: string
          maxLength: 255
          minLength: 1
      required:
        - Name
        - Type
      x-stackql-resource-name: assistant
      description: Definition of AWS::Wisdom::Assistant Resource Type
      x-type-name: AWS::Wisdom::Assistant
      x-stackql-primary-identifier:
        - AssistantId
      x-stackql-additional-identifiers:
        - - AssistantArn
      x-create-only-properties:
        - Description
        - Name
        - ServerSideEncryptionConfiguration
        - Tags
        - Type
      x-read-only-properties:
        - AssistantId
        - AssistantArn
      x-required-properties:
        - Name
        - Type
      x-replacement-strategy: delete_then_create
      x-required-permissions:
        create:
          - kms:CreateGrant
          - kms:DescribeKey
          - wisdom:CreateAssistant
          - wisdom:TagResource
        update:
          - wisdom:GetAssistant
        read:
          - wisdom:GetAssistant
        list:
          - wisdom:ListAssistants
        delete:
          - wisdom:DeleteAssistant
    AssociationData:
      type: object
      properties:
        KnowledgeBaseId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      required:
        - KnowledgeBaseId
      additionalProperties: false
    AssociationType:
      type: string
      enum:
        - KNOWLEDGE_BASE
    AssistantAssociation:
      type: object
      properties:
        AssistantAssociationArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantAssociationId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        Association:
          $ref: '#/components/schemas/AssociationData'
        AssociationType:
          $ref: '#/components/schemas/AssociationType'
        Tags:
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
        - Association
        - AssociationType
        - AssistantId
      x-stackql-resource-name: assistant_association
      description: Definition of AWS::Wisdom::AssistantAssociation Resource Type
      x-type-name: AWS::Wisdom::AssistantAssociation
      x-stackql-primary-identifier:
        - AssistantAssociationId
        - AssistantId
      x-stackql-additional-identifiers:
        - - AssistantAssociationArn
          - AssistantArn
      x-create-only-properties:
        - Association
        - AssociationType
        - AssistantId
        - Tags
      x-read-only-properties:
        - AssistantAssociationId
        - AssistantAssociationArn
        - AssistantArn
      x-required-properties:
        - Association
        - AssociationType
        - AssistantId
      x-replacement-strategy: delete_then_create
      x-required-permissions:
        create:
          - wisdom:CreateAssistantAssociation
          - wisdom:TagResource
        update:
          - wisdom:GetAssistantAssociation
        read:
          - wisdom:GetAssistantAssociation
        list:
          - wisdom:ListAssistantAssociations
        delete:
          - wisdom:DeleteAssistantAssociation
    AppIntegrationsConfiguration:
      type: object
      properties:
        ObjectFields:
          type: array
          items:
            type: string
            maxLength: 4096
            minLength: 1
          x-insertionOrder: false
          maxItems: 100
          minItems: 1
        AppIntegrationArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:[a-z-]+?:[a-z-]+?:[a-z0-9-]*?:([0-9]{12})?:[a-zA-Z0-9-:/]+$
      required:
        - AppIntegrationArn
      additionalProperties: false
    KnowledgeBaseType:
      type: string
      enum:
        - EXTERNAL
        - CUSTOM
        - MESSAGE_TEMPLATES
        - MANAGED
    RenderingConfiguration:
      type: object
      properties:
        TemplateUri:
          type: string
          maxLength: 4096
          minLength: 1
      additionalProperties: false
    SeedUrl:
      type: object
      additionalProperties: false
      properties:
        Url:
          type: string
          pattern: ^https?://[A-Za-z0-9][^\s]*$
    UrlFilterPattern:
      type: string
      maxLength: 1000
      minLength: 1
    UrlFilterList:
      type: array
      items:
        $ref: '#/components/schemas/UrlFilterPattern'
      maxItems: 25
      minItems: 1
    WebCrawlerConfiguration:
      type: object
      additionalProperties: false
      properties:
        UrlConfiguration:
          type: object
          additionalProperties: false
          properties:
            SeedUrls:
              type: array
              items:
                $ref: '#/components/schemas/SeedUrl'
              maxItems: 100
              minItems: 1
        CrawlerLimits:
          type: object
          additionalProperties: false
          properties:
            RateLimit:
              type: number
              minimum: 1
              maximum: 3000
        InclusionFilters:
          $ref: '#/components/schemas/UrlFilterList'
        ExclusionFilters:
          $ref: '#/components/schemas/UrlFilterList'
        Scope:
          type: string
          enum:
            - HOST_ONLY
            - SUBDOMAINS
      required:
        - UrlConfiguration
    ManagedSourceConfiguration:
      oneOf:
        - type: object
          properties:
            WebCrawlerConfiguration:
              $ref: '#/components/schemas/WebCrawlerConfiguration'
          required:
            - WebCrawlerConfiguration
          additionalProperties: false
    FixedSizeChunkingConfiguration:
      type: object
      additionalProperties: false
      properties:
        MaxTokens:
          type: number
          minimum: 1
        OverlapPercentage:
          type: number
          minimum: 1
          maximum: 99
      required:
        - MaxTokens
        - OverlapPercentage
    HierarchicalChunkingLevelConfiguration:
      type: object
      additionalProperties: false
      properties:
        MaxTokens:
          type: number
          minimum: 1
          maximum: 8192
      required:
        - MaxTokens
    HierarchicalChunkingConfiguration:
      type: object
      additionalProperties: false
      properties:
        LevelConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/HierarchicalChunkingLevelConfiguration'
          maxItems: 2
          minItems: 2
        OverlapTokens:
          type: number
          minimum: 1
      required:
        - LevelConfigurations
        - OverlapTokens
    SemanticChunkingConfiguration:
      type: object
      additionalProperties: false
      properties:
        MaxTokens:
          type: number
          minimum: 1
        BufferSize:
          type: number
          minimum: 0
          maximum: 1
        BreakpointPercentileThreshold:
          type: number
          minimum: 50
          maximum: 99
      required:
        - MaxTokens
        - BufferSize
        - BreakpointPercentileThreshold
    BedrockFoundationModelConfiguration:
      type: object
      additionalProperties: false
      properties:
        ModelArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model\/anthropic.claude-3-haiku-20240307-v1:0$
        ParsingPrompt:
          type: object
          additionalProperties: false
          properties:
            ParsingPromptText:
              type: string
              maxLength: 10000
              minLength: 1
          required:
            - ParsingPromptText
      required:
        - ModelArn
    VectorIngestionConfiguration:
      type: object
      additionalProperties: false
      properties:
        ChunkingConfiguration:
          type: object
          additionalProperties: false
          properties:
            ChunkingStrategy:
              type: string
              enum:
                - FIXED_SIZE
                - NONE
                - HIERARCHICAL
                - SEMANTIC
            FixedSizeChunkingConfiguration:
              $ref: '#/components/schemas/FixedSizeChunkingConfiguration'
            HierarchicalChunkingConfiguration:
              $ref: '#/components/schemas/HierarchicalChunkingConfiguration'
            SemanticChunkingConfiguration:
              $ref: '#/components/schemas/SemanticChunkingConfiguration'
          required:
            - ChunkingStrategy
        ParsingConfiguration:
          type: object
          additionalProperties: false
          properties:
            ParsingStrategy:
              type: string
              enum:
                - BEDROCK_FOUNDATION_MODEL
            BedrockFoundationModelConfiguration:
              $ref: '#/components/schemas/BedrockFoundationModelConfiguration'
          required:
            - ParsingStrategy
    SourceConfiguration:
      oneOf:
        - type: object
          title: AppIntegrationsConfiguration
          properties:
            AppIntegrations:
              $ref: '#/components/schemas/AppIntegrationsConfiguration'
          required:
            - AppIntegrations
          additionalProperties: false
        - type: object
          title: ManagedSourceConfiguration
          properties:
            ManagedSourceConfiguration:
              $ref: '#/components/schemas/ManagedSourceConfiguration'
          required:
            - ManagedSourceConfiguration
          additionalProperties: false
    KnowledgeBase:
      type: object
      properties:
        Description:
          type: string
          maxLength: 255
          minLength: 1
        KnowledgeBaseArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        KnowledgeBaseId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        KnowledgeBaseType:
          $ref: '#/components/schemas/KnowledgeBaseType'
        Name:
          type: string
          maxLength: 255
          minLength: 1
        RenderingConfiguration:
          $ref: '#/components/schemas/RenderingConfiguration'
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
        SourceConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        VectorIngestionConfiguration:
          $ref: '#/components/schemas/VectorIngestionConfiguration'
        Tags:
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
        - KnowledgeBaseType
        - Name
      x-stackql-resource-name: knowledge_base
      description: Definition of AWS::Wisdom::KnowledgeBase Resource Type
      x-type-name: AWS::Wisdom::KnowledgeBase
      x-stackql-primary-identifier:
        - KnowledgeBaseId
      x-stackql-additional-identifiers:
        - - KnowledgeBaseArn
      x-create-only-properties:
        - Description
        - KnowledgeBaseType
        - Name
        - ServerSideEncryptionConfiguration
        - SourceConfiguration
        - Tags
      x-read-only-properties:
        - KnowledgeBaseId
        - KnowledgeBaseArn
      x-required-properties:
        - KnowledgeBaseType
        - Name
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - wisdom:TagResource
      x-required-permissions:
        create:
          - appflow:CreateFlow
          - appflow:DeleteFlow
          - appflow:StartFlow
          - appflow:TagResource
          - appflow:UseConnectorProfile
          - app-integrations:CreateDataIntegrationAssociation
          - app-integrations:GetDataIntegration
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:ListGrants
          - wisdom:CreateKnowledgeBase
          - wisdom:TagResource
        update:
          - wisdom:GetKnowledgeBase
        delete:
          - appflow:DeleteFlow
          - appflow:StopFlow
          - app-integrations:DeleteDataIntegrationAssociation
          - wisdom:DeleteKnowledgeBase
        list:
          - wisdom:ListKnowledgeBases
        read:
          - wisdom:GetKnowledgeBase
    ChannelSubtype:
      description: The channel subtype this message template applies to.
      type: string
      enum:
        - EMAIL
        - SMS
    Content:
      description: The content of the message template.
      type: object
      properties:
        EmailMessageTemplateContent:
          $ref: '#/components/schemas/EmailMessageTemplateContent'
        SmsMessageTemplateContent:
          $ref: '#/components/schemas/SmsMessageTemplateContent'
      oneOf:
        - required:
            - EmailMessageTemplateContent
        - required:
            - SmsMessageTemplateContent
      additionalProperties: false
    EmailMessageTemplateContent:
      description: The content of message template that applies to email channel subtype.
      type: object
      properties:
        Subject:
          description: The subject line, or title, to use in email messages.
          type: string
          minLength: 1
        Body:
          $ref: '#/components/schemas/EmailMessageTemplateContentBody'
        Headers:
          description: The email headers to include in email messages.
          type: array
          items:
            $ref: '#/components/schemas/EmailMessageTemplateHeader'
          uniqueItems: true
          x-insertionOrder: true
          minItems: 0
          maxItems: 15
      required:
        - Subject
        - Body
        - Headers
      additionalProperties: false
    EmailMessageTemplateContentBody:
      description: The body to use in email messages.
      type: object
      properties:
        PlainText:
          description: The message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don't render HTML content and clients that are connected to high-latency networks, such as mobile devices.
          $ref: '#/components/schemas/MessageTemplateBodyContentProvider'
        Html:
          description: The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.
          $ref: '#/components/schemas/MessageTemplateBodyContentProvider'
      additionalProperties: false
    EmailMessageTemplateHeader:
      description: The email header to include in email messages.
      type: object
      properties:
        Name:
          description: The name of the email header.
          type: string
          pattern: ^[!-9;-@A-~]+$
          minLength: 1
          maxLength: 126
        Value:
          description: The value of the email header.
          type: string
          pattern: '[ -~]*'
          minLength: 1
          maxLength: 870
      additionalProperties: false
    SmsMessageTemplateContent:
      description: The content of message template that applies to SMS channel subtype.
      type: object
      properties:
        Body:
          $ref: '#/components/schemas/SmsMessageTemplateContentBody'
      required:
        - Body
      additionalProperties: false
    SmsMessageTemplateContentBody:
      description: The body to use in SMS messages.
      type: object
      properties:
        PlainText:
          $ref: '#/components/schemas/MessageTemplateBodyContentProvider'
      additionalProperties: false
    MessageTemplateBodyContentProvider:
      description: The container of message template body.
      type: object
      properties:
        Content:
          type: string
          minLength: 1
      additionalProperties: false
    MessageTemplateAttributes:
      description: An object that specifies the default values to use for variables in the message template. This object contains different categories of key-value pairs. Each key defines a variable or placeholder in the message template. The corresponding value defines the default value for that variable.
      type: object
      properties:
        SystemAttributes:
          $ref: '#/components/schemas/SystemAttributes'
        AgentAttributes:
          $ref: '#/components/schemas/AgentAttributes'
        CustomerProfileAttributes:
          $ref: '#/components/schemas/CustomerProfileAttributes'
        CustomAttributes:
          $ref: '#/components/schemas/CustomAttributes'
      additionalProperties: false
    SystemAttributes:
      description: The system attributes that are used with the message template.
      type: object
      properties:
        Name:
          description: The name of the task.
          type: string
          minLength: 1
          maxLength: 32767
        CustomerEndpoint:
          description: The CustomerEndpoint attribute.
          $ref: '#/components/schemas/SystemEndpointAttributes'
        SystemEndpoint:
          description: The SystemEndpoint attribute.
          $ref: '#/components/schemas/SystemEndpointAttributes'
      additionalProperties: false
    SystemEndpointAttributes:
      description: The system endpoint attributes that are used with the message template.
      type: object
      properties:
        Address:
          description: The customer's phone number if used with customerEndpoint, or the number the customer dialed to call your contact center if used with systemEndpoint.
          type: string
          minLength: 1
          maxLength: 32767
      additionalProperties: false
    AgentAttributes:
      description: The agent attributes that are used with the message template.
      type: object
      properties:
        FirstName:
          description: The agent’s first name as entered in their Amazon Connect user account.
          type: string
          minLength: 1
          maxLength: 32767
        LastName:
          description: The agent’s last name as entered in their Amazon Connect user account.
          type: string
          minLength: 1
          maxLength: 32767
      additionalProperties: false
    CustomerProfileAttributes:
      description: The customer profile attributes that are used with the message template.
      type: object
      properties:
        ProfileId:
          description: The unique identifier of a customer profile.
          type: string
          minLength: 1
          maxLength: 32767
        ProfileARN:
          description: The ARN of a customer profile.
          type: string
          minLength: 1
          maxLength: 32767
        FirstName:
          description: The customer's first name.
          type: string
          minLength: 1
          maxLength: 32767
        MiddleName:
          description: The customer's middle name.
          type: string
          minLength: 1
          maxLength: 32767
        LastName:
          description: The customer's last name.
          type: string
          minLength: 1
          maxLength: 32767
        AccountNumber:
          description: A unique account number that you have given to the customer.
          type: string
          minLength: 1
          maxLength: 32767
        EmailAddress:
          description: The customer's email address, which has not been specified as a personal or business address.
          type: string
          minLength: 1
          maxLength: 32767
        PhoneNumber:
          description: The customer's phone number, which has not been specified as a mobile, home, or business number.
          type: string
          minLength: 1
          maxLength: 32767
        AdditionalInformation:
          description: Any additional information relevant to the customer's profile.
          type: string
          minLength: 1
          maxLength: 32767
        PartyType:
          description: The customer's party type.
          type: string
          minLength: 1
          maxLength: 32767
        BusinessName:
          description: The name of the customer's business.
          type: string
          minLength: 1
          maxLength: 32767
        BirthDate:
          description: The customer's birth date.
          type: string
          minLength: 1
          maxLength: 32767
        Gender:
          description: The customer's gender.
          type: string
          minLength: 1
          maxLength: 32767
        MobilePhoneNumber:
          description: The customer's mobile phone number.
          type: string
          minLength: 1
          maxLength: 32767
        HomePhoneNumber:
          description: The customer's home phone number.
          type: string
          minLength: 1
          maxLength: 32767
        BusinessPhoneNumber:
          description: The customer's business phone number.
          type: string
          minLength: 1
          maxLength: 32767
        BusinessEmailAddress:
          description: The customer's business email address.
          type: string
          minLength: 1
          maxLength: 32767
        Address1:
          description: The first line of a customer address.
          type: string
          minLength: 1
          maxLength: 32767
        Address2:
          description: The second line of a customer address.
          type: string
          minLength: 1
          maxLength: 32767
        Address3:
          description: The third line of a customer address.
          type: string
          minLength: 1
          maxLength: 32767
        Address4:
          description: The fourth line of a customer address.
          type: string
          minLength: 1
          maxLength: 32767
        City:
          description: The city in which a customer lives.
          type: string
          minLength: 1
          maxLength: 32767
        County:
          description: The county in which a customer lives.
          type: string
          minLength: 1
          maxLength: 32767
        Country:
          description: The country in which a customer lives.
          type: string
          minLength: 1
          maxLength: 32767
        PostalCode:
          description: The postal code of a customer address.
          type: string
          minLength: 1
          maxLength: 32767
        Province:
          description: The province in which a customer lives.
          type: string
          minLength: 1
          maxLength: 32767
        State:
          description: The state in which a customer lives.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingAddress1:
          description: The first line of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingAddress2:
          description: The second line of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingAddress3:
          description: The third line of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingAddress4:
          description: The fourth line of a customer’s shipping address
          type: string
          minLength: 1
          maxLength: 32767
        ShippingCity:
          description: The city of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingCounty:
          description: The county of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingCountry:
          description: The country of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingPostalCode:
          description: The postal code of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingProvince:
          description: The province of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        ShippingState:
          description: The state of a customer’s shipping address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingAddress1:
          description: The first line of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingAddress2:
          description: The second line of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingAddress3:
          description: The third line of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingAddress4:
          description: The fourth line of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingCity:
          description: The city of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingCounty:
          description: The county of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingCountry:
          description: The country of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingPostalCode:
          description: The postal code of a customer’s mailing address
          type: string
          minLength: 1
          maxLength: 32767
        MailingProvince:
          description: The province of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        MailingState:
          description: The state of a customer’s mailing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingAddress1:
          description: The first line of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingAddress2:
          description: The second line of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingAddress3:
          description: The third line of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingAddress4:
          description: The fourth line of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingCity:
          description: The city of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingCounty:
          description: The county of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingCountry:
          description: The country of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingPostalCode:
          description: The postal code of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingProvince:
          description: The province of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        BillingState:
          description: The state of a customer’s billing address.
          type: string
          minLength: 1
          maxLength: 32767
        Custom:
          $ref: '#/components/schemas/CustomAttributes'
      additionalProperties: false
    CustomAttributes:
      description: The custom attributes that are used with the message template.
      type: object
      x-patternProperties:
        ^[a-zA-Z0-9\s._:/=+@-]*$:
          description: Value of a custom attribute.
          type: string
          minLength: 1
          maxLength: 32767
      additionalProperties: false
    GroupingConfiguration:
      description: The configuration information of the user groups that the message template is accessible to.
      type: object
      properties:
        Criteria:
          description: The criteria used for grouping Amazon Q in Connect users.
          type: string
          minLength: 1
          maxLength: 100
        Values:
          description: The list of values that define different groups of Amazon Q in Connect users.
          type: array
          items:
            $ref: '#/components/schemas/GroupingValue'
          x-insertionOrder: true
          uniqueItems: true
      required:
        - Criteria
        - Values
      additionalProperties: false
    GroupingValue:
      description: The value that define the group of Amazon Q in Connect users.
      type: string
      minLength: 1
      maxLength: 2048
    MessageTemplate:
      type: object
      properties:
        KnowledgeBaseArn:
          description: The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        MessageTemplateId:
          description: The unique identifier of the message template.
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        MessageTemplateArn:
          description: The Amazon Resource Name (ARN) of the message template.
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        Name:
          description: The name of the message template.
          type: string
          pattern: ^[a-zA-Z0-9\\s_.,-]+
          minLength: 1
          maxLength: 255
        ChannelSubtype:
          $ref: '#/components/schemas/ChannelSubtype'
        Content:
          $ref: '#/components/schemas/Content'
        Description:
          description: The description of the message template.
          type: string
          pattern: ^[a-zA-Z0-9\\s_.,-]+
          minLength: 1
          maxLength: 255
        Language:
          description: The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW
          type: string
          minLength: 2
          maxLength: 5
        GroupingConfiguration:
          $ref: '#/components/schemas/GroupingConfiguration'
        DefaultAttributes:
          $ref: '#/components/schemas/MessageTemplateAttributes'
        MessageTemplateContentSha256:
          description: The content SHA256 of the message template.
          type: string
          minLength: 1
          maxLength: 64
        Tags:
          description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
        - KnowledgeBaseArn
        - ChannelSubtype
        - Name
        - Content
      x-stackql-resource-name: message_template
      description: Definition of AWS::Wisdom::MessageTemplate Resource Type
      x-type-name: AWS::Wisdom::MessageTemplate
      x-stackql-primary-identifier:
        - MessageTemplateArn
      x-create-only-properties:
        - KnowledgeBaseArn
        - ChannelSubtype
      x-read-only-properties:
        - MessageTemplateId
        - MessageTemplateArn
        - MessageTemplateContentSha256
      x-required-properties:
        - KnowledgeBaseArn
        - ChannelSubtype
        - Name
        - Content
      x-replacement-strategy: create_then_delete
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - wisdom:TagResource
          - wisdom:UntagResource
      x-required-permissions:
        create:
          - wisdom:CreateMessageTemplate
          - wisdom:GetMessageTemplate
          - wisdom:TagResource
          - connect:SearchRoutingProfiles
          - connect:DescribeRoutingProfile
        update:
          - wisdom:UpdateMessageTemplate
          - wisdom:UpdateMessageTemplateMetadata
          - wisdom:GetMessageTemplate
          - wisdom:TagResource
          - wisdom:UntagResource
          - connect:SearchRoutingProfiles
          - connect:DescribeRoutingProfile
        delete:
          - wisdom:DeleteMessageTemplate
          - wisdom:UntagResource
        list:
          - wisdom:ListMessageTemplates
        read:
          - wisdom:GetMessageTemplate
    MessageTemplateVersion:
      type: object
      properties:
        MessageTemplateArn:
          description: The unqualified Amazon Resource Name (ARN) of the message template.
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        MessageTemplateVersionArn:
          description: The unqualified Amazon Resource Name (ARN) of the message template version.
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}):[0-9]+?$
        MessageTemplateContentSha256:
          description: The content SHA256 of the message template.
          type: string
          minLength: 1
          maxLength: 64
        MessageTemplateVersionNumber:
          description: Current version number of the message template.
          type: number
      required:
        - MessageTemplateArn
      x-stackql-resource-name: message_template_version
      description: A version for the specified customer-managed message template within the specified knowledge base.
      x-type-name: AWS::Wisdom::MessageTemplateVersion
      x-stackql-primary-identifier:
        - MessageTemplateVersionArn
      x-create-only-properties:
        - MessageTemplateArn
      x-conditional-create-only-properties:
        - MessageTemplateContentSha256
      x-read-only-properties:
        - MessageTemplateVersionNumber
        - MessageTemplateVersionArn
      x-required-properties:
        - MessageTemplateArn
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - wisdom:CreateMessageTemplateVersion
          - wisdom:ListMessageTemplateVersions
        delete:
          - wisdom:DeleteMessageTemplate
        update:
          - wisdom:CreateMessageTemplateVersion
        list:
          - wisdom:ListMessageTemplateVersions
        read:
          - wisdom:GetMessageTemplate
    CreateAIAgentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AIAgentId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
            AIAgentArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            Configuration:
              $ref: '#/components/schemas/AIAgentConfiguration'
            Description:
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^[a-zA-Z0-9\s_.,-]+
            Name:
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^[a-zA-Z0-9\s_.,-]+
            Tags:
              $ref: '#/components/schemas/Tags'
            Type:
              $ref: '#/components/schemas/AIAgentType'
            ModifiedTimeSeconds:
              type: number
          x-stackQL-stringOnly: true
      x-title: CreateAIAgentRequest
      type: object
      required: []
    CreateAIAgentVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AIAgentArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AIAgentId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            AIAgentVersionId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
            VersionNumber:
              type: number
            ModifiedTimeSeconds:
              type: number
          x-stackQL-stringOnly: true
      x-title: CreateAIAgentVersionRequest
      type: object
      required: []
    CreateAIGuardrailRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            AIGuardrailArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            AIGuardrailId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
            Name:
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^[a-zA-Z0-9\s_.,-]+
            BlockedInputMessaging:
              type: string
              maxLength: 500
              minLength: 1
              description: Messaging for when violations are detected in text
            BlockedOutputsMessaging:
              type: string
              maxLength: 500
              minLength: 1
              description: Messaging for when violations are detected in text
            Description:
              type: string
              maxLength: 200
              minLength: 1
              description: Description of the guardrail or its version
            TopicPolicyConfig:
              $ref: '#/components/schemas/AIGuardrailTopicPolicyConfig'
            ContentPolicyConfig:
              $ref: '#/components/schemas/AIGuardrailContentPolicyConfig'
            WordPolicyConfig:
              $ref: '#/components/schemas/AIGuardrailWordPolicyConfig'
            SensitiveInformationPolicyConfig:
              $ref: '#/components/schemas/AIGuardrailSensitiveInformationPolicyConfig'
            ContextualGroundingPolicyConfig:
              $ref: '#/components/schemas/AIGuardrailContextualGroundingPolicyConfig'
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateAIGuardrailRequest
      type: object
      required: []
    CreateAIGuardrailVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AIGuardrailArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AIGuardrailId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            AIGuardrailVersionId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
            VersionNumber:
              type: number
            ModifiedTimeSeconds:
              type: number
          x-stackQL-stringOnly: true
      x-title: CreateAIGuardrailVersionRequest
      type: object
      required: []
    CreateAIPromptRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AIPromptId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
            AIPromptArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            ApiFormat:
              $ref: '#/components/schemas/AIPromptAPIFormat'
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
            Description:
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^[a-zA-Z0-9\s_.,-]+
            ModelId:
              type: string
              maxLength: 2048
              minLength: 1
            Name:
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^[a-zA-Z0-9\s_.,-]+
            Tags:
              $ref: '#/components/schemas/Tags'
            TemplateConfiguration:
              $ref: '#/components/schemas/AIPromptTemplateConfiguration'
            TemplateType:
              $ref: '#/components/schemas/AIPromptTemplateType'
            Type:
              $ref: '#/components/schemas/AIPromptType'
            ModifiedTimeSeconds:
              type: number
          x-stackQL-stringOnly: true
      x-title: CreateAIPromptRequest
      type: object
      required: []
    CreateAIPromptVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AIPromptArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AIPromptId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            AIPromptVersionId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
            VersionNumber:
              type: number
            ModifiedTimeSeconds:
              type: number
          x-stackQL-stringOnly: true
      x-title: CreateAIPromptVersionRequest
      type: object
      required: []
    CreateAssistantRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Type:
              $ref: '#/components/schemas/AssistantType'
            Description:
              type: string
              maxLength: 255
              minLength: 1
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            ServerSideEncryptionConfiguration:
              $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
            Tags:
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
              type: array
            Name:
              type: string
              maxLength: 255
              minLength: 1
          x-stackQL-stringOnly: true
      x-title: CreateAssistantRequest
      type: object
      required: []
    CreateAssistantAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AssistantAssociationArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AssistantArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            AssistantAssociationId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            AssistantId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            Association:
              $ref: '#/components/schemas/AssociationData'
            AssociationType:
              $ref: '#/components/schemas/AssociationType'
            Tags:
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
              type: array
          x-stackQL-stringOnly: true
      x-title: CreateAssistantAssociationRequest
      type: object
      required: []
    CreateKnowledgeBaseRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              maxLength: 255
              minLength: 1
            KnowledgeBaseArn:
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            KnowledgeBaseId:
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            KnowledgeBaseType:
              $ref: '#/components/schemas/KnowledgeBaseType'
            Name:
              type: string
              maxLength: 255
              minLength: 1
            RenderingConfiguration:
              $ref: '#/components/schemas/RenderingConfiguration'
            ServerSideEncryptionConfiguration:
              $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
            SourceConfiguration:
              $ref: '#/components/schemas/SourceConfiguration'
            VectorIngestionConfiguration:
              $ref: '#/components/schemas/VectorIngestionConfiguration'
            Tags:
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
              type: array
          x-stackQL-stringOnly: true
      x-title: CreateKnowledgeBaseRequest
      type: object
      required: []
    CreateMessageTemplateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            KnowledgeBaseArn:
              description: The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            MessageTemplateId:
              description: The unique identifier of the message template.
              type: string
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            MessageTemplateArn:
              description: The Amazon Resource Name (ARN) of the message template.
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            Name:
              description: The name of the message template.
              type: string
              pattern: ^[a-zA-Z0-9\\s_.,-]+
              minLength: 1
              maxLength: 255
            ChannelSubtype:
              $ref: '#/components/schemas/ChannelSubtype'
            Content:
              $ref: '#/components/schemas/Content'
            Description:
              description: The description of the message template.
              type: string
              pattern: ^[a-zA-Z0-9\\s_.,-]+
              minLength: 1
              maxLength: 255
            Language:
              description: The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW
              type: string
              minLength: 2
              maxLength: 5
            GroupingConfiguration:
              $ref: '#/components/schemas/GroupingConfiguration'
            DefaultAttributes:
              $ref: '#/components/schemas/MessageTemplateAttributes'
            MessageTemplateContentSha256:
              description: The content SHA256 of the message template.
              type: string
              minLength: 1
              maxLength: 64
            Tags:
              description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
              type: array
          x-stackQL-stringOnly: true
      x-title: CreateMessageTemplateRequest
      type: object
      required: []
    CreateMessageTemplateVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            MessageTemplateArn:
              description: The unqualified Amazon Resource Name (ARN) of the message template.
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
            MessageTemplateVersionArn:
              description: The unqualified Amazon Resource Name (ARN) of the message template version.
              type: string
              pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}):[0-9]+?$
            MessageTemplateContentSha256:
              description: The content SHA256 of the message template.
              type: string
              minLength: 1
              maxLength: 64
            MessageTemplateVersionNumber:
              description: Current version number of the message template.
              type: number
          x-stackQL-stringOnly: true
      x-title: CreateMessageTemplateVersionRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    ai_agents:
      name: ai_agents
      id: aws.wisdom.ai_agents
      x-cfn-schema-name: AIAgent
      x-cfn-type-name: AWS::Wisdom::AIAgent
      x-identifiers:
        - AIAgentId
        - AssistantId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AIAgent&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIAgent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIAgent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIAgent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ai_agents/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ai_agents/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ai_agents/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AIAgentId') as a_iagent_id,
              JSON_EXTRACT(Properties, '$.AIAgentArn') as a_iagent_arn,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIAgent'
              AND data__Identifier = '<AIAgentId>|<AssistantId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AIAgentId') as a_iagent_id,
                JSON_EXTRACT(detail.Properties, '$.AIAgentArn') as a_iagent_arn,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIAgent'
                AND detail.data__TypeName = 'AWS::Wisdom::AIAgent'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AIAgentId') as a_iagent_id,
                  json_extract_path_text(Properties, 'AIAgentArn') as a_iagent_arn,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'Configuration') as configuration,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIAgent'
                  AND data__Identifier = '<AIAgentId>|<AssistantId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AIAgentId') as a_iagent_id,
                    json_extract_path_text(detail.Properties, 'AIAgentArn') as a_iagent_arn,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::AIAgent'
                    AND detail.data__TypeName = 'AWS::Wisdom::AIAgent'
                    AND listing.region = 'us-east-1'
    ai_agents_list_only:
      name: ai_agents_list_only
      id: aws.wisdom.ai_agents_list_only
      x-cfn-schema-name: AIAgent
      x-cfn-type-name: AWS::Wisdom::AIAgent
      x-identifiers:
        - AIAgentId
        - AssistantId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AIAgentId') as a_iagent_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIAgent'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AIAgentId') as a_iagent_id,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIAgent'
                AND region = 'us-east-1'
    ai_agent_tags:
      name: ai_agent_tags
      id: aws.wisdom.ai_agent_tags
      x-cfn-schema-name: AIAgent
      x-cfn-type-name: AWS::Wisdom::AIAgent
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AIAgentId') as a_iagent_id,
              JSON_EXTRACT(detail.Properties, '$.AIAgentArn') as a_iagent_arn,
              JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Wisdom::AIAgent'
              AND detail.data__TypeName = 'AWS::Wisdom::AIAgent'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AIAgentId') as a_iagent_id,
                json_extract_path_text(detail.Properties, 'AIAgentArn') as a_iagent_arn,
                json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIAgent'
                AND detail.data__TypeName = 'AWS::Wisdom::AIAgent'
                AND listing.region = 'us-east-1'
    ai_agent_versions:
      name: ai_agent_versions
      id: aws.wisdom.ai_agent_versions
      x-cfn-schema-name: AIAgentVersion
      x-cfn-type-name: AWS::Wisdom::AIAgentVersion
      x-identifiers:
        - AssistantId
        - AIAgentId
        - VersionNumber
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AIAgentVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIAgentVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIAgentVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIAgentVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ai_agent_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ai_agent_versions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ai_agent_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AIAgentArn') as a_iagent_arn,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AIAgentId') as a_iagent_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AIAgentVersionId') as a_iagent_version_id,
              JSON_EXTRACT(Properties, '$.VersionNumber') as version_number,
              JSON_EXTRACT(Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIAgentVersion'
              AND data__Identifier = '<AssistantId>|<AIAgentId>|<VersionNumber>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AIAgentArn') as a_iagent_arn,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.AIAgentId') as a_iagent_id,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.AIAgentVersionId') as a_iagent_version_id,
                JSON_EXTRACT(detail.Properties, '$.VersionNumber') as version_number,
                JSON_EXTRACT(detail.Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIAgentVersion'
                AND detail.data__TypeName = 'AWS::Wisdom::AIAgentVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AIAgentArn') as a_iagent_arn,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'AIAgentId') as a_iagent_id,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'AIAgentVersionId') as a_iagent_version_id,
                  json_extract_path_text(Properties, 'VersionNumber') as version_number,
                  json_extract_path_text(Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIAgentVersion'
                  AND data__Identifier = '<AssistantId>|<AIAgentId>|<VersionNumber>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AIAgentArn') as a_iagent_arn,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'AIAgentId') as a_iagent_id,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'AIAgentVersionId') as a_iagent_version_id,
                    json_extract_path_text(detail.Properties, 'VersionNumber') as version_number,
                    json_extract_path_text(detail.Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::AIAgentVersion'
                    AND detail.data__TypeName = 'AWS::Wisdom::AIAgentVersion'
                    AND listing.region = 'us-east-1'
    ai_agent_versions_list_only:
      name: ai_agent_versions_list_only
      id: aws.wisdom.ai_agent_versions_list_only
      x-cfn-schema-name: AIAgentVersion
      x-cfn-type-name: AWS::Wisdom::AIAgentVersion
      x-identifiers:
        - AssistantId
        - AIAgentId
        - VersionNumber
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AIAgentId') as a_iagent_id,
              JSON_EXTRACT(Properties, '$.VersionNumber') as version_number
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIAgentVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(Properties, 'AIAgentId') as a_iagent_id,
                json_extract_path_text(Properties, 'VersionNumber') as version_number
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIAgentVersion'
                AND region = 'us-east-1'
    ai_guardrails:
      name: ai_guardrails
      id: aws.wisdom.ai_guardrails
      x-cfn-schema-name: AIGuardrail
      x-cfn-type-name: AWS::Wisdom::AIGuardrail
      x-identifiers:
        - AIGuardrailId
        - AssistantId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AIGuardrail&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIGuardrail"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIGuardrail"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIGuardrail"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ai_guardrails/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ai_guardrails/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ai_guardrails/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AIGuardrailArn') as a_iguardrail_arn,
              JSON_EXTRACT(Properties, '$.AIGuardrailId') as a_iguardrail_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.BlockedInputMessaging') as blocked_input_messaging,
              JSON_EXTRACT(Properties, '$.BlockedOutputsMessaging') as blocked_outputs_messaging,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.TopicPolicyConfig') as topic_policy_config,
              JSON_EXTRACT(Properties, '$.ContentPolicyConfig') as content_policy_config,
              JSON_EXTRACT(Properties, '$.WordPolicyConfig') as word_policy_config,
              JSON_EXTRACT(Properties, '$.SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
              JSON_EXTRACT(Properties, '$.ContextualGroundingPolicyConfig') as contextual_grounding_policy_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIGuardrail'
              AND data__Identifier = '<AIGuardrailId>|<AssistantId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.AIGuardrailArn') as a_iguardrail_arn,
                JSON_EXTRACT(detail.Properties, '$.AIGuardrailId') as a_iguardrail_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.BlockedInputMessaging') as blocked_input_messaging,
                JSON_EXTRACT(detail.Properties, '$.BlockedOutputsMessaging') as blocked_outputs_messaging,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.TopicPolicyConfig') as topic_policy_config,
                JSON_EXTRACT(detail.Properties, '$.ContentPolicyConfig') as content_policy_config,
                JSON_EXTRACT(detail.Properties, '$.WordPolicyConfig') as word_policy_config,
                JSON_EXTRACT(detail.Properties, '$.SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                JSON_EXTRACT(detail.Properties, '$.ContextualGroundingPolicyConfig') as contextual_grounding_policy_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIGuardrail'
                AND detail.data__TypeName = 'AWS::Wisdom::AIGuardrail'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'AIGuardrailArn') as a_iguardrail_arn,
                  json_extract_path_text(Properties, 'AIGuardrailId') as a_iguardrail_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'BlockedInputMessaging') as blocked_input_messaging,
                  json_extract_path_text(Properties, 'BlockedOutputsMessaging') as blocked_outputs_messaging,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'TopicPolicyConfig') as topic_policy_config,
                  json_extract_path_text(Properties, 'ContentPolicyConfig') as content_policy_config,
                  json_extract_path_text(Properties, 'WordPolicyConfig') as word_policy_config,
                  json_extract_path_text(Properties, 'SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                  json_extract_path_text(Properties, 'ContextualGroundingPolicyConfig') as contextual_grounding_policy_config,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIGuardrail'
                  AND data__Identifier = '<AIGuardrailId>|<AssistantId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'AIGuardrailArn') as a_iguardrail_arn,
                    json_extract_path_text(detail.Properties, 'AIGuardrailId') as a_iguardrail_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'BlockedInputMessaging') as blocked_input_messaging,
                    json_extract_path_text(detail.Properties, 'BlockedOutputsMessaging') as blocked_outputs_messaging,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'TopicPolicyConfig') as topic_policy_config,
                    json_extract_path_text(detail.Properties, 'ContentPolicyConfig') as content_policy_config,
                    json_extract_path_text(detail.Properties, 'WordPolicyConfig') as word_policy_config,
                    json_extract_path_text(detail.Properties, 'SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                    json_extract_path_text(detail.Properties, 'ContextualGroundingPolicyConfig') as contextual_grounding_policy_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::AIGuardrail'
                    AND detail.data__TypeName = 'AWS::Wisdom::AIGuardrail'
                    AND listing.region = 'us-east-1'
    ai_guardrails_list_only:
      name: ai_guardrails_list_only
      id: aws.wisdom.ai_guardrails_list_only
      x-cfn-schema-name: AIGuardrail
      x-cfn-type-name: AWS::Wisdom::AIGuardrail
      x-identifiers:
        - AIGuardrailId
        - AssistantId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AIGuardrailId') as a_iguardrail_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIGuardrail'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AIGuardrailId') as a_iguardrail_id,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIGuardrail'
                AND region = 'us-east-1'
    ai_guardrail_tags:
      name: ai_guardrail_tags
      id: aws.wisdom.ai_guardrail_tags
      x-cfn-schema-name: AIGuardrail
      x-cfn-type-name: AWS::Wisdom::AIGuardrail
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(detail.Properties, '$.AIGuardrailArn') as a_iguardrail_arn,
              JSON_EXTRACT(detail.Properties, '$.AIGuardrailId') as a_iguardrail_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.BlockedInputMessaging') as blocked_input_messaging,
              JSON_EXTRACT(detail.Properties, '$.BlockedOutputsMessaging') as blocked_outputs_messaging,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.TopicPolicyConfig') as topic_policy_config,
              JSON_EXTRACT(detail.Properties, '$.ContentPolicyConfig') as content_policy_config,
              JSON_EXTRACT(detail.Properties, '$.WordPolicyConfig') as word_policy_config,
              JSON_EXTRACT(detail.Properties, '$.SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
              JSON_EXTRACT(detail.Properties, '$.ContextualGroundingPolicyConfig') as contextual_grounding_policy_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Wisdom::AIGuardrail'
              AND detail.data__TypeName = 'AWS::Wisdom::AIGuardrail'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                json_extract_path_text(detail.Properties, 'AIGuardrailArn') as a_iguardrail_arn,
                json_extract_path_text(detail.Properties, 'AIGuardrailId') as a_iguardrail_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'BlockedInputMessaging') as blocked_input_messaging,
                json_extract_path_text(detail.Properties, 'BlockedOutputsMessaging') as blocked_outputs_messaging,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'TopicPolicyConfig') as topic_policy_config,
                json_extract_path_text(detail.Properties, 'ContentPolicyConfig') as content_policy_config,
                json_extract_path_text(detail.Properties, 'WordPolicyConfig') as word_policy_config,
                json_extract_path_text(detail.Properties, 'SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                json_extract_path_text(detail.Properties, 'ContextualGroundingPolicyConfig') as contextual_grounding_policy_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIGuardrail'
                AND detail.data__TypeName = 'AWS::Wisdom::AIGuardrail'
                AND listing.region = 'us-east-1'
    ai_guardrail_versions:
      name: ai_guardrail_versions
      id: aws.wisdom.ai_guardrail_versions
      x-cfn-schema-name: AIGuardrailVersion
      x-cfn-type-name: AWS::Wisdom::AIGuardrailVersion
      x-identifiers:
        - AssistantId
        - AIGuardrailId
        - VersionNumber
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AIGuardrailVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIGuardrailVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIGuardrailVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIGuardrailVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ai_guardrail_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ai_guardrail_versions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ai_guardrail_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AIGuardrailArn') as a_iguardrail_arn,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AIGuardrailId') as a_iguardrail_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AIGuardrailVersionId') as a_iguardrail_version_id,
              JSON_EXTRACT(Properties, '$.VersionNumber') as version_number,
              JSON_EXTRACT(Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
              AND data__Identifier = '<AssistantId>|<AIGuardrailId>|<VersionNumber>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AIGuardrailArn') as a_iguardrail_arn,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.AIGuardrailId') as a_iguardrail_id,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.AIGuardrailVersionId') as a_iguardrail_version_id,
                JSON_EXTRACT(detail.Properties, '$.VersionNumber') as version_number,
                JSON_EXTRACT(detail.Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
                AND detail.data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AIGuardrailArn') as a_iguardrail_arn,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'AIGuardrailId') as a_iguardrail_id,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'AIGuardrailVersionId') as a_iguardrail_version_id,
                  json_extract_path_text(Properties, 'VersionNumber') as version_number,
                  json_extract_path_text(Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
                  AND data__Identifier = '<AssistantId>|<AIGuardrailId>|<VersionNumber>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AIGuardrailArn') as a_iguardrail_arn,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'AIGuardrailId') as a_iguardrail_id,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'AIGuardrailVersionId') as a_iguardrail_version_id,
                    json_extract_path_text(detail.Properties, 'VersionNumber') as version_number,
                    json_extract_path_text(detail.Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
                    AND detail.data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
                    AND listing.region = 'us-east-1'
    ai_guardrail_versions_list_only:
      name: ai_guardrail_versions_list_only
      id: aws.wisdom.ai_guardrail_versions_list_only
      x-cfn-schema-name: AIGuardrailVersion
      x-cfn-type-name: AWS::Wisdom::AIGuardrailVersion
      x-identifiers:
        - AssistantId
        - AIGuardrailId
        - VersionNumber
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AIGuardrailId') as a_iguardrail_id,
              JSON_EXTRACT(Properties, '$.VersionNumber') as version_number
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(Properties, 'AIGuardrailId') as a_iguardrail_id,
                json_extract_path_text(Properties, 'VersionNumber') as version_number
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIGuardrailVersion'
                AND region = 'us-east-1'
    ai_prompts:
      name: ai_prompts
      id: aws.wisdom.ai_prompts
      x-cfn-schema-name: AIPrompt
      x-cfn-type-name: AWS::Wisdom::AIPrompt
      x-identifiers:
        - AIPromptId
        - AssistantId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AIPrompt&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIPrompt"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIPrompt"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIPrompt"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ai_prompts/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ai_prompts/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ai_prompts/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AIPromptId') as a_iprompt_id,
              JSON_EXTRACT(Properties, '$.AIPromptArn') as a_iprompt_arn,
              JSON_EXTRACT(Properties, '$.ApiFormat') as api_format,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ModelId') as model_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TemplateConfiguration') as template_configuration,
              JSON_EXTRACT(Properties, '$.TemplateType') as template_type,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIPrompt'
              AND data__Identifier = '<AIPromptId>|<AssistantId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AIPromptId') as a_iprompt_id,
                JSON_EXTRACT(detail.Properties, '$.AIPromptArn') as a_iprompt_arn,
                JSON_EXTRACT(detail.Properties, '$.ApiFormat') as api_format,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ModelId') as model_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TemplateConfiguration') as template_configuration,
                JSON_EXTRACT(detail.Properties, '$.TemplateType') as template_type,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIPrompt'
                AND detail.data__TypeName = 'AWS::Wisdom::AIPrompt'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AIPromptId') as a_iprompt_id,
                  json_extract_path_text(Properties, 'AIPromptArn') as a_iprompt_arn,
                  json_extract_path_text(Properties, 'ApiFormat') as api_format,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ModelId') as model_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TemplateConfiguration') as template_configuration,
                  json_extract_path_text(Properties, 'TemplateType') as template_type,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIPrompt'
                  AND data__Identifier = '<AIPromptId>|<AssistantId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AIPromptId') as a_iprompt_id,
                    json_extract_path_text(detail.Properties, 'AIPromptArn') as a_iprompt_arn,
                    json_extract_path_text(detail.Properties, 'ApiFormat') as api_format,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ModelId') as model_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TemplateConfiguration') as template_configuration,
                    json_extract_path_text(detail.Properties, 'TemplateType') as template_type,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::AIPrompt'
                    AND detail.data__TypeName = 'AWS::Wisdom::AIPrompt'
                    AND listing.region = 'us-east-1'
    ai_prompts_list_only:
      name: ai_prompts_list_only
      id: aws.wisdom.ai_prompts_list_only
      x-cfn-schema-name: AIPrompt
      x-cfn-type-name: AWS::Wisdom::AIPrompt
      x-identifiers:
        - AIPromptId
        - AssistantId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AIPromptId') as a_iprompt_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIPrompt'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AIPromptId') as a_iprompt_id,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIPrompt'
                AND region = 'us-east-1'
    ai_prompt_tags:
      name: ai_prompt_tags
      id: aws.wisdom.ai_prompt_tags
      x-cfn-schema-name: AIPrompt
      x-cfn-type-name: AWS::Wisdom::AIPrompt
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AIPromptId') as a_iprompt_id,
              JSON_EXTRACT(detail.Properties, '$.AIPromptArn') as a_iprompt_arn,
              JSON_EXTRACT(detail.Properties, '$.ApiFormat') as api_format,
              JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ModelId') as model_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.TemplateConfiguration') as template_configuration,
              JSON_EXTRACT(detail.Properties, '$.TemplateType') as template_type,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Wisdom::AIPrompt'
              AND detail.data__TypeName = 'AWS::Wisdom::AIPrompt'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AIPromptId') as a_iprompt_id,
                json_extract_path_text(detail.Properties, 'AIPromptArn') as a_iprompt_arn,
                json_extract_path_text(detail.Properties, 'ApiFormat') as api_format,
                json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ModelId') as model_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'TemplateConfiguration') as template_configuration,
                json_extract_path_text(detail.Properties, 'TemplateType') as template_type,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIPrompt'
                AND detail.data__TypeName = 'AWS::Wisdom::AIPrompt'
                AND listing.region = 'us-east-1'
    ai_prompt_versions:
      name: ai_prompt_versions
      id: aws.wisdom.ai_prompt_versions
      x-cfn-schema-name: AIPromptVersion
      x-cfn-type-name: AWS::Wisdom::AIPromptVersion
      x-identifiers:
        - AssistantId
        - AIPromptId
        - VersionNumber
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AIPromptVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIPromptVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIPromptVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AIPromptVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ai_prompt_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ai_prompt_versions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ai_prompt_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AIPromptArn') as a_iprompt_arn,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AIPromptId') as a_iprompt_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AIPromptVersionId') as a_iprompt_version_id,
              JSON_EXTRACT(Properties, '$.VersionNumber') as version_number,
              JSON_EXTRACT(Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIPromptVersion'
              AND data__Identifier = '<AssistantId>|<AIPromptId>|<VersionNumber>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AIPromptArn') as a_iprompt_arn,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.AIPromptId') as a_iprompt_id,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.AIPromptVersionId') as a_iprompt_version_id,
                JSON_EXTRACT(detail.Properties, '$.VersionNumber') as version_number,
                JSON_EXTRACT(detail.Properties, '$.ModifiedTimeSeconds') as modified_time_seconds
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::AIPromptVersion'
                AND detail.data__TypeName = 'AWS::Wisdom::AIPromptVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AIPromptArn') as a_iprompt_arn,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'AIPromptId') as a_iprompt_id,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'AIPromptVersionId') as a_iprompt_version_id,
                  json_extract_path_text(Properties, 'VersionNumber') as version_number,
                  json_extract_path_text(Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AIPromptVersion'
                  AND data__Identifier = '<AssistantId>|<AIPromptId>|<VersionNumber>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AIPromptArn') as a_iprompt_arn,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'AIPromptId') as a_iprompt_id,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'AIPromptVersionId') as a_iprompt_version_id,
                    json_extract_path_text(detail.Properties, 'VersionNumber') as version_number,
                    json_extract_path_text(detail.Properties, 'ModifiedTimeSeconds') as modified_time_seconds
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::AIPromptVersion'
                    AND detail.data__TypeName = 'AWS::Wisdom::AIPromptVersion'
                    AND listing.region = 'us-east-1'
    ai_prompt_versions_list_only:
      name: ai_prompt_versions_list_only
      id: aws.wisdom.ai_prompt_versions_list_only
      x-cfn-schema-name: AIPromptVersion
      x-cfn-type-name: AWS::Wisdom::AIPromptVersion
      x-identifiers:
        - AssistantId
        - AIPromptId
        - VersionNumber
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.AIPromptId') as a_iprompt_id,
              JSON_EXTRACT(Properties, '$.VersionNumber') as version_number
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIPromptVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(Properties, 'AIPromptId') as a_iprompt_id,
                json_extract_path_text(Properties, 'VersionNumber') as version_number
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AIPromptVersion'
                AND region = 'us-east-1'
    assistants:
      name: assistants
      id: aws.wisdom.assistants
      x-cfn-schema-name: Assistant
      x-cfn-type-name: AWS::Wisdom::Assistant
      x-identifiers:
        - AssistantId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Assistant&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::Assistant"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::Assistant"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::Assistant"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/assistants/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/assistants/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/assistants/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::Assistant'
              AND data__Identifier = '<AssistantId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::Assistant'
                AND detail.data__TypeName = 'AWS::Wisdom::Assistant'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Name') as name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::Assistant'
                  AND data__Identifier = '<AssistantId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Name') as name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::Assistant'
                    AND detail.data__TypeName = 'AWS::Wisdom::Assistant'
                    AND listing.region = 'us-east-1'
    assistants_list_only:
      name: assistants_list_only
      id: aws.wisdom.assistants_list_only
      x-cfn-schema-name: Assistant
      x-cfn-type-name: AWS::Wisdom::Assistant
      x-identifiers:
        - AssistantId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::Assistant'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::Assistant'
                AND region = 'us-east-1'
    assistant_tags:
      name: assistant_tags
      id: aws.wisdom.assistant_tags
      x-cfn-schema-name: Assistant
      x-cfn-type-name: AWS::Wisdom::Assistant
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(detail.Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Wisdom::Assistant'
              AND detail.data__TypeName = 'AWS::Wisdom::Assistant'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(detail.Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Wisdom::Assistant'
                AND detail.data__TypeName = 'AWS::Wisdom::Assistant'
                AND listing.region = 'us-east-1'
    assistant_associations:
      name: assistant_associations
      id: aws.wisdom.assistant_associations
      x-cfn-schema-name: AssistantAssociation
      x-cfn-type-name: AWS::Wisdom::AssistantAssociation
      x-identifiers:
        - AssistantAssociationId
        - AssistantId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AssistantAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AssistantAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AssistantAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::AssistantAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/assistant_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/assistant_associations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/assistant_associations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssistantAssociationArn') as assistant_association_arn,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AssistantAssociationId') as assistant_association_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.Association') as association,
              JSON_EXTRACT(Properties, '$.AssociationType') as association_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AssistantAssociation'
              AND data__Identifier = '<AssistantAssociationId>|<AssistantId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AssistantAssociationArn') as assistant_association_arn,
                JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
                JSON_EXTRACT(detail.Properties, '$.AssistantAssociationId') as assistant_association_id,
                JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
                JSON_EXTRACT(detail.Properties, '$.Association') as association,
                JSON_EXTRACT(detail.Properties, '$.AssociationType') as association_type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                AND detail.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AssistantAssociationArn') as assistant_association_arn,
                  json_extract_path_text(Properties, 'AssistantArn') as assistant_arn,
                  json_extract_path_text(Properties, 'AssistantAssociationId') as assistant_association_id,
                  json_extract_path_text(Properties, 'AssistantId') as assistant_id,
                  json_extract_path_text(Properties, 'Association') as association,
                  json_extract_path_text(Properties, 'AssociationType') as association_type,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                  AND data__Identifier = '<AssistantAssociationId>|<AssistantId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AssistantAssociationArn') as assistant_association_arn,
                    json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                    json_extract_path_text(detail.Properties, 'AssistantAssociationId') as assistant_association_id,
                    json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                    json_extract_path_text(detail.Properties, 'Association') as association,
                    json_extract_path_text(detail.Properties, 'AssociationType') as association_type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                    AND detail.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                    AND listing.region = 'us-east-1'
    assistant_associations_list_only:
      name: assistant_associations_list_only
      id: aws.wisdom.assistant_associations_list_only
      x-cfn-schema-name: AssistantAssociation
      x-cfn-type-name: AWS::Wisdom::AssistantAssociation
      x-identifiers:
        - AssistantAssociationId
        - AssistantId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantAssociationId') as assistant_association_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AssistantAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AssistantAssociationId') as assistant_association_id,
                json_extract_path_text(Properties, 'AssistantId') as assistant_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                AND region = 'us-east-1'
    assistant_association_tags:
      name: assistant_association_tags
      id: aws.wisdom.assistant_association_tags
      x-cfn-schema-name: AssistantAssociation
      x-cfn-type-name: AWS::Wisdom::AssistantAssociation
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AssistantAssociationArn') as assistant_association_arn,
              JSON_EXTRACT(detail.Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(detail.Properties, '$.AssistantAssociationId') as assistant_association_id,
              JSON_EXTRACT(detail.Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(detail.Properties, '$.Association') as association,
              JSON_EXTRACT(detail.Properties, '$.AssociationType') as association_type
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
              AND detail.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AssistantAssociationArn') as assistant_association_arn,
                json_extract_path_text(detail.Properties, 'AssistantArn') as assistant_arn,
                json_extract_path_text(detail.Properties, 'AssistantAssociationId') as assistant_association_id,
                json_extract_path_text(detail.Properties, 'AssistantId') as assistant_id,
                json_extract_path_text(detail.Properties, 'Association') as association,
                json_extract_path_text(detail.Properties, 'AssociationType') as association_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                AND detail.data__TypeName = 'AWS::Wisdom::AssistantAssociation'
                AND listing.region = 'us-east-1'
    knowledge_bases:
      name: knowledge_bases
      id: aws.wisdom.knowledge_bases
      x-cfn-schema-name: KnowledgeBase
      x-cfn-type-name: AWS::Wisdom::KnowledgeBase
      x-identifiers:
        - KnowledgeBaseId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__KnowledgeBase&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::KnowledgeBase"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::KnowledgeBase"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::KnowledgeBase"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/knowledge_bases/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/knowledge_bases/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/knowledge_bases/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseType') as knowledge_base_type,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RenderingConfiguration') as rendering_configuration,
              JSON_EXTRACT(Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
              JSON_EXTRACT(Properties, '$.SourceConfiguration') as source_configuration,
              JSON_EXTRACT(Properties, '$.VectorIngestionConfiguration') as vector_ingestion_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::KnowledgeBase'
              AND data__Identifier = '<KnowledgeBaseId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseId') as knowledge_base_id,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseType') as knowledge_base_type,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.RenderingConfiguration') as rendering_configuration,
                JSON_EXTRACT(detail.Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                JSON_EXTRACT(detail.Properties, '$.SourceConfiguration') as source_configuration,
                JSON_EXTRACT(detail.Properties, '$.VectorIngestionConfiguration') as vector_ingestion_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                AND detail.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                  json_extract_path_text(Properties, 'KnowledgeBaseId') as knowledge_base_id,
                  json_extract_path_text(Properties, 'KnowledgeBaseType') as knowledge_base_type,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'RenderingConfiguration') as rendering_configuration,
                  json_extract_path_text(Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                  json_extract_path_text(Properties, 'SourceConfiguration') as source_configuration,
                  json_extract_path_text(Properties, 'VectorIngestionConfiguration') as vector_ingestion_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                  AND data__Identifier = '<KnowledgeBaseId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseId') as knowledge_base_id,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseType') as knowledge_base_type,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'RenderingConfiguration') as rendering_configuration,
                    json_extract_path_text(detail.Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                    json_extract_path_text(detail.Properties, 'SourceConfiguration') as source_configuration,
                    json_extract_path_text(detail.Properties, 'VectorIngestionConfiguration') as vector_ingestion_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                    AND detail.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                    AND listing.region = 'us-east-1'
    knowledge_bases_list_only:
      name: knowledge_bases_list_only
      id: aws.wisdom.knowledge_bases_list_only
      x-cfn-schema-name: KnowledgeBase
      x-cfn-type-name: AWS::Wisdom::KnowledgeBase
      x-identifiers:
        - KnowledgeBaseId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::KnowledgeBase'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KnowledgeBaseId') as knowledge_base_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                AND region = 'us-east-1'
    knowledge_base_tags:
      name: knowledge_base_tags
      id: aws.wisdom.knowledge_base_tags
      x-cfn-schema-name: KnowledgeBase
      x-cfn-type-name: AWS::Wisdom::KnowledgeBase
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseId') as knowledge_base_id,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseType') as knowledge_base_type,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.RenderingConfiguration') as rendering_configuration,
              JSON_EXTRACT(detail.Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
              JSON_EXTRACT(detail.Properties, '$.SourceConfiguration') as source_configuration,
              JSON_EXTRACT(detail.Properties, '$.VectorIngestionConfiguration') as vector_ingestion_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
              AND detail.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                json_extract_path_text(detail.Properties, 'KnowledgeBaseId') as knowledge_base_id,
                json_extract_path_text(detail.Properties, 'KnowledgeBaseType') as knowledge_base_type,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'RenderingConfiguration') as rendering_configuration,
                json_extract_path_text(detail.Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                json_extract_path_text(detail.Properties, 'SourceConfiguration') as source_configuration,
                json_extract_path_text(detail.Properties, 'VectorIngestionConfiguration') as vector_ingestion_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                AND detail.data__TypeName = 'AWS::Wisdom::KnowledgeBase'
                AND listing.region = 'us-east-1'
    message_templates:
      name: message_templates
      id: aws.wisdom.message_templates
      x-cfn-schema-name: MessageTemplate
      x-cfn-type-name: AWS::Wisdom::MessageTemplate
      x-identifiers:
        - MessageTemplateArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MessageTemplate&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::MessageTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::MessageTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::MessageTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/message_templates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/message_templates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/message_templates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
              JSON_EXTRACT(Properties, '$.MessageTemplateId') as message_template_id,
              JSON_EXTRACT(Properties, '$.MessageTemplateArn') as message_template_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ChannelSubtype') as channel_subtype,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Language') as language,
              JSON_EXTRACT(Properties, '$.GroupingConfiguration') as grouping_configuration,
              JSON_EXTRACT(Properties, '$.DefaultAttributes') as default_attributes,
              JSON_EXTRACT(Properties, '$.MessageTemplateContentSha256') as message_template_content_sha256,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::MessageTemplate'
              AND data__Identifier = '<MessageTemplateArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
                JSON_EXTRACT(detail.Properties, '$.MessageTemplateId') as message_template_id,
                JSON_EXTRACT(detail.Properties, '$.MessageTemplateArn') as message_template_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ChannelSubtype') as channel_subtype,
                JSON_EXTRACT(detail.Properties, '$.Content') as content,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Language') as language,
                JSON_EXTRACT(detail.Properties, '$.GroupingConfiguration') as grouping_configuration,
                JSON_EXTRACT(detail.Properties, '$.DefaultAttributes') as default_attributes,
                JSON_EXTRACT(detail.Properties, '$.MessageTemplateContentSha256') as message_template_content_sha256,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::MessageTemplate'
                AND detail.data__TypeName = 'AWS::Wisdom::MessageTemplate'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                  json_extract_path_text(Properties, 'MessageTemplateId') as message_template_id,
                  json_extract_path_text(Properties, 'MessageTemplateArn') as message_template_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ChannelSubtype') as channel_subtype,
                  json_extract_path_text(Properties, 'Content') as content,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Language') as language,
                  json_extract_path_text(Properties, 'GroupingConfiguration') as grouping_configuration,
                  json_extract_path_text(Properties, 'DefaultAttributes') as default_attributes,
                  json_extract_path_text(Properties, 'MessageTemplateContentSha256') as message_template_content_sha256,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::MessageTemplate'
                  AND data__Identifier = '<MessageTemplateArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                    json_extract_path_text(detail.Properties, 'MessageTemplateId') as message_template_id,
                    json_extract_path_text(detail.Properties, 'MessageTemplateArn') as message_template_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ChannelSubtype') as channel_subtype,
                    json_extract_path_text(detail.Properties, 'Content') as content,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Language') as language,
                    json_extract_path_text(detail.Properties, 'GroupingConfiguration') as grouping_configuration,
                    json_extract_path_text(detail.Properties, 'DefaultAttributes') as default_attributes,
                    json_extract_path_text(detail.Properties, 'MessageTemplateContentSha256') as message_template_content_sha256,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::MessageTemplate'
                    AND detail.data__TypeName = 'AWS::Wisdom::MessageTemplate'
                    AND listing.region = 'us-east-1'
    message_templates_list_only:
      name: message_templates_list_only
      id: aws.wisdom.message_templates_list_only
      x-cfn-schema-name: MessageTemplate
      x-cfn-type-name: AWS::Wisdom::MessageTemplate
      x-identifiers:
        - MessageTemplateArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MessageTemplateArn') as message_template_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::MessageTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MessageTemplateArn') as message_template_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::MessageTemplate'
                AND region = 'us-east-1'
    message_template_tags:
      name: message_template_tags
      id: aws.wisdom.message_template_tags
      x-cfn-schema-name: MessageTemplate
      x-cfn-type-name: AWS::Wisdom::MessageTemplate
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
              JSON_EXTRACT(detail.Properties, '$.MessageTemplateId') as message_template_id,
              JSON_EXTRACT(detail.Properties, '$.MessageTemplateArn') as message_template_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ChannelSubtype') as channel_subtype,
              JSON_EXTRACT(detail.Properties, '$.Content') as content,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Language') as language,
              JSON_EXTRACT(detail.Properties, '$.GroupingConfiguration') as grouping_configuration,
              JSON_EXTRACT(detail.Properties, '$.DefaultAttributes') as default_attributes,
              JSON_EXTRACT(detail.Properties, '$.MessageTemplateContentSha256') as message_template_content_sha256
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Wisdom::MessageTemplate'
              AND detail.data__TypeName = 'AWS::Wisdom::MessageTemplate'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                json_extract_path_text(detail.Properties, 'MessageTemplateId') as message_template_id,
                json_extract_path_text(detail.Properties, 'MessageTemplateArn') as message_template_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ChannelSubtype') as channel_subtype,
                json_extract_path_text(detail.Properties, 'Content') as content,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Language') as language,
                json_extract_path_text(detail.Properties, 'GroupingConfiguration') as grouping_configuration,
                json_extract_path_text(detail.Properties, 'DefaultAttributes') as default_attributes,
                json_extract_path_text(detail.Properties, 'MessageTemplateContentSha256') as message_template_content_sha256
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Wisdom::MessageTemplate'
                AND detail.data__TypeName = 'AWS::Wisdom::MessageTemplate'
                AND listing.region = 'us-east-1'
    message_template_versions:
      name: message_template_versions
      id: aws.wisdom.message_template_versions
      x-cfn-schema-name: MessageTemplateVersion
      x-cfn-type-name: AWS::Wisdom::MessageTemplateVersion
      x-identifiers:
        - MessageTemplateVersionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MessageTemplateVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::MessageTemplateVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::MessageTemplateVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Wisdom::MessageTemplateVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/message_template_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/message_template_versions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/message_template_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MessageTemplateArn') as message_template_arn,
              JSON_EXTRACT(Properties, '$.MessageTemplateVersionArn') as message_template_version_arn,
              JSON_EXTRACT(Properties, '$.MessageTemplateContentSha256') as message_template_content_sha256,
              JSON_EXTRACT(Properties, '$.MessageTemplateVersionNumber') as message_template_version_number
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
              AND data__Identifier = '<MessageTemplateVersionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.MessageTemplateArn') as message_template_arn,
                JSON_EXTRACT(detail.Properties, '$.MessageTemplateVersionArn') as message_template_version_arn,
                JSON_EXTRACT(detail.Properties, '$.MessageTemplateContentSha256') as message_template_content_sha256,
                JSON_EXTRACT(detail.Properties, '$.MessageTemplateVersionNumber') as message_template_version_number
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
                AND detail.data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'MessageTemplateArn') as message_template_arn,
                  json_extract_path_text(Properties, 'MessageTemplateVersionArn') as message_template_version_arn,
                  json_extract_path_text(Properties, 'MessageTemplateContentSha256') as message_template_content_sha256,
                  json_extract_path_text(Properties, 'MessageTemplateVersionNumber') as message_template_version_number
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
                  AND data__Identifier = '<MessageTemplateVersionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'MessageTemplateArn') as message_template_arn,
                    json_extract_path_text(detail.Properties, 'MessageTemplateVersionArn') as message_template_version_arn,
                    json_extract_path_text(detail.Properties, 'MessageTemplateContentSha256') as message_template_content_sha256,
                    json_extract_path_text(detail.Properties, 'MessageTemplateVersionNumber') as message_template_version_number
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
                    AND detail.data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
                    AND listing.region = 'us-east-1'
    message_template_versions_list_only:
      name: message_template_versions_list_only
      id: aws.wisdom.message_template_versions_list_only
      x-cfn-schema-name: MessageTemplateVersion
      x-cfn-type-name: AWS::Wisdom::MessageTemplateVersion
      x-identifiers:
        - MessageTemplateVersionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MessageTemplateVersionArn') as message_template_version_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MessageTemplateVersionArn') as message_template_version_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::MessageTemplateVersion'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AIAgent&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAIAgent
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAIAgentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AIAgentVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAIAgentVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAIAgentVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AIGuardrail&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAIGuardrail
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAIGuardrailRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AIGuardrailVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAIGuardrailVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAIGuardrailVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AIPrompt&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAIPrompt
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAIPromptRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AIPromptVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAIPromptVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAIPromptVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Assistant&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAssistant
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAssistantRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AssistantAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAssistantAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAssistantAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__KnowledgeBase&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateKnowledgeBase
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateKnowledgeBaseRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MessageTemplate&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMessageTemplate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MessageTemplateVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMessageTemplateVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMessageTemplateVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
