openapi: 3.0.0
info:
  title: Wisdom
  version: 1.0.0
paths: {}
components:
  schemas:
    AssistantType:
      type: string
      enum:
        - AGENT
    ServerSideEncryptionConfiguration:
      type: object
      properties:
        KmsKeyId:
          type: string
          maxLength: 4096
          minLength: 1
      additionalProperties: false
    Tag:
      additionalProperties: false
      properties:
        Key:
          maxLength: 128
          minLength: 1
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          type: string
        Value:
          maxLength: 256
          minLength: 1
          type: string
      required:
        - Key
        - Value
      type: object
    Assistant:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/AssistantType'
        Description:
          type: string
          maxLength: 255
          minLength: 1
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
        Tags:
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        Name:
          type: string
          maxLength: 255
          minLength: 1
      required:
        - Name
        - Type
      x-stackql-resource-name: assistant
      x-stackql-primaryIdentifier:
        - AssistantId
    AssociationData:
      type: object
      properties:
        KnowledgeBaseId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      required:
        - KnowledgeBaseId
      additionalProperties: false
    AssociationType:
      type: string
      enum:
        - KNOWLEDGE_BASE
    AssistantAssociation:
      type: object
      properties:
        AssistantAssociationArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        AssistantAssociationId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        AssistantId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        Association:
          $ref: '#/components/schemas/AssociationData'
        AssociationType:
          $ref: '#/components/schemas/AssociationType'
        Tags:
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
        - Association
        - AssociationType
        - AssistantId
      x-stackql-resource-name: assistant_association
      x-stackql-primaryIdentifier:
        - AssistantAssociationId
        - AssistantId
    AppIntegrationsConfiguration:
      type: object
      properties:
        ObjectFields:
          type: array
          items:
            type: string
            maxLength: 4096
            minLength: 1
          x-insertionOrder: false
          maxItems: 100
          minItems: 1
        AppIntegrationArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:[a-z-]+?:[a-z-]+?:[a-z0-9-]*?:([0-9]{12})?:[a-zA-Z0-9-:/]+$
      required:
        - AppIntegrationArn
      additionalProperties: false
    KnowledgeBaseType:
      type: string
      enum:
        - EXTERNAL
        - CUSTOM
    RenderingConfiguration:
      type: object
      properties:
        TemplateUri:
          type: string
          maxLength: 4096
          minLength: 1
      additionalProperties: false
    SourceConfiguration:
      type: object
      properties:
        AppIntegrations:
          $ref: '#/components/schemas/AppIntegrationsConfiguration'
      oneOf:
        - required:
            - AppIntegrations
      additionalProperties: false
    KnowledgeBase:
      type: object
      properties:
        Description:
          type: string
          maxLength: 255
          minLength: 1
        KnowledgeBaseArn:
          type: string
          pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$
        KnowledgeBaseId:
          type: string
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        KnowledgeBaseType:
          $ref: '#/components/schemas/KnowledgeBaseType'
        Name:
          type: string
          maxLength: 255
          minLength: 1
        RenderingConfiguration:
          $ref: '#/components/schemas/RenderingConfiguration'
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
        SourceConfiguration:
          $ref: '#/components/schemas/SourceConfiguration'
        Tags:
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      required:
        - KnowledgeBaseType
        - Name
      x-stackql-resource-name: knowledge_base
      x-stackql-primaryIdentifier:
        - KnowledgeBaseId
  x-stackQL-resources:
    assistants:
      name: assistants
      id: aws.wisdom.assistants
      x-cfn-schema-name: Assistant
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::Assistant'
    assistant:
      name: assistant
      id: aws.wisdom.assistant
      x-cfn-schema-name: Assistant
      x-type: get
      x-identifiers:
        - AssistantId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.ServerSideEncryptionConfiguration.KmsKeyId') as server_side_encryption_configuration_kms_key_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::Assistant'
    assistant_associations:
      name: assistant_associations
      id: aws.wisdom.assistant_associations
      x-cfn-schema-name: AssistantAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantAssociationId') as assistant_association_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::AssistantAssociation'
    assistant_association:
      name: assistant_association
      id: aws.wisdom.assistant_association
      x-cfn-schema-name: AssistantAssociation
      x-type: get
      x-identifiers:
        - AssistantAssociationId
        - AssistantId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssistantAssociationArn') as assistant_association_arn,
              JSON_EXTRACT(Properties, '$.AssistantArn') as assistant_arn,
              JSON_EXTRACT(Properties, '$.AssistantAssociationId') as assistant_association_id,
              JSON_EXTRACT(Properties, '$.AssistantId') as assistant_id,
              JSON_EXTRACT(Properties, '$.Association.KnowledgeBaseId') as association_knowledge_base_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::AssistantAssociation'
    knowledge_bases:
      name: knowledge_bases
      id: aws.wisdom.knowledge_bases
      x-cfn-schema-name: KnowledgeBase
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Wisdom::KnowledgeBase'
    knowledge_base:
      name: knowledge_base
      id: aws.wisdom.knowledge_base
      x-cfn-schema-name: KnowledgeBase
      x-type: get
      x-identifiers:
        - KnowledgeBaseId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RenderingConfiguration.TemplateUri') as rendering_configuration_template_uri,
              JSON_EXTRACT(Properties, '$.ServerSideEncryptionConfiguration.KmsKeyId') as server_side_encryption_configuration_kms_key_id,
              JSON_EXTRACT(Properties, '$.SourceConfiguration.AppIntegrations') as source_configuration_app_integrations,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Wisdom::KnowledgeBase'
