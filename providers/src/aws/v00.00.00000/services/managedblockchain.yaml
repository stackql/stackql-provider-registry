openapi: 3.0.0
info:
  title: ManagedBlockchain
  version: 1.0.0
paths: {}
components:
  schemas:
    AccessorStatus:
      type: string
      enum:
        - AVAILABLE
        - PENDING_DELETION
        - DELETED
    AccessorType:
      type: string
      enum:
        - BILLING_TOKEN
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 127
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 255
      required:
        - Key
        - Value
      additionalProperties: false
    Accessor:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 1011
          minLength: 1
          pattern: ^arn:.+:.+:.+:.+:.+$
        BillingToken:
          type: string
          maxLength: 42
          minLength: 42
        CreationDate:
          type: string
        Id:
          type: string
          maxLength: 32
          minLength: 1
        Status:
          $ref: '#/components/schemas/AccessorStatus'
        AccessorType:
          $ref: '#/components/schemas/AccessorType'
        Tags:
          type: array
          maxItems: 50
          x-insertionOrder: false
          uniqueItems: true
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AccessorType
      x-stackql-resource-name: accessor
      x-stackql-primaryIdentifier:
        - Id
    NetworkConfiguration:
      type: object
      additionalProperties: false
      properties:
        Description:
          type: string
        FrameworkVersion:
          type: string
        VotingPolicy:
          $ref: '#/components/schemas/VotingPolicy'
        Framework:
          type: string
        Name:
          type: string
        NetworkFrameworkConfiguration:
          $ref: '#/components/schemas/NetworkFrameworkConfiguration'
      required:
        - VotingPolicy
        - Framework
        - FrameworkVersion
        - Name
    MemberConfiguration:
      type: object
      additionalProperties: false
      properties:
        Description:
          type: string
        MemberFrameworkConfiguration:
          $ref: '#/components/schemas/MemberFrameworkConfiguration'
        Name:
          type: string
      required:
        - Name
    MemberFrameworkConfiguration:
      type: object
      additionalProperties: false
      properties:
        MemberFabricConfiguration:
          $ref: '#/components/schemas/MemberFabricConfiguration'
    VotingPolicy:
      type: object
      additionalProperties: false
      properties:
        ApprovalThresholdPolicy:
          $ref: '#/components/schemas/ApprovalThresholdPolicy'
    NetworkFrameworkConfiguration:
      type: object
      additionalProperties: false
      properties:
        NetworkFabricConfiguration:
          $ref: '#/components/schemas/NetworkFabricConfiguration'
    MemberFabricConfiguration:
      type: object
      additionalProperties: false
      properties:
        AdminUsername:
          type: string
        AdminPassword:
          type: string
      required:
        - AdminUsername
        - AdminPassword
    NetworkFabricConfiguration:
      type: object
      additionalProperties: false
      properties:
        Edition:
          type: string
      required:
        - Edition
    ApprovalThresholdPolicy:
      type: object
      additionalProperties: false
      properties:
        ThresholdComparator:
          type: string
        ThresholdPercentage:
          type: integer
        ProposalDurationInHours:
          type: integer
    Member:
      type: object
      properties:
        MemberId:
          type: string
        NetworkId:
          type: string
        MemberConfiguration:
          $ref: '#/components/schemas/MemberConfiguration'
        NetworkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        InvitationId:
          type: string
      required:
        - MemberConfiguration
      x-stackql-resource-name: member
      x-stackql-primaryIdentifier:
        - MemberId
    NodeConfiguration:
      type: object
      additionalProperties: false
      properties:
        InstanceType:
          type: string
        AvailabilityZone:
          type: string
      required:
        - AvailabilityZone
        - InstanceType
    Node:
      type: object
      properties:
        NodeId:
          type: string
        MemberId:
          type: string
        Arn:
          type: string
        NetworkId:
          type: string
        NodeConfiguration:
          $ref: '#/components/schemas/NodeConfiguration'
      required:
        - NetworkId
        - NodeConfiguration
      x-stackql-resource-name: node
      x-stackql-primaryIdentifier:
        - NodeId
  x-stackQL-resources:
    accessors:
      name: accessors
      id: aws.managedblockchain.accessors
      x-cfn-schema-name: Accessor
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ManagedBlockchain::Accessor'
    accessor:
      name: accessor
      id: aws.managedblockchain.accessor
      x-cfn-schema-name: Accessor
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.BillingToken') as billing_token,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ManagedBlockchain::Accessor'
    members:
      name: members
      id: aws.managedblockchain.members
      x-cfn-schema-name: Member
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ManagedBlockchain::Member'
    member:
      name: member
      id: aws.managedblockchain.member
      x-cfn-schema-name: Member
      x-type: get
      x-identifiers:
        - MemberId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id,
              JSON_EXTRACT(Properties, '$.NetworkId') as network_id,
              JSON_EXTRACT(Properties, '$.MemberConfiguration.Description') as member_configuration_description,
              JSON_EXTRACT(Properties, '$.MemberConfiguration.MemberFrameworkConfiguration') as member_configuration_member_framework_configuration,
              JSON_EXTRACT(Properties, '$.MemberConfiguration.Name') as member_configuration_name,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration.Description') as network_configuration_description,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration.FrameworkVersion') as network_configuration_framework_version,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration.VotingPolicy') as network_configuration_voting_policy,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration.Framework') as network_configuration_framework,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration.Name') as network_configuration_name,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration.NetworkFrameworkConfiguration') as network_configuration_network_framework_configuration,
              JSON_EXTRACT(Properties, '$.InvitationId') as invitation_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ManagedBlockchain::Member'
    nodes:
      name: nodes
      id: aws.managedblockchain.nodes
      x-cfn-schema-name: Node
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.NodeId') as node_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ManagedBlockchain::Node'
    node:
      name: node
      id: aws.managedblockchain.node
      x-cfn-schema-name: Node
      x-type: get
      x-identifiers:
        - NodeId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.NodeId') as node_id,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.NetworkId') as network_id,
              JSON_EXTRACT(Properties, '$.NodeConfiguration.InstanceType') as node_configuration_instance_type,
              JSON_EXTRACT(Properties, '$.NodeConfiguration.AvailabilityZone') as node_configuration_availability_zone
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ManagedBlockchain::Node'
