openapi: 3.0.0
info:
  title: Route53RecoveryReadiness
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
      required:
        - Value
        - Key
    Cell:
      type: object
      properties:
        CellName:
          description: The name of the cell to create.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          maxLength: 64
        CellArn:
          description: The Amazon Resource Name (ARN) of the cell.
          type: string
          maxLength: 256
        Cells:
          description: A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions.
          type: array
          items:
            type: string
          maxItems: 5
          x-insertionOrder: false
        ParentReadinessScopes:
          description: The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.
          type: array
          items:
            type: string
          maxItems: 5
          x-insertionOrder: false
        Tags:
          description: A collection of tags associated with a resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      x-stackql-resource-name: cell
      description: The API Schema for AWS Route53 Recovery Readiness Cells.
      x-type-name: AWS::Route53RecoveryReadiness::Cell
      x-stackql-primary-identifier:
        - CellName
      x-create-only-properties:
        - CellName
      x-read-only-properties:
        - CellArn
        - ParentReadinessScopes
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
        permissions:
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
          - route53-recovery-readiness:ListTagsForResource
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateCell
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
          - route53-recovery-readiness:UpdateCell
        delete:
          - route53-recovery-readiness:DeleteCell
          - route53-recovery-readiness:GetCell
        list:
          - route53-recovery-readiness:ListCells
    ReadinessCheck:
      type: object
      properties:
        ResourceSetName:
          description: The name of the resource set to check.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 64
        ReadinessCheckName:
          description: Name of the ReadinessCheck to create.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 64
        ReadinessCheckArn:
          description: The Amazon Resource Name (ARN) of the readiness check.
          type: string
          maxLength: 256
        Tags:
          description: A collection of tags associated with a resource.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      x-stackql-resource-name: readiness_check
      description: Aws Route53 Recovery Readiness Check Schema and API specification.
      x-type-name: AWS::Route53RecoveryReadiness::ReadinessCheck
      x-stackql-primary-identifier:
        - ReadinessCheckName
      x-create-only-properties:
        - ReadinessCheckName
      x-read-only-properties:
        - ReadinessCheckArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
        permissions:
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
          - route53-recovery-readiness:ListTagsForResource
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateReadinessCheck
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetReadinessCheck
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetReadinessCheck
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:UpdateReadinessCheck
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetReadinessCheck
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
        delete:
          - route53-recovery-readiness:DeleteReadinessCheck
          - route53-recovery-readiness:GetReadinessCheck
        list:
          - route53-recovery-readiness:ListReadinessChecks
          - route53-recovery-readiness:GetReadinessChecks
    RecoveryGroup:
      type: object
      properties:
        RecoveryGroupName:
          description: The name of the recovery group to create.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 64
        Cells:
          description: A list of the cell Amazon Resource Names (ARNs) in the recovery group.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          maxItems: 5
          x-insertionOrder: false
        RecoveryGroupArn:
          description: A collection of tags associated with a resource.
          type: string
          maxLength: 256
        Tags:
          description: A collection of tags associated with a resource.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      x-stackql-resource-name: recovery_group
      description: AWS Route53 Recovery Readiness Recovery Group Schema and API specifications.
      x-type-name: AWS::Route53RecoveryReadiness::RecoveryGroup
      x-stackql-primary-identifier:
        - RecoveryGroupName
      x-create-only-properties:
        - RecoveryGroupName
      x-read-only-properties:
        - RecoveryGroupArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
        permissions:
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
          - route53-recovery-readiness:ListTagsForResource
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateRecoveryGroup
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:UpdateRecoveryGroup
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
        delete:
          - route53-recovery-readiness:DeleteRecoveryGroup
          - route53-recovery-readiness:GetRecoveryGroup
        list:
          - route53-recovery-readiness:ListRecoveryGroups
    NLBResource:
      description: The Network Load Balancer resource that a DNS target resource points to.
      type: object
      properties:
        Arn:
          description: A Network Load Balancer resource Amazon Resource Name (ARN).
          type: string
      additionalProperties: false
    R53ResourceRecord:
      description: The Route 53 resource that a DNS target resource record points to.
      type: object
      properties:
        DomainName:
          description: The DNS target domain name.
          type: string
        RecordSetId:
          description: The Resource Record set id.
          type: string
      additionalProperties: false
    TargetResource:
      description: The target resource that the Route 53 record points to.
      type: object
      properties:
        NLBResource:
          $ref: '#/components/schemas/NLBResource'
        R53Resource:
          $ref: '#/components/schemas/R53ResourceRecord'
      oneOf:
        - required:
            - NLBResource
        - required:
            - R53Resource
      additionalProperties: false
    DNSTargetResource:
      description: A component for DNS/routing control readiness checks.
      type: object
      properties:
        DomainName:
          description: The domain name that acts as an ingress point to a portion of the customer application.
          type: string
        RecordSetId:
          description: The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
          type: string
        HostedZoneArn:
          description: The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
          type: string
        RecordType:
          description: The type of DNS record of the target resource.
          type: string
        TargetResource:
          $ref: '#/components/schemas/TargetResource'
      additionalProperties: false
    Resource:
      description: The resource element of a ResourceSet
      type: object
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the AWS resource.
          type: string
        ComponentId:
          description: The component identifier of the resource, generated when DNS target resource is used.
          type: string
        DnsTargetResource:
          $ref: '#/components/schemas/DNSTargetResource'
        ReadinessScopes:
          description: A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within.
          type: array
          items:
            type: string
            maxItems: 5
          x-insertionOrder: false
      additionalProperties: false
    ResourceSet:
      type: object
      properties:
        ResourceSetName:
          description: The name of the resource set to create.
          type: string
        Resources:
          description: A list of resource objects in the resource set.
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          minItems: 1
          maxItems: 6
          x-insertionOrder: false
        ResourceSetArn:
          description: The Amazon Resource Name (ARN) of the resource set.
          type: string
          minLength: 1
          maxLength: 256
        ResourceSetType:
          description: |-
            The resource type of the resources in the resource set. Enter one of the following values for resource type: 

            AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
          type: string
        Tags:
          description: A tag to associate with the parameters for a resource set.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      required:
        - ResourceSetType
        - Resources
      x-stackql-resource-name: resource_set
      description: Schema for the AWS Route53 Recovery Readiness ResourceSet Resource and API.
      x-type-name: AWS::Route53RecoveryReadiness::ResourceSet
      x-stackql-primary-identifier:
        - ResourceSetName
      x-create-only-properties:
        - ResourceSetName
        - ResourceSetType
      x-read-only-properties:
        - ResourceSetArn
      x-required-properties:
        - ResourceSetType
        - Resources
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
        permissions:
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
          - route53-recovery-readiness:ListTagsForResource
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateResourceSet
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:UpdateResourceSet
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
        delete:
          - route53-recovery-readiness:DeleteResourceSet
          - route53-recovery-readiness:GetResourceSet
        list:
          - route53-recovery-readiness:ListResourceSets
    CreateCellRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CellName:
              description: The name of the cell to create.
              type: string
              pattern: '[a-zA-Z0-9_]+'
              maxLength: 64
            CellArn:
              description: The Amazon Resource Name (ARN) of the cell.
              type: string
              maxLength: 256
            Cells:
              description: A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions.
              type: array
              items:
                type: string
              maxItems: 5
              x-insertionOrder: false
            ParentReadinessScopes:
              description: The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.
              type: array
              items:
                type: string
              maxItems: 5
              x-insertionOrder: false
            Tags:
              description: A collection of tags associated with a resource
              type: array
              items:
                $ref: '#/components/schemas/Tag'
                maxItems: 20
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateCellRequest
      type: object
      required: []
    CreateReadinessCheckRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ResourceSetName:
              description: The name of the resource set to check.
              type: string
              pattern: '[a-zA-Z0-9_]+'
              minLength: 1
              maxLength: 64
            ReadinessCheckName:
              description: Name of the ReadinessCheck to create.
              type: string
              pattern: '[a-zA-Z0-9_]+'
              minLength: 1
              maxLength: 64
            ReadinessCheckArn:
              description: The Amazon Resource Name (ARN) of the readiness check.
              type: string
              maxLength: 256
            Tags:
              description: A collection of tags associated with a resource.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
                maxItems: 20
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateReadinessCheckRequest
      type: object
      required: []
    CreateRecoveryGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            RecoveryGroupName:
              description: The name of the recovery group to create.
              type: string
              pattern: '[a-zA-Z0-9_]+'
              minLength: 1
              maxLength: 64
            Cells:
              description: A list of the cell Amazon Resource Names (ARNs) in the recovery group.
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 256
              maxItems: 5
              x-insertionOrder: false
            RecoveryGroupArn:
              description: A collection of tags associated with a resource.
              type: string
              maxLength: 256
            Tags:
              description: A collection of tags associated with a resource.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
                maxItems: 20
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateRecoveryGroupRequest
      type: object
      required: []
    CreateResourceSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ResourceSetName:
              description: The name of the resource set to create.
              type: string
            Resources:
              description: A list of resource objects in the resource set.
              type: array
              items:
                $ref: '#/components/schemas/Resource'
              minItems: 1
              maxItems: 6
              x-insertionOrder: false
            ResourceSetArn:
              description: The Amazon Resource Name (ARN) of the resource set.
              type: string
              minLength: 1
              maxLength: 256
            ResourceSetType:
              description: |-
                The resource type of the resources in the resource set. Enter one of the following values for resource type: 

                AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
              type: string
            Tags:
              description: A tag to associate with the parameters for a resource set.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
                maxItems: 20
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateResourceSetRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    cells:
      name: cells
      id: aws.route53recoveryreadiness.cells
      x-cfn-schema-name: Cell
      x-cfn-type-name: AWS::Route53RecoveryReadiness::Cell
      x-identifiers:
        - CellName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Cell&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::Cell"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::Cell"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::Cell"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/cells/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/cells/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/cells/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CellName') as cell_name,
              JSON_EXTRACT(Properties, '$.CellArn') as cell_arn,
              JSON_EXTRACT(Properties, '$.Cells') as cells,
              JSON_EXTRACT(Properties, '$.ParentReadinessScopes') as parent_readiness_scopes,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
              AND data__Identifier = '<CellName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.CellName') as cell_name,
                JSON_EXTRACT(detail.Properties, '$.CellArn') as cell_arn,
                JSON_EXTRACT(detail.Properties, '$.Cells') as cells,
                JSON_EXTRACT(detail.Properties, '$.ParentReadinessScopes') as parent_readiness_scopes,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CellName') as cell_name,
                  json_extract_path_text(Properties, 'CellArn') as cell_arn,
                  json_extract_path_text(Properties, 'Cells') as cells,
                  json_extract_path_text(Properties, 'ParentReadinessScopes') as parent_readiness_scopes,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                  AND data__Identifier = '<CellName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'CellName') as cell_name,
                    json_extract_path_text(detail.Properties, 'CellArn') as cell_arn,
                    json_extract_path_text(detail.Properties, 'Cells') as cells,
                    json_extract_path_text(detail.Properties, 'ParentReadinessScopes') as parent_readiness_scopes,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                    AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                    AND listing.region = 'us-east-1'
    cells_list_only:
      name: cells_list_only
      id: aws.route53recoveryreadiness.cells_list_only
      x-cfn-schema-name: Cell
      x-cfn-type-name: AWS::Route53RecoveryReadiness::Cell
      x-identifiers:
        - CellName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CellName') as cell_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CellName') as cell_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                AND region = 'us-east-1'
    cell_tags:
      name: cell_tags
      id: aws.route53recoveryreadiness.cell_tags
      x-cfn-schema-name: Cell
      x-cfn-type-name: AWS::Route53RecoveryReadiness::Cell
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.CellName') as cell_name,
              JSON_EXTRACT(detail.Properties, '$.CellArn') as cell_arn,
              JSON_EXTRACT(detail.Properties, '$.Cells') as cells,
              JSON_EXTRACT(detail.Properties, '$.ParentReadinessScopes') as parent_readiness_scopes
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
              AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'CellName') as cell_name,
                json_extract_path_text(detail.Properties, 'CellArn') as cell_arn,
                json_extract_path_text(detail.Properties, 'Cells') as cells,
                json_extract_path_text(detail.Properties, 'ParentReadinessScopes') as parent_readiness_scopes
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                AND listing.region = 'us-east-1'
    readiness_checks:
      name: readiness_checks
      id: aws.route53recoveryreadiness.readiness_checks
      x-cfn-schema-name: ReadinessCheck
      x-cfn-type-name: AWS::Route53RecoveryReadiness::ReadinessCheck
      x-identifiers:
        - ReadinessCheckName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ReadinessCheck&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::ReadinessCheck"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::ReadinessCheck"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::ReadinessCheck"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/readiness_checks/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/readiness_checks/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/readiness_checks/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceSetName') as resource_set_name,
              JSON_EXTRACT(Properties, '$.ReadinessCheckName') as readiness_check_name,
              JSON_EXTRACT(Properties, '$.ReadinessCheckArn') as readiness_check_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
              AND data__Identifier = '<ReadinessCheckName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ResourceSetName') as resource_set_name,
                JSON_EXTRACT(detail.Properties, '$.ReadinessCheckName') as readiness_check_name,
                JSON_EXTRACT(detail.Properties, '$.ReadinessCheckArn') as readiness_check_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ResourceSetName') as resource_set_name,
                  json_extract_path_text(Properties, 'ReadinessCheckName') as readiness_check_name,
                  json_extract_path_text(Properties, 'ReadinessCheckArn') as readiness_check_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                  AND data__Identifier = '<ReadinessCheckName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ResourceSetName') as resource_set_name,
                    json_extract_path_text(detail.Properties, 'ReadinessCheckName') as readiness_check_name,
                    json_extract_path_text(detail.Properties, 'ReadinessCheckArn') as readiness_check_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                    AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                    AND listing.region = 'us-east-1'
    readiness_checks_list_only:
      name: readiness_checks_list_only
      id: aws.route53recoveryreadiness.readiness_checks_list_only
      x-cfn-schema-name: ReadinessCheck
      x-cfn-type-name: AWS::Route53RecoveryReadiness::ReadinessCheck
      x-identifiers:
        - ReadinessCheckName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReadinessCheckName') as readiness_check_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReadinessCheckName') as readiness_check_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                AND region = 'us-east-1'
    readiness_check_tags:
      name: readiness_check_tags
      id: aws.route53recoveryreadiness.readiness_check_tags
      x-cfn-schema-name: ReadinessCheck
      x-cfn-type-name: AWS::Route53RecoveryReadiness::ReadinessCheck
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ResourceSetName') as resource_set_name,
              JSON_EXTRACT(detail.Properties, '$.ReadinessCheckName') as readiness_check_name,
              JSON_EXTRACT(detail.Properties, '$.ReadinessCheckArn') as readiness_check_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
              AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ResourceSetName') as resource_set_name,
                json_extract_path_text(detail.Properties, 'ReadinessCheckName') as readiness_check_name,
                json_extract_path_text(detail.Properties, 'ReadinessCheckArn') as readiness_check_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                AND listing.region = 'us-east-1'
    recovery_groups:
      name: recovery_groups
      id: aws.route53recoveryreadiness.recovery_groups
      x-cfn-schema-name: RecoveryGroup
      x-cfn-type-name: AWS::Route53RecoveryReadiness::RecoveryGroup
      x-identifiers:
        - RecoveryGroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RecoveryGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::RecoveryGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::RecoveryGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::RecoveryGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/recovery_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/recovery_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/recovery_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RecoveryGroupName') as recovery_group_name,
              JSON_EXTRACT(Properties, '$.Cells') as cells,
              JSON_EXTRACT(Properties, '$.RecoveryGroupArn') as recovery_group_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
              AND data__Identifier = '<RecoveryGroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.RecoveryGroupName') as recovery_group_name,
                JSON_EXTRACT(detail.Properties, '$.Cells') as cells,
                JSON_EXTRACT(detail.Properties, '$.RecoveryGroupArn') as recovery_group_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'RecoveryGroupName') as recovery_group_name,
                  json_extract_path_text(Properties, 'Cells') as cells,
                  json_extract_path_text(Properties, 'RecoveryGroupArn') as recovery_group_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                  AND data__Identifier = '<RecoveryGroupName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'RecoveryGroupName') as recovery_group_name,
                    json_extract_path_text(detail.Properties, 'Cells') as cells,
                    json_extract_path_text(detail.Properties, 'RecoveryGroupArn') as recovery_group_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                    AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                    AND listing.region = 'us-east-1'
    recovery_groups_list_only:
      name: recovery_groups_list_only
      id: aws.route53recoveryreadiness.recovery_groups_list_only
      x-cfn-schema-name: RecoveryGroup
      x-cfn-type-name: AWS::Route53RecoveryReadiness::RecoveryGroup
      x-identifiers:
        - RecoveryGroupName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RecoveryGroupName') as recovery_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RecoveryGroupName') as recovery_group_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                AND region = 'us-east-1'
    recovery_group_tags:
      name: recovery_group_tags
      id: aws.route53recoveryreadiness.recovery_group_tags
      x-cfn-schema-name: RecoveryGroup
      x-cfn-type-name: AWS::Route53RecoveryReadiness::RecoveryGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.RecoveryGroupName') as recovery_group_name,
              JSON_EXTRACT(detail.Properties, '$.Cells') as cells,
              JSON_EXTRACT(detail.Properties, '$.RecoveryGroupArn') as recovery_group_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
              AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'RecoveryGroupName') as recovery_group_name,
                json_extract_path_text(detail.Properties, 'Cells') as cells,
                json_extract_path_text(detail.Properties, 'RecoveryGroupArn') as recovery_group_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                AND listing.region = 'us-east-1'
    resource_sets:
      name: resource_sets
      id: aws.route53recoveryreadiness.resource_sets
      x-cfn-schema-name: ResourceSet
      x-cfn-type-name: AWS::Route53RecoveryReadiness::ResourceSet
      x-identifiers:
        - ResourceSetName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResourceSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::ResourceSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::ResourceSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Route53RecoveryReadiness::ResourceSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/resource_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceSetName') as resource_set_name,
              JSON_EXTRACT(Properties, '$.Resources') as resources,
              JSON_EXTRACT(Properties, '$.ResourceSetArn') as resource_set_arn,
              JSON_EXTRACT(Properties, '$.ResourceSetType') as resource_set_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
              AND data__Identifier = '<ResourceSetName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ResourceSetName') as resource_set_name,
                JSON_EXTRACT(detail.Properties, '$.Resources') as resources,
                JSON_EXTRACT(detail.Properties, '$.ResourceSetArn') as resource_set_arn,
                JSON_EXTRACT(detail.Properties, '$.ResourceSetType') as resource_set_type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ResourceSetName') as resource_set_name,
                  json_extract_path_text(Properties, 'Resources') as resources,
                  json_extract_path_text(Properties, 'ResourceSetArn') as resource_set_arn,
                  json_extract_path_text(Properties, 'ResourceSetType') as resource_set_type,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                  AND data__Identifier = '<ResourceSetName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ResourceSetName') as resource_set_name,
                    json_extract_path_text(detail.Properties, 'Resources') as resources,
                    json_extract_path_text(detail.Properties, 'ResourceSetArn') as resource_set_arn,
                    json_extract_path_text(detail.Properties, 'ResourceSetType') as resource_set_type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                    AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                    AND listing.region = 'us-east-1'
    resource_sets_list_only:
      name: resource_sets_list_only
      id: aws.route53recoveryreadiness.resource_sets_list_only
      x-cfn-schema-name: ResourceSet
      x-cfn-type-name: AWS::Route53RecoveryReadiness::ResourceSet
      x-identifiers:
        - ResourceSetName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceSetName') as resource_set_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ResourceSetName') as resource_set_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                AND region = 'us-east-1'
    resource_set_tags:
      name: resource_set_tags
      id: aws.route53recoveryreadiness.resource_set_tags
      x-cfn-schema-name: ResourceSet
      x-cfn-type-name: AWS::Route53RecoveryReadiness::ResourceSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ResourceSetName') as resource_set_name,
              JSON_EXTRACT(detail.Properties, '$.Resources') as resources,
              JSON_EXTRACT(detail.Properties, '$.ResourceSetArn') as resource_set_arn,
              JSON_EXTRACT(detail.Properties, '$.ResourceSetType') as resource_set_type
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
              AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ResourceSetName') as resource_set_name,
                json_extract_path_text(detail.Properties, 'Resources') as resources,
                json_extract_path_text(detail.Properties, 'ResourceSetArn') as resource_set_arn,
                json_extract_path_text(detail.Properties, 'ResourceSetType') as resource_set_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                AND detail.data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Cell&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCell
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCellRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ReadinessCheck&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateReadinessCheck
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateReadinessCheckRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RecoveryGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRecoveryGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRecoveryGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResourceSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResourceSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResourceSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
