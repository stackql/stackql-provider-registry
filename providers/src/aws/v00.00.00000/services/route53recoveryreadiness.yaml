openapi: 3.0.0
info:
  title: Route53RecoveryReadiness
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
      required:
        - Value
        - Key
    Cell:
      type: object
      properties:
        CellName:
          description: The name of the cell to create.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          maxLength: 64
        CellArn:
          description: The Amazon Resource Name (ARN) of the cell.
          type: string
          maxLength: 256
        Cells:
          description: A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions.
          type: array
          items:
            type: string
          maxItems: 5
          x-insertionOrder: false
        ParentReadinessScopes:
          description: The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.
          type: array
          items:
            type: string
          maxItems: 5
          x-insertionOrder: false
        Tags:
          description: A collection of tags associated with a resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      x-stackql-resource-name: cell
      description: The API Schema for AWS Route53 Recovery Readiness Cells.
      x-type-name: AWS::Route53RecoveryReadiness::Cell
      x-stackql-primary-identifier:
        - CellName
      x-create-only-properties:
        - CellName
      x-read-only-properties:
        - CellArn
        - ParentReadinessScopes
      x-taggable: true
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateCell
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
          - route53-recovery-readiness:UpdateCell
        delete:
          - route53-recovery-readiness:DeleteCell
          - route53-recovery-readiness:GetCell
        list:
          - route53-recovery-readiness:ListCells
    ReadinessCheck:
      type: object
      properties:
        ResourceSetName:
          description: The name of the resource set to check.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 64
        ReadinessCheckName:
          description: Name of the ReadinessCheck to create.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 64
        ReadinessCheckArn:
          description: The Amazon Resource Name (ARN) of the readiness check.
          type: string
          maxLength: 256
        Tags:
          description: A collection of tags associated with a resource.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      x-stackql-resource-name: readiness_check
      description: Aws Route53 Recovery Readiness Check Schema and API specification.
      x-type-name: AWS::Route53RecoveryReadiness::ReadinessCheck
      x-stackql-primary-identifier:
        - ReadinessCheckName
      x-create-only-properties:
        - ReadinessCheckName
      x-read-only-properties:
        - ReadinessCheckArn
      x-taggable: true
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateReadinessCheck
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetReadinessCheck
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetReadinessCheck
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:UpdateReadinessCheck
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetReadinessCheck
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
        delete:
          - route53-recovery-readiness:DeleteReadinessCheck
          - route53-recovery-readiness:GetReadinessCheck
        list:
          - route53-recovery-readiness:ListReadinessChecks
          - route53-recovery-readiness:GetReadinessChecks
    RecoveryGroup:
      type: object
      properties:
        RecoveryGroupName:
          description: The name of the recovery group to create.
          type: string
          pattern: '[a-zA-Z0-9_]+'
          minLength: 1
          maxLength: 64
        Cells:
          description: A list of the cell Amazon Resource Names (ARNs) in the recovery group.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          maxItems: 5
          x-insertionOrder: false
        RecoveryGroupArn:
          description: A collection of tags associated with a resource.
          type: string
          maxLength: 256
        Tags:
          description: A collection of tags associated with a resource.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      x-stackql-resource-name: recovery_group
      description: AWS Route53 Recovery Readiness Recovery Group Schema and API specifications.
      x-type-name: AWS::Route53RecoveryReadiness::RecoveryGroup
      x-stackql-primary-identifier:
        - RecoveryGroupName
      x-create-only-properties:
        - RecoveryGroupName
      x-read-only-properties:
        - RecoveryGroupArn
      x-taggable: true
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateRecoveryGroup
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:UpdateRecoveryGroup
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
        delete:
          - route53-recovery-readiness:DeleteRecoveryGroup
          - route53-recovery-readiness:GetRecoveryGroup
        list:
          - route53-recovery-readiness:ListRecoveryGroups
    NLBResource:
      description: The Network Load Balancer resource that a DNS target resource points to.
      type: object
      properties:
        Arn:
          description: A Network Load Balancer resource Amazon Resource Name (ARN).
          type: string
      additionalProperties: false
    R53ResourceRecord:
      description: The Route 53 resource that a DNS target resource record points to.
      type: object
      properties:
        DomainName:
          description: The DNS target domain name.
          type: string
        RecordSetId:
          description: The Resource Record set id.
          type: string
      additionalProperties: false
    TargetResource:
      description: The target resource that the Route 53 record points to.
      type: object
      properties:
        NLBResource:
          $ref: '#/components/schemas/NLBResource'
        R53Resource:
          $ref: '#/components/schemas/R53ResourceRecord'
      oneOf:
        - required:
            - NLBResource
        - required:
            - R53Resource
      additionalProperties: false
    DNSTargetResource:
      description: A component for DNS/routing control readiness checks.
      type: object
      properties:
        DomainName:
          description: The domain name that acts as an ingress point to a portion of the customer application.
          type: string
        RecordSetId:
          description: The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
          type: string
        HostedZoneArn:
          description: The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
          type: string
        RecordType:
          description: The type of DNS record of the target resource.
          type: string
        TargetResource:
          $ref: '#/components/schemas/TargetResource'
      additionalProperties: false
    Resource:
      description: The resource element of a ResourceSet
      type: object
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the AWS resource.
          type: string
        ComponentId:
          description: The component identifier of the resource, generated when DNS target resource is used.
          type: string
        DnsTargetResource:
          $ref: '#/components/schemas/DNSTargetResource'
        ReadinessScopes:
          description: A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within.
          type: array
          items:
            type: string
            maxItems: 5
          x-insertionOrder: false
      additionalProperties: false
    ResourceSet:
      type: object
      properties:
        ResourceSetName:
          description: The name of the resource set to create.
          type: string
        Resources:
          description: A list of resource objects in the resource set.
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          minItems: 1
          maxItems: 6
          x-insertionOrder: false
        ResourceSetArn:
          description: The Amazon Resource Name (ARN) of the resource set.
          type: string
          minLength: 1
          maxLength: 256
        ResourceSetType:
          description: |-
            The resource type of the resources in the resource set. Enter one of the following values for resource type: 

            AWS: :AutoScaling: :AutoScalingGroup, AWS: :CloudWatch: :Alarm, AWS: :EC2: :CustomerGateway, AWS: :DynamoDB: :Table, AWS: :EC2: :Volume, AWS: :ElasticLoadBalancing: :LoadBalancer, AWS: :ElasticLoadBalancingV2: :LoadBalancer, AWS: :MSK: :Cluster, AWS: :RDS: :DBCluster, AWS: :Route53: :HealthCheck, AWS: :SQS: :Queue, AWS: :SNS: :Topic, AWS: :SNS: :Subscription, AWS: :EC2: :VPC, AWS: :EC2: :VPNConnection, AWS: :EC2: :VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource
          type: string
        Tags:
          description: A tag to associate with the parameters for a resource set.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      required:
        - ResourceSetType
        - Resources
      x-stackql-resource-name: resource_set
      description: Schema for the AWS Route53 Recovery Readiness ResourceSet Resource and API.
      x-type-name: AWS::Route53RecoveryReadiness::ResourceSet
      x-stackql-primary-identifier:
        - ResourceSetName
      x-create-only-properties:
        - ResourceSetName
        - ResourceSetType
      x-read-only-properties:
        - ResourceSetArn
      x-required-properties:
        - ResourceSetType
        - Resources
      x-taggable: true
      x-required-permissions:
        create:
          - route53-recovery-readiness:CreateResourceSet
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
        read:
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:ListTagsForResources
        update:
          - route53-recovery-readiness:UpdateResourceSet
          - route53-recovery-readiness:GetResourceSet
          - route53-recovery-readiness:GetRecoveryGroup
          - route53-recovery-readiness:GetCell
          - route53-recovery-readiness:ListTagsForResources
          - route53-recovery-readiness:TagResource
          - route53-recovery-readiness:UntagResource
        delete:
          - route53-recovery-readiness:DeleteResourceSet
          - route53-recovery-readiness:GetResourceSet
        list:
          - route53-recovery-readiness:ListResourceSets
  x-stackQL-resources:
    cells:
      name: cells
      id: aws.route53recoveryreadiness.cells
      x-cfn-schema-name: Cell
      x-type: list
      x-identifiers:
        - CellName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CellName') as cell_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CellName') as cell_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                AND region = 'us-east-1'
    cell:
      name: cell
      id: aws.route53recoveryreadiness.cell
      x-cfn-schema-name: Cell
      x-type: get
      x-identifiers:
        - CellName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CellName') as cell_name,
              JSON_EXTRACT(Properties, '$.CellArn') as cell_arn,
              JSON_EXTRACT(Properties, '$.Cells') as cells,
              JSON_EXTRACT(Properties, '$.ParentReadinessScopes') as parent_readiness_scopes,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
              AND data__Identifier = '<CellName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'CellName') as cell_name,
                json_extract_path_text(Properties, 'CellArn') as cell_arn,
                json_extract_path_text(Properties, 'Cells') as cells,
                json_extract_path_text(Properties, 'ParentReadinessScopes') as parent_readiness_scopes,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::Cell'
                AND data__Identifier = '<CellName>'
                AND region = 'us-east-1'
    readiness_checks:
      name: readiness_checks
      id: aws.route53recoveryreadiness.readiness_checks
      x-cfn-schema-name: ReadinessCheck
      x-type: list
      x-identifiers:
        - ReadinessCheckName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReadinessCheckName') as readiness_check_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReadinessCheckName') as readiness_check_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                AND region = 'us-east-1'
    readiness_check:
      name: readiness_check
      id: aws.route53recoveryreadiness.readiness_check
      x-cfn-schema-name: ReadinessCheck
      x-type: get
      x-identifiers:
        - ReadinessCheckName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceSetName') as resource_set_name,
              JSON_EXTRACT(Properties, '$.ReadinessCheckName') as readiness_check_name,
              JSON_EXTRACT(Properties, '$.ReadinessCheckArn') as readiness_check_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
              AND data__Identifier = '<ReadinessCheckName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ResourceSetName') as resource_set_name,
                json_extract_path_text(Properties, 'ReadinessCheckName') as readiness_check_name,
                json_extract_path_text(Properties, 'ReadinessCheckArn') as readiness_check_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ReadinessCheck'
                AND data__Identifier = '<ReadinessCheckName>'
                AND region = 'us-east-1'
    recovery_groups:
      name: recovery_groups
      id: aws.route53recoveryreadiness.recovery_groups
      x-cfn-schema-name: RecoveryGroup
      x-type: list
      x-identifiers:
        - RecoveryGroupName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RecoveryGroupName') as recovery_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RecoveryGroupName') as recovery_group_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                AND region = 'us-east-1'
    recovery_group:
      name: recovery_group
      id: aws.route53recoveryreadiness.recovery_group
      x-cfn-schema-name: RecoveryGroup
      x-type: get
      x-identifiers:
        - RecoveryGroupName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RecoveryGroupName') as recovery_group_name,
              JSON_EXTRACT(Properties, '$.Cells') as cells,
              JSON_EXTRACT(Properties, '$.RecoveryGroupArn') as recovery_group_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
              AND data__Identifier = '<RecoveryGroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'RecoveryGroupName') as recovery_group_name,
                json_extract_path_text(Properties, 'Cells') as cells,
                json_extract_path_text(Properties, 'RecoveryGroupArn') as recovery_group_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::RecoveryGroup'
                AND data__Identifier = '<RecoveryGroupName>'
                AND region = 'us-east-1'
    resource_sets:
      name: resource_sets
      id: aws.route53recoveryreadiness.resource_sets
      x-cfn-schema-name: ResourceSet
      x-type: list
      x-identifiers:
        - ResourceSetName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceSetName') as resource_set_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ResourceSetName') as resource_set_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                AND region = 'us-east-1'
    resource_set:
      name: resource_set
      id: aws.route53recoveryreadiness.resource_set
      x-cfn-schema-name: ResourceSet
      x-type: get
      x-identifiers:
        - ResourceSetName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceSetName') as resource_set_name,
              JSON_EXTRACT(Properties, '$.Resources') as resources,
              JSON_EXTRACT(Properties, '$.ResourceSetArn') as resource_set_arn,
              JSON_EXTRACT(Properties, '$.ResourceSetType') as resource_set_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
              AND data__Identifier = '<ResourceSetName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ResourceSetName') as resource_set_name,
                json_extract_path_text(Properties, 'Resources') as resources,
                json_extract_path_text(Properties, 'ResourceSetArn') as resource_set_arn,
                json_extract_path_text(Properties, 'ResourceSetType') as resource_set_type,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryReadiness::ResourceSet'
                AND data__Identifier = '<ResourceSetName>'
                AND region = 'us-east-1'
