openapi: 3.0.0
info:
  title: FraudDetector
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    EventVariable:
      type: object
      properties:
        Arn:
          type: string
        Inline:
          type: boolean
        Name:
          type: string
        DataSource:
          type: string
          enum:
            - EVENT
        DataType:
          type: string
          enum:
            - STRING
            - INTEGER
            - FLOAT
            - BOOLEAN
        DefaultValue:
          type: string
        VariableType:
          type: string
          enum:
            - AUTH_CODE
            - AVS
            - BILLING_ADDRESS_L1
            - BILLING_ADDRESS_L2
            - BILLING_CITY
            - BILLING_COUNTRY
            - BILLING_NAME
            - BILLING_PHONE
            - BILLING_STATE
            - BILLING_ZIP
            - CARD_BIN
            - CATEGORICAL
            - CURRENCY_CODE
            - EMAIL_ADDRESS
            - FINGERPRINT
            - FRAUD_LABEL
            - FREE_FORM_TEXT
            - IP_ADDRESS
            - NUMERIC
            - ORDER_ID
            - PAYMENT_TYPE
            - PHONE_NUMBER
            - PRICE
            - PRODUCT_CATEGORY
            - SHIPPING_ADDRESS_L1
            - SHIPPING_ADDRESS_L2
            - SHIPPING_CITY
            - SHIPPING_COUNTRY
            - SHIPPING_NAME
            - SHIPPING_PHONE
            - SHIPPING_STATE
            - SHIPPING_ZIP
            - USERAGENT
        Description:
          description: The description.
          type: string
          minLength: 1
          maxLength: 256
        Tags:
          description: Tags associated with this event type.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        CreatedTime:
          description: The time when the event type was created.
          type: string
        LastUpdatedTime:
          description: The time when the event type was last updated.
          type: string
      additionalProperties: false
    Label:
      type: object
      properties:
        Name:
          description: The name of the label.
          type: string
          pattern: ^[0-9a-z_-]+$
          minLength: 1
          maxLength: 64
        Tags:
          description: Tags associated with this label.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        Description:
          description: The label description.
          type: string
          minLength: 1
          maxLength: 128
        Arn:
          description: The label ARN.
          type: string
        CreatedTime:
          description: The timestamp when the label was created.
          type: string
        LastUpdatedTime:
          description: The timestamp when the label was last updated.
          type: string
      required:
        - Name
      x-stackql-resource-name: label
      description: An label for fraud detector.
      x-type-name: AWS::FraudDetector::Label
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreatedTime
        - LastUpdatedTime
      x-required-properties:
        - Name
      x-required-permissions:
        create:
          - frauddetector:GetLabels
          - frauddetector:PutLabel
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
        read:
          - frauddetector:GetLabels
          - frauddetector:ListTagsForResource
        update:
          - frauddetector:GetLabels
          - frauddetector:PutLabel
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
          - frauddetector:UntagResource
        delete:
          - frauddetector:GetLabels
          - frauddetector:DeleteLabel
        list:
          - frauddetector:GetLabels
          - frauddetector:ListTagsForResource
    Outcome:
      type: object
      properties:
        Name:
          description: The name of the outcome.
          type: string
          pattern: ^[0-9a-z_-]+$
          minLength: 1
          maxLength: 64
        Tags:
          description: Tags associated with this outcome.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        Description:
          description: The outcome description.
          type: string
          minLength: 1
          maxLength: 128
        Arn:
          description: The outcome ARN.
          type: string
        CreatedTime:
          description: The timestamp when the outcome was created.
          type: string
        LastUpdatedTime:
          description: The timestamp when the outcome was last updated.
          type: string
      required:
        - Name
      x-stackql-resource-name: outcome
      description: An outcome for rule evaluation.
      x-type-name: AWS::FraudDetector::Outcome
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreatedTime
        - LastUpdatedTime
      x-required-properties:
        - Name
      x-required-permissions:
        create:
          - frauddetector:GetOutcomes
          - frauddetector:PutOutcome
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
        read:
          - frauddetector:GetOutcomes
          - frauddetector:ListTagsForResource
        update:
          - frauddetector:GetOutcomes
          - frauddetector:PutOutcome
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
          - frauddetector:UntagResource
        delete:
          - frauddetector:GetOutcomes
          - frauddetector:DeleteOutcome
        list:
          - frauddetector:GetOutcomes
          - frauddetector:ListTagsForResource
    Rule:
      type: object
      properties:
        RuleId:
          type: string
        RuleVersion:
          type: string
        DetectorId:
          type: string
        Expression:
          type: string
        Language:
          type: string
          enum:
            - DETECTORPL
        Outcomes:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          items:
            $ref: '#/components/schemas/Outcome'
        Arn:
          type: string
        Description:
          description: The description.
          type: string
          minLength: 1
          maxLength: 256
        Tags:
          description: Tags associated with this event type.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        CreatedTime:
          description: The time when the event type was created.
          type: string
        LastUpdatedTime:
          description: The time when the event type was last updated.
          type: string
      additionalProperties: false
    EntityType:
      type: object
      properties:
        Arn:
          type: string
        Inline:
          type: boolean
        Name:
          type: string
        Description:
          description: The description.
          type: string
          minLength: 1
          maxLength: 256
        Tags:
          description: Tags associated with this event type.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        CreatedTime:
          description: The time when the event type was created.
          type: string
        LastUpdatedTime:
          description: The time when the event type was last updated.
          type: string
      additionalProperties: false
    EventType:
      type: object
      properties:
        Name:
          description: The name for the event type
          type: string
          pattern: ^[0-9a-z_-]+$
          minLength: 1
          maxLength: 64
        Tags:
          description: Tags associated with this event type.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        Description:
          description: The description of the event type.
          type: string
          minLength: 1
          maxLength: 128
        EventVariables:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          items:
            $ref: '#/components/schemas/EventVariable'
        Labels:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 2
          items:
            $ref: '#/components/schemas/Label'
        EntityTypes:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          items:
            $ref: '#/components/schemas/EntityType'
        Arn:
          description: The ARN of the event type.
          type: string
        CreatedTime:
          description: The time when the event type was created.
          type: string
        LastUpdatedTime:
          description: The time when the event type was last updated.
          type: string
      required:
        - EntityTypes
        - EventVariables
        - Labels
        - Name
      x-stackql-resource-name: event_type
      description: A resource schema for an EventType in Amazon Fraud Detector.
      x-type-name: AWS::FraudDetector::EventType
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreatedTime
        - LastUpdatedTime
        - EventVariables/*/Arn
        - EventVariables/*/CreatedTime
        - EventVariables/*/LastUpdatedTime
        - Labels/*/Arn
        - Labels/*/CreatedTime
        - Labels/*/LastUpdatedTime
        - EntityTypes/*/Arn
        - EntityTypes/*/CreatedTime
        - EntityTypes/*/LastUpdatedTime
      x-required-properties:
        - EntityTypes
        - EventVariables
        - Labels
        - Name
      x-required-permissions:
        create:
          - frauddetector:BatchCreateVariable
          - frauddetector:BatchGetVariable
          - frauddetector:CreateVariable
          - frauddetector:GetVariables
          - frauddetector:PutLabel
          - frauddetector:PutEntityType
          - frauddetector:PutEventType
          - frauddetector:GetEventTypes
          - frauddetector:GetLabels
          - frauddetector:GetEntityTypes
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
        update:
          - frauddetector:BatchCreateVariable
          - frauddetector:BatchGetVariable
          - frauddetector:CreateVariable
          - frauddetector:UpdateVariable
          - frauddetector:GetVariables
          - frauddetector:PutLabel
          - frauddetector:PutEntityType
          - frauddetector:PutEventType
          - frauddetector:GetEventTypes
          - frauddetector:GetLabels
          - frauddetector:GetEntityTypes
          - frauddetector:DeleteEventType
          - frauddetector:DeleteVariable
          - frauddetector:DeleteLabel
          - frauddetector:DeleteEntityType
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
          - frauddetector:UntagResource
        delete:
          - frauddetector:BatchGetVariable
          - frauddetector:GetVariables
          - frauddetector:GetEventTypes
          - frauddetector:GetLabels
          - frauddetector:GetEntityTypes
          - frauddetector:DeleteEventType
          - frauddetector:DeleteVariable
          - frauddetector:DeleteLabel
          - frauddetector:DeleteEntityType
          - frauddetector:ListTagsForResource
        read:
          - frauddetector:BatchGetVariable
          - frauddetector:GetVariables
          - frauddetector:GetEventTypes
          - frauddetector:GetLabels
          - frauddetector:GetEntityTypes
          - frauddetector:ListTagsForResource
        list:
          - frauddetector:BatchGetVariable
          - frauddetector:GetVariables
          - frauddetector:GetEventTypes
          - frauddetector:GetLabels
          - frauddetector:GetEntityTypes
          - frauddetector:ListTagsForResource
    Model:
      description: A model to associate with a detector.
      type: object
      properties:
        Arn:
          type: string
      additionalProperties: false
    Detector:
      type: object
      properties:
        DetectorId:
          description: The ID of the detector
          type: string
          pattern: ^[0-9a-z_-]+$
          minLength: 1
          maxLength: 64
        DetectorVersionStatus:
          description: The desired detector version status for the detector
          type: string
          enum:
            - DRAFT
            - ACTIVE
        DetectorVersionId:
          description: The active version ID of the detector
          type: string
        RuleExecutionMode:
          type: string
          enum:
            - FIRST_MATCHED
            - ALL_MATCHED
        Tags:
          description: Tags associated with this detector.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        Description:
          description: The description of the detector.
          type: string
          minLength: 1
          maxLength: 128
        Rules:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          minItems: 1
          items:
            $ref: '#/components/schemas/Rule'
        EventType:
          description: The event type to associate this detector with.
          $ref: '#/components/schemas/EventType'
        Arn:
          description: The ARN of the detector.
          type: string
        CreatedTime:
          description: The time when the detector was created.
          type: string
        LastUpdatedTime:
          description: The time when the detector was last updated.
          type: string
        AssociatedModels:
          description: The models to associate with this detector.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 10
          items:
            $ref: '#/components/schemas/Model'
      required:
        - DetectorId
        - EventType
        - Rules
      x-stackql-resource-name: detector
      description: A resource schema for a Detector in Amazon Fraud Detector.
      x-type-name: AWS::FraudDetector::Detector
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DetectorId
      x-read-only-properties:
        - Arn
        - DetectorVersionId
        - CreatedTime
        - LastUpdatedTime
        - Rules/*/RuleVersion
        - Rules/*/Arn
        - Rules/*/CreatedTime
        - Rules/*/LastUpdatedTime
        - Rules/*/Outcomes/*/Arn
        - Rules/*/Outcomes/*/CreatedTime
        - Rules/*/Outcomes/*/LastUpdatedTime
        - EventType/Arn
        - EventType/CreatedTime
        - EventType/LastUpdatedTime
        - EventType/EventVariables/*/Arn
        - EventType/EventVariables/*/CreatedTime
        - EventType/EventVariables/*/LastUpdatedTime
        - EventType/Labels/*/Arn
        - EventType/Labels/*/CreatedTime
        - EventType/Labels/*/LastUpdatedTime
        - EventType/EntityTypes/*/Arn
        - EventType/EntityTypes/*/CreatedTime
        - EventType/EntityTypes/*/LastUpdatedTime
        - AssociatedModels/*/Arn
      x-required-properties:
        - DetectorId
        - EventType
        - Rules
      x-required-permissions:
        create:
          - frauddetector:PutDetector
          - frauddetector:CreateDetectorVersion
          - frauddetector:UpdateDetectorVersionStatus
          - frauddetector:CreateRule
          - frauddetector:CreateVariable
          - frauddetector:PutLabel
          - frauddetector:PutOutcome
          - frauddetector:PutEntityType
          - frauddetector:PutEventType
          - frauddetector:DescribeDetector
          - frauddetector:GetDetectors
          - frauddetector:GetDetectorVersion
          - frauddetector:GetRules
          - frauddetector:GetVariables
          - frauddetector:GetEventTypes
          - frauddetector:GetExternalModels
          - frauddetector:GetModelVersion
          - frauddetector:GetLabels
          - frauddetector:GetOutcomes
          - frauddetector:GetEntityTypes
          - frauddetector:ListTagsForResource
        update:
          - frauddetector:GetDetectors
          - frauddetector:GetDetectorVersion
          - frauddetector:PutDetector
          - frauddetector:UpdateDetectorVersion
          - frauddetector:UpdateDetectorVersionStatus
          - frauddetector:UpdateDetectorVersionMetadata
          - frauddetector:UpdateRuleVersion
          - frauddetector:UpdateRuleMetadata
          - frauddetector:CreateRule
          - frauddetector:CreateVariable
          - frauddetector:UpdateVariable
          - frauddetector:GetVariables
          - frauddetector:PutLabel
          - frauddetector:PutOutcome
          - frauddetector:PutEntityType
          - frauddetector:PutEventType
          - frauddetector:GetRules
          - frauddetector:GetEventTypes
          - frauddetector:GetLabels
          - frauddetector:GetOutcomes
          - frauddetector:GetEntityTypes
          - frauddetector:GetExternalModels
          - frauddetector:GetModelVersion
          - frauddetector:DeleteEventType
          - frauddetector:DeleteVariable
          - frauddetector:DeleteLabel
          - frauddetector:DeleteEntityType
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
          - frauddetector:UntagResource
        delete:
          - frauddetector:GetDetectors
          - frauddetector:GetDetectorVersion
          - frauddetector:DescribeDetector
          - frauddetector:GetRules
          - frauddetector:GetVariables
          - frauddetector:GetEventTypes
          - frauddetector:GetLabels
          - frauddetector:GetOutcomes
          - frauddetector:GetEntityTypes
          - frauddetector:DeleteDetector
          - frauddetector:DeleteDetectorVersion
          - frauddetector:DeleteRule
          - frauddetector:DeleteEventType
          - frauddetector:DeleteVariable
          - frauddetector:DeleteLabel
          - frauddetector:DeleteOutcome
          - frauddetector:DeleteEntityType
          - frauddetector:ListTagsForResource
        read:
          - frauddetector:GetDetectors
          - frauddetector:GetDetectorVersion
          - frauddetector:DescribeDetector
          - frauddetector:GetRules
          - frauddetector:GetVariables
          - frauddetector:GetEventTypes
          - frauddetector:GetExternalModels
          - frauddetector:GetModelVersion
          - frauddetector:GetLabels
          - frauddetector:GetOutcomes
          - frauddetector:GetEntityTypes
          - frauddetector:ListTagsForResource
        list:
          - frauddetector:GetDetectors
          - frauddetector:GetDetectorVersion
          - frauddetector:DescribeDetector
          - frauddetector:GetRules
          - frauddetector:GetVariables
          - frauddetector:GetEventTypes
          - frauddetector:GetExternalModels
          - frauddetector:GetModelVersion
          - frauddetector:GetLabels
          - frauddetector:GetOutcomes
          - frauddetector:GetEntityTypes
          - frauddetector:ListTagsForResource
    Element:
      description: An element in a list.
      type: string
      pattern: ^\S+( +\S+)*$
      minLength: 1
      maxLength: 64
    List:
      type: object
      properties:
        Arn:
          description: The list ARN.
          type: string
        Name:
          description: The name of the list.
          type: string
          pattern: ^[0-9a-z_]+$
          minLength: 1
          maxLength: 64
        Description:
          description: The description of the list.
          type: string
          minLength: 1
          maxLength: 128
        VariableType:
          description: The variable type of the list.
          type: string
          pattern: ^[A-Z_]{1,64}$
          minLength: 1
          maxLength: 64
        CreatedTime:
          description: The time when the list was created.
          type: string
        LastUpdatedTime:
          description: The time when the list was last updated.
          type: string
        Tags:
          description: Tags associated with this list.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        Elements:
          description: The elements in this list.
          type: array
          x-insertionOrder: false
          minItems: 0
          maxItems: 100000
          items:
            $ref: '#/components/schemas/Element'
      required:
        - Name
      x-stackql-resource-name: list
      description: A resource schema for a List in Amazon Fraud Detector.
      x-type-name: AWS::FraudDetector::List
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreatedTime
        - LastUpdatedTime
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - frauddetector:CreateList
          - frauddetector:GetListElements
          - frauddetector:GetListsMetadata
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
          - frauddetector:UpdateList
        read:
          - frauddetector:GetListElements
          - frauddetector:GetListsMetadata
          - frauddetector:ListTagsForResource
        update:
          - frauddetector:GetListElements
          - frauddetector:GetListsMetadata
          - frauddetector:ListTagsForResource
          - frauddetector:UntagResource
          - frauddetector:UpdateList
          - frauddetector:TagResource
        delete:
          - frauddetector:DeleteList
          - frauddetector:GetListsMetadata
        list:
          - frauddetector:GetListElements
          - frauddetector:GetListsMetadata
          - frauddetector:ListTagsForResource
    Variable:
      type: object
      properties:
        Name:
          description: The name of the variable.
          type: string
          pattern: ^[a-z_][a-z0-9_]{0,99}?$
        DataSource:
          description: The source of the data.
          type: string
          enum:
            - EVENT
            - EXTERNAL_MODEL_SCORE
        DataType:
          description: The data type.
          type: string
          enum:
            - STRING
            - INTEGER
            - FLOAT
            - BOOLEAN
        DefaultValue:
          description: The default value for the variable when no value is received.
          type: string
        Description:
          description: The description.
          type: string
          minLength: 1
          maxLength: 256
        Tags:
          description: Tags associated with this variable.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
        VariableType:
          description: The variable type. For more information see https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types
          type: string
          enum:
            - AUTH_CODE
            - AVS
            - BILLING_ADDRESS_L1
            - BILLING_ADDRESS_L2
            - BILLING_CITY
            - BILLING_COUNTRY
            - BILLING_NAME
            - BILLING_PHONE
            - BILLING_STATE
            - BILLING_ZIP
            - CARD_BIN
            - CATEGORICAL
            - CURRENCY_CODE
            - EMAIL_ADDRESS
            - FINGERPRINT
            - FRAUD_LABEL
            - FREE_FORM_TEXT
            - IP_ADDRESS
            - NUMERIC
            - ORDER_ID
            - PAYMENT_TYPE
            - PHONE_NUMBER
            - PRICE
            - PRODUCT_CATEGORY
            - SHIPPING_ADDRESS_L1
            - SHIPPING_ADDRESS_L2
            - SHIPPING_CITY
            - SHIPPING_COUNTRY
            - SHIPPING_NAME
            - SHIPPING_PHONE
            - SHIPPING_STATE
            - SHIPPING_ZIP
            - USERAGENT
        Arn:
          description: The ARN of the variable.
          type: string
        CreatedTime:
          description: The time when the variable was created.
          type: string
        LastUpdatedTime:
          description: The time when the variable was last updated.
          type: string
      required:
        - DataType
        - DataSource
        - DefaultValue
        - Name
      x-stackql-resource-name: variable
      description: A resource schema for a Variable in Amazon Fraud Detector.
      x-type-name: AWS::FraudDetector::Variable
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreatedTime
        - LastUpdatedTime
      x-required-properties:
        - DataType
        - DataSource
        - DefaultValue
        - Name
      x-required-permissions:
        create:
          - frauddetector:GetVariables
          - frauddetector:CreateVariable
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
        read:
          - frauddetector:GetVariables
          - frauddetector:ListTagsForResource
        update:
          - frauddetector:GetVariables
          - frauddetector:UpdateVariable
          - frauddetector:ListTagsForResource
          - frauddetector:TagResource
          - frauddetector:UntagResource
        delete:
          - frauddetector:GetVariables
          - frauddetector:DeleteVariable
        list:
          - frauddetector:GetVariables
          - frauddetector:ListTagsForResource
    CreateLabelRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the label.
              type: string
              pattern: ^[0-9a-z_-]+$
              minLength: 1
              maxLength: 64
            Tags:
              description: Tags associated with this label.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            Description:
              description: The label description.
              type: string
              minLength: 1
              maxLength: 128
            Arn:
              description: The label ARN.
              type: string
            CreatedTime:
              description: The timestamp when the label was created.
              type: string
            LastUpdatedTime:
              description: The timestamp when the label was last updated.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateLabelRequest
      type: object
      required: []
    CreateOutcomeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the outcome.
              type: string
              pattern: ^[0-9a-z_-]+$
              minLength: 1
              maxLength: 64
            Tags:
              description: Tags associated with this outcome.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            Description:
              description: The outcome description.
              type: string
              minLength: 1
              maxLength: 128
            Arn:
              description: The outcome ARN.
              type: string
            CreatedTime:
              description: The timestamp when the outcome was created.
              type: string
            LastUpdatedTime:
              description: The timestamp when the outcome was last updated.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateOutcomeRequest
      type: object
      required: []
    CreateEventTypeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name for the event type
              type: string
              pattern: ^[0-9a-z_-]+$
              minLength: 1
              maxLength: 64
            Tags:
              description: Tags associated with this event type.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            Description:
              description: The description of the event type.
              type: string
              minLength: 1
              maxLength: 128
            EventVariables:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              minItems: 1
              items:
                $ref: '#/components/schemas/EventVariable'
            Labels:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              minItems: 2
              items:
                $ref: '#/components/schemas/Label'
            EntityTypes:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              minItems: 1
              items:
                $ref: '#/components/schemas/EntityType'
            Arn:
              description: The ARN of the event type.
              type: string
            CreatedTime:
              description: The time when the event type was created.
              type: string
            LastUpdatedTime:
              description: The time when the event type was last updated.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateEventTypeRequest
      type: object
      required: []
    CreateDetectorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DetectorId:
              description: The ID of the detector
              type: string
              pattern: ^[0-9a-z_-]+$
              minLength: 1
              maxLength: 64
            DetectorVersionStatus:
              description: The desired detector version status for the detector
              type: string
              enum:
                - DRAFT
                - ACTIVE
            DetectorVersionId:
              description: The active version ID of the detector
              type: string
            RuleExecutionMode:
              type: string
              enum:
                - FIRST_MATCHED
                - ALL_MATCHED
            Tags:
              description: Tags associated with this detector.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            Description:
              description: The description of the detector.
              type: string
              minLength: 1
              maxLength: 128
            Rules:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              minItems: 1
              items:
                $ref: '#/components/schemas/Rule'
            EventType:
              description: The event type to associate this detector with.
              $ref: '#/components/schemas/EventType'
            Arn:
              description: The ARN of the detector.
              type: string
            CreatedTime:
              description: The time when the detector was created.
              type: string
            LastUpdatedTime:
              description: The time when the detector was last updated.
              type: string
            AssociatedModels:
              description: The models to associate with this detector.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 10
              items:
                $ref: '#/components/schemas/Model'
          x-stackQL-stringOnly: true
      x-title: CreateDetectorRequest
      type: object
      required: []
    CreateListRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The list ARN.
              type: string
            Name:
              description: The name of the list.
              type: string
              pattern: ^[0-9a-z_]+$
              minLength: 1
              maxLength: 64
            Description:
              description: The description of the list.
              type: string
              minLength: 1
              maxLength: 128
            VariableType:
              description: The variable type of the list.
              type: string
              pattern: ^[A-Z_]{1,64}$
              minLength: 1
              maxLength: 64
            CreatedTime:
              description: The time when the list was created.
              type: string
            LastUpdatedTime:
              description: The time when the list was last updated.
              type: string
            Tags:
              description: Tags associated with this list.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            Elements:
              description: The elements in this list.
              type: array
              x-insertionOrder: false
              minItems: 0
              maxItems: 100000
              items:
                $ref: '#/components/schemas/Element'
          x-stackQL-stringOnly: true
      x-title: CreateListRequest
      type: object
      required: []
    CreateVariableRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the variable.
              type: string
              pattern: ^[a-z_][a-z0-9_]{0,99}?$
            DataSource:
              description: The source of the data.
              type: string
              enum:
                - EVENT
                - EXTERNAL_MODEL_SCORE
            DataType:
              description: The data type.
              type: string
              enum:
                - STRING
                - INTEGER
                - FLOAT
                - BOOLEAN
            DefaultValue:
              description: The default value for the variable when no value is received.
              type: string
            Description:
              description: The description.
              type: string
              minLength: 1
              maxLength: 256
            Tags:
              description: Tags associated with this variable.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
            VariableType:
              description: The variable type. For more information see https://docs.aws.amazon.com/frauddetector/latest/ug/create-a-variable.html#variable-types
              type: string
              enum:
                - AUTH_CODE
                - AVS
                - BILLING_ADDRESS_L1
                - BILLING_ADDRESS_L2
                - BILLING_CITY
                - BILLING_COUNTRY
                - BILLING_NAME
                - BILLING_PHONE
                - BILLING_STATE
                - BILLING_ZIP
                - CARD_BIN
                - CATEGORICAL
                - CURRENCY_CODE
                - EMAIL_ADDRESS
                - FINGERPRINT
                - FRAUD_LABEL
                - FREE_FORM_TEXT
                - IP_ADDRESS
                - NUMERIC
                - ORDER_ID
                - PAYMENT_TYPE
                - PHONE_NUMBER
                - PRICE
                - PRODUCT_CATEGORY
                - SHIPPING_ADDRESS_L1
                - SHIPPING_ADDRESS_L2
                - SHIPPING_CITY
                - SHIPPING_COUNTRY
                - SHIPPING_NAME
                - SHIPPING_PHONE
                - SHIPPING_STATE
                - SHIPPING_ZIP
                - USERAGENT
            Arn:
              description: The ARN of the variable.
              type: string
            CreatedTime:
              description: The time when the variable was created.
              type: string
            LastUpdatedTime:
              description: The time when the variable was last updated.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateVariableRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    labels:
      name: labels
      id: aws.frauddetector.labels
      x-cfn-schema-name: Label
      x-cfn-type-name: AWS::FraudDetector::Label
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Label&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Label"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Label"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Label"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/labels/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/labels/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/labels/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Label'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Label'
                AND detail.data__TypeName = 'AWS::FraudDetector::Label'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'LastUpdatedTime') as last_updated_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Label'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FraudDetector::Label'
                    AND detail.data__TypeName = 'AWS::FraudDetector::Label'
                    AND listing.region = 'us-east-1'
    labels_list_only:
      name: labels_list_only
      id: aws.frauddetector.labels_list_only
      x-cfn-schema-name: Label
      x-cfn-type-name: AWS::FraudDetector::Label
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Label'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Label'
                AND region = 'us-east-1'
    label_tags:
      name: label_tags
      id: aws.frauddetector.label_tags
      x-cfn-schema-name: Label
      x-cfn-type-name: AWS::FraudDetector::Label
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FraudDetector::Label'
              AND detail.data__TypeName = 'AWS::FraudDetector::Label'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Label'
                AND detail.data__TypeName = 'AWS::FraudDetector::Label'
                AND listing.region = 'us-east-1'
    outcomes:
      name: outcomes
      id: aws.frauddetector.outcomes
      x-cfn-schema-name: Outcome
      x-cfn-type-name: AWS::FraudDetector::Outcome
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Outcome&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Outcome"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Outcome"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Outcome"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/outcomes/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/outcomes/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/outcomes/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Outcome'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Outcome'
                AND detail.data__TypeName = 'AWS::FraudDetector::Outcome'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'LastUpdatedTime') as last_updated_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Outcome'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FraudDetector::Outcome'
                    AND detail.data__TypeName = 'AWS::FraudDetector::Outcome'
                    AND listing.region = 'us-east-1'
    outcomes_list_only:
      name: outcomes_list_only
      id: aws.frauddetector.outcomes_list_only
      x-cfn-schema-name: Outcome
      x-cfn-type-name: AWS::FraudDetector::Outcome
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Outcome'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Outcome'
                AND region = 'us-east-1'
    outcome_tags:
      name: outcome_tags
      id: aws.frauddetector.outcome_tags
      x-cfn-schema-name: Outcome
      x-cfn-type-name: AWS::FraudDetector::Outcome
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FraudDetector::Outcome'
              AND detail.data__TypeName = 'AWS::FraudDetector::Outcome'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Outcome'
                AND detail.data__TypeName = 'AWS::FraudDetector::Outcome'
                AND listing.region = 'us-east-1'
    event_types:
      name: event_types
      id: aws.frauddetector.event_types
      x-cfn-schema-name: EventType
      x-cfn-type-name: AWS::FraudDetector::EventType
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EventType&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::EventType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::EventType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::EventType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/event_types/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/event_types/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/event_types/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EventVariables') as event_variables,
              JSON_EXTRACT(Properties, '$.Labels') as labels,
              JSON_EXTRACT(Properties, '$.EntityTypes') as entity_types,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::EventType'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EventVariables') as event_variables,
                JSON_EXTRACT(detail.Properties, '$.Labels') as labels,
                JSON_EXTRACT(detail.Properties, '$.EntityTypes') as entity_types,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FraudDetector::EventType'
                AND detail.data__TypeName = 'AWS::FraudDetector::EventType'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EventVariables') as event_variables,
                  json_extract_path_text(Properties, 'Labels') as labels,
                  json_extract_path_text(Properties, 'EntityTypes') as entity_types,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'LastUpdatedTime') as last_updated_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::EventType'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EventVariables') as event_variables,
                    json_extract_path_text(detail.Properties, 'Labels') as labels,
                    json_extract_path_text(detail.Properties, 'EntityTypes') as entity_types,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FraudDetector::EventType'
                    AND detail.data__TypeName = 'AWS::FraudDetector::EventType'
                    AND listing.region = 'us-east-1'
    event_types_list_only:
      name: event_types_list_only
      id: aws.frauddetector.event_types_list_only
      x-cfn-schema-name: EventType
      x-cfn-type-name: AWS::FraudDetector::EventType
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::EventType'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::EventType'
                AND region = 'us-east-1'
    event_type_tags:
      name: event_type_tags
      id: aws.frauddetector.event_type_tags
      x-cfn-schema-name: EventType
      x-cfn-type-name: AWS::FraudDetector::EventType
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EventVariables') as event_variables,
              JSON_EXTRACT(detail.Properties, '$.Labels') as labels,
              JSON_EXTRACT(detail.Properties, '$.EntityTypes') as entity_types,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FraudDetector::EventType'
              AND detail.data__TypeName = 'AWS::FraudDetector::EventType'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EventVariables') as event_variables,
                json_extract_path_text(detail.Properties, 'Labels') as labels,
                json_extract_path_text(detail.Properties, 'EntityTypes') as entity_types,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FraudDetector::EventType'
                AND detail.data__TypeName = 'AWS::FraudDetector::EventType'
                AND listing.region = 'us-east-1'
    detectors:
      name: detectors
      id: aws.frauddetector.detectors
      x-cfn-schema-name: Detector
      x-cfn-type-name: AWS::FraudDetector::Detector
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Detector&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Detector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Detector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Detector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/detectors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/detectors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/detectors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.DetectorVersionStatus') as detector_version_status,
              JSON_EXTRACT(Properties, '$.DetectorVersionId') as detector_version_id,
              JSON_EXTRACT(Properties, '$.RuleExecutionMode') as rule_execution_mode,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.EventType') as event_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(Properties, '$.AssociatedModels') as associated_models
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Detector'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
                JSON_EXTRACT(detail.Properties, '$.DetectorVersionStatus') as detector_version_status,
                JSON_EXTRACT(detail.Properties, '$.DetectorVersionId') as detector_version_id,
                JSON_EXTRACT(detail.Properties, '$.RuleExecutionMode') as rule_execution_mode,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Rules') as rules,
                JSON_EXTRACT(detail.Properties, '$.EventType') as event_type,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time,
                JSON_EXTRACT(detail.Properties, '$.AssociatedModels') as associated_models
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Detector'
                AND detail.data__TypeName = 'AWS::FraudDetector::Detector'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DetectorId') as detector_id,
                  json_extract_path_text(Properties, 'DetectorVersionStatus') as detector_version_status,
                  json_extract_path_text(Properties, 'DetectorVersionId') as detector_version_id,
                  json_extract_path_text(Properties, 'RuleExecutionMode') as rule_execution_mode,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Rules') as rules,
                  json_extract_path_text(Properties, 'EventType') as event_type,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'LastUpdatedTime') as last_updated_time,
                  json_extract_path_text(Properties, 'AssociatedModels') as associated_models
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Detector'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                    json_extract_path_text(detail.Properties, 'DetectorVersionStatus') as detector_version_status,
                    json_extract_path_text(detail.Properties, 'DetectorVersionId') as detector_version_id,
                    json_extract_path_text(detail.Properties, 'RuleExecutionMode') as rule_execution_mode,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Rules') as rules,
                    json_extract_path_text(detail.Properties, 'EventType') as event_type,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time,
                    json_extract_path_text(detail.Properties, 'AssociatedModels') as associated_models
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FraudDetector::Detector'
                    AND detail.data__TypeName = 'AWS::FraudDetector::Detector'
                    AND listing.region = 'us-east-1'
    detectors_list_only:
      name: detectors_list_only
      id: aws.frauddetector.detectors_list_only
      x-cfn-schema-name: Detector
      x-cfn-type-name: AWS::FraudDetector::Detector
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Detector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Detector'
                AND region = 'us-east-1'
    detector_tags:
      name: detector_tags
      id: aws.frauddetector.detector_tags
      x-cfn-schema-name: Detector
      x-cfn-type-name: AWS::FraudDetector::Detector
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(detail.Properties, '$.DetectorVersionStatus') as detector_version_status,
              JSON_EXTRACT(detail.Properties, '$.DetectorVersionId') as detector_version_id,
              JSON_EXTRACT(detail.Properties, '$.RuleExecutionMode') as rule_execution_mode,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Rules') as rules,
              JSON_EXTRACT(detail.Properties, '$.EventType') as event_type,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(detail.Properties, '$.AssociatedModels') as associated_models
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FraudDetector::Detector'
              AND detail.data__TypeName = 'AWS::FraudDetector::Detector'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                json_extract_path_text(detail.Properties, 'DetectorVersionStatus') as detector_version_status,
                json_extract_path_text(detail.Properties, 'DetectorVersionId') as detector_version_id,
                json_extract_path_text(detail.Properties, 'RuleExecutionMode') as rule_execution_mode,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Rules') as rules,
                json_extract_path_text(detail.Properties, 'EventType') as event_type,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time,
                json_extract_path_text(detail.Properties, 'AssociatedModels') as associated_models
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Detector'
                AND detail.data__TypeName = 'AWS::FraudDetector::Detector'
                AND listing.region = 'us-east-1'
    lists:
      name: lists
      id: aws.frauddetector.lists
      x-cfn-schema-name: List
      x-cfn-type-name: AWS::FraudDetector::List
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__List&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::List"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::List"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::List"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/lists/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/lists/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/lists/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.VariableType') as variable_type,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Elements') as elements
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::List'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.VariableType') as variable_type,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Elements') as elements
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FraudDetector::List'
                AND detail.data__TypeName = 'AWS::FraudDetector::List'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'VariableType') as variable_type,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'LastUpdatedTime') as last_updated_time,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Elements') as elements
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::List'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'VariableType') as variable_type,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Elements') as elements
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FraudDetector::List'
                    AND detail.data__TypeName = 'AWS::FraudDetector::List'
                    AND listing.region = 'us-east-1'
    lists_list_only:
      name: lists_list_only
      id: aws.frauddetector.lists_list_only
      x-cfn-schema-name: List
      x-cfn-type-name: AWS::FraudDetector::List
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::List'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::List'
                AND region = 'us-east-1'
    list_tags:
      name: list_tags
      id: aws.frauddetector.list_tags
      x-cfn-schema-name: List
      x-cfn-type-name: AWS::FraudDetector::List
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.VariableType') as variable_type,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(detail.Properties, '$.Elements') as elements
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FraudDetector::List'
              AND detail.data__TypeName = 'AWS::FraudDetector::List'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'VariableType') as variable_type,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time,
                json_extract_path_text(detail.Properties, 'Elements') as elements
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FraudDetector::List'
                AND detail.data__TypeName = 'AWS::FraudDetector::List'
                AND listing.region = 'us-east-1'
    variables:
      name: variables
      id: aws.frauddetector.variables
      x-cfn-schema-name: Variable
      x-cfn-type-name: AWS::FraudDetector::Variable
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Variable&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Variable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Variable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FraudDetector::Variable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/variables/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/variables/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/variables/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DataSource') as data_source,
              JSON_EXTRACT(Properties, '$.DataType') as data_type,
              JSON_EXTRACT(Properties, '$.DefaultValue') as default_value,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VariableType') as variable_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Variable'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.DataSource') as data_source,
                JSON_EXTRACT(detail.Properties, '$.DataType') as data_type,
                JSON_EXTRACT(detail.Properties, '$.DefaultValue') as default_value,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.VariableType') as variable_type,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Variable'
                AND detail.data__TypeName = 'AWS::FraudDetector::Variable'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'DataSource') as data_source,
                  json_extract_path_text(Properties, 'DataType') as data_type,
                  json_extract_path_text(Properties, 'DefaultValue') as default_value,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'VariableType') as variable_type,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'LastUpdatedTime') as last_updated_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FraudDetector::Variable'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'DataSource') as data_source,
                    json_extract_path_text(detail.Properties, 'DataType') as data_type,
                    json_extract_path_text(detail.Properties, 'DefaultValue') as default_value,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'VariableType') as variable_type,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FraudDetector::Variable'
                    AND detail.data__TypeName = 'AWS::FraudDetector::Variable'
                    AND listing.region = 'us-east-1'
    variables_list_only:
      name: variables_list_only
      id: aws.frauddetector.variables_list_only
      x-cfn-schema-name: Variable
      x-cfn-type-name: AWS::FraudDetector::Variable
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Variable'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FraudDetector::Variable'
                AND region = 'us-east-1'
    variable_tags:
      name: variable_tags
      id: aws.frauddetector.variable_tags
      x-cfn-schema-name: Variable
      x-cfn-type-name: AWS::FraudDetector::Variable
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.DataSource') as data_source,
              JSON_EXTRACT(detail.Properties, '$.DataType') as data_type,
              JSON_EXTRACT(detail.Properties, '$.DefaultValue') as default_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.VariableType') as variable_type,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FraudDetector::Variable'
              AND detail.data__TypeName = 'AWS::FraudDetector::Variable'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'DataSource') as data_source,
                json_extract_path_text(detail.Properties, 'DataType') as data_type,
                json_extract_path_text(detail.Properties, 'DefaultValue') as default_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'VariableType') as variable_type,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FraudDetector::Variable'
                AND detail.data__TypeName = 'AWS::FraudDetector::Variable'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Label&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLabel
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLabelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Outcome&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateOutcome
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateOutcomeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EventType&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEventType
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEventTypeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Detector&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDetector
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDetectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__List&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateList
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateListRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Variable&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateVariable
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateVariableRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
