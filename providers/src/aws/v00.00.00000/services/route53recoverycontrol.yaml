openapi: 3.0.0
info:
  title: Route53RecoveryControl
  version: 1.0.0
paths: {}
components:
  schemas:
    ClusterEndpoint:
      type: object
      properties:
        Endpoint:
          type: string
          minLength: 1
          maxLength: 128
        Region:
          type: string
          minLength: 1
          maxLength: 32
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    Cluster:
      type: object
      properties:
        Name:
          description: Name of a Cluster. You can use any non-white space character in the name
          type: string
          minLength: 1
          maxLength: 64
        ClusterArn:
          description: The Amazon Resource Name (ARN) of the cluster.
          type: string
          minLength: 1
          maxLength: 2048
        Status:
          description: 'Deployment status of a resource. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
          type: string
          enum:
            - PENDING
            - DEPLOYED
            - PENDING_DELETION
        ClusterEndpoints:
          description: Endpoints for the cluster.
          type: array
          items:
            $ref: '#/components/schemas/ClusterEndpoint'
          x-insertionOrder: false
        Tags:
          description: A collection of tags associated with a resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      required:
        - Name
      x-stackql-resource-name: cluster
      description: AWS Route53 Recovery Control Cluster resource schema
      x-type-name: AWS::Route53RecoveryControl::Cluster
      x-stackql-primary-identifier:
        - ClusterArn
      x-create-only-properties:
        - Name
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - ClusterArn
        - ClusterEndpoints
        - Status
      x-required-properties:
        - Name
      x-taggable: true
      x-required-permissions:
        create:
          - route53-recovery-control-config:CreateCluster
          - route53-recovery-control-config:DescribeCluster
          - route53-recovery-control-config:ListTagsForResource
          - route53-recovery-control-config:TagResource
        read:
          - route53-recovery-control-config:DescribeCluster
          - route53-recovery-control-config:ListTagsForResource
        delete:
          - route53-recovery-control-config:DescribeCluster
          - route53-recovery-control-config:DeleteCluster
        list:
          - route53-recovery-control-config:ListClusters
    ControlPanel:
      type: object
      properties:
        ClusterArn:
          description: Cluster to associate with the Control Panel
          type: string
        ControlPanelArn:
          description: The Amazon Resource Name (ARN) of the cluster.
          type: string
        Name:
          description: The name of the control panel. You can use any non-white space character in the name.
          type: string
          minLength: 1
          maxLength: 64
        Status:
          description: 'The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
          type: string
          enum:
            - PENDING
            - DEPLOYED
            - PENDING_DELETION
        DefaultControlPanel:
          description: A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets this flag for that control panel. If you create a control panel yourself, this flag is set to false.
          type: boolean
        RoutingControlCount:
          description: Count of associated routing controls
          type: integer
        Tags:
          description: A collection of tags associated with a resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      required:
        - Name
      x-stackql-resource-name: control_panel
      description: AWS Route53 Recovery Control Control Panel resource schema .
      x-type-name: AWS::Route53RecoveryControl::ControlPanel
      x-stackql-primary-identifier:
        - ControlPanelArn
      x-create-only-properties:
        - ClusterArn
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - ControlPanelArn
        - Status
        - RoutingControlCount
        - DefaultControlPanel
      x-required-properties:
        - Name
      x-taggable: true
      x-required-permissions:
        create:
          - route53-recovery-control-config:CreateControlPanel
          - route53-recovery-control-config:DescribeCluster
          - route53-recovery-control-config:DescribeControlPanel
          - route53-recovery-control-config:ListTagsForResource
          - route53-recovery-control-config:TagResource
        read:
          - route53-recovery-control-config:DescribeControlPanel
          - route53-recovery-control-config:ListTagsForResource
        update:
          - route53-recovery-control-config:UpdateControlPanel
          - route53-recovery-control-config:DescribeControlPanel
          - route53-recovery-control-config:ListTagsForResource
          - route53-recovery-control-config:TagResource
          - route53-recovery-control-config:UntagResource
        delete:
          - route53-recovery-control-config:DeleteControlPanel
          - route53-recovery-control-config:DescribeControlPanel
        list:
          - route53-recovery-control-config:ListControlPanels
    RoutingControl:
      type: object
      properties:
        RoutingControlArn:
          description: The Amazon Resource Name (ARN) of the routing control.
          type: string
        ControlPanelArn:
          description: The Amazon Resource Name (ARN) of the control panel.
          type: string
        Name:
          description: The name of the routing control. You can use any non-white space character in the name.
          type: string
          minLength: 1
          maxLength: 64
        Status:
          description: 'The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
          type: string
          enum:
            - PENDING
            - DEPLOYED
            - PENDING_DELETION
        ClusterArn:
          description: Arn associated with Control Panel
          type: string
      required:
        - Name
      x-stackql-resource-name: routing_control
      description: AWS Route53 Recovery Control Routing Control resource schema .
      x-type-name: AWS::Route53RecoveryControl::RoutingControl
      x-stackql-primary-identifier:
        - RoutingControlArn
      x-create-only-properties:
        - ControlPanelArn
        - ClusterArn
      x-write-only-properties:
        - ClusterArn
      x-read-only-properties:
        - RoutingControlArn
        - Status
      x-required-properties:
        - Name
      x-required-permissions:
        create:
          - route53-recovery-control-config:CreateRoutingControl
          - route53-recovery-control-config:DescribeRoutingControl
          - route53-recovery-control-config:DescribeControlPanel
          - route53-recovery-control-config:DescribeCluster
        read:
          - route53-recovery-control-config:DescribeRoutingControl
        update:
          - route53-recovery-control-config:UpdateRoutingControl
          - route53-recovery-control-config:DescribeRoutingControl
          - route53-recovery-control-config:DescribeControlPanel
        delete:
          - route53-recovery-control-config:DescribeRoutingControl
          - route53-recovery-control-config:DeleteRoutingControl
        list:
          - route53-recovery-control-config:ListRoutingControls
    SafetyRuleName:
      description: The name for the safety rule.
      type: string
    RuleType:
      description: 'A rule can be one of the following: ATLEAST, AND, or OR.'
      type: string
      enum:
        - AND
        - OR
        - ATLEAST
    RuleConfig:
      description: The rule configuration for an assertion rule or gating rule. This is the criteria that you set for specific assertion controls (routing controls) or gating controls. This configuration specifies how many controls must be enabled after a transaction completes.
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/RuleType'
        Threshold:
          description: The value of N, when you specify an ATLEAST rule type. That is, Threshold is the number of controls that must be set when you specify an ATLEAST type.
          type: integer
        Inverted:
          description: Logical negation of the rule. If the rule would usually evaluate true, it's evaluated as false, and vice versa.
          type: boolean
      required:
        - Type
        - Threshold
        - Inverted
      additionalProperties: false
    GatingRule:
      description: A gating rule verifies that a set of gating controls evaluates as true, based on a rule configuration that you specify. If the gating rule evaluates to true, Amazon Route 53 Application Recovery Controller allows a set of routing control state changes to run and complete against the set of target controls.
      type: object
      properties:
        GatingControls:
          description: The gating controls for the gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.
          type: array
          items:
            type: string
          x-insertionOrder: false
        TargetControls:
          description: |-
            Routing controls that can only be set or unset if the specified RuleConfig evaluates to true for the specified GatingControls. For example, say you have three gating controls, one for each of three AWS Regions. Now you specify AtLeast 2 as your RuleConfig. With these settings, you can only change (set or unset) the routing controls that you have specified as TargetControls if that rule evaluates to true. 
            In other words, your ability to change the routing controls that you have specified as TargetControls is gated by the rule that you set for the routing controls in GatingControls.
          type: array
          items:
            type: string
          x-insertionOrder: false
        WaitPeriodMs:
          description: An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.
          type: integer
      required:
        - WaitPeriodMs
        - TargetControls
        - GatingControls
      additionalProperties: false
    AssertionRule:
      description: An assertion rule enforces that, when a routing control state is changed, that the criteria set by the rule configuration is met. Otherwise, the change to the routing control is not accepted.
      type: object
      properties:
        WaitPeriodMs:
          description: An evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail. This helps prevent "flapping" of state. The wait period is 5000 ms by default, but you can choose a custom value.
          type: integer
        AssertedControls:
          description: The routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed. For example, you might include three routing controls, one for each of three AWS Regions.
          type: array
          items:
            type: string
          x-insertionOrder: false
      required:
        - AssertedControls
        - WaitPeriodMs
      additionalProperties: false
    SafetyRule:
      type: object
      properties:
        AssertionRule:
          $ref: '#/components/schemas/AssertionRule'
        GatingRule:
          $ref: '#/components/schemas/GatingRule'
        Name:
          $ref: '#/components/schemas/SafetyRuleName'
        SafetyRuleArn:
          description: The Amazon Resource Name (ARN) of the safety rule.
          type: string
        ControlPanelArn:
          description: The Amazon Resource Name (ARN) of the control panel.
          type: string
        Status:
          description: 'The deployment status of the routing control. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
          type: string
          enum:
            - PENDING
            - DEPLOYED
            - PENDING_DELETION
        RuleConfig:
          $ref: '#/components/schemas/RuleConfig'
        Tags:
          description: A collection of tags associated with a resource
          type: array
          items:
            $ref: '#/components/schemas/Tag'
            maxItems: 20
          x-insertionOrder: false
      required: []
      x-stackql-resource-name: safety_rule
      description: Resource schema for AWS Route53 Recovery Control basic constructs and validation rules.
      x-type-name: AWS::Route53RecoveryControl::SafetyRule
      x-stackql-primary-identifier:
        - SafetyRuleArn
      x-create-only-properties:
        - ControlPanelArn
        - RuleConfig
        - ControlPanelArn
        - Tags
      x-write-only-properties:
        - Tags
      x-read-only-properties:
        - SafetyRuleArn
        - Status
      x-required-properties: []
      x-taggable: true
      x-required-permissions:
        create:
          - route53-recovery-control-config:CreateSafetyRule
          - route53-recovery-control-config:DescribeSafetyRule
          - route53-recovery-control-config:DescribeControlPanel
          - route53-recovery-control-config:DescribeRoutingControl
          - route53-recovery-control-config:ListTagsForResource
          - route53-recovery-control-config:TagResource
        read:
          - route53-recovery-control-config:DescribeSafetyRule
          - route53-recovery-control-config:ListTagsForResource
        update:
          - route53-recovery-control-config:UpdateSafetyRule
          - route53-recovery-control-config:DescribeSafetyRule
          - route53-recovery-control-config:ListTagsForResource
          - route53-recovery-control-config:TagResource
          - route53-recovery-control-config:UntagResource
        delete:
          - route53-recovery-control-config:DescribeSafetyRule
          - route53-recovery-control-config:DeleteSafetyRule
        list:
          - route53-recovery-control-config:ListSafetyRules
  x-stackQL-resources:
    clusters:
      name: clusters
      id: aws.route53recoverycontrol.clusters
      x-cfn-schema-name: Cluster
      x-type: list
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::Cluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::Cluster'
                AND region = 'us-east-1'
    cluster:
      name: cluster
      id: aws.route53recoverycontrol.cluster
      x-cfn-schema-name: Cluster
      x-type: get
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.ClusterEndpoints') as cluster_endpoints,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::Cluster'
              AND data__Identifier = '<ClusterArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'ClusterEndpoints') as cluster_endpoints,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::Cluster'
                AND data__Identifier = '<ClusterArn>'
                AND region = 'us-east-1'
    control_panels:
      name: control_panels
      id: aws.route53recoverycontrol.control_panels
      x-cfn-schema-name: ControlPanel
      x-type: list
      x-identifiers:
        - ControlPanelArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ControlPanelArn') as control_panel_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::ControlPanel'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ControlPanelArn') as control_panel_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::ControlPanel'
                AND region = 'us-east-1'
    control_panel:
      name: control_panel
      id: aws.route53recoverycontrol.control_panel
      x-cfn-schema-name: ControlPanel
      x-type: get
      x-identifiers:
        - ControlPanelArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.ControlPanelArn') as control_panel_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.DefaultControlPanel') as default_control_panel,
              JSON_EXTRACT(Properties, '$.RoutingControlCount') as routing_control_count,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::ControlPanel'
              AND data__Identifier = '<ControlPanelArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                json_extract_path_text(Properties, 'ControlPanelArn') as control_panel_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'DefaultControlPanel') as default_control_panel,
                json_extract_path_text(Properties, 'RoutingControlCount') as routing_control_count,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::ControlPanel'
                AND data__Identifier = '<ControlPanelArn>'
                AND region = 'us-east-1'
    routing_controls:
      name: routing_controls
      id: aws.route53recoverycontrol.routing_controls
      x-cfn-schema-name: RoutingControl
      x-type: list
      x-identifiers:
        - RoutingControlArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RoutingControlArn') as routing_control_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::RoutingControl'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RoutingControlArn') as routing_control_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::RoutingControl'
                AND region = 'us-east-1'
    routing_control:
      name: routing_control
      id: aws.route53recoverycontrol.routing_control
      x-cfn-schema-name: RoutingControl
      x-type: get
      x-identifiers:
        - RoutingControlArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RoutingControlArn') as routing_control_arn,
              JSON_EXTRACT(Properties, '$.ControlPanelArn') as control_panel_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::RoutingControl'
              AND data__Identifier = '<RoutingControlArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'RoutingControlArn') as routing_control_arn,
                json_extract_path_text(Properties, 'ControlPanelArn') as control_panel_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::RoutingControl'
                AND data__Identifier = '<RoutingControlArn>'
                AND region = 'us-east-1'
    safety_rules:
      name: safety_rules
      id: aws.route53recoverycontrol.safety_rules
      x-cfn-schema-name: SafetyRule
      x-type: list
      x-identifiers:
        - SafetyRuleArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SafetyRuleArn') as safety_rule_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::SafetyRule'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SafetyRuleArn') as safety_rule_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53RecoveryControl::SafetyRule'
                AND region = 'us-east-1'
    safety_rule:
      name: safety_rule
      id: aws.route53recoverycontrol.safety_rule
      x-cfn-schema-name: SafetyRule
      x-type: get
      x-identifiers:
        - SafetyRuleArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssertionRule') as assertion_rule,
              JSON_EXTRACT(Properties, '$.GatingRule') as gating_rule,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SafetyRuleArn') as safety_rule_arn,
              JSON_EXTRACT(Properties, '$.ControlPanelArn') as control_panel_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.RuleConfig') as rule_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::SafetyRule'
              AND data__Identifier = '<SafetyRuleArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AssertionRule') as assertion_rule,
                json_extract_path_text(Properties, 'GatingRule') as gating_rule,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'SafetyRuleArn') as safety_rule_arn,
                json_extract_path_text(Properties, 'ControlPanelArn') as control_panel_arn,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'RuleConfig') as rule_config,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53RecoveryControl::SafetyRule'
                AND data__Identifier = '<SafetyRuleArn>'
                AND region = 'us-east-1'
