openapi: 3.0.0
info:
  title: DocDB
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
      required:
        - Value
        - Key
    DBCluster:
      type: object
      properties:
        StorageEncrypted:
          type: boolean
        RestoreToTime:
          type: string
        SnapshotIdentifier:
          type: string
        Port:
          type: integer
        DBClusterIdentifier:
          type: string
        PreferredBackupWindow:
          type: string
        ClusterResourceId:
          type: string
        Endpoint:
          type: string
        VpcSecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        CopyTagsToSnapshot:
          type: boolean
        RestoreType:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        EngineVersion:
          type: string
        KmsKeyId:
          type: string
        AvailabilityZones:
          type: array
          uniqueItems: false
          items:
            type: string
        PreferredMaintenanceWindow:
          type: string
        DBSubnetGroupName:
          type: string
        DeletionProtection:
          type: boolean
        UseLatestRestorableTime:
          type: boolean
        MasterUserPassword:
          type: string
        SourceDBClusterIdentifier:
          type: string
        MasterUsername:
          type: string
        ReadEndpoint:
          type: string
        DBClusterParameterGroupName:
          type: string
        BackupRetentionPeriod:
          type: integer
        Id:
          type: string
        EnableCloudwatchLogsExports:
          type: array
          uniqueItems: false
          items:
            type: string
      x-stackql-resource-name: db_cluster
      x-stackql-primaryIdentifier:
        - Id
    DBClusterParameterGroup:
      type: object
      properties:
        Id:
          type: string
        Description:
          type: string
        Parameters:
          type: object
        Family:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      required:
        - Family
        - Description
        - Parameters
      x-stackql-resource-name: db_cluster_parameter_group
      x-stackql-primaryIdentifier:
        - Id
    DBInstance:
      type: object
      properties:
        Endpoint:
          type: string
        DBInstanceClass:
          type: string
        Port:
          type: string
        DBClusterIdentifier:
          type: string
        AvailabilityZone:
          type: string
        PreferredMaintenanceWindow:
          type: string
        EnablePerformanceInsights:
          type: boolean
        AutoMinorVersionUpgrade:
          type: boolean
        Id:
          type: string
        DBInstanceIdentifier:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DBInstanceClass
        - DBClusterIdentifier
      x-stackql-resource-name: db_instance
      x-stackql-primaryIdentifier:
        - Id
    DBSubnetGroup:
      type: object
      properties:
        Id:
          type: string
        DBSubnetGroupName:
          type: string
        DBSubnetGroupDescription:
          type: string
        SubnetIds:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DBSubnetGroupDescription
        - SubnetIds
      x-stackql-resource-name: db_subnet_group
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    db_clusters:
      name: db_clusters
      id: aws.docdb.db_clusters
      x-cfn-schema-name: DBCluster
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DocDB::DBCluster'
    db_cluster:
      name: db_cluster
      id: aws.docdb.db_cluster
      x-cfn-schema-name: DBCluster
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StorageEncrypted') as storage_encrypted,
              JSON_EXTRACT(Properties, '$.RestoreToTime') as restore_to_time,
              JSON_EXTRACT(Properties, '$.SnapshotIdentifier') as snapshot_identifier,
              JSON_EXTRACT(Properties, '$.Port') as port,
              JSON_EXTRACT(Properties, '$.DBClusterIdentifier') as d_bcluster_identifier,
              JSON_EXTRACT(Properties, '$.PreferredBackupWindow') as preferred_backup_window,
              JSON_EXTRACT(Properties, '$.ClusterResourceId') as cluster_resource_id,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroupIds') as vpc_security_group_ids,
              JSON_EXTRACT(Properties, '$.CopyTagsToSnapshot') as copy_tags_to_snapshot,
              JSON_EXTRACT(Properties, '$.RestoreType') as restore_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.AvailabilityZones') as availability_zones,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.DBSubnetGroupName') as d_bsubnet_group_name,
              JSON_EXTRACT(Properties, '$.DeletionProtection') as deletion_protection,
              JSON_EXTRACT(Properties, '$.UseLatestRestorableTime') as use_latest_restorable_time,
              JSON_EXTRACT(Properties, '$.MasterUserPassword') as master_user_password,
              JSON_EXTRACT(Properties, '$.SourceDBClusterIdentifier') as source_db_cluster_identifier,
              JSON_EXTRACT(Properties, '$.MasterUsername') as master_username,
              JSON_EXTRACT(Properties, '$.ReadEndpoint') as read_endpoint,
              JSON_EXTRACT(Properties, '$.DBClusterParameterGroupName') as d_bcluster_parameter_group_name,
              JSON_EXTRACT(Properties, '$.BackupRetentionPeriod') as backup_retention_period,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.EnableCloudwatchLogsExports') as enable_cloudwatch_logs_exports
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DocDB::DBCluster'
    db_cluster_parameter_groups:
      name: db_cluster_parameter_groups
      id: aws.docdb.db_cluster_parameter_groups
      x-cfn-schema-name: DBClusterParameterGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DocDB::DBClusterParameterGroup'
    db_cluster_parameter_group:
      name: db_cluster_parameter_group
      id: aws.docdb.db_cluster_parameter_group
      x-cfn-schema-name: DBClusterParameterGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.Family') as family,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DocDB::DBClusterParameterGroup'
    db_instances:
      name: db_instances
      id: aws.docdb.db_instances
      x-cfn-schema-name: DBInstance
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DocDB::DBInstance'
    db_instance:
      name: db_instance
      id: aws.docdb.db_instance
      x-cfn-schema-name: DBInstance
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.DBInstanceClass') as d_binstance_class,
              JSON_EXTRACT(Properties, '$.Port') as port,
              JSON_EXTRACT(Properties, '$.DBClusterIdentifier') as d_bcluster_identifier,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.EnablePerformanceInsights') as enable_performance_insights,
              JSON_EXTRACT(Properties, '$.AutoMinorVersionUpgrade') as auto_minor_version_upgrade,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DBInstanceIdentifier') as d_binstance_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DocDB::DBInstance'
    db_subnet_groups:
      name: db_subnet_groups
      id: aws.docdb.db_subnet_groups
      x-cfn-schema-name: DBSubnetGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DocDB::DBSubnetGroup'
    db_subnet_group:
      name: db_subnet_group
      id: aws.docdb.db_subnet_group
      x-cfn-schema-name: DBSubnetGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DBSubnetGroupName') as d_bsubnet_group_name,
              JSON_EXTRACT(Properties, '$.DBSubnetGroupDescription') as d_bsubnet_group_description,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DocDB::DBSubnetGroup'
