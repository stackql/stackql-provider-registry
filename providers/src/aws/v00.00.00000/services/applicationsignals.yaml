openapi: 3.0.0
info:
  title: ApplicationSignals
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Sli:
      description: This structure contains information about the performance metric that an SLO monitors.
      type: object
      additionalProperties: false
      properties:
        SliMetric:
          $ref: '#/components/schemas/SliMetric'
        MetricThreshold:
          description: The value that the SLI metric is compared to.
          type: number
        ComparisonOperator:
          description: The arithmetic operation used when comparing the specified metric to the threshold.
          type: string
          enum:
            - GreaterThanOrEqualTo
            - LessThanOrEqualTo
            - LessThan
            - GreaterThan
      required:
        - SliMetric
        - MetricThreshold
        - ComparisonOperator
    RequestBasedSli:
      description: This structure contains information about the performance metric that a request-based SLO monitors.
      type: object
      additionalProperties: false
      properties:
        RequestBasedSliMetric:
          $ref: '#/components/schemas/RequestBasedSliMetric'
        MetricThreshold:
          description: The value that the SLI metric is compared to.
          type: number
        ComparisonOperator:
          description: The arithmetic operation used when comparing the specified metric to the threshold.
          type: string
          enum:
            - GreaterThanOrEqualTo
            - LessThanOrEqualTo
            - LessThan
            - GreaterThan
      required:
        - RequestBasedSliMetric
    Goal:
      description: A structure that contains the attributes that determine the goal of the SLO. This includes the time period for evaluation and the attainment threshold.
      type: object
      additionalProperties: false
      properties:
        Interval:
          $ref: '#/components/schemas/Interval'
        AttainmentGoal:
          description: |-
            The threshold that determines if the goal is being met. An attainment goal is the ratio of good periods that meet the threshold requirements to the total periods within the interval. For example, an attainment goal of 99.9% means that within your interval, you are targeting 99.9% of the periods to be in healthy state.
            If you omit this parameter, 99 is used to represent 99% as the attainment goal.
          type: number
        WarningThreshold:
          description: The percentage of remaining budget over total budget that you want to get warnings for. If you omit this parameter, the default of 50.0 is used.
          type: number
    SliMetric:
      description: A structure that contains information about the metric that the SLO monitors.
      type: object
      additionalProperties: false
      properties:
        KeyAttributes:
          $ref: '#/components/schemas/KeyAttributes'
        OperationName:
          description: If the SLO monitors a specific operation of the service, this field displays that operation name.
          type: string
          minLength: 1
          maxLength: 255
        MetricType:
          description: If the SLO monitors either the LATENCY or AVAILABILITY metric that Application Signals collects, this field displays which of those metrics is used.
          type: string
          enum:
            - LATENCY
            - AVAILABILITY
        Statistic:
          description: The statistic to use for comparison to the threshold. It can be any CloudWatch statistic or extended statistic
          type: string
          minLength: 1
          maxLength: 20
        PeriodSeconds:
          description: The number of seconds to use as the period for SLO evaluation. Your application's performance is compared to the SLI during each period. For each period, the application is determined to have either achieved or not achieved the necessary performance.
          type: integer
          minimum: 60
          maximum: 900
        MetricDataQueries:
          $ref: '#/components/schemas/MetricDataQueries'
    RequestBasedSliMetric:
      description: This structure contains the information about the metric that is used for a request-based SLO.
      type: object
      additionalProperties: false
      properties:
        KeyAttributes:
          $ref: '#/components/schemas/KeyAttributes'
        OperationName:
          description: If the SLO monitors a specific operation of the service, this field displays that operation name.
          type: string
          minLength: 1
          maxLength: 255
        MetricType:
          description: If the SLO monitors either the LATENCY or AVAILABILITY metric that Application Signals collects, this field displays which of those metrics is used.
          type: string
          enum:
            - LATENCY
            - AVAILABILITY
        TotalRequestCountMetric:
          description: This structure defines the metric that is used as the "total requests" number for a request-based SLO. The number observed for this metric is divided by the number of "good requests" or "bad requests" that is observed for the metric defined in `MonitoredRequestCountMetric`.
          $ref: '#/components/schemas/MetricDataQueries'
        MonitoredRequestCountMetric:
          $ref: '#/components/schemas/MonitoredRequestCountMetric'
    MonitoredRequestCountMetric:
      description: This structure defines the metric that is used as the "good request" or "bad request" value for a request-based SLO. This value observed for the metric defined in `TotalRequestCountMetric` is divided by the number found for `MonitoredRequestCountMetric` to determine the percentage of successful requests that this SLO tracks.
      type: object
      additionalProperties: false
      properties:
        GoodCountMetric:
          description: If you want to count "good requests" to determine the percentage of successful requests for this request-based SLO, specify the metric to use as "good requests" in this structure.
          $ref: '#/components/schemas/MetricDataQueries'
        BadCountMetric:
          description: If you want to count "bad requests" to determine the percentage of successful requests for this request-based SLO, specify the metric to use as "bad requests" in this structure.
          $ref: '#/components/schemas/MetricDataQueries'
    KeyAttributes:
      description: This is a string-to-string map that contains information about the type of object that this SLO is related to.
      x-patternProperties:
        ^.+$:
          type: string
      additionalProperties: false
    Interval:
      description: |-
        The time period used to evaluate the SLO. It can be either a calendar interval or rolling interval.
        If you omit this parameter, a rolling interval of 7 days is used.
      type: object
      additionalProperties: false
      properties:
        RollingInterval:
          $ref: '#/components/schemas/RollingInterval'
        CalendarInterval:
          $ref: '#/components/schemas/CalendarInterval'
    RollingInterval:
      description: If the interval is a calendar interval, this structure contains the interval specifications.
      type: object
      additionalProperties: false
      properties:
        DurationUnit:
          $ref: '#/components/schemas/DurationUnit'
        Duration:
          $ref: '#/components/schemas/Duration'
      required:
        - DurationUnit
        - Duration
    CalendarInterval:
      description: If the interval for this service level objective is a calendar interval, this structure contains the interval specifications.
      type: object
      additionalProperties: false
      properties:
        StartTime:
          type: integer
          description: |-
            Epoch time in seconds you want the first interval to start. Be sure to choose a time that configures the intervals the way that you want. For example, if you want weekly intervals starting on Mondays at 6 a.m., be sure to specify a start time that is a Monday at 6 a.m.
            As soon as one calendar interval ends, another automatically begins.
          minimum: 946684800
        DurationUnit:
          $ref: '#/components/schemas/DurationUnit'
        Duration:
          $ref: '#/components/schemas/Duration'
      required:
        - StartTime
        - DurationUnit
        - Duration
    DurationUnit:
      description: Specifies the calendar interval unit.
      type: string
      enum:
        - DAY
        - MONTH
    Duration:
      description: Specifies the duration of each calendar interval. For example, if `Duration` is 1 and `DurationUnit` is `MONTH`, each interval is one month, aligned with the calendar.
      type: integer
      minimum: 1
    MetricDataQueries:
      description: If this SLO monitors a CloudWatch metric or the result of a CloudWatch metric math expression, this structure includes the information about that metric or expression.
      type: array
      uniqueItems: false
      x-insertionOrder: true
      items:
        $ref: '#/components/schemas/MetricDataQuery'
    MetricDataQuery:
      description: >-
        Use this structure to define a metric or metric math expression that you want to use as for a service level objective.

        Each `MetricDataQuery` in the `MetricDataQueries` array specifies either a metric to retrieve, or a metric math expression to be performed on retrieved metrics. A single `MetricDataQueries` array can include as many as 20 `MetricDataQuery` structures in the array. The 20 structures can include as many as 10 structures that contain a `MetricStat` parameter to retrieve a metric, and as many as 10 structures that contain the `Expression` parameter to perform a math expression. Of those
        Expression structures, exactly one must have true as the value for `ReturnData`. The result of this expression used for the SLO.
      type: object
      additionalProperties: false
      properties:
        MetricStat:
          description: A metric to be used directly for the SLO, or to be used in the math expression that will be used for the SLO. Within one MetricDataQuery, you must specify either Expression or MetricStat but not both.
          $ref: '#/components/schemas/MetricStat'
        Id:
          description: A short name used to tie this object to the results in the response.
          type: string
        ReturnData:
          description: This option indicates whether to return the timestamps and raw data values of this metric.
          type: boolean
        Expression:
          description: The math expression to be performed on the returned data.
          type: string
        AccountId:
          description: The ID of the account where the metrics are located, if this is a cross-account alarm.
          type: string
      required:
        - Id
    MetricStat:
      description: A metric to be used directly for the SLO, or to be used in the math expression that will be used for the SLO. Within one MetricDataQuery object, you must specify either Expression or MetricStat but not both.
      type: object
      additionalProperties: false
      properties:
        Period:
          description: The granularity, in seconds, to be used for the metric.
          type: integer
        Metric:
          $ref: '#/components/schemas/Metric'
        Stat:
          description: The statistic to use for comparison to the threshold. It can be any CloudWatch statistic or extended statistic.
          type: string
        Unit:
          description: If you omit Unit then all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.
          type: string
      required:
        - Stat
        - Period
        - Metric
    Metric:
      description: This structure defines the metric used for a service level indicator, including the metric name, namespace, and dimensions.
      type: object
      additionalProperties: false
      properties:
        MetricName:
          description: The name of the metric to use.
          type: string
        Dimensions:
          description: An array of one or more dimensions to use to define the metric that you want to use.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Dimension'
        Namespace:
          description: The namespace of the metric.
          type: string
    Dimension:
      description: A dimension is a name/value pair that is part of the identity of a metric. Because dimensions are part of the unique identifier for a metric, whenever you add a unique name/value pair to one of your metrics, you are creating a new variation of that metric. For example, many Amazon EC2 metrics publish `InstanceId` as a dimension name, and the actual instance ID as the value for that dimension. You can assign up to 30 dimensions to a metric.
      type: object
      additionalProperties: false
      properties:
        Value:
          description: The value of the dimension. Dimension values must contain only ASCII characters and must include at least one non-whitespace character. ASCII control characters are not supported as part of dimension values
          type: string
        Name:
          description: The name of the dimension. Dimension names must contain only ASCII characters, must include at least one non-whitespace character, and cannot start with a colon (:). ASCII control characters are not supported as part of dimension names.
          type: string
      required:
        - Value
        - Name
    Tags:
      description: The list of tag keys and values associated with the resource you specified
      type: array
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 200
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          description: A string that you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: The value for the specified tag key.
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
    BurnRateConfigurations:
      description: Each object in this array defines the length of the look-back window used to calculate one burn rate metric for this SLO. The burn rate measures how fast the service is consuming the error budget, relative to the attainment goal of the SLO.
      type: array
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/BurnRateConfiguration'
      minItems: 0
      maxItems: 10
    BurnRateConfiguration:
      type: object
      description: |-
        This object defines the length of the look-back window used to calculate one burn rate metric for this SLO. The burn rate measures how fast the service is consuming the error budget, relative to the attainment goal of the SLO. A burn rate of exactly 1 indicates that the SLO goal will be met exactly.
        For example, if you specify 60 as the number of minutes in the look-back window, the burn rate is calculated as the following:
        burn rate = error rate over the look-back window / (1 - attainment goal percentage)
      additionalProperties: false
      properties:
        LookBackWindowMinutes:
          description: The number of minutes to use as the look-back window.
          type: integer
          minimum: 1
          maximum: 10080
      required:
        - LookBackWindowMinutes
    ServiceLevelObjective:
      type: object
      properties:
        Arn:
          description: The ARN of this SLO.
          type: string
          pattern: ^arn:[^:]*:application-signals:[^:]*:[^:]*:slo\/[0-9A-Za-z][-._0-9A-Za-z ]{0,126}[0-9A-Za-z]$
        Name:
          description: The name of this SLO.
          type: string
          pattern: ^[0-9A-Za-z][-._0-9A-Za-z ]{0,126}[0-9A-Za-z]$
        Description:
          description: An optional description for this SLO. Default is 'No description'
          type: string
          minLength: 1
          maxLength: 1024
          default: No description
        CreatedTime:
          type: integer
          description: Epoch time in seconds of the time that this SLO was created
          minimum: 946684800
        LastUpdatedTime:
          type: integer
          description: Epoch time in seconds of the time that this SLO was most recently updated
          minimum: 946684800
        Sli:
          $ref: '#/components/schemas/Sli'
        RequestBasedSli:
          $ref: '#/components/schemas/RequestBasedSli'
        EvaluationType:
          description: Displays whether this is a period-based SLO or a request-based SLO.
          type: string
          enum:
            - PeriodBased
            - RequestBased
        Goal:
          $ref: '#/components/schemas/Goal'
        Tags:
          $ref: '#/components/schemas/Tags'
        BurnRateConfigurations:
          $ref: '#/components/schemas/BurnRateConfigurations'
      required:
        - Name
      x-stackql-resource-name: service_level_objective
      description: Resource Type definition for AWS::ApplicationSignals::ServiceLevelObjective
      x-type-name: AWS::ApplicationSignals::ServiceLevelObjective
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreatedTime
        - LastUpdatedTime
        - EvaluationType
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - application-signals:ListTagsForResource
          - application-signals:TagResource
          - application-signals:UntagResource
      x-required-permissions:
        create:
          - application-signals:CreateServiceLevelObjective
          - cloudwatch:GetMetricData
          - application-signals:TagResource
          - application-signals:GetServiceLevelObjective
          - application-signals:ListTagsForResource
          - iam:GetRole
          - iam:CreateServiceLinkedRole
        read:
          - application-signals:GetServiceLevelObjective
          - application-signals:ListTagsForResource
        update:
          - application-signals:UpdateServiceLevelObjective
          - cloudwatch:GetMetricData
          - application-signals:TagResource
          - application-signals:UntagResource
          - application-signals:GetServiceLevelObjective
          - application-signals:ListTagsForResource
        delete:
          - application-signals:DeleteServiceLevelObjective
          - application-signals:UntagResource
          - application-signals:GetServiceLevelObjective
        list:
          - application-signals:ListServiceLevelObjectives
          - application-signals:ListTagsForResource
    CreateServiceLevelObjectiveRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The ARN of this SLO.
              type: string
              pattern: ^arn:[^:]*:application-signals:[^:]*:[^:]*:slo\/[0-9A-Za-z][-._0-9A-Za-z ]{0,126}[0-9A-Za-z]$
            Name:
              description: The name of this SLO.
              type: string
              pattern: ^[0-9A-Za-z][-._0-9A-Za-z ]{0,126}[0-9A-Za-z]$
            Description:
              description: An optional description for this SLO. Default is 'No description'
              type: string
              minLength: 1
              maxLength: 1024
              default: No description
            CreatedTime:
              type: integer
              description: Epoch time in seconds of the time that this SLO was created
              minimum: 946684800
            LastUpdatedTime:
              type: integer
              description: Epoch time in seconds of the time that this SLO was most recently updated
              minimum: 946684800
            Sli:
              $ref: '#/components/schemas/Sli'
            RequestBasedSli:
              $ref: '#/components/schemas/RequestBasedSli'
            EvaluationType:
              description: Displays whether this is a period-based SLO or a request-based SLO.
              type: string
              enum:
                - PeriodBased
                - RequestBased
            Goal:
              $ref: '#/components/schemas/Goal'
            Tags:
              $ref: '#/components/schemas/Tags'
            BurnRateConfigurations:
              $ref: '#/components/schemas/BurnRateConfigurations'
          x-stackQL-stringOnly: true
      x-title: CreateServiceLevelObjectiveRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    service_level_objectives:
      name: service_level_objectives
      id: aws.applicationsignals.service_level_objectives
      x-cfn-schema-name: ServiceLevelObjective
      x-cfn-type-name: AWS::ApplicationSignals::ServiceLevelObjective
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ServiceLevelObjective&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationSignals::ServiceLevelObjective"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationSignals::ServiceLevelObjective"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ApplicationSignals::ServiceLevelObjective"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/service_level_objectives/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/service_level_objectives/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/service_level_objectives/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.LastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(Properties, '$.Sli') as sli,
              JSON_EXTRACT(Properties, '$.RequestBasedSli') as request_based_sli,
              JSON_EXTRACT(Properties, '$.EvaluationType') as evaluation_type,
              JSON_EXTRACT(Properties, '$.Goal') as goal,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.BurnRateConfigurations') as burn_rate_configurations
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time,
                JSON_EXTRACT(detail.Properties, '$.Sli') as sli,
                JSON_EXTRACT(detail.Properties, '$.RequestBasedSli') as request_based_sli,
                JSON_EXTRACT(detail.Properties, '$.EvaluationType') as evaluation_type,
                JSON_EXTRACT(detail.Properties, '$.Goal') as goal,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.BurnRateConfigurations') as burn_rate_configurations
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                AND detail.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'LastUpdatedTime') as last_updated_time,
                  json_extract_path_text(Properties, 'Sli') as sli,
                  json_extract_path_text(Properties, 'RequestBasedSli') as request_based_sli,
                  json_extract_path_text(Properties, 'EvaluationType') as evaluation_type,
                  json_extract_path_text(Properties, 'Goal') as goal,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'BurnRateConfigurations') as burn_rate_configurations
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time,
                    json_extract_path_text(detail.Properties, 'Sli') as sli,
                    json_extract_path_text(detail.Properties, 'RequestBasedSli') as request_based_sli,
                    json_extract_path_text(detail.Properties, 'EvaluationType') as evaluation_type,
                    json_extract_path_text(detail.Properties, 'Goal') as goal,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'BurnRateConfigurations') as burn_rate_configurations
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                    AND detail.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                    AND listing.region = 'us-east-1'
    service_level_objectives_list_only:
      name: service_level_objectives_list_only
      id: aws.applicationsignals.service_level_objectives_list_only
      x-cfn-schema-name: ServiceLevelObjective
      x-cfn-type-name: AWS::ApplicationSignals::ServiceLevelObjective
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                AND region = 'us-east-1'
    service_level_objective_tags:
      name: service_level_objective_tags
      id: aws.applicationsignals.service_level_objective_tags
      x-cfn-schema-name: ServiceLevelObjective
      x-cfn-type-name: AWS::ApplicationSignals::ServiceLevelObjective
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.LastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(detail.Properties, '$.Sli') as sli,
              JSON_EXTRACT(detail.Properties, '$.RequestBasedSli') as request_based_sli,
              JSON_EXTRACT(detail.Properties, '$.EvaluationType') as evaluation_type,
              JSON_EXTRACT(detail.Properties, '$.Goal') as goal,
              JSON_EXTRACT(detail.Properties, '$.BurnRateConfigurations') as burn_rate_configurations
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
              AND detail.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'LastUpdatedTime') as last_updated_time,
                json_extract_path_text(detail.Properties, 'Sli') as sli,
                json_extract_path_text(detail.Properties, 'RequestBasedSli') as request_based_sli,
                json_extract_path_text(detail.Properties, 'EvaluationType') as evaluation_type,
                json_extract_path_text(detail.Properties, 'Goal') as goal,
                json_extract_path_text(detail.Properties, 'BurnRateConfigurations') as burn_rate_configurations
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                AND detail.data__TypeName = 'AWS::ApplicationSignals::ServiceLevelObjective'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ServiceLevelObjective&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateServiceLevelObjective
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateServiceLevelObjectiveRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
