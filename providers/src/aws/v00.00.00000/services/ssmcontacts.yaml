openapi: 3.0.0
info:
  title: SSMContacts
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ContactTargetInfo:
      type: object
      description: The contact that SSM Incident Manager is engaging during an incident.
      properties:
        ContactId:
          description: The Amazon Resource Name (ARN) of the contact.
          type: string
        IsEssential:
          type: boolean
          description: A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.
      required:
        - ContactId
        - IsEssential
      additionalProperties: false
    ChannelTargetInfo:
      type: object
      description: Information about the contact channel that SSM Incident Manager uses to engage the contact.
      properties:
        ChannelId:
          description: The Amazon Resource Name (ARN) of the contact channel.
          type: string
        RetryIntervalInMinutes:
          type: integer
          description: The number of minutes to wait to retry sending engagement in the case the engagement initially fails.
      required:
        - ChannelId
        - RetryIntervalInMinutes
      additionalProperties: false
    Stage:
      description: A set amount of time that an escalation plan or engagement plan engages the specified contacts or contact methods.
      type: object
      properties:
        DurationInMinutes:
          description: The time to wait until beginning the next stage.
          type: integer
        Targets:
          type: array
          x-insertionOrder: false
          description: The contacts or contact methods that the escalation plan or engagement plan is engaging.
          items:
            $ref: '#/components/schemas/Targets'
      required:
        - DurationInMinutes
      additionalProperties: false
    Targets:
      description: The contacts or contact methods that the escalation plan or engagement plan is engaging.
      type: object
      properties:
        ContactTargetInfo:
          $ref: '#/components/schemas/ContactTargetInfo'
        ChannelTargetInfo:
          $ref: '#/components/schemas/ChannelTargetInfo'
      additionalProperties: false
      oneOf:
        - required:
            - ChannelTargetInfo
        - required:
            - ContactTargetInfo
    Contact:
      type: object
      properties:
        Alias:
          description: Alias of the contact. String value with 20 to 256 characters. Only alphabetical, numeric characters, dash, or underscore allowed.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-z0-9_\-\.]*$
        DisplayName:
          description: Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9_\-\s]*$
        Type:
          description: 'Contact type, which specify type of contact. Currently supported values: “PERSONAL”, “SHARED”, “OTHER“.'
          type: string
          enum:
            - PERSONAL
            - ESCALATION
            - ONCALL_SCHEDULE
        Plan:
          description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
          type: array
          items:
            $ref: '#/components/schemas/Stage'
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the contact.
      required:
        - Alias
        - DisplayName
        - Type
      x-stackql-resource-name: contact
      description: Resource Type definition for AWS::SSMContacts::Contact
      x-type-name: AWS::SSMContacts::Contact
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Alias
        - Type
      x-write-only-properties:
        - Plan
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Alias
        - DisplayName
        - Type
      x-required-permissions:
        create:
          - ssm-contacts:CreateContact
          - ssm-contacts:GetContact
          - ssm-contacts:AssociateContact
        read:
          - ssm-contacts:GetContact
        update:
          - ssm-contacts:UpdateContact
          - ssm-contacts:GetContact
          - ssm-contacts:AssociateContact
        delete:
          - ssm-contacts:DeleteContact
          - ssm-contacts:GetContact
          - ssm-contacts:AssociateContact
        list:
          - ssm-contacts:ListContacts
    ContactChannel:
      type: object
      properties:
        ContactId:
          description: ARN of the contact resource
          type: string
          minLength: 1
          maxLength: 2048
          pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
        ChannelName:
          description: The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z 0-9_\-+''&amp;\uD83C-\uDBFF\uDC00-\uDFFF\u2000-\u3300]+'
        ChannelType:
          description: 'Device type, which specify notification channel. Currently supported values: “SMS”, “VOICE”, “EMAIL”, “CHATBOT.'
          type: string
          enum:
            - SMS
            - VOICE
            - EMAIL
        DeferActivation:
          type: boolean
          description: If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated.
        ChannelAddress:
          description: The details that SSM Incident Manager uses when trying to engage the contact channel.
          type: string
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the engagement to a contact channel.
      x-stackql-resource-name: contact_channel
      description: Resource Type definition for AWS::SSMContacts::ContactChannel
      x-type-name: AWS::SSMContacts::ContactChannel
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ContactId
        - ChannelType
      x-write-only-properties:
        - DeferActivation
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - ssm-contacts:CreateContactChannel
          - ssm-contacts:GetContactChannel
        read:
          - ssm-contacts:GetContactChannel
        update:
          - ssm-contacts:UpdateContactChannel
          - ssm-contacts:GetContactChannel
        delete:
          - ssm-contacts:DeleteContactChannel
          - ssm-contacts:GetContactChannel
        list:
          - ssm-contacts:ListContactChannels
    Plan:
      type: object
      properties:
        ContactId:
          description: Contact ID for the AWS SSM Incident Manager Contact to associate the plan.
          type: string
          pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
        Stages:
          description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Stage'
        RotationIds:
          description: Rotation Ids to associate with Oncall Contact for engagement.
          type: array
          x-insertionOrder: false
          items:
            type: string
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the contact.
      x-stackql-resource-name: plan
      description: Engagement Plan for a SSM Incident Manager Contact.
      x-type-name: AWS::SSMContacts::Plan
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ContactId
      x-write-only-properties:
        - RotationIds
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - ssm-contacts:UpdateContact
          - ssm-contacts:GetContact
          - ssm-contacts:AssociateContact
        read:
          - ssm-contacts:GetContact
        update:
          - ssm-contacts:UpdateContact
          - ssm-contacts:GetContact
          - ssm-contacts:AssociateContact
        delete:
          - ssm-contacts:UpdateContact
          - ssm-contacts:GetContact
          - ssm-contacts:AssociateContact
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          description: The key name of the tag
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: The value for the tag.
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    HandOffTime:
      type: string
      pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
      description: Details about when an on-call rotation shift begins or ends. Time of the day in format HH:MM
    CoverageTime:
      type: object
      description: StartTime and EndTime for the Shift
      properties:
        StartTime:
          $ref: '#/components/schemas/HandOffTime'
        EndTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - StartTime
        - EndTime
      additionalProperties: false
    ShiftCoverage:
      type: object
      description: Information about the days of the week included in on-call rotation coverage.
      properties:
        DayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        CoverageTimes:
          description: Information about when an on-call shift begins and ends.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CoverageTime'
      required:
        - DayOfWeek
        - CoverageTimes
      additionalProperties: false
    DayOfWeek:
      description: 'The day of the week when weekly recurring on-call shift rotations begin. '
      type: string
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
    MonthlySetting:
      type: object
      description: DayOfWeek for Month and HandOff Time for Monthly Recurring Rotation.
      properties:
        DayOfMonth:
          description: The day of the month when monthly recurring on-call rotations begin.
          type: integer
          minimum: 1
          maximum: 31
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - DayOfMonth
        - HandOffTime
      additionalProperties: false
    WeeklySetting:
      type: object
      description: DayOfWeek for Rotation and HandOff Time for Weekly Recurring Rotation.
      properties:
        DayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - DayOfWeek
        - HandOffTime
      additionalProperties: false
    DailySetting:
      type: object
      description: Handoff time for Daily Recurring Rotation.
      properties:
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - HandOffTime
      additionalProperties: false
    RecurrenceSettings:
      description: Information about when an on-call rotation is in effect and how long the rotation period lasts.
      type: object
      properties:
        MonthlySettings:
          description: Information about on-call rotations that recur monthly.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MonthlySetting'
        WeeklySettings:
          description: Information about on-call rotations that recur weekly.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/WeeklySetting'
        DailySettings:
          description: Information about on-call rotations that recur daily.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/HandOffTime'
        NumberOfOnCalls:
          type: integer
          description: Number of Oncalls per shift.
          minimum: 1
        RecurrenceMultiplier:
          type: integer
          description: The number of days, weeks, or months a single rotation lasts.
          minimum: 1
          maximum: 100
        ShiftCoverages:
          type: array
          x-insertionOrder: false
          description: Information about the days of the week included in on-call rotation coverage.
          items:
            $ref: '#/components/schemas/ShiftCoverage'
      additionalProperties: false
      oneOf:
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - WeeklySettings
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - MonthlySettings
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - DailySettings
    Rotation:
      type: object
      properties:
        Name:
          description: Name of the Rotation
          type: string
          pattern: ^[a-zA-Z0-9_]*$
        ContactIds:
          description: Members of the rotation
          type: array
          x-insertionOrder: false
          items:
            type: string
        StartTime:
          description: Start time of the first shift of Oncall Schedule
          type: string
          pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})$
        TimeZoneId:
          description: TimeZone Identifier for the Oncall Schedule
          type: string
        Recurrence:
          $ref: '#/components/schemas/RecurrenceSettings'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the rotation.
      required:
        - Name
        - ContactIds
        - StartTime
        - TimeZoneId
        - Recurrence
      x-stackql-resource-name: rotation
      description: Resource Type definition for AWS::SSMContacts::Rotation.
      x-type-name: AWS::SSMContacts::Rotation
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - ContactIds
        - StartTime
        - TimeZoneId
        - Recurrence
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - ssm-contacts:CreateRotation
          - ssm-contacts:GetRotation
          - ssm-contacts:TagResource
          - ssm-contacts:ListTagsForResource
          - ssm-contacts:UntagResource
        read:
          - ssm-contacts:GetRotation
          - ssm-contacts:TagResource
          - ssm-contacts:ListTagsForResource
          - ssm-contacts:UntagResource
        update:
          - ssm-contacts:UpdateRotation
          - ssm-contacts:GetRotation
          - ssm-contacts:TagResource
          - ssm-contacts:ListTagsForResource
          - ssm-contacts:UntagResource
        delete:
          - ssm-contacts:DeleteRotation
          - ssm-contacts:GetRotation
          - ssm-contacts:ListTagsForResource
          - ssm-contacts:UntagResource
        list:
          - ssm-contacts:ListRotations
          - ssm-contacts:GetRotation
          - ssm-contacts:ListTagsForResource
    CreateContactRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Alias:
              description: Alias of the contact. String value with 20 to 256 characters. Only alphabetical, numeric characters, dash, or underscore allowed.
              type: string
              minLength: 1
              maxLength: 255
              pattern: ^[a-z0-9_\-\.]*$
            DisplayName:
              description: Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed.
              type: string
              minLength: 1
              maxLength: 255
              pattern: ^[a-zA-Z0-9_\-\s]*$
            Type:
              description: 'Contact type, which specify type of contact. Currently supported values: “PERSONAL”, “SHARED”, “OTHER“.'
              type: string
              enum:
                - PERSONAL
                - ESCALATION
                - ONCALL_SCHEDULE
            Plan:
              description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
              type: array
              items:
                $ref: '#/components/schemas/Stage'
            Arn:
              type: string
              description: The Amazon Resource Name (ARN) of the contact.
          x-stackQL-stringOnly: true
      x-title: CreateContactRequest
      type: object
      required: []
    CreateContactChannelRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ContactId:
              description: ARN of the contact resource
              type: string
              minLength: 1
              maxLength: 2048
              pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
            ChannelName:
              description: The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[a-zA-Z 0-9_\-+''&amp;\uD83C-\uDBFF\uDC00-\uDFFF\u2000-\u3300]+'
            ChannelType:
              description: 'Device type, which specify notification channel. Currently supported values: “SMS”, “VOICE”, “EMAIL”, “CHATBOT.'
              type: string
              enum:
                - SMS
                - VOICE
                - EMAIL
            DeferActivation:
              type: boolean
              description: If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated.
            ChannelAddress:
              description: The details that SSM Incident Manager uses when trying to engage the contact channel.
              type: string
            Arn:
              type: string
              description: The Amazon Resource Name (ARN) of the engagement to a contact channel.
          x-stackQL-stringOnly: true
      x-title: CreateContactChannelRequest
      type: object
      required: []
    CreatePlanRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ContactId:
              description: Contact ID for the AWS SSM Incident Manager Contact to associate the plan.
              type: string
              pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
            Stages:
              description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Stage'
            RotationIds:
              description: Rotation Ids to associate with Oncall Contact for engagement.
              type: array
              x-insertionOrder: false
              items:
                type: string
            Arn:
              type: string
              description: The Amazon Resource Name (ARN) of the contact.
          x-stackQL-stringOnly: true
      x-title: CreatePlanRequest
      type: object
      required: []
    CreateRotationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Name of the Rotation
              type: string
              pattern: ^[a-zA-Z0-9_]*$
            ContactIds:
              description: Members of the rotation
              type: array
              x-insertionOrder: false
              items:
                type: string
            StartTime:
              description: Start time of the first shift of Oncall Schedule
              type: string
              pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})$
            TimeZoneId:
              description: TimeZone Identifier for the Oncall Schedule
              type: string
            Recurrence:
              $ref: '#/components/schemas/RecurrenceSettings'
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
            Arn:
              type: string
              description: The Amazon Resource Name (ARN) of the rotation.
          x-stackQL-stringOnly: true
      x-title: CreateRotationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    contacts:
      name: contacts
      id: aws.ssmcontacts.contacts
      x-cfn-schema-name: Contact
      x-cfn-type-name: AWS::SSMContacts::Contact
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Contact&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Contact"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Contact"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Contact"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Plan') as plan,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Contact'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Alias') as alias,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Plan') as plan,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSMContacts::Contact'
                AND detail.data__TypeName = 'AWS::SSMContacts::Contact'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Alias') as alias,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Plan') as plan,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Contact'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Alias') as alias,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Plan') as plan,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSMContacts::Contact'
                    AND detail.data__TypeName = 'AWS::SSMContacts::Contact'
                    AND listing.region = 'us-east-1'
    contacts_list_only:
      name: contacts_list_only
      id: aws.ssmcontacts.contacts_list_only
      x-cfn-schema-name: Contact
      x-cfn-type-name: AWS::SSMContacts::Contact
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::Contact'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::Contact'
                AND region = 'us-east-1'
    contact_channels:
      name: contact_channels
      id: aws.ssmcontacts.contact_channels
      x-cfn-schema-name: ContactChannel
      x-cfn-type-name: AWS::SSMContacts::ContactChannel
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ContactChannel&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::ContactChannel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::ContactChannel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::ContactChannel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_channels/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_channels/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/contact_channels/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ContactId') as contact_id,
              JSON_EXTRACT(Properties, '$.ChannelName') as channel_name,
              JSON_EXTRACT(Properties, '$.ChannelType') as channel_type,
              JSON_EXTRACT(Properties, '$.DeferActivation') as defer_activation,
              JSON_EXTRACT(Properties, '$.ChannelAddress') as channel_address,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::ContactChannel'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ContactId') as contact_id,
                JSON_EXTRACT(detail.Properties, '$.ChannelName') as channel_name,
                JSON_EXTRACT(detail.Properties, '$.ChannelType') as channel_type,
                JSON_EXTRACT(detail.Properties, '$.DeferActivation') as defer_activation,
                JSON_EXTRACT(detail.Properties, '$.ChannelAddress') as channel_address,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSMContacts::ContactChannel'
                AND detail.data__TypeName = 'AWS::SSMContacts::ContactChannel'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ContactId') as contact_id,
                  json_extract_path_text(Properties, 'ChannelName') as channel_name,
                  json_extract_path_text(Properties, 'ChannelType') as channel_type,
                  json_extract_path_text(Properties, 'DeferActivation') as defer_activation,
                  json_extract_path_text(Properties, 'ChannelAddress') as channel_address,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::ContactChannel'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ContactId') as contact_id,
                    json_extract_path_text(detail.Properties, 'ChannelName') as channel_name,
                    json_extract_path_text(detail.Properties, 'ChannelType') as channel_type,
                    json_extract_path_text(detail.Properties, 'DeferActivation') as defer_activation,
                    json_extract_path_text(detail.Properties, 'ChannelAddress') as channel_address,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSMContacts::ContactChannel'
                    AND detail.data__TypeName = 'AWS::SSMContacts::ContactChannel'
                    AND listing.region = 'us-east-1'
    contact_channels_list_only:
      name: contact_channels_list_only
      id: aws.ssmcontacts.contact_channels_list_only
      x-cfn-schema-name: ContactChannel
      x-cfn-type-name: AWS::SSMContacts::ContactChannel
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::ContactChannel'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::ContactChannel'
                AND region = 'us-east-1'
    plans:
      name: plans
      id: aws.ssmcontacts.plans
      x-cfn-schema-name: Plan
      x-cfn-type-name: AWS::SSMContacts::Plan
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Plan&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Plan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Plan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Plan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/plans/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/plans/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/plans/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ContactId') as contact_id,
              JSON_EXTRACT(Properties, '$.Stages') as stages,
              JSON_EXTRACT(Properties, '$.RotationIds') as rotation_ids,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Plan'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ContactId') as contact_id,
                json_extract_path_text(Properties, 'Stages') as stages,
                json_extract_path_text(Properties, 'RotationIds') as rotation_ids,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Plan'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    rotations:
      name: rotations
      id: aws.ssmcontacts.rotations
      x-cfn-schema-name: Rotation
      x-cfn-type-name: AWS::SSMContacts::Rotation
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Rotation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Rotation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Rotation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSMContacts::Rotation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/rotations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/rotations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/rotations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ContactIds') as contact_ids,
              JSON_EXTRACT(Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(Properties, '$.TimeZoneId') as time_zone_id,
              JSON_EXTRACT(Properties, '$.Recurrence') as recurrence,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Rotation'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ContactIds') as contact_ids,
                JSON_EXTRACT(detail.Properties, '$.StartTime') as start_time,
                JSON_EXTRACT(detail.Properties, '$.TimeZoneId') as time_zone_id,
                JSON_EXTRACT(detail.Properties, '$.Recurrence') as recurrence,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SSMContacts::Rotation'
                AND detail.data__TypeName = 'AWS::SSMContacts::Rotation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ContactIds') as contact_ids,
                  json_extract_path_text(Properties, 'StartTime') as start_time,
                  json_extract_path_text(Properties, 'TimeZoneId') as time_zone_id,
                  json_extract_path_text(Properties, 'Recurrence') as recurrence,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Rotation'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ContactIds') as contact_ids,
                    json_extract_path_text(detail.Properties, 'StartTime') as start_time,
                    json_extract_path_text(detail.Properties, 'TimeZoneId') as time_zone_id,
                    json_extract_path_text(detail.Properties, 'Recurrence') as recurrence,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SSMContacts::Rotation'
                    AND detail.data__TypeName = 'AWS::SSMContacts::Rotation'
                    AND listing.region = 'us-east-1'
    rotations_list_only:
      name: rotations_list_only
      id: aws.ssmcontacts.rotations_list_only
      x-cfn-schema-name: Rotation
      x-cfn-type-name: AWS::SSMContacts::Rotation
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::Rotation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::Rotation'
                AND region = 'us-east-1'
    rotation_tags:
      name: rotation_tags
      id: aws.ssmcontacts.rotation_tags
      x-cfn-schema-name: Rotation
      x-cfn-type-name: AWS::SSMContacts::Rotation
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ContactIds') as contact_ids,
              JSON_EXTRACT(detail.Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(detail.Properties, '$.TimeZoneId') as time_zone_id,
              JSON_EXTRACT(detail.Properties, '$.Recurrence') as recurrence,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SSMContacts::Rotation'
              AND detail.data__TypeName = 'AWS::SSMContacts::Rotation'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ContactIds') as contact_ids,
                json_extract_path_text(detail.Properties, 'StartTime') as start_time,
                json_extract_path_text(detail.Properties, 'TimeZoneId') as time_zone_id,
                json_extract_path_text(detail.Properties, 'Recurrence') as recurrence,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SSMContacts::Rotation'
                AND detail.data__TypeName = 'AWS::SSMContacts::Rotation'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Contact&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateContact
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateContactRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ContactChannel&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateContactChannel
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateContactChannelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Plan&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePlan
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePlanRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Rotation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRotation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRotationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
