openapi: 3.0.0
info:
  title: SSMContacts
  version: 1.0.0
paths: {}
components:
  schemas:
    ContactTargetInfo:
      type: object
      description: The contact that SSM Incident Manager is engaging during an incident.
      properties:
        ContactId:
          description: The Amazon Resource Name (ARN) of the contact.
          type: string
        IsEssential:
          type: boolean
          description: A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.
      required:
        - ContactId
        - IsEssential
      additionalProperties: false
    ChannelTargetInfo:
      type: object
      description: Information about the contact channel that SSM Incident Manager uses to engage the contact.
      properties:
        ChannelId:
          description: The Amazon Resource Name (ARN) of the contact channel.
          type: string
        RetryIntervalInMinutes:
          type: integer
          description: The number of minutes to wait to retry sending engagement in the case the engagement initially fails.
      required:
        - ChannelId
        - RetryIntervalInMinutes
      additionalProperties: false
    Stage:
      description: A set amount of time that an escalation plan or engagement plan engages the specified contacts or contact methods.
      type: object
      properties:
        DurationInMinutes:
          description: The time to wait until beginning the next stage.
          type: integer
        Targets:
          type: array
          x-insertionOrder: false
          description: The contacts or contact methods that the escalation plan or engagement plan is engaging.
          items:
            $ref: '#/components/schemas/Targets'
      required:
        - DurationInMinutes
      additionalProperties: false
    Targets:
      description: The contacts or contact methods that the escalation plan or engagement plan is engaging.
      type: object
      properties:
        ContactTargetInfo:
          $ref: '#/components/schemas/ContactTargetInfo'
        ChannelTargetInfo:
          $ref: '#/components/schemas/ChannelTargetInfo'
      additionalProperties: false
      oneOf:
        - required:
            - ChannelTargetInfo
        - required:
            - ContactTargetInfo
    Contact:
      type: object
      properties:
        Alias:
          description: Alias of the contact. String value with 20 to 256 characters. Only alphabetical, numeric characters, dash, or underscore allowed.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-z0-9_\-\.]*$
        DisplayName:
          description: Name of the contact. String value with 3 to 256 characters. Only alphabetical, space, numeric characters, dash, or underscore allowed.
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9_\-\s]*$
        Type:
          description: 'Contact type, which specify type of contact. Currently supported values: “PERSONAL”, “SHARED”, “OTHER“.'
          type: string
          enum:
            - PERSONAL
            - CUSTOM
            - SERVICE
            - ESCALATION
            - ONCALL_SCHEDULE
        Plan:
          description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
          type: array
          items:
            $ref: '#/components/schemas/Stage'
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the contact.
      required:
        - Alias
        - DisplayName
        - Type
      x-stackql-resource-name: contact
      x-stackql-primaryIdentifier:
        - Arn
    ContactChannel:
      type: object
      properties:
        ContactId:
          description: ARN of the contact resource
          type: string
          minLength: 1
          maxLength: 2048
          pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
        ChannelName:
          description: The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z 0-9_\-+''&amp;\uD83C-\uDBFF\uDC00-\uDFFF\u2000-\u3300]+'
        ChannelType:
          description: 'Device type, which specify notification channel. Currently supported values: “SMS”, “VOICE”, “EMAIL”, “CHATBOT.'
          type: string
          enum:
            - SMS
            - VOICE
            - EMAIL
        DeferActivation:
          type: boolean
          description: If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated.
        ChannelAddress:
          description: The details that SSM Incident Manager uses when trying to engage the contact channel.
          type: string
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the engagement to a contact channel.
      x-stackql-resource-name: contact_channel
      x-stackql-primaryIdentifier:
        - Arn
    Plan:
      type: object
      properties:
        ContactId:
          description: Contact ID for the AWS SSM Incident Manager Contact to associate the plan.
          type: string
          pattern: arn:[-\w+=\/,.@]+:[-\w+=\/,.@]+:[-\w+=\/,.@]*:[0-9]+:([\w+=\/,.@:-]+)*
        Stages:
          description: The stages that an escalation plan or engagement plan engages contacts and contact methods in.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Stage'
        RotationIds:
          description: Rotation Ids to associate with Oncall Contact for engagement.
          type: array
          x-insertionOrder: false
          items:
            type: string
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the contact.
      x-stackql-resource-name: plan
      x-stackql-primaryIdentifier:
        - Arn
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          description: The key name of the tag
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: The value for the tag.
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    HandOffTime:
      type: string
      pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
      description: Details about when an on-call rotation shift begins or ends. Time of the day in format HH:MM
    CoverageTime:
      type: object
      description: StartTime and EndTime for the Shift
      properties:
        StartTime:
          $ref: '#/components/schemas/HandOffTime'
        EndTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - StartTime
        - EndTime
      additionalProperties: false
    ShiftCoverage:
      type: object
      description: Information about the days of the week included in on-call rotation coverage.
      properties:
        DayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        CoverageTimes:
          description: Information about when an on-call shift begins and ends.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CoverageTime'
      required:
        - DayOfWeek
        - CoverageTimes
      additionalProperties: false
    DayOfWeek:
      description: 'The day of the week when weekly recurring on-call shift rotations begin. '
      type: string
      enum:
        - MON
        - TUE
        - WED
        - THU
        - FRI
        - SAT
        - SUN
    MonthlySetting:
      type: object
      description: DayOfWeek for Month and HandOff Time for Monthly Recurring Rotation.
      properties:
        DayOfMonth:
          description: The day of the month when monthly recurring on-call rotations begin.
          type: integer
          minimum: 1
          maximum: 31
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - DayOfMonth
        - HandOffTime
      additionalProperties: false
    WeeklySetting:
      type: object
      description: DayOfWeek for Rotation and HandOff Time for Weekly Recurring Rotation.
      properties:
        DayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - DayOfWeek
        - HandOffTime
      additionalProperties: false
    DailySetting:
      type: object
      description: Handoff time for Daily Recurring Rotation.
      properties:
        HandOffTime:
          $ref: '#/components/schemas/HandOffTime'
      required:
        - HandOffTime
      additionalProperties: false
    RecurrenceSettings:
      description: Information about when an on-call rotation is in effect and how long the rotation period lasts.
      type: object
      properties:
        MonthlySettings:
          description: Information about on-call rotations that recur monthly.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MonthlySetting'
        WeeklySettings:
          description: Information about on-call rotations that recur weekly.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/WeeklySetting'
        DailySettings:
          description: Information about on-call rotations that recur daily.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/HandOffTime'
        NumberOfOnCalls:
          type: integer
          description: Number of Oncalls per shift.
          minimum: 1
        RecurrenceMultiplier:
          type: integer
          description: The number of days, weeks, or months a single rotation lasts.
          minimum: 1
          maximum: 100
        ShiftCoverages:
          type: array
          x-insertionOrder: false
          description: Information about the days of the week included in on-call rotation coverage.
          items:
            $ref: '#/components/schemas/ShiftCoverage'
      additionalProperties: false
      oneOf:
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - WeeklySettings
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - MonthlySettings
        - required:
            - NumberOfOnCalls
            - RecurrenceMultiplier
            - DailySettings
    Rotation:
      type: object
      properties:
        Name:
          description: Name of the Rotation
          type: string
          pattern: ^[a-zA-Z0-9_]*$
        ContactIds:
          description: Members of the rotation
          type: array
          x-insertionOrder: false
          items:
            type: string
        StartTime:
          description: Start time of the first shift of Oncall Schedule
          type: string
          pattern: ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})$
        TimeZoneId:
          description: TimeZone Identifier for the Oncall Schedule
          type: string
        Recurrence:
          $ref: '#/components/schemas/RecurrenceSettings'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the rotation.
      required:
        - Name
        - ContactIds
        - StartTime
        - TimeZoneId
        - Recurrence
      x-stackql-resource-name: rotation
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    contacts:
      name: contacts
      id: aws.ssmcontacts.contacts
      x-cfn-schema-name: Contact
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::Contact'
    contact:
      name: contact
      id: aws.ssmcontacts.contact
      x-cfn-schema-name: Contact
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Plan') as plan,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Contact'
    contact_channels:
      name: contact_channels
      id: aws.ssmcontacts.contact_channels
      x-cfn-schema-name: ContactChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::ContactChannel'
    contact_channel:
      name: contact_channel
      id: aws.ssmcontacts.contact_channel
      x-cfn-schema-name: ContactChannel
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactId') as contact_id,
              JSON_EXTRACT(Properties, '$.ChannelName') as channel_name,
              JSON_EXTRACT(Properties, '$.ChannelType') as channel_type,
              JSON_EXTRACT(Properties, '$.DeferActivation') as defer_activation,
              JSON_EXTRACT(Properties, '$.ChannelAddress') as channel_address,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::ContactChannel'
    plans:
      name: plans
      id: aws.ssmcontacts.plans
      x-cfn-schema-name: Plan
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::Plan'
    plan:
      name: plan
      id: aws.ssmcontacts.plan
      x-cfn-schema-name: Plan
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactId') as contact_id,
              JSON_EXTRACT(Properties, '$.Stages') as stages,
              JSON_EXTRACT(Properties, '$.RotationIds') as rotation_ids,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Plan'
    rotations:
      name: rotations
      id: aws.ssmcontacts.rotations
      x-cfn-schema-name: Rotation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSMContacts::Rotation'
    rotation:
      name: rotation
      id: aws.ssmcontacts.rotation
      x-cfn-schema-name: Rotation
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ContactIds') as contact_ids,
              JSON_EXTRACT(Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(Properties, '$.TimeZoneId') as time_zone_id,
              JSON_EXTRACT(Properties, '$.Recurrence.MonthlySettings') as recurrence_monthly_settings,
              JSON_EXTRACT(Properties, '$.Recurrence.WeeklySettings') as recurrence_weekly_settings,
              JSON_EXTRACT(Properties, '$.Recurrence.DailySettings') as recurrence_daily_settings,
              JSON_EXTRACT(Properties, '$.Recurrence.NumberOfOnCalls') as recurrence_number_of_on_calls,
              JSON_EXTRACT(Properties, '$.Recurrence.RecurrenceMultiplier') as recurrence_recurrence_multiplier,
              JSON_EXTRACT(Properties, '$.Recurrence.ShiftCoverages') as recurrence_shift_coverages,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSMContacts::Rotation'
