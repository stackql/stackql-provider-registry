openapi: 3.0.0
info:
  title: SecretsManager
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourcePolicy:
      type: object
      properties:
        ResourcePolicy:
          type: object
        Id:
          type: string
        BlockPublicPolicy:
          type: boolean
        SecretId:
          type: string
      required:
        - SecretId
        - ResourcePolicy
      x-stackql-resource-name: resource_policy
      x-stackql-primaryIdentifier:
        - Id
    HostedRotationLambda:
      type: object
      additionalProperties: false
      properties:
        Runtime:
          type: string
        RotationType:
          type: string
        RotationLambdaName:
          type: string
        KmsKeyArn:
          type: string
        MasterSecretArn:
          type: string
        VpcSecurityGroupIds:
          type: string
        ExcludeCharacters:
          type: string
        MasterSecretKmsKeyArn:
          type: string
        SuperuserSecretArn:
          type: string
        SuperuserSecretKmsKeyArn:
          type: string
        VpcSubnetIds:
          type: string
      required:
        - RotationType
    RotationRules:
      type: object
      additionalProperties: false
      properties:
        ScheduleExpression:
          type: string
        Duration:
          type: string
        AutomaticallyAfterDays:
          type: integer
    RotationSchedule:
      type: object
      properties:
        Id:
          type: string
        RotationLambdaARN:
          type: string
        RotationRules:
          $ref: '#/components/schemas/RotationRules'
        RotateImmediatelyOnUpdate:
          type: boolean
        SecretId:
          type: string
        HostedRotationLambda:
          $ref: '#/components/schemas/HostedRotationLambda'
      required:
        - SecretId
      x-stackql-resource-name: rotation_schedule
      x-stackql-primaryIdentifier:
        - Id
    GenerateSecretString:
      type: object
      additionalProperties: false
      properties:
        ExcludeUppercase:
          type: boolean
        RequireEachIncludedType:
          type: boolean
        IncludeSpace:
          type: boolean
        ExcludeCharacters:
          type: string
        GenerateStringKey:
          type: string
        PasswordLength:
          type: integer
        ExcludePunctuation:
          type: boolean
        ExcludeLowercase:
          type: boolean
        SecretStringTemplate:
          type: string
        ExcludeNumbers:
          type: boolean
    ReplicaRegion:
      type: object
      additionalProperties: false
      properties:
        KmsKeyId:
          type: string
        Region:
          type: string
      required:
        - Region
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    Secret:
      type: object
      properties:
        Description:
          type: string
        KmsKeyId:
          type: string
        SecretString:
          type: string
        GenerateSecretString:
          $ref: '#/components/schemas/GenerateSecretString'
        ReplicaRegions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ReplicaRegion'
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      x-stackql-resource-name: secret
      x-stackql-primaryIdentifier:
        - Id
    SecretTargetAttachment:
      type: object
      properties:
        Id:
          type: string
        SecretId:
          type: string
        TargetType:
          type: string
        TargetId:
          type: string
      required:
        - TargetType
        - TargetId
        - SecretId
      x-stackql-resource-name: secret_target_attachment
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    resource_policies:
      name: resource_policies
      id: aws.secretsmanager.resource_policies
      x-cfn-schema-name: ResourcePolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
    resource_policy:
      name: resource_policy
      id: aws.secretsmanager.resource_policy
      x-cfn-schema-name: ResourcePolicy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourcePolicy') as resource_policy,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.BlockPublicPolicy') as block_public_policy,
              JSON_EXTRACT(Properties, '$.SecretId') as secret_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
    rotation_schedules:
      name: rotation_schedules
      id: aws.secretsmanager.rotation_schedules
      x-cfn-schema-name: RotationSchedule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::RotationSchedule'
    rotation_schedule:
      name: rotation_schedule
      id: aws.secretsmanager.rotation_schedule
      x-cfn-schema-name: RotationSchedule
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RotationLambdaARN') as rotation_lambda_ar_n,
              JSON_EXTRACT(Properties, '$.RotationRules.ScheduleExpression') as rotation_rules_schedule_expression,
              JSON_EXTRACT(Properties, '$.RotationRules.Duration') as rotation_rules_duration,
              JSON_EXTRACT(Properties, '$.RotationRules.AutomaticallyAfterDays') as rotation_rules_automatically_after_days,
              JSON_EXTRACT(Properties, '$.RotateImmediatelyOnUpdate') as rotate_immediately_on_update,
              JSON_EXTRACT(Properties, '$.SecretId') as secret_id,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.Runtime') as hosted_rotation_lambda_runtime,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.RotationType') as hosted_rotation_lambda_rotation_type,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.RotationLambdaName') as hosted_rotation_lambda_rotation_lambda_name,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.KmsKeyArn') as hosted_rotation_lambda_kms_key_arn,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.MasterSecretArn') as hosted_rotation_lambda_master_secret_arn,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.VpcSecurityGroupIds') as hosted_rotation_lambda_vpc_security_group_ids,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.ExcludeCharacters') as hosted_rotation_lambda_exclude_characters,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.MasterSecretKmsKeyArn') as hosted_rotation_lambda_master_secret_kms_key_arn,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.SuperuserSecretArn') as hosted_rotation_lambda_superuser_secret_arn,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.SuperuserSecretKmsKeyArn') as hosted_rotation_lambda_superuser_secret_kms_key_arn,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda.VpcSubnetIds') as hosted_rotation_lambda_vpc_subnet_ids
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::RotationSchedule'
    secrets:
      name: secrets
      id: aws.secretsmanager.secrets
      x-cfn-schema-name: Secret
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::Secret'
    secret:
      name: secret
      id: aws.secretsmanager.secret
      x-cfn-schema-name: Secret
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.SecretString') as secret_string,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.ExcludeUppercase') as generate_secret_string_exclude_uppercase,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.RequireEachIncludedType') as generate_secret_string_require_each_included_type,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.IncludeSpace') as generate_secret_string_include_space,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.ExcludeCharacters') as generate_secret_string_exclude_characters,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.GenerateStringKey') as generate_secret_string_generate_string_key,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.PasswordLength') as generate_secret_string_password_length,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.ExcludePunctuation') as generate_secret_string_exclude_punctuation,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.ExcludeLowercase') as generate_secret_string_exclude_lowercase,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.SecretStringTemplate') as generate_secret_string_secret_string_template,
              JSON_EXTRACT(Properties, '$.GenerateSecretString.ExcludeNumbers') as generate_secret_string_exclude_numbers,
              JSON_EXTRACT(Properties, '$.ReplicaRegions') as replica_regions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::Secret'
    secret_target_attachments:
      name: secret_target_attachments
      id: aws.secretsmanager.secret_target_attachments
      x-cfn-schema-name: SecretTargetAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
    secret_target_attachment:
      name: secret_target_attachment
      id: aws.secretsmanager.secret_target_attachment
      x-cfn-schema-name: SecretTargetAttachment
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SecretId') as secret_id,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.TargetId') as target_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
