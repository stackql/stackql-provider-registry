openapi: 3.0.0
info:
  title: SecretsManager
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ResourcePolicy:
      type: object
      properties:
        Id:
          type: string
          description: The Arn of the secret.
        SecretId:
          type: string
          minLength: 1
          maxLength: 2048
          description: The ARN or name of the secret to attach the resource-based policy.
        ResourcePolicy:
          type: object
          description: A JSON-formatted string for an AWS resource-based policy.
        BlockPublicPolicy:
          type: boolean
          description: Specifies whether to block resource-based policies that allow broad access to the secret.
      required:
        - ResourcePolicy
        - SecretId
      x-stackql-resource-name: resource_policy
      description: Resource Type definition for AWS::SecretsManager::ResourcePolicy
      x-type-name: AWS::SecretsManager::ResourcePolicy
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - SecretId
      x-write-only-properties:
        - BlockPublicPolicy
      x-read-only-properties:
        - Id
      x-required-properties:
        - ResourcePolicy
        - SecretId
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - secretsmanager:PutResourcePolicy
          - secretsmanager:GetResourcePolicy
        read:
          - secretsmanager:GetResourcePolicy
        update:
          - secretsmanager:PutResourcePolicy
          - secretsmanager:GetResourcePolicy
        delete:
          - secretsmanager:DeleteResourcePolicy
          - secretsmanager:GetResourcePolicy
        list:
          - secretsmanager:GetResourcePolicy
          - secretsmanager:ListSecrets
    HostedRotationLambda:
      additionalProperties: false
      type: object
      properties:
        Runtime:
          description: The python runtime associated with the Lambda function
          type: string
        KmsKeyArn:
          description: The ARN of the KMS key that Secrets Manager uses to encrypt the secret. If you don't specify this value, then Secrets Manager uses the key aws/secretsmanager. If aws/secretsmanager doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value.
          type: string
        MasterSecretArn:
          description: The ARN of the secret that contains superuser credentials, if you use the alternating users rotation strategy. CloudFormation grants the execution role for the Lambda rotation function GetSecretValue permission to the secret in this property.
          type: string
        RotationLambdaName:
          description: The name of the Lambda rotation function.
          type: string
        RotationType:
          description: The type of rotation template to use
          type: string
        ExcludeCharacters:
          description: A string of the characters that you don't want in the password.
          type: string
        VpcSecurityGroupIds:
          description: A comma-separated list of security group IDs applied to the target database.
          type: string
        MasterSecretKmsKeyArn:
          description: The ARN of the KMS key that Secrets Manager used to encrypt the superuser secret, if you use the alternating users strategy and the superuser secret is encrypted with a customer managed key. You don't need to specify this property if the superuser secret is encrypted using the key aws/secretsmanager. CloudFormation grants the execution role for the Lambda rotation function Decrypt, DescribeKey, and GenerateDataKey permission to the key in this property.
          type: string
        SuperuserSecretArn:
          description: The ARN of the secret that contains superuser credentials, if you use the alternating users rotation strategy. CloudFormation grants the execution role for the Lambda rotation function GetSecretValue permission to the secret in this property.
          type: string
        SuperuserSecretKmsKeyArn:
          description: The ARN of the KMS key that Secrets Manager used to encrypt the superuser secret, if you use the alternating users strategy and the superuser secret is encrypted with a customer managed key. You don't need to specify this property if the superuser secret is encrypted using the key aws/secretsmanager. CloudFormation grants the execution role for the Lambda rotation function Decrypt, DescribeKey, and GenerateDataKey permission to the key in this property.
          type: string
        VpcSubnetIds:
          description: A comma separated list of VPC subnet IDs of the target database network. The Lambda rotation function is in the same subnet group.
          type: string
      required:
        - RotationType
    RotationRules:
      additionalProperties: false
      type: object
      properties:
        ScheduleExpression:
          description: A cron() or rate() expression that defines the schedule for rotating your secret. Secrets Manager rotation schedules use UTC time zone.
          type: string
        Duration:
          description: >-
            The length of the rotation window in hours, for example 3h for a three hour window. Secrets Manager rotates your secret at any time during this window. The window must not extend into the next rotation window or the next UTC day. The window starts according to the ScheduleExpression. If you don't specify a Duration, for a ScheduleExpression in hours, the window automatically closes after one hour. For a ScheduleExpression in days, the window automatically closes at the end of the UTC
            day.
          type: string
        AutomaticallyAfterDays:
          description: The number of days between automatic scheduled rotations of the secret. You can use this value to check that your secret meets your compliance guidelines for how often secrets must be rotated.
          type: integer
    RotationSchedule:
      type: object
      properties:
        HostedRotationLambda:
          description: Creates a new Lambda rotation function based on one of the Secrets Manager rotation function templates. To use a rotation function that already exists, specify RotationLambdaARN instead.
          $ref: '#/components/schemas/HostedRotationLambda'
        SecretId:
          description: The ARN or name of the secret to rotate.
          type: string
        Id:
          description: The ARN of the secret.
          type: string
        RotateImmediatelyOnUpdate:
          description: Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window.
          type: boolean
        RotationLambdaARN:
          description: The ARN of an existing Lambda rotation function. To specify a rotation function that is also defined in this template, use the Ref function.
          type: string
        RotationRules:
          description: A structure that defines the rotation configuration for this secret.
          $ref: '#/components/schemas/RotationRules'
      required:
        - SecretId
      x-stackql-resource-name: rotation_schedule
      description: Resource Type definition for AWS::SecretsManager::RotationSchedule
      x-type-name: AWS::SecretsManager::RotationSchedule
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - SecretId
      x-write-only-properties:
        - RotateImmediatelyOnUpdate
        - HostedRotationLambda
        - HostedRotationLambda/ExcludeCharacters
        - HostedRotationLambda/KmsKeyArn
        - HostedRotationLambda/MasterSecretArn
        - HostedRotationLambda/MasterSecretKmsKeyArn
        - HostedRotationLambda/RotationLambdaName
        - HostedRotationLambda/RotationType
        - HostedRotationLambda/Runtime
        - HostedRotationLambda/SuperuserSecretArn
        - HostedRotationLambda/SuperuserSecretKmsKeyArn
        - HostedRotationLambda/VpcSecurityGroupIds
        - HostedRotationLambda/VpcSubnetIds
      x-read-only-properties:
        - Id
      x-required-properties:
        - SecretId
      x-tagging:
        taggable: false
      x-required-permissions:
        read:
          - secretsmanager:DescribeSecret
        create:
          - secretsmanager:RotateSecret
          - secretsmanager:DescribeSecret
          - lambda:InvokeFunction
        update:
          - secretsmanager:RotateSecret
          - secretsmanager:DescribeSecret
          - lambda:InvokeFunction
        list:
          - secretsmanager:DescribeSecret
          - secretsmanager:ListSecrets
        delete:
          - secretsmanager:CancelRotateSecret
          - secretsmanager:DescribeSecret
    GenerateSecretString:
      type: object
      additionalProperties: false
      properties:
        ExcludeUppercase:
          type: boolean
          description: Specifies whether to exclude uppercase letters from the password. If you don't include this switch, the password can contain uppercase letters.
        RequireEachIncludedType:
          type: boolean
          description: Specifies whether to include at least one upper and lowercase letter, one number, and one punctuation. If you don't include this switch, the password contains at least one of every character type.
        IncludeSpace:
          type: boolean
          description: Specifies whether to include the space character. If you include this switch, the password can contain space characters.
        ExcludeCharacters:
          type: string
          description: A string of the characters that you don't want in the password.
        GenerateStringKey:
          type: string
          description: The JSON key name for the key/value pair, where the value is the generated password. This pair is added to the JSON structure specified by the ``SecretStringTemplate`` parameter. If you specify this parameter, then you must also specify ``SecretStringTemplate``.
        PasswordLength:
          type: integer
          description: The length of the password. If you don't include this parameter, the default length is 32 characters.
        ExcludePunctuation:
          type: boolean
          description: 'Specifies whether to exclude the following punctuation characters from the password: ``! " # $ % & '' ( ) * + , - . / : ; < = > ? @ [ \ ] ^ _ ` { | } ~``. If you don''t include this switch, the password can contain punctuation.'
        ExcludeLowercase:
          type: boolean
          description: Specifies whether to exclude lowercase letters from the password. If you don't include this switch, the password can contain lowercase letters.
        SecretStringTemplate:
          type: string
          description: A template that the generated string must match. When you make a change to this property, a new secret version is created.
        ExcludeNumbers:
          type: boolean
          description: Specifies whether to exclude numbers from the password. If you don't include this switch, the password can contain numbers.
      description: |-
        Generates a random password. We recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.
          *Required permissions:* ``secretsmanager:GetRandomPassword``. For more information, see [IAM policy actions for Secrets Manager](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awssecretsmanager.html#awssecretsmanager-actions-as-permissions) and [Authentication and access control in Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html).
    ReplicaRegion:
      type: object
      description: Specifies a ``Region`` and the ``KmsKeyId`` for a replica secret.
      additionalProperties: false
      properties:
        KmsKeyId:
          type: string
          description: The ARN, key ID, or alias of the KMS key to encrypt the secret. If you don't include this field, Secrets Manager uses ``aws/secretsmanager``.
        Region:
          type: string
          description: A string that represents a ``Region``, for example "us-east-1".
      required:
        - Region
    Tag:
      type: object
      description: A structure that contains information about a tag.
      additionalProperties: false
      properties:
        Value:
          type: string
          description: The string value associated with the key of the tag.
        Key:
          type: string
          description: The key identifier, or name, of the tag.
      required:
        - Value
        - Key
    Secret:
      type: object
      properties:
        Description:
          type: string
          description: The description of the secret.
        KmsKeyId:
          type: string
          description: |-
            The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt the secret value in the secret. An alias is always prefixed by ``alias/``, for example ``alias/aws/secretsmanager``. For more information, see [About aliases](https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html).
             To use a KMS key in a different account, use the key ARN or the alias ARN.
             If you don't specify this value, then Secrets Manager uses the key ``aws/secretsmanager``. If that key doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value.
             If the secret is in a different AWS account from the credentials calling the API, then you can't use ``aws/secretsmanager`` to encrypt the secret, and you must create and use a customer managed KMS key.
        SecretString:
          type: string
          description: The text to encrypt and store in the secret. We recommend you use a JSON structure of key/value pairs for your secret value. To generate a random password, use ``GenerateSecretString`` instead. If you omit both ``GenerateSecretString`` and ``SecretString``, you create an empty secret. When you make a change to this property, a new secret version is created.
        GenerateSecretString:
          $ref: '#/components/schemas/GenerateSecretString'
          description: |-
            A structure that specifies how to generate a password to encrypt and store in the secret. To include a specific string in the secret, use ``SecretString`` instead. If you omit both ``GenerateSecretString`` and ``SecretString``, you create an empty secret. When you make a change to this property, a new secret version is created.
             We recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.
        ReplicaRegions:
          type: array
          description: A custom type that specifies a ``Region`` and the ``KmsKeyId`` for a replica secret.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ReplicaRegion'
        Id:
          type: string
          description: ''
        Tags:
          type: array
          description: |-
            A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string, for example:
              ``[{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]`` 
             Secrets Manager tag key names are case sensitive. A tag with the key "ABC" is a different tag from one with key "abc".
             Stack-level tags, tags you apply to the CloudFormation stack, are also attached to the secret. 
             If you check tags in permissions policies as part of your security strategy, then adding or removing a tag can change permissions. If the completion of this operation would result in you losing your permissions for this secret, then Secrets Manager blocks the operation and returns an ``Access Denied`` error. For more information, see [Control access to secrets using tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac) and [Limit access to identities with tags that match secrets' tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2).
             For information about how to format a JSON parameter for the various command line tool environments, see [Using JSON for Parameters](https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json). If your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text.
             The following restrictions apply to tags:
              +  Maximum number of tags per secret: 50
              +  Maximum key length: 127 Unicode characters in UTF-8
              +  Maximum value length: 255 Unicode characters in UTF-8
              +  Tag keys and values are case sensitive.
              +  Do not use the ``aws:`` prefix in your tag names or values because AWS reserves it for AWS use. You can't edit or delete tag names or values with this prefix. Tags with this prefix do not count against your tags per secret limit.
              +  If you use your tagging schema across multiple services and resources, other services might have restrictions on allowed characters. Generally allowed characters: letters, spaces, and numbers representable in UTF-8, plus the following special characters: + - = . _ : / @.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
          description: |-
            The name of the new secret.
             The secret name can contain ASCII letters, numbers, and the following characters: /_+=.@-
             Do not end your secret name with a hyphen followed by six characters. If you do so, you risk confusion and unexpected results when searching for a secret by partial ARN. Secrets Manager automatically adds a hyphen and six random characters after the secret name at the end of the ARN.
      x-stackql-resource-name: secret
      description: |-
        Creates a new secret. A *secret* can be a password, a set of credentials such as a user name and password, an OAuth token, or other secret information that you store in an encrypted form in Secrets Manager.
         For RDS master user credentials, see [AWS::RDS::DBCluster MasterUserSecret](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbcluster-masterusersecret.html).
         For RS admin user credentials, see [AWS::Redshift::Cluster](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html).
         To retrieve a secret in a CFNshort template, use a *dynamic reference*. For more information, see [Retrieve a secret in an resource](https://docs.aws.amazon.com/secretsmanager/latest/userguide/cfn-example_reference-secret.html).
         For information about creating a secret in the console, see [Create a secret](https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_create-basic-secret.html). For information about creating a secret using the CLI or SDK, see [CreateSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html).
         For information about retrieving a secret in code, see [Retrieve secrets from Secrets Manager](https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets.html).
      x-type-name: AWS::SecretsManager::Secret
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - SecretString
        - GenerateSecretString
      x-read-only-properties:
        - Id
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - secretsmanager:UntagResource
          - secretsmanager:TagResource
      x-required-permissions:
        create:
          - secretsmanager:DescribeSecret
          - secretsmanager:GetRandomPassword
          - secretsmanager:CreateSecret
          - secretsmanager:TagResource
          - secretsmanager:ReplicateSecretToRegions
        delete:
          - secretsmanager:DeleteSecret
          - secretsmanager:DescribeSecret
          - secretsmanager:RemoveRegionsFromReplication
        list:
          - secretsmanager:ListSecrets
        read:
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
        update:
          - secretsmanager:UpdateSecret
          - secretsmanager:TagResource
          - secretsmanager:UntagResource
          - secretsmanager:GetRandomPassword
          - secretsmanager:GetSecretValue
          - secretsmanager:ReplicateSecretToRegions
          - secretsmanager:RemoveRegionsFromReplication
    SecretTargetAttachment:
      type: object
      properties:
        Id:
          type: string
        SecretId:
          type: string
        TargetType:
          type: string
        TargetId:
          type: string
      required:
        - TargetType
        - TargetId
        - SecretId
      x-stackql-resource-name: secret_target_attachment
      description: Resource Type definition for AWS::SecretsManager::SecretTargetAttachment
      x-type-name: AWS::SecretsManager::SecretTargetAttachment
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - SecretId
      x-read-only-properties:
        - Id
      x-required-properties:
        - TargetType
        - TargetId
        - SecretId
      x-tagging:
        taggable: false
      x-required-permissions:
        read:
          - secretsmanager:GetSecretValue
        list:
          - secretsmanager:GetSecretValue
          - secretsmanager:ListSecrets
        create:
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
          - rds:DescribeDBInstances
          - redshift:DescribeClusters
          - rds:DescribeDBClusters
          - docdb-elastic:GetCluster
          - redshift-serverless:ListWorkgroups
          - redshift-serverless:GetNamespace
        delete:
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
        update:
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
          - rds:DescribeDBInstances
          - redshift:DescribeClusters
          - rds:DescribeDBClusters
          - docdb-elastic:GetCluster
          - redshift-serverless:ListWorkgroups
          - redshift-serverless:GetNamespace
    CreateResourcePolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
              description: The Arn of the secret.
            SecretId:
              type: string
              minLength: 1
              maxLength: 2048
              description: The ARN or name of the secret to attach the resource-based policy.
            ResourcePolicy:
              type: object
              description: A JSON-formatted string for an AWS resource-based policy.
            BlockPublicPolicy:
              type: boolean
              description: Specifies whether to block resource-based policies that allow broad access to the secret.
          x-stackQL-stringOnly: true
      x-title: CreateResourcePolicyRequest
      type: object
      required: []
    CreateRotationScheduleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            HostedRotationLambda:
              description: Creates a new Lambda rotation function based on one of the Secrets Manager rotation function templates. To use a rotation function that already exists, specify RotationLambdaARN instead.
              $ref: '#/components/schemas/HostedRotationLambda'
            SecretId:
              description: The ARN or name of the secret to rotate.
              type: string
            Id:
              description: The ARN of the secret.
              type: string
            RotateImmediatelyOnUpdate:
              description: Specifies whether to rotate the secret immediately or wait until the next scheduled rotation window.
              type: boolean
            RotationLambdaARN:
              description: The ARN of an existing Lambda rotation function. To specify a rotation function that is also defined in this template, use the Ref function.
              type: string
            RotationRules:
              description: A structure that defines the rotation configuration for this secret.
              $ref: '#/components/schemas/RotationRules'
          x-stackQL-stringOnly: true
      x-title: CreateRotationScheduleRequest
      type: object
      required: []
    CreateSecretRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              description: The description of the secret.
            KmsKeyId:
              type: string
              description: |-
                The ARN, key ID, or alias of the KMS key that Secrets Manager uses to encrypt the secret value in the secret. An alias is always prefixed by ``alias/``, for example ``alias/aws/secretsmanager``. For more information, see [About aliases](https://docs.aws.amazon.com/kms/latest/developerguide/alias-about.html).
                 To use a KMS key in a different account, use the key ARN or the alias ARN.
                 If you don't specify this value, then Secrets Manager uses the key ``aws/secretsmanager``. If that key doesn't yet exist, then Secrets Manager creates it for you automatically the first time it encrypts the secret value.
                 If the secret is in a different AWS account from the credentials calling the API, then you can't use ``aws/secretsmanager`` to encrypt the secret, and you must create and use a customer managed KMS key.
            SecretString:
              type: string
              description: The text to encrypt and store in the secret. We recommend you use a JSON structure of key/value pairs for your secret value. To generate a random password, use ``GenerateSecretString`` instead. If you omit both ``GenerateSecretString`` and ``SecretString``, you create an empty secret. When you make a change to this property, a new secret version is created.
            GenerateSecretString:
              $ref: '#/components/schemas/GenerateSecretString'
              description: |-
                A structure that specifies how to generate a password to encrypt and store in the secret. To include a specific string in the secret, use ``SecretString`` instead. If you omit both ``GenerateSecretString`` and ``SecretString``, you create an empty secret. When you make a change to this property, a new secret version is created.
                 We recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.
            ReplicaRegions:
              type: array
              description: A custom type that specifies a ``Region`` and the ``KmsKeyId`` for a replica secret.
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ReplicaRegion'
            Id:
              type: string
              description: ''
            Tags:
              type: array
              description: |-
                A list of tags to attach to the secret. Each tag is a key and value pair of strings in a JSON text string, for example:
                  ``[{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]`` 
                 Secrets Manager tag key names are case sensitive. A tag with the key "ABC" is a different tag from one with key "abc".
                 Stack-level tags, tags you apply to the CloudFormation stack, are also attached to the secret. 
                 If you check tags in permissions policies as part of your security strategy, then adding or removing a tag can change permissions. If the completion of this operation would result in you losing your permissions for this secret, then Secrets Manager blocks the operation and returns an ``Access Denied`` error. For more information, see [Control access to secrets using tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#tag-secrets-abac) and [Limit access to identities with tags that match secrets' tags](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_examples.html#auth-and-access_tags2).
                 For information about how to format a JSON parameter for the various command line tool environments, see [Using JSON for Parameters](https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json). If your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text.
                 The following restrictions apply to tags:
                  +  Maximum number of tags per secret: 50
                  +  Maximum key length: 127 Unicode characters in UTF-8
                  +  Maximum value length: 255 Unicode characters in UTF-8
                  +  Tag keys and values are case sensitive.
                  +  Do not use the ``aws:`` prefix in your tag names or values because AWS reserves it for AWS use. You can't edit or delete tag names or values with this prefix. Tags with this prefix do not count against your tags per secret limit.
                  +  If you use your tagging schema across multiple services and resources, other services might have restrictions on allowed characters. Generally allowed characters: letters, spaces, and numbers representable in UTF-8, plus the following special characters: + - = . _ : / @.
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            Name:
              type: string
              description: |-
                The name of the new secret.
                 The secret name can contain ASCII letters, numbers, and the following characters: /_+=.@-
                 Do not end your secret name with a hyphen followed by six characters. If you do so, you risk confusion and unexpected results when searching for a secret by partial ARN. Secrets Manager automatically adds a hyphen and six random characters after the secret name at the end of the ARN.
          x-stackQL-stringOnly: true
      x-title: CreateSecretRequest
      type: object
      required: []
    CreateSecretTargetAttachmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
            SecretId:
              type: string
            TargetType:
              type: string
            TargetId:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateSecretTargetAttachmentRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    resource_policies:
      name: resource_policies
      id: aws.secretsmanager.resource_policies
      x-cfn-schema-name: ResourcePolicy
      x-cfn-type-name: AWS::SecretsManager::ResourcePolicy
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResourcePolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::ResourcePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::ResourcePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::ResourcePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SecretId') as secret_id,
              JSON_EXTRACT(Properties, '$.ResourcePolicy') as resource_policy,
              JSON_EXTRACT(Properties, '$.BlockPublicPolicy') as block_public_policy
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.SecretId') as secret_id,
                JSON_EXTRACT(detail.Properties, '$.ResourcePolicy') as resource_policy,
                JSON_EXTRACT(detail.Properties, '$.BlockPublicPolicy') as block_public_policy
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
                AND detail.data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'SecretId') as secret_id,
                  json_extract_path_text(Properties, 'ResourcePolicy') as resource_policy,
                  json_extract_path_text(Properties, 'BlockPublicPolicy') as block_public_policy
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'SecretId') as secret_id,
                    json_extract_path_text(detail.Properties, 'ResourcePolicy') as resource_policy,
                    json_extract_path_text(detail.Properties, 'BlockPublicPolicy') as block_public_policy
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
                    AND detail.data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
                    AND listing.region = 'us-east-1'
    resource_policies_list_only:
      name: resource_policies_list_only
      id: aws.secretsmanager.resource_policies_list_only
      x-cfn-schema-name: ResourcePolicy
      x-cfn-type-name: AWS::SecretsManager::ResourcePolicy
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::ResourcePolicy'
                AND region = 'us-east-1'
    rotation_schedules:
      name: rotation_schedules
      id: aws.secretsmanager.rotation_schedules
      x-cfn-schema-name: RotationSchedule
      x-cfn-type-name: AWS::SecretsManager::RotationSchedule
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RotationSchedule&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::RotationSchedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::RotationSchedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::RotationSchedule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/rotation_schedules/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/rotation_schedules/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/rotation_schedules/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.HostedRotationLambda') as hosted_rotation_lambda,
              JSON_EXTRACT(Properties, '$.SecretId') as secret_id,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RotateImmediatelyOnUpdate') as rotate_immediately_on_update,
              JSON_EXTRACT(Properties, '$.RotationLambdaARN') as rotation_lambda_arn,
              JSON_EXTRACT(Properties, '$.RotationRules') as rotation_rules
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::RotationSchedule'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.HostedRotationLambda') as hosted_rotation_lambda,
                JSON_EXTRACT(detail.Properties, '$.SecretId') as secret_id,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.RotateImmediatelyOnUpdate') as rotate_immediately_on_update,
                JSON_EXTRACT(detail.Properties, '$.RotationLambdaARN') as rotation_lambda_arn,
                JSON_EXTRACT(detail.Properties, '$.RotationRules') as rotation_rules
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecretsManager::RotationSchedule'
                AND detail.data__TypeName = 'AWS::SecretsManager::RotationSchedule'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'HostedRotationLambda') as hosted_rotation_lambda,
                  json_extract_path_text(Properties, 'SecretId') as secret_id,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'RotateImmediatelyOnUpdate') as rotate_immediately_on_update,
                  json_extract_path_text(Properties, 'RotationLambdaARN') as rotation_lambda_arn,
                  json_extract_path_text(Properties, 'RotationRules') as rotation_rules
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::RotationSchedule'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'HostedRotationLambda') as hosted_rotation_lambda,
                    json_extract_path_text(detail.Properties, 'SecretId') as secret_id,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'RotateImmediatelyOnUpdate') as rotate_immediately_on_update,
                    json_extract_path_text(detail.Properties, 'RotationLambdaARN') as rotation_lambda_arn,
                    json_extract_path_text(detail.Properties, 'RotationRules') as rotation_rules
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecretsManager::RotationSchedule'
                    AND detail.data__TypeName = 'AWS::SecretsManager::RotationSchedule'
                    AND listing.region = 'us-east-1'
    rotation_schedules_list_only:
      name: rotation_schedules_list_only
      id: aws.secretsmanager.rotation_schedules_list_only
      x-cfn-schema-name: RotationSchedule
      x-cfn-type-name: AWS::SecretsManager::RotationSchedule
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::RotationSchedule'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::RotationSchedule'
                AND region = 'us-east-1'
    secrets:
      name: secrets
      id: aws.secretsmanager.secrets
      x-cfn-schema-name: Secret
      x-cfn-type-name: AWS::SecretsManager::Secret
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Secret&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::Secret"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::Secret"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::Secret"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.SecretString') as secret_string,
              JSON_EXTRACT(Properties, '$.GenerateSecretString') as generate_secret_string,
              JSON_EXTRACT(Properties, '$.ReplicaRegions') as replica_regions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::Secret'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
                JSON_EXTRACT(detail.Properties, '$.SecretString') as secret_string,
                JSON_EXTRACT(detail.Properties, '$.GenerateSecretString') as generate_secret_string,
                JSON_EXTRACT(detail.Properties, '$.ReplicaRegions') as replica_regions,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecretsManager::Secret'
                AND detail.data__TypeName = 'AWS::SecretsManager::Secret'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KmsKeyId') as kms_key_id,
                  json_extract_path_text(Properties, 'SecretString') as secret_string,
                  json_extract_path_text(Properties, 'GenerateSecretString') as generate_secret_string,
                  json_extract_path_text(Properties, 'ReplicaRegions') as replica_regions,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Name') as name
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::Secret'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                    json_extract_path_text(detail.Properties, 'SecretString') as secret_string,
                    json_extract_path_text(detail.Properties, 'GenerateSecretString') as generate_secret_string,
                    json_extract_path_text(detail.Properties, 'ReplicaRegions') as replica_regions,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Name') as name
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecretsManager::Secret'
                    AND detail.data__TypeName = 'AWS::SecretsManager::Secret'
                    AND listing.region = 'us-east-1'
    secrets_list_only:
      name: secrets_list_only
      id: aws.secretsmanager.secrets_list_only
      x-cfn-schema-name: Secret
      x-cfn-type-name: AWS::SecretsManager::Secret
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::Secret'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::Secret'
                AND region = 'us-east-1'
    secret_tags:
      name: secret_tags
      id: aws.secretsmanager.secret_tags
      x-cfn-schema-name: Secret
      x-cfn-type-name: AWS::SecretsManager::Secret
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(detail.Properties, '$.SecretString') as secret_string,
              JSON_EXTRACT(detail.Properties, '$.GenerateSecretString') as generate_secret_string,
              JSON_EXTRACT(detail.Properties, '$.ReplicaRegions') as replica_regions,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::SecretsManager::Secret'
              AND detail.data__TypeName = 'AWS::SecretsManager::Secret'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'KmsKeyId') as kms_key_id,
                json_extract_path_text(detail.Properties, 'SecretString') as secret_string,
                json_extract_path_text(detail.Properties, 'GenerateSecretString') as generate_secret_string,
                json_extract_path_text(detail.Properties, 'ReplicaRegions') as replica_regions,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::SecretsManager::Secret'
                AND detail.data__TypeName = 'AWS::SecretsManager::Secret'
                AND listing.region = 'us-east-1'
    secret_target_attachments:
      name: secret_target_attachments
      id: aws.secretsmanager.secret_target_attachments
      x-cfn-schema-name: SecretTargetAttachment
      x-cfn-type-name: AWS::SecretsManager::SecretTargetAttachment
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SecretTargetAttachment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::SecretTargetAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::SecretTargetAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecretsManager::SecretTargetAttachment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/secret_target_attachments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/secret_target_attachments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/secret_target_attachments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SecretId') as secret_id,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.TargetId') as target_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.SecretId') as secret_id,
                JSON_EXTRACT(detail.Properties, '$.TargetType') as target_type,
                JSON_EXTRACT(detail.Properties, '$.TargetId') as target_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
                AND detail.data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'SecretId') as secret_id,
                  json_extract_path_text(Properties, 'TargetType') as target_type,
                  json_extract_path_text(Properties, 'TargetId') as target_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'SecretId') as secret_id,
                    json_extract_path_text(detail.Properties, 'TargetType') as target_type,
                    json_extract_path_text(detail.Properties, 'TargetId') as target_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
                    AND detail.data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
                    AND listing.region = 'us-east-1'
    secret_target_attachments_list_only:
      name: secret_target_attachments_list_only
      id: aws.secretsmanager.secret_target_attachments_list_only
      x-cfn-schema-name: SecretTargetAttachment
      x-cfn-type-name: AWS::SecretsManager::SecretTargetAttachment
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecretsManager::SecretTargetAttachment'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResourcePolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResourcePolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResourcePolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RotationSchedule&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRotationSchedule
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRotationScheduleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Secret&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSecret
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSecretRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SecretTargetAttachment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSecretTargetAttachment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSecretTargetAttachmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
