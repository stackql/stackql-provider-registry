openapi: 3.0.1
servers:
  - url: 'https://api.fivetran.com'
    variables: {}
info:
  title: OpenAPI Definition - destinations
  description: Destination Management
  version: v1
security:
  - basicAuth: []
components:
  schemas:
    NewDestinationRequest:
      required:
        - group_id
        - service
        - time_zone_offset
      type: object
      properties:
        group_id:
          type: string
          description: The unique identifier for the group within the Fivetran system.
          example: String
        service:
          type: string
          description: The name for the destination type within the Fivetran system.
          example: String
        region:
          type: string
          description: Data processing location. This is where Fivetran will operate and run computation on data.
          example: '>- optional_US_by_default: US, EU, APAC (Australia), UK, CANADA, SINGAPORE'
          enum:
            - GCP_US_EAST4
            - GCP_US_WEST1
            - GCP_EUROPE_WEST3
            - GCP_AUSTRALIA_SOUTHEAST1
            - GCP_NORTHAMERICA_NORTHEAST1
            - GCP_EUROPE_WEST2
            - GCP_ASIA_SOUTHEAST1
            - AWS_US_EAST_1
            - AWS_US_EAST_2
            - AWS_US_WEST_2
            - AWS_AP_SOUTHEAST_2
            - AWS_EU_CENTRAL_1
            - AWS_EU_WEST_1
            - ' AWS_EU_WEST_2'
            - AZURE_EASTUS2
            - AZURE_AUSTRALIAEAST
            - GCP_ASIA_SOUTH1
        time_zone_offset:
          type: string
          description: Determines the time zone for the Fivetran sync schedule.
          example: 'integer: -11, 10 ... ,0 , ... +11, +12'
        trust_certificates:
          type: boolean
          description: 'Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).'
        trust_fingerprints:
          type: boolean
          description: 'Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).'
        run_setup_tests:
          type: boolean
          description: Specifies whether setup tests should be run automatically.
          example: true
      discriminator:
        propertyName: service
        mapping:
          aurora_postgres_warehouse: '#/components/schemas/aurora_postgres_warehouse_NewDestinationRequest'
          aurora_warehouse: '#/components/schemas/aurora_warehouse_NewDestinationRequest'
          azure_postgres_warehouse: '#/components/schemas/azure_postgres_warehouse_NewDestinationRequest'
          azure_sql_data_warehouse: '#/components/schemas/azure_sql_data_warehouse_NewDestinationRequest'
          azure_sql_database: '#/components/schemas/azure_sql_database_NewDestinationRequest'
          azure_sql_managed_db_warehouse: '#/components/schemas/azure_sql_managed_db_warehouse_NewDestinationRequest'
          big_query: '#/components/schemas/big_query_NewDestinationRequest'
          databricks: '#/components/schemas/databricks_NewDestinationRequest'
          managed_big_query: '#/components/schemas/managed_big_query_NewDestinationRequest'
          maria_rds_warehouse: '#/components/schemas/maria_rds_warehouse_NewDestinationRequest'
          maria_warehouse: '#/components/schemas/maria_warehouse_NewDestinationRequest'
          mysql_rds_warehouse: '#/components/schemas/mysql_rds_warehouse_NewDestinationRequest'
          mysql_warehouse: '#/components/schemas/mysql_warehouse_NewDestinationRequest'
          panoply: '#/components/schemas/panoply_NewDestinationRequest'
          periscope_warehouse: '#/components/schemas/periscope_warehouse_NewDestinationRequest'
          postgres_gcp_warehouse: '#/components/schemas/postgres_gcp_warehouse_NewDestinationRequest'
          postgres_rds_warehouse: '#/components/schemas/postgres_rds_warehouse_NewDestinationRequest'
          postgres_warehouse: '#/components/schemas/postgres_warehouse_NewDestinationRequest'
          redshift: '#/components/schemas/redshift_NewDestinationRequest'
          snowflake: '#/components/schemas/snowflake_NewDestinationRequest'
          sql_server_rds_warehouse: '#/components/schemas/sql_server_rds_warehouse_NewDestinationRequest'
          sql_server_warehouse: '#/components/schemas/sql_server_warehouse_NewDestinationRequest'
    DestinationResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the destination within the Fivetran system
        service:
          type: string
          description: The name for the destination type within the Fivetran system.
          example: String
        region:
          type: string
          description: Data processing location. This is where Fivetran will operate and run computation on data.
          example: '>- optional_US_by_default: US, EU, APAC (Australia), UK, CANADA, SINGAPORE'
          enum:
            - GCP_US_EAST4
            - GCP_US_WEST1
            - GCP_EUROPE_WEST3
            - GCP_AUSTRALIA_SOUTHEAST1
            - GCP_NORTHAMERICA_NORTHEAST1
            - GCP_EUROPE_WEST2
            - GCP_ASIA_SOUTHEAST1
            - AWS_US_EAST_1
            - AWS_US_EAST_2
            - AWS_US_WEST_2
            - AWS_AP_SOUTHEAST_2
            - AWS_EU_CENTRAL_1
            - AWS_EU_WEST_1
            - ' AWS_EU_WEST_2'
            - AZURE_EASTUS2
            - AZURE_AUSTRALIAEAST
            - GCP_ASIA_SOUTH1
        setup_status:
          type: string
          description: Destination setup status
        group_id:
          type: string
          description: The unique identifier for the group within the Fivetran system.
          example: String
        time_zone_offset:
          type: string
          description: Determines the time zone for the Fivetran sync schedule.
          example: 'integer: -11, 10 ... ,0 , ... +11, +12'
        setup_tests:
          type: array
          description: Setup tests results for this destination
          items:
            $ref: '#/components/schemas/SetupTestResultResponse'
      discriminator:
        propertyName: service
        mapping:
          aurora_postgres_warehouse: '#/components/schemas/aurora_postgres_warehouse_DestinationResponse'
          aurora_warehouse: '#/components/schemas/aurora_warehouse_DestinationResponse'
          azure_postgres_warehouse: '#/components/schemas/azure_postgres_warehouse_DestinationResponse'
          azure_sql_data_warehouse: '#/components/schemas/azure_sql_data_warehouse_DestinationResponse'
          azure_sql_database: '#/components/schemas/azure_sql_database_DestinationResponse'
          azure_sql_managed_db_warehouse: '#/components/schemas/azure_sql_managed_db_warehouse_DestinationResponse'
          big_query: '#/components/schemas/big_query_DestinationResponse'
          databricks: '#/components/schemas/databricks_DestinationResponse'
          managed_big_query: '#/components/schemas/managed_big_query_DestinationResponse'
          maria_rds_warehouse: '#/components/schemas/maria_rds_warehouse_DestinationResponse'
          maria_warehouse: '#/components/schemas/maria_warehouse_DestinationResponse'
          mysql_rds_warehouse: '#/components/schemas/mysql_rds_warehouse_DestinationResponse'
          mysql_warehouse: '#/components/schemas/mysql_warehouse_DestinationResponse'
          panoply: '#/components/schemas/panoply_DestinationResponse'
          periscope_warehouse: '#/components/schemas/periscope_warehouse_DestinationResponse'
          postgres_gcp_warehouse: '#/components/schemas/postgres_gcp_warehouse_DestinationResponse'
          postgres_rds_warehouse: '#/components/schemas/postgres_rds_warehouse_DestinationResponse'
          postgres_warehouse: '#/components/schemas/postgres_warehouse_DestinationResponse'
          redshift: '#/components/schemas/redshift_DestinationResponse'
          snowflake: '#/components/schemas/snowflake_DestinationResponse'
          sql_server_rds_warehouse: '#/components/schemas/sql_server_rds_warehouse_DestinationResponse'
          sql_server_warehouse: '#/components/schemas/sql_server_warehouse_DestinationResponse'
    SetupTestResultResponse:
      type: object
      properties:
        title:
          type: string
          description: Setup test title.
        status:
          type: string
          description: 'The current state of the connector. '
        message:
          type: string
          description: Setup test message.
        details:
          type: object
          description: Setup test details.
    RunSetupTestsRequest:
      type: object
      properties:
        trust_certificates:
          type: boolean
          description: 'Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).'
        trust_fingerprints:
          type: boolean
          description: 'Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).'
    UpdateDestinationRequest:
      type: object
      properties:
        region:
          type: string
          description: Data processing location. This is where Fivetran will operate and run computation on data.
          example: '>- optional_US_by_default: US, EU, APAC (Australia), UK, CANADA, SINGAPORE'
          enum:
            - GCP_US_EAST4
            - GCP_US_WEST1
            - GCP_EUROPE_WEST3
            - GCP_AUSTRALIA_SOUTHEAST1
            - GCP_NORTHAMERICA_NORTHEAST1
            - GCP_EUROPE_WEST2
            - GCP_ASIA_SOUTHEAST1
            - AWS_US_EAST_1
            - AWS_US_EAST_2
            - AWS_US_WEST_2
            - AWS_AP_SOUTHEAST_2
            - AWS_EU_CENTRAL_1
            - AWS_EU_WEST_1
            - ' AWS_EU_WEST_2'
            - AZURE_EASTUS2
            - AZURE_AUSTRALIAEAST
            - GCP_ASIA_SOUTH1
        time_zone_offset:
          type: string
          description: Determines the time zone for the Fivetran sync schedule.
          example: 'integer: -11, 10 ... ,0 , ... +11, +12'
        trust_certificates:
          type: boolean
          description: 'Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).'
        trust_fingerprints:
          type: boolean
          description: 'Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).'
        run_setup_tests:
          type: boolean
          description: Specifies whether setup tests should be run automatically.
          example: true
        config:
          description: 'The connector setup configuration. Check possible config formats in [create method](/openapi/reference/v1/operation/create_destination/)'
  responses: {}
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  x-stackQL-resources:
    destinations:
      id: fivetran.destinations.destinations
      name: destinations
      title: Destinations
      methods:
        create_destination:
          operation:
            $ref: '#/paths/~1v1~1destinations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        run_destination_setup_tests:
          operation:
            $ref: '#/paths/~1v1~1destinations~1{destinationId}~1test/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        destination_details:
          operation:
            $ref: '#/paths/~1v1~1destinations~1{destinationId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _destination_details:
          operation:
            $ref: '#/paths/~1v1~1destinations~1{destinationId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_destination:
          operation:
            $ref: '#/paths/~1v1~1destinations~1{destinationId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_destination:
          operation:
            $ref: '#/paths/~1v1~1destinations~1{destinationId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/destination_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/create_destination'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/destinations/methods/delete_destination'
paths:
  /v1/destinations:
    post:
      tags:
        - Destination Management
      summary: Create destination
      description: Creates a new destination within a specified group in your Fivetran account.
      operationId: create_destination
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDestinationRequest'
            examples:
              create_request:
                value:
                  group_id: target_group_id
                  service: snowflake
                  region: GCP_US_EAST4
                  time_zone_offset: '-5'
                  config:
                    host: your-account.snowflakecomputing.com
                    port: 443
                    database: fivetran
                    auth: PASSWORD
                    user: fivetran_user
                    password: '123456'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/DestinationResponse'
                type: object
              examples:
                create_successful_response:
                  value:
                    code: Success
                    message: Destination has been created
                    data:
                      id: decent_dropsy
                      group_id: decent_dropsy
                      service: snowflake
                      region: GCP_US_EAST4
                      time_zone_offset: '-5'
                      setup_status: connected
                      setup_tests:
                        - title: Host Connection
                          status: PASSED
                          message: ''
                        - title: Database Connection
                          status: PASSED
                          message: ''
                        - title: Permission Test
                          status: PASSED
                          message: ''
                      config:
                        host: your-account.snowflakecomputing.com
                        port: 443
                        database: fivetran
                        auth: PASSWORD
                        user: fivetran_user
                        password: '******'
        '400':
          description: Bad request
        '500':
          description: Internal error
          content:
            application/json:
              examples:
                invalid_input_group_id:
                  value:
                    code: InvalidInput
                    message: Field 'group_id' is required
                invalid_input_service:
                  value:
                    code: InvalidInput
                    message: Field 'service' is required
  '/v1/destinations/{destinationId}/test':
    post:
      tags:
        - Destination Management
      summary: Run Destination Setup Tests
      description: Runs the setup tests for an existing destination within your Fivetran account.
      operationId: run_destination_setup_tests
      parameters:
        - name: destinationId
          in: path
          description: The unique identifier for the destination within your Fivetran account.
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunSetupTestsRequest'
            examples:
              run_setup_tests_request:
                value:
                  trust_certificates: true
                  trust_fingerprints: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/DestinationResponse'
                type: object
              examples:
                run_setup_tests_response:
                  value:
                    code: Success
                    message: Setup tests have been completed
                    data:
                      id: destination_id
                      group_id: group_id
                      service: postgres_rds_warehouse
                      region: GCP_US_EAST4
                      time_zone_offset: '-8'
                      setup_status: incomplete
                      setup_tests:
                        - title: Connecting to SSH tunnel
                          status: FAILED
                          message: Auth fail
                      config:
                        public_key: ssh-rsa ... fivetran user key
                        database: database_name
                        password: '******'
                        tunnel_port: '22'
                        port: '5432'
                        host: test.host.com
                        tunnel_host: test.tunnel.host.com
                        user: user_name
                        connection_method: SshTunnel
                        tunnel_user: tunnel_user_name
        '404':
          description: Not found error
  '/v1/destinations/{destinationId}':
    get:
      tags:
        - Destination Management
      summary: Retrieve Destination Details
      description: Returns a destination object if a valid identifier was provided.
      operationId: destination_details
      parameters:
        - name: destinationId
          in: path
          description: The unique identifier for the destination within your Fivetran account.
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/DestinationResponse'
                type: object
              examples:
                get_response:
                  value:
                    code: Success
                    data:
                      id: decent_dropsy
                      group_id: decent_dropsy
                      service: snowflake
                      region: GCP_US_EAST4
                      time_zone_offset: '-5'
                      setup_status: connected
                      config:
                        host: your-account.snowflakecomputing.com
                        port: 443
                        database: fivetran
                        auth: PASSWORD
                        user: fivetran_user
                        password: '******'
        '404':
          description: Not found error
    delete:
      tags:
        - Destination Management
      summary: Delete a destination
      description: Deletes a destination from your Fivetran account.
      operationId: delete_destination
      parameters:
        - name: destinationId
          in: path
          description: The unique identifier for the destination within your Fivetran account.
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
              examples:
                delete_response:
                  value:
                    code: Success
                    message: Destination with id 'destination_id' has been deleted
        '404':
          description: Not found error
        '409':
          description: Conflict error
    patch:
      tags:
        - Destination Management
      summary: Modify a Destination
      description: Updates information for an existing destination within your Fivetran account.
      operationId: modify_destination
      parameters:
        - name: destinationId
          in: path
          description: The unique identifier for the destination within your Fivetran account.
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestinationRequest'
            examples:
              update_request:
                value:
                  region: GCP_AUSTRALIA_SOUTHEAST1
                  time_zone_offset: 10
                  config:
                    host: your-account.snowflakecomputing.com
                    port: 1433
                    database: fivetran
                    auth: PASSWORD
                    user: fivetran_user
                    password: '123456'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/DestinationResponse'
                type: object
              examples:
                update_successful_response:
                  value:
                    code: Success
                    message: Destination has been updated
                    data:
                      id: decent_dropsy
                      group_id: decent_dropsy
                      service: snowflake
                      region: GCP_AUSTRALIA_SOUTHEAST1
                      time_zone_offset: 10
                      setup_status: connected
                      setup_tests:
                        - title: Host Connection
                          status: PASSED
                          message: ''
                        - title: Database Connection
                          status: PASSED
                          message: ''
                        - title: Permission Test
                          status: PASSED
                          message: ''
                      config:
                        host: your-account.snowflakecomputing.com
                        port: 1433
                        database: fivetran
                        auth: PASSWORD
                        user: fivetran_user
                        password: '******'
        '404':
          description: Not found error
