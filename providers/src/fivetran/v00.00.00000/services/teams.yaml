openapi: 3.0.1
servers:
  - url: 'https://api.fivetran.com'
    variables: {}
info:
  title: OpenAPI Definition - teams
  description: Team Management
  version: v1
security:
  - basicAuth: []
components:
  schemas:
    MembershipResponse:
      type: object
      properties:
        id:
          type: string
          description: The membership entity unique identifier
        role:
          type: string
          description: The role the user has within the entity
        created_at:
          type: string
          description: The date and time the membership was created
          format: date-time
    MembershipRequest:
      required:
        - id
        - role
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the user within the Fivetran system.
        role:
          type: string
          description: 'The role that you would like to assign to the user '
    TeamMembershipResponse:
      type: object
      properties:
        user_id:
          type: string
          description: The unique identifier of user
        role:
          type: string
          description: The user's role within the team
    UpdateMembershipRequest:
      required:
        - role
      type: object
      properties:
        role:
          type: string
          description: 'The role that you would like to assign to the user '
    TeamResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the team within your account
        name:
          type: string
          description: The name of the team within your account
        description:
          type: string
          description: The description of the team within your account
        role:
          type: string
          description: The account role of the team
    TeamRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the team within your account
        description:
          type: string
          description: The description of the team within your account
        role:
          type: string
          description: The account role of the team
    TeamMembershipRequest:
      type: object
      properties:
        user_id:
          type: string
          description: The unique identifier of user
        role:
          type: string
          description: The user's role within the team
  responses: {}
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  x-stackQL-resources:
    connectors:
      id: fivetran.teams.connectors
      name: connectors
      title: Connectors
      methods:
        get_team_memberships_in_connectors:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1connectors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _get_team_memberships_in_connectors:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1connectors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_team_membership_in_connector:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1connectors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_team_membership_in_connector:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1connectors~1{connectorId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_team_membership_in_connector:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1connectors~1{connectorId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team_membership_in_connector:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1connectors~1{connectorId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_team_membership_in_connector:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1connectors~1{connectorId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/get_team_memberships_in_connectors'
          - $ref: '#/components/x-stackQL-resources/connectors/methods/get_team_membership_in_connector'
        insert:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/add_team_membership_in_connector'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/delete_team_membership_in_connector'
    users:
      id: fivetran.teams.users
      name: users
      title: Users
      methods:
        get_user_in_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1users~1{userId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_user_in_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1users~1{userId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user_from_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1users~1{userId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_user_membership:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1users~1{userId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_users_in_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _list_users_in_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_user_to_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get_user_in_team'
          - $ref: '#/components/x-stackQL-resources/users/methods/list_users_in_team'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/add_user_to_team'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete_user_from_team'
    teams:
      id: fivetran.teams.teams
      name: teams
      title: Teams
      methods:
        team_details:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _team_details:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_team:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_all_teams:
          operation:
            $ref: '#/paths/~1v1~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _list_all_teams:
          operation:
            $ref: '#/paths/~1v1~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_team:
          operation:
            $ref: '#/paths/~1v1~1teams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/teams/methods/team_details'
          - $ref: '#/components/x-stackQL-resources/teams/methods/list_all_teams'
        insert:
          - $ref: '#/components/x-stackQL-resources/teams/methods/create_team'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/teams/methods/delete_team'
    role:
      id: fivetran.teams.role
      name: role
      title: Role
      methods:
        delete_team_membership_in_account:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1role/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/role/methods/delete_team_membership_in_account'
    groups:
      id: fivetran.teams.groups
      name: groups
      title: Groups
      methods:
        get_team_memberships_in_groups:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _get_team_memberships_in_groups:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_team_membership_in_group:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_team_membership_in_group:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1groups~1{groupId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_team_membership_in_group:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1groups~1{groupId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team_membership_in_group:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1groups~1{groupId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_team_membership_in_group:
          operation:
            $ref: '#/paths/~1v1~1teams~1{teamId}~1groups~1{groupId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get_team_memberships_in_groups'
          - $ref: '#/components/x-stackQL-resources/groups/methods/get_team_membership_in_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/add_team_membership_in_group'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete_team_membership_in_group'
paths:
  '/v1/teams/{teamId}/connectors':
    get:
      tags:
        - Team Management
      summary: List all connector memberships
      description: Returns connector memberships within a team.
      operationId: get_team_memberships_in_connectors
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/MembershipResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
    post:
      tags:
        - Team Management
      summary: Add connector membership
      description: Adds a connector role within a team
      operationId: add_team_membership_in_connector
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/MembershipResponse'
                type: object
  '/v1/teams/{teamId}/users/{userId}':
    get:
      tags:
        - Team Management
      summary: Retrieve user membership in a team
      description: Returns the user role a user has within a team
      operationId: get_user_in_team
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: The unique identifier for the user within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/TeamMembershipResponse'
                type: object
    delete:
      tags:
        - Team Management
      summary: Delete a user from a team
      description: Removes a user from a team
      operationId: delete_user_from_team
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: The unique identifier for the user within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
    patch:
      tags:
        - Team Management
      summary: Modify a user membership
      description: Updates a user role within a team in your Fivetran account
      operationId: update_user_membership
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: userId
          in: path
          description: The unique identifier for the user within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMembershipRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
  '/v1/teams/{teamId}':
    get:
      tags:
        - Team Management
      summary: Retrieve team details
      description: Returns information for a given team within your Fivetran account
      operationId: team_details
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/TeamResponse'
                type: object
    delete:
      tags:
        - Team Management
      summary: Delete a team
      description: Deletes a team from your Fivetran account
      operationId: delete_team
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
    patch:
      tags:
        - Team Management
      summary: Modify a team
      description: Updates information for an existing team within your Fivetran account
      operationId: modify_team
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/TeamResponse'
                type: object
  '/v1/teams/{teamId}/role':
    delete:
      tags:
        - Team Management
      summary: Delete team role in account
      description: Removes a team role within your Fivetran account
      operationId: delete_team_membership_in_account
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
  '/v1/teams/{teamId}/groups':
    get:
      tags:
        - Team Management
      summary: List all group memberships
      description: Returns a group membership within a team
      operationId: get_team_memberships_in_groups
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/MembershipResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
    post:
      tags:
        - Team Management
      summary: Add group membership
      description: Adds a group membership in a team
      operationId: add_team_membership_in_group
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipRequest'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/MembershipResponse'
                type: object
  '/v1/teams/{teamId}/groups/{groupId}':
    get:
      tags:
        - Team Management
      summary: Retrieve group membership
      description: Returns a group membership within a team.
      operationId: get_team_membership_in_group
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          description: The unique identifier for the group within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/MembershipResponse'
                type: object
    delete:
      tags:
        - Team Management
      summary: Delete group membership
      description: Removes group membership in a team
      operationId: delete_team_membership_in_group
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          description: The unique identifier for the group within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
    patch:
      tags:
        - Team Management
      summary: Update group membership
      description: Updates group membership in a team
      operationId: update_team_membership_in_group
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          description: The unique identifier for the group within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMembershipRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
  /v1/teams:
    get:
      tags:
        - Team Management
      summary: List all teams
      description: Returns a list of all teams within your Fivetran account
      operationId: list_all_teams
      parameters:
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/TeamResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
    post:
      tags:
        - Team Management
      summary: Create a team
      description: Creates a new team in your Fivetran account
      operationId: create_team
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '201':
          description: default response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/TeamResponse'
                type: object
  '/v1/teams/{teamId}/connectors/{connectorId}':
    get:
      tags:
        - Team Management
      summary: Retrieve connector membership
      description: Returns a connector membership within a team
      operationId: get_team_membership_in_connector
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/MembershipResponse'
                type: object
    delete:
      tags:
        - Team Management
      summary: Delete connector membership
      description: Removes connector membership in a team
      operationId: delete_team_membership_in_connector
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
    patch:
      tags:
        - Team Management
      summary: Update connector membership
      description: Updates connector membership in a team
      operationId: update_team_membership_in_connector
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMembershipRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
  '/v1/teams/{teamId}/users':
    get:
      tags:
        - Team Management
      summary: List all user memberships
      description: Returns a list of users and their roles within a team in your Fivetran account
      operationId: list_users_in_team
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/TeamMembershipResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
    post:
      tags:
        - Team Management
      summary: Add a user to a team
      description: Assigns a user role within a team
      operationId: add_user_to_team
      parameters:
        - name: teamId
          in: path
          description: The unique identifier for the team within the account
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMembershipRequest'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/TeamMembershipResponse'
                type: object
