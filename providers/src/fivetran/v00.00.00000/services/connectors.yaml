openapi: 3.0.1
servers:
  - url: 'https://api.fivetran.com'
    variables: {}
info:
  title: OpenAPI Definition - connectors
  description: Connector Schema Management
  version: v1
security:
  - basicAuth: []
components:
  schemas:
    ColumnUpdateRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: The boolean value specifying whether the sync for the table into the destination is enabled.
        hashed:
          type: boolean
          description: The boolean value specifying whether a column should be hashed
    StandardConfigResponse:
      type: object
      properties:
        enable_new_by_default:
          type: boolean
          description: 'The boolean value specifying whether to enable new schemas, tables, and columns by default'
        schemas:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SchemaConfigResponse'
          description: The set of schemas within your connector schema config that are synced into the destination
        schema_change_handling:
          type: string
          description: 'The possible values for the schema_change_handling parameter are as follows: <br /> ALLOW_ALL - all new schemas, tables, and columns which appear in the source after the initial setup are included in syncs <br /> ALLOW_COLUMNS - all new schemas and tables which appear in the source after the initial setup are excluded from syncs, but new columns are included <br /> BLOCK_ALL - all new schemas, tables, and columns which appear in the source after the initial setup are excluded from syncs'
          enum:
            - ALLOW_ALL
            - ALLOW_COLUMNS
            - BLOCK_ALL
    SchemaConfigResponse:
      type: object
      properties:
        name_in_destination:
          type: string
          description: The schema name within your destination in accordance with Fivetran conventional rules
        enabled:
          type: boolean
          description: The boolean value specifying whether the sync for the table into the destination is enabled.
        tables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TableConfigResponse'
          description: The set of tables within your database schema config that are synced into the destination
    TableConfigResponse:
      type: object
      properties:
        sync_mode:
          type: string
          description: This field appears in the response if the connector supports switching sync modes for tables
          enum:
            - SOFT_DELETE
            - HISTORY
            - LIVE
        name_in_destination:
          type: string
          description: The schema name within your destination in accordance with Fivetran conventional rules
        enabled:
          type: boolean
          description: The boolean value specifying whether the sync for the table into the destination is enabled.
        columns:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColumnConfigResponse'
          description: The set of columns within your table schema config that are synced into the destination
        enabled_patch_settings:
          $ref: '#/components/schemas/TableEnabledPatchSettings'
    ColumnConfigResponse:
      type: object
      properties:
        name_in_destination:
          type: string
          description: The schema name within your destination in accordance with Fivetran conventional rules
        enabled:
          type: boolean
          description: The boolean value specifying whether the sync for the table into the destination is enabled.
        hashed:
          type: boolean
          description: The boolean value specifying whether a column should be hashed
        enabled_patch_settings:
          $ref: '#/components/schemas/ColumnEnabledPatchSettings'
    TableEnabledPatchSettings:
      type: object
      properties:
        allowed:
          type: boolean
          description: The boolean value specifying whether the enabled property can be modified
        reason:
          type: string
          description: The additional message indicating the reason why the enabled property cannot be modified. This field appears in the response only when the reason_code value is OTHER
        reason_code:
          type: string
          description: 'The reason code indicating the reason why the enabled property cannot be modified: <br /> SYSTEM_TABLE - the table is a system table <br /> DELETED - the table was deleted in the source <br /> OTHER - the table was excluded by the system for some reason <br /> This field appears in the response when the allowed property value is FALSE'
          enum:
            - SYSTEM_TABLE
            - DELETED
            - OTHER
    ColumnEnabledPatchSettings:
      type: object
      properties:
        allowed:
          type: boolean
          description: The boolean value specifying whether the enabled property can be modified
        reason:
          type: string
          description: The additional message indicating the reason why the enabled property cannot be modified. This field appears in the response only when the reason_code value is OTHER
        reason_code:
          type: string
          description: 'The reason code indicating the reason why the enabled property cannot be modified: <br /> SYSTEM_TABLE - the table is a system table <br /> DELETED - the table was deleted in the source <br /> OTHER - the table was excluded by the system for some reason <br /> This field appears in the response when the allowed property value is FALSE'
          enum:
            - SYSTEM_COLUMN
            - DELETED
            - OTHER
    ConnectCardConfigRequest:
      type: object
      properties:
        connect_card_config:
          $ref: '#/components/schemas/ConnectCardConfig'
    ConnectorConnectCardResponse:
      type: object
      properties:
        connect_card:
          $ref: '#/components/schemas/ConnectCardResponse'
        connector_id:
          type: string
          description: The connector identifier
        connect_card_config:
          $ref: '#/components/schemas/ConnectCardConfig'
    ConnectCardConfig:
      type: object
      properties:
        redirect_uri:
          type: string
          description: 'The URI on your site we redirect the end user to after successful setup. The URI must start with the `https` or `http` prefix. '
        hide_setup_guide:
          type: boolean
          description: An optional parameter that lets you hide the embedded setup guide in the Connect Card.
    ConnectCardResponse:
      type: object
      properties:
        token:
          type: string
          description: The connect-card auth token
        uri:
          type: string
          description: The Connect Card URI for the user interface
    MetadataResponse:
      type: object
      properties:
        id:
          type: string
          description: The connector type identifier within the Fivetran system
        name:
          type: string
          description: The connector service name within the Fivetran system
        type:
          type: string
          description: The connector service type
          enum:
            - API
            - Dbt
            - Marketing
            - HumanResources
            - Finance
            - Productivity
            - Engineering
            - Support
            - Sales
            - Security
            - SuperConnectorTest
            - Free
            - File
            - Database
            - Events
            - Function
            - BITool
            - Warehouse
            - Log
            - Hvr
        description:
          type: string
          description: The description characterizing the purpose of the connector
        icons:
          type: array
          description: 'The set of additional icon resource URLs in different formats (.svg, .png). Updating this list is not a breaking change. The set of icon URLs or the icons themselves may be changed'
          items:
            type: string
        config:
          type: object
          description: Metadata for configuration fields
        auth:
          type: object
          description: Metadata for authorization fields (optional)
        link_to_erd:
          type: string
          description: The link to the connector ERD (entityâ€“relationship diagram)
        service_status:
          type: string
          enum:
            - development
            - private_preview
            - beta
            - general_availability
            - sunset
        icon_url:
          type: string
          description: The icon resource URL
        link_to_docs:
          type: string
          description: The link to the connector documentation
    StandardConfigUpdateRequest:
      type: object
      properties:
        schemas:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SchemaUpdateRequest'
          description: The set of schemas within your connector schema config that are synced into the destination
        schema_change_handling:
          type: string
          description: 'The possible values for the schema_change_handling parameter are as follows: <br /> ALLOW_ALL - all new schemas, tables, and columns which appear in the source after the initial setup are included in syncs <br /> ALLOW_COLUMNS - all new schemas and tables which appear in the source after the initial setup are excluded from syncs, but new columns are included <br /> BLOCK_ALL - all new schemas, tables, and columns which appear in the source after the initial setup are excluded from syncs'
          enum:
            - ALLOW_ALL
            - ALLOW_COLUMNS
            - BLOCK_ALL
    SchemaUpdateRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: The boolean value specifying whether the sync for the table into the destination is enabled.
        tables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TableUpdateRequest'
          description: The set of tables within your database schema config that are synced into the destination
    TableUpdateRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: The boolean value specifying whether the sync for the table into the destination is enabled.
        columns:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColumnUpdateRequest'
          description: The set of columns within your table schema config that are synced into the destination
        sync_mode:
          type: string
          description: This field appears in the response if the connector supports switching sync modes for tables
          enum:
            - SOFT_DELETE
            - HISTORY
            - LIVE
    ResyncConnectorRequest:
      type: object
      properties:
        scope:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
          description: 'A map containing an array of tables to re-sync for each schema, must be non-empty. The parameter is optional'
    RunSetupTestsRequest:
      type: object
      properties:
        trust_certificates:
          type: boolean
          description: 'Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).'
        trust_fingerprints:
          type: boolean
          description: 'Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).'
    ConnectorResponseV1:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the connector within the Fivetran system
        service:
          type: string
          description: The connector type name within the Fivetran system
        schema:
          type: string
          description: The name used both as the connector's name within the Fivetran system and as the source schema's name within your destination
        paused:
          type: boolean
          description: Specifies whether the connector is paused
        status:
          $ref: '#/components/schemas/ConnectorStatusResponse'
        daily_sync_time:
          type: string
          description: The connector daily sync start time that we return only when the sync frequency is set to 1440 (which means 24 hours) and the daily_sync_time parameter was set using the Create a Connector or Modify a Connector request
        succeeded_at:
          type: string
          description: The timestamp of the time the connector sync succeeded last time
          format: date-time
        connect_card:
          $ref: '#/components/schemas/ConnectCardResponse'
        sync_frequency:
          type: integer
          description: The connector sync frequency in minutes
          format: int32
        pause_after_trial:
          type: boolean
          description: Specifies whether the connector should be paused after the free trial period has ended
        group_id:
          type: string
          description: The unique identifier for the group within the Fivetran system
        connected_by:
          type: string
          description: The unique identifier of the user who has created the connector in your account
        setup_tests:
          type: array
          description: Setup tests results for this connector
          items:
            $ref: '#/components/schemas/SetupTestResultResponse'
        source_sync_details:
          type: object
          description: The additional information about the connector's state. The format of this parameter is specific for each connector type
        service_version:
          type: integer
          description: The connector type version within the Fivetran system
          format: int32
        created_at:
          type: string
          description: The timestamp of the time the connector was created in your account
          format: date-time
        failed_at:
          type: string
          description: The timestamp of the time the connector sync failed last time
          format: date-time
        schedule_type:
          type: string
          description: 'The connector schedule configuration type. Supported values: auto, manual'
        connect_card_config:
          $ref: '#/components/schemas/ConnectCardConfig'
      discriminator:
        propertyName: service
        mapping:
          activecampaign: '#/components/schemas/activecampaign_ConnectorResponseV1'
          adjust: '#/components/schemas/adjust_ConnectorResponseV1'
          adobe_analytics: '#/components/schemas/adobe_analytics_ConnectorResponseV1'
          adobe_analytics_data_feed: '#/components/schemas/adobe_analytics_data_feed_ConnectorResponseV1'
          adp_workforce_now: '#/components/schemas/adp_workforce_now_ConnectorResponseV1'
          adroll: '#/components/schemas/adroll_ConnectorResponseV1'
          airtable: '#/components/schemas/airtable_ConnectorResponseV1'
          amazon_ads: '#/components/schemas/amazon_ads_ConnectorResponseV1'
          amplitude: '#/components/schemas/amplitude_ConnectorResponseV1'
          anaplan: '#/components/schemas/anaplan_ConnectorResponseV1'
          apache_kafka: '#/components/schemas/apache_kafka_ConnectorResponseV1'
          apple_search_ads: '#/components/schemas/apple_search_ads_ConnectorResponseV1'
          appsflyer: '#/components/schemas/appsflyer_ConnectorResponseV1'
          asana: '#/components/schemas/asana_ConnectorResponseV1'
          aurora: '#/components/schemas/aurora_ConnectorResponseV1'
          aurora_postgres: '#/components/schemas/aurora_postgres_ConnectorResponseV1'
          aws_cloudtrail: '#/components/schemas/aws_cloudtrail_ConnectorResponseV1'
          aws_inventory: '#/components/schemas/aws_inventory_ConnectorResponseV1'
          aws_lambda: '#/components/schemas/aws_lambda_ConnectorResponseV1'
          aws_msk: '#/components/schemas/aws_msk_ConnectorResponseV1'
          azure_blob_storage: '#/components/schemas/azure_blob_storage_ConnectorResponseV1'
          azure_event_hub: '#/components/schemas/azure_event_hub_ConnectorResponseV1'
          azure_function: '#/components/schemas/azure_function_ConnectorResponseV1'
          azure_postgres: '#/components/schemas/azure_postgres_ConnectorResponseV1'
          azure_service_bus: '#/components/schemas/azure_service_bus_ConnectorResponseV1'
          azure_sql_db: '#/components/schemas/azure_sql_db_ConnectorResponseV1'
          azure_sql_managed_db: '#/components/schemas/azure_sql_managed_db_ConnectorResponseV1'
          bamboohr: '#/components/schemas/bamboohr_ConnectorResponseV1'
          bingads: '#/components/schemas/bingads_ConnectorResponseV1'
          box: '#/components/schemas/box_ConnectorResponseV1'
          braintree: '#/components/schemas/braintree_ConnectorResponseV1'
          braintree_sandbox: '#/components/schemas/braintree_sandbox_ConnectorResponseV1'
          branch: '#/components/schemas/branch_ConnectorResponseV1'
          braze: '#/components/schemas/braze_ConnectorResponseV1'
          cloudfront: '#/components/schemas/cloudfront_ConnectorResponseV1'
          concur: '#/components/schemas/concur_ConnectorResponseV1'
          confluent_cloud: '#/components/schemas/confluent_cloud_ConnectorResponseV1'
          cosmos: '#/components/schemas/cosmos_ConnectorResponseV1'
          coupa: '#/components/schemas/coupa_ConnectorResponseV1'
          criteo: '#/components/schemas/criteo_ConnectorResponseV1'
          crossbeam: '#/components/schemas/crossbeam_ConnectorResponseV1'
          db2i_hva: '#/components/schemas/db2i_hva_ConnectorResponseV1'
          delighted: '#/components/schemas/delighted_ConnectorResponseV1'
          documentdb: '#/components/schemas/documentdb_ConnectorResponseV1'
          double_click_campaign_manager: '#/components/schemas/double_click_campaign_manager_ConnectorResponseV1'
          double_click_publishers: '#/components/schemas/double_click_publishers_ConnectorResponseV1'
          drift: '#/components/schemas/drift_ConnectorResponseV1'
          dropbox: '#/components/schemas/dropbox_ConnectorResponseV1'
          dynamics_365: '#/components/schemas/dynamics_365_ConnectorResponseV1'
          dynamics_365_fo: '#/components/schemas/dynamics_365_fo_ConnectorResponseV1'
          dynamodb: '#/components/schemas/dynamodb_ConnectorResponseV1'
          elastic_cloud: '#/components/schemas/elastic_cloud_ConnectorResponseV1'
          eloqua: '#/components/schemas/eloqua_ConnectorResponseV1'
          email: '#/components/schemas/email_ConnectorResponseV1'
          es_self_hosted: '#/components/schemas/es_self_hosted_ConnectorResponseV1'
          facebook: '#/components/schemas/facebook_ConnectorResponseV1'
          facebook_ad_account: '#/components/schemas/facebook_ad_account_ConnectorResponseV1'
          facebook_ads: '#/components/schemas/facebook_ads_ConnectorResponseV1'
          facebook_pages: '#/components/schemas/facebook_pages_ConnectorResponseV1'
          financial_force: '#/components/schemas/financial_force_ConnectorResponseV1'
          fivetran_log: '#/components/schemas/fivetran_log_ConnectorResponseV1'
          freshdesk: '#/components/schemas/freshdesk_ConnectorResponseV1'
          freshservice: '#/components/schemas/freshservice_ConnectorResponseV1'
          front: '#/components/schemas/front_ConnectorResponseV1'
          ftp: '#/components/schemas/ftp_ConnectorResponseV1'
          gainsight_customer_success: '#/components/schemas/gainsight_customer_success_ConnectorResponseV1'
          gcs: '#/components/schemas/gcs_ConnectorResponseV1'
          github: '#/components/schemas/github_ConnectorResponseV1'
          google_ads: '#/components/schemas/google_ads_ConnectorResponseV1'
          google_analytics: '#/components/schemas/google_analytics_ConnectorResponseV1'
          google_analytics_360: '#/components/schemas/google_analytics_360_ConnectorResponseV1'
          google_analytics_4: '#/components/schemas/google_analytics_4_ConnectorResponseV1'
          google_analytics_4_export: '#/components/schemas/google_analytics_4_export_ConnectorResponseV1'
          google_analytics_mcf: '#/components/schemas/google_analytics_mcf_ConnectorResponseV1'
          google_cloud_function: '#/components/schemas/google_cloud_function_ConnectorResponseV1'
          google_cloud_mysql: '#/components/schemas/google_cloud_mysql_ConnectorResponseV1'
          google_cloud_postgresql: '#/components/schemas/google_cloud_postgresql_ConnectorResponseV1'
          google_cloud_sqlserver: '#/components/schemas/google_cloud_sqlserver_ConnectorResponseV1'
          google_display_and_video_360: '#/components/schemas/google_display_and_video_360_ConnectorResponseV1'
          google_drive: '#/components/schemas/google_drive_ConnectorResponseV1'
          google_play: '#/components/schemas/google_play_ConnectorResponseV1'
          google_search_console: '#/components/schemas/google_search_console_ConnectorResponseV1'
          google_sheets: '#/components/schemas/google_sheets_ConnectorResponseV1'
          greenhouse: '#/components/schemas/greenhouse_ConnectorResponseV1'
          heap: '#/components/schemas/heap_ConnectorResponseV1'
          height: '#/components/schemas/height_ConnectorResponseV1'
          helpscout: '#/components/schemas/helpscout_ConnectorResponseV1'
          heroku_kafka: '#/components/schemas/heroku_kafka_ConnectorResponseV1'
          heroku_postgres: '#/components/schemas/heroku_postgres_ConnectorResponseV1'
          hubspot: '#/components/schemas/hubspot_ConnectorResponseV1'
          instagram_business: '#/components/schemas/instagram_business_ConnectorResponseV1'
          intercom: '#/components/schemas/intercom_ConnectorResponseV1'
          iterable: '#/components/schemas/iterable_ConnectorResponseV1'
          itunes_connect: '#/components/schemas/itunes_connect_ConnectorResponseV1'
          jira: '#/components/schemas/jira_ConnectorResponseV1'
          kinesis: '#/components/schemas/kinesis_ConnectorResponseV1'
          klaviyo: '#/components/schemas/klaviyo_ConnectorResponseV1'
          kustomer: '#/components/schemas/kustomer_ConnectorResponseV1'
          lever: '#/components/schemas/lever_ConnectorResponseV1'
          light_speed_retail: '#/components/schemas/light_speed_retail_ConnectorResponseV1'
          linkedin_ads: '#/components/schemas/linkedin_ads_ConnectorResponseV1'
          linkedin_company_pages: '#/components/schemas/linkedin_company_pages_ConnectorResponseV1'
          magento_mysql: '#/components/schemas/magento_mysql_ConnectorResponseV1'
          magento_mysql_rds: '#/components/schemas/magento_mysql_rds_ConnectorResponseV1'
          mailchimp: '#/components/schemas/mailchimp_ConnectorResponseV1'
          mandrill: '#/components/schemas/mandrill_ConnectorResponseV1'
          maria: '#/components/schemas/maria_ConnectorResponseV1'
          maria_azure: '#/components/schemas/maria_azure_ConnectorResponseV1'
          maria_rds: '#/components/schemas/maria_rds_ConnectorResponseV1'
          marin: '#/components/schemas/marin_ConnectorResponseV1'
          marketo: '#/components/schemas/marketo_ConnectorResponseV1'
          mavenlink: '#/components/schemas/mavenlink_ConnectorResponseV1'
          medallia: '#/components/schemas/medallia_ConnectorResponseV1'
          microsoft_lists: '#/components/schemas/microsoft_lists_ConnectorResponseV1'
          mixpanel: '#/components/schemas/mixpanel_ConnectorResponseV1'
          mongo: '#/components/schemas/mongo_ConnectorResponseV1'
          mongo_sharded: '#/components/schemas/mongo_sharded_ConnectorResponseV1'
          mysql: '#/components/schemas/mysql_ConnectorResponseV1'
          mysql_azure: '#/components/schemas/mysql_azure_ConnectorResponseV1'
          mysql_rds: '#/components/schemas/mysql_rds_ConnectorResponseV1'
          netsuite_suiteanalytics: '#/components/schemas/netsuite_suiteanalytics_ConnectorResponseV1'
          okta: '#/components/schemas/okta_ConnectorResponseV1'
          one_drive: '#/components/schemas/one_drive_ConnectorResponseV1'
          opendistro: '#/components/schemas/opendistro_ConnectorResponseV1'
          opensearch: '#/components/schemas/opensearch_ConnectorResponseV1'
          optimizely: '#/components/schemas/optimizely_ConnectorResponseV1'
          oracle: '#/components/schemas/oracle_ConnectorResponseV1'
          oracle_ebs: '#/components/schemas/oracle_ebs_ConnectorResponseV1'
          oracle_fusion_cloud_apps_crm: '#/components/schemas/oracle_fusion_cloud_apps_crm_ConnectorResponseV1'
          oracle_fusion_cloud_apps_fscm: '#/components/schemas/oracle_fusion_cloud_apps_fscm_ConnectorResponseV1'
          oracle_fusion_cloud_apps_hcm: '#/components/schemas/oracle_fusion_cloud_apps_hcm_ConnectorResponseV1'
          oracle_hva: '#/components/schemas/oracle_hva_ConnectorResponseV1'
          oracle_rac: '#/components/schemas/oracle_rac_ConnectorResponseV1'
          oracle_rds: '#/components/schemas/oracle_rds_ConnectorResponseV1'
          oracle_sap_hva: '#/components/schemas/oracle_sap_hva_ConnectorResponseV1'
          oracle_sap_hva_netweaver: '#/components/schemas/oracle_sap_hva_netweaver_ConnectorResponseV1'
          outbrain: '#/components/schemas/outbrain_ConnectorResponseV1'
          outreach: '#/components/schemas/outreach_ConnectorResponseV1'
          pardot: '#/components/schemas/pardot_ConnectorResponseV1'
          paypal: '#/components/schemas/paypal_ConnectorResponseV1'
          paypal_sandbox: '#/components/schemas/paypal_sandbox_ConnectorResponseV1'
          pendo: '#/components/schemas/pendo_ConnectorResponseV1'
          pinterest_ads: '#/components/schemas/pinterest_ads_ConnectorResponseV1'
          pipedrive: '#/components/schemas/pipedrive_ConnectorResponseV1'
          postgres: '#/components/schemas/postgres_ConnectorResponseV1'
          postgres_rds: '#/components/schemas/postgres_rds_ConnectorResponseV1'
          qualtrics: '#/components/schemas/qualtrics_ConnectorResponseV1'
          quickbooks: '#/components/schemas/quickbooks_ConnectorResponseV1'
          recharge: '#/components/schemas/recharge_ConnectorResponseV1'
          recurly: '#/components/schemas/recurly_ConnectorResponseV1'
          reddit_ads: '#/components/schemas/reddit_ads_ConnectorResponseV1'
          ringcentral: '#/components/schemas/ringcentral_ConnectorResponseV1'
          s3: '#/components/schemas/s3_ConnectorResponseV1'
          sage_intacct: '#/components/schemas/sage_intacct_ConnectorResponseV1'
          sailthru: '#/components/schemas/sailthru_ConnectorResponseV1'
          salesforce: '#/components/schemas/salesforce_ConnectorResponseV1'
          salesforce_commerce_cloud: '#/components/schemas/salesforce_commerce_cloud_ConnectorResponseV1'
          salesforce_marketing_cloud: '#/components/schemas/salesforce_marketing_cloud_ConnectorResponseV1'
          salesforce_sandbox: '#/components/schemas/salesforce_sandbox_ConnectorResponseV1'
          salesloft: '#/components/schemas/salesloft_ConnectorResponseV1'
          sap_business_by_design: '#/components/schemas/sap_business_by_design_ConnectorResponseV1'
          segment: '#/components/schemas/segment_ConnectorResponseV1'
          sendgrid: '#/components/schemas/sendgrid_ConnectorResponseV1'
          servicenow: '#/components/schemas/servicenow_ConnectorResponseV1'
          sftp: '#/components/schemas/sftp_ConnectorResponseV1'
          share_point: '#/components/schemas/share_point_ConnectorResponseV1'
          shopify: '#/components/schemas/shopify_ConnectorResponseV1'
          snapchat_ads: '#/components/schemas/snapchat_ads_ConnectorResponseV1'
          snowflake_db: '#/components/schemas/snowflake_db_ConnectorResponseV1'
          snowplow: '#/components/schemas/snowplow_ConnectorResponseV1'
          splunk: '#/components/schemas/splunk_ConnectorResponseV1'
          sql_server: '#/components/schemas/sql_server_ConnectorResponseV1'
          sql_server_hva: '#/components/schemas/sql_server_hva_ConnectorResponseV1'
          sql_server_rds: '#/components/schemas/sql_server_rds_ConnectorResponseV1'
          square: '#/components/schemas/square_ConnectorResponseV1'
          stripe: '#/components/schemas/stripe_ConnectorResponseV1'
          stripe_test: '#/components/schemas/stripe_test_ConnectorResponseV1'
          survey_monkey: '#/components/schemas/survey_monkey_ConnectorResponseV1'
          taboola: '#/components/schemas/taboola_ConnectorResponseV1'
          tiktok_ads: '#/components/schemas/tiktok_ads_ConnectorResponseV1'
          twilio: '#/components/schemas/twilio_ConnectorResponseV1'
          twitter: '#/components/schemas/twitter_ConnectorResponseV1'
          twitter_ads: '#/components/schemas/twitter_ads_ConnectorResponseV1'
          typeform: '#/components/schemas/typeform_ConnectorResponseV1'
          uservoice: '#/components/schemas/uservoice_ConnectorResponseV1'
          webhooks: '#/components/schemas/webhooks_ConnectorResponseV1'
          woocommerce: '#/components/schemas/woocommerce_ConnectorResponseV1'
          workday: '#/components/schemas/workday_ConnectorResponseV1'
          workday_hcm: '#/components/schemas/workday_hcm_ConnectorResponseV1'
          xero: '#/components/schemas/xero_ConnectorResponseV1'
          yahoo_gemini: '#/components/schemas/yahoo_gemini_ConnectorResponseV1'
          youtube_analytics: '#/components/schemas/youtube_analytics_ConnectorResponseV1'
          zendesk: '#/components/schemas/zendesk_ConnectorResponseV1'
          zendesk_chat: '#/components/schemas/zendesk_chat_ConnectorResponseV1'
          zendesk_sell: '#/components/schemas/zendesk_sell_ConnectorResponseV1'
          zendesk_sunshine: '#/components/schemas/zendesk_sunshine_ConnectorResponseV1'
          zoho_crm: '#/components/schemas/zoho_crm_ConnectorResponseV1'
          zuora: '#/components/schemas/zuora_ConnectorResponseV1'
          zuora_sandbox: '#/components/schemas/zuora_sandbox_ConnectorResponseV1'
    ConnectorStatusResponse:
      type: object
      properties:
        tasks:
          type: array
          description: The collection of tasks for the connector
          items:
            $ref: '#/components/schemas/Alert'
        warnings:
          type: array
          description: The collection of warnings for the connector
          items:
            $ref: '#/components/schemas/Alert'
        schema_status:
          type: string
          description: Schema status
        update_state:
          type: string
          description: 'The current data update state of the connector. The available values are: <br /> - on_schedule - the sync is running smoothly, no delays <br /> - delayed - the data is delayed for a longer time than expected for the update.'
        setup_state:
          type: string
          description: 'The current setup state of the connector. The available values are: <br /> - incomplete - the setup config is incomplete, the setup tests never succeeded <br /> - connected - the connector is properly set up <br /> - broken - the connector setup config is broken.'
        sync_state:
          type: string
          description: 'The current sync state of the connector. The available values are: <br /> - scheduled - the sync is waiting to be run <br /> - syncing - the sync is currently running <br /> - paused - the sync is currently paused <br /> - rescheduled - the sync is waiting until more API calls are available in the source service.'
        is_historical_sync:
          type: boolean
          description: 'The boolean specifying whether the connector should be triggered to re-sync all historical data. If you set this parameter to TRUE, the next scheduled sync will be historical. If the value is FALSE or not specified, the connector will not re-sync historical data. NOTE: When the value is TRUE, only the next scheduled sync will be historical, all subsequent ones will be incremental. This parameter is set to FALSE once the historical sync is completed.'
        rescheduled_for:
          type: string
          format: date-time
    SetupTestResultResponse:
      type: object
      properties:
        title:
          type: string
          description: Setup test title.
        status:
          type: string
          description: 'The current state of the connector. '
        message:
          type: string
          description: Setup test message.
        details:
          type: object
          description: Setup test details.
    Alert:
      type: object
      properties:
        code:
          type: string
          description: Code
        message:
          type: string
          description: Setup test message
    SchemaMetadataResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique schema identifier
        name_in_source:
          type: string
          description: The schema name in the source
        name_in_destination:
          type: string
          description: The schema name in the destination
    TableColumnsConfigResponse:
      type: object
      properties:
        columns:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ColumnConfigResponse'
          description: The set of columns within your table schema config that are synced into the destination
    UpdateConnectorRequest:
      type: object
      properties:
        trust_certificates:
          type: boolean
          description: 'Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).'
        trust_fingerprints:
          type: boolean
          description: 'Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).'
        config:
          description: 'The connector setup configuration. Check possible config formats in [create method](/openapi/reference/v1/operation/create_connector/)'
        auth:
          description: 'The connector authorization settings. Check possible config formats in [create method](/openapi/reference/v1/operation/create_connector/)'
        sync_frequency:
          type: integer
          description: The connector sync frequency in minutes
          format: int32
          enum:
            - '5'
            - '15'
            - '30'
            - '60'
            - '120'
            - '180'
            - '360'
            - '480'
            - '720'
            - '1440'
        daily_sync_time:
          type: string
          description: The connector daily sync start time that we return only when the sync frequency is set to 1440 (which means 24 hours) and the daily_sync_time parameter was set using the Create a Connector or Modify a Connector request
        paused:
          type: boolean
          description: Specifies whether the connector is paused
        paused_after_trial:
          type: boolean
          description: Specifies whether the connector should be paused after the free trial period has ended
          writeOnly: true
        schema_status:
          type: string
          description: Schema status
        is_historical_sync:
          type: boolean
          description: 'The boolean specifying whether the connector should be triggered to re-sync all historical data. If you set this parameter to TRUE, the next scheduled sync will be historical. If the value is FALSE or not specified, the connector will not re-sync historical data. NOTE: When the value is TRUE, only the next scheduled sync will be historical, all subsequent ones will be incremental. This parameter is set to FALSE once the historical sync is completed.'
        schedule_type:
          type: string
          description: 'The connector schedule configuration type. Supported values: auto, manual'
          enum:
            - auto
            - manual
        run_setup_tests:
          type: boolean
          description: Specifies whether the setup tests should be run automatically. The default value is TRUE.
        pause_after_trial:
          type: boolean
          description: Specifies whether the connector should be paused after the free trial period has ended
    NewConnectorRequestV1:
      type: object
      properties:
        group_id:
          type: string
          description: The unique identifier for the group within the Fivetran system
        service:
          type: string
          description: The connector type name within the Fivetran system
        trust_certificates:
          type: boolean
          description: 'Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).'
        trust_fingerprints:
          type: boolean
          description: 'Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not trusted automatically, it has to be approved with [Certificates Management API Approve a destination fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).'
        run_setup_tests:
          type: boolean
          description: Specifies whether the setup tests should be run automatically. The default value is TRUE.
        paused:
          type: boolean
          description: Specifies whether the connector is paused
        pause_after_trial:
          type: boolean
          description: Specifies whether the connector should be paused after the free trial period has ended
        sync_frequency:
          type: integer
          description: The connector sync frequency in minutes
          format: int32
          enum:
            - '5'
            - '15'
            - '30'
            - '60'
            - '120'
            - '180'
            - '360'
            - '480'
            - '720'
            - '1440'
        daily_sync_time:
          type: string
          description: 'The optional parameter that defines the sync start time when the sync frequency is already set or being set by the current request to 1440. It can be specified in one hour increments starting from 00:00 to 23:00. If not specified, we will use [the baseline sync start time](https://fivetran.com/docs/getting-started/syncoverview#syncfrequencyandscheduling). This parameter has no effect on the [0 to 60 minutes offset](https://fivetran.com/docs/getting-started/syncoverview#syncstarttimesandoffsets) used to determine the actual sync start time'
        schedule_type:
          type: string
        connect_card_config:
          $ref: '#/components/schemas/ConnectCardConfig'
      discriminator:
        propertyName: service
        mapping:
          activecampaign: '#/components/schemas/activecampaign_NewConnectorRequestV1'
          adjust: '#/components/schemas/adjust_NewConnectorRequestV1'
          adobe_analytics: '#/components/schemas/adobe_analytics_NewConnectorRequestV1'
          adobe_analytics_data_feed: '#/components/schemas/adobe_analytics_data_feed_NewConnectorRequestV1'
          adp_workforce_now: '#/components/schemas/adp_workforce_now_NewConnectorRequestV1'
          adroll: '#/components/schemas/adroll_NewConnectorRequestV1'
          airtable: '#/components/schemas/airtable_NewConnectorRequestV1'
          amazon_ads: '#/components/schemas/amazon_ads_NewConnectorRequestV1'
          amplitude: '#/components/schemas/amplitude_NewConnectorRequestV1'
          anaplan: '#/components/schemas/anaplan_NewConnectorRequestV1'
          apache_kafka: '#/components/schemas/apache_kafka_NewConnectorRequestV1'
          apple_search_ads: '#/components/schemas/apple_search_ads_NewConnectorRequestV1'
          appsflyer: '#/components/schemas/appsflyer_NewConnectorRequestV1'
          asana: '#/components/schemas/asana_NewConnectorRequestV1'
          aurora: '#/components/schemas/aurora_NewConnectorRequestV1'
          aurora_postgres: '#/components/schemas/aurora_postgres_NewConnectorRequestV1'
          aws_cloudtrail: '#/components/schemas/aws_cloudtrail_NewConnectorRequestV1'
          aws_inventory: '#/components/schemas/aws_inventory_NewConnectorRequestV1'
          aws_lambda: '#/components/schemas/aws_lambda_NewConnectorRequestV1'
          aws_msk: '#/components/schemas/aws_msk_NewConnectorRequestV1'
          azure_blob_storage: '#/components/schemas/azure_blob_storage_NewConnectorRequestV1'
          azure_event_hub: '#/components/schemas/azure_event_hub_NewConnectorRequestV1'
          azure_function: '#/components/schemas/azure_function_NewConnectorRequestV1'
          azure_postgres: '#/components/schemas/azure_postgres_NewConnectorRequestV1'
          azure_service_bus: '#/components/schemas/azure_service_bus_NewConnectorRequestV1'
          azure_sql_db: '#/components/schemas/azure_sql_db_NewConnectorRequestV1'
          azure_sql_managed_db: '#/components/schemas/azure_sql_managed_db_NewConnectorRequestV1'
          bamboohr: '#/components/schemas/bamboohr_NewConnectorRequestV1'
          bingads: '#/components/schemas/bingads_NewConnectorRequestV1'
          box: '#/components/schemas/box_NewConnectorRequestV1'
          braintree: '#/components/schemas/braintree_NewConnectorRequestV1'
          braintree_sandbox: '#/components/schemas/braintree_sandbox_NewConnectorRequestV1'
          branch: '#/components/schemas/branch_NewConnectorRequestV1'
          braze: '#/components/schemas/braze_NewConnectorRequestV1'
          cloudfront: '#/components/schemas/cloudfront_NewConnectorRequestV1'
          concur: '#/components/schemas/concur_NewConnectorRequestV1'
          confluent_cloud: '#/components/schemas/confluent_cloud_NewConnectorRequestV1'
          cosmos: '#/components/schemas/cosmos_NewConnectorRequestV1'
          coupa: '#/components/schemas/coupa_NewConnectorRequestV1'
          criteo: '#/components/schemas/criteo_NewConnectorRequestV1'
          crossbeam: '#/components/schemas/crossbeam_NewConnectorRequestV1'
          db2i_hva: '#/components/schemas/db2i_hva_NewConnectorRequestV1'
          delighted: '#/components/schemas/delighted_NewConnectorRequestV1'
          documentdb: '#/components/schemas/documentdb_NewConnectorRequestV1'
          double_click_campaign_manager: '#/components/schemas/double_click_campaign_manager_NewConnectorRequestV1'
          double_click_publishers: '#/components/schemas/double_click_publishers_NewConnectorRequestV1'
          drift: '#/components/schemas/drift_NewConnectorRequestV1'
          dropbox: '#/components/schemas/dropbox_NewConnectorRequestV1'
          dynamics_365: '#/components/schemas/dynamics_365_NewConnectorRequestV1'
          dynamics_365_fo: '#/components/schemas/dynamics_365_fo_NewConnectorRequestV1'
          dynamodb: '#/components/schemas/dynamodb_NewConnectorRequestV1'
          elastic_cloud: '#/components/schemas/elastic_cloud_NewConnectorRequestV1'
          eloqua: '#/components/schemas/eloqua_NewConnectorRequestV1'
          email: '#/components/schemas/email_NewConnectorRequestV1'
          es_self_hosted: '#/components/schemas/es_self_hosted_NewConnectorRequestV1'
          facebook: '#/components/schemas/facebook_NewConnectorRequestV1'
          facebook_ad_account: '#/components/schemas/facebook_ad_account_NewConnectorRequestV1'
          facebook_ads: '#/components/schemas/facebook_ads_NewConnectorRequestV1'
          facebook_pages: '#/components/schemas/facebook_pages_NewConnectorRequestV1'
          financial_force: '#/components/schemas/financial_force_NewConnectorRequestV1'
          fivetran_log: '#/components/schemas/fivetran_log_NewConnectorRequestV1'
          freshdesk: '#/components/schemas/freshdesk_NewConnectorRequestV1'
          freshservice: '#/components/schemas/freshservice_NewConnectorRequestV1'
          front: '#/components/schemas/front_NewConnectorRequestV1'
          ftp: '#/components/schemas/ftp_NewConnectorRequestV1'
          gainsight_customer_success: '#/components/schemas/gainsight_customer_success_NewConnectorRequestV1'
          gcs: '#/components/schemas/gcs_NewConnectorRequestV1'
          github: '#/components/schemas/github_NewConnectorRequestV1'
          google_ads: '#/components/schemas/google_ads_NewConnectorRequestV1'
          google_analytics: '#/components/schemas/google_analytics_NewConnectorRequestV1'
          google_analytics_360: '#/components/schemas/google_analytics_360_NewConnectorRequestV1'
          google_analytics_4: '#/components/schemas/google_analytics_4_NewConnectorRequestV1'
          google_analytics_4_export: '#/components/schemas/google_analytics_4_export_NewConnectorRequestV1'
          google_analytics_mcf: '#/components/schemas/google_analytics_mcf_NewConnectorRequestV1'
          google_cloud_function: '#/components/schemas/google_cloud_function_NewConnectorRequestV1'
          google_cloud_mysql: '#/components/schemas/google_cloud_mysql_NewConnectorRequestV1'
          google_cloud_postgresql: '#/components/schemas/google_cloud_postgresql_NewConnectorRequestV1'
          google_cloud_sqlserver: '#/components/schemas/google_cloud_sqlserver_NewConnectorRequestV1'
          google_display_and_video_360: '#/components/schemas/google_display_and_video_360_NewConnectorRequestV1'
          google_drive: '#/components/schemas/google_drive_NewConnectorRequestV1'
          google_play: '#/components/schemas/google_play_NewConnectorRequestV1'
          google_search_console: '#/components/schemas/google_search_console_NewConnectorRequestV1'
          google_sheets: '#/components/schemas/google_sheets_NewConnectorRequestV1'
          greenhouse: '#/components/schemas/greenhouse_NewConnectorRequestV1'
          heap: '#/components/schemas/heap_NewConnectorRequestV1'
          height: '#/components/schemas/height_NewConnectorRequestV1'
          helpscout: '#/components/schemas/helpscout_NewConnectorRequestV1'
          heroku_kafka: '#/components/schemas/heroku_kafka_NewConnectorRequestV1'
          heroku_postgres: '#/components/schemas/heroku_postgres_NewConnectorRequestV1'
          hubspot: '#/components/schemas/hubspot_NewConnectorRequestV1'
          instagram_business: '#/components/schemas/instagram_business_NewConnectorRequestV1'
          intercom: '#/components/schemas/intercom_NewConnectorRequestV1'
          iterable: '#/components/schemas/iterable_NewConnectorRequestV1'
          itunes_connect: '#/components/schemas/itunes_connect_NewConnectorRequestV1'
          jira: '#/components/schemas/jira_NewConnectorRequestV1'
          kinesis: '#/components/schemas/kinesis_NewConnectorRequestV1'
          klaviyo: '#/components/schemas/klaviyo_NewConnectorRequestV1'
          kustomer: '#/components/schemas/kustomer_NewConnectorRequestV1'
          lever: '#/components/schemas/lever_NewConnectorRequestV1'
          light_speed_retail: '#/components/schemas/light_speed_retail_NewConnectorRequestV1'
          linkedin_ads: '#/components/schemas/linkedin_ads_NewConnectorRequestV1'
          linkedin_company_pages: '#/components/schemas/linkedin_company_pages_NewConnectorRequestV1'
          magento_mysql: '#/components/schemas/magento_mysql_NewConnectorRequestV1'
          magento_mysql_rds: '#/components/schemas/magento_mysql_rds_NewConnectorRequestV1'
          mailchimp: '#/components/schemas/mailchimp_NewConnectorRequestV1'
          mandrill: '#/components/schemas/mandrill_NewConnectorRequestV1'
          maria: '#/components/schemas/maria_NewConnectorRequestV1'
          maria_azure: '#/components/schemas/maria_azure_NewConnectorRequestV1'
          maria_rds: '#/components/schemas/maria_rds_NewConnectorRequestV1'
          marin: '#/components/schemas/marin_NewConnectorRequestV1'
          marketo: '#/components/schemas/marketo_NewConnectorRequestV1'
          mavenlink: '#/components/schemas/mavenlink_NewConnectorRequestV1'
          medallia: '#/components/schemas/medallia_NewConnectorRequestV1'
          microsoft_lists: '#/components/schemas/microsoft_lists_NewConnectorRequestV1'
          mixpanel: '#/components/schemas/mixpanel_NewConnectorRequestV1'
          mongo: '#/components/schemas/mongo_NewConnectorRequestV1'
          mongo_sharded: '#/components/schemas/mongo_sharded_NewConnectorRequestV1'
          mysql: '#/components/schemas/mysql_NewConnectorRequestV1'
          mysql_azure: '#/components/schemas/mysql_azure_NewConnectorRequestV1'
          mysql_rds: '#/components/schemas/mysql_rds_NewConnectorRequestV1'
          netsuite_suiteanalytics: '#/components/schemas/netsuite_suiteanalytics_NewConnectorRequestV1'
          okta: '#/components/schemas/okta_NewConnectorRequestV1'
          one_drive: '#/components/schemas/one_drive_NewConnectorRequestV1'
          opendistro: '#/components/schemas/opendistro_NewConnectorRequestV1'
          opensearch: '#/components/schemas/opensearch_NewConnectorRequestV1'
          optimizely: '#/components/schemas/optimizely_NewConnectorRequestV1'
          oracle: '#/components/schemas/oracle_NewConnectorRequestV1'
          oracle_ebs: '#/components/schemas/oracle_ebs_NewConnectorRequestV1'
          oracle_fusion_cloud_apps_crm: '#/components/schemas/oracle_fusion_cloud_apps_crm_NewConnectorRequestV1'
          oracle_fusion_cloud_apps_fscm: '#/components/schemas/oracle_fusion_cloud_apps_fscm_NewConnectorRequestV1'
          oracle_fusion_cloud_apps_hcm: '#/components/schemas/oracle_fusion_cloud_apps_hcm_NewConnectorRequestV1'
          oracle_hva: '#/components/schemas/oracle_hva_NewConnectorRequestV1'
          oracle_rac: '#/components/schemas/oracle_rac_NewConnectorRequestV1'
          oracle_rds: '#/components/schemas/oracle_rds_NewConnectorRequestV1'
          oracle_sap_hva: '#/components/schemas/oracle_sap_hva_NewConnectorRequestV1'
          oracle_sap_hva_netweaver: '#/components/schemas/oracle_sap_hva_netweaver_NewConnectorRequestV1'
          outbrain: '#/components/schemas/outbrain_NewConnectorRequestV1'
          outreach: '#/components/schemas/outreach_NewConnectorRequestV1'
          pardot: '#/components/schemas/pardot_NewConnectorRequestV1'
          paypal: '#/components/schemas/paypal_NewConnectorRequestV1'
          paypal_sandbox: '#/components/schemas/paypal_sandbox_NewConnectorRequestV1'
          pendo: '#/components/schemas/pendo_NewConnectorRequestV1'
          pinterest_ads: '#/components/schemas/pinterest_ads_NewConnectorRequestV1'
          pipedrive: '#/components/schemas/pipedrive_NewConnectorRequestV1'
          postgres: '#/components/schemas/postgres_NewConnectorRequestV1'
          postgres_rds: '#/components/schemas/postgres_rds_NewConnectorRequestV1'
          qualtrics: '#/components/schemas/qualtrics_NewConnectorRequestV1'
          quickbooks: '#/components/schemas/quickbooks_NewConnectorRequestV1'
          recharge: '#/components/schemas/recharge_NewConnectorRequestV1'
          recurly: '#/components/schemas/recurly_NewConnectorRequestV1'
          reddit_ads: '#/components/schemas/reddit_ads_NewConnectorRequestV1'
          ringcentral: '#/components/schemas/ringcentral_NewConnectorRequestV1'
          s3: '#/components/schemas/s3_NewConnectorRequestV1'
          sage_intacct: '#/components/schemas/sage_intacct_NewConnectorRequestV1'
          sailthru: '#/components/schemas/sailthru_NewConnectorRequestV1'
          salesforce: '#/components/schemas/salesforce_NewConnectorRequestV1'
          salesforce_commerce_cloud: '#/components/schemas/salesforce_commerce_cloud_NewConnectorRequestV1'
          salesforce_marketing_cloud: '#/components/schemas/salesforce_marketing_cloud_NewConnectorRequestV1'
          salesforce_sandbox: '#/components/schemas/salesforce_sandbox_NewConnectorRequestV1'
          salesloft: '#/components/schemas/salesloft_NewConnectorRequestV1'
          sap_business_by_design: '#/components/schemas/sap_business_by_design_NewConnectorRequestV1'
          segment: '#/components/schemas/segment_NewConnectorRequestV1'
          sendgrid: '#/components/schemas/sendgrid_NewConnectorRequestV1'
          servicenow: '#/components/schemas/servicenow_NewConnectorRequestV1'
          sftp: '#/components/schemas/sftp_NewConnectorRequestV1'
          share_point: '#/components/schemas/share_point_NewConnectorRequestV1'
          shopify: '#/components/schemas/shopify_NewConnectorRequestV1'
          snapchat_ads: '#/components/schemas/snapchat_ads_NewConnectorRequestV1'
          snowflake_db: '#/components/schemas/snowflake_db_NewConnectorRequestV1'
          snowplow: '#/components/schemas/snowplow_NewConnectorRequestV1'
          splunk: '#/components/schemas/splunk_NewConnectorRequestV1'
          sql_server: '#/components/schemas/sql_server_NewConnectorRequestV1'
          sql_server_hva: '#/components/schemas/sql_server_hva_NewConnectorRequestV1'
          sql_server_rds: '#/components/schemas/sql_server_rds_NewConnectorRequestV1'
          square: '#/components/schemas/square_NewConnectorRequestV1'
          stripe: '#/components/schemas/stripe_NewConnectorRequestV1'
          stripe_test: '#/components/schemas/stripe_test_NewConnectorRequestV1'
          survey_monkey: '#/components/schemas/survey_monkey_NewConnectorRequestV1'
          taboola: '#/components/schemas/taboola_NewConnectorRequestV1'
          tiktok_ads: '#/components/schemas/tiktok_ads_NewConnectorRequestV1'
          twilio: '#/components/schemas/twilio_NewConnectorRequestV1'
          twitter: '#/components/schemas/twitter_NewConnectorRequestV1'
          twitter_ads: '#/components/schemas/twitter_ads_NewConnectorRequestV1'
          typeform: '#/components/schemas/typeform_NewConnectorRequestV1'
          uservoice: '#/components/schemas/uservoice_NewConnectorRequestV1'
          webhooks: '#/components/schemas/webhooks_NewConnectorRequestV1'
          woocommerce: '#/components/schemas/woocommerce_NewConnectorRequestV1'
          workday: '#/components/schemas/workday_NewConnectorRequestV1'
          workday_hcm: '#/components/schemas/workday_hcm_NewConnectorRequestV1'
          xero: '#/components/schemas/xero_NewConnectorRequestV1'
          yahoo_gemini: '#/components/schemas/yahoo_gemini_NewConnectorRequestV1'
          youtube_analytics: '#/components/schemas/youtube_analytics_NewConnectorRequestV1'
          zendesk: '#/components/schemas/zendesk_NewConnectorRequestV1'
          zendesk_chat: '#/components/schemas/zendesk_chat_NewConnectorRequestV1'
          zendesk_sell: '#/components/schemas/zendesk_sell_NewConnectorRequestV1'
          zendesk_sunshine: '#/components/schemas/zendesk_sunshine_NewConnectorRequestV1'
          zoho_crm: '#/components/schemas/zoho_crm_NewConnectorRequestV1'
          zuora: '#/components/schemas/zuora_NewConnectorRequestV1'
          zuora_sandbox: '#/components/schemas/zuora_sandbox_NewConnectorRequestV1'
    SyncConnectorRequest:
      type: object
      properties:
        force:
          type: boolean
          description: 'If force is true and the connector is currently syncing, it will stop the sync and re-run it. If force is false, the connector will sync only if it isn''t currently syncing. The default value is false'
    ReloadStandardConfigRequest:
      type: object
      properties:
        exclude_mode:
          type: string
          description: Specifies whether all schemas and tables will be enabled or disabled in the standard config
    ColumnMetadataResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique column identifier
        name_in_source:
          type: string
          description: The column name in the source
        type_in_destination:
          type: string
          description: The column type in the destination
        is_foreign_key:
          type: boolean
          description: The boolean specifying whether the column is a foreign key
        is_primary_key:
          type: boolean
          description: The boolean specifying whether the column is a primary key
        type_in_source:
          type: string
          description: The column type in the source
        parent_id:
          type: string
          description: The unique identifier of the table associated with the column
        name_in_destination:
          type: string
          description: The column name in the destination
    TableMetadataResponse:
      type: object
      properties:
        id:
          type: string
          description: The unique table identifier
        name_in_source:
          type: string
          description: The table name in the source
        parent_id:
          type: string
          description: The unique identifier of the schema associated with the table
        name_in_destination:
          type: string
          description: The table name in the destination
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  x-stackQL-resources:
    column_config:
      id: fivetran.connectors.column_config
      name: column_config
      title: Column Config
      methods:
        modify_connector_column_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas~1{schemaName}~1tables~1{tableName}~1columns~1{columnName}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connector_column_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas~1{schema}~1tables~1{table}~1columns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _connector_column_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas~1{schema}~1tables~1{table}~1columns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/column_config/methods/connector_column_config'
        insert: []
        update: []
        delete: []
    connectors:
      id: fivetran.connectors.connectors
      name: connectors
      title: Connectors
      methods:
        connect_card:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1connect-card/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resync_connector:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1resync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run_setup_tests:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1test/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connector_details:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _connector_details:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_connector:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_connector:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_connector:
          operation:
            $ref: '#/paths/~1v1~1connectors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        sync_connector:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1sync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/connector_details'
        insert:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/create_connector'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/delete_connector'
    metadata:
      id: fivetran.connectors.metadata
      name: metadata
      title: Metadata
      methods:
        connectors:
          operation:
            $ref: '#/paths/~1v1~1metadata~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _connectors:
          operation:
            $ref: '#/paths/~1v1~1metadata~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connector_config:
          operation:
            $ref: '#/paths/~1v1~1metadata~1{name}~1{service}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _connector_config:
          operation:
            $ref: '#/paths/~1v1~1metadata~1{name}~1{service}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metadata/methods/connectors'
          - $ref: '#/components/x-stackQL-resources/metadata/methods/connector_config'
        insert: []
        update: []
        delete: []
    schemas:
      id: fivetran.connectors.schemas
      name: schemas
      title: Schemas
      methods:
        connector_schema_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _connector_schema_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_connector_schema_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_connector_database_schema_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas~1{schemaName}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reload_connector_schema_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas~1reload/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schemas/methods/connector_schema_config'
        insert: []
        update: []
        delete: []
    table_config:
      id: fivetran.connectors.table_config
      name: table_config
      title: Table Config
      methods:
        resync_tables:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas~1tables~1resync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modify_connector_table_config:
          operation:
            $ref: '#/paths/~1v1~1connectors~1{connectorId}~1schemas~1{schemaName}~1tables~1{tableName}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    schema_metadata:
      id: fivetran.connectors.schema_metadata
      name: schema_metadata
      title: Schema Metadata
      methods:
        schema_metadata:
          operation:
            $ref: '#/paths/~1v1~1metadata~1connectors~1{connectorId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _schema_metadata:
          operation:
            $ref: '#/paths/~1v1~1metadata~1connectors~1{connectorId}~1schemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schema_metadata/methods/schema_metadata'
        insert: []
        update: []
        delete: []
    column_metadata:
      id: fivetran.connectors.column_metadata
      name: column_metadata
      title: Column Metadata
      methods:
        column_metadata:
          operation:
            $ref: '#/paths/~1v1~1metadata~1connectors~1{connectorId}~1columns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _column_metadata:
          operation:
            $ref: '#/paths/~1v1~1metadata~1connectors~1{connectorId}~1columns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/column_metadata/methods/column_metadata'
        insert: []
        update: []
        delete: []
    table_metadata:
      id: fivetran.connectors.table_metadata
      name: table_metadata
      title: Table Metadata
      methods:
        table_metadata:
          operation:
            $ref: '#/paths/~1v1~1metadata~1connectors~1{connectorId}~1tables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _table_metadata:
          operation:
            $ref: '#/paths/~1v1~1metadata~1connectors~1{connectorId}~1tables/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/table_metadata/methods/table_metadata'
        insert: []
        update: []
        delete: []
paths:
  '/v1/connectors/{connectorId}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}':
    patch:
      tags:
        - Connector Schema Management
      summary: Modify a Connector Column Config
      description: Updates the column config within your table for an existing connector within your Fivetran account
      operationId: modify_connector_column_config
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: schemaName
          in: path
          description: The database schema name within your destination (different from the connector schema)
          required: true
          schema:
            type: string
        - name: tableName
          in: path
          description: The table name within your database schema
          required: true
          schema:
            type: string
        - name: columnName
          in: path
          description: The column name within your table
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnUpdateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/StandardConfigResponse'
                type: object
  '/v1/connectors/{connectorId}/connect-card':
    post:
      tags:
        - Connector Management
      summary: Connect Card
      description: Generates the Connect Card URI for the connector
      operationId: connect_card
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectCardConfigRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/ConnectorConnectCardResponse'
                type: object
  '/v1/metadata/{name}':
    get:
      tags:
        - Connector Management
      summary: Retrieve source metadata
      description: 'Returns all available source types within your Fivetran account. This endpoint makes it easier to display Fivetran connectors within your application because it provides metadata including the proper source name (â€˜Facebook Ad Accountâ€™ instead of facebook_ad_account), the source icon, and links to Fivetran resources. As we update source names and icons, that metadata will automatically update within this endpoint'
      operationId: metadata_connectors
      parameters:
        - name: cursor
          in: query
          description: 'The paging cursor. Read more about [pagination in our documentation](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: 'The number of records to fetch per page, accepts a number in the range 1..1000. The default value is 100'
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/MetadataResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
  '/v1/connectors/{connectorId}/schemas':
    get:
      tags:
        - Connector Schema Management
      summary: Retrieve a Connector Schema Config
      description: Returns the connector schema config for an existing connector within your Fivetran account
      operationId: connector_schema_config
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/StandardConfigResponse'
                type: object
    patch:
      tags:
        - Connector Schema Management
      summary: Modify a Connector Schema Config
      description: Updates the schema config for an existing connector within your Fivetran account (for a single schema for a connector with multiple schemas)
      operationId: modify_connector_schema_config
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandardConfigUpdateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/StandardConfigResponse'
                type: object
  '/v1/connectors/{connectorId}/resync':
    post:
      tags:
        - Connector Management
      summary: Re-sync Connector Data (Historical Sync)
      description: 'Triggers a full historical sync of a connector or multiple schema tables within a connector. If the connector is paused, the table sync will be scheduled to be performed when the connector is re-enabled. If there is a data sync already in progress, we will try to complete it. If it fails, the request will be declined and the HTTP 409 Conflict error will be returned.'
      operationId: resync_connector
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResyncConnectorRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
        '404':
          description: Not found error
  '/v1/connectors/{connectorId}/test':
    post:
      tags:
        - Connector Management
      summary: Run connector setup tests
      description: Runs the setup tests for an existing connector within your Fivetran account.
      operationId: run_setup_tests
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunSetupTestsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/ConnectorResponseV1'
                type: object
        '404':
          description: Not found error
  '/v1/connectors/{connectorId}/schemas/tables/resync':
    post:
      tags:
        - Connector Schema Management
      summary: Re-sync Connector Table Data
      description: Triggers a historical sync of all data for multiple schema tables within a connector. This action does not override the standard sync frequency you defined in the Fivetran dashboard.
      operationId: resync_tables
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                uniqueItems: true
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
  '/v1/metadata/connectors/{connectorId}/schemas':
    get:
      tags:
        - Metadata Management
      summary: Retrieve schema metadata
      description: Returns schema-level metadata for an existing connector within your Fivetran account.
      operationId: schema_metadata
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within your Fivetran account
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100.
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/SchemaMetadataResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
  '/v1/connectors/{connectorId}/schemas/{schemaName}':
    patch:
      tags:
        - Connector Schema Management
      summary: Modify a Connector Database Schema Config
      description: Updates the database schema config for an existing connector within your Fivetran account (for a single schema within a connector with multiple schemas)
      operationId: modify_connector_database_schema_config
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: schemaName
          in: path
          description: The database schema name within your destination (different from the connector schema)
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaUpdateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/StandardConfigResponse'
                type: object
  '/v1/connectors/{connectorId}/schemas/{schema}/tables/{table}/columns':
    get:
      tags:
        - Connector Schema Management
      summary: Retrieve Source Table Columns Config
      description: Returns the source table columns config for an existing connector within your Fivetran account
      operationId: connector_column_config
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: schema
          in: path
          description: The database schema name within your destination
          required: true
          schema:
            type: string
        - name: table
          in: path
          description: The table name within your database schema
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/TableColumnsConfigResponse'
                type: object
  '/v1/connectors/{connectorId}':
    get:
      tags:
        - Connector Management
      summary: Retrieve Connector Details
      description: Returns a connector object if a valid identifier was provided
      operationId: connector_details
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/ConnectorResponseV1'
                type: object
    delete:
      tags:
        - Connector Management
      summary: Delete a Connector
      description: Deletes a connector from your Fivetran account.
      operationId: delete_connector
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
        '404':
          description: Not found error
    patch:
      tags:
        - Connector Management
      summary: Modify a Connector
      description: Updates the information for an existing connector within your Fivetran account.
      operationId: modify_connector
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/ConnectorResponseV1'
                type: object
        '404':
          description: Not found error
  /v1/connectors:
    post:
      tags:
        - Connector Management
      summary: Create a Connector
      description: Creates a new connector within a specified group in your Fivetran account. Runs setup tests and returns testing results.
      operationId: create_connector
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConnectorRequestV1'
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/ConnectorResponseV1'
                type: object
        '400':
          description: Bad request
  '/v1/metadata/{name}/{service}':
    get:
      tags:
        - Connector Management
      summary: Retrieve connector configuration metadata
      description: Returns metadata of configuration parameters and authorization parameters for a specified connector type.
      operationId: metadata_connector_config
      parameters:
        - name: service
          in: path
          description: '[The connector type](https://fivetran.com/docs/rest-api/getting-started#commonterms) identifier within the Fivetran system'
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/MetadataResponse'
                type: object
  '/v1/connectors/{connectorId}/sync':
    post:
      tags:
        - Connector Management
      summary: Sync Connector Data
      description: Triggers a data sync for an existing connector within your Fivetran account without waiting for the next scheduled sync. This action does not override the standard sync frequency you defined in the Fivetran dashboard.
      operationId: sync_connector
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json;version=2
            default: application/json;version=2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncConnectorRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                type: object
        '404':
          description: Not found error
  '/v1/connectors/{connectorId}/schemas/reload':
    post:
      tags:
        - Connector Schema Management
      summary: Reload a Connector Schema Config
      description: Reloads the connector schema config for an existing connector within your Fivetran account
      operationId: reload_connector_schema_config
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReloadStandardConfigRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/StandardConfigResponse'
                type: object
  '/v1/metadata/connectors/{connectorId}/columns':
    get:
      tags:
        - Metadata Management
      summary: Retrieve column metadata
      description: Returns column-level metadata for an existing connector within your Fivetran account.
      operationId: column_metadata
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within your Fivetran account
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100.
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/ColumnMetadataResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
  '/v1/metadata/connectors/{connectorId}/tables':
    get:
      tags:
        - Metadata Management
      summary: Retrieve table metadata
      description: Returns table-level metadata for an existing connector within your Fivetran account.
      operationId: table_metadata
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within your Fivetran account
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100.
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/TableMetadataResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
  '/v1/connectors/{connectorId}/schemas/{schemaName}/tables/{tableName}':
    patch:
      tags:
        - Connector Schema Management
      summary: Modify a Connector Table Config
      description: Updates the table config within your database schema for an existing connector within your Fivetran account
      operationId: modify_connector_table_config
      parameters:
        - name: connectorId
          in: path
          description: The unique identifier for the connector within the Fivetran system
          required: true
          schema:
            type: string
        - name: schemaName
          in: path
          description: The database schema name within your destination (different from the connector schema)
          required: true
          schema:
            type: string
        - name: tableName
          in: path
          description: The table name within your database schema
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableUpdateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    $ref: '#/components/schemas/StandardConfigResponse'
                type: object
