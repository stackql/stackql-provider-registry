openapi: 3.0.1
servers:
  - url: 'https://api.fivetran.com'
    variables: {}
info:
  title: OpenAPI Definition - roles
  description: Role Management
  version: v1
security:
  - basicAuth: []
components:
  schemas:
    RoleResponse:
      type: object
      properties:
        name:
          type: string
          description: The role name
        description:
          type: string
          description: The role description
        scope:
          uniqueItems: true
          type: array
          description: Defines the list of resources the role manages
          items:
            type: string
        is_custom:
          type: boolean
          description: Defines whether the role is standard or custom
  responses: {}
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  x-stackQL-resources:
    roles:
      id: fivetran.roles.roles
      name: roles
      title: Roles
      methods:
        list_all_roles:
          operation:
            $ref: '#/paths/~1v1~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data.items
        _list_all_roles:
          operation:
            $ref: '#/paths/~1v1~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_all_roles'
        insert: []
        update: []
        delete: []
paths:
  /v1/roles:
    get:
      tags:
        - Role Management
      summary: List all roles
      description: Returns a list of all predefined and custom roles within your Fivetran account.
      operationId: list_all_roles
      parameters:
        - name: cursor
          in: query
          description: 'Paging cursor, [read more about pagination](https://fivetran.com/docs/rest-api/pagination)'
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of records to fetch per page. Accepts a number in the range 1..1000; the default value is 100.
          required: false
          schema:
            type: integer
            format: int32
        - name: Accept
          in: header
          schema:
            type: string
            example: application/json
            default: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: string
                    description: Response status code
                  message:
                    type: string
                    description: Response status text
                  data:
                    properties:
                      items:
                        type: array
                        description: The collection of return items
                        items:
                          $ref: '#/components/schemas/RoleResponse'
                      nextCursor:
                        type: string
                        description: The value of the cursor parameter for the next page
                    type: object
                type: object
