openapi: 3.0.3
info:
  title: database API
  description: Operations about databases
  version: 1.0.0
paths:
  /organizations/{organizationId}/databases:
    get:
      tags:
        - database
      summary: List KV databases of an organization
      description: >-
        This API returns a list of KV databases belonging to the specified
        organization

        in a pagenated manner.

        The URLs for the next, previous, first, and last page are returned in
        the

        `Link` header of the response, if any.
      operationId: list_kv_databases
      parameters:
        - name: page
          in: query
          description: The page number to return.
          required: false
          schema:
            type: integer
            default: 1
            nullable: true
            minimum: 1
        - name: limit
          in: query
          description: The maximum number of items to return per page.
          required: false
          schema:
            type: integer
            default: 20
            nullable: true
            maximum: 100
            minimum: 1
        - name: q
          in: query
          description: Query by KV database ID
          required: false
          schema:
            type: string
            nullable: true
        - name: sort
          in: query
          description: The field to sort by. Currently only `created_at` is supported.
          required: false
          schema:
            type: string
            nullable: true
        - name: order
          in: query
          description: Sort order, either `asc` or `desc`. Defaults to `asc`.
          required: false
          schema:
            type: string
            nullable: true
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          headers:
            Link:
              schema:
                $ref: '#/components/schemas/PaginationLinkHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KvDatabase'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
    post:
      tags:
        - database
      summary: Create a KV database
      description: |-
        This API allows you to create a new KV database under the specified
        organization. You will then be able to associate the created KV database
        with a new deployment by specifying the KV database ID in the "Create a
        deployment" API call.
      operationId: create_kv_database
      parameters:
        - name: organizationId
          in: path
          description: Organization ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKvDatabaseRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvDatabase'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /databases/{databaseId}:
    patch:
      tags:
        - database
      summary: Update KV database details
      operationId: update_kv_database
      parameters:
        - name: databaseId
          in: path
          description: KV database ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKvDatabaseRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvDatabase'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /databases/{databaseId}/database_backups:
    post:
      tags:
        - databaseBackup
      summary: Enable a database backup
      description: >-
        This API allows you to enable a backup for a KV database. The backup can
        be

        stored in your S3 bucket.


        Currently, only one backup can be enabled per database. When a second
        backup

        is being configured, the API will return a `409 Conflict` error.
      operationId: enable_kv_backup
      parameters:
        - name: databaseId
          in: path
          description: KV database ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableKvDatabaseBackupRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableKvDatabaseBackupResponse'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '409':
          description: >-
            This can happen either when another backup configuration is in
            progress since multiple configurations can't be processed
            simultaneously, or when there is one backup already enabled for the
            database since currently only one backup is supported per database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '500':
          description: Failed to enable a database backup for some reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
    get:
      tags:
        - databaseBackup
      summary: List database backups of a database
      description: |-
        This API returns a list of backups of the specified KV database.

        Note that currently more than one backups are not supported for a single
        database. So this API will return either an empty list or a list with a
        single item.
      operationId: list_kv_backups
      parameters:
        - name: databaseId
          in: path
          description: KV database ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KvDatabaseBackup'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
  /database_backups/{databaseBackupId}:
    get:
      tags:
        - databaseBackup
      summary: Get database backup details
      description: This API returns the details of the specified database backup.
      operationId: get_kv_backup
      parameters:
        - name: databaseBackupId
          in: path
          description: KV Backup ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KvDatabaseBackup'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
    delete:
      tags:
        - databaseBackup
      summary: Disable a database backup
      description: This API allows you to disable a backup for a KV database.
      operationId: disable_kv_backup
      parameters:
        - name: databaseBackupId
          in: path
          description: KV Backup ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableKvDatabaseBackupResponse'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
        '409':
          description: >-
            Another backup configuration is ongoing. Only one can be processed
            simultaneously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBody'
components:
  schemas:
    PaginationLinkHeader:
      type: string
      description: >-
        Pagination links.

        This header provides URLS for the `prev`, `next`, `first`, and `last`
        pages.

        The format conforms to [RFC 8288](https://tools.ietf.org/html/rfc8288).
      example: >-
        <https://api.deno.com/v1/endpoint?page=3>; rel="next",
        <https://api.deno.com/v1/endpoint?page=1>; rel="prev",
        <https://api.deno.com/v1/endpoint?page=1>; rel="first",
        <https://api.deno.com/v1/endpoint?page=50>; rel="last"
    KvDatabase:
      type: object
      required:
        - id
        - organizationId
        - description
        - updatedAt
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: A KV database ID
        organizationId:
          type: string
          format: uuid
          description: An organization ID that this KV database belongs to
        description:
          type: string
          description: A description of this KV database
        updatedAt:
          type: string
          format: date-time
          example: '2021-08-01T00:00:00Z'
        createdAt:
          type: string
          format: date-time
          example: '2021-08-01T00:00:00Z'
      additionalProperties: false
    ErrorBody:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: The error code
        message:
          type: string
          description: The error message
    CreateKvDatabaseRequest:
      type: object
      properties:
        description:
          type: string
          description: >-
            The description of the KV database. If this is `null`, an empty
            string

            will be set.
          example: My KV database
          nullable: true
          maxLength: 1000
      additionalProperties: false
    UpdateKvDatabaseRequest:
      type: object
      properties:
        description:
          type: string
          description: >-
            The description of the KV database to be updated to. If this is
            `null`, no

            update will be made to the KV database description.
          example: My KV database
          nullable: true
          maxLength: 1000
      additionalProperties: false
    EnableKvDatabaseBackupRequest:
      oneOf:
        - type: object
          required:
            - endpoint
            - bucketName
            - bucketRegion
            - accessKeyId
            - secretAccessKey
            - kind
          properties:
            endpoint:
              type: string
              description: |-
                S3 endpoint URL

                Allowed endpoints as of now are:
                - https://s3.us-east-1.amazonaws.com
                - https://s3.us-east-2.amazonaws.com
                - https://s3.us-west-1.amazonaws.com
                - https://s3.us-west-2.amazonaws.com
                - https://s3.us-gov-west-1.amazonaws.com
                - https://s3.us-gov-east-1.amazonaws.com
                - https://s3.ca-central-1.amazonaws.com
                - https://s3.eu-north-1.amazonaws.com
                - https://s3.eu-west-1.amazonaws.com
                - https://s3.eu-west-2.amazonaws.com
                - https://s3.eu-west-3.amazonaws.com
                - https://s3.eu-central-1.amazonaws.com
                - https://s3.eu-south-1.amazonaws.com
                - https://s3.af-south-1.amazonaws.com
                - https://s3.ap-northeast-1.amazonaws.com
                - https://s3.ap-northeast-2.amazonaws.com
                - https://s3.ap-northeast-3.amazonaws.com
                - https://s3.ap-southeast-1.amazonaws.com
                - https://s3.ap-southeast-2.amazonaws.com
                - https://s3.ap-southeast-3.amazonaws.com
                - https://s3.ap-east-1.amazonaws.com
                - https://s3.ap-south-1.amazonaws.com
                - https://s3.sa-east-1.amazonaws.com
                - https://s3.me-south-1.amazonaws.com
                - https://s3.cn-north-1.amazonaws.com
                - https://s3.cn-northwest-1.amazonaws.com
                - https://storage.googleapis.com

                If you want to use a different endpoint, please contact us.
              example: https://s3.us-east-1.amazonaws.com
            bucketName:
              type: string
              description: S3 bucket name
              example: my-bucket
            bucketRegion:
              type: string
              description: S3 bucket region
              example: us-east-1
            accessKeyId:
              type: string
              description: Access key ID
              example: AKIAIOSFODNN7EXAMPLE
            secretAccessKey:
              type: string
              description: Secret access key
              example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
            prefix:
              type: string
              description: Prefix to prepend to all keys when accessing the S3 bucket
              example: backup/
            kind:
              type: string
              enum:
                - s3
      discriminator:
        propertyName: kind
    EnableKvDatabaseBackupResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
    KvDatabaseBackup:
      allOf:
        - $ref: '#/components/schemas/KvDatabaseBackupTarget'
        - type: object
          required:
            - id
            - status
          properties:
            id:
              type: string
              format: uuid
              description: The ID of the backup
            status:
              $ref: '#/components/schemas/KvDatabaseBackupStatus'
    DisableKvDatabaseBackupResponse:
      type: object
    KvDatabaseBackupTarget:
      oneOf:
        - type: object
          required:
            - endpoint
            - bucketName
            - bucketRegion
            - accessKeyId
            - prefix
            - kind
          properties:
            endpoint:
              type: string
              description: S3 endpoint URL
              example: https://s3.us-east-1.amazonaws.com
            bucketName:
              type: string
              description: S3 bucket name
              example: my-bucket
            bucketRegion:
              type: string
              description: S3 bucket region
              example: us-east-1
            accessKeyId:
              type: string
              description: Access key ID
              example: AKIAIOSFODNN7EXAMPLE
            prefix:
              type: string
              description: Prefix to prepend to all keys when accessing the S3 bucket
              example: backup/
            kind:
              type: string
              enum:
                - s3
      discriminator:
        propertyName: kind
    KvDatabaseBackupStatus:
      oneOf:
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              enum:
                - pending
        - type: object
          required:
            - code
          properties:
            code:
              type: string
              enum:
                - active
        - type: object
          description: >-
            An error occurred during the backup operation. One example is when
            the

            provided S3 credentials are not correct.


            If this status is set, the backup has failed permanently and needs
            to be

            reconfigured by deleting and creating a new one using [disable a
            database backup](#delete-/database_backups/-databaseBackupId-)

            and [enable a database
            backup](#post-/databases/-databaseId-/database_backups).
          required:
            - message
            - code
          properties:
            message:
              type: string
              description: The detailed error message
              example: this is an error message.
            code:
              type: string
              enum:
                - failed
      description: The status of a KV database backup.
      example:
        code: active
      discriminator:
        propertyName: code
  x-stackQL-resources:
    databases:
      id: deno.database.databases
      name: databases
      title: Databases
      methods:
        list_kv_databases:
          operation:
            $ref: '#/paths/~1organizations~1{organizationId}~1databases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_kv_database:
          operation:
            $ref: '#/paths/~1organizations~1{organizationId}~1databases/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_kv_database:
          operation:
            $ref: '#/paths/~1databases~1{databaseId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/databases/methods/list_kv_databases
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/databases/methods/create_kv_database
        update:
          - $ref: >-
              #/components/x-stackQL-resources/databases/methods/update_kv_database
        delete: []
        replace: []
    backups:
      id: deno.database.backups
      name: backups
      title: Backups
      methods:
        enable_kv_backup:
          operation:
            $ref: '#/paths/~1databases~1{databaseId}~1database_backups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_kv_backups:
          operation:
            $ref: '#/paths/~1databases~1{databaseId}~1database_backups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_kv_backup:
          operation:
            $ref: '#/paths/~1database_backups~1{databaseBackupId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_kv_backup:
          operation:
            $ref: '#/paths/~1database_backups~1{databaseBackupId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/list_kv_backups'
          - $ref: '#/components/x-stackQL-resources/backups/methods/get_kv_backup'
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://api.deno.com/v1
