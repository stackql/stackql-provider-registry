openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: My Business Verifications API
  description: The My Business Verifications API provides an interface for taking verifications related actions for locations.
  version: v1
  x-discovery-doc-revision: '20230118'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/my-business/
servers:
  - url: https://mybusinessverifications.googleapis.com
components:
  schemas:
    Verification:
      id: Verification
      description: A verification represents a verification attempt on a location.
      type: object
      properties:
        name:
          type: string
          description: Resource name of the verification.
        createTime:
          format: google-datetime
          type: string
          description: The timestamp when the verification is requested.
        method:
          type: string
          description: The method of the verification.
          enumDescriptions:
            - Default value, will result in errors.
            - Send a postcard with a verification PIN to a specific mailing address. The PIN is used to complete verification with Google.
            - Send an email with a verification PIN to a specific email address. The PIN is used to complete verification with Google.
            - Make a phone call with a verification PIN to a specific phone number. The PIN is used to complete verification with Google.
            - Send an SMS with a verification PIN to a specific phone number. The PIN is used to complete verification with Google.
            - Verify the location without additional user action. This option may not be available for all locations.
            - Used for vetted [partners](https://support.google.com/business/answer/7674102). This option may not be available for all locations.
          enum:
            - VERIFICATION_METHOD_UNSPECIFIED
            - ADDRESS
            - EMAIL
            - PHONE_CALL
            - SMS
            - AUTO
            - VETTED_PARTNER
        state:
          enumDescriptions:
            - Default value, will result in errors.
            - The verification is pending.
            - The verification is completed.
            - The verification is failed.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - COMPLETED
            - FAILED
          description: The state of the verification.
          type: string
    ComplyWithGuidelines:
      id: ComplyWithGuidelines
      description: Indicates that the location fails to comply with our [guidelines](https://support.google.com/business/answer/3038177).
      properties:
        recommendationReason:
          enum:
            - RECOMMENDATION_REASON_UNSPECIFIED
            - BUSINESS_LOCATION_SUSPENDED
            - BUSINESS_LOCATION_DISABLED
          enumDescriptions:
            - Not specified.
            - The business location is suspended. To fix this issue, consult the [Help Center article](https://support.google.com/business/answer/4569145).
            - The business location is disabled. To fix this issue, consult the [Help Center article](https://support.google.com/business/answer/9334246).
          type: string
          description: The reason why the location is being recommended to comply with guidelines.
      type: object
    EmailVerificationData:
      description: Display data for verifications through email.
      type: object
      properties:
        domain:
          type: string
          description: Domain name in the email address. e.g. "gmail.com" in foo@gmail.com
        user:
          description: User name in the email address. e.g. "foo" in foo@gmail.com
          type: string
        isUserNameEditable:
          description: Whether client is allowed to provide a different user name.
          type: boolean
      id: EmailVerificationData
    FetchVerificationOptionsRequest:
      description: Request message for Verifications.FetchVerificationOptions.
      properties:
        context:
          description: Optional. Extra context information for the verification of service businesses. Can only be applied to the locations whose business type is CUSTOMER_LOCATION_ONLY. Specifying an accurate address could enable more options. INVALID_ARGUMENT will be thrown if it is set for other business types of locations.
          $ref: '#/components/schemas/ServiceBusinessContext'
        languageCode:
          type: string
          description: Required. The BCP 47 language code representing the language that is to be used for the verification process. Available options vary by language.
      type: object
      id: FetchVerificationOptionsRequest
    CompleteVerificationResponse:
      id: CompleteVerificationResponse
      type: object
      properties:
        verification:
          description: The completed verification.
          $ref: '#/components/schemas/Verification'
      description: Response message for Verifications.CompleteVerificationAction.
    Verify:
      properties:
        hasPendingVerification:
          description: Indicates whether a verification process has already started, and can be completed by the location.
          type: boolean
      type: object
      description: Indicates that the location requires verification. Contains information about the current verification actions performed on the location.
      id: Verify
    VerifyLocationResponse:
      properties:
        verification:
          description: The created verification request.
          $ref: '#/components/schemas/Verification'
      description: Response message for Verifications.VerifyLocation.
      id: VerifyLocationResponse
      type: object
    PostalAddress:
      id: PostalAddress
      type: object
      description: 'Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478'
      properties:
        administrativeArea:
          type: string
          description: Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
        addressLines:
          type: array
          description: Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
          items:
            type: string
        regionCode:
          type: string
          description: 'Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.'
        recipients:
          description: Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
          type: array
          items:
            type: string
        sublocality:
          type: string
          description: Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
        languageCode:
          type: string
          description: 'Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address'' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".'
        organization:
          type: string
          description: Optional. The name of the organization at the address.
        sortingCode:
          type: string
          description: Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
        locality:
          description: 'Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.'
          type: string
        postalCode:
          type: string
          description: Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
        revision:
          description: The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
          format: int32
          type: integer
    WaitForVoiceOfMerchant:
      description: Indicates that the location will gain voice of merchant after passing review.
      id: WaitForVoiceOfMerchant
      properties: {}
      type: object
    GenerateVerificationTokenRequest:
      description: Request message for Verifications.GenerateVerificationToken.
      id: GenerateVerificationTokenRequest
      properties:
        location:
          description: 'Required. The target location. Note: The location information should exactly match the target Location, otherwise the generated verification token won''t be able to verify the target Location.'
          $ref: '#/components/schemas/Location'
      type: object
    ListVerificationsResponse:
      type: object
      id: ListVerificationsResponse
      properties:
        nextPageToken:
          type: string
          description: If the number of verifications exceeded the requested page size, this field will be populated with a token to fetch the next page of verification on a subsequent call. If there are no more attributes, this field will not be present in the response.
        verifications:
          type: array
          items:
            $ref: '#/components/schemas/Verification'
          description: List of the verifications.
      description: Response message for Verifications.ListVerifications.
    Location:
      type: object
      id: Location
      properties:
        primaryCategoryId:
          type: string
          description: Required. Id of the category that best describes the core business this location engages in. e.g. gcid:bakery.
        name:
          type: string
          description: Required. Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer "Google" over "Google Inc. - Mountain View Corporate Headquarters"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, "Chase ATM in Duane Reade").
        websiteUri:
          type: string
          description: Optional. A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.
        address:
          description: Required. A precise, accurate address to describe your business location. PO boxes or mailboxes located at remote locations are not acceptable. At this time, you can specify a maximum of five `address_lines` values in the address.
          $ref: '#/components/schemas/PostalAddress'
        primaryPhone:
          description: Optional. A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.
          type: string
      description: A subset of location info. See the [help center article] (https://support.google.com/business/answer/3038177) for a detailed description of these fields, or the [category endpoint](/my-business/reference/rest/v4/categories) for a list of valid business categories.
    VerificationToken:
      id: VerificationToken
      type: object
      properties:
        tokenString:
          type: string
          description: The token string.
      description: Token generated by a vetted [partner](https://support.google.com/business/answer/7674102).
    GenerateVerificationTokenResponse:
      description: Response message for Verifications.GenerateVerificationToken.
      id: GenerateVerificationTokenResponse
      type: object
      properties:
        token:
          description: The generated token to verify the location.
          $ref: '#/components/schemas/VerificationToken'
    CompleteVerificationRequest:
      type: object
      properties:
        pin:
          description: Required. PIN code received by the merchant to complete the verification.
          type: string
      id: CompleteVerificationRequest
      description: Request message for Verifications.CompleteVerificationAction.
    FetchVerificationOptionsResponse:
      description: Response message for Verifications.FetchVerificationOptions.
      id: FetchVerificationOptionsResponse
      type: object
      properties:
        options:
          items:
            $ref: '#/components/schemas/VerificationOption'
          type: array
          description: The available verification options.
    AddressVerificationData:
      description: Display data for verifications through postcard.
      properties:
        business:
          description: Merchant's business name.
          type: string
        expectedDeliveryDaysRegion:
          format: int32
          description: Expected number of days it takes to deliver a postcard to the address's region.
          type: integer
        address:
          $ref: '#/components/schemas/PostalAddress'
          description: Address that a postcard can be sent to.
      id: AddressVerificationData
      type: object
    ResolveOwnershipConflict:
      properties: {}
      type: object
      id: ResolveOwnershipConflict
      description: Indicates that the location duplicates another location that is in good standing.
    VerifyLocationRequest:
      description: Request message for Verifications.VerifyLocation.
      properties:
        token:
          $ref: '#/components/schemas/VerificationToken'
          description: Optional. The input for VETTED_PARTNER method available to select [partners.](https://support.google.com/business/answer/7674102) The input is not needed for a vetted account. Token that is associated to the location. Token that is associated to the location.
        method:
          type: string
          enumDescriptions:
            - Default value, will result in errors.
            - Send a postcard with a verification PIN to a specific mailing address. The PIN is used to complete verification with Google.
            - Send an email with a verification PIN to a specific email address. The PIN is used to complete verification with Google.
            - Make a phone call with a verification PIN to a specific phone number. The PIN is used to complete verification with Google.
            - Send an SMS with a verification PIN to a specific phone number. The PIN is used to complete verification with Google.
            - Verify the location without additional user action. This option may not be available for all locations.
            - Used for vetted [partners](https://support.google.com/business/answer/7674102). This option may not be available for all locations.
          enum:
            - VERIFICATION_METHOD_UNSPECIFIED
            - ADDRESS
            - EMAIL
            - PHONE_CALL
            - SMS
            - AUTO
            - VETTED_PARTNER
          description: Required. Verification method.
        context:
          description: Optional. Extra context information for the verification of service businesses. It is only required for the locations whose business type is CUSTOMER_LOCATION_ONLY. For ADDRESS verification, the address will be used to send out postcard. For other methods, it should be the same as the one that is passed to GetVerificationOptions. INVALID_ARGUMENT will be thrown if it is set for other types of business locations.
          $ref: '#/components/schemas/ServiceBusinessContext'
        phoneNumber:
          description: Optional. The input for PHONE_CALL/SMS method The phone number that should be called or be sent SMS to. It must be one of the phone numbers in the eligible options.
          type: string
        languageCode:
          type: string
          description: Optional. The BCP 47 language code representing the language that is to be used for the verification process.
        emailAddress:
          description: Optional. The input for EMAIL method. Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name.
          type: string
        mailerContact:
          type: string
          description: Optional. The input for ADDRESS method. Contact name the mail should be sent to.
      type: object
      id: VerifyLocationRequest
    VerificationOption:
      properties:
        phoneNumber:
          type: string
          description: Set only if the method is PHONE_CALL or SMS. Phone number that the PIN will be sent to.
        emailData:
          description: Set only if the method is EMAIL.
          $ref: '#/components/schemas/EmailVerificationData'
        verificationMethod:
          description: Method to verify the location.
          enumDescriptions:
            - Default value, will result in errors.
            - Send a postcard with a verification PIN to a specific mailing address. The PIN is used to complete verification with Google.
            - Send an email with a verification PIN to a specific email address. The PIN is used to complete verification with Google.
            - Make a phone call with a verification PIN to a specific phone number. The PIN is used to complete verification with Google.
            - Send an SMS with a verification PIN to a specific phone number. The PIN is used to complete verification with Google.
            - Verify the location without additional user action. This option may not be available for all locations.
            - Used for vetted [partners](https://support.google.com/business/answer/7674102). This option may not be available for all locations.
          type: string
          enum:
            - VERIFICATION_METHOD_UNSPECIFIED
            - ADDRESS
            - EMAIL
            - PHONE_CALL
            - SMS
            - AUTO
            - VETTED_PARTNER
        addressData:
          $ref: '#/components/schemas/AddressVerificationData'
          description: Set only if the method is MAIL.
      id: VerificationOption
      type: object
      description: The verification option represents how to verify the location (indicated by verification method) and where the verification will be sent to (indicated by display data).
    VoiceOfMerchantState:
      id: VoiceOfMerchantState
      properties:
        hasBusinessAuthority:
          type: boolean
          description: Indicates whether the location has the authority (ownership) over the business on Google. If true, another location cannot take over and become the dominant listing on Maps. However, edits will not become live unless Voice of Merchant is gained (i.e. has_voice_of_merchant is true).
        waitForVoiceOfMerchant:
          $ref: '#/components/schemas/WaitForVoiceOfMerchant'
          description: Wait to gain Voice of Merchant. The location is under review for quality purposes.
        verify:
          description: Start or continue the verification process.
          $ref: '#/components/schemas/Verify'
        complyWithGuidelines:
          description: The location fails to comply with our [guidelines](https://support.google.com/business/answer/3038177) and requires additional steps for reinstatement. To fix this issue, consult the [Help Center Article](https://support.google.com/business/answer/4569145).
          $ref: '#/components/schemas/ComplyWithGuidelines'
        resolveOwnershipConflict:
          description: This location duplicates another location that is in good standing. If you have access to the location in good standing, use that location's id to perform operations. Otherwise, request access from the current owner.
          $ref: '#/components/schemas/ResolveOwnershipConflict'
        hasVoiceOfMerchant:
          type: boolean
          description: Indicates whether the location is in good standing and has control over the business on Google. Any edits made to the location will propagate to Maps after passing the review phase.
      type: object
      description: Response message for VoiceOfMerchant.GetVoiceOfMerchantState.
    ServiceBusinessContext:
      properties:
        address:
          $ref: '#/components/schemas/PostalAddress'
          description: The verification address of the location. It is used to either enable more verification options or send a postcard.
      type: object
      id: ServiceBusinessContext
      description: Additional data for service business verification.
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/monitoring: View and write monitoring data for all of your Google and third-party Cloud and API projects
            https://www.googleapis.com/auth/monitoring.read: View monitoring data for all of your Google Cloud and third-party projects
            https://www.googleapis.com/auth/monitoring.write: Publish metric data to your Google Cloud projects
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    verifications:
      id: googlemybusiness.mybusinessverifications.verifications
      name: verifications
      title: Verifications
      methods:
        locations_verifications_complete:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1verifications~1{verificationsId}:complete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        locations_verifications_list:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1verifications/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/verifications/methods/locations_verifications_list'
        insert: []
        update: []
        delete: []
    locations_voice_of_merchant_state:
      id: googlemybusiness.mybusinessverifications.locations_voice_of_merchant_state
      name: locations_voice_of_merchant_state
      title: Locations_voice_of_merchant_state
      methods:
        locations_getVoiceOfMerchantState:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1VoiceOfMerchantState/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations_voice_of_merchant_state/methods/locations_getVoiceOfMerchantState'
        insert: []
        update: []
        delete: []
    locations:
      id: googlemybusiness.mybusinessverifications.locations
      name: locations
      title: Locations
      methods:
        verify:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}:verify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    locations_verification_options:
      id: googlemybusiness.mybusinessverifications.locations_verification_options
      name: locations_verification_options
      title: Locations_verification_options
      methods:
        locations_fetchVerificationOptions:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}:fetchVerificationOptions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    verification_tokens:
      id: googlemybusiness.mybusinessverifications.verification_tokens
      name: verification_tokens
      title: Verification_tokens
      methods:
        verificationTokens_generate:
          operation:
            $ref: '#/paths/~1v1~1verificationTokens:generate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/locations/{locationsId}/verifications/{verificationsId}:complete:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
    post:
      description: Completes a `PENDING` verification. It is only necessary for non `AUTO` verification methods. `AUTO` verification request is instantly `VERIFIED` upon creation.
      operationId: mybusinessverifications.locations.verifications.complete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteVerificationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteVerificationResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: verificationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: verifications
      x-stackQL-verb: exec
  /v1/locations/{locationsId}/verifications:
    parameters: *ref_1
    get:
      description: List verifications of a location, ordered by create time.
      operationId: mybusinessverifications.locations.verifications.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVerificationsResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: verifications
      x-stackQL-verb: select
  /v1/locations/{locationsId}/VoiceOfMerchantState:
    parameters: *ref_1
    get:
      description: Gets the VoiceOfMerchant state.
      operationId: mybusinessverifications.locations.getVoiceOfMerchantState
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceOfMerchantState'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations_voice_of_merchant_state
      x-stackQL-verb: select
  /v1/locations/{locationsId}:verify:
    parameters: *ref_1
    post:
      description: Starts the verification process for a location.
      operationId: mybusinessverifications.locations.verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyLocationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyLocationResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1/locations/{locationsId}:fetchVerificationOptions:
    parameters: *ref_1
    post:
      description: Reports all eligible verification options for a location in a specific language.
      operationId: mybusinessverifications.locations.fetchVerificationOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchVerificationOptionsRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchVerificationOptionsResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations_verification_options
      x-stackQL-verb: select
  /v1/verificationTokens:generate:
    parameters: *ref_1
    post:
      description: Generates a token for the provided location data as a vetted [partner](https://support.google.com/business/answer/7674102). Throws PERMISSION_DENIED if the caller is not a vetted partner account. Throws FAILED_PRECONDITION if the caller's VettedStatus is INVALID.
      operationId: mybusinessverifications.verificationTokens.generate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateVerificationTokenRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateVerificationTokenResponse'
      parameters: []
      x-stackQL-resource: verification_tokens
      x-stackQL-verb: exec
