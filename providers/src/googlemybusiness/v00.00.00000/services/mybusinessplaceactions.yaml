openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: My Business Place Actions API
  description: The My Business Place Actions API provides an interface for managing place action links of a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
  version: v1
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/my-business/
servers:
  - url: https://mybusinessplaceactions.googleapis.com
components:
  schemas:
    Empty:
      type: object
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    ListPlaceActionLinksResponse:
      type: object
      properties:
        placeActionLinks:
          items:
            $ref: '#/components/schemas/PlaceActionLink'
          type: array
          description: The returned list of place action links.
        nextPageToken:
          description: If there are more place action links than the requested page size, then this field is populated with a token to fetch the next page of results.
          type: string
      id: ListPlaceActionLinksResponse
      description: Response message for PlaceActions.ListPlaceActionLinks.
    PlaceActionLink:
      type: object
      properties:
        uri:
          description: Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location).
          type: string
        placeActionType:
          type: string
          enumDescriptions:
            - Not specified.
            - The action type is booking an appointment.
            - The action type is booking an online appointment.
            - The action type is making a dining reservation.
            - The action type is ordering food for delivery and/or takeout.
            - The action type is ordering food for delivery.
            - The action type is ordering food for takeout.
            - The action type is shopping, that can be delivery and/or pickup.
          description: Required. The type of place action that can be performed using this link.
          enum:
            - PLACE_ACTION_TYPE_UNSPECIFIED
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
        isEditable:
          readOnly: true
          description: Output only. Indicates whether this link can be edited by the client.
          type: boolean
        name:
          type: string
          description: Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.
        updateTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time when the place action link was last modified.
          type: string
        createTime:
          type: string
          description: Output only. The time when the place action link was created.
          readOnly: true
          format: google-datetime
        providerType:
          readOnly: true
          enum:
            - PROVIDER_TYPE_UNSPECIFIED
            - MERCHANT
            - AGGREGATOR_3P
          enumDescriptions:
            - Not specified.
            - A 1P provider such as a merchant, or an agency on behalf of a merchant.
            - A 3P aggregator, such as a `Reserve with Google` partner.
          type: string
          description: Output only. Specifies the provider type.
        isPreferred:
          description: Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference.
          type: boolean
      id: PlaceActionLink
      description: Represents a place action link and its attributes.
    ListPlaceActionTypeMetadataResponse:
      id: ListPlaceActionTypeMetadataResponse
      properties:
        nextPageToken:
          type: string
          description: If the number of action types exceeded the requested page size, this field will be populated with a token to fetch the next page on a subsequent call to `placeActionTypeMetadata.list`. If there are no more results, this field will not be present in the response.
        placeActionTypeMetadata:
          description: A collection of metadata for the available place action types.
          items:
            $ref: '#/components/schemas/PlaceActionTypeMetadata'
          type: array
      description: Response message for PlaceActions.ListPlaceActionTypeMetadata.
      type: object
    PlaceActionTypeMetadata:
      properties:
        placeActionType:
          description: The place action type.
          enumDescriptions:
            - Not specified.
            - The action type is booking an appointment.
            - The action type is booking an online appointment.
            - The action type is making a dining reservation.
            - The action type is ordering food for delivery and/or takeout.
            - The action type is ordering food for delivery.
            - The action type is ordering food for takeout.
            - The action type is shopping, that can be delivery and/or pickup.
          type: string
          enum:
            - PLACE_ACTION_TYPE_UNSPECIFIED
            - APPOINTMENT
            - ONLINE_APPOINTMENT
            - DINING_RESERVATION
            - FOOD_ORDERING
            - FOOD_DELIVERY
            - FOOD_TAKEOUT
            - SHOP_ONLINE
        displayName:
          description: The localized display name for the attribute, if available; otherwise, the English display name.
          type: string
      type: object
      id: PlaceActionTypeMetadata
      description: Metadata for supported place action types.
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/monitoring.read: View monitoring data for all of your Google Cloud and third-party projects
            https://www.googleapis.com/auth/monitoring: View and write monitoring data for all of your Google and third-party Cloud and API projects
            https://www.googleapis.com/auth/monitoring.write: Publish metric data to your Google Cloud projects
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    place_action_links:
      id: googlemybusiness.mybusinessplaceactions.place_action_links
      name: place_action_links
      title: Place_action_links
      methods:
        locations_placeActionLinks_patch:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks~1{placeActionLinksId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        locations_placeActionLinks_delete:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks~1{placeActionLinksId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        locations_placeActionLinks_get:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks~1{placeActionLinksId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        locations_placeActionLinks_create:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        locations_placeActionLinks_list:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/place_action_links/methods/locations_placeActionLinks_get'
          - $ref: '#/components/x-stackQL-resources/place_action_links/methods/locations_placeActionLinks_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/place_action_links/methods/locations_placeActionLinks_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/place_action_links/methods/locations_placeActionLinks_delete'
    place_action_type_metadata:
      id: googlemybusiness.mybusinessplaceactions.place_action_type_metadata
      name: place_action_type_metadata
      title: Place_action_type_metadata
      methods:
        placeActionTypeMetadata_list:
          operation:
            $ref: '#/paths/~1v1~1placeActionTypeMetadata/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/place_action_type_metadata/methods/placeActionTypeMetadata_list'
        insert: []
        update: []
        delete: []
paths:
  /v1/locations/{locationsId}/placeActionLinks/{placeActionLinksId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
    patch:
      description: Updates the specified place action link and returns it.
      operationId: mybusinessplaceactions.locations.placeActionLinks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceActionLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceActionLink'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: placeActionLinksId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: exec
    delete:
      description: Deletes a place action link from the specified location.
      operationId: mybusinessplaceactions.locations.placeActionLinks.delete
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: placeActionLinksId
          required: true
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: delete
    get:
      description: Gets the specified place action link.
      operationId: mybusinessplaceactions.locations.placeActionLinks.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceActionLink'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: placeActionLinksId
          required: true
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: select
  /v1/locations/{locationsId}/placeActionLinks:
    parameters: *ref_1
    post:
      description: Creates a place action link associated with the specified location, and returns it. The request is considered duplicate if the `parent`, `place_action_link.uri` and `place_action_link.place_action_type` are the same as a previous request.
      operationId: mybusinessplaceactions.locations.placeActionLinks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceActionLink'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceActionLink'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: place_action_links
      x-stackQL-verb: insert
    get:
      description: Lists the place action links for the specified location.
      operationId: mybusinessplaceactions.locations.placeActionLinks.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlaceActionLinksResponse'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: place_action_links
      x-stackQL-verb: select
  /v1/placeActionTypeMetadata:
    parameters: *ref_1
    get:
      description: Returns the list of available place action types for a location or country.
      operationId: mybusinessplaceactions.placeActionTypeMetadata.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlaceActionTypeMetadataResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: place_action_type_metadata
      x-stackQL-verb: select
