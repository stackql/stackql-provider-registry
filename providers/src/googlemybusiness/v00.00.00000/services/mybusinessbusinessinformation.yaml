openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: My Business Business Information API
  description: The My Business Business Information API provides an interface for managing business information. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
  version: v1
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/my-business/
servers:
  - url: https://mybusinessbusinessinformation.googleapis.com
components:
  schemas:
    GoogleUpdatedLocation:
      properties:
        location:
          description: The Google-updated version of this location.
          $ref: '#/components/schemas/Location'
        diffMask:
          description: The fields that Google updated.
          type: string
          format: google-fieldmask
        pendingMask:
          description: The fields that have pending edits that haven't yet been pushed to Maps and Search.
          format: google-fieldmask
          type: string
      description: Represents a location that was modified by Google.
      id: GoogleUpdatedLocation
      type: object
    ServiceType:
      id: ServiceType
      type: object
      description: A message describing a service type that the business offers.
      properties:
        serviceTypeId:
          readOnly: true
          description: Output only. A stable ID (provided by Google) for this service type.
          type: string
        displayName:
          description: Output only. The human-readable display name for the service type.
          readOnly: true
          type: string
    ListLocationsResponse:
      description: Response message for Locations.ListLocations.
      id: ListLocationsResponse
      properties:
        locations:
          type: array
          description: The locations.
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: If the number of locations exceeded the requested page size, this field is populated with a token to fetch the next page of locations on a subsequent call to `ListLocations`. If there are no more locations, this field is not present in the response.
          type: string
        totalSize:
          format: int32
          description: The approximate number of Locations in the list irrespective of pagination.
          type: integer
      type: object
    BatchGetCategoriesResponse:
      description: Response message for BusinessCategories.BatchGetBusinessCategories.
      type: object
      id: BatchGetCategoriesResponse
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          description: Categories that match the GConcept ids provided in the request. They will not come in the same order as category ids in the request.
    TimePeriod:
      id: TimePeriod
      description: Represents a span of time that the business is open, starting on the specified open day/time and closing on the specified close day/time. The closing time must occur after the opening time, for example later in the same day, or on a subsequent day.
      type: object
      properties:
        openTime:
          $ref: '#/components/schemas/TimeOfDay'
          description: Required. Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
        openDay:
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          description: Required. Indicates the day of the week this period starts on.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        closeTime:
          description: Required. Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
          $ref: '#/components/schemas/TimeOfDay'
        closeDay:
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          description: Required. Indicates the day of the week this period ends on.
    BusinessHours:
      description: Represents the time periods that this location is open for business. Holds a collection of TimePeriod instances.
      type: object
      id: BusinessHours
      properties:
        periods:
          type: array
          items:
            $ref: '#/components/schemas/TimePeriod'
          description: Required. A collection of times that this location is open for business. Each period represents a range of hours when the location is open during the week.
    AttributeValueMetadata:
      properties:
        displayName:
          description: The display name for this value, localized where available; otherwise, in English. The value display name is intended to be used in context with the attribute display name. For example, for a "WiFi" enum attribute, this could contain "Paid" to represent paid Wi-Fi.
          type: string
        value:
          description: The attribute value.
          type: any
      id: AttributeValueMetadata
      description: Metadata for supported attribute values.
      type: object
    Empty:
      type: object
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    PostalAddress:
      description: 'Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an internationalization-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478'
      properties:
        revision:
          description: The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.
          format: int32
          type: integer
        sortingCode:
          type: string
          description: Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number alone, representing the "sector code" (Jamaica), "delivery area indicator" (Malawi) or "post office indicator" (e.g. CÃ´te d'Ivoire).
        locality:
          type: string
          description: 'Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.'
        sublocality:
          type: string
          description: Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts.
        postalCode:
          description: Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).
          type: string
        recipients:
          items:
            type: string
          description: Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain "care of" information.
          type: array
        administrativeArea:
          description: Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. "Barcelona" and not "Catalonia"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.
          type: string
        addressLines:
          items:
            type: string
          description: Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. "Austin, TX"), it is important that the line order is clear. The order of address lines should be "envelope order" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. "ja" for large-to-small ordering and "ja-Latn" or "en" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).
          type: array
        regionCode:
          description: 'Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See https://cldr.unicode.org/ and https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland.'
          type: string
        languageCode:
          description: 'Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address'' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: "zh-Hant", "ja", "ja-Latn", "en".'
          type: string
        organization:
          type: string
          description: Optional. The name of the organization at the address.
      id: PostalAddress
      type: object
    Date:
      id: Date
      type: object
      properties:
        month:
          type: integer
          format: int32
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
        year:
          type: integer
          format: int32
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
        day:
          format: int32
          type: integer
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
    Chain:
      description: A chain is a brand that your business's locations can be affiliated with.
      properties:
        locationCount:
          description: Number of locations that are part of this chain.
          format: int32
          type: integer
        name:
          type: string
          description: Required. The chain's resource name, in the format `chains/{chain_id}`.
        websites:
          description: Websites of the chain.
          type: array
          items:
            $ref: '#/components/schemas/ChainUri'
        chainNames:
          items:
            $ref: '#/components/schemas/ChainName'
          type: array
          description: Names of the chain.
      type: object
      id: Chain
    SearchGoogleLocationsResponse:
      id: SearchGoogleLocationsResponse
      description: Response message for GoogleLocations.SearchGoogleLocations.
      type: object
      properties:
        googleLocations:
          items:
            $ref: '#/components/schemas/GoogleLocation'
          type: array
          description: A collection of GoogleLocations that are potential matches to the specified request, listed in order from most to least accuracy.
    AdWordsLocationExtensions:
      description: Additional information that is surfaced in AdWords.
      type: object
      id: AdWordsLocationExtensions
      properties:
        adPhone:
          description: Required. An alternate phone number to display on AdWords location extensions instead of the location's primary phone number.
          type: string
    Profile:
      properties:
        description:
          type: string
          description: Required. Description of the location in your own voice, not editable by anyone else.
      id: Profile
      description: All information pertaining to the location's profile.
      type: object
    ChainUri:
      type: object
      id: ChainUri
      properties:
        uri:
          type: string
          description: The uri for this chain.
      description: Url to be used when displaying the chain.
    PlaceInfo:
      type: object
      description: Defines an area that's represented by a place ID.
      id: PlaceInfo
      properties:
        placeId:
          description: Required. The ID of the place. Must correspond to a region. (https://developers.google.com/places/web-service/supported_types#table3)
          type: string
        placeName:
          description: Required. The localized name of the place. For example, `Scottsdale, AZ`.
          type: string
    RepeatedEnumAttributeValue:
      description: 'Values for an attribute with a `value_type` of REPEATED_ENUM. This consists of two lists of value IDs: those that are set (true) and those that are unset (false). Values absent are considered unknown. At least one value must be specified.'
      properties:
        setValues:
          items:
            type: string
          type: array
          description: Enum values that are set.
        unsetValues:
          items:
            type: string
          type: array
          description: Enum values that are unset.
      id: RepeatedEnumAttributeValue
      type: object
    FreeFormServiceItem:
      id: FreeFormServiceItem
      description: Represents a free-form service offered by the merchant. These are services that are not exposed as part of our structure service data. The merchant manually enters the names for of such services via a geomerchant surface.
      type: object
      properties:
        label:
          $ref: '#/components/schemas/Label'
          description: Required. Language-tagged labels for the item. We recommend that item names be 140 characters or less, and descriptions 250 characters or less. This field should only be set if the input is a custom service item. Standardized service types should be updated via service_type_id.
        category:
          description: Required. This field represents the category name (i.e. the category's stable ID). The `category` and `service_type_id` should match the possible combinations provided in the `Category` message.
          type: string
    Attributes:
      properties:
        attributes:
          type: array
          description: A collection of attributes that need to be updated.
          items:
            $ref: '#/components/schemas/Attribute'
        name:
          type: string
          description: Required. Google identifier for this location in the form of `locations/{location_id}/attributes`.
      id: Attributes
      type: object
      description: A container for all the attributes for a given location.
    Categories:
      type: object
      id: Categories
      properties:
        additionalCategories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          description: Optional. Additional categories to describe your business. Categories help your customers find accurate, specific results for services they're interested in. To keep your business information accurate and live, make sure that you use as few categories as possible to describe your overall core business. Choose categories that are as specific as possible, but representative of your main business.
        primaryCategory:
          $ref: '#/components/schemas/Category'
          description: Required. Category that best describes the core business this location engages in.
      description: A collection of categories that describes the business. During updates, both fields must be set. Clients are prohibited from individually updating the primary or additional categories using the update mask.
    OpenInfo:
      id: OpenInfo
      properties:
        status:
          description: Required. Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed.
          type: string
          enum:
            - OPEN_FOR_BUSINESS_UNSPECIFIED
            - OPEN
            - CLOSED_PERMANENTLY
            - CLOSED_TEMPORARILY
          enumDescriptions:
            - Not specified.
            - Indicates that the location is open.
            - Indicates that the location has been permanently closed.
            - Indicates that the location has been temporarily closed.
        canReopen:
          type: boolean
          readOnly: true
          description: Output only. Indicates whether this business is eligible for re-open.
        openingDate:
          $ref: '#/components/schemas/Date'
          description: Optional. The date on which the location first opened. If the exact day is not known, month and year only can be provided. The date must be in the past or be no more than one year in the future.
      description: Information related to the opening state of the business.
      type: object
    SpecialHours:
      type: object
      description: Represents a set of time periods when a location's operational hours differ from its normal business hours.
      id: SpecialHours
      properties:
        specialHourPeriods:
          items:
            $ref: '#/components/schemas/SpecialHourPeriod'
          description: Required. A list of exceptions to the business's regular hours.
          type: array
    GoogleLocation:
      description: Represents a Location that is present on Google. This can be a location that has been claimed by the user, someone else, or could be unclaimed.
      type: object
      properties:
        name:
          description: Resource name of this GoogleLocation, in the format `googleLocations/{googleLocationId}`.
          type: string
        location:
          description: The sparsely populated Location information. This field can be re-used in CreateLocation if it is not currently claimed by a user.
          $ref: '#/components/schemas/Location'
        requestAdminRightsUri:
          type: string
          description: A URL that will redirect the user to the request admin rights UI. This field is only present if the location has already been claimed by any user, including the current user.
      id: GoogleLocation
    UriAttributeValue:
      type: object
      properties:
        uri:
          description: Required. The proposed URI value for this attribute.
          type: string
      id: UriAttributeValue
      description: Values for an attribute with a `value_type` of URL.
    Location:
      type: object
      description: A location. See the [help center article] (https://support.google.com/business/answer/3038177) for a detailed description of these fields, or the [category endpoint](/my-business/reference/rest/v4/categories) for a list of valid business categories.
      properties:
        phoneNumbers:
          description: Optional. The different phone numbers that customers can use to get in touch with the business.
          $ref: '#/components/schemas/PhoneNumbers'
        languageCode:
          type: string
          description: Immutable. The language of the location. Set during creation and not updateable.
        specialHours:
          $ref: '#/components/schemas/SpecialHours'
          description: Optional. Special hours for the business. This typically includes holiday hours, and other times outside of regular operating hours. These override regular business hours. This field cannot be set without regular hours.
        websiteUri:
          type: string
          description: Optional. A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.
        name:
          type: string
          description: 'Google identifier for this location in the form: `locations/{location_id}`.'
        metadata:
          description: Output only. Additional non-user-editable information.
          $ref: '#/components/schemas/Metadata'
          readOnly: true
        storefrontAddress:
          $ref: '#/components/schemas/PostalAddress'
          description: Optional. A precise, accurate address to describe your business location. PO boxes or mailboxes located at remote locations are not acceptable. At this time, you can specify a maximum of five `address_lines` values in the address. This field should only be set for businesses that have a storefront. This field should not be set for locations of type `CUSTOMER_LOCATION_ONLY`.
        openInfo:
          $ref: '#/components/schemas/OpenInfo'
          description: Optional. A flag that indicates whether the location is currently open for business.
        regularHours:
          $ref: '#/components/schemas/BusinessHours'
          description: Optional. Operating hours for the business.
        serviceArea:
          description: Optional. Service area businesses provide their service at the customer's location. If this business is a service area business, this field describes the area(s) serviced by the business.
          $ref: '#/components/schemas/ServiceAreaBusiness'
        title:
          type: string
          description: Required. Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer "Google" over "Google Inc. - Mountain View Corporate Headquarters"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, "Chase ATM in Duane Reade").
        moreHours:
          items:
            $ref: '#/components/schemas/MoreHours'
          description: Optional. More hours for a business's different departments or specific customers.
          type: array
        labels:
          items:
            type: string
          type: array
          description: Optional. A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Must be between 1-255 characters per label.
        categories:
          description: Optional. The different categories that describe the business.
          $ref: '#/components/schemas/Categories'
        storeCode:
          type: string
          description: Optional. External identifier for this location, which must be unique within a given account. This is a means of associating the location with your own records.
        serviceItems:
          items:
            $ref: '#/components/schemas/ServiceItem'
          description: Optional. List of services supported by merchants. A service can be haircut, install water heater, etc. Duplicated service items will be removed automatically.
          type: array
        relationshipData:
          description: Optional. All locations and chain related to this one.
          $ref: '#/components/schemas/RelationshipData'
        latlng:
          $ref: '#/components/schemas/LatLng'
          description: Optional. User-provided latitude and longitude. When creating a location, this field is ignored if the provided address geocodes successfully. This field is only returned on get requests if the user-provided `latlng` value was accepted during create, or the `latlng` value was updated through the Google Business Profile website. This field can only be updated by approved clients.
        adWordsLocationExtensions:
          description: Optional. Additional information that is surfaced in AdWords.
          $ref: '#/components/schemas/AdWordsLocationExtensions'
        profile:
          description: Optional. Describes your business in your own voice and shares with users the unique story of your business and offerings. This field is required for all categories except lodging categories (e.g. hotels, motels, inns).
          $ref: '#/components/schemas/Profile'
      id: Location
    RelevantLocation:
      description: Information about another location that is related to current one. The relation can be any one of DEPARTMENT_OF or INDEPENDENT_ESTABLISHMENT_OF, and the location specified here can be on either side (parent/child) of the location.
      id: RelevantLocation
      properties:
        placeId:
          description: Required. Specify the location that is on the other side of the relation by its placeID.
          type: string
        relationType:
          description: Required. The type of the relationship.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DEPARTMENT_OF
            - INDEPENDENT_ESTABLISHMENT_IN
          type: string
          enumDescriptions:
            - Type unspecified.
            - This represents a relation between 2 locations which share one physical area, same brand/upper management/organization, but with different key attributes like store hours or phone numbers. For example, Costco Pharmacy is a department in Costco Wholesale.
            - This represents the cases where 2 locations are co-located in the same physical location, but from different companies (e.g. Starbucks in a Safeway, shops in a mall).
      type: object
    MoreHoursType:
      type: object
      description: More hours types that a business can offers, in addition to its regular hours.
      properties:
        hoursTypeId:
          type: string
          readOnly: true
          description: Output only. A stable ID provided by Google for this hours type.
        localizedDisplayName:
          type: string
          readOnly: true
          description: Output only. The human-readable localized display name for the hours type.
        displayName:
          description: Output only. The human-readable English display name for the hours type.
          readOnly: true
          type: string
      id: MoreHoursType
    ListCategoriesResponse:
      description: Response message for BusinessCategories.ListCategories.
      type: object
      id: ListCategoriesResponse
      properties:
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          description: The matching categories based on the requested parameters.
        nextPageToken:
          description: If the number of categories exceeded the requested page size, this field will be populated with a token to fetch the next page of categories on a subsequent call to `ListCategories`.
          type: string
    SpecialHourPeriod:
      type: object
      properties:
        closeTime:
          description: Optional. Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field. Must be specified if `closed` is false.
          $ref: '#/components/schemas/TimeOfDay'
        endDate:
          description: Optional. The calendar date this special hour period ends on. If `end_date` field is not set, default to the date specified in `start_date`. If set, this field must be equal to or at most 1 day after `start_date`.
          $ref: '#/components/schemas/Date'
        closed:
          description: Optional. If true, `end_date`, `open_time`, and `close_time` are ignored, and the date specified in `start_date` is treated as the location being closed for the entire day.
          type: boolean
        startDate:
          $ref: '#/components/schemas/Date'
          description: Required. The calendar date this special hour period starts on.
        openTime:
          description: Optional. Valid values are 00:00-24:00 where 24:00 represents midnight at the end of the specified day field. Must be specified if `closed` is false.
          $ref: '#/components/schemas/TimeOfDay'
      id: SpecialHourPeriod
      description: 'Represents a single time period when a location''s operational hours differ from its normal business hours. A special hour period must represent a range of less than 24 hours. The `open_time` and `start_date` must predate the `close_time` and `end_date`. The `close_time` and `end_date` can extend to 11:59 a.m. on the day after the specified `start_date`. For example, the following inputs are valid: start_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-23, open_time=08:00, close_time=18:00 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=11:59 The following inputs are not valid: start_date=2015-11-23, open_time=13:00, close_time=11:59 start_date=2015-11-23, end_date=2015-11-24, open_time=13:00, close_time=12:00 start_date=2015-11-23, end_date=2015-11-25, open_time=08:00, close_time=18:00'
    Metadata:
      type: object
      id: Metadata
      description: Additional non-user-editable information about the location.
      properties:
        canHaveFoodMenus:
          readOnly: true
          type: boolean
          description: Output only. Indicates if the listing is eligible for food menu.
        hasPendingEdits:
          readOnly: true
          description: Output only. Indicates whether any of this Location's properties are in the edit pending state.
          type: boolean
        placeId:
          type: string
          description: Output only. If this locationappears on Google Maps, this field is populated with the place ID for the location. This ID can be used in various Places APIs. This field can be set during Create calls, but not for Update.
          readOnly: true
        canOperateLocalPost:
          type: boolean
          description: Output only. Indicates if the listing can manage local posts.
          readOnly: true
        hasGoogleUpdated:
          type: boolean
          description: Output only. Indicates whether the place ID associated with this location has updates that need to be updated or rejected by the client. If this boolean is set, you should call the `getGoogleUpdated` method to lookup information that's needs to be verified.
          readOnly: true
        canModifyServiceList:
          description: Output only. Indicates if the listing can modify the service list.
          readOnly: true
          type: boolean
        hasVoiceOfMerchant:
          description: Output only. Indicates if the listing has Voice of Merchant. If this boolean is false, you should call the locations.getVoiceOfMerchantState API to get details as to why they do not have Voice of Merchant.
          readOnly: true
          type: boolean
        canHaveBusinessCalls:
          type: boolean
          description: Output only. Indicates if the listing is eligible for business calls.
          readOnly: true
        newReviewUri:
          description: Output only. A link to the page on Google Search where a customer can leave a review for the location.
          type: string
          readOnly: true
        mapsUri:
          readOnly: true
          type: string
          description: Output only. A link to the location on Maps.
        duplicateLocation:
          readOnly: true
          type: string
          description: Output only. The location resource that this location duplicates.
        canDelete:
          readOnly: true
          type: boolean
          description: Output only. Indicates whether the location can be deleted using the API.
        canOperateLodgingData:
          description: Output only. Indicates whether the location can operate on Lodging data.
          readOnly: true
          type: boolean
        canOperateHealthData:
          description: Output only. Indicates whether the location can operate on Health data.
          readOnly: true
          type: boolean
    ServiceItem:
      properties:
        structuredServiceItem:
          description: Optional. This field will be set case of structured services data.
          $ref: '#/components/schemas/StructuredServiceItem'
        freeFormServiceItem:
          description: Optional. This field will be set case of free-form services data.
          $ref: '#/components/schemas/FreeFormServiceItem'
        price:
          $ref: '#/components/schemas/Money'
          description: Optional. Represents the monetary price of the service item. We recommend that currency_code and units should be set when including a price. This will be treated as a fixed price for the service item.
      type: object
      id: ServiceItem
      description: A message that describes a single service item. It is used to describe the type of service that the merchant provides. For example, haircut can be a service.
    LatLng:
      type: object
      id: LatLng
      properties:
        latitude:
          format: double
          type: number
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
        longitude:
          type: number
          format: double
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
      description: An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
    StructuredServiceItem:
      type: object
      properties:
        serviceTypeId:
          type: string
          description: Required. The `service_type_id` field is a Google provided unique ID that can be found in `ServiceType`. This information is provided by `BatchGetCategories` rpc service.
        description:
          description: Optional. Description of structured service item. The character limit is 300.
          type: string
      id: StructuredServiceItem
      description: 'Represents a structured service offered by the merchant. For eg: toilet_installation.'
    AssociateLocationRequest:
      description: Request message for Locations.AssociateLocationRequest.
      properties:
        placeId:
          type: string
          description: The association to establish. If not set, it indicates no match.
      type: object
      id: AssociateLocationRequest
    ClearLocationAssociationRequest:
      type: object
      properties: {}
      description: Request message for Locations.ClearLocationAssociationRequest.
      id: ClearLocationAssociationRequest
    RelationshipData:
      type: object
      properties:
        parentChain:
          description: The resource name of the Chain that this location is member of. How to find Chain ID
          type: string
        parentLocation:
          $ref: '#/components/schemas/RelevantLocation'
          description: The parent location that this location has relations with.
        childrenLocations:
          items:
            $ref: '#/components/schemas/RelevantLocation'
          description: The list of children locations that this location has relations with.
          type: array
      description: Information of all parent and children locations related to this one.
      id: RelationshipData
    Category:
      description: A category describing what this business is (not what it does). For a list of valid category IDs, and the mappings to their human-readable names, see `categories.list`.
      properties:
        moreHoursTypes:
          readOnly: true
          type: array
          description: Output only. More hours types that are available for this business category.
          items:
            $ref: '#/components/schemas/MoreHoursType'
        name:
          description: Required. A stable ID (provided by Google) for this category. The value must be specified when modifying the category (when creating or updating a location).
          type: string
        displayName:
          description: Output only. The human-readable name of the category. This is set when reading the location. When modifying the location, `category_id` must be set.
          readOnly: true
          type: string
        serviceTypes:
          readOnly: true
          items:
            $ref: '#/components/schemas/ServiceType'
          description: Output only. A list of all the service types that are available for this business category.
          type: array
      type: object
      id: Category
    Places:
      description: Defines the union of areas represented by a set of places.
      properties:
        placeInfos:
          items:
            $ref: '#/components/schemas/PlaceInfo'
          type: array
          description: The areas represented by place IDs. Limited to a maximum of 20 places.
      id: Places
      type: object
    AttributeMetadata:
      id: AttributeMetadata
      type: object
      properties:
        displayName:
          type: string
          description: The localized display name for the attribute, if available; otherwise, the English display name.
        valueType:
          enum:
            - ATTRIBUTE_VALUE_TYPE_UNSPECIFIED
            - BOOL
            - ENUM
            - URL
            - REPEATED_ENUM
          type: string
          enumDescriptions:
            - Not specified.
            - The values for this attribute are boolean values.
            - The attribute has a predetermined list of available values that can be used. Metadata for this attribute will list these values.
            - The values for this attribute are URLs.
            - The attribute value is an enum with multiple possible values that can be explicitly set or unset.
          description: The value type for the attribute. Values set and retrieved should be expected to be of this type.
        parent:
          type: string
          description: The unique identifier for the attribute.
        groupDisplayName:
          description: The localized display name of the group that contains this attribute, if available; otherwise, the English group name. Related attributes are collected into a group and should be displayed together under the heading given here.
          type: string
        deprecated:
          type: boolean
          description: If true, the attribute is deprecated and should no longer be used. If deprecated, updating this attribute will not result in an error, but updates will not be saved. At some point after being deprecated, the attribute will be removed entirely and it will become an error.
        valueMetadata:
          description: For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided.
          items:
            $ref: '#/components/schemas/AttributeValueMetadata'
          type: array
        repeatable:
          type: boolean
          description: If true, the attribute supports multiple values. If false, only a single value should be provided.
      description: Metadata for an attribute. Contains display information for the attribute, including a localized name and a heading for grouping related attributes together.
    TimeOfDay:
      properties:
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
        seconds:
          type: integer
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          format: int32
        minutes:
          type: integer
          format: int32
          description: Minutes of hour of day. Must be from 0 to 59.
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
      id: TimeOfDay
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      type: object
    Money:
      id: Money
      description: Represents an amount of money with its currency type.
      properties:
        units:
          type: string
          format: int64
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
        nanos:
          type: integer
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
      type: object
    ListAttributeMetadataResponse:
      id: ListAttributeMetadataResponse
      properties:
        nextPageToken:
          type: string
          description: If the number of attributes exceeded the requested page size, this field will be populated with a token to fetch the next page of attributes on a subsequent call to `attributes.list`. If there are no more attributes, this field will not be present in the response.
        attributeMetadata:
          type: array
          items:
            $ref: '#/components/schemas/AttributeMetadata'
          description: A collection of attribute metadata for the available attributes.
      type: object
      description: Response for AttributesService.ListAttributeMetadata.
    MoreHours:
      properties:
        hoursTypeId:
          type: string
          description: Required. Type of hours. Clients should call {#link businessCategories:BatchGet} to get supported hours types for categories of their locations.
        periods:
          items:
            $ref: '#/components/schemas/TimePeriod'
          description: Required. A collection of times that this location is open. Each period represents a range of hours when the location is open during the week.
          type: array
      id: MoreHours
      description: The time periods during which a location is open for certain types of business.
      type: object
    Label:
      id: Label
      description: Label to be used when displaying the price list, section, or item.
      type: object
      properties:
        languageCode:
          description: Optional. The BCP-47 language code that these strings apply for. Only one set of labels may be set per language.
          type: string
        displayName:
          description: Required. Display name for the price list, section, or item.
          type: string
        description:
          type: string
          description: Optional. Description of the price list, section, or item.
    ServiceAreaBusiness:
      type: object
      description: Service area businesses provide their service at the customer's location (for example, a locksmith or plumber).
      id: ServiceAreaBusiness
      properties:
        regionCode:
          type: string
          description: 'Immutable. CLDR region code of the country/region that this service area business is based in. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: "CH" for Switzerland. This field is required for CUSTOMER_LOCATION_ONLY businesses, and is ignored otherwise. The region specified here can be different from regions for the areas that this business serves (e.g. service area businesses that provide services in regions other than the one that they are based in). If this location requires verification after creation, the address provided for verification purposes *must* be located within this region, and the business owner or their authorized representative *must* be able to receive postal mail at the provided verification address.'
        places:
          $ref: '#/components/schemas/Places'
          description: The area that this business serves defined through a set of places.
        businessType:
          description: Required. Indicates the type of the service area business.
          enum:
            - BUSINESS_TYPE_UNSPECIFIED
            - CUSTOMER_LOCATION_ONLY
            - CUSTOMER_AND_BUSINESS_LOCATION
          enumDescriptions:
            - Output only. Not specified.
            - Offers service only in the surrounding area (not at the business address). If a business is being updated from a CUSTOMER_AND_BUSINESS_LOCATION to a CUSTOMER_LOCATION_ONLY, the location update must include field mask `storefront_address` and set the field to empty.
            - Offers service at the business address and the surrounding area.
          type: string
    PhoneNumbers:
      type: object
      properties:
        additionalPhones:
          description: Optional. Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.
          items:
            type: string
          type: array
        primaryPhone:
          description: Required. A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.
          type: string
      id: PhoneNumbers
      description: A collection of phone numbers for the business. During updates, both fields must be set. Clients may not update just the primary or additional phone numbers using the update mask. International phone format is preferred, such as "+1 415 555 0132", see more in (https://developers.google.com/style/phone-numbers#international-phone-numbers).
    SearchGoogleLocationsRequest:
      type: object
      description: Request message for GoogleLocations.SearchGoogleLocations.
      id: SearchGoogleLocationsRequest
      properties:
        query:
          type: string
          description: Text query to search for. The search results from a query string will be less accurate than if providing an exact location, but can provide more inexact matches.
        pageSize:
          format: int32
          description: The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.
          type: integer
        location:
          description: Location to search for. If provided, will find locations which match the provided location details.
          $ref: '#/components/schemas/Location'
    ChainName:
      id: ChainName
      type: object
      properties:
        languageCode:
          type: string
          description: The BCP 47 code of language of the name.
        displayName:
          description: The display name for this chain.
          type: string
      description: Name to be used when displaying the chain.
    Attribute:
      properties:
        values:
          type: array
          items:
            type: any
          description: The values for this attribute. The type of the values supplied must match that expected for that attribute. This is a repeated field where multiple attribute values may be provided. Attribute types only support one value.
        uriValues:
          type: array
          description: When the attribute value type is URL, this field contains the value(s) for this attribute, and the other values fields must be empty.
          items:
            $ref: '#/components/schemas/UriAttributeValue'
        valueType:
          enum:
            - ATTRIBUTE_VALUE_TYPE_UNSPECIFIED
            - BOOL
            - ENUM
            - URL
            - REPEATED_ENUM
          type: string
          enumDescriptions:
            - Not specified.
            - The values for this attribute are boolean values.
            - The attribute has a predetermined list of available values that can be used. Metadata for this attribute will list these values.
            - The values for this attribute are URLs.
            - The attribute value is an enum with multiple possible values that can be explicitly set or unset.
          description: Output only. The type of value that this attribute contains. This should be used to determine how to interpret the value.
          readOnly: true
        repeatedEnumValue:
          $ref: '#/components/schemas/RepeatedEnumAttributeValue'
          description: When the attribute value type is REPEATED_ENUM, this contains the attribute value, and the other values fields must be empty.
        name:
          type: string
          description: Required. The resource name for this attribute.
      type: object
      description: A location attribute. Attributes provide additional information about a location. The attributes that can be set on a location may vary based on the properties of that location (for example, category). Available attributes are determined by Google and may be added and removed without API changes.
      id: Attribute
    SearchChainsResponse:
      type: object
      id: SearchChainsResponse
      properties:
        chains:
          description: Chains that match the queried chain_display_name in SearchChainsRequest. If there are no matches, this field will be empty. Results are listed in order of relevance.
          items:
            $ref: '#/components/schemas/Chain'
          type: array
      description: Response message for Locations.SearchChains.
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/monitoring.read: View monitoring data for all of your Google Cloud and third-party projects
            https://www.googleapis.com/auth/monitoring: View and write monitoring data for all of your Google and third-party Cloud and API projects
            https://www.googleapis.com/auth/monitoring.write: Publish metric data to your Google Cloud projects
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations__attributes:
      id: googlemybusiness.mybusinessbusinessinformation.locations__attributes
      name: locations__attributes
      title: Locations__attributes
      methods:
        locations_getAttributes:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1attributes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations__attributes/methods/locations_getAttributes'
        insert: []
        update: []
        delete: []
    locations:
      id: googlemybusiness.mybusinessbusinessinformation.locations
      name: locations
      title: Locations
      methods:
        updateAttributes:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1attributes/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        associate:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}:associate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        clearLocationAssociation:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}:clearLocationAssociation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_locations_list:
          operation:
            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_locations_create:
          operation:
            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1locations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/accounts_locations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/locations/methods/accounts_locations_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/locations/methods/delete'
    locations__google_updated:
      id: googlemybusiness.mybusinessbusinessinformation.locations__google_updated
      name: locations__google_updated
      title: Locations__google_updated
      methods:
        locations_getGoogleUpdated:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}:getGoogleUpdated/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations__google_updated/methods/locations_getGoogleUpdated'
        insert: []
        update: []
        delete: []
    attributes__google_updated:
      id: googlemybusiness.mybusinessbusinessinformation.attributes__google_updated
      name: attributes__google_updated
      title: Attributes__google_updated
      methods:
        locations_attributes_getGoogleUpdated:
          operation:
            $ref: '#/paths/~1v1~1locations~1{locationsId}~1attributes:getGoogleUpdated/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attributes__google_updated/methods/locations_attributes_getGoogleUpdated'
        insert: []
        update: []
        delete: []
    attributes:
      id: googlemybusiness.mybusinessbusinessinformation.attributes
      name: attributes
      title: Attributes
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1attributes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attributes/methods/list'
        insert: []
        update: []
        delete: []
    categories:
      id: googlemybusiness.mybusinessbusinessinformation.categories
      name: categories
      title: Categories
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1categories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batchGet:
          operation:
            $ref: '#/paths/~1v1~1categories:batchGet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/categories/methods/list'
        insert: []
        update: []
        delete: []
    chains:
      id: googlemybusiness.mybusinessbusinessinformation.chains
      name: chains
      title: Chains
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1chains~1{chainsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: '#/paths/~1v1~1chains:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/chains/methods/get'
        insert: []
        update: []
        delete: []
    google_locations:
      id: googlemybusiness.mybusinessbusinessinformation.google_locations
      name: google_locations
      title: Google_locations
      methods:
        googleLocations_search:
          operation:
            $ref: '#/paths/~1v1~1googleLocations:search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/locations/{locationsId}/attributes:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
    get:
      description: Looks up all the attributes set for a given location.
      operationId: mybusinessbusinessinformation.locations.getAttributes
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attributes'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations__attributes
      x-stackQL-verb: select
    patch:
      description: Update attributes for a given location.
      operationId: mybusinessbusinessinformation.locations.updateAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attributes'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attributes'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: attributeMask
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1/locations/{locationsId}:associate:
    parameters: *ref_1
    post:
      description: Associates a location to a place ID. Any previous association is overwritten. This operation is only valid if the location is unverified. The association must be valid, that is, it appears in the list of `SearchGoogleLocations`.
      operationId: mybusinessbusinessinformation.locations.associate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateLocationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1/locations/{locationsId}:
    parameters: *ref_1
    patch:
      description: Updates the specified location.
      operationId: mybusinessbusinessinformation.locations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
    get:
      description: Returns the specified location.
      operationId: mybusinessbusinessinformation.locations.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
    delete:
      description: Deletes a location. If this location cannot be deleted using the API and it is marked so in the `google.mybusiness.businessinformation.v1.LocationState`, use the [Google Business Profile](https://business.google.com/manage/) website.
      operationId: mybusinessbusinessinformation.locations.delete
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: delete
  /v1/locations/{locationsId}:clearLocationAssociation:
    parameters: *ref_1
    post:
      description: Clears an association between a location and its place ID. This operation is only valid if the location is unverified.
      operationId: mybusinessbusinessinformation.locations.clearLocationAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearLocationAssociationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: exec
  /v1/locations/{locationsId}:getGoogleUpdated:
    parameters: *ref_1
    get:
      description: Gets the Google-updated version of the specified location.
      operationId: mybusinessbusinessinformation.locations.getGoogleUpdated
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleUpdatedLocation'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      x-stackQL-resource: locations__google_updated
      x-stackQL-verb: select
  /v1/locations/{locationsId}/attributes:getGoogleUpdated:
    parameters: *ref_1
    get:
      description: Gets the Google-updated version of the specified location.
      operationId: mybusinessbusinessinformation.locations.attributes.getGoogleUpdated
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attributes'
      parameters:
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: attributes__google_updated
      x-stackQL-verb: select
  /v1/attributes:
    parameters: *ref_1
    get:
      description: Returns the list of attributes that would be available for a location with the given primary category and country.
      operationId: mybusinessbusinessinformation.attributes.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttributeMetadataResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: parent
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: showAll
          schema:
            type: boolean
        - in: query
          name: categoryName
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: attributes
      x-stackQL-verb: select
  /v1/categories:
    parameters: *ref_1
    get:
      description: Returns a list of business categories. Search will match the category name but not the category ID. Search only matches the front of a category name (that is, 'food' may return 'Food Court' but not 'Fast Food Restaurant').
      operationId: mybusinessbusinessinformation.categories.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCategoriesResponse'
      parameters:
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: regionCode
          schema:
            type: string
      x-stackQL-resource: categories
      x-stackQL-verb: select
  /v1/categories:batchGet:
    parameters: *ref_1
    get:
      description: Returns a list of business categories for the provided language and GConcept ids.
      operationId: mybusinessbusinessinformation.categories.batchGet
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetCategoriesResponse'
      parameters:
        - in: query
          name: languageCode
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: regionCode
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: categories
      x-stackQL-verb: select
  /v1/chains/{chainsId}:
    parameters: *ref_1
    get:
      description: Gets the specified chain. Returns `NOT_FOUND` if the chain does not exist.
      operationId: mybusinessbusinessinformation.chains.get
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chain'
      parameters:
        - in: path
          name: chainsId
          required: true
          schema:
            type: string
      x-stackQL-resource: chains
      x-stackQL-verb: select
  /v1/chains:search:
    parameters: *ref_1
    get:
      description: Searches the chain based on chain name.
      operationId: mybusinessbusinessinformation.chains.search
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchChainsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: chainName
          schema:
            type: string
      x-stackQL-resource: chains
      x-stackQL-verb: exec
  /v1/googleLocations:search:
    parameters: *ref_1
    post:
      description: Search all of the possible locations that are a match to the specified request.
      operationId: mybusinessbusinessinformation.googleLocations.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchGoogleLocationsRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGoogleLocationsResponse'
      parameters: []
      x-stackQL-resource: google_locations
      x-stackQL-verb: exec
  /v1/accounts/{accountsId}/locations:
    parameters: *ref_1
    get:
      description: Lists the locations for the specified account.
      operationId: mybusinessbusinessinformation.accounts.locations.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: readMask
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
    post:
      description: Creates a new Location that will be owned by the logged in user.
      operationId: mybusinessbusinessinformation.accounts.locations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: insert
