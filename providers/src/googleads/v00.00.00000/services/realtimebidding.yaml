openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Real-time Bidding API
  description: Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.
  version: v1
  x-discovery-doc-revision: '20230118'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/
servers:
  - url: https://realtimebidding.googleapis.com
components:
  schemas:
    ListUserListsResponse:
      properties:
        userLists:
          items:
            $ref: '#/components/schemas/UserList'
          description: List of user lists from the search.
          type: array
        nextPageToken:
          type: string
          description: The continuation page token to send back to the server in a subsequent request. Due to a currently known issue, it is recommended that the caller keep invoking the list method till the time a next page token is not returned (even if the result set is empty).
      description: The list user list response.
      id: ListUserListsResponse
      type: object
    Image:
      description: An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved.
      properties:
        height:
          type: integer
          description: Image height in pixels.
          format: int32
        url:
          description: The URL of the image.
          type: string
        width:
          description: Image width in pixels.
          format: int32
          type: integer
      id: Image
      type: object
    Endpoint:
      properties:
        tradingLocation:
          type: string
          enum:
            - TRADING_LOCATION_UNSPECIFIED
            - US_WEST
            - US_EAST
            - EUROPE
            - ASIA
          description: The trading location that bid requests should be sent from. See https://developers.google.com/authorized-buyers/rtb/peer-guide#trading-locations for further information.
          enumDescriptions:
            - A placeholder for an undefined trading region. This value should not be used.
            - The Western US trading location.
            - The Eastern US trading location.
            - The European trading location.
            - The Asia trading location.
        bidProtocol:
          description: The protocol that the bidder endpoint is using.
          enumDescriptions:
            - Placeholder for undefined bid protocol. This value should not be used.
            - Google RTB protocol / Protobuf encoding.
            - OpenRTB / JSON encoding (unversioned/latest).
            - OpenRTB / Protobuf encoding (unversioned/latest).
            - 'Deprecated: Use OPENRTB_JSON.'
            - 'Deprecated: Use OPENRTB_JSON.'
            - 'Deprecated: Use OPENRTB_PROTOBUF.'
            - 'Deprecated: Use OPENRTB_JSON.'
            - 'Deprecated: Use OPENRTB_PROTOBUF.'
            - 'Deprecated: Use OPENRTB_JSON.'
            - 'Deprecated: Use OPENRTB_PROTOBUF.'
          enum:
            - BID_PROTOCOL_UNSPECIFIED
            - GOOGLE_RTB
            - OPENRTB_JSON
            - OPENRTB_PROTOBUF
            - OPENRTB_2_2
            - OPENRTB_2_3
            - OPENRTB_PROTOBUF_2_3
            - OPENRTB_2_4
            - OPENRTB_PROTOBUF_2_4
            - OPENRTB_2_5
            - OPENRTB_PROTOBUF_2_5
          type: string
        maximumQps:
          format: int64
          type: string
          description: The maximum number of queries per second allowed to be sent to this server.
        url:
          description: Output only. The URL that bid requests should be sent to.
          type: string
          readOnly: true
        name:
          type: string
          description: Output only. Name of the endpoint resource that must follow the pattern `bidders/{bidderAccountId}/endpoints/{endpointId}`, where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server.
          readOnly: true
      id: Endpoint
      type: object
      description: Bidder endpoint that receives bid requests.
    ListBuyersResponse:
      properties:
        nextPageToken:
          type: string
          description: A token which can be passed to a subsequent call to the `ListBuyers` method to retrieve the next page of results in ListBuyersRequest.pageToken.
        buyers:
          type: array
          description: List of buyers.
          items:
            $ref: '#/components/schemas/Buyer'
      type: object
      id: ListBuyersResponse
      description: A response containing buyer account information.
    BatchRejectPublisherConnectionsRequest:
      description: A request to reject a batch of publisher connections.
      id: BatchRejectPublisherConnectionsRequest
      properties:
        names:
          items:
            type: string
          description: Required. The names of the publishers with whom connection will be rejected. In the pattern `bidders/{bidder}/publisherConnections/{publisher}` where `{bidder}` is the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
          type: array
      type: object
    RemoveTargetedPublishersRequest:
      type: object
      description: A request to stop targeting publishers in a specific configuration. The pretargeting configuration itself specifies how these publishers are targeted in PretargetingConfig.publisherTargeting.
      properties:
        publisherIds:
          type: array
          items:
            type: string
          description: A list of publisher IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details.
      id: RemoveTargetedPublishersRequest
    Creative:
      type: object
      description: A creative and its classification data.
      properties:
        creativeFormat:
          type: string
          readOnly: true
          description: Output only. The format of this creative. Can be used to filter the response of the creatives.list method.
          enum:
            - CREATIVE_FORMAT_UNSPECIFIED
            - HTML
            - VIDEO
            - NATIVE
          enumDescriptions:
            - The format is unknown.
            - HTML creative.
            - Video creative.
            - Native creative.
        native:
          $ref: '#/components/schemas/NativeContent'
          description: A native creative.
        name:
          type: string
          readOnly: true
          description: Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.
        html:
          description: An HTML creative.
          $ref: '#/components/schemas/HtmlContent'
        version:
          readOnly: true
          type: integer
          format: int32
          description: Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates.
        agencyId:
          type: string
          description: The agency ID for this creative.
          format: int64
        impressionTrackingUrls:
          type: array
          items:
            type: string
          description: The set of URLs to be called to record an impression.
        dealIds:
          readOnly: true
          description: Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method.
          type: array
          items:
            type: string
        declaredRestrictedCategories:
          type: array
          description: All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.
          items:
            enumDescriptions:
              - Default value that should never be used.
              - The alcohol restricted category.
            enum:
              - RESTRICTED_CATEGORY_UNSPECIFIED
              - ALCOHOL
            type: string
        creativeServingDecision:
          $ref: '#/components/schemas/CreativeServingDecision'
          description: Output only. Top level status and detected attributes of a creative (for example domain, language, advertiser, product category, etc.) that affect whether (status) and where (context) a creative will be allowed to serve.
          readOnly: true
        apiUpdateTime:
          description: Output only. The last update timestamp of the creative through the API.
          readOnly: true
          format: google-datetime
          type: string
        advertiserName:
          description: The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.
          type: string
        renderUrl:
          type: string
          description: Experimental field that can be used during the [FLEDGE Origin Trial](/authorized-buyers/rtb/fledge-origin-trial). The URL to fetch an interest group ad used in [TURTLEDOVE on-device auction](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#1-browsers-record-interest-groups"). This should be unique among all creatives for a given `accountId`.
        creativeId:
          type: string
          description: Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes.
        declaredVendorIds:
          description: IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method.
          type: array
          items:
            format: int32
            type: integer
        accountId:
          format: int64
          readOnly: true
          type: string
          description: Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check.
        declaredClickThroughUrls:
          description: The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method.
          items:
            type: string
          type: array
        restrictedCategories:
          description: All restricted categories for the ads that may be shown from this creative.
          items:
            enum:
              - RESTRICTED_CATEGORY_UNSPECIFIED
              - ALCOHOL
            enumDescriptions:
              - Default value that should never be used.
              - The alcohol restricted category.
            type: string
          type: array
        adChoicesDestinationUrl:
          type: string
          description: The link to AdChoices destination page. This is only supported for native ads.
        declaredAttributes:
          items:
            enumDescriptions:
              - Do not use. This is a placeholder value only.
              - The creative is of type image/rich media. For pretargeting.
              - The creative is of video type Adobe Flash FLV. For pretargeting.
              - The creative is tagged.
              - The creative is cookie targeted.
              - The creative is user interest targeted.
              - The creative does not expand.
              - The creative expands up.
              - The creative expands down.
              - The creative expands left.
              - The creative expands right.
              - The creative expands up and left.
              - The creative expands up and right.
              - The creative expands down and left.
              - The creative expands down and right.
              - The creative type is HTML.
              - The creative type is VAST video.
              - The creative expands up or down.
              - The creative expands left or right.
              - The creative expands on any diagonal.
              - The creative expands when rolled over.
              - The instream vast video type is vpaid flash.
              - The creative is MRAID.
              - The creative is Flash.
              - The creative is HTML5.
              - The creative has an instream VAST video type of skippable instream video. For pretargeting.
              - The creative is SSL.
              - The creative is non-SSL.
              - The creative is an interstitial.
              - The creative has an instream VAST video type of non-skippable instream video. For pretargeting.
              - The creative is eligible for native.
              - The creative has an instream VAST video type of non-VPAID. For pretargeting.
              - The creative is not eligible for native.
              - The creative has an interstitial size of any interstitial. For pretargeting.
              - The creative has an interstitial size of non interstitial. For pretargeting.
              - The video type is in-banner video.
              - The creative can dynamically resize to fill a variety of slot sizes.
              - The open measurement SDK is supported.
            type: string
            enum:
              - ATTRIBUTE_UNSPECIFIED
              - IMAGE_RICH_MEDIA
              - ADOBE_FLASH_FLV
              - IS_TAGGED
              - IS_COOKIE_TARGETED
              - IS_USER_INTEREST_TARGETED
              - EXPANDING_DIRECTION_NONE
              - EXPANDING_DIRECTION_UP
              - EXPANDING_DIRECTION_DOWN
              - EXPANDING_DIRECTION_LEFT
              - EXPANDING_DIRECTION_RIGHT
              - EXPANDING_DIRECTION_UP_LEFT
              - EXPANDING_DIRECTION_UP_RIGHT
              - EXPANDING_DIRECTION_DOWN_LEFT
              - EXPANDING_DIRECTION_DOWN_RIGHT
              - CREATIVE_TYPE_HTML
              - CREATIVE_TYPE_VAST_VIDEO
              - EXPANDING_DIRECTION_UP_OR_DOWN
              - EXPANDING_DIRECTION_LEFT_OR_RIGHT
              - EXPANDING_DIRECTION_ANY_DIAGONAL
              - EXPANDING_ACTION_ROLLOVER_TO_EXPAND
              - INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH
              - RICH_MEDIA_CAPABILITY_TYPE_MRAID
              - RICH_MEDIA_CAPABILITY_TYPE_FLASH
              - RICH_MEDIA_CAPABILITY_TYPE_HTML5
              - SKIPPABLE_INSTREAM_VIDEO
              - RICH_MEDIA_CAPABILITY_TYPE_SSL
              - RICH_MEDIA_CAPABILITY_TYPE_NON_SSL
              - RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL
              - NON_SKIPPABLE_INSTREAM_VIDEO
              - NATIVE_ELIGIBILITY_ELIGIBLE
              - NON_VPAID
              - NATIVE_ELIGIBILITY_NOT_ELIGIBLE
              - ANY_INTERSTITIAL
              - NON_INTERSTITIAL
              - IN_BANNER_VIDEO
              - RENDERING_SIZELESS_ADX
              - OMSDK_1_0
          description: All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
          type: array
        video:
          description: A video creative.
          $ref: '#/components/schemas/VideoContent'
      id: Creative
    UrlDownloadSize:
      type: object
      id: UrlDownloadSize
      properties:
        normalizedUrl:
          description: The normalized URL with query parameters and fragment removed.
          type: string
        downloadSizeKb:
          type: integer
          format: int32
          description: Download size of the URL in kilobytes.
      description: The URL-level breakdown for the download size.
    SuspendPretargetingConfigRequest:
      properties: {}
      id: SuspendPretargetingConfigRequest
      description: A request to suspend a pretargeting configuration. Sets the configuration's state to SUSPENDED.
      type: object
    DestinationNotCrawlableEvidence:
      description: Evidence that the creative's destination URL was not crawlable by Google.
      type: object
      id: DestinationNotCrawlableEvidence
      properties:
        crawledUrl:
          type: string
          description: Destination URL that was attempted to be crawled.
        reason:
          enumDescriptions:
            - Default value that should never be used.
            - Site's robots exclusion file (for example, robots.txt) was unreachable.
            - Timed out reading site's robots exclusion file (for example, robots.txt).
            - Crawler was disallowed by the site's robots exclusion file (for example, robots.txt).
            - Unknown reason.
          description: Reason of destination not crawlable.
          enum:
            - REASON_UNSPECIFIED
            - UNREACHABLE_ROBOTS
            - TIMEOUT_ROBOTS
            - ROBOTED_DENIED
            - UNKNOWN
          type: string
        crawlTime:
          type: string
          description: Approximate time of the crawl.
          format: google-datetime
    ListPretargetingConfigsResponse:
      properties:
        pretargetingConfigs:
          description: List of pretargeting configurations.
          items:
            $ref: '#/components/schemas/PretargetingConfig'
          type: array
        nextPageToken:
          description: A token which can be passed to a subsequent call to the `ListPretargetingConfigs` method to retrieve the next page of results in ListPretargetingConfigsRequest.pageToken.
          type: string
      id: ListPretargetingConfigsResponse
      description: A response containing pretargeting configurations.
      type: object
    RemoveTargetedAppsRequest:
      properties:
        appIds:
          items:
            type: string
          description: A list of app IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values.
          type: array
      id: RemoveTargetedAppsRequest
      description: A request to stop targeting the provided apps in a specific pretargeting configuration. The pretargeting configuration itself specifies how these apps are targeted. in PretargetingConfig.appTargeting.mobileAppTargeting.
      type: object
    ActivatePretargetingConfigRequest:
      description: A request to activate a pretargeting configuration. Sets the configuration's state to ACTIVE.
      type: object
      properties: {}
      id: ActivatePretargetingConfigRequest
    ListBiddersResponse:
      id: ListBiddersResponse
      type: object
      properties:
        nextPageToken:
          description: A token which can be passed to a subsequent call to the `ListBidders` method to retrieve the next page of results in ListBiddersRequest.pageToken.
          type: string
        bidders:
          type: array
          description: List of bidders.
          items:
            $ref: '#/components/schemas/Bidder'
      description: A response containing bidders.
    AddTargetedSitesRequest:
      properties:
        sites:
          type: array
          items:
            type: string
          description: A list of site URLs to target in the pretargeting configuration. These values will be added to the list of targeted URLs in PretargetingConfig.webTargeting.values.
        targetingMode:
          enumDescriptions:
            - Placeholder for undefined targeting mode.
            - The inclusive list type. Inventory must match an item in this list to be targeted.
            - The exclusive list type. Inventory must not match any item in this list to be targeted.
          enum:
            - TARGETING_MODE_UNSPECIFIED
            - INCLUSIVE
            - EXCLUSIVE
          description: Required. The targeting mode that should be applied to the list of site URLs. If there are existing targeted sites, must be equal to the existing PretargetingConfig.webTargeting.targetingMode or a 400 bad request error will be returned.
          type: string
      type: object
      description: A request to start targeting the provided sites in a specific pretargeting configuration. The pretargeting configuration itself specifies how these sites are targeted in PretargetingConfig.webTargeting.
      id: AddTargetedSitesRequest
    DestinationNotWorkingEvidence:
      description: Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.
      properties:
        redirectionError:
          enumDescriptions:
            - Default value that should never be used.
            - Too many redirect hops.
            - Got a redirect but it was invalid.
            - Got a redirect but it was empty.
            - Unknown redirect error.
          type: string
          enum:
            - REDIRECTION_ERROR_UNSPECIFIED
            - TOO_MANY_REDIRECTS
            - INVALID_REDIRECT
            - EMPTY_REDIRECT
            - REDIRECT_ERROR_UNKNOWN
          description: HTTP redirect chain error.
        urlRejected:
          enumDescriptions:
            - Default value that should never be used.
            - URL rejected because of a malformed request.
            - URL rejected because of a malformed URL.
            - URL rejected because of unknown reason.
          type: string
          description: Rejected because of malformed URLs or invalid requests.
          enum:
            - URL_REJECTED_UNSPECIFIED
            - BAD_REQUEST
            - MALFORMED_URL
            - URL_REJECTED_UNKNOWN
        expandedUrl:
          type: string
          description: The full non-working URL.
        dnsError:
          type: string
          enumDescriptions:
            - Default value that should never be used.
            - DNS name was not found.
            - An internal issue occurred when Google's crawler tried to resolve the DNS entry. This is a Google-internal issue and may not be the result of an issue with the landing page.
          enum:
            - DNS_ERROR_UNSPECIFIED
            - ERROR_DNS
            - GOOGLE_CRAWLER_DNS_ISSUE
          description: DNS lookup errors.
        invalidPage:
          type: string
          enumDescriptions:
            - Default value that should never be used.
            - Page was empty or had an error.
          enum:
            - INVALID_PAGE_UNSPECIFIED
            - EMPTY_OR_ERROR_PAGE
          description: Page was crawled successfully, but was detected as either a page with no content or an error page.
        lastCheckTime:
          type: string
          description: Approximate time when the ad destination was last checked.
          format: google-datetime
        httpError:
          type: integer
          format: int32
          description: HTTP error code (for example, 404 or 5xx)
        platform:
          enumDescriptions:
            - Default value that should never be used.
            - The personal computer platform.
            - The Android platform.
            - The iOS platform.
          type: string
          enum:
            - PLATFORM_UNSPECIFIED
            - PERSONAL_COMPUTER
            - ANDROID
            - IOS
          description: Platform of the non-working URL.
      id: DestinationNotWorkingEvidence
      type: object
    HtmlContent:
      id: HtmlContent
      type: object
      properties:
        height:
          format: int32
          type: integer
          description: The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.
        width:
          type: integer
          format: int32
          description: The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.
        snippet:
          type: string
          description: The HTML snippet that displays the ad when inserted in the web page.
      description: HTML content for a creative.
    PretargetingConfig:
      description: 'Pretargeting configuration: a set of targeting dimensions applied at the pretargeting stage of the RTB funnel. These control which inventory a bidder will receive bid requests for.'
      type: object
      properties:
        includedFormats:
          items:
            enumDescriptions:
              - Placeholder for undefined creative format. This value should not be used.
              - HTML and AMPHTML creatives.
              - VAST video or audio creative.
              - Native creative, including standard and video native ads.
            enum:
              - CREATIVE_FORMAT_UNSPECIFIED
              - HTML
              - VAST
              - NATIVE
            type: string
          type: array
          description: Creative formats included by this configuration. Only bid requests eligible for at least one of the specified creative formats will be sent. An unset value will allow all bid requests to be sent, regardless of format.
        invalidGeoIds:
          items:
            format: int64
            type: string
          readOnly: true
          description: Output only. Existing included or excluded geos that are invalid. Previously targeted geos may become invalid due to privacy restrictions.
          type: array
        interstitialTargeting:
          description: The interstitial targeting specified for this configuration. The unset value will allow bid requests to be sent regardless of whether they are for interstitials or not.
          enumDescriptions:
            - Unspecified interstitial targeting. Represents an interstitial-agnostic selection.
            - Only bid requests for interstitial inventory should be sent.
            - Only bid requests for non-interstitial inventory should be sent.
          enum:
            - INTERSTITIAL_TARGETING_UNSPECIFIED
            - ONLY_INTERSTITIAL_REQUESTS
            - ONLY_NON_INTERSTITIAL_REQUESTS
          type: string
        includedUserIdTypes:
          items:
            enum:
              - USER_ID_TYPE_UNSPECIFIED
              - HOSTED_MATCH_DATA
              - GOOGLE_COOKIE
              - DEVICE_ID
            enumDescriptions:
              - Placeholder for unspecified user identifier.
              - Hosted match data, referring to hosted_match_data in the bid request.
              - Google cookie, referring to google_user_id in the bid request.
              - Mobile device advertising ID.
            type: string
          description: User identifier types included in this configuration. At least one of the user identifier types specified in this list must be available for the bid request to be sent.
          type: array
        includedPlatforms:
          items:
            type: string
            enum:
              - PLATFORM_UNSPECIFIED
              - PERSONAL_COMPUTER
              - PHONE
              - TABLET
              - CONNECTED_TV
            enumDescriptions:
              - Placeholder for an undefined platform. This value should not be used.
              - The personal computer platform.
              - The mobile platform.
              - The tablet platform.
              - The connected TV platform.
          description: The platforms included by this configration. Bid requests for devices with the specified platform types will be sent. An unset value allows all bid requests to be sent, regardless of platform.
          type: array
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - SUSPENDED
          readOnly: true
          type: string
          description: Output only. The state of this pretargeting configuration.
          enumDescriptions:
            - Placeholder for undefined state.
            - This pretargeting configuration is actively being used to filter bid requests.
            - This pretargeting configuration is suspended and not used in serving.
        excludedContentLabelIds:
          type: array
          items:
            format: int64
            type: string
          description: The sensitive content category label IDs excluded in this configuration. Bid requests for inventory with any of the specified content label IDs will not be sent. Refer to this file https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for category IDs.
        includedMobileOperatingSystemIds:
          items:
            type: string
            format: int64
          type: array
          description: The mobile operating systems included in this configuration as defined in https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv
        includedEnvironments:
          description: Environments that are being included. Bid requests will not be sent for a given environment if it is not included. Further restrictions can be applied to included environments to target only a subset of its inventory. An unset value includes all environments.
          items:
            enumDescriptions:
              - Placeholder for unspecified environment. This value should not be used.
              - App environment.
              - Web environment.
            enum:
              - ENVIRONMENT_UNSPECIFIED
              - APP
              - WEB
            type: string
          type: array
        webTargeting:
          description: Targeting on a subset of site inventory. If WEB is listed in included_environments, the specified targeting is applied. A maximum of 50,000 site URLs can be targeted. An unset value for targeting allows all web-based bid requests to be sent. Sites can either be targeting positively (bid requests will be sent only if the destination site is listed in the targeting dimension) or negatively (bid requests will be sent only if the destination site is not listed in the pretargeting configuration).
          $ref: '#/components/schemas/StringTargetingDimension'
        maximumQps:
          description: The maximum QPS threshold for this configuration. The bidder should receive no more than this number of bid requests matching this configuration per second across all their bidding endpoints among all trading locations. Further information available at https://developers.google.com/authorized-buyers/rtb/peer-guide
          format: int64
          type: string
        publisherTargeting:
          description: Targeting on a subset of publisher inventory. Publishers can either be targeted positively (bid requests will be sent only if the publisher is listed in the targeting dimension) or negatively (bid requests will be sent only if the publisher is not listed in the targeting dimension). A maximum of 10,000 publisher IDs can be targeted. Publisher IDs are found in [ads.txt](https://iabtechlab.com/ads-txt/) / [app-ads.txt](https://iabtechlab.com/app-ads-txt/) and in bid requests in the `BidRequest.publisher_id` field on the [Google RTB protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) or the `BidRequest.site.publisher.id` / `BidRequest.app.publisher.id` field on the [OpenRTB protocol](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto). Publisher IDs will be returned in the order that they were entered.
          $ref: '#/components/schemas/StringTargetingDimension'
        displayName:
          type: string
          description: The diplay name associated with this configuration. This name must be unique among all the pretargeting configurations a bidder has.
        name:
          description: Output only. Name of the pretargeting configuration that must follow the pattern `bidders/{bidder_account_id}/pretargetingConfigs/{config_id}`
          readOnly: true
          type: string
        verticalTargeting:
          $ref: '#/components/schemas/NumericTargetingDimension'
          description: The verticals included or excluded in this configuration as defined in https://developers.google.com/authorized-buyers/rtb/downloads/publisher-verticals
        appTargeting:
          description: Targeting on a subset of app inventory. If APP is listed in targeted_environments, the specified targeting is applied. A maximum of 30,000 app IDs can be targeted. An unset value for targeting allows all app-based bid requests to be sent. Apps can either be targeting positively (bid requests will be sent only if the destination app is listed in the targeting dimension) or negatively (bid requests will be sent only if the destination app is not listed in the targeting dimension).
          $ref: '#/components/schemas/AppTargeting'
        billingId:
          description: Output only. The identifier that corresponds to this pretargeting configuration that helps buyers track and attribute their spend across their own arbitrary divisions. If a bid request matches more than one configuration, the buyer chooses which billing_id to attribute each of their bids.
          readOnly: true
          format: int64
          type: string
        userListTargeting:
          description: The remarketing lists included or excluded in this configuration as defined in UserList.
          $ref: '#/components/schemas/NumericTargetingDimension'
        allowedUserTargetingModes:
          description: Targeting modes included by this configuration. A bid request must allow all the specified targeting modes. An unset value allows all bid requests to be sent, regardless of which targeting modes they allow.
          type: array
          items:
            enum:
              - USER_TARGETING_MODE_UNSPECIFIED
              - REMARKETING_ADS
              - INTEREST_BASED_TARGETING
            enumDescriptions:
              - Placeholder for undefined user targeting mode.
              - Remarketing ads are allowed to serve.
              - Ads based on user interest category targeting are allowed to serve.
            type: string
        minimumViewabilityDecile:
          description: The targeted minimum viewability decile, ranging in values [0, 10]. A value of 5 means that the configuration will only match adslots for which we predict at least 50% viewability. Values > 10 will be rounded down to 10. An unset value or a value of 0 indicates that bid requests will be sent regardless of viewability.
          format: int32
          type: integer
        includedCreativeDimensions:
          description: Creative dimensions included by this configuration. Only bid requests eligible for at least one of the specified creative dimensions will be sent. An unset value allows all bid requests to be sent, regardless of creative dimension.
          items:
            $ref: '#/components/schemas/CreativeDimensions'
          type: array
        geoTargeting:
          description: The geos included or excluded in this configuration defined in https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv
          $ref: '#/components/schemas/NumericTargetingDimension'
        includedLanguages:
          description: The languages included in this configuration, represented by their language code. See https://developers.google.com/adwords/api/docs/appendix/languagecodes.
          items:
            type: string
          type: array
      id: PretargetingConfig
    ListPublisherConnectionsResponse:
      description: A response to a request for listing publisher connections.
      type: object
      properties:
        publisherConnections:
          type: array
          items:
            $ref: '#/components/schemas/PublisherConnection'
          description: The list of publisher connections.
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListPublisherConnectionsRequest.pageToken field in the subsequent call to the `ListPublisherConnections` method to retrieve the next page of results.
          type: string
      id: ListPublisherConnectionsResponse
    DestinationUrlEvidence:
      description: The full landing page URL of the destination.
      type: object
      properties:
        destinationUrl:
          description: The full landing page URL of the destination.
          type: string
      id: DestinationUrlEvidence
    AdvertiserAndBrand:
      type: object
      properties:
        brandId:
          type: string
          description: Detected brand ID or zero if no brand has been detected. See https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list of possible values. Can be used to filter the response of the creatives.list method.
          format: int64
        brandName:
          description: Brand name. Can be used to filter the response of the creatives.list method.
          type: string
        advertiserName:
          type: string
          description: Advertiser name. Can be used to filter the response of the creatives.list method.
        advertiserId:
          type: string
          format: int64
          description: See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for the list of possible values. Can be used to filter the response of the creatives.list method.
      description: Detected advertiser and brand information.
      id: AdvertiserAndBrand
    DownloadSizeEvidence:
      type: object
      id: DownloadSizeEvidence
      properties:
        totalDownloadSizeKb:
          type: integer
          description: Total download size (in kilobytes) for all the resources in the creative.
          format: int32
        topUrlDownloadSizeBreakdowns:
          type: array
          description: Download size broken down by URLs with the top download size.
          items:
            $ref: '#/components/schemas/UrlDownloadSize'
      description: Total download size and URL-level download size breakdown for resources in a creative.
    PolicyTopicEvidence:
      description: Evidence associated with a policy topic entry.
      properties:
        destinationNotWorking:
          description: The creative's destination URL did not function properly or was incorrectly set up.
          $ref: '#/components/schemas/DestinationNotWorkingEvidence'
        destinationNotCrawlable:
          description: The creative's destination URL was not crawlable by Google.
          $ref: '#/components/schemas/DestinationNotCrawlableEvidence'
        destinationUrl:
          description: URL of the actual landing page.
          $ref: '#/components/schemas/DestinationUrlEvidence'
        httpCall:
          $ref: '#/components/schemas/HttpCallEvidence'
          description: HTTP calls made by the creative that resulted in policy violations.
        downloadSize:
          $ref: '#/components/schemas/DownloadSizeEvidence'
          description: Total download size and URL-level download size breakdown for resources in a creative.
        domainCall:
          description: Number of HTTP calls made by the creative, broken down by domain.
          $ref: '#/components/schemas/DomainCallEvidence'
        httpCookie:
          description: Evidence for HTTP cookie-related policy violations.
          $ref: '#/components/schemas/HttpCookieEvidence'
      id: PolicyTopicEvidence
      type: object
    PolicyTopicEntry:
      description: Each policy topic entry will represent a violation of a policy topic for a creative, with the policy topic information and optional evidence for the policy violation.
      properties:
        policyTopic:
          type: string
          description: Policy topic this entry refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular API version and may change at any time. Can be used to filter the response of the creatives.list method
        helpCenterUrl:
          description: URL of the help center article describing this policy topic.
          type: string
        evidences:
          description: Pieces of evidence associated with this policy topic entry.
          items:
            $ref: '#/components/schemas/PolicyTopicEvidence'
          type: array
      type: object
      id: PolicyTopicEntry
    BatchApprovePublisherConnectionsRequest:
      description: A request to approve a batch of publisher connections.
      type: object
      id: BatchApprovePublisherConnectionsRequest
      properties:
        names:
          items:
            type: string
          description: Required. The names of the publishers with which connections will be approved. In the pattern `bidders/{bidder}/publisherConnections/{publisher}` where `{bidder}` is the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
          type: array
    GetRemarketingTagResponse:
      properties:
        snippet:
          description: A HTML tag that can be placed on the advertiser's page to add users to a user list. For more information and code samples on using snippet on your website refer to [Tag your site for remarketing]( https://support.google.com/google-ads/answer/2476688).
          type: string
      id: GetRemarketingTagResponse
      type: object
      description: Response for a request to get remarketing tag.
    AddTargetedPublishersRequest:
      type: object
      properties:
        publisherIds:
          type: array
          description: A list of publisher IDs to target in the pretargeting configuration. These values will be added to the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details.
          items:
            type: string
        targetingMode:
          type: string
          enum:
            - TARGETING_MODE_UNSPECIFIED
            - INCLUSIVE
            - EXCLUSIVE
          enumDescriptions:
            - Placeholder for undefined targeting mode.
            - The inclusive list type. Inventory must match an item in this list to be targeted.
            - The exclusive list type. Inventory must not match any item in this list to be targeted.
          description: Required. The targeting mode that should be applied to the list of publisher IDs. If are existing publisher IDs, must be equal to the existing PretargetingConfig.publisherTargeting.targetingMode or a 400 bad request error will be returned.
      id: AddTargetedPublishersRequest
      description: A request to start targeting the provided publishers in a specific pretargeting configuration. The pretargeting configuration itself specifies how these publishers are targeted in PretargetingConfig.publisherTargeting.
    OpenUserListRequest:
      id: OpenUserListRequest
      type: object
      description: A request to open a specified user list.
      properties: {}
    Date:
      id: Date
      properties:
        month:
          format: int32
          type: integer
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
      type: object
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
    ListEndpointsResponse:
      id: ListEndpointsResponse
      type: object
      description: A response containing bidder endpoints.
      properties:
        endpoints:
          description: List of bidder endpoints.
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
        nextPageToken:
          description: A token which can be passed to a subsequent call to the `ListEndpoints` method to retrieve the next page of results in ListEndpointsRequest.pageToken.
          type: string
    PolicyCompliance:
      id: PolicyCompliance
      description: Policy compliance of the creative for a transaction type or a region.
      properties:
        status:
          description: Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.
          enum:
            - STATUS_UNSPECIFIED
            - PENDING_REVIEW
            - DISAPPROVED
            - APPROVED
            - CERTIFICATE_REQUIRED
          type: string
          enumDescriptions:
            - Default value that should never be used.
            - Creative is pending review.
            - Creative cannot serve.
            - Creative is approved.
            - 'Certificates are required for the creative to be served in some regions. For more information about creative certification, refer to: https://support.google.com/authorizedbuyers/answer/7450776'
        topics:
          items:
            $ref: '#/components/schemas/PolicyTopicEntry'
          description: Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED.
          type: array
      type: object
    MediaFile:
      id: MediaFile
      description: Information about each media file in the VAST.
      type: object
      properties:
        mimeType:
          description: The MIME type of this media file. Can be used to filter the response of the creatives.list method.
          enum:
            - VIDEO_MIME_TYPE_UNSPECIFIED
            - MIME_VIDEO_XFLV
            - MIME_VIDEO_WEBM
            - MIME_VIDEO_MP4
            - MIME_VIDEO_OGG
            - MIME_VIDEO_YT_HOSTED
            - MIME_VIDEO_X_MS_WMV
            - MIME_VIDEO_3GPP
            - MIME_VIDEO_MOV
            - MIME_APPLICATION_SWF
            - MIME_APPLICATION_SURVEY
            - MIME_APPLICATION_JAVASCRIPT
            - MIME_APPLICATION_SILVERLIGHT
            - MIME_APPLICATION_MPEGURL
            - MIME_APPLICATION_MPEGDASH
            - MIME_AUDIO_MP4A
            - MIME_AUDIO_MP3
            - MIME_AUDIO_OGG
          type: string
          enumDescriptions:
            - Default value that should never be used.
            - Flash container.
            - WebM container assuming VP9 codec.
            - MPEG-4 container typically with H.264 codec.
            - Ogg container assuming Theora codec.
            - Video files hosted on YouTube.
            - Windows Media Video Codec.
            - 3GPP container format used on 3G phones.
            - Quicktime container format.
            - Shockwave Flash (used for VPAID ads).
            - Properties of VAST served by consumer survey.
            - JavaScript (used for VPAID ads).
            - Silverlight (used for VPAID ads).
            - HLS/M3U8.
            - DASH.
            - MPEG-4 audio format.
            - MPEG-3 audio format.
            - Ogg audio format
        bitrate:
          description: Bitrate of the video file, in Kbps. Can be used to filter the response of the creatives.list method.
          format: int64
          type: string
    StringTargetingDimension:
      type: object
      properties:
        targetingMode:
          enumDescriptions:
            - Placeholder for undefined targeting mode.
            - The inclusive list type. Inventory must match an item in this list to be targeted.
            - The exclusive list type. Inventory must not match any item in this list to be targeted.
          type: string
          description: How the items in this list should be targeted.
          enum:
            - TARGETING_MODE_UNSPECIFIED
            - INCLUSIVE
            - EXCLUSIVE
        values:
          description: The values specified.
          type: array
          items:
            type: string
      description: Generic targeting with string values used in app, website and publisher targeting.
      id: StringTargetingDimension
    NumericTargetingDimension:
      id: NumericTargetingDimension
      properties:
        includedIds:
          description: The IDs included in a configuration.
          items:
            type: string
            format: int64
          type: array
        excludedIds:
          description: The IDs excluded in a configuration.
          items:
            type: string
            format: int64
          type: array
      description: Generic targeting used for targeting dimensions that contain a list of included and excluded numeric IDs used in app, user list, geo, and vertical id targeting.
      type: object
    AppTargeting:
      type: object
      description: A subset of app inventory to target. Bid requests that match criteria in at least one of the specified dimensions will be sent.
      properties:
        mobileAppTargeting:
          $ref: '#/components/schemas/StringTargetingDimension'
          description: Targeted app IDs. App IDs can refer to those found in an app store or ones that are not published in an app store. A maximum of 30,000 app IDs can be targeted.
        mobileAppCategoryTargeting:
          description: Lists of included and excluded mobile app categories as defined in https://developers.google.com/adwords/api/docs/appendix/mobileappcategories.csv.
          $ref: '#/components/schemas/NumericTargetingDimension'
      id: AppTargeting
    AdTechnologyProviders:
      id: AdTechnologyProviders
      type: object
      description: The list of detected Ad Technology Providers for this creative. Bids placed for inventory that will serve to EEA or UK users are expected to comply with GDPR requirements. You must ensure that the creatives used in such bids should contain only user consented ad technology providers as indicated in the bid request. Google reserves the right to filter non-compliant bids. User consented ad technology providers can be found in the [Google Protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) with the `BidRequest.adslot.consented_providers_settings` field, and can be found as an [OpenRTB extension](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto) with the `BidRequest.user.ext.consented_providers_settings` and `BidRequest.user.ext.consent` fields. See https://support.google.com/authorizedbuyers/answer/9789378 for additional information about the Google TCF v2 integration.
      properties:
        unidentifiedProviderDomains:
          items:
            type: string
          description: Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids.
          type: array
        detectedProviderIds:
          type: array
          items:
            format: int64
            type: string
          description: The detected [Google Ad Tech Providers (ATP)](https://support.google.com/admanager/answer/9012903) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider.
        detectedGvlIds:
          description: The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors.
          type: array
          items:
            format: int64
            type: string
    UrlRestriction:
      properties:
        url:
          type: string
          description: Required. The URL to use for applying the restriction on the user list.
        endDate:
          $ref: '#/components/schemas/Date'
          description: End date (if specified) of the URL restriction. End date should be later than the start date for the date range to be valid.
        startDate:
          $ref: '#/components/schemas/Date'
          description: Start date (if specified) of the URL restriction.
        restrictionType:
          type: string
          enum:
            - RESTRICTION_TYPE_UNSPECIFIED
            - CONTAINS
            - EQUALS
            - STARTS_WITH
            - ENDS_WITH
            - DOES_NOT_EQUAL
            - DOES_NOT_CONTAIN
            - DOES_NOT_START_WITH
            - DOES_NOT_END_WITH
          enumDescriptions:
            - Default value that should never be used.
            - The tag URL (as recorded by the pixel callback) contains the specified URL.
            - The tag URL (as recorded by the pixel callback) exactly matches the specified URL.
            - The tag URL (as recorded by the pixel callback) starts with the specified URL.
            - The tag URL (as recorded by the pixel callback) ends with the specified URL.
            - The tag URL (as recorded by the pixel callback) does not equal the specified URL.
            - The tag URL (as recorded by the pixel callback) does not contain the specified URL.
            - The tag URL (as recorded by the pixel callback) does not start with the specified URL.
            - The tag URL (as recorded by the pixel callback) does not end with the specified URL.
          description: The restriction type for the specified URL.
      description: Represents the URL restriction (for the URL captured by the pixel callback) for a user list.
      id: UrlRestriction
      type: object
    PublisherConnection:
      description: An Open Bidding exchange's connection to a publisher. This is initiated by the publisher for the bidder to review. If approved by the bidder, this means that the bidder agrees to receive bid requests from the publisher.
      properties:
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time at which the publisher initiated a connection with the bidder (irrespective of if or when the bidder approves it). This is subsequently updated if the publisher revokes and re-initiates the connection.
        biddingState:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - REJECTED
            - APPROVED
          type: string
          enumDescriptions:
            - An unspecified bidding status.
            - Indicates a request for connection from the publisher that the bidder needs to review.
            - Indicates that the publisher was rejected.
            - Indicates that the publisher was approved.
          description: Whether the publisher has been approved by the bidder.
        displayName:
          description: Output only. Publisher display name.
          type: string
          readOnly: true
        publisherPlatform:
          enumDescriptions:
            - An unspecified publisher platform.
            - A Google Ad Manager publisher.
            - An AdMob publisher.
          type: string
          readOnly: true
          description: Output only. Whether the publisher is an Ad Manager or AdMob publisher.
          enum:
            - PUBLISHER_PLATFORM_UNSPECIFIED
            - GOOGLE_AD_MANAGER
            - ADMOB
        name:
          type: string
          description: Output only. Name of the publisher connection. This follows the pattern `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}` represents the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
          readOnly: true
      type: object
      id: PublisherConnection
    ListCreativesResponse:
      id: ListCreativesResponse
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListCreativesRequest.pageToken field in the subsequent call to the `ListCreatives` method to retrieve the next page of results.
          type: string
        creatives:
          items:
            $ref: '#/components/schemas/Creative'
          description: The list of creatives.
          type: array
      type: object
      description: A response for listing creatives.
    BatchRejectPublisherConnectionsResponse:
      properties:
        publisherConnections:
          items:
            $ref: '#/components/schemas/PublisherConnection'
          description: The publisher connections that have been rejected.
          type: array
      description: A response for the request to reject a batch of publisher connections.
      type: object
      id: BatchRejectPublisherConnectionsResponse
    VideoContent:
      type: object
      description: Video content for a creative.
      id: VideoContent
      properties:
        videoUrl:
          type: string
          description: The URL to fetch a video ad.
        videoVastXml:
          type: string
          description: The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.
        videoMetadata:
          readOnly: true
          $ref: '#/components/schemas/VideoMetadata'
          description: Output only. Video metadata.
    VideoMetadata:
      type: object
      description: Video metadata for a creative.
      id: VideoMetadata
      properties:
        isValidVast:
          description: Is this a valid VAST ad? Can be used to filter the response of the creatives.list method.
          type: boolean
        isVpaid:
          description: Is this a VPAID ad? Can be used to filter the response of the creatives.list method.
          type: boolean
        duration:
          description: The duration of the ad. Can be used to filter the response of the creatives.list method.
          type: string
          format: google-duration
        skipOffset:
          format: google-duration
          description: The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method.
          type: string
        mediaFiles:
          type: array
          description: The list of all media files declared in the VAST. If there are multiple VASTs in a wrapper chain, this includes the media files from the deepest one in the chain.
          items:
            $ref: '#/components/schemas/MediaFile'
        vastVersion:
          enumDescriptions:
            - Default value that should never be used.
            - VAST 1.0
            - VAST 2.0
            - VAST 3.0
            - VAST 4.0
          type: string
          enum:
            - VAST_VERSION_UNSPECIFIED
            - VAST_VERSION_1_0
            - VAST_VERSION_2_0
            - VAST_VERSION_3_0
            - VAST_VERSION_4_0
          description: The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method.
    WatchCreativesResponse:
      properties:
        subscription:
          description: The Pub/Sub subscription that can be used to pull creative status notifications. This would be of the format `projects/{project_id}/subscriptions/{subscription_id}`. Subscription is created with pull delivery. All service accounts belonging to the bidder will have read access to this subscription. Subscriptions that are inactive for more than 90 days will be disabled. Use watchCreatives to re-enable the subscription.
          type: string
        topic:
          type: string
          description: The Pub/Sub topic that will be used to publish creative serving status notifications. This would be of the format `projects/{project_id}/topics/{topic_id}`.
      id: WatchCreativesResponse
      description: A response for the request to receive push notification when a bidder's creatives change status.
      type: object
    WatchCreativesRequest:
      properties: {}
      id: WatchCreativesRequest
      description: A request to receive push notifications when any of the creatives belonging to the bidder changes status.
      type: object
    CreativeDimensions:
      id: CreativeDimensions
      type: object
      description: The dimensions of a creative. This applies to only HTML and Native creatives.
      properties:
        height:
          format: int64
          type: string
          description: The height of the creative in pixels.
        width:
          type: string
          format: int64
          description: The width of the creative in pixels.
    CreativeServingDecision:
      properties:
        chinaPolicyCompliance:
          description: The policy compliance of this creative in China. When approved or disapproved, this applies to both deals and open auction in China. When pending review, this creative is allowed to serve for deals but not for open auction.
          $ref: '#/components/schemas/PolicyCompliance'
        detectedAttributes:
          type: array
          description: Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
          items:
            type: string
            enum:
              - ATTRIBUTE_UNSPECIFIED
              - IMAGE_RICH_MEDIA
              - ADOBE_FLASH_FLV
              - IS_TAGGED
              - IS_COOKIE_TARGETED
              - IS_USER_INTEREST_TARGETED
              - EXPANDING_DIRECTION_NONE
              - EXPANDING_DIRECTION_UP
              - EXPANDING_DIRECTION_DOWN
              - EXPANDING_DIRECTION_LEFT
              - EXPANDING_DIRECTION_RIGHT
              - EXPANDING_DIRECTION_UP_LEFT
              - EXPANDING_DIRECTION_UP_RIGHT
              - EXPANDING_DIRECTION_DOWN_LEFT
              - EXPANDING_DIRECTION_DOWN_RIGHT
              - CREATIVE_TYPE_HTML
              - CREATIVE_TYPE_VAST_VIDEO
              - EXPANDING_DIRECTION_UP_OR_DOWN
              - EXPANDING_DIRECTION_LEFT_OR_RIGHT
              - EXPANDING_DIRECTION_ANY_DIAGONAL
              - EXPANDING_ACTION_ROLLOVER_TO_EXPAND
              - INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH
              - RICH_MEDIA_CAPABILITY_TYPE_MRAID
              - RICH_MEDIA_CAPABILITY_TYPE_FLASH
              - RICH_MEDIA_CAPABILITY_TYPE_HTML5
              - SKIPPABLE_INSTREAM_VIDEO
              - RICH_MEDIA_CAPABILITY_TYPE_SSL
              - RICH_MEDIA_CAPABILITY_TYPE_NON_SSL
              - RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL
              - NON_SKIPPABLE_INSTREAM_VIDEO
              - NATIVE_ELIGIBILITY_ELIGIBLE
              - NON_VPAID
              - NATIVE_ELIGIBILITY_NOT_ELIGIBLE
              - ANY_INTERSTITIAL
              - NON_INTERSTITIAL
              - IN_BANNER_VIDEO
              - RENDERING_SIZELESS_ADX
              - OMSDK_1_0
            enumDescriptions:
              - Do not use. This is a placeholder value only.
              - The creative is of type image/rich media. For pretargeting.
              - The creative is of video type Adobe Flash FLV. For pretargeting.
              - The creative is tagged.
              - The creative is cookie targeted.
              - The creative is user interest targeted.
              - The creative does not expand.
              - The creative expands up.
              - The creative expands down.
              - The creative expands left.
              - The creative expands right.
              - The creative expands up and left.
              - The creative expands up and right.
              - The creative expands down and left.
              - The creative expands down and right.
              - The creative type is HTML.
              - The creative type is VAST video.
              - The creative expands up or down.
              - The creative expands left or right.
              - The creative expands on any diagonal.
              - The creative expands when rolled over.
              - The instream vast video type is vpaid flash.
              - The creative is MRAID.
              - The creative is Flash.
              - The creative is HTML5.
              - The creative has an instream VAST video type of skippable instream video. For pretargeting.
              - The creative is SSL.
              - The creative is non-SSL.
              - The creative is an interstitial.
              - The creative has an instream VAST video type of non-skippable instream video. For pretargeting.
              - The creative is eligible for native.
              - The creative has an instream VAST video type of non-VPAID. For pretargeting.
              - The creative is not eligible for native.
              - The creative has an interstitial size of any interstitial. For pretargeting.
              - The creative has an interstitial size of non interstitial. For pretargeting.
              - The video type is in-banner video.
              - The creative can dynamically resize to fill a variety of slot sizes.
              - The open measurement SDK is supported.
        detectedClickThroughUrls:
          items:
            type: string
          description: The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method.
          type: array
        detectedLanguages:
          items:
            type: string
          description: The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method.
          type: array
        dealsPolicyCompliance:
          $ref: '#/components/schemas/PolicyCompliance'
          description: Policy compliance of this creative when bidding on Programmatic Guaranteed and Preferred Deals (outside of Russia and China).
        platformPolicyCompliance:
          description: 'Policy compliance of this creative when bidding in Open Bidding (outside of Russia and China). For the list of platform policies, see: https://support.google.com/platformspolicy/answer/3013851.'
          $ref: '#/components/schemas/PolicyCompliance'
        adTechnologyProviders:
          $ref: '#/components/schemas/AdTechnologyProviders'
          description: The detected ad technology providers.
        networkPolicyCompliance:
          $ref: '#/components/schemas/PolicyCompliance'
          description: Policy compliance of this creative when bidding in open auction, private auction, or auction packages (outside of Russia and China).
        detectedVendorIds:
          type: array
          description: IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
          items:
            type: integer
            format: int32
        detectedSensitiveCategories:
          items:
            format: int32
            type: integer
          description: Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.
          type: array
        detectedProductCategories:
          type: array
          items:
            type: integer
            format: int32
          description: Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method.
        lastStatusUpdate:
          description: The last time the creative status was updated. Can be used to filter the response of the creatives.list method.
          format: google-datetime
          type: string
        detectedAdvertisers:
          description: Detected advertisers and brands.
          items:
            $ref: '#/components/schemas/AdvertiserAndBrand'
          type: array
        detectedDomains:
          type: array
          items:
            type: string
          description: The detected domains for this creative.
        russiaPolicyCompliance:
          $ref: '#/components/schemas/PolicyCompliance'
          description: The policy compliance of this creative in Russia. When approved or disapproved, this applies to both deals and open auction in Russia. When pending review, this creative is allowed to serve for deals but not for open auction.
      type: object
      id: CreativeServingDecision
      description: Top level status and detected attributes of a creative.
    Buyer:
      description: RTB Buyer account information.
      id: Buyer
      type: object
      properties:
        activeCreativeCount:
          type: string
          readOnly: true
          format: int64
          description: Output only. The number of creatives that this buyer submitted through the API or bid with in the last 30 days. This is counted against the maximum number of active creatives.
        name:
          type: string
          description: Output only. Name of the buyer resource that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` is the account ID of the buyer account whose information is to be received. One can get their account ID on the Authorized Buyers or Open Bidding UI, or by contacting their Google account manager.
          readOnly: true
        displayName:
          description: Output only. The diplay name associated with this buyer account, as visible to sellers.
          readOnly: true
          type: string
        maximumActiveCreativeCount:
          type: string
          format: int64
          description: Output only. The maximum number of active creatives that this buyer can have.
          readOnly: true
        bidder:
          readOnly: true
          description: Output only. The name of the bidder resource that is responsible for receiving bidding traffic for this account. The bidder name must follow the pattern `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of the bidder receiving traffic for this buyer.
          type: string
        billingIds:
          items:
            type: string
          type: array
          readOnly: true
          description: 'Output only. A list of billing IDs associated with this account. These IDs appear on: 1. A bid request, to signal which buyers are eligible to bid on a given opportunity, and which pretargeting configurations were matched for each eligible buyer. 2. The bid response, to attribute a winning impression to a specific account for billing, reporting, policy and publisher block enforcement.'
    DomainCalls:
      properties:
        httpCallCount:
          description: Number of HTTP calls made to the domain.
          type: integer
          format: int32
        domain:
          type: string
          description: The domain name.
      type: object
      description: The number of HTTP calls made to the given domain.
      id: DomainCalls
    CloseUserListRequest:
      id: CloseUserListRequest
      properties: {}
      type: object
      description: A request to close a specified user list.
    DomainCallEvidence:
      description: Number of HTTP calls made by a creative, broken down by domain.
      properties:
        totalHttpCallCount:
          type: integer
          format: int32
          description: The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains.
        topHttpCallDomains:
          description: Breakdown of the most frequent domains called through HTTP by the creative.
          type: array
          items:
            $ref: '#/components/schemas/DomainCalls'
      type: object
      id: DomainCallEvidence
    UserList:
      type: object
      properties:
        membershipDurationDays:
          type: string
          description: Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive.
          format: int64
        name:
          type: string
          readOnly: true
          description: Output only. Name of the user list that must follow the pattern `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64 identifier assigned by Google to uniquely identify a user list.
        urlRestriction:
          $ref: '#/components/schemas/UrlRestriction'
          description: Required. The URL restriction for the user list.
        status:
          enumDescriptions:
            - Default value that should never be used.
            - New users can be added to the user list.
            - New users cannot be added to the user list.
          readOnly: true
          enum:
            - STATUS_UNSPECIFIED
            - OPEN
            - CLOSED
          type: string
          description: Output only. The status of the user list. A new user list starts out as open.
        description:
          type: string
          description: The description for the user list.
        displayName:
          type: string
          description: Required. Display name of the user list. This must be unique across all user lists for a given account.
      description: Represents an Authorized Buyers user list. Authorized Buyers can create/update/list user lists. Once a user list is created in the system, Authorized Buyers can add users to the user list using the bulk uploader API. Alternatively, users can be added by hosting a tag on the advertiser's page.
      id: UserList
    NativeContent:
      properties:
        image:
          description: A large image.
          $ref: '#/components/schemas/Image'
        callToAction:
          description: A label for the button that the user is supposed to click.
          type: string
        videoUrl:
          description: The URL to fetch a native video ad.
          type: string
        starRating:
          format: double
          description: The app rating in the app store. Must be in the range [0-5].
          type: number
        clickTrackingUrl:
          description: The URL to use for click tracking.
          type: string
        priceDisplayText:
          type: string
          description: The price of the promoted app including currency info.
        logo:
          description: A smaller image, for the advertiser's logo.
          $ref: '#/components/schemas/Image'
        videoVastXml:
          type: string
          description: The contents of a VAST document for a native video ad.
        clickLinkUrl:
          type: string
          description: The URL that the browser/SDK will load when the user clicks the ad.
        appIcon:
          $ref: '#/components/schemas/Image'
          description: The app icon, for app download ads.
        advertiserName:
          description: The name of the advertiser or sponsor, to be displayed in the ad creative.
          type: string
        body:
          type: string
          description: A long description of the ad.
        headline:
          description: A short title for the ad.
          type: string
      type: object
      description: Native content for a creative.
      id: NativeContent
    Bidder:
      description: Bidder settings.
      properties:
        cookieMatchingNetworkId:
          readOnly: true
          type: string
          description: Output only. The buyer's network ID used for cookie matching. This ID corresponds to the `google_nid` parameter in the URL used in cookie match requests. Refer to https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
        dealsBillingId:
          readOnly: true
          description: Output only. The billing ID for the deals pretargeting config. This billing ID is sent on the bid request for guaranteed and nonguaranteed deals matched in pretargeting.
          type: string
        bypassNonguaranteedDealsPretargeting:
          readOnly: true
          description: Output only. An option to bypass pretargeting for private auctions and preferred deals. When true, bid requests from these nonguaranteed deals will always be sent. When false, bid requests will be subject to regular pretargeting configurations. Programmatic Guaranteed deals will always be sent to the bidder, regardless of the value for this flag. Auction packages are not impacted by this value and are subject to the regular pretargeting configurations.
          type: boolean
        cookieMatchingUrl:
          description: Output only. The base URL used in cookie match requests. Refer to https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.
          readOnly: true
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. Name of the bidder resource that must follow the pattern `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of the bidder whose information is to be received. One can get their account ID on the Authorized Buyers or Open Bidding UI, or by contacting their Google account manager.
      id: Bidder
      type: object
    HttpCookieEvidence:
      description: Evidence for HTTP cookie-related policy violations.
      id: HttpCookieEvidence
      type: object
      properties:
        maxCookieCount:
          format: int32
          type: integer
          description: The largest number of cookies set by a creative. If this field is set, cookie_names above will be set to the cookie names of top domains with the largest number of cookies. This field will only be set for TOO_MANY_COOKIES policy.
        cookieNames:
          description: Names of cookies that violate Google policies. For TOO_MANY_COOKIES policy, this will be the cookie names of top domains with the largest number of cookies. For other policies, this will be all the cookie names that violate the policy.
          type: array
          items:
            type: string
    BatchApprovePublisherConnectionsResponse:
      id: BatchApprovePublisherConnectionsResponse
      description: A response for the request to approve a batch of publisher connections.
      type: object
      properties:
        publisherConnections:
          items:
            $ref: '#/components/schemas/PublisherConnection'
          type: array
          description: The publisher connections that have been approved.
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      id: Empty
    AddTargetedAppsRequest:
      properties:
        appIds:
          type: array
          description: A list of app IDs to target in the pretargeting configuration. These values will be added to the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values.
          items:
            type: string
        targetingMode:
          enum:
            - TARGETING_MODE_UNSPECIFIED
            - INCLUSIVE
            - EXCLUSIVE
          description: Required. The targeting mode that should be applied to the list of app IDs. If there are existing targeted app IDs, must be equal to the existing PretargetingConfig.appTargeting.mobileAppTargeting.targetingMode or a 400 bad request error will be returned.
          enumDescriptions:
            - Placeholder for undefined targeting mode.
            - The inclusive list type. Inventory must match an item in this list to be targeted.
            - The exclusive list type. Inventory must not match any item in this list to be targeted.
          type: string
      id: AddTargetedAppsRequest
      description: A request to start targeting the provided app IDs in a specific pretargeting configuration. The pretargeting configuration itself specifies how these apps are targeted. in PretargetingConfig.appTargeting.mobileAppTargeting.
      type: object
    HttpCallEvidence:
      type: object
      id: HttpCallEvidence
      properties:
        urls:
          description: URLs of HTTP calls made by the creative.
          type: array
          items:
            type: string
      description: HTTP calls made by a creative that resulted in policy violations.
    RemoveTargetedSitesRequest:
      id: RemoveTargetedSitesRequest
      type: object
      description: A request to stop targeting sites in a specific pretargeting configuration. The pretargeting configuration itself specifies how these sites are targeted in PretargetingConfig.webTargeting.
      properties:
        sites:
          items:
            type: string
          type: array
          description: A list of site URLs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted URLs in PretargetingConfig.webTargeting.values.
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/realtime-bidding: See, create, edit, and delete your Authorized Buyers and Open Bidding account entities
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    creatives:
      id: googleads.realtimebidding.creatives
      name: creatives
      title: Creatives
      methods:
        buyers_creatives_create:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1creatives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_creatives_list:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1creatives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_creatives_get:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1creatives~1{creativesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_creatives_patch:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1creatives~1{creativesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_creatives_list:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1creatives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_creatives_watch:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1creatives:watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/creatives/methods/buyers_creatives_get'
          - $ref: '#/components/x-stackQL-resources/creatives/methods/buyers_creatives_list'
          - $ref: '#/components/x-stackQL-resources/creatives/methods/bidders_creatives_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/creatives/methods/buyers_creatives_create'
        update: []
        delete: []
    user_lists:
      id: googleads.realtimebidding.user_lists
      name: user_lists
      title: User_lists
      methods:
        buyers_userLists_close:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1userLists~1{userListsId}:close/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_userLists_open:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1userLists~1{userListsId}:open/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_userLists_list:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1userLists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_userLists_create:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1userLists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_userLists_update:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1userLists~1{userListsId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        buyers_userLists_get:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1userLists~1{userListsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_lists/methods/buyers_userLists_get'
          - $ref: '#/components/x-stackQL-resources/user_lists/methods/buyers_userLists_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/user_lists/methods/buyers_userLists_create'
        update: []
        delete: []
    user_lists_remarketing_tag:
      id: googleads.realtimebidding.user_lists_remarketing_tag
      name: user_lists_remarketing_tag
      title: User_lists_remarketing_tag
      methods:
        buyers_userLists_getRemarketingTag:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}~1userLists~1{userListsId}:getRemarketingTag/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_lists_remarketing_tag/methods/buyers_userLists_getRemarketingTag'
        insert: []
        update: []
        delete: []
    buyers_remarketing_tag:
      id: googleads.realtimebidding.buyers_remarketing_tag
      name: buyers_remarketing_tag
      title: Buyers_remarketing_tag
      methods:
        buyers_getRemarketingTag:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}:getRemarketingTag/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buyers_remarketing_tag/methods/buyers_getRemarketingTag'
        insert: []
        update: []
        delete: []
    buyers:
      id: googleads.realtimebidding.buyers
      name: buyers
      title: Buyers
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1buyers~1{buyersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1buyers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buyers/methods/get'
          - $ref: '#/components/x-stackQL-resources/buyers/methods/list'
        insert: []
        update: []
        delete: []
    bidders:
      id: googleads.realtimebidding.bidders
      name: bidders
      title: Bidders
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1bidders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bidders/methods/get'
          - $ref: '#/components/x-stackQL-resources/bidders/methods/list'
        insert: []
        update: []
        delete: []
    endpoints:
      id: googleads.realtimebidding.endpoints
      name: endpoints
      title: Endpoints
      methods:
        bidders_endpoints_patch:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1endpoints~1{endpointsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_endpoints_get:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1endpoints~1{endpointsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_endpoints_list:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1endpoints/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/bidders_endpoints_get'
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/bidders_endpoints_list'
        insert: []
        update: []
        delete: []
    publisher_connections:
      id: googleads.realtimebidding.publisher_connections
      name: publisher_connections
      title: Publisher_connections
      methods:
        bidders_publisherConnections_list:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1publisherConnections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_publisherConnections_batchApprove:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1publisherConnections:batchApprove/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_publisherConnections_get:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1publisherConnections~1{publisherConnectionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_publisherConnections_batchReject:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1publisherConnections:batchReject/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/publisher_connections/methods/bidders_publisherConnections_get'
          - $ref: '#/components/x-stackQL-resources/publisher_connections/methods/bidders_publisherConnections_list'
        insert: []
        update: []
        delete: []
    pretargeting_configs_targeted_apps:
      id: googleads.realtimebidding.pretargeting_configs_targeted_apps
      name: pretargeting_configs_targeted_apps
      title: Pretargeting_configs_targeted_apps
      methods:
        bidders_pretargetingConfigs_removeTargetedApps:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:removeTargetedApps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_addTargetedApps:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:addTargetedApps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    pretargeting_configs_targeted_publishers:
      id: googleads.realtimebidding.pretargeting_configs_targeted_publishers
      name: pretargeting_configs_targeted_publishers
      title: Pretargeting_configs_targeted_publishers
      methods:
        bidders_pretargetingConfigs_removeTargetedPublishers:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:removeTargetedPublishers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_addTargetedPublishers:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:addTargetedPublishers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    pretargeting_configs_targeted_sites:
      id: googleads.realtimebidding.pretargeting_configs_targeted_sites
      name: pretargeting_configs_targeted_sites
      title: Pretargeting_configs_targeted_sites
      methods:
        bidders_pretargetingConfigs_addTargetedSites:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:addTargetedSites/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_removeTargetedSites:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:removeTargetedSites/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    pretargeting_configs:
      id: googleads.realtimebidding.pretargeting_configs
      name: pretargeting_configs
      title: Pretargeting_configs
      methods:
        bidders_pretargetingConfigs_delete:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_patch:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_get:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_suspend:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:suspend/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_activate:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs~1{pretargetingConfigsId}:activate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_list:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_pretargetingConfigs_create:
          operation:
            $ref: '#/paths/~1v1~1bidders~1{biddersId}~1pretargetingConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pretargeting_configs/methods/bidders_pretargetingConfigs_get'
          - $ref: '#/components/x-stackQL-resources/pretargeting_configs/methods/bidders_pretargetingConfigs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pretargeting_configs/methods/bidders_pretargetingConfigs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pretargeting_configs/methods/bidders_pretargetingConfigs_delete'
paths:
  /v1/buyers/{buyersId}/creatives:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Creates a creative.
      operationId: realtimebidding.buyers.creatives.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: insert
    get:
      description: Lists creatives as they are at the time of the initial request. This call may take multiple hours to complete. For large, paginated requests, this method returns a snapshot of creatives at the time of request for the first page. `lastStatusUpdate` and `creativeServingDecision` may be outdated for creatives on sequential pages. We recommend [Google Cloud Pub/Sub](//cloud.google.com/pubsub/docs/overview) to view the latest status.
      operationId: realtimebidding.buyers.creatives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreativesResponse'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: select
  /v1/buyers/{buyersId}/creatives/{creativesId}:
    parameters: *ref_1
    get:
      description: Gets a creative.
      operationId: realtimebidding.buyers.creatives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: path
          name: creativesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: select
    patch:
      description: Updates a creative.
      operationId: realtimebidding.buyers.creatives.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: path
          name: creativesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: exec
  /v1/buyers/{buyersId}/userLists/{userListsId}:close:
    parameters: *ref_1
    post:
      description: Change the status of a user list to CLOSED. This prevents new users from being added to the user list.
      operationId: realtimebidding.buyers.userLists.close
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseUserListRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: path
          name: userListsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_lists
      x-stackQL-verb: exec
  /v1/buyers/{buyersId}/userLists/{userListsId}:getRemarketingTag:
    parameters: *ref_1
    get:
      description: Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list.
      operationId: realtimebidding.buyers.userLists.getRemarketingTag
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemarketingTagResponse'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: path
          name: userListsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_lists_remarketing_tag
      x-stackQL-verb: select
  /v1/buyers/{buyersId}/userLists/{userListsId}:open:
    parameters: *ref_1
    post:
      description: Change the status of a user list to OPEN. This allows new users to be added to the user list.
      operationId: realtimebidding.buyers.userLists.open
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenUserListRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: path
          name: userListsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_lists
      x-stackQL-verb: exec
  /v1/buyers/{buyersId}/userLists:
    parameters: *ref_1
    get:
      description: Lists the user lists visible to the current user.
      operationId: realtimebidding.buyers.userLists.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserListsResponse'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: user_lists
      x-stackQL-verb: select
    post:
      description: Create a new user list.
      operationId: realtimebidding.buyers.userLists.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_lists
      x-stackQL-verb: insert
  /v1/buyers/{buyersId}/userLists/{userListsId}:
    parameters: *ref_1
    put:
      description: Update the given user list. Only user lists with URLRestrictions can be updated.
      operationId: realtimebidding.buyers.userLists.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: path
          name: userListsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_lists
      x-stackQL-verb: exec
    get:
      description: Gets a user list by its name.
      operationId: realtimebidding.buyers.userLists.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
        - in: path
          name: userListsId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_lists
      x-stackQL-verb: select
  /v1/buyers/{buyersId}:getRemarketingTag:
    parameters: *ref_1
    get:
      description: Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list.
      operationId: realtimebidding.buyers.getRemarketingTag
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRemarketingTagResponse'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
      x-stackQL-resource: buyers_remarketing_tag
      x-stackQL-verb: select
  /v1/buyers/{buyersId}:
    parameters: *ref_1
    get:
      description: Gets a buyer account by its name.
      operationId: realtimebidding.buyers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
      parameters:
        - in: path
          name: buyersId
          required: true
          schema:
            type: string
      x-stackQL-resource: buyers
      x-stackQL-verb: select
  /v1/buyers:
    parameters: *ref_1
    get:
      description: Lists all buyer account information the calling buyer user or service account is permissioned to manage.
      operationId: realtimebidding.buyers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuyersResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: buyers
      x-stackQL-verb: select
  /v1/bidders/{biddersId}:
    parameters: *ref_1
    get:
      description: Gets a bidder account by its name.
      operationId: realtimebidding.bidders.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bidder'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
      x-stackQL-resource: bidders
      x-stackQL-verb: select
  /v1/bidders:
    parameters: *ref_1
    get:
      description: Lists all the bidder accounts that belong to the caller.
      operationId: realtimebidding.bidders.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBiddersResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: bidders
      x-stackQL-verb: select
  /v1/bidders/{biddersId}/endpoints/{endpointsId}:
    parameters: *ref_1
    patch:
      description: Updates a bidder's endpoint.
      operationId: realtimebidding.bidders.endpoints.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-verb: exec
    get:
      description: Gets a bidder endpoint by its name.
      operationId: realtimebidding.bidders.endpoints.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: endpointsId
          required: true
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-verb: select
  /v1/bidders/{biddersId}/endpoints:
    parameters: *ref_1
    get:
      description: Lists all the bidder's endpoints.
      operationId: realtimebidding.bidders.endpoints.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: endpoints
      x-stackQL-verb: select
  /v1/bidders/{biddersId}/publisherConnections:
    parameters: *ref_1
    get:
      description: Lists publisher connections for a given bidder.
      operationId: realtimebidding.bidders.publisherConnections.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPublisherConnectionsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: publisher_connections
      x-stackQL-verb: select
  /v1/bidders/{biddersId}/publisherConnections:batchApprove:
    parameters: *ref_1
    post:
      description: Batch approves multiple publisher connections.
      operationId: realtimebidding.bidders.publisherConnections.batchApprove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchApprovePublisherConnectionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchApprovePublisherConnectionsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
      x-stackQL-resource: publisher_connections
      x-stackQL-verb: exec
  /v1/bidders/{biddersId}/publisherConnections/{publisherConnectionsId}:
    parameters: *ref_1
    get:
      description: Gets a publisher connection.
      operationId: realtimebidding.bidders.publisherConnections.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherConnection'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: publisherConnectionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: publisher_connections
      x-stackQL-verb: select
  /v1/bidders/{biddersId}/publisherConnections:batchReject:
    parameters: *ref_1
    post:
      description: Batch rejects multiple publisher connections.
      operationId: realtimebidding.bidders.publisherConnections.batchReject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRejectPublisherConnectionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRejectPublisherConnectionsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
      x-stackQL-resource: publisher_connections
      x-stackQL-verb: exec
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:removeTargetedApps:
    parameters: *ref_1
    post:
      description: Removes targeted apps from the pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.removeTargetedApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTargetedAppsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs_targeted_apps
      x-stackQL-verb: delete
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:addTargetedApps:
    parameters: *ref_1
    post:
      description: Adds targeted apps to the pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.addTargetedApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTargetedAppsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs_targeted_apps
      x-stackQL-verb: insert
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:removeTargetedPublishers:
    parameters: *ref_1
    post:
      description: Removes targeted publishers from the pretargeting config.
      operationId: realtimebidding.bidders.pretargetingConfigs.removeTargetedPublishers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTargetedPublishersRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs_targeted_publishers
      x-stackQL-verb: delete
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:addTargetedSites:
    parameters: *ref_1
    post:
      description: Adds targeted sites to the pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.addTargetedSites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTargetedSitesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs_targeted_sites
      x-stackQL-verb: insert
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:removeTargetedSites:
    parameters: *ref_1
    post:
      description: Removes targeted sites from the pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.removeTargetedSites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTargetedSitesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs_targeted_sites
      x-stackQL-verb: delete
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:addTargetedPublishers:
    parameters: *ref_1
    post:
      description: Adds targeted publishers to the pretargeting config.
      operationId: realtimebidding.bidders.pretargetingConfigs.addTargetedPublishers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTargetedPublishersRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs_targeted_publishers
      x-stackQL-verb: insert
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:
    parameters: *ref_1
    delete:
      description: Deletes a pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs
      x-stackQL-verb: delete
    patch:
      description: Updates a pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PretargetingConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs
      x-stackQL-verb: exec
    get:
      description: Gets a pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs
      x-stackQL-verb: select
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:suspend:
    parameters: *ref_1
    post:
      description: Suspends a pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.suspend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendPretargetingConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs
      x-stackQL-verb: exec
  /v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:activate:
    parameters: *ref_1
    post:
      description: Activates a pretargeting configuration.
      operationId: realtimebidding.bidders.pretargetingConfigs.activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivatePretargetingConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: pretargetingConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs
      x-stackQL-verb: exec
  /v1/bidders/{biddersId}/pretargetingConfigs:
    parameters: *ref_1
    get:
      description: Lists all pretargeting configurations for a single bidder.
      operationId: realtimebidding.bidders.pretargetingConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPretargetingConfigsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs
      x-stackQL-verb: select
    post:
      description: Creates a pretargeting configuration. A pretargeting configuration's state (PretargetingConfig.state) is active upon creation, and it will start to affect traffic shortly after. A bidder may create a maximum of 10 pretargeting configurations. Attempts to exceed this maximum results in a 400 bad request error.
      operationId: realtimebidding.bidders.pretargetingConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PretargetingConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PretargetingConfig'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
      x-stackQL-resource: pretargeting_configs
      x-stackQL-verb: insert
  /v1/bidders/{biddersId}/creatives:
    parameters: *ref_1
    get:
      description: Lists creatives as they are at the time of the initial request. This call may take multiple hours to complete. For large, paginated requests, this method returns a snapshot of creatives at the time of request for the first page. `lastStatusUpdate` and `creativeServingDecision` may be outdated for creatives on sequential pages. We recommend [Google Cloud Pub/Sub](//cloud.google.com/pubsub/docs/overview) to view the latest status.
      operationId: realtimebidding.bidders.creatives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreativesResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: select
  /v1/bidders/{biddersId}/creatives:watch:
    parameters: *ref_1
    post:
      description: Watches all creatives pertaining to a bidder. It is sufficient to invoke this endpoint once per bidder. A Pub/Sub topic will be created and notifications will be pushed to the topic when any of the bidder's creatives change status. All of the bidder's service accounts will have access to read from the topic. Subsequent invocations of this method will return the existing Pub/Sub configuration.
      operationId: realtimebidding.bidders.creatives.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchCreativesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/realtime-bidding
          Oauth2c:
            - https://www.googleapis.com/auth/realtime-bidding
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchCreativesResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: exec
