openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Campaign Manager 360 API
  description: Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
  version: v4
  x-discovery-doc-revision: '20230103'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/doubleclick-advertisers/
servers:
  - url: https://dfareporting.googleapis.com/dfareporting/v4
components:
  schemas:
    VideoSettings:
      description: Video Settings
      type: object
      properties:
        publisherSpecificationId:
          description: Publisher specification ID of a video placement.
          type: string
          format: int64
        obaEnabled:
          type: boolean
          description: Whether OBA icons are enabled for this placement.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoSettings".'
          type: string
        transcodeSettings:
          description: Settings for the transcodes of video creatives served to this placement. If this object is provided, the creative-level transcode settings will be overridden.
          $ref: '#/components/schemas/TranscodeSetting'
        durationSeconds:
          format: int32
          type: integer
          description: Duration of a video placement in seconds.
        orientation:
          description: Orientation of a video placement. If this value is set, placement will return assets matching the specified orientation.
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - ANY
            - LANDSCAPE
            - PORTRAIT
          type: string
        skippableSettings:
          $ref: '#/components/schemas/SkippableSetting'
          description: Settings for the skippability of video creatives served to this placement. If this object is provided, the creative-level skippable settings will be overridden.
        companionSettings:
          $ref: '#/components/schemas/CompanionSetting'
          description: Settings for the companion creatives of video creatives served to this placement.
        obaSettings:
          $ref: '#/components/schemas/ObaIcon'
          description: Settings for the OBA icon of video creatives served to this placement. If this object is provided, the creative-level OBA settings will be overridden.
      id: VideoSettings
    TagSetting:
      id: TagSetting
      type: object
      description: Tag Settings
      properties:
        keywordOption:
          description: Option specifying how keywords are embedded in ad tags. This setting can be used to specify whether keyword placeholders are inserted in placement tags for this site. Publishers can then add keywords to those placeholders.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - PLACEHOLDER_WITH_LIST_OF_KEYWORDS
            - IGNORE
            - GENERATE_SEPARATE_TAG_FOR_EACH_KEYWORD
        includeClickThroughUrls:
          type: boolean
          description: Whether static landing page URLs should be included in the tags. This setting applies only to placements.
        additionalKeyValues:
          description: Additional key-values to be included in tags. Each key-value pair must be of the form key=value, and pairs must be separated by a semicolon (;). Keys and values must not contain commas. For example, id=2;color=red is a valid value for this field.
          type: string
        includeClickTracking:
          type: boolean
          description: Whether click-tracking string should be included in the tags.
    ClickThroughUrl:
      id: ClickThroughUrl
      description: Click-through URL
      type: object
      properties:
        landingPageId:
          format: int64
          description: ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set to false.
          type: string
        computedClickThroughUrl:
          description: 'Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: - If defaultLandingPage is enabled then the campaign''s default landing page URL is assigned to this field. - If defaultLandingPage is not enabled and a landingPageId is specified then that landing page''s URL is assigned to this field. - If neither of the above cases apply, then the customClickThroughUrl is assigned to this field. '
          type: string
        customClickThroughUrl:
          type: string
          description: Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the landingPageId field is left unset.
        defaultLandingPage:
          type: boolean
          description: Whether the campaign default landing page is used.
    EventTagOverride:
      type: object
      description: Event tag override information.
      id: EventTagOverride
      properties:
        enabled:
          type: boolean
          description: Whether this override is enabled.
        id:
          description: ID of this event tag override. This is a read-only, auto-generated field.
          type: string
          format: int64
    PricingSchedule:
      description: Pricing Schedule
      id: PricingSchedule
      properties:
        flighted:
          type: boolean
          description: Whether this placement is flighted. If true, pricing periods will be computed automatically.
        testingStartDate:
          type: string
          format: date
        floodlightActivityId:
          description: Floodlight activity ID associated with this placement. This field should be set when placement pricing type is set to PRICING_TYPE_CPA.
          type: string
          format: int64
        pricingType:
          enum:
            - PRICING_TYPE_CPM
            - PRICING_TYPE_CPC
            - PRICING_TYPE_CPA
            - PRICING_TYPE_FLAT_RATE_IMPRESSIONS
            - PRICING_TYPE_FLAT_RATE_CLICKS
            - PRICING_TYPE_CPM_ACTIVEVIEW
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: Placement pricing type. This field is required on insertion.
        startDate:
          type: string
          format: date
        pricingPeriods:
          description: Pricing periods for this placement.
          items:
            $ref: '#/components/schemas/PricingSchedulePricingPeriod'
          type: array
        capCostOption:
          type: string
          enum:
            - CAP_COST_NONE
            - CAP_COST_MONTHLY
            - CAP_COST_CUMULATIVE
          enumDescriptions:
            - ''
            - ''
            - ''
          description: Placement cap cost option.
        endDate:
          type: string
          format: date
      type: object
    ConversionsBatchUpdateResponse:
      properties:
        hasFailures:
          description: Indicates that some or all conversions failed to update.
          type: boolean
        status:
          type: array
          items:
            $ref: '#/components/schemas/ConversionStatus'
          description: The update status of each conversion. Statuses are returned in the same order that conversions are updated.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionsBatchUpdateResponse".'
          type: string
      id: ConversionsBatchUpdateResponse
      description: Update Conversions Response.
      type: object
    CreativeField:
      properties:
        advertiserIdDimensionValue:
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeField".'
          type: string
        name:
          description: Name of this creative field. This is a required field and must be less than 256 characters long and unique among creative fields of the same advertiser.
          type: string
        id:
          description: ID of this creative field. This is a read-only, auto-generated field.
          format: int64
          type: string
        accountId:
          type: string
          description: Account ID of this creative field. This is a read-only field that can be left blank.
          format: int64
        subaccountId:
          type: string
          format: int64
          description: Subaccount ID of this creative field. This is a read-only field that can be left blank.
        advertiserId:
          description: Advertiser ID of this creative field. This is a required field on insertion.
          format: int64
          type: string
      type: object
      id: CreativeField
      description: Contains properties of a creative field.
    Site:
      properties:
        siteSettings:
          description: Site-wide settings.
          $ref: '#/components/schemas/SiteSettings'
        idDimensionValue:
          description: Dimension value for the ID of this site. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        name:
          description: Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level site, and the name must be unique among top-level sites of the same account.
          type: string
        directorySiteIdDimensionValue:
          description: Dimension value for the ID of the directory site. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#site".'
        siteContacts:
          description: Site contacts.
          items:
            $ref: '#/components/schemas/SiteContact'
          type: array
        id:
          description: ID of this site. This is a read-only, auto-generated field.
          type: string
          format: int64
        accountId:
          type: string
          description: Account ID of this site. This is a read-only field that can be left blank.
          format: int64
        videoSettings:
          $ref: '#/components/schemas/SiteVideoSettings'
          description: Default video settings for new placements created under this site. This value will be used to populate the placements.videoSettings field, when no value is specified for the new placement.
        subaccountId:
          description: Subaccount ID of this site. This is a read-only field that can be left blank.
          format: int64
          type: string
        keyName:
          description: Key name of this site. This is a read-only, auto-generated field.
          type: string
        directorySiteId:
          type: string
          format: int64
          description: Directory site associated with this site. This is a required field that is read-only after insertion.
        approved:
          type: boolean
          description: Whether this site is approved.
      id: Site
      type: object
      description: Contains properties of a site.
    TargetingTemplate:
      type: object
      id: TargetingTemplate
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#targetingTemplate".'
          type: string
        id:
          format: int64
          type: string
          description: ID of this targeting template. This is a read-only, auto-generated field.
        listTargetingExpression:
          $ref: '#/components/schemas/ListTargetingExpression'
          description: Remarketing list targeting criteria.
        dayPartTargeting:
          description: Time and day targeting criteria.
          $ref: '#/components/schemas/DayPartTargeting'
        name:
          type: string
          description: Name of this targeting template. This field is required. It must be less than 256 characters long and unique within an advertiser.
        accountId:
          type: string
          format: int64
          description: Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.
        languageTargeting:
          description: Language targeting criteria.
          $ref: '#/components/schemas/LanguageTargeting'
        keyValueTargetingExpression:
          description: Key-value targeting criteria.
          $ref: '#/components/schemas/KeyValueTargetingExpression'
        advertiserIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
        geoTargeting:
          description: Geographical targeting criteria.
          $ref: '#/components/schemas/GeoTargeting'
        subaccountId:
          description: Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.
          format: int64
          type: string
        technologyTargeting:
          description: Technology platform targeting criteria.
          $ref: '#/components/schemas/TechnologyTargeting'
        advertiserId:
          format: int64
          description: Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert.
          type: string
      description: Contains properties of a targeting template. A targeting template encapsulates targeting information which can be reused across multiple ads.
    SiteTranscodeSetting:
      properties:
        enabledVideoFormats:
          items:
            type: integer
            format: int32
          type: array
          description: Allowlist of video formats to be served to this site template. Set this list to null or empty to serve all video formats.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteTranscodeSetting".'
          type: string
      type: object
      id: SiteTranscodeSetting
      description: Transcode Settings
    InventoryItemsListResponse:
      type: object
      id: InventoryItemsListResponse
      description: Inventory item List Response
      properties:
        inventoryItems:
          type: array
          description: Inventory item collection
          items:
            $ref: '#/components/schemas/InventoryItem'
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#inventoryItemsListResponse".'
          type: string
    TranscodeSetting:
      type: object
      description: Transcode Settings
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#transcodeSetting".'
          type: string
        enabledVideoFormats:
          items:
            type: integer
            format: int32
          description: Allowlist of video formats to be served to this placement. Set this list to null or empty to serve all video formats.
          type: array
      id: TranscodeSetting
    ReachReportCompatibleFields:
      properties:
        pivotedActivityMetrics:
          items:
            $ref: '#/components/schemas/Metric'
          description: Metrics which are compatible to be selected as activity metrics to pivot on in the "activities" section of the report.
          type: array
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#reachReportCompatibleFields.
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          description: Dimensions which are compatible to be selected in the "dimensions" section of the report.
          type: array
        dimensionFilters:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          description: Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
        metrics:
          type: array
          description: Metrics which are compatible to be selected in the "metricNames" section of the report.
          items:
            $ref: '#/components/schemas/Metric'
        reachByFrequencyMetrics:
          description: Metrics which are compatible to be selected in the "reachByFrequencyMetricNames" section of the report.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
      type: object
      id: ReachReportCompatibleFields
      description: Represents fields that are compatible to be selected for a report of type "REACH".
    AdvertiserInvoicesListResponse:
      id: AdvertiserInvoicesListResponse
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
          description: Invoice collection
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiserInvoicesListResponse".'
      description: Invoice List Response
    AdsListResponse:
      description: Ad List Response
      id: AdsListResponse
      properties:
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
        ads:
          type: array
          description: Ad collection.
          items:
            $ref: '#/components/schemas/Ad'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#adsListResponse".'
      type: object
    CampaignsListResponse:
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
          description: Campaign collection.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#campaignsListResponse".'
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      type: object
      id: CampaignsListResponse
      description: Campaign List Response
    ListTargetingExpression:
      type: object
      properties:
        expression:
          description: Expression describing which lists are being targeted by the ad.
          type: string
      description: Remarketing List Targeting Expression.
      id: ListTargetingExpression
    FloodlightReportCompatibleFields:
      id: FloodlightReportCompatibleFields
      properties:
        metrics:
          type: array
          description: Metrics which are compatible to be selected in the "metricNames" section of the report.
          items:
            $ref: '#/components/schemas/Metric'
        dimensions:
          description: Dimensions which are compatible to be selected in the "dimensions" section of the report.
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#floodlightReportCompatibleFields.
        dimensionFilters:
          type: array
          description: Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
          items:
            $ref: '#/components/schemas/Dimension'
      description: Represents fields that are compatible to be selected for a report of type "FlOODLIGHT".
      type: object
    CustomViewabilityMetric:
      type: object
      properties:
        name:
          type: string
          description: Name of the custom viewability metric.
        configuration:
          $ref: '#/components/schemas/CustomViewabilityMetricConfiguration'
          description: Configuration of the custom viewability metric.
        id:
          type: string
          description: ID of the custom viewability metric.
          format: int64
      description: Custom Viewability Metric
      id: CustomViewabilityMetric
    PlacementGroupsListResponse:
      type: object
      id: PlacementGroupsListResponse
      properties:
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementGroupsListResponse".'
          type: string
        placementGroups:
          type: array
          description: Placement group collection.
          items:
            $ref: '#/components/schemas/PlacementGroup'
      description: Placement Group List Response
    LastModifiedInfo:
      type: object
      id: LastModifiedInfo
      properties:
        time:
          type: string
          format: int64
          description: Timestamp of the last change in milliseconds since epoch.
      description: Modification timestamp.
    EventFilter:
      description: Represents a DfaReporting event filter.
      id: EventFilter
      type: object
      properties:
        kind:
          description: The kind of resource this is, in this case dfareporting#eventFilter.
          type: string
        uvarFilter:
          $ref: '#/components/schemas/UvarFilter'
          description: Filter on a custom variable.
        dimensionFilter:
          $ref: '#/components/schemas/PathReportDimensionValue'
          description: The dimension filter contained within this EventFilter.
    PlatformTypesListResponse:
      description: Platform Type List Response
      id: PlatformTypesListResponse
      type: object
      properties:
        platformTypes:
          description: Platform type collection.
          items:
            $ref: '#/components/schemas/PlatformType'
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#platformTypesListResponse".'
          type: string
    CitiesListResponse:
      type: object
      description: City List Response
      id: CitiesListResponse
      properties:
        cities:
          description: City collection.
          type: array
          items:
            $ref: '#/components/schemas/City'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#citiesListResponse".'
          type: string
    DirectorySite:
      description: DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an account via the Sites resource before they can be assigned to a placement.
      properties:
        interstitialTagFormats:
          items:
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
            enum:
              - IFRAME_JAVASCRIPT_INTERSTITIAL
              - INTERNAL_REDIRECT_INTERSTITIAL
              - JAVASCRIPT_INTERSTITIAL
          type: array
          description: 'Tag types for interstitial placements. Acceptable values are: - "IFRAME_JAVASCRIPT_INTERSTITIAL" - "INTERNAL_REDIRECT_INTERSTITIAL" - "JAVASCRIPT_INTERSTITIAL" '
        settings:
          description: Directory site settings.
          $ref: '#/components/schemas/DirectorySiteSettings'
        url:
          description: URL of this directory site.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#directorySite".'
        name:
          type: string
          description: Name of this directory site.
        idDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of this directory site. This is a read-only, auto-generated field.
        id:
          format: int64
          description: ID of this directory site. This is a read-only, auto-generated field.
          type: string
        inpageTagFormats:
          description: 'Tag types for regular placements. Acceptable values are: - "STANDARD" - "IFRAME_JAVASCRIPT_INPAGE" - "INTERNAL_REDIRECT_INPAGE" - "JAVASCRIPT_INPAGE" '
          items:
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
            type: string
            enum:
              - STANDARD
              - IFRAME_JAVASCRIPT_INPAGE
              - INTERNAL_REDIRECT_INPAGE
              - JAVASCRIPT_INPAGE
          type: array
      id: DirectorySite
      type: object
    SiteSkippableSetting:
      type: object
      id: SiteSkippableSetting
      description: Skippable Settings
      properties:
        progressOffset:
          description: Amount of time to play videos served to this site template before counting a view. Applicable when skippable is true.
          $ref: '#/components/schemas/VideoOffset'
        skippable:
          type: boolean
          description: Whether the user can skip creatives served to this site. This will act as default for new placements created under this site.
        skipOffset:
          description: Amount of time to play videos served to this site before the skip button should appear. Applicable when skippable is true.
          $ref: '#/components/schemas/VideoOffset'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteSkippableSetting".'
          type: string
    MobileCarrier:
      id: MobileCarrier
      properties:
        id:
          type: string
          format: int64
          description: ID of this mobile carrier.
        name:
          type: string
          description: Name of this mobile carrier.
        countryDartId:
          description: DART ID of the country to which this mobile carrier belongs.
          type: string
          format: int64
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileCarrier".'
        countryCode:
          description: Country code of the country to which this mobile carrier belongs.
          type: string
      description: Contains information about a mobile carrier that can be targeted by ads.
      type: object
    FloodlightActivityPublisherDynamicTag:
      description: Publisher Dynamic Tag
      id: FloodlightActivityPublisherDynamicTag
      properties:
        directorySiteId:
          format: int64
          type: string
          description: Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the siteId field. When this resource is retrieved, only the siteId field will be populated.
        siteId:
          type: string
          format: int64
          description: Site ID of this dynamic tag.
        clickThrough:
          type: boolean
          description: Whether this tag is applicable only for click-throughs.
        siteIdDimensionValue:
          description: Dimension value for the ID of the site. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        dynamicTag:
          description: Dynamic floodlight tag.
          $ref: '#/components/schemas/FloodlightActivityDynamicTag'
        viewThrough:
          type: boolean
          description: Whether this tag is applicable only for view-throughs.
      type: object
    FileList:
      properties:
        items:
          description: The files returned in this response.
          type: array
          items:
            $ref: '#/components/schemas/File'
        nextPageToken:
          type: string
          description: Continuation token used to page through files. To retrieve the next page of results, set the next request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#fileList".'
        etag:
          type: string
          description: Etag of this resource.
      type: object
      id: FileList
      description: List of files for a report.
    CreativeAssignment:
      type: object
      description: Creative Assignment.
      id: CreativeAssignment
      properties:
        creativeId:
          type: string
          description: ID of the creative to be assigned. This is a required field.
          format: int64
        sslCompliant:
          description: Whether the creative to be assigned is SSL-compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.
          type: boolean
        creativeIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the creative. This is a read-only, auto-generated field.
        creativeGroupAssignments:
          description: Creative group assignments for this creative assignment. Only one assignment per creative group number is allowed for a maximum of two assignments.
          type: array
          items:
            $ref: '#/components/schemas/CreativeGroupAssignment'
        weight:
          format: int32
          description: Weight of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_RANDOM. Value must be greater than or equal to 1.
          type: integer
        clickThroughUrl:
          $ref: '#/components/schemas/ClickThroughUrl'
          description: Click-through URL of the creative assignment.
        richMediaExitOverrides:
          description: 'Rich media exit overrides for this creative assignment. Applicable when the creative type is any of the following: - DISPLAY - RICH_MEDIA_INPAGE - RICH_MEDIA_INPAGE_FLOATING - RICH_MEDIA_IM_EXPAND - RICH_MEDIA_EXPANDING - RICH_MEDIA_INTERSTITIAL_FLOAT - RICH_MEDIA_MOBILE_IN_APP - RICH_MEDIA_MULTI_FLOATING - RICH_MEDIA_PEEL_DOWN - VPAID_LINEAR - VPAID_NON_LINEAR '
          items:
            $ref: '#/components/schemas/RichMediaExitOverride'
          type: array
        applyEventTags:
          description: Whether applicable event tags should fire when this creative assignment is rendered. If this value is unset when the ad is inserted or updated, it will default to true for all creative types EXCEPT for INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO.
          type: boolean
        companionCreativeOverrides:
          items:
            $ref: '#/components/schemas/CompanionClickThroughOverride'
          description: Companion creative overrides for this creative assignment. Applicable to video ads.
          type: array
        startTime:
          format: date-time
          type: string
        active:
          type: boolean
          description: Whether this creative assignment is active. When true, the creative will be included in the ad's rotation.
        endTime:
          format: date-time
          type: string
        sequence:
          type: integer
          description: Sequence number of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_SEQUENTIAL. Acceptable values are 1 to 65535, inclusive.
          format: int32
    ConversionsBatchInsertRequest:
      description: Insert Conversions Request.
      type: object
      id: ConversionsBatchInsertRequest
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionsBatchInsertRequest".'
          type: string
        encryptionInfo:
          description: Describes how encryptedUserId or encryptedUserIdCandidates[] is encrypted. This is a required field if encryptedUserId or encryptedUserIdCandidates[] is used.
          $ref: '#/components/schemas/EncryptionInfo'
        conversions:
          type: array
          description: The set of conversions to insert.
          items:
            $ref: '#/components/schemas/Conversion'
    SiteContact:
      description: Site Contact
      type: object
      id: SiteContact
      properties:
        contactType:
          type: string
          enumDescriptions:
            - ''
            - ''
          description: Site contact type.
          enum:
            - SALES_PERSON
            - TRAFFICKER
        firstName:
          type: string
          description: First name of this site contact.
        title:
          type: string
          description: Title or designation of this site contact.
        id:
          description: ID of this site contact. This is a read-only, auto-generated field.
          format: int64
          type: string
        lastName:
          description: Last name of this site contact.
          type: string
        address:
          description: Address of this site contact.
          type: string
        email:
          description: Email address of this site contact. This is a required field.
          type: string
        phone:
          type: string
          description: Primary phone number of this site contact.
    UserDefinedVariableConfiguration:
      properties:
        reportName:
          description: 'User-friendly name for the variable which will appear in reports. This is a required field, must be less than 64 characters long, and cannot contain the following characters: ""<>".'
          type: string
        variableType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - U1
            - U2
            - U3
            - U4
            - U5
            - U6
            - U7
            - U8
            - U9
            - U10
            - U11
            - U12
            - U13
            - U14
            - U15
            - U16
            - U17
            - U18
            - U19
            - U20
            - U21
            - U22
            - U23
            - U24
            - U25
            - U26
            - U27
            - U28
            - U29
            - U30
            - U31
            - U32
            - U33
            - U34
            - U35
            - U36
            - U37
            - U38
            - U39
            - U40
            - U41
            - U42
            - U43
            - U44
            - U45
            - U46
            - U47
            - U48
            - U49
            - U50
            - U51
            - U52
            - U53
            - U54
            - U55
            - U56
            - U57
            - U58
            - U59
            - U60
            - U61
            - U62
            - U63
            - U64
            - U65
            - U66
            - U67
            - U68
            - U69
            - U70
            - U71
            - U72
            - U73
            - U74
            - U75
            - U76
            - U77
            - U78
            - U79
            - U80
            - U81
            - U82
            - U83
            - U84
            - U85
            - U86
            - U87
            - U88
            - U89
            - U90
            - U91
            - U92
            - U93
            - U94
            - U95
            - U96
            - U97
            - U98
            - U99
            - U100
          type: string
          description: Variable name in the tag. This is a required field.
        dataType:
          description: Data type for the variable. This is a required field.
          enum:
            - STRING
            - NUMBER
          enumDescriptions:
            - ''
            - ''
          type: string
      type: object
      description: User Defined Variable configuration.
      id: UserDefinedVariableConfiguration
    CampaignSummary:
      type: object
      properties:
        totalAmountMicros:
          type: string
          description: The total amount of charges for this campaign, in micros of the invoice's currency.
          format: int64
        taxAmountMicros:
          description: The tax amount for this campaign, in micros of the invoice's currency.
          type: string
          format: int64
        preTaxAmountMicros:
          type: string
          description: The pre-tax amount for this campaign, in micros of the invoice's currency.
          format: int64
        billingInvoiceCode:
          description: Campaign billing invoice code.
          type: string
        campaignId:
          description: Campaign ID.
          type: string
          format: int64
      description: Represents a summarized campaign information associated with this invoice.
      id: CampaignSummary
    LanguageTargeting:
      description: Language Targeting.
      properties:
        languages:
          items:
            $ref: '#/components/schemas/Language'
          description: Languages that this ad targets. For each language only languageId is required. The other fields are populated automatically when the ad is inserted or updated.
          type: array
      type: object
      id: LanguageTargeting
    PlacementAssignment:
      id: PlacementAssignment
      properties:
        sslRequired:
          description: Whether the placement to be assigned requires SSL. This is a read-only field that is auto-generated when the ad is inserted or updated.
          type: boolean
        placementIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the placement. This is a read-only, auto-generated field.
        placementId:
          type: string
          description: ID of the placement to be assigned. This is a required field.
          format: int64
        active:
          type: boolean
          description: Whether this placement assignment is active. When true, the placement will be included in the ad's rotation.
      description: Placement Assignment.
      type: object
    OptimizationActivity:
      description: Creative optimization activity.
      id: OptimizationActivity
      properties:
        floodlightActivityIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the floodlight activity. This is a read-only, auto-generated field.
        weight:
          format: int32
          description: Weight associated with this optimization. The weight assigned will be understood in proportion to the weights assigned to the other optimization activities. Value must be greater than or equal to 1.
          type: integer
        floodlightActivityId:
          description: Floodlight activity ID of this optimization activity. This is a required field.
          format: int64
          type: string
      type: object
    UserRolesListResponse:
      properties:
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolesListResponse".'
        userRoles:
          type: array
          items:
            $ref: '#/components/schemas/UserRole'
          description: User role collection.
      description: User Role List Response
      type: object
      id: UserRolesListResponse
    Country:
      properties:
        dartId:
          type: string
          description: DART ID of this country. This is the ID used for targeting and generating reports.
          format: int64
        name:
          type: string
          description: Name of this country.
        sslEnabled:
          description: Whether ad serving supports secure servers in this country.
          type: boolean
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#country".'
          type: string
        countryCode:
          description: Country code.
          type: string
      description: Contains information about a country that can be targeted by ads.
      type: object
      id: Country
    BillingRate:
      id: BillingRate
      type: object
      properties:
        endDate:
          description: End date of this billing rate.
          type: string
        name:
          description: Name of this billing rate. This must be less than 256 characters long.
          type: string
        unitOfMeasure:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          description: Unit of measure for this billing rate.
          enum:
            - CPM
            - CPC
            - EA
            - P2C
        rateInMicros:
          format: int64
          description: Flat rate in micros of this billing rate. This cannot co-exist with tiered rate.
          type: string
        startDate:
          description: Start date of this billing rate.
          type: string
        tieredRates:
          type: array
          description: Tiered rate of this billing rate. This cannot co-exist with flat rate.
          items:
            $ref: '#/components/schemas/BillingRateTieredRate'
        currencyCode:
          description: Billing currency code in ISO 4217 format.
          type: string
        type:
          enum:
            - AD_SERVING
            - CLICKS
            - MINIMUM_SERVICE
            - PATH_TO_CONVERSION
            - RICH_MEDIA_INPAGE
            - RICH_MEDIA_EXPANDING
            - RICH_MEDIA_FLOATING
            - RICH_MEDIA_VIDEO
            - RICH_MEDIA_TEASER
            - RICH_MEDIA_VPAID
            - INSTREAM_VIDEO
            - PIXEL
            - TRACKING
            - TRAFFICKING_FEATURE
            - CUSTOM_REPORTS
            - EXPOSURE_TO_CONVERSION
            - DATA_TRANSFER
            - DATA_TRANSFER_SETUP
            - STARTUP
            - STATEMENT_OF_WORK
            - PROVIDED_LIST
            - PROVIDED_LIST_SETUP
            - ENHANCED_FORMATS
            - TRACKING_AD_IMPRESSIONS
            - TRACKING_AD_CLICKS
            - NIELSEN_DIGITAL_AD_RATINGS_FEE
            - INSTREAM_VIDEO_REDIRECT
            - INSTREAM_VIDEO_VPAID
            - DISPLAY_AD_SERVING
            - VIDEO_AD_SERVING
            - AUDIO_AD_SERVING
            - ADVANCED_DISPLAY_AD_SERVING
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Type of this billing rate.
          type: string
        id:
          type: string
          format: int64
          description: ID of this billing rate.
    MobileApp:
      id: MobileApp
      type: object
      properties:
        id:
          description: ID of this mobile app.
          type: string
        title:
          type: string
          description: Title of this mobile app.
        directory:
          type: string
          enum:
            - UNKNOWN
            - APPLE_APP_STORE
            - GOOGLE_PLAY_STORE
            - ROKU_APP_STORE
            - AMAZON_FIRETV_APP_STORE
            - PLAYSTATION_APP_STORE
            - APPLE_TV_APP_STORE
            - XBOX_APP_STORE
            - SAMSUNG_TV_APP_STORE
            - ANDROID_TV_APP_STORE
            - GENERIC_CTV_APP_STORE
          description: Mobile app directory.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        publisherName:
          description: Publisher name.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileApp".'
      description: Contains information about a mobile app. Used as a landing page deep link.
    MobileCarriersListResponse:
      id: MobileCarriersListResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileCarriersListResponse".'
        mobileCarriers:
          description: Mobile carrier collection.
          items:
            $ref: '#/components/schemas/MobileCarrier'
          type: array
      type: object
      description: Mobile Carrier List Response
    AccountPermission:
      id: AccountPermission
      properties:
        permissionGroupId:
          description: Permission group of this account permission.
          format: int64
          type: string
        accountProfiles:
          description: 'Account profiles associated with this account permission. Possible values are: - "ACCOUNT_PROFILE_BASIC" - "ACCOUNT_PROFILE_STANDARD" '
          type: array
          items:
            enumDescriptions:
              - ''
              - ''
            enum:
              - ACCOUNT_PROFILE_BASIC
              - ACCOUNT_PROFILE_STANDARD
            type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountPermission".'
          type: string
        level:
          type: string
          description: Administrative level required to enable this account permission.
          enum:
            - USER
            - ADMINISTRATOR
          enumDescriptions:
            - ''
            - ''
        id:
          description: ID of this account permission.
          type: string
          format: int64
        name:
          type: string
          description: Name of this account permission.
      description: AccountPermissions contains information about a particular account permission. Some features of Campaign Manager require an account permission to be present in the account.
      type: object
    CreativeFieldAssignment:
      id: CreativeFieldAssignment
      description: Creative Field Assignment.
      type: object
      properties:
        creativeFieldId:
          type: string
          format: int64
          description: ID of the creative field.
        creativeFieldValueId:
          format: int64
          description: ID of the creative field value.
          type: string
    UserRole:
      id: UserRole
      description: Contains properties of auser role, which is used to manage user access.
      type: object
      properties:
        parentUserRoleId:
          description: ID of the user role that this user role is based on or copied from. This is a required field.
          format: int64
          type: string
        id:
          format: int64
          description: ID of this user role. This is a read-only, auto-generated field.
          type: string
        subaccountId:
          type: string
          description: Subaccount ID of this user role. This is a read-only field that can be left blank.
          format: int64
        defaultUserRole:
          description: Whether this is a default user role. Default user roles are created by the system for the account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.
          type: boolean
        permissions:
          description: List of permissions associated with this user role.
          type: array
          items:
            $ref: '#/components/schemas/UserRolePermission'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRole".'
          type: string
        accountId:
          format: int64
          description: Account ID of this user role. This is a read-only field that can be left blank.
          type: string
        name:
          type: string
          description: Name of this user role. This is a required field. Must be less than 256 characters long. If this user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role is a top-level user role, and the name must be unique among top-level user roles of the same account.
    PostalCodesListResponse:
      description: Postal Code List Response
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#postalCodesListResponse".'
        postalCodes:
          type: array
          description: Postal code collection.
          items:
            $ref: '#/components/schemas/PostalCode'
      type: object
      id: PostalCodesListResponse
    MeasurementPartnerWrappingData:
      type: object
      properties:
        measurementPartner:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - NONE
            - INTEGRAL_AD_SCIENCE
            - DOUBLE_VERIFY
          description: Measurement partner used for wrapping the placement.
        wrappedTag:
          type: string
          description: Tag provided by the measurement partner during wrapping.
        linkStatus:
          description: Placement wrapping status.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - MEASUREMENT_PARTNER_UNLINKED
            - MEASUREMENT_PARTNER_LINKED
            - MEASUREMENT_PARTNER_LINK_PENDING
            - MEASUREMENT_PARTNER_LINK_FAILURE
            - MEASUREMENT_PARTNER_LINK_OPT_OUT
            - MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING
            - MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING
            - MEASUREMENT_PARTNER_MODE_CHANGE_PENDING
        tagWrappingMode:
          description: Measurement mode for the wrapped placement.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - NONE
            - BLOCKING
            - MONITORING
            - MONITORING_READ_ONLY
            - VIDEO_PIXEL_MONITORING
            - TRACKING
            - VPAID_MONITORING
            - VPAID_BLOCKING
            - NON_VPAID_MONITORING
            - VPAID_ONLY_MONITORING
            - VPAID_ONLY_BLOCKING
            - VPAID_ONLY_FILTERING
            - VPAID_FILTERING
            - NON_VPAID_FILTERING
      description: Placement tag wrapping
      id: MeasurementPartnerWrappingData
    ListPopulationClause:
      properties:
        terms:
          description: Terms of this list population clause. Each clause is made up of list population terms representing constraints and are joined by ORs.
          items:
            $ref: '#/components/schemas/ListPopulationTerm'
          type: array
      id: ListPopulationClause
      type: object
      description: A group clause made up of list population terms representing constraints joined by ORs.
    ConnectionTypesListResponse:
      type: object
      properties:
        connectionTypes:
          description: Collection of connection types such as broadband and mobile.
          type: array
          items:
            $ref: '#/components/schemas/ConnectionType'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#connectionTypesListResponse".'
      description: Connection Type List Response
      id: ConnectionTypesListResponse
    TargetingTemplatesListResponse:
      type: object
      id: TargetingTemplatesListResponse
      description: Targeting Template List Response
      properties:
        targetingTemplates:
          type: array
          description: Targeting template collection.
          items:
            $ref: '#/components/schemas/TargetingTemplate'
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#targetingTemplatesListResponse".'
          type: string
    AccountPermissionGroupsListResponse:
      description: Account Permission Group List Response
      type: object
      id: AccountPermissionGroupsListResponse
      properties:
        accountPermissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/AccountPermissionGroup'
          description: Account permission group collection.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountPermissionGroupsListResponse".'
          type: string
    Advertiser:
      description: Contains properties of a Campaign Manager advertiser.
      id: Advertiser
      properties:
        advertiserGroupId:
          description: ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.
          type: string
          format: int64
        measurementPartnerLink:
          description: Measurement partner advertiser link for tag wrapping.
          $ref: '#/components/schemas/MeasurementPartnerAdvertiserLink'
        subaccountId:
          type: string
          format: int64
          description: Subaccount ID of this advertiser.This is a read-only field that can be left blank.
        originalFloodlightConfigurationId:
          type: string
          format: int64
          description: Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement.
        defaultEmail:
          description: Default email address used in sender field for tag emails.
          type: string
        floodlightConfigurationIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.
        status:
          enum:
            - APPROVED
            - ON_HOLD
          enumDescriptions:
            - ''
            - ''
          type: string
          description: Status of this advertiser.
        floodlightConfigurationId:
          type: string
          format: int64
          description: 'Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser''s floodlight configuration ID in order to share that advertiser''s floodlight configuration with this advertiser, so long as: - This advertiser''s original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. - This advertiser''s original floodlight configuration is not already shared with another advertiser. '
        defaultClickThroughEventTagId:
          type: string
          description: ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.
          format: int64
        clickThroughUrlSuffix:
          description: Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.
          type: string
        id:
          description: ID of this advertiser. This is a read-only, auto-generated field.
          format: int64
          type: string
        accountId:
          type: string
          description: Account ID of this advertiser.This is a read-only field that can be left blank.
          format: int64
        suspended:
          type: boolean
          description: Suspension status of this advertiser.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiser".'
        name:
          description: Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account.
          type: string
        idDimensionValue:
          description: Dimension value for the ID of this advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
      type: object
    ClickThroughUrlSuffixProperties:
      description: Click Through URL Suffix settings.
      properties:
        clickThroughUrlSuffix:
          type: string
          description: Click-through URL suffix to apply to all ads in this entity's scope. Must be less than 128 characters long.
        overrideInheritedSuffix:
          type: boolean
          description: Whether this entity should override the inherited click-through URL suffix with its own defined value.
      id: ClickThroughUrlSuffixProperties
      type: object
    ReportList:
      properties:
        kind:
          description: The kind of list this is, in this case dfareporting#reportList.
          type: string
        items:
          description: The reports returned in this response.
          type: array
          items:
            $ref: '#/components/schemas/Report'
        nextPageToken:
          type: string
          description: Continuation token used to page through reports. To retrieve the next page of results, set the next request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.
        etag:
          description: The eTag of this response for caching purposes.
          type: string
      type: object
      id: ReportList
      description: Represents the list of reports.
    ChannelGroupingRule:
      id: ChannelGroupingRule
      properties:
        name:
          type: string
          description: Rule name.
        disjunctiveMatchStatements:
          items:
            $ref: '#/components/schemas/DisjunctiveMatchStatement'
          type: array
          description: The disjunctive match statements contained within this rule.
        kind:
          description: The kind of resource this is, in this case dfareporting#channelGroupingRule.
          type: string
      description: Represents a DfaReporting channel grouping rule.
      type: object
    CreativeFieldValue:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeFieldValue".'
        value:
          description: Value of this creative field value. It needs to be less than 256 characters in length and unique per creative field.
          type: string
        id:
          type: string
          description: ID of this creative field value. This is a read-only, auto-generated field.
          format: int64
      type: object
      id: CreativeFieldValue
      description: Contains properties of a creative field value.
    BillingProfilesListResponse:
      type: object
      properties:
        billingProfiles:
          items:
            $ref: '#/components/schemas/BillingProfile'
          description: Billing profiles collection.
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingProfilesListResponse".'
          type: string
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
      description: Billing profile List Response
      id: BillingProfilesListResponse
    SortedDimension:
      id: SortedDimension
      description: Represents a sorted dimension.
      properties:
        sortOrder:
          type: string
          description: An optional sort order for the dimension column.
          enum:
            - ASCENDING
            - DESCENDING
          enumDescriptions:
            - ''
            - ''
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#sortedDimension.
        name:
          type: string
          description: The name of the dimension.
      type: object
    TagData:
      description: Placement Tag Data
      properties:
        adId:
          type: string
          description: Ad associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING.
          format: int64
        impressionTag:
          description: Tag string for serving an ad.
          type: string
        creativeId:
          description: Creative associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING.
          format: int64
          type: string
        clickTag:
          description: Tag string to record a click.
          type: string
        format:
          type: string
          description: TagData tag format of this tag.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - PLACEMENT_TAG_STANDARD
            - PLACEMENT_TAG_IFRAME_JAVASCRIPT
            - PLACEMENT_TAG_IFRAME_ILAYER
            - PLACEMENT_TAG_INTERNAL_REDIRECT
            - PLACEMENT_TAG_JAVASCRIPT
            - PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT
            - PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT
            - PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT
            - PLACEMENT_TAG_CLICK_COMMANDS
            - PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH
            - PLACEMENT_TAG_TRACKING
            - PLACEMENT_TAG_TRACKING_IFRAME
            - PLACEMENT_TAG_TRACKING_JAVASCRIPT
            - PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3
            - PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY
            - PLACEMENT_TAG_JAVASCRIPT_LEGACY
            - PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY
            - PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY
            - PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4
            - PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT
      id: TagData
      type: object
    ConversionError:
      properties:
        code:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The error code.
          type: string
          enum:
            - INVALID_ARGUMENT
            - INTERNAL
            - PERMISSION_DENIED
            - NOT_FOUND
        message:
          description: A description of the error.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionError".'
      description: The error code and description for a conversion that failed to insert or update.
      id: ConversionError
      type: object
    DateRange:
      type: object
      id: DateRange
      properties:
        kind:
          description: The kind of resource this is, in this case dfareporting#dateRange.
          type: string
        relativeDateRange:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: The date range relative to the date of when the report is run.
          enum:
            - TODAY
            - YESTERDAY
            - WEEK_TO_DATE
            - MONTH_TO_DATE
            - QUARTER_TO_DATE
            - YEAR_TO_DATE
            - PREVIOUS_WEEK
            - PREVIOUS_MONTH
            - PREVIOUS_QUARTER
            - PREVIOUS_YEAR
            - LAST_7_DAYS
            - LAST_30_DAYS
            - LAST_90_DAYS
            - LAST_365_DAYS
            - LAST_24_MONTHS
            - LAST_14_DAYS
            - LAST_60_DAYS
          type: string
        endDate:
          format: date
          type: string
        startDate:
          type: string
          format: date
      description: Represents a date range.
    AdvertiserGroup:
      description: Groups advertisers together so that reports can be generated for the entire group at once.
      properties:
        id:
          type: string
          format: int64
          description: ID of this advertiser group. This is a read-only, auto-generated field.
        name:
          type: string
          description: Name of this advertiser group. This is a required field and must be less than 256 characters long and unique among advertiser groups of the same account.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiserGroup".'
          type: string
        accountId:
          type: string
          description: Account ID of this advertiser group. This is a read-only field that can be left blank.
          format: int64
      type: object
      id: AdvertiserGroup
    CustomRichMediaEvents:
      properties:
        filteredEventIds:
          type: array
          items:
            $ref: '#/components/schemas/DimensionValue'
          description: List of custom rich media event IDs. Dimension values must be all of type dfa:richMediaEventTypeIdAndName.
        kind:
          description: The kind of resource this is, in this case dfareporting#customRichMediaEvents.
          type: string
      id: CustomRichMediaEvents
      type: object
      description: Represents a Custom Rich Media Events group.
    DayPartTargeting:
      description: Day Part Targeting.
      type: object
      properties:
        hoursOfDay:
          items:
            format: int32
            type: integer
          description: Hours of the day when the ad will serve, where 0 is midnight to 1 AM and 23 is 11 PM to midnight. Can be specified with days of week, in which case the ad would serve during these hours on the specified days. For example if Monday, Wednesday, Friday are the days of week specified and 9-10am, 3-5pm (hours 9, 15, and 16) is specified, the ad would serve Monday, Wednesdays, and Fridays at 9-10am and 3-5pm. Acceptable values are 0 to 23, inclusive.
          type: array
        userLocalTime:
          type: boolean
          description: Whether or not to use the user's local time. If false, the America/New York time zone applies.
        daysOfWeek:
          type: array
          items:
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
          description: 'Days of the week when the ad will serve. Acceptable values are: - "SUNDAY" - "MONDAY" - "TUESDAY" - "WEDNESDAY" - "THURSDAY" - "FRIDAY" - "SATURDAY" '
      id: DayPartTargeting
    SizesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#sizesListResponse".'
          type: string
        sizes:
          items:
            $ref: '#/components/schemas/Size'
          type: array
          description: Size collection.
      id: SizesListResponse
      description: Size List Response
      type: object
    DeepLink:
      description: Contains information about a landing page deep link.
      type: object
      id: DeepLink
      properties:
        appUrl:
          type: string
          description: The URL of the mobile app being linked to.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#deepLink".'
          type: string
        fallbackUrl:
          type: string
          description: The fallback URL. This URL will be served to users who do not have the mobile app installed.
        mobileApp:
          $ref: '#/components/schemas/MobileApp'
          description: The mobile app targeted by this deep link.
        remarketingListIds:
          description: Ads served to users on these remarketing lists will use this deep link. Applicable when mobileApp.directory is APPLE_APP_STORE.
          items:
            format: int64
            type: string
          type: array
    PathReportDimensionValue:
      description: Represents a PathReportDimensionValue resource.
      id: PathReportDimensionValue
      type: object
      properties:
        matchType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - EXACT
            - BEGINS_WITH
            - CONTAINS
            - WILDCARD_EXPRESSION
          description: Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
        values:
          items:
            type: string
          description: The possible values of the dimension.
          type: array
        ids:
          type: array
          items:
            type: string
          description: The possible ID's associated with the value if available.
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#pathReportDimensionValue.
        dimensionName:
          type: string
          description: The name of the dimension.
    ChangeLog:
      id: ChangeLog
      description: Describes a change that a user has made to a resource.
      type: object
      properties:
        userProfileId:
          type: string
          description: ID of the user who modified the object.
          format: int64
        objectId:
          type: string
          description: ID of the object of this change log. The object could be a campaign, placement, ad, or other type.
          format: int64
        objectType:
          type: string
          description: Object type of the change log.
        oldValue:
          type: string
          description: Old value of the object field.
        fieldName:
          type: string
          description: Field name of the object which changed.
        action:
          type: string
          description: Action which caused the change.
        id:
          type: string
          description: ID of this change log.
          format: int64
        accountId:
          type: string
          format: int64
          description: Account ID of the modified object.
        changeTime:
          type: string
          format: date-time
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#changeLog".'
          type: string
        transactionId:
          format: int64
          description: Transaction ID of this change log. When a single API call results in many changes, each change will have a separate ID in the change log but will share the same transactionId.
          type: string
        newValue:
          type: string
          description: New value of the object field.
        userProfileName:
          description: User profile name of the user who modified the object.
          type: string
        subaccountId:
          format: int64
          type: string
          description: Subaccount ID of the modified object.
    ThirdPartyAuthenticationToken:
      type: object
      id: ThirdPartyAuthenticationToken
      properties:
        value:
          type: string
          description: Value of the third-party authentication token. This is a read-only, auto-generated field.
        name:
          type: string
          description: Name of the third-party authentication token.
      description: Third Party Authentication Token
    DfpSettings:
      id: DfpSettings
      description: Google Ad Manager Settings
      type: object
      properties:
        publisherPortalOnly:
          type: boolean
          description: Whether this directory site is available only via Publisher Portal.
        dfpNetworkCode:
          type: string
          description: Ad Manager network code for this directory site.
        pubPaidPlacementAccepted:
          description: Whether this directory site accepts publisher-paid tags.
          type: boolean
        dfpNetworkName:
          description: Ad Manager network name for this directory site.
          type: string
        programmaticPlacementAccepted:
          type: boolean
          description: Whether this directory site accepts programmatic placements.
    AdvertisersListResponse:
      id: AdvertisersListResponse
      type: object
      description: Advertiser List Response
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertisersListResponse".'
        advertisers:
          type: array
          items:
            $ref: '#/components/schemas/Advertiser'
          description: Advertiser collection.
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
    DimensionFilter:
      properties:
        dimensionName:
          type: string
          description: The name of the dimension to filter.
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#dimensionFilter.
        value:
          description: The value of the dimension to filter.
          type: string
      id: DimensionFilter
      type: object
      description: Represents a dimension filter.
    UserProfileList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserProfile'
          type: array
          description: The user profiles returned in this response.
        etag:
          type: string
          description: Etag of this resource.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userProfileList".'
          type: string
      id: UserProfileList
      type: object
      description: Represents the list of user profiles.
    ObjectFilter:
      type: object
      properties:
        objectIds:
          type: array
          items:
            format: int64
            type: string
          description: Applicable when status is ASSIGNED. The user has access to objects with these object IDs.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#objectFilter".'
        status:
          description: Status of the filter. NONE means the user has access to none of the objects. ALL means the user has access to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds list.
          enum:
            - NONE
            - ASSIGNED
            - ALL
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
      description: Object Filter.
      id: ObjectFilter
    AdSlot:
      properties:
        linkedPlacementId:
          description: ID of the placement from an external platform that is linked to this ad slot.
          type: string
          format: int64
        primary:
          type: boolean
          description: Primary ad slot of a roadblock inventory item.
        name:
          type: string
          description: Name of this ad slot.
        compatibility:
          type: string
          enum:
            - DISPLAY
            - DISPLAY_INTERSTITIAL
            - APP
            - APP_INTERSTITIAL
            - IN_STREAM_VIDEO
            - IN_STREAM_AUDIO
          description: Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        height:
          type: string
          format: int64
          description: Height of this ad slot.
        paymentSourceType:
          enum:
            - PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID
            - PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID
          type: string
          enumDescriptions:
            - ''
            - ''
          description: Payment source type of this ad slot.
        comment:
          type: string
          description: Comment for this ad slot.
        width:
          description: Width of this ad slot.
          type: string
          format: int64
      type: object
      id: AdSlot
      description: Ad Slot
    UserRolePermissionsListResponse:
      type: object
      id: UserRolePermissionsListResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolePermissionsListResponse".'
        userRolePermissions:
          type: array
          items:
            $ref: '#/components/schemas/UserRolePermission'
          description: User role permission collection.
      description: User Role Permission List Response
    TagSettings:
      id: TagSettings
      properties:
        dynamicTagEnabled:
          type: boolean
          description: Whether dynamic floodlight tags are enabled.
        imageTagEnabled:
          description: Whether image tags are enabled.
          type: boolean
      description: Dynamic and Image Tag Settings.
      type: object
    DimensionValue:
      type: object
      id: DimensionValue
      description: Represents a DimensionValue resource.
      properties:
        matchType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - EXACT
            - BEGINS_WITH
            - CONTAINS
            - WILDCARD_EXPRESSION
          description: Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
        kind:
          description: The kind of resource this is, in this case dfareporting#dimensionValue.
          type: string
        etag:
          type: string
          description: The eTag of this response for caching purposes.
        id:
          description: The ID associated with the value if available.
          type: string
        value:
          description: The value of the dimension.
          type: string
        dimensionName:
          type: string
          description: The name of the dimension.
    OrderContact:
      description: Contact of an order.
      id: OrderContact
      type: object
      properties:
        signatureUserProfileId:
          type: string
          format: int64
          description: ID of the user profile containing the signature that will be embedded into order documents.
        contactName:
          type: string
          description: Name of this contact.
        contactInfo:
          description: Free-form information about this contact. It could be any information related to this contact in addition to type, title, name, and signature user profile ID.
          type: string
        contactType:
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - PLANNING_ORDER_CONTACT_BUYER_CONTACT
            - PLANNING_ORDER_CONTACT_BUYER_BILLING_CONTACT
            - PLANNING_ORDER_CONTACT_SELLER_CONTACT
          type: string
          description: Type of this contact.
        contactTitle:
          description: Title of this contact.
          type: string
    VideoOffset:
      description: Video Offset
      properties:
        offsetSeconds:
          type: integer
          format: int32
          description: Duration, in seconds. Do not set when offsetPercentage is set. Acceptable values are 0 to 86399, inclusive.
        offsetPercentage:
          format: int32
          description: Duration, as a percentage of video duration. Do not set when offsetSeconds is set. Acceptable values are 0 to 100, inclusive.
          type: integer
      id: VideoOffset
      type: object
    AccountPermissionGroup:
      type: object
      properties:
        id:
          type: string
          description: ID of this account permission group.
          format: int64
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountPermissionGroup".'
        name:
          description: Name of this account permission group.
          type: string
      id: AccountPermissionGroup
      description: AccountPermissionGroups contains a mapping of permission group IDs to names. A permission group is a grouping of account permissions.
    Account:
      properties:
        description:
          type: string
          description: Description of this account.
        reportsConfiguration:
          description: Reporting configuration of this account.
          $ref: '#/components/schemas/ReportsConfiguration'
        countryId:
          description: ID of the country associated with this account.
          type: string
          format: int64
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#account".'
          type: string
        currencyId:
          format: int64
          description: 'ID of currency associated with this account. This is a required field. Acceptable values are: - "1" for USD - "2" for GBP - "3" for ESP - "4" for SEK - "5" for CAD - "6" for JPY - "7" for DEM - "8" for AUD - "9" for FRF - "10" for ITL - "11" for DKK - "12" for NOK - "13" for FIM - "14" for ZAR - "15" for IEP - "16" for NLG - "17" for EUR - "18" for KRW - "19" for TWD - "20" for SGD - "21" for CNY - "22" for HKD - "23" for NZD - "24" for MYR - "25" for BRL - "26" for PTE - "28" for CLP - "29" for TRY - "30" for ARS - "31" for PEN - "32" for ILS - "33" for CHF - "34" for VEF - "35" for COP - "36" for GTQ - "37" for PLN - "39" for INR - "40" for THB - "41" for IDR - "42" for CZK - "43" for RON - "44" for HUF - "45" for RUB - "46" for AED - "47" for BGN - "48" for HRK - "49" for MXN - "50" for NGN - "51" for EGP '
          type: string
        accountProfile:
          enumDescriptions:
            - ''
            - ''
          type: string
          enum:
            - ACCOUNT_PROFILE_BASIC
            - ACCOUNT_PROFILE_STANDARD
          description: Profile for this account. This is a read-only field that can be left blank.
        active:
          description: Whether this account is active.
          type: boolean
        availablePermissionIds:
          items:
            type: string
            format: int64
          description: User role permissions available to the user roles of this account.
          type: array
        maximumImageSize:
          type: string
          format: int64
          description: Maximum image size allowed for this account, in kilobytes. Value must be greater than or equal to 1.
        locale:
          description: 'Locale of this account. Acceptable values are: - "cs" (Czech) - "de" (German) - "en" (English) - "en-GB" (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it" (Italian) - "ja" (Japanese) - "ko" (Korean) - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) - "sv" (Swedish) - "tr" (Turkish) - "zh-CN" (Chinese Simplified) - "zh-TW" (Chinese Traditional) '
          type: string
        nielsenOcrEnabled:
          type: boolean
          description: Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by default.
        defaultCreativeSizeId:
          format: int64
          description: Default placement dimensions for this account.
          type: string
        id:
          format: int64
          type: string
          description: ID of this account. This is a read-only, auto-generated field.
        activeAdsLimitTier:
          type: string
          enum:
            - ACTIVE_ADS_TIER_40K
            - ACTIVE_ADS_TIER_75K
            - ACTIVE_ADS_TIER_100K
            - ACTIVE_ADS_TIER_200K
            - ACTIVE_ADS_TIER_300K
            - ACTIVE_ADS_TIER_500K
            - ACTIVE_ADS_TIER_750K
            - ACTIVE_ADS_TIER_1M
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Maximum number of active ads allowed for this account.
        activeViewOptOut:
          type: boolean
          description: Whether to serve creatives with Active View tags. If disabled, viewability data will not be available for any impressions.
        name:
          type: string
          description: Name of this account. This is a required field, and must be less than 128 characters long and be globally unique.
        shareReportsWithTwitter:
          type: boolean
          description: Share Path to Conversion reports with Twitter.
        teaserSizeLimit:
          format: int64
          type: string
          description: File size limit in kilobytes of Rich Media teaser creatives. Acceptable values are 1 to 10240, inclusive.
        accountPermissionIds:
          type: array
          items:
            format: int64
            type: string
          description: Account permissions assigned to this account.
      type: object
      id: Account
      description: Contains properties of a Campaign Manager account.
    InventoryItem:
      properties:
        contentCategoryId:
          format: int64
          description: Content category ID of this inventory item.
          type: string
        id:
          description: ID of this inventory item.
          type: string
          format: int64
        inPlan:
          description: Whether this inventory item is in plan.
          type: boolean
        accountId:
          type: string
          format: int64
          description: Account ID of this inventory item.
        siteId:
          description: ID of the site this inventory item is associated with.
          type: string
          format: int64
        projectId:
          format: int64
          description: Project ID of this inventory item.
          type: string
        subaccountId:
          format: int64
          description: Subaccount ID of this inventory item.
          type: string
        pricing:
          description: Pricing of this inventory item.
          $ref: '#/components/schemas/Pricing'
        type:
          type: string
          description: Type of inventory item.
          enumDescriptions:
            - ''
            - ''
          enum:
            - PLANNING_PLACEMENT_TYPE_REGULAR
            - PLANNING_PLACEMENT_TYPE_CREDIT
        placementStrategyId:
          type: string
          format: int64
          description: Placement strategy ID of this inventory item.
        estimatedClickThroughRate:
          description: Estimated click-through rate of this inventory item.
          format: int64
          type: string
        orderId:
          type: string
          description: Order ID of this inventory item.
          format: int64
        negotiationChannelId:
          type: string
          description: Negotiation channel ID of this inventory item.
          format: int64
        name:
          type: string
          description: Name of this inventory item. For standalone inventory items, this is the same name as that of its only ad slot. For group inventory items, this can differ from the name of any of its ad slots.
        adSlots:
          type: array
          description: Ad slots of this inventory item. If this inventory item represents a standalone placement, there will be exactly one ad slot. If this inventory item represents a placement group, there will be more than one ad slot, each representing one child placement in that placement group.
          items:
            $ref: '#/components/schemas/AdSlot'
        advertiserId:
          description: Advertiser ID of this inventory item.
          format: int64
          type: string
        lastModifiedInfo:
          $ref: '#/components/schemas/LastModifiedInfo'
          description: Information about the most recent modification of this inventory item.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#inventoryItem".'
        rfpId:
          description: RFP ID of this inventory item.
          type: string
          format: int64
        estimatedConversionRate:
          description: Estimated conversion rate of this inventory item.
          format: int64
          type: string
      type: object
      description: Represents a buy from the Planning inventory store.
      id: InventoryItem
    FloodlightConfigurationsListResponse:
      id: FloodlightConfigurationsListResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightConfigurationsListResponse".'
        floodlightConfigurations:
          items:
            $ref: '#/components/schemas/FloodlightConfiguration'
          description: Floodlight configuration collection.
          type: array
      description: Floodlight Configuration List Response
      type: object
    CreativeGroup:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeGroup".'
          type: string
        groupNumber:
          format: int32
          type: integer
          description: Subgroup of the creative group. Assign your creative groups to a subgroup in order to filter or manage them more easily. This field is required on insertion and is read-only after insertion. Acceptable values are 1 to 2, inclusive.
        advertiserId:
          description: Advertiser ID of this creative group. This is a required field on insertion.
          type: string
          format: int64
        name:
          description: Name of this creative group. This is a required field and must be less than 256 characters long and unique among creative groups of the same advertiser.
          type: string
        accountId:
          format: int64
          type: string
          description: Account ID of this creative group. This is a read-only field that can be left blank.
        id:
          description: ID of this creative group. This is a read-only, auto-generated field.
          type: string
          format: int64
        subaccountId:
          description: Subaccount ID of this creative group. This is a read-only field that can be left blank.
          format: int64
          type: string
        advertiserIdDimensionValue:
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
      id: CreativeGroup
      type: object
      description: Contains properties of a creative group.
    TargetableRemarketingListsListResponse:
      id: TargetableRemarketingListsListResponse
      description: Targetable remarketing list response
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#targetableRemarketingListsListResponse".'
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        targetableRemarketingLists:
          description: Targetable remarketing list collection.
          type: array
          items:
            $ref: '#/components/schemas/TargetableRemarketingList'
      type: object
    MeasurementPartnerAdvertiserLink:
      properties:
        partnerAdvertiserId:
          type: string
          description: .
        measurementPartner:
          enumDescriptions:
            - ''
            - ''
            - ''
          description: Measurement partner used for tag wrapping.
          type: string
          enum:
            - NONE
            - INTEGRAL_AD_SCIENCE
            - DOUBLE_VERIFY
        linkStatus:
          enum:
            - MEASUREMENT_PARTNER_UNLINKED
            - MEASUREMENT_PARTNER_LINKED
            - MEASUREMENT_PARTNER_LINK_PENDING
            - MEASUREMENT_PARTNER_LINK_FAILURE
            - MEASUREMENT_PARTNER_LINK_OPT_OUT
            - MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING
            - MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING
            - MEASUREMENT_PARTNER_MODE_CHANGE_PENDING
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: .
      id: MeasurementPartnerAdvertiserLink
      type: object
    UniversalAdId:
      type: object
      id: UniversalAdId
      description: 'A Universal Ad ID as per the VAST 4.0 spec. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID.'
      properties:
        registry:
          description: Registry used for the Ad ID value.
          type: string
          enum:
            - OTHER
            - AD_ID_OFFICIAL
            - CLEARCAST
            - DCM
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        value:
          type: string
          description: 'ID value for this creative. Only alphanumeric characters and the following symbols are valid: "_/\-". Maximum length is 64 characters. Read only when registry is DCM.'
    BillingProfile:
      description: Contains properties of a Campaign Manager Billing Profile.
      type: object
      id: BillingProfile
      properties:
        paymentsAccountId:
          type: string
          description: The ID of the payment account the billing profile belongs to. This is a read-only field.
        countryCode:
          description: Country code of this billing profile.This is a read-only field.
          type: string
        consolidatedInvoice:
          description: Consolidated invoice option for this billing profile. Used to get a single, consolidated invoice across the chosen invoice level.
          type: boolean
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingProfile".'
        secondaryPaymentsCustomerId:
          type: string
          description: The ID of the secondary payment customer the billing profile belongs to. This is a read-only field.
        paymentsCustomerId:
          type: string
          description: The ID of the payment customer the billing profile belongs to. This is a read-only field.
        name:
          type: string
          description: Name of this billing profile. This is a required field and must be less than 256 characters long and must be unique among billing profile in the same account.
        id:
          description: ID of this billing profile. This is a read-only, auto-generated field.
          format: int64
          type: string
        currencyCode:
          type: string
          description: Billing currency code in ISO 4217 format.This is a read-only field.
        purchaseOrder:
          description: Purchase order (PO) for this billing profile. This PO number is used in the invoices for all of the advertisers in this billing profile.
          type: string
        status:
          enumDescriptions:
            - ''
            - ''
            - ''
          description: Status of this billing profile.This is a read-only field.
          type: string
          enum:
            - UNDER_REVIEW
            - ACTIVE
            - ARCHIVED
        invoiceLevel:
          description: Invoice level for this billing profile. Used to group fees into separate invoices by account, advertiser, or campaign.
          enum:
            - ACCOUNT_LEVEL
            - ADVERTISER_LEVEL
            - CAMPAIGN_LEVEL
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
        isDefault:
          type: boolean
          description: True if the billing profile is the account default profile. This is a read-only field.
    Recipient:
      type: object
      id: Recipient
      description: Represents a recipient.
      properties:
        deliveryType:
          description: The delivery type for the recipient.
          enum:
            - LINK
            - ATTACHMENT
          enumDescriptions:
            - ''
            - ''
          annotations:
            required:
              - dfareporting.reports.insert
              - dfareporting.reports.update
          type: string
        kind:
          description: The kind of resource this is, in this case dfareporting#recipient.
          type: string
        email:
          description: The email address of the recipient.
          annotations:
            required:
              - dfareporting.reports.insert
              - dfareporting.reports.update
          type: string
    EventTag:
      id: EventTag
      description: Contains properties of an event tag.
      properties:
        advertiserId:
          type: string
          format: int64
          description: Advertiser ID of this event tag. This field or the campaignId field is required on insertion.
        enabledByDefault:
          description: Whether this event tag should be automatically enabled for all of the advertiser's campaigns and ads.
          type: boolean
        urlEscapeLevels:
          description: Number of times the landing page URL should be URL-escaped before being appended to the click-through event tag URL. Only applies to click-through event tags as specified by the event tag type.
          type: integer
          format: int32
        url:
          description: Payload URL for this event tag. The URL on a click-through event tag should have a landing page URL appended to the end of it. This field is required on insertion.
          type: string
        siteFilterType:
          type: string
          description: Site filter type for this event tag. If no type is specified then the event tag will be applied to all sites.
          enumDescriptions:
            - ''
            - ''
          enum:
            - ALLOWLIST
            - BLOCKLIST
        accountId:
          type: string
          description: Account ID of this event tag. This is a read-only field that can be left blank.
          format: int64
        siteIds:
          type: array
          description: Filter list of site IDs associated with this event tag. The siteFilterType determines whether this is a allowlist or blocklist filter.
          items:
            format: int64
            type: string
        status:
          type: string
          enumDescriptions:
            - ''
            - ''
          enum:
            - ENABLED
            - DISABLED
          description: Status of this event tag. Must be ENABLED for this event tag to fire. This is a required field.
        type:
          description: Event tag type. Can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking. This is a required field.
          enum:
            - IMPRESSION_IMAGE_EVENT_TAG
            - IMPRESSION_JAVASCRIPT_EVENT_TAG
            - CLICK_THROUGH_EVENT_TAG
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        subaccountId:
          format: int64
          type: string
          description: Subaccount ID of this event tag. This is a read-only field that can be left blank.
        advertiserIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
        campaignId:
          description: Campaign ID of this event tag. This field or the advertiserId field is required on insertion.
          format: int64
          type: string
        excludeFromAdxRequests:
          description: Whether to remove this event tag from ads that are trafficked through Display & Video 360 to Ad Exchange. This may be useful if the event tag uses a pixel that is unapproved for Ad Exchange bids on one or more networks, such as the Google Display Network.
          type: boolean
        sslCompliant:
          type: boolean
          description: Whether this tag is SSL-compliant or not. This is a read-only field.
        campaignIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the campaign. This is a read-only, auto-generated field.
        name:
          type: string
          description: Name of this event tag. This is a required field and must be less than 256 characters long.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#eventTag".'
          type: string
        id:
          format: int64
          type: string
          description: ID of this event tag. This is a read-only, auto-generated field.
      type: object
    OmnitureSettings:
      id: OmnitureSettings
      properties:
        omnitureCostDataEnabled:
          type: boolean
          description: Whether placement cost data will be sent to Omniture. This property can be enabled only if omnitureIntegrationEnabled is true.
        omnitureIntegrationEnabled:
          description: Whether Omniture integration is enabled. This property can be enabled only when the "Advanced Ad Serving" account setting is enabled.
          type: boolean
      description: Omniture Integration Settings.
      type: object
    SitesListResponse:
      description: Site List Response
      type: object
      id: SitesListResponse
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Site'
          description: Site collection.
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#sitesListResponse".'
          type: string
    OperatingSystem:
      type: object
      properties:
        desktop:
          description: Whether this operating system is for desktop.
          type: boolean
        name:
          description: Name of this operating system.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#operatingSystem".'
          type: string
        dartId:
          description: DART ID of this operating system. This is the ID used for targeting.
          type: string
          format: int64
        mobile:
          type: boolean
          description: Whether this operating system is for mobile.
      description: Contains information about an operating system that can be targeted by ads.
      id: OperatingSystem
    CompanionClickThroughOverride:
      properties:
        creativeId:
          format: int64
          description: ID of the creative for this companion click-through override.
          type: string
        clickThroughUrl:
          description: Click-through URL of this companion click-through override.
          $ref: '#/components/schemas/ClickThroughUrl'
      description: Companion Click-through override.
      id: CompanionClickThroughOverride
      type: object
    FloodlightActivityGroup:
      description: Contains properties of a Floodlight activity group.
      id: FloodlightActivityGroup
      properties:
        tagString:
          type: string
          description: 'Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activity groups of the same floodlight configuration. This field is read-only after insertion.'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivityGroup".'
          type: string
        type:
          type: string
          description: Type of the floodlight activity group. This is a required field that is read-only after insertion.
          enum:
            - COUNTER
            - SALE
          enumDescriptions:
            - ''
            - ''
        idDimensionValue:
          description: Dimension value for the ID of this floodlight activity group. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        id:
          type: string
          format: int64
          description: ID of this floodlight activity group. This is a read-only, auto-generated field.
        advertiserIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
        name:
          type: string
          description: Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and cannot contain quotes.
        advertiserId:
          description: Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over either from the floodlight configuration's advertiser or from the existing activity group's advertiser.
          format: int64
          type: string
        subaccountId:
          description: Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.
          format: int64
          type: string
        floodlightConfigurationIdDimensionValue:
          description: Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        accountId:
          format: int64
          type: string
          description: Account ID of this floodlight activity group. This is a read-only field that can be left blank.
        floodlightConfigurationId:
          description: Floodlight configuration ID of this floodlight activity group. This is a required field.
          format: int64
          type: string
      type: object
    OperatingSystemsListResponse:
      id: OperatingSystemsListResponse
      type: object
      properties:
        operatingSystems:
          description: Operating system collection.
          items:
            $ref: '#/components/schemas/OperatingSystem'
          type: array
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#operatingSystemsListResponse".'
      description: Operating System List Response
    CreativeOptimizationConfiguration:
      type: object
      description: Creative optimization settings.
      properties:
        optimizationModel:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Optimization model for this configuration.
          enum:
            - CLICK
            - POST_CLICK
            - POST_IMPRESSION
            - POST_CLICK_AND_IMPRESSION
            - VIDEO_COMPLETION
          type: string
        name:
          type: string
          description: Name of this creative optimization config. This is a required field and must be less than 129 characters long.
        id:
          type: string
          format: int64
          description: ID of this creative optimization config. This field is auto-generated when the campaign is inserted or updated. It can be null for existing campaigns.
        optimizationActivitys:
          description: List of optimization activities associated with this configuration.
          type: array
          items:
            $ref: '#/components/schemas/OptimizationActivity'
      id: CreativeOptimizationConfiguration
    AccountActiveAdSummary:
      description: Gets a summary of active ads in an account.
      properties:
        availableAds:
          format: int64
          type: string
          description: Ads that can be activated for the account.
        activeAdsLimitTier:
          description: Maximum number of active ads allowed for the account.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - ACTIVE_ADS_TIER_40K
            - ACTIVE_ADS_TIER_75K
            - ACTIVE_ADS_TIER_100K
            - ACTIVE_ADS_TIER_200K
            - ACTIVE_ADS_TIER_300K
            - ACTIVE_ADS_TIER_500K
            - ACTIVE_ADS_TIER_750K
            - ACTIVE_ADS_TIER_1M
        accountId:
          type: string
          description: ID of the account.
          format: int64
        activeAds:
          type: string
          format: int64
          description: Ads that have been activated for the account
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountActiveAdSummary".'
      id: AccountActiveAdSummary
      type: object
    BillingAssignment:
      id: BillingAssignment
      properties:
        campaignId:
          description: ID of the campaign associated with the billing assignment. Wildcard (*) means this assignment is not limited to a single campaign
          type: string
        subaccountId:
          description: ID of the subaccount associated with the billing assignment.Wildcard (*) means this assignment is not limited to a single subaccountThis is a read-only, auto-generated field.
          type: string
        advertiserId:
          type: string
          description: ID of the advertiser associated with the billing assignment.Wildcard (*) means this assignment is not limited to a single advertiser
        accountId:
          type: string
          description: ID of the account associated with the billing assignment.This is a read-only, auto-generated field.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingAssignment".'
          type: string
      description: List account, subaccount, advertiser, and campaign associated with a given Billing Profile.
      type: object
    BillingAssignmentsListResponse:
      type: object
      id: BillingAssignmentsListResponse
      properties:
        billingAssignments:
          description: Billing assignments collection.
          items:
            $ref: '#/components/schemas/BillingAssignment'
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingAssignmentsListResponse".'
          type: string
      description: Billing assignment List Response
    ChangeLogsListResponse:
      id: ChangeLogsListResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#changeLogsListResponse".'
          type: string
        changeLogs:
          type: array
          items:
            $ref: '#/components/schemas/ChangeLog'
          description: Change log collection.
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      description: Change Log List Response
      type: object
    PlacementsGenerateTagsResponse:
      description: Placement GenerateTags Response
      id: PlacementsGenerateTagsResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementsGenerateTagsResponse".'
          type: string
        placementTags:
          items:
            $ref: '#/components/schemas/PlacementTag'
          type: array
          description: Set of generated tags for the specified placements.
      type: object
    RemarketingListsListResponse:
      properties:
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#remarketingListsListResponse".'
        remarketingLists:
          items:
            $ref: '#/components/schemas/RemarketingList'
          description: Remarketing list collection.
          type: array
      id: RemarketingListsListResponse
      type: object
      description: Remarketing list response
    MobileAppsListResponse:
      id: MobileAppsListResponse
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileAppsListResponse".'
          type: string
        mobileApps:
          type: array
          description: Mobile apps collection.
          items:
            $ref: '#/components/schemas/MobileApp'
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      description: Mobile app List Response
    Activities:
      description: Represents an activity group.
      type: object
      properties:
        metricNames:
          type: array
          description: List of names of floodlight activity metrics.
          items:
            type: string
        filters:
          type: array
          description: List of activity filters. The dimension values need to be all either of type "dfa:activity" or "dfa:activityGroup".
          items:
            $ref: '#/components/schemas/DimensionValue'
        kind:
          description: The kind of resource this is, in this case dfareporting#activities.
          type: string
      id: Activities
    Language:
      properties:
        id:
          description: Language ID of this language. This is the ID used for targeting and generating reports.
          type: string
          format: int64
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#language".'
        languageCode:
          description: Format of language code is an ISO 639 two-letter language code optionally followed by an underscore followed by an ISO 3166 code. Examples are "en" for English or "zh_CN" for Simplified Chinese.
          type: string
        name:
          description: Name of this language.
          type: string
      description: Contains information about a language that can be targeted by ads.
      type: object
      id: Language
    CreativeCustomEvent:
      description: Creative Custom Event.
      properties:
        artworkLabel:
          type: string
          description: Artwork label column, used to link events in Campaign Manager back to events in Studio. This is a required field and should not be modified after insertion.
        targetType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Target type used by the event.
          enum:
            - TARGET_BLANK
            - TARGET_TOP
            - TARGET_SELF
            - TARGET_PARENT
            - TARGET_POPUP
          type: string
        videoReportingId:
          description: Video reporting ID, used to differentiate multiple videos in a single creative. This is a read-only field.
          type: string
        advertiserCustomEventId:
          description: Unique ID of this event used by Reporting and Data Transfer. This is a read-only field.
          format: int64
          type: string
        exitClickThroughUrl:
          $ref: '#/components/schemas/CreativeClickThroughUrl'
          description: Exit click-through URL for the event. This field is used only for exit events.
        id:
          description: ID of this event. This is a required field and should not be modified after insertion.
          type: string
          format: int64
        popupWindowProperties:
          $ref: '#/components/schemas/PopupWindowProperties'
          description: Properties for rich media popup windows. This field is used only for exit events.
        advertiserCustomEventName:
          description: User-entered name for the event.
          type: string
        advertiserCustomEventType:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          description: Type of the event. This is a read-only field.
          enum:
            - ADVERTISER_EVENT_TIMER
            - ADVERTISER_EVENT_EXIT
            - ADVERTISER_EVENT_COUNTER
        artworkType:
          description: Artwork type used by the creative.This is a read-only field.
          type: string
          enum:
            - ARTWORK_TYPE_FLASH
            - ARTWORK_TYPE_HTML5
            - ARTWORK_TYPE_MIXED
            - ARTWORK_TYPE_IMAGE
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
      id: CreativeCustomEvent
      type: object
    BillingRatesListResponse:
      type: object
      id: BillingRatesListResponse
      properties:
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingRatesListResponse".'
        billingRates:
          items:
            $ref: '#/components/schemas/BillingRate'
          type: array
          description: Billing rates collection.
      description: Billing Rate List Response
    PricingSchedulePricingPeriod:
      properties:
        units:
          type: string
          format: int64
          description: Units of this pricing period. Acceptable values are 0 to 10000000000, inclusive.
        endDate:
          type: string
          format: date
        rateOrCostNanos:
          format: int64
          type: string
          description: Rate or cost of this pricing period in nanos (i.e., multipled by 1000000000). Acceptable values are 0 to 1000000000000000000, inclusive.
        startDate:
          format: date
          type: string
        pricingComment:
          description: Comments for this pricing period.
          type: string
      type: object
      description: Pricing Period
      id: PricingSchedulePricingPeriod
    CreativeAssetMetadata:
      id: CreativeAssetMetadata
      description: CreativeAssets contains properties of a creative asset file which will be uploaded or has already been uploaded. Refer to the creative sample code for how to upload assets and insert a creative.
      type: object
      properties:
        timerCustomEvents:
          description: List of timer events configured for the asset. This is a read-only, auto-generated field and only applicable to a rich media asset.
          type: array
          items:
            $ref: '#/components/schemas/CreativeCustomEvent'
        counterCustomEvents:
          description: List of counter events configured for the asset. This is a read-only, auto-generated field and only applicable to a rich media asset.
          items:
            $ref: '#/components/schemas/CreativeCustomEvent'
          type: array
        warnedValidationRules:
          description: 'Rules validated during code generation that generated a warning. This is a read-only, auto-generated field. Possible values are: - "ADMOB_REFERENCED" - "ASSET_FORMAT_UNSUPPORTED_DCM" - "ASSET_INVALID" - "CLICK_TAG_HARD_CODED" - "CLICK_TAG_INVALID" - "CLICK_TAG_IN_GWD" - "CLICK_TAG_MISSING" - "CLICK_TAG_MORE_THAN_ONE" - "CLICK_TAG_NON_TOP_LEVEL" - "COMPONENT_UNSUPPORTED_DCM" - "ENABLER_UNSUPPORTED_METHOD_DCM" - "EXTERNAL_FILE_REFERENCED" - "FILE_DETAIL_EMPTY" - "FILE_TYPE_INVALID" - "GWD_PROPERTIES_INVALID" - "HTML5_FEATURE_UNSUPPORTED" - "LINKED_FILE_NOT_FOUND" - "MAX_FLASH_VERSION_11" - "MRAID_REFERENCED" - "NOT_SSL_COMPLIANT" - "ORPHANED_ASSET" - "PRIMARY_HTML_MISSING" - "SVG_INVALID" - "ZIP_INVALID" '
          type: array
          items:
            enum:
              - CLICK_TAG_NON_TOP_LEVEL
              - CLICK_TAG_MISSING
              - CLICK_TAG_MORE_THAN_ONE
              - CLICK_TAG_INVALID
              - ORPHANED_ASSET
              - PRIMARY_HTML_MISSING
              - EXTERNAL_FILE_REFERENCED
              - MRAID_REFERENCED
              - ADMOB_REFERENCED
              - FILE_TYPE_INVALID
              - ZIP_INVALID
              - LINKED_FILE_NOT_FOUND
              - MAX_FLASH_VERSION_11
              - NOT_SSL_COMPLIANT
              - FILE_DETAIL_EMPTY
              - ASSET_INVALID
              - GWD_PROPERTIES_INVALID
              - ENABLER_UNSUPPORTED_METHOD_DCM
              - ASSET_FORMAT_UNSUPPORTED_DCM
              - COMPONENT_UNSUPPORTED_DCM
              - HTML5_FEATURE_UNSUPPORTED
              - CLICK_TAG_IN_GWD
              - CLICK_TAG_HARD_CODED
              - SVG_INVALID
              - CLICK_TAG_IN_RICH_MEDIA
              - MISSING_ENABLER_REFERENCE
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            type: string
        assetIdentifier:
          description: ID of the creative asset. This is a required field.
          $ref: '#/components/schemas/CreativeAssetId'
        id:
          type: string
          description: Numeric ID of the asset. This is a read-only, auto-generated field.
          format: int64
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeAssetMetadata".'
          type: string
        richMedia:
          type: boolean
          description: True if the uploaded asset is a rich media asset. This is a read-only, auto-generated field.
        detectedFeatures:
          items:
            enum:
              - CSS_FONT_FACE
              - CSS_BACKGROUND_SIZE
              - CSS_BORDER_IMAGE
              - CSS_BORDER_RADIUS
              - CSS_BOX_SHADOW
              - CSS_FLEX_BOX
              - CSS_HSLA
              - CSS_MULTIPLE_BGS
              - CSS_OPACITY
              - CSS_RGBA
              - CSS_TEXT_SHADOW
              - CSS_ANIMATIONS
              - CSS_COLUMNS
              - CSS_GENERATED_CONTENT
              - CSS_GRADIENTS
              - CSS_REFLECTIONS
              - CSS_TRANSFORMS
              - CSS_TRANSFORMS3D
              - CSS_TRANSITIONS
              - APPLICATION_CACHE
              - CANVAS
              - CANVAS_TEXT
              - DRAG_AND_DROP
              - HASH_CHANGE
              - HISTORY
              - AUDIO
              - VIDEO
              - INDEXED_DB
              - INPUT_ATTR_AUTOCOMPLETE
              - INPUT_ATTR_AUTOFOCUS
              - INPUT_ATTR_LIST
              - INPUT_ATTR_PLACEHOLDER
              - INPUT_ATTR_MAX
              - INPUT_ATTR_MIN
              - INPUT_ATTR_MULTIPLE
              - INPUT_ATTR_PATTERN
              - INPUT_ATTR_REQUIRED
              - INPUT_ATTR_STEP
              - INPUT_TYPE_SEARCH
              - INPUT_TYPE_TEL
              - INPUT_TYPE_URL
              - INPUT_TYPE_EMAIL
              - INPUT_TYPE_DATETIME
              - INPUT_TYPE_DATE
              - INPUT_TYPE_MONTH
              - INPUT_TYPE_WEEK
              - INPUT_TYPE_TIME
              - INPUT_TYPE_DATETIME_LOCAL
              - INPUT_TYPE_NUMBER
              - INPUT_TYPE_RANGE
              - INPUT_TYPE_COLOR
              - LOCAL_STORAGE
              - POST_MESSAGE
              - SESSION_STORAGE
              - WEB_SOCKETS
              - WEB_SQL_DATABASE
              - WEB_WORKERS
              - GEO_LOCATION
              - INLINE_SVG
              - SMIL
              - SVG_HREF
              - SVG_CLIP_PATHS
              - TOUCH
              - WEBGL
              - SVG_FILTERS
              - SVG_FE_IMAGE
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
          description: List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field.
          type: array
        exitCustomEvents:
          type: array
          items:
            $ref: '#/components/schemas/CreativeCustomEvent'
          description: List of exit events configured for the asset. This is a read-only, auto-generated field and only applicable to a rich media asset.
        idDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the numeric ID of the asset. This is a read-only, auto-generated field.
        clickTags:
          type: array
          items:
            $ref: '#/components/schemas/ClickTag'
          description: List of detected click tags for assets. This is a read-only, auto-generated field. This field is empty for a rich media asset.
    VideoFormat:
      description: Contains information about supported video formats.
      id: VideoFormat
      properties:
        targetBitRate:
          description: The target bit rate of this video format.
          type: integer
          format: int32
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoFormat".'
        fileType:
          enum:
            - FLV
            - THREEGPP
            - MP4
            - WEBM
            - M3U8
          description: File type of the video format.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        id:
          format: int32
          description: ID of the video format.
          type: integer
        resolution:
          description: The resolution of this video format.
          $ref: '#/components/schemas/Size'
      type: object
    CompanionSetting:
      description: Companion Settings
      id: CompanionSetting
      type: object
      properties:
        enabledSizes:
          items:
            $ref: '#/components/schemas/Size'
          description: Allowlist of companion sizes to be served to this placement. Set this list to null or empty to serve all companion sizes.
          type: array
        imageOnly:
          type: boolean
          description: Whether to serve only static images as companions.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#companionSetting".'
          type: string
        companionsDisabled:
          type: boolean
          description: Whether companions are disabled for this placement.
    MeasurementPartnerCampaignLink:
      type: object
      id: MeasurementPartnerCampaignLink
      properties:
        measurementPartner:
          enum:
            - NONE
            - INTEGRAL_AD_SCIENCE
            - DOUBLE_VERIFY
          description: Measurement partner used for tag wrapping.
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        partnerCampaignId:
          type: string
          description: Partner campaign ID needed for establishing linking with Measurement partner.
        linkStatus:
          description: .
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - MEASUREMENT_PARTNER_UNLINKED
            - MEASUREMENT_PARTNER_LINKED
            - MEASUREMENT_PARTNER_LINK_PENDING
            - MEASUREMENT_PARTNER_LINK_FAILURE
            - MEASUREMENT_PARTNER_LINK_OPT_OUT
            - MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING
            - MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING
            - MEASUREMENT_PARTNER_MODE_CHANGE_PENDING
    Order:
      properties:
        approverUserProfileIds:
          type: array
          description: IDs for users that have to approve documents created for this order.
          items:
            type: string
            format: int64
        siteId:
          description: Site IDs this order is associated with.
          type: array
          items:
            format: int64
            type: string
        accountId:
          description: Account ID of this order.
          format: int64
          type: string
        termsAndConditions:
          type: string
          description: Terms and conditions of this order.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#order".'
        name:
          type: string
          description: Name of this order.
        sellerOrganizationName:
          type: string
          description: Name of the seller organization.
        buyerOrganizationName:
          type: string
          description: Name of the buyer organization.
        notes:
          description: Notes of this order.
          type: string
        subaccountId:
          type: string
          description: Subaccount ID of this order.
          format: int64
        buyerInvoiceId:
          type: string
          description: Buyer invoice ID associated with this order.
        sellerOrderId:
          type: string
          description: Seller order ID associated with this order.
        id:
          description: ID of this order. This is a read-only, auto-generated field.
          type: string
          format: int64
        lastModifiedInfo:
          $ref: '#/components/schemas/LastModifiedInfo'
          description: Information about the most recent modification of this order.
        siteNames:
          description: Free-form site names this order is associated with.
          items:
            type: string
          type: array
        advertiserId:
          type: string
          format: int64
          description: Advertiser ID of this order.
        projectId:
          format: int64
          type: string
          description: Project ID of this order.
        contacts:
          items:
            $ref: '#/components/schemas/OrderContact'
          description: Contacts for this order.
          type: array
        planningTermId:
          format: int64
          type: string
          description: ID of the terms and conditions template used in this order.
        comments:
          type: string
          description: Comments in this order.
      id: Order
      type: object
      description: Describes properties of a Planning order.
    Region:
      type: object
      properties:
        countryCode:
          description: Country code of the country to which this region belongs.
          type: string
        regionCode:
          type: string
          description: Region code.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#region".'
          type: string
        name:
          description: Name of this region.
          type: string
        dartId:
          type: string
          format: int64
          description: DART ID of this region.
        countryDartId:
          format: int64
          description: DART ID of the country to which this region belongs.
          type: string
      id: Region
      description: Contains information about a region that can be targeted by ads.
    PlatformType:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#platformType".'
          type: string
        id:
          type: string
          format: int64
          description: ID of this platform type.
        name:
          type: string
          description: Name of this platform type.
      id: PlatformType
      description: Contains information about a platform type that can be targeted by ads.
      type: object
    OperatingSystemVersionsListResponse:
      id: OperatingSystemVersionsListResponse
      type: object
      description: Operating System Version List Response
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#operatingSystemVersionsListResponse".'
          type: string
        operatingSystemVersions:
          description: Operating system version collection.
          type: array
          items:
            $ref: '#/components/schemas/OperatingSystemVersion'
    CustomFloodlightVariable:
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#customFloodlightVariable".'
        value:
          description: The value of the custom floodlight variable. The length of string must not exceed 100 characters.
          type: string
        type:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - U1
            - U2
            - U3
            - U4
            - U5
            - U6
            - U7
            - U8
            - U9
            - U10
            - U11
            - U12
            - U13
            - U14
            - U15
            - U16
            - U17
            - U18
            - U19
            - U20
            - U21
            - U22
            - U23
            - U24
            - U25
            - U26
            - U27
            - U28
            - U29
            - U30
            - U31
            - U32
            - U33
            - U34
            - U35
            - U36
            - U37
            - U38
            - U39
            - U40
            - U41
            - U42
            - U43
            - U44
            - U45
            - U46
            - U47
            - U48
            - U49
            - U50
            - U51
            - U52
            - U53
            - U54
            - U55
            - U56
            - U57
            - U58
            - U59
            - U60
            - U61
            - U62
            - U63
            - U64
            - U65
            - U66
            - U67
            - U68
            - U69
            - U70
            - U71
            - U72
            - U73
            - U74
            - U75
            - U76
            - U77
            - U78
            - U79
            - U80
            - U81
            - U82
            - U83
            - U84
            - U85
            - U86
            - U87
            - U88
            - U89
            - U90
            - U91
            - U92
            - U93
            - U94
            - U95
            - U96
            - U97
            - U98
            - U99
            - U100
          description: The type of custom floodlight variable to supply a value for. These map to the "u[1-20]=" in the tags.
      description: A custom floodlight variable. This field may only be used when calling batchinsert; it is not supported by batchupdate.
      id: CustomFloodlightVariable
    FloodlightActivitiesGenerateTagResponse:
      id: FloodlightActivitiesGenerateTagResponse
      type: object
      properties:
        floodlightActivityTag:
          type: string
          description: Generated tag for this Floodlight activity. For global site tags, this is the event snippet.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivitiesGenerateTagResponse".'
        globalSiteTagGlobalSnippet:
          description: The global snippet section of a global site tag. The global site tag sets new cookies on your domain, which will store a unique identifier for a user or the ad click that brought the user to your site. Learn more.
          type: string
      description: Floodlight Activity GenerateTag Response
    FrequencyCap:
      type: object
      properties:
        duration:
          format: int64
          description: Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days. Acceptable values are 1 to 7776000, inclusive.
          type: string
        impressions:
          type: string
          description: Number of times an individual user can be served the ad within the specified duration. Acceptable values are 1 to 15, inclusive.
          format: int64
      id: FrequencyCap
      description: Frequency Cap.
    ListPopulationRule:
      description: Remarketing List Population Rule.
      properties:
        floodlightActivityName:
          description: Name of floodlight activity associated with this rule. This is a read-only, auto-generated field.
          type: string
        floodlightActivityId:
          description: Floodlight activity ID associated with this rule. This field can be left blank.
          format: int64
          type: string
        listPopulationClauses:
          type: array
          description: Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses themselves are made up of list population terms which are joined by ORs.
          items:
            $ref: '#/components/schemas/ListPopulationClause'
      type: object
      id: ListPopulationRule
    TargetableRemarketingList:
      properties:
        accountId:
          type: string
          format: int64
          description: Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.
        description:
          type: string
          description: Targetable remarketing list description.
        active:
          description: Whether this targetable remarketing list is active.
          type: boolean
        advertiserId:
          type: string
          format: int64
          description: Dimension value for the advertiser ID that owns this targetable remarketing list.
        lifeSpan:
          type: string
          description: Number of days that a user should remain in the targetable remarketing list without an impression.
          format: int64
        listSize:
          description: Number of users currently in the list. This is a read-only field.
          format: int64
          type: string
        id:
          description: Targetable remarketing list ID.
          type: string
          format: int64
        advertiserIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the advertiser.
        name:
          type: string
          description: Name of the targetable remarketing list. Is no greater than 128 characters long.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#targetableRemarketingList".'
          type: string
        subaccountId:
          format: int64
          type: string
          description: Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.
        listSource:
          description: Product from which this targetable remarketing list was originated.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - REMARKETING_LIST_SOURCE_OTHER
            - REMARKETING_LIST_SOURCE_ADX
            - REMARKETING_LIST_SOURCE_DFP
            - REMARKETING_LIST_SOURCE_XFP
            - REMARKETING_LIST_SOURCE_DFA
            - REMARKETING_LIST_SOURCE_GA
            - REMARKETING_LIST_SOURCE_YOUTUBE
            - REMARKETING_LIST_SOURCE_DBM
            - REMARKETING_LIST_SOURCE_GPLUS
            - REMARKETING_LIST_SOURCE_DMP
            - REMARKETING_LIST_SOURCE_PLAY_STORE
      type: object
      description: Contains properties of a targetable remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource is a read-only view of a remarketing list to be used to faciliate targeting ads to specific lists. Remarketing lists that are owned by your advertisers and those that are shared to your advertisers or account are accessible via this resource. To manage remarketing lists that are owned by your advertisers, use the RemarketingLists resource.
      id: TargetableRemarketingList
    AdBlockingConfiguration:
      description: Campaign ad blocking settings.
      type: object
      id: AdBlockingConfiguration
      properties:
        enabled:
          type: boolean
          description: Whether this campaign has enabled ad blocking. When true, ad blocking is enabled for placements in the campaign, but this may be overridden by site and placement settings. When false, ad blocking is disabled for all placements under the campaign, regardless of site and placement settings.
    PlacementGroup:
      type: object
      properties:
        idDimensionValue:
          description: Dimension value for the ID of this placement group. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        siteId:
          format: int64
          type: string
          description: Site ID associated with this placement group. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement group. This is a required field that is read-only after insertion.
        name:
          type: string
          description: Name of this placement group. This is a required field and must be less than 256 characters long.
        externalId:
          type: string
          description: External ID for this placement.
        contentCategoryId:
          type: string
          description: ID of the content category assigned to this placement group.
          format: int64
        childPlacementIds:
          items:
            format: int64
            type: string
          description: IDs of placements which are assigned to this placement group. This is a read-only, auto-generated field.
          type: array
        accountId:
          format: int64
          type: string
          description: Account ID of this placement group. This is a read-only field that can be left blank.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementGroup".'
          type: string
        advertiserId:
          description: Advertiser ID of this placement group. This is a required field on insertion.
          format: int64
          type: string
        primaryPlacementIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the primary placement. This is a read-only, auto-generated field.
        subaccountId:
          type: string
          description: Subaccount ID of this placement group. This is a read-only field that can be left blank.
          format: int64
        siteIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the site. This is a read-only, auto-generated field.
        activeStatus:
          type: string
          enum:
            - PLACEMENT_STATUS_UNKNOWN
            - PLACEMENT_STATUS_ACTIVE
            - PLACEMENT_STATUS_INACTIVE
            - PLACEMENT_STATUS_ARCHIVED
            - PLACEMENT_STATUS_PERMANENTLY_ARCHIVED
          description: Whether this placement group is active, inactive, archived or permanently archived.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        createInfo:
          description: Information about the creation of this placement group. This is a read-only field.
          $ref: '#/components/schemas/LastModifiedInfo'
        directorySiteIdDimensionValue:
          description: Dimension value for the ID of the directory site. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        comment:
          description: Comments for this placement group.
          type: string
        placementStrategyId:
          description: ID of the placement strategy assigned to this placement group.
          format: int64
          type: string
        directorySiteId:
          type: string
          format: int64
          description: Directory site ID associated with this placement group. On insert, you must set either this field or the site_id field to specify the site associated with this placement group. This is a required field that is read-only after insertion.
        advertiserIdDimensionValue:
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        primaryPlacementId:
          format: int64
          description: ID of the primary placement, used to calculate the media cost of a roadblock (placement group). Modifying this field will automatically modify the primary field on all affected roadblock child placements.
          type: string
        campaignIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the campaign. This is a read-only, auto-generated field.
        campaignId:
          description: Campaign ID of this placement group. This field is required on insertion.
          format: int64
          type: string
        pricingSchedule:
          $ref: '#/components/schemas/PricingSchedule'
          description: Pricing schedule of this placement group. This field is required on insertion.
        placementGroupType:
          type: string
          enum:
            - PLACEMENT_PACKAGE
            - PLACEMENT_ROADBLOCK
          description: Type of this placement group. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting. This field is required on insertion.
          enumDescriptions:
            - ''
            - ''
        lastModifiedInfo:
          $ref: '#/components/schemas/LastModifiedInfo'
          description: Information about the most recent modification of this placement group. This is a read-only field.
        id:
          format: int64
          description: ID of this placement group. This is a read-only, auto-generated field.
          type: string
      id: PlacementGroup
      description: Contains properties of a package or roadblock.
    Metro:
      description: Contains information about a metro region that can be targeted by ads.
      type: object
      properties:
        dartId:
          description: DART ID of this metro region.
          format: int64
          type: string
        countryCode:
          description: Country code of the country to which this metro region belongs.
          type: string
        countryDartId:
          type: string
          description: DART ID of the country to which this metro region belongs.
          format: int64
        name:
          description: Name of this metro region.
          type: string
        metroCode:
          type: string
          description: Metro code of this metro region. This is equivalent to dma_id.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#metro".'
          type: string
        dmaId:
          description: DMA ID of this metro region. This is the ID used for targeting and generating reports, and is equivalent to metro_code.
          format: int64
          type: string
      id: Metro
    AdvertiserGroupsListResponse:
      id: AdvertiserGroupsListResponse
      properties:
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
        advertiserGroups:
          description: Advertiser group collection.
          type: array
          items:
            $ref: '#/components/schemas/AdvertiserGroup'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiserGroupsListResponse".'
          type: string
      description: Advertiser Group List Response
      type: object
    CreativeAssetId:
      type: object
      description: Creative Asset ID.
      properties:
        type:
          description: Type of asset to upload. This is a required field. FLASH and IMAGE are no longer supported for new uploads. All image assets should use HTML_IMAGE.
          type: string
          enum:
            - IMAGE
            - FLASH
            - VIDEO
            - HTML
            - HTML_IMAGE
            - AUDIO
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        name:
          type: string
          description: 'Name of the creative asset. This is a required field while inserting an asset. After insertion, this assetIdentifier is used to identify the uploaded asset. Characters in the name must be alphanumeric or one of the following: ".-_ ". Spaces are allowed.'
      id: CreativeAssetId
    CreativeGroupsListResponse:
      properties:
        creativeGroups:
          description: Creative group collection.
          type: array
          items:
            $ref: '#/components/schemas/CreativeGroup'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeGroupsListResponse".'
          type: string
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      id: CreativeGroupsListResponse
      type: object
      description: Creative Group List Response
    Ad:
      description: Contains properties of a Campaign Manager ad.
      id: Ad
      type: object
      properties:
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Type of ad. This is a required field on insertion. Note that default ads ( AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).
          type: string
          enum:
            - AD_SERVING_STANDARD_AD
            - AD_SERVING_DEFAULT_AD
            - AD_SERVING_CLICK_TRACKER
            - AD_SERVING_TRACKING
            - AD_SERVING_BRAND_SAFE_AD
        endTime:
          format: date-time
          type: string
        clickThroughUrlSuffixProperties:
          description: Click-through URL suffix properties for this ad. Applies to the URL in the ad or (if overriding ad properties) the URL in the creative.
          $ref: '#/components/schemas/ClickThroughUrlSuffixProperties'
        name:
          type: string
          description: Name of this ad. This is a required field and must be less than 256 characters long.
        dynamicClickTracker:
          type: boolean
          description: Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a required field on insert, and is read-only after insert.
        campaignIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the campaign. This is a read-only, auto-generated field.
        sslRequired:
          type: boolean
          description: Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or updated.
        accountId:
          type: string
          format: int64
          description: Account ID of this ad. This is a read-only field that can be left blank.
        id:
          type: string
          format: int64
          description: ID of this ad. This is a read-only, auto-generated field.
        creativeGroupAssignments:
          description: Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one assignment per creative group number is allowed for a maximum of two assignments.
          type: array
          items:
            $ref: '#/components/schemas/CreativeGroupAssignment'
        advertiserIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#ad".'
        compatibility:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - DISPLAY
            - DISPLAY_INTERSTITIAL
            - APP
            - APP_INTERSTITIAL
            - IN_STREAM_VIDEO
            - IN_STREAM_AUDIO
          description: Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST standard.
        geoTargeting:
          $ref: '#/components/schemas/GeoTargeting'
          description: Geographical targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
        deliverySchedule:
          $ref: '#/components/schemas/DeliverySchedule'
          description: Delivery schedule information for this ad. Applicable when type is AD_SERVING_STANDARD_AD or AD_SERVING_TRACKING. This field along with subfields priority and impressionRatio are required on insertion when type is AD_SERVING_STANDARD_AD.
        technologyTargeting:
          description: Technology platform targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
          $ref: '#/components/schemas/TechnologyTargeting'
        eventTagOverrides:
          items:
            $ref: '#/components/schemas/EventTagOverride'
          description: Event tag overrides for this ad.
          type: array
        lastModifiedInfo:
          description: Information about the most recent modification of this ad. This is a read-only field.
          $ref: '#/components/schemas/LastModifiedInfo'
        remarketingListExpression:
          description: Remarketing list targeting expression for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
          $ref: '#/components/schemas/ListTargetingExpression'
        startTime:
          format: date-time
          type: string
        creativeRotation:
          description: Creative rotation for this ad. Applicable when type is AD_SERVING_DEFAULT_AD, AD_SERVING_STANDARD_AD, or AD_SERVING_TRACKING. When type is AD_SERVING_DEFAULT_AD, this field should have exactly one creativeAssignment .
          $ref: '#/components/schemas/CreativeRotation'
        dayPartTargeting:
          description: Time and day targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
          $ref: '#/components/schemas/DayPartTargeting'
        placementAssignments:
          items:
            $ref: '#/components/schemas/PlacementAssignment'
          type: array
          description: Placement assignments for this ad.
        defaultClickThroughEventTagProperties:
          $ref: '#/components/schemas/DefaultClickThroughEventTagProperties'
          description: Default click-through event tag properties for this ad.
        archived:
          type: boolean
          description: Whether this ad is archived. When true, active must be false.
        idDimensionValue:
          description: Dimension value for the ID of this ad. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        sslCompliant:
          type: boolean
          description: Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.
        campaignId:
          format: int64
          description: Campaign ID of this ad. This is a required field on insertion.
          type: string
        size:
          $ref: '#/components/schemas/Size'
          description: Size of this ad. Applicable when type is AD_SERVING_DEFAULT_AD.
        clickThroughUrl:
          $ref: '#/components/schemas/ClickThroughUrl'
          description: Click-through URL for this ad. This is a required field on insertion. Applicable when type is AD_SERVING_CLICK_TRACKER.
        advertiserId:
          description: Advertiser ID of this ad. This is a required field on insertion.
          type: string
          format: int64
        keyValueTargetingExpression:
          $ref: '#/components/schemas/KeyValueTargetingExpression'
          description: Key-value targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
        targetingTemplateId:
          format: int64
          description: Targeting template ID, used to apply preconfigured targeting information to this ad. This cannot be set while any of dayPartTargeting, geoTargeting, keyValueTargetingExpression, languageTargeting, remarketingListExpression, or technologyTargeting are set. Applicable when type is AD_SERVING_STANDARD_AD.
          type: string
        audienceSegmentId:
          type: string
          format: int64
          description: Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD.
        languageTargeting:
          description: Language targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
          $ref: '#/components/schemas/LanguageTargeting'
        createInfo:
          $ref: '#/components/schemas/LastModifiedInfo'
          description: Information about the creation of this ad. This is a read-only field.
        active:
          type: boolean
          description: Whether this ad is active. When true, archived must be false.
        comments:
          description: Comments for this ad.
          type: string
        subaccountId:
          description: Subaccount ID of this ad. This is a read-only field that can be left blank.
          format: int64
          type: string
    AudienceSegmentGroup:
      type: object
      properties:
        audienceSegments:
          items:
            $ref: '#/components/schemas/AudienceSegment'
          description: Audience segments assigned to this group. The number of segments must be between 2 and 100.
          type: array
        name:
          description: Name of this audience segment group. This is a required field and must be less than 65 characters long.
          type: string
        id:
          format: int64
          type: string
          description: ID of this audience segment group. This is a read-only, auto-generated field.
      description: Audience Segment Group.
      id: AudienceSegmentGroup
    FloodlightActivityDynamicTag:
      description: Dynamic Tag
      type: object
      properties:
        tag:
          description: Tag code.
          type: string
        name:
          type: string
          description: Name of this tag.
        id:
          description: ID of this dynamic tag. This is a read-only, auto-generated field.
          type: string
          format: int64
      id: FloodlightActivityDynamicTag
    Campaign:
      id: Campaign
      type: object
      description: Contains properties of a Campaign Manager campaign.
      properties:
        accountId:
          description: Account ID of this campaign. This is a read-only field that can be left blank.
          format: int64
          type: string
        creativeGroupIds:
          type: array
          description: List of creative group IDs that are assigned to the campaign.
          items:
            format: int64
            type: string
        eventTagOverrides:
          description: Overrides that can be used to activate or deactivate advertiser event tags.
          items:
            $ref: '#/components/schemas/EventTagOverride'
          type: array
        adBlockingConfiguration:
          $ref: '#/components/schemas/AdBlockingConfiguration'
          description: Ad blocking settings for this campaign.
        billingInvoiceCode:
          description: Billing invoice code included in the Campaign Manager client billing invoices associated with the campaign.
          type: string
        creativeOptimizationConfiguration:
          description: Creative optimization configuration for the campaign.
          $ref: '#/components/schemas/CreativeOptimizationConfiguration'
        defaultLandingPageId:
          type: string
          description: The default landing page ID for this campaign.
          format: int64
        advertiserId:
          type: string
          format: int64
          description: Advertiser ID of this campaign. This is a required field.
        id:
          type: string
          format: int64
          description: ID of this campaign. This is a read-only auto-generated field.
        startDate:
          format: date
          type: string
        clickThroughUrlSuffixProperties:
          description: Click-through URL suffix override properties for this campaign.
          $ref: '#/components/schemas/ClickThroughUrlSuffixProperties'
        additionalCreativeOptimizationConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/CreativeOptimizationConfiguration'
          description: Additional creative optimization configurations for the campaign.
        externalId:
          description: External ID for this campaign.
          type: string
        comment:
          description: Arbitrary comments about this campaign. Must be less than 256 characters long.
          type: string
        advertiserGroupId:
          format: int64
          type: string
          description: Advertiser group ID of the associated advertiser.
        archived:
          description: Whether this campaign has been archived.
          type: boolean
        name:
          type: string
          description: Name of this campaign. This is a required field and must be less than 512 characters long and unique among campaigns of the same advertiser.
        idDimensionValue:
          description: Dimension value for the ID of this campaign. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        defaultClickThroughEventTagProperties:
          description: Click-through event tag ID override properties for this campaign.
          $ref: '#/components/schemas/DefaultClickThroughEventTagProperties'
        audienceSegmentGroups:
          description: Audience segment groups assigned to this campaign. Cannot have more than 300 segment groups.
          items:
            $ref: '#/components/schemas/AudienceSegmentGroup'
          type: array
        createInfo:
          description: Information about the creation of this campaign. This is a read-only field.
          $ref: '#/components/schemas/LastModifiedInfo'
        subaccountId:
          type: string
          format: int64
          description: Subaccount ID of this campaign. This is a read-only field that can be left blank.
        lastModifiedInfo:
          $ref: '#/components/schemas/LastModifiedInfo'
          description: Information about the most recent modification of this campaign. This is a read-only field.
        measurementPartnerLink:
          $ref: '#/components/schemas/MeasurementPartnerCampaignLink'
          description: Measurement partner campaign link for tag wrapping.
        advertiserIdDimensionValue:
          description: Dimension value for the advertiser ID of this campaign. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        endDate:
          type: string
          format: date
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#campaign".'
    Flight:
      type: object
      description: Flight
      properties:
        startDate:
          format: date
          type: string
        rateOrCost:
          format: int64
          description: Rate or cost of this flight.
          type: string
        units:
          format: int64
          description: Units of this flight.
          type: string
        endDate:
          format: date
          type: string
      id: Flight
    KeyValueTargetingExpression:
      type: object
      properties:
        expression:
          type: string
          description: Keyword expression being targeted by the ad.
      description: Key Value Targeting Expression.
      id: KeyValueTargetingExpression
    Creative:
      id: Creative
      properties:
        accountId:
          description: Account ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.
          type: string
          format: int64
        sslCompliant:
          type: boolean
          description: Whether the creative is SSL-compliant. This is a read-only field. Applicable to all creative types.
        archived:
          description: Whether the creative is archived. Applicable to all creative types.
          type: boolean
        redirectUrl:
          description: 'URL of hosted image or hosted video or another ad tag. For INSTREAM_VIDEO_REDIRECT creatives this is the in-stream video redirect URL. The standard for a VAST (Video Ad Serving Template) ad response allows for a redirect link to another VAST 2.0 or 3.0 call. This is a required field when applicable. Applicable to the following creative types: DISPLAY_REDIRECT, INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO_REDIRECT'
          type: string
        authoringSource:
          enum:
            - CREATIVE_AUTHORING_SOURCE_DCM
            - CREATIVE_AUTHORING_SOURCE_DBM
            - CREATIVE_AUTHORING_SOURCE_STUDIO
            - CREATIVE_AUTHORING_SOURCE_GWD
            - CREATIVE_AUTHORING_SOURCE_ACS
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Source application where creative was authored. Presently, only DBM authored creatives will have this field set. Applicable to all creative types.
          type: string
        backupImageReportingLabel:
          type: string
          description: 'Reporting label used for HTML5 banner backup image. Applicable to the following creative types: DISPLAY when the primary asset type is not HTML_IMAGE.'
        lastModifiedInfo:
          description: Creative last modification information. This is a read-only field. Applicable to all creative types.
          $ref: '#/components/schemas/LastModifiedInfo'
        totalFileSize:
          format: int64
          description: 'Combined size of all creative assets. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
          type: string
        obaIcon:
          description: 'Online behavioral advertising icon to be added to the creative. Applicable to the following creative types: all INSTREAM_VIDEO.'
          $ref: '#/components/schemas/ObaIcon'
        id:
          description: ID of this creative. This is a read-only, auto-generated field. Applicable to all creative types.
          type: string
          format: int64
        dynamicAssetSelection:
          description: Set this to true to enable the use of rules to target individual assets in this creative. When set to true creativeAssetSelection must be set. This also controls asset-level companions. When this is true, companion creatives should be assigned to creative assets. Learn more. Applicable to INSTREAM_VIDEO creatives.
          type: boolean
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creative".'
          type: string
        subaccountId:
          description: Subaccount ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.
          format: int64
          type: string
        counterCustomEvents:
          type: array
          description: 'List of counter events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID.'
          items:
            $ref: '#/components/schemas/CreativeCustomEvent'
        thirdPartyUrls:
          description: 'Third-party URLs for tracking in-stream creative events. Applicable to the following creative types: all INSTREAM_VIDEO, all INSTREAM_AUDIO, and all VPAID.'
          items:
            $ref: '#/components/schemas/ThirdPartyTrackingUrl'
          type: array
        exitCustomEvents:
          items:
            $ref: '#/components/schemas/CreativeCustomEvent'
          description: 'List of exit events configured for the creative. For DISPLAY and DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags, For DISPLAY, an event is also created from the backupImageReportingLabel. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          type: array
        compatibility:
          type: array
          description: 'Compatibilities associated with this creative. This is a read-only field. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. Only pre-existing creatives may have these compatibilities since new creatives will either be assigned DISPLAY or DISPLAY_INTERSTITIAL instead. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. IN_STREAM_AUDIO refers to rendering in in-stream audio ads developed with the VAST standard. Applicable to all creative types. Acceptable values are: - "APP" - "APP_INTERSTITIAL" - "IN_STREAM_VIDEO" - "IN_STREAM_AUDIO" - "DISPLAY" - "DISPLAY_INTERSTITIAL" '
          items:
            type: string
            enum:
              - DISPLAY
              - DISPLAY_INTERSTITIAL
              - APP
              - APP_INTERSTITIAL
              - IN_STREAM_VIDEO
              - IN_STREAM_AUDIO
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
        thirdPartyRichMediaImpressionsUrl:
          description: 'Third-party URL used to record rich media impressions. Applicable to the following creative types: all RICH_MEDIA.'
          type: string
        active:
          description: Whether the creative is active. Applicable to all creative types.
          type: boolean
        creativeAssetSelection:
          $ref: '#/components/schemas/CreativeAssetSelection'
          description: Required if dynamicAssetSelection is true.
        overrideCss:
          description: 'Override CSS value for rich media creatives. Applicable to the following creative types: all RICH_MEDIA.'
          type: string
        clickTags:
          description: 'Click tags of the creative. For DISPLAY, FLASH_INPAGE, and HTML5_BANNER creatives, this is a subset of detected click tags for the assets associated with this creative. After creating a flash asset, detected click tags will be returned in the creativeAssetMetadata. When inserting the creative, populate the creative clickTags field using the creativeAssetMetadata.clickTags field. For DISPLAY_IMAGE_GALLERY creatives, there should be exactly one entry in this list for each image creative asset. A click tag is matched with a corresponding creative asset by matching the clickTag.name field with the creativeAsset.assetIdentifier.name field. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          type: array
          items:
            $ref: '#/components/schemas/ClickTag'
        fsCommand:
          description: 'OpenWindow FSCommand of this creative. This lets the SWF file communicate with either Flash Player or the program hosting Flash Player, such as a web browser. This is only triggered if allowScriptAccess field is true. Applicable to the following creative types: FLASH_INPAGE.'
          $ref: '#/components/schemas/FsCommand'
        requiredFlashVersion:
          type: integer
          description: 'The internal Flash version for this creative as calculated by Studio. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          format: int32
        mediaDescription:
          description: 'Description of the audio or video ad. Applicable to the following creative types: all INSTREAM_VIDEO, INSTREAM_AUDIO, and all VPAID.'
          type: string
        authoringTool:
          enum:
            - NINJA
            - SWIFFY
          enumDescriptions:
            - ''
            - ''
          type: string
          description: 'Authoring tool for HTML5 banner creatives. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.'
        mediaDuration:
          description: 'Creative audio or video duration in seconds. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO, INSTREAM_AUDIO, all RICH_MEDIA, and all VPAID.'
          format: float
          type: number
        adParameters:
          type: string
          description: 'Ad parameters user for VPAID creative. This is a read-only field. Applicable to the following creative types: all VPAID.'
        backgroundColor:
          description: 'The 6-character HTML color code, beginning with #, for the background of the window area where the Flash file is displayed. Default is white. Applicable to the following creative types: FLASH_INPAGE.'
          type: string
        sslOverride:
          description: Whether creative should be treated as SSL compliant even if the system scan shows it's not. Applicable to all creative types.
          type: boolean
        backupImageClickThroughUrl:
          $ref: '#/components/schemas/CreativeClickThroughUrl'
          description: Click-through URL for backup image. Applicable to ENHANCED_BANNER when the primary asset type is not HTML_IMAGE.
        customKeyValues:
          description: 'Custom key-values for a Rich Media creative. Key-values let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use key-values to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
          type: array
          items:
            type: string
        skipOffset:
          $ref: '#/components/schemas/VideoOffset'
          description: 'Amount of time to play the video before the skip button appears. Applicable to the following creative types: all INSTREAM_VIDEO.'
        htmlCodeLocked:
          type: boolean
          description: 'Whether HTML code is generated by Campaign Manager or manually entered. Set to true to ignore changes to htmlCode. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER.'
        name:
          type: string
          description: Name of the creative. This is a required field and must be less than 256 characters long. Applicable to all creative types.
        allowScriptAccess:
          description: 'Whether script access is allowed for this creative. This is a read-only and deprecated field which will automatically be set to true on update. Applicable to the following creative types: FLASH_INPAGE.'
          type: boolean
        progressOffset:
          description: 'Amount of time to play the video before counting a view. Applicable to the following creative types: all INSTREAM_VIDEO.'
          $ref: '#/components/schemas/VideoOffset'
        creativeFieldAssignments:
          type: array
          description: Creative field assignments for this creative. Applicable to all creative types.
          items:
            $ref: '#/components/schemas/CreativeFieldAssignment'
        type:
          enum:
            - IMAGE
            - DISPLAY_REDIRECT
            - CUSTOM_DISPLAY
            - INTERNAL_REDIRECT
            - CUSTOM_DISPLAY_INTERSTITIAL
            - INTERSTITIAL_INTERNAL_REDIRECT
            - TRACKING_TEXT
            - RICH_MEDIA_DISPLAY_BANNER
            - RICH_MEDIA_INPAGE_FLOATING
            - RICH_MEDIA_IM_EXPAND
            - RICH_MEDIA_DISPLAY_EXPANDING
            - RICH_MEDIA_DISPLAY_INTERSTITIAL
            - RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL
            - RICH_MEDIA_MOBILE_IN_APP
            - FLASH_INPAGE
            - INSTREAM_VIDEO
            - VPAID_LINEAR_VIDEO
            - VPAID_NON_LINEAR_VIDEO
            - INSTREAM_VIDEO_REDIRECT
            - RICH_MEDIA_PEEL_DOWN
            - HTML5_BANNER
            - DISPLAY
            - DISPLAY_IMAGE_GALLERY
            - BRAND_SAFE_DEFAULT_INSTREAM_VIDEO
            - INSTREAM_AUDIO
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Type of this creative. This is a required field. Applicable to all creative types. *Note:* FLASH_INPAGE, HTML5_BANNER, and IMAGE are only used for existing creatives. New creatives should use DISPLAY as a replacement for these types.
          type: string
        renderingId:
          type: string
          description: ID of current rendering version. This is a read-only field. Applicable to all creative types.
          format: int64
        adTagKeys:
          type: array
          description: 'Keywords for a Rich Media creative. Keywords let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use keywords to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
          items:
            type: string
        backupImageFeatures:
          items:
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
            enum:
              - CSS_FONT_FACE
              - CSS_BACKGROUND_SIZE
              - CSS_BORDER_IMAGE
              - CSS_BORDER_RADIUS
              - CSS_BOX_SHADOW
              - CSS_FLEX_BOX
              - CSS_HSLA
              - CSS_MULTIPLE_BGS
              - CSS_OPACITY
              - CSS_RGBA
              - CSS_TEXT_SHADOW
              - CSS_ANIMATIONS
              - CSS_COLUMNS
              - CSS_GENERATED_CONTENT
              - CSS_GRADIENTS
              - CSS_REFLECTIONS
              - CSS_TRANSFORMS
              - CSS_TRANSFORMS3D
              - CSS_TRANSITIONS
              - APPLICATION_CACHE
              - CANVAS
              - CANVAS_TEXT
              - DRAG_AND_DROP
              - HASH_CHANGE
              - HISTORY
              - AUDIO
              - VIDEO
              - INDEXED_DB
              - INPUT_ATTR_AUTOCOMPLETE
              - INPUT_ATTR_AUTOFOCUS
              - INPUT_ATTR_LIST
              - INPUT_ATTR_PLACEHOLDER
              - INPUT_ATTR_MAX
              - INPUT_ATTR_MIN
              - INPUT_ATTR_MULTIPLE
              - INPUT_ATTR_PATTERN
              - INPUT_ATTR_REQUIRED
              - INPUT_ATTR_STEP
              - INPUT_TYPE_SEARCH
              - INPUT_TYPE_TEL
              - INPUT_TYPE_URL
              - INPUT_TYPE_EMAIL
              - INPUT_TYPE_DATETIME
              - INPUT_TYPE_DATE
              - INPUT_TYPE_MONTH
              - INPUT_TYPE_WEEK
              - INPUT_TYPE_TIME
              - INPUT_TYPE_DATETIME_LOCAL
              - INPUT_TYPE_NUMBER
              - INPUT_TYPE_RANGE
              - INPUT_TYPE_COLOR
              - LOCAL_STORAGE
              - POST_MESSAGE
              - SESSION_STORAGE
              - WEB_SOCKETS
              - WEB_SQL_DATABASE
              - WEB_WORKERS
              - GEO_LOCATION
              - INLINE_SVG
              - SMIL
              - SVG_HREF
              - SVG_CLIP_PATHS
              - TOUCH
              - WEBGL
              - SVG_FILTERS
              - SVG_FE_IMAGE
            type: string
          type: array
          description: 'List of feature dependencies that will cause a backup image to be served if the browser that serves the ad does not support them. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative asset correctly. This field is initially auto-generated to contain all features detected by Campaign Manager for all the assets of this creative and can then be modified by the client. To reset this field, copy over all the creativeAssets'' detected features. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
        artworkType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
          description: 'Type of artwork used for the creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
          enum:
            - ARTWORK_TYPE_FLASH
            - ARTWORK_TYPE_HTML5
            - ARTWORK_TYPE_MIXED
            - ARTWORK_TYPE_IMAGE
        skippable:
          description: 'Whether the user can choose to skip the creative. Applicable to the following creative types: all INSTREAM_VIDEO and all VPAID.'
          type: boolean
        requiredFlashPluginVersion:
          type: string
          description: 'The minimum required Flash plugin version for this creative. For example, 11.2.202.235. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
        idDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of this creative. This is a read-only field. Applicable to all creative types.
        convertFlashToHtml5:
          description: 'Whether Flash assets associated with the creative need to be automatically converted to HTML5. This flag is enabled by default and users can choose to disable it if they don''t want the system to generate and use HTML5 asset for this creative. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          type: boolean
        studioAdvertiserId:
          description: 'Studio advertiser ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
          format: int64
          type: string
        timerCustomEvents:
          items:
            $ref: '#/components/schemas/CreativeCustomEvent'
          description: 'List of timer events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset is not HTML_IMAGE.'
          type: array
        studioTraffickedCreativeId:
          type: string
          format: int64
          description: 'Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
        autoAdvanceImages:
          type: boolean
          description: 'Whether images are automatically advanced for image gallery creatives. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY.'
        thirdPartyBackupImageImpressionsUrl:
          description: 'Third-party URL used to record backup image impressions. Applicable to the following creative types: all RICH_MEDIA.'
          type: string
        companionCreatives:
          items:
            type: string
            format: int64
          description: 'List of companion creatives assigned to an in-Stream video creative. Acceptable values include IDs of existing flash and image creatives. Applicable to the following creative types: all VPAID, all INSTREAM_AUDIO and all INSTREAM_VIDEO with dynamicAssetSelection set to false.'
          type: array
        additionalSizes:
          type: array
          items:
            $ref: '#/components/schemas/Size'
          description: Additional sizes associated with a responsive creative. When inserting or updating a creative either the size ID field or size width and height fields can be used. Applicable to DISPLAY creatives when the primary asset type is HTML_IMAGE.
        htmlCode:
          type: string
          description: 'HTML code for the creative. This is a required field when applicable. This field is ignored if htmlCodeLocked is true. Applicable to the following creative types: all CUSTOM, FLASH_INPAGE, and HTML5_BANNER, and all RICH_MEDIA.'
        latestTraffickedCreativeId:
          format: int64
          description: 'Latest Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
          type: string
        universalAdId:
          description: 'A Universal Ad ID as per the VAST 4.0 spec. Applicable to the following creative types: INSTREAM_AUDIO and INSTREAM_VIDEO and VPAID.'
          $ref: '#/components/schemas/UniversalAdId'
        commercialId:
          description: Industry standard ID assigned to creative for reach and frequency. Applicable to INSTREAM_VIDEO_REDIRECT creatives.
          type: string
        studioCreativeId:
          format: int64
          description: 'Studio creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.'
          type: string
        backupImageTargetWindow:
          description: 'Target window for backup image. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          $ref: '#/components/schemas/TargetWindow'
        creativeAssets:
          type: array
          description: 'Assets associated with a creative. Applicable to all but the following creative types: INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and REDIRECT'
          items:
            $ref: '#/components/schemas/CreativeAsset'
        renderingIdDimensionValue:
          description: Dimension value for the rendering ID of this creative. This is a read-only field. Applicable to all creative types.
          $ref: '#/components/schemas/DimensionValue'
        version:
          format: int32
          type: integer
          description: The version number helps you keep track of multiple versions of your creative in your reports. The version number will always be auto-generated during insert operations to start at 1. For tracking creatives the version cannot be incremented and will always remain at 1. For all other creative types the version can be incremented only by 1 during update operations. In addition, the version will be automatically incremented by 1 when undergoing Rich Media creative merging. Applicable to all creative types.
        size:
          $ref: '#/components/schemas/Size'
          description: 'Size associated with this creative. When inserting or updating a creative either the size ID field or size width and height fields can be used. This is a required field when applicable; however for IMAGE, FLASH_INPAGE creatives, and for DISPLAY creatives with a primary asset of type HTML_IMAGE, if left blank, this field will be automatically set using the actual size of the associated image assets. Applicable to the following creative types: DISPLAY, DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA.'
        advertiserId:
          description: Advertiser ID of this creative. This is a required field. Applicable to all creative types.
          format: int64
          type: string
      type: object
      description: Contains properties of a Creative.
    CompatibleFields:
      type: object
      properties:
        crossDimensionReachReportCompatibleFields:
          $ref: '#/components/schemas/CrossDimensionReachReportCompatibleFields'
          description: Contains items that are compatible to be selected for a report of type "CROSS_DIMENSION_REACH".
        pathToConversionReportCompatibleFields:
          $ref: '#/components/schemas/PathToConversionReportCompatibleFields'
          description: Contains items that are compatible to be selected for a report of type "PATH_TO_CONVERSION".
        pathReportCompatibleFields:
          $ref: '#/components/schemas/PathReportCompatibleFields'
          description: Contains items that are compatible to be selected for a report of type "PATH".
        floodlightReportCompatibleFields:
          description: Contains items that are compatible to be selected for a report of type "FLOODLIGHT".
          $ref: '#/components/schemas/FloodlightReportCompatibleFields'
        reportCompatibleFields:
          description: Contains items that are compatible to be selected for a report of type "STANDARD".
          $ref: '#/components/schemas/ReportCompatibleFields'
        reachReportCompatibleFields:
          $ref: '#/components/schemas/ReachReportCompatibleFields'
          description: Contains items that are compatible to be selected for a report of type "REACH".
        pathAttributionReportCompatibleFields:
          $ref: '#/components/schemas/PathReportCompatibleFields'
          description: Contains items that are compatible to be selected for a report of type "PATH_ATTRIBUTION".
        kind:
          description: The kind of resource this is, in this case dfareporting#compatibleFields.
          type: string
      id: CompatibleFields
      description: Represents a response to the queryCompatibleFields method.
    UvarFilter:
      properties:
        match:
          description: Indicates how the filter should be matched to the values.
          enum:
            - UNSPECIFIED
            - EXACT
            - CONTAINS
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
        values:
          description: Values to filter on.
          items:
            type: string
          type: array
        kind:
          description: The kind of resource this is, in this case dfareporting#uvarFilter.
          type: string
        complement:
          description: Return rows which don't match this filter.
          type: boolean
        index:
          description: Custom variable index the filter is applied to.
          type: string
          format: int64
      description: Defines the filtering on a single uvar.
      id: UvarFilter
      type: object
    ReportCompatibleFields:
      id: ReportCompatibleFields
      type: object
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/Metric'
          type: array
          description: Metrics which are compatible to be selected in the "metricNames" section of the report.
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
          description: Dimensions which are compatible to be selected in the "dimensions" section of the report.
        dimensionFilters:
          description: Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
        pivotedActivityMetrics:
          description: Metrics which are compatible to be selected as activity metrics to pivot on in the "activities" section of the report.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        kind:
          description: The kind of resource this is, in this case dfareporting#reportCompatibleFields.
          type: string
      description: Represents fields that are compatible to be selected for a report of type "STANDARD".
    PathReportCompatibleFields:
      properties:
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#pathReportCompatibleFields.
        pathFilters:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          description: Dimensions which are compatible to be selected in the "pathFilters" section of the report.
        metrics:
          description: Metrics which are compatible to be selected in the "metricNames" section of the report.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        dimensions:
          type: array
          description: Dimensions which are compatible to be selected in the "dimensions" section of the report.
          items:
            $ref: '#/components/schemas/Dimension'
        channelGroupings:
          description: Dimensions which are compatible to be selected in the "channelGroupings" section of the report.
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
      id: PathReportCompatibleFields
      type: object
      description: Represents fields that are compatible to be selected for a report of type "PATH".
    UserRolePermissionGroupsListResponse:
      description: User Role Permission Group List Response
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolePermissionGroupsListResponse".'
        userRolePermissionGroups:
          description: User role permission group collection.
          items:
            $ref: '#/components/schemas/UserRolePermissionGroup'
          type: array
      type: object
      id: UserRolePermissionGroupsListResponse
    CreativeGroupAssignment:
      type: object
      properties:
        creativeGroupId:
          format: int64
          type: string
          description: ID of the creative group to be assigned.
        creativeGroupNumber:
          enumDescriptions:
            - ''
            - ''
          enum:
            - CREATIVE_GROUP_ONE
            - CREATIVE_GROUP_TWO
          type: string
          description: Creative group number of the creative group assignment.
      description: Creative Group Assignment.
      id: CreativeGroupAssignment
    CreativeFieldValuesListResponse:
      id: CreativeFieldValuesListResponse
      properties:
        creativeFieldValues:
          description: Creative field value collection.
          type: array
          items:
            $ref: '#/components/schemas/CreativeFieldValue'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeFieldValuesListResponse".'
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
      type: object
      description: Creative Field Value List Response
    OrdersListResponse:
      id: OrdersListResponse
      description: Order List Response
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#ordersListResponse".'
          type: string
        orders:
          items:
            $ref: '#/components/schemas/Order'
          type: array
          description: Order collection.
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
    DirectorySiteSettings:
      description: Directory Site Settings
      type: object
      properties:
        dfpSettings:
          $ref: '#/components/schemas/DfpSettings'
          description: Directory site Ad Manager settings.
        instreamVideoPlacementAccepted:
          type: boolean
          description: Whether this site accepts in-stream video ads.
        interstitialPlacementAccepted:
          type: boolean
          description: Whether this site accepts interstitial ads.
        activeViewOptOut:
          description: Whether this directory site has disabled active view creatives.
          type: boolean
      id: DirectorySiteSettings
    ClickTag:
      description: Creative Click Tag.
      id: ClickTag
      properties:
        eventName:
          type: string
          description: Advertiser event name associated with the click tag. This field is used by DISPLAY_IMAGE_GALLERY and HTML5_BANNER creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        name:
          description: Parameter name for the specified click tag. For DISPLAY_IMAGE_GALLERY creative assets, this field must match the value of the creative asset's creativeAssetId.name field.
          type: string
        clickThroughUrl:
          $ref: '#/components/schemas/CreativeClickThroughUrl'
          description: Parameter value for the specified click tag. This field contains a click-through url.
      type: object
    AccountUserProfilesListResponse:
      description: Account User Profile List Response
      id: AccountUserProfilesListResponse
      properties:
        accountUserProfiles:
          items:
            $ref: '#/components/schemas/AccountUserProfile'
          description: Account user profile collection.
          type: array
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountUserProfilesListResponse".'
          type: string
      type: object
    DisjunctiveMatchStatement:
      description: Represents a Disjunctive Match Statement resource, which is a conjunction (and) of disjunctive (or) boolean statements.
      id: DisjunctiveMatchStatement
      type: object
      properties:
        eventFilters:
          items:
            $ref: '#/components/schemas/EventFilter'
          description: The event filters contained within this disjunctive match statement.
          type: array
        kind:
          description: The kind of resource this is, in this case dfareporting#disjunctiveMatchStatement.
          type: string
    SiteSettings:
      id: SiteSettings
      type: object
      description: Site Settings
      properties:
        tagSetting:
          description: Configuration settings for dynamic and image floodlight tags.
          $ref: '#/components/schemas/TagSetting'
        videoActiveViewOptOutTemplate:
          description: Whether Verification and ActiveView for in-stream video creatives are disabled by default for new placements created under this site. This value will be used to populate the placement.videoActiveViewOptOut field, when no value is specified for the new placement.
          type: boolean
        vpaidAdapterChoiceTemplate:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - DEFAULT
            - FLASH
            - HTML5
            - BOTH
          description: 'Default VPAID adapter setting for new placements created under this site. This value will be used to populate the placements.vpaidAdapterChoice field, when no value is specified for the new placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to the placement. The publisher''s specifications will typically determine this setting. For VPAID creatives, the adapter format will match the VPAID format (HTML5 VPAID creatives use the HTML5 adapter). *Note:* Flash is no longer supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH.'
        adBlockingOptOut:
          type: boolean
          description: Whether this site opts out of ad blocking. When true, ad blocking is disabled for all placements under the site, regardless of the individual placement settings. When false, the campaign and placement settings take effect.
        activeViewOptOut:
          description: Whether active view creatives are disabled for this site.
          type: boolean
        disableNewCookie:
          type: boolean
          description: Whether new cookies are disabled for this site.
    AccountsListResponse:
      properties:
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          description: Account collection.
          type: array
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountsListResponse".'
      type: object
      description: Account List Response
      id: AccountsListResponse
    PlacementStrategiesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementStrategiesListResponse".'
          type: string
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        placementStrategies:
          items:
            $ref: '#/components/schemas/PlacementStrategy'
          description: Placement strategy collection.
          type: array
      description: Placement Strategy List Response
      id: PlacementStrategiesListResponse
      type: object
    BrowsersListResponse:
      type: object
      id: BrowsersListResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#browsersListResponse".'
          type: string
        browsers:
          description: Browser collection.
          items:
            $ref: '#/components/schemas/Browser'
          type: array
      description: Browser List Response
    CreativeAsset:
      type: object
      properties:
        active:
          description: 'Whether the video or audio asset is active. This is a read-only field for VPAID_NON_LINEAR_VIDEO assets. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.'
          type: boolean
        orientation:
          type: string
          enum:
            - LANDSCAPE
            - PORTRAIT
            - SQUARE
          description: Orientation of video asset. This is a read-only, auto-generated field.
          enumDescriptions:
            - ''
            - ''
            - ''
        backupImageExit:
          description: 'Exit event configured for the backup image. Applicable to the following creative types: all RICH_MEDIA.'
          $ref: '#/components/schemas/CreativeCustomEvent'
        companionCreativeIds:
          description: List of companion creatives assigned to an in-stream video creative asset. Acceptable values include IDs of existing flash and image creatives. Applicable to INSTREAM_VIDEO creative type with dynamicAssetSelection set to true.
          items:
            type: string
            format: int64
          type: array
        displayType:
          description: 'Type of rich media asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.'
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - ASSET_DISPLAY_TYPE_INPAGE
            - ASSET_DISPLAY_TYPE_FLOATING
            - ASSET_DISPLAY_TYPE_OVERLAY
            - ASSET_DISPLAY_TYPE_EXPANDING
            - ASSET_DISPLAY_TYPE_FLASH_IN_FLASH
            - ASSET_DISPLAY_TYPE_FLASH_IN_FLASH_EXPANDING
            - ASSET_DISPLAY_TYPE_PEEL_DOWN
            - ASSET_DISPLAY_TYPE_VPAID_LINEAR
            - ASSET_DISPLAY_TYPE_VPAID_NON_LINEAR
            - ASSET_DISPLAY_TYPE_BACKDROP
          type: string
        childAssetType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - CHILD_ASSET_TYPE_FLASH
            - CHILD_ASSET_TYPE_VIDEO
            - CHILD_ASSET_TYPE_IMAGE
            - CHILD_ASSET_TYPE_DATA
          description: 'Rich media child asset type. This is a read-only field. Applicable to the following creative types: all VPAID.'
          type: string
        flashVersion:
          description: 'Flash version of the asset. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          format: int32
          type: integer
        verticallyLocked:
          description: 'Whether the asset is vertically locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.'
          type: boolean
        size:
          description: 'Size associated with this creative asset. This is a required field when applicable; however for IMAGE and FLASH_INPAGE, creatives if left blank, this field will be automatically set using the actual size of the associated image asset. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          $ref: '#/components/schemas/Size'
        windowMode:
          description: 'Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE, RICH_MEDIA_DISPLAY_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_DISPLAY_BANNER, and RICH_MEDIA_INPAGE_FLOATING.'
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - OPAQUE
            - WINDOW
            - TRANSPARENT
        assetIdentifier:
          $ref: '#/components/schemas/CreativeAssetId'
          description: 'Identifier of this asset. This is the same identifier returned during creative asset insert operation. This is a required field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.'
        role:
          enum:
            - PRIMARY
            - BACKUP_IMAGE
            - ADDITIONAL_IMAGE
            - ADDITIONAL_FLASH
            - PARENT_VIDEO
            - TRANSCODED_VIDEO
            - OTHER
            - ALTERNATE_VIDEO
            - PARENT_AUDIO
            - TRANSCODED_AUDIO
          type: string
          description: 'Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT. This is a required field. PRIMARY applies to DISPLAY, FLASH_INPAGE, HTML5_BANNER, IMAGE, DISPLAY_IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives. BACKUP_IMAGE applies to FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE. ADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives. OTHER refers to assets from sources other than Campaign Manager, such as Studio uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives. PARENT_VIDEO refers to videos uploaded by the user in Campaign Manager and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. TRANSCODED_VIDEO refers to videos transcoded by Campaign Manager from PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. ALTERNATE_VIDEO refers to the Campaign Manager representation of child asset videos from Studio, and is applicable to VPAID_LINEAR_VIDEO creatives. These cannot be added or removed within Campaign Manager. For VPAID_LINEAR_VIDEO creatives, PARENT_VIDEO, TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR_VIDEO creative. PARENT_AUDIO refers to audios uploaded by the user in Campaign Manager and is applicable to INSTREAM_AUDIO creatives. TRANSCODED_AUDIO refers to audios transcoded by Campaign Manager from PARENT_AUDIO assets and is applicable to INSTREAM_AUDIO creatives. '
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        zipFilesize:
          type: string
          description: 'Size of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.'
        pushdown:
          type: boolean
          description: 'Whether the asset pushes down other content. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.'
        zIndex:
          type: integer
          description: 'zIndex value of an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable to assets whose displayType is NOT one of the following types: ASSET_DISPLAY_TYPE_INPAGE or ASSET_DISPLAY_TYPE_OVERLAY. Acceptable values are -999999999 to 999999999, inclusive.'
          format: int32
        positionTopUnit:
          enum:
            - OFFSET_UNIT_PIXEL
            - OFFSET_UNIT_PERCENT
            - OFFSET_UNIT_PIXEL_FROM_CENTER
          description: 'Offset top unit for an asset. This is a read-only field if the asset displayType is ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.'
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        streamingServingUrl:
          description: 'Streaming URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.'
          type: string
        progressiveServingUrl:
          description: 'Progressive URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.'
          type: string
        startTimeType:
          description: 'Initial wait time type before making the asset visible. Applicable to the following creative types: all RICH_MEDIA.'
          enumDescriptions:
            - ''
            - ''
          enum:
            - ASSET_START_TIME_TYPE_NONE
            - ASSET_START_TIME_TYPE_CUSTOM
          type: string
        frameRate:
          description: 'Video frame rate for video asset in frames per second. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.'
          format: float
          type: number
        customStartTimeValue:
          description: 'Custom start time in seconds for making the asset visible. Applicable to the following creative types: all RICH_MEDIA. Value must be greater than or equal to 0.'
          type: integer
          format: int32
        mimeType:
          description: 'Detected MIME type for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.'
          type: string
        positionLeftUnit:
          description: 'Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.'
          enum:
            - OFFSET_UNIT_PIXEL
            - OFFSET_UNIT_PERCENT
            - OFFSET_UNIT_PIXEL_FROM_CENTER
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        detectedFeatures:
          items:
            type: string
            enum:
              - CSS_FONT_FACE
              - CSS_BACKGROUND_SIZE
              - CSS_BORDER_IMAGE
              - CSS_BORDER_RADIUS
              - CSS_BOX_SHADOW
              - CSS_FLEX_BOX
              - CSS_HSLA
              - CSS_MULTIPLE_BGS
              - CSS_OPACITY
              - CSS_RGBA
              - CSS_TEXT_SHADOW
              - CSS_ANIMATIONS
              - CSS_COLUMNS
              - CSS_GENERATED_CONTENT
              - CSS_GRADIENTS
              - CSS_REFLECTIONS
              - CSS_TRANSFORMS
              - CSS_TRANSFORMS3D
              - CSS_TRANSITIONS
              - APPLICATION_CACHE
              - CANVAS
              - CANVAS_TEXT
              - DRAG_AND_DROP
              - HASH_CHANGE
              - HISTORY
              - AUDIO
              - VIDEO
              - INDEXED_DB
              - INPUT_ATTR_AUTOCOMPLETE
              - INPUT_ATTR_AUTOFOCUS
              - INPUT_ATTR_LIST
              - INPUT_ATTR_PLACEHOLDER
              - INPUT_ATTR_MAX
              - INPUT_ATTR_MIN
              - INPUT_ATTR_MULTIPLE
              - INPUT_ATTR_PATTERN
              - INPUT_ATTR_REQUIRED
              - INPUT_ATTR_STEP
              - INPUT_TYPE_SEARCH
              - INPUT_TYPE_TEL
              - INPUT_TYPE_URL
              - INPUT_TYPE_EMAIL
              - INPUT_TYPE_DATETIME
              - INPUT_TYPE_DATE
              - INPUT_TYPE_MONTH
              - INPUT_TYPE_WEEK
              - INPUT_TYPE_TIME
              - INPUT_TYPE_DATETIME_LOCAL
              - INPUT_TYPE_NUMBER
              - INPUT_TYPE_RANGE
              - INPUT_TYPE_COLOR
              - LOCAL_STORAGE
              - POST_MESSAGE
              - SESSION_STORAGE
              - WEB_SOCKETS
              - WEB_SQL_DATABASE
              - WEB_WORKERS
              - GEO_LOCATION
              - INLINE_SVG
              - SMIL
              - SVG_HREF
              - SVG_CLIP_PATHS
              - TOUCH
              - WEBGL
              - SVG_FILTERS
              - SVG_FE_IMAGE
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
          description: 'List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
          type: array
        id:
          type: string
          format: int64
          description: 'Numeric ID of this creative asset. This is a required field and should not be modified. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.'
        horizontallyLocked:
          type: boolean
          description: 'Whether the asset is horizontally locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.'
        politeLoad:
          type: boolean
          description: Whether this asset is used as a polite load asset.
        mediaDuration:
          description: 'Detected duration for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.'
          format: float
          type: number
        hideSelectionBoxes:
          type: boolean
          description: 'Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all RICH_MEDIA.'
        collapsedSize:
          $ref: '#/components/schemas/Size'
          description: 'Size of an asset when collapsed. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.'
        hideFlashObjects:
          description: 'Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all RICH_MEDIA.'
          type: boolean
        transparency:
          type: boolean
          description: 'Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable to HTML5 assets.'
        sslCompliant:
          type: boolean
          description: 'Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.'
        pushdownDuration:
          type: number
          format: float
          description: 'Pushdown duration in seconds for an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height. Acceptable values are 0 to 9.99, inclusive.'
        durationType:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          enum:
            - ASSET_DURATION_TYPE_AUTO
            - ASSET_DURATION_TYPE_NONE
            - ASSET_DURATION_TYPE_CUSTOM
          description: 'Duration type for which an asset will be displayed. Applicable to the following creative types: all RICH_MEDIA.'
        zipFilename:
          description: 'File name of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.'
          type: string
        artworkType:
          description: 'Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.'
          enum:
            - ARTWORK_TYPE_FLASH
            - ARTWORK_TYPE_HTML5
            - ARTWORK_TYPE_MIXED
            - ARTWORK_TYPE_IMAGE
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
        audioSampleRate:
          format: int32
          description: 'Audio sample bit rate in hertz. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.'
          type: integer
        fileSize:
          format: int64
          description: 'File size associated with this creative asset. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.'
          type: string
        alignment:
          description: 'Possible alignments for an asset. This is a read-only field. Applicable to the following creative types: RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL .'
          enum:
            - ALIGNMENT_TOP
            - ALIGNMENT_RIGHT
            - ALIGNMENT_BOTTOM
            - ALIGNMENT_LEFT
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        offset:
          description: 'Offset position for an asset in collapsed mode. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, only applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.'
          $ref: '#/components/schemas/OffsetPosition'
        bitRate:
          format: int32
          description: 'Detected bit-rate for audio or video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.'
          type: integer
        expandedDimension:
          $ref: '#/components/schemas/Size'
          description: 'Detected expanded dimension for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.'
        originalBackup:
          description: 'Whether the backup asset is original or changed by the user in Campaign Manager. Applicable to the following creative types: all RICH_MEDIA.'
          type: boolean
        idDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the asset. This is a read-only, auto-generated field.
        duration:
          type: integer
          format: int32
          description: 'Duration in seconds for which an asset will be displayed. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID_LINEAR_VIDEO. Value must be greater than or equal to 1.'
        position:
          description: 'Offset position for an asset. Applicable to the following creative types: all RICH_MEDIA.'
          $ref: '#/components/schemas/OffsetPosition'
        additionalSizes:
          items:
            $ref: '#/components/schemas/Size'
          description: Additional sizes associated with this creative asset. HTML5 asset generated by compatible software such as GWD will be able to support more sizes this creative asset can render.
          type: array
        actionScript3:
          type: boolean
          description: 'Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.'
        audioBitRate:
          type: integer
          format: int32
          description: 'Audio stream bit rate in kbps. This is a read-only field. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.'
      description: Creative Asset.
      id: CreativeAsset
    DirectorySitesListResponse:
      description: Directory Site List Response
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#directorySitesListResponse".'
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
        directorySites:
          items:
            $ref: '#/components/schemas/DirectorySite'
          description: Directory site collection.
          type: array
      id: DirectorySitesListResponse
    RegionsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#regionsListResponse".'
          type: string
        regions:
          description: Region collection.
          items:
            $ref: '#/components/schemas/Region'
          type: array
      type: object
      description: Region List Response
      id: RegionsListResponse
    LanguagesListResponse:
      properties:
        languages:
          description: Language collection.
          type: array
          items:
            $ref: '#/components/schemas/Language'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#languagesListResponse".'
      description: Language List Response
      id: LanguagesListResponse
      type: object
    ConnectionType:
      properties:
        id:
          type: string
          format: int64
          description: ID of this connection type.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#connectionType".'
          type: string
        name:
          description: Name of this connection type.
          type: string
      type: object
      description: Contains information about an internet connection type that can be targeted by ads. Clients can use the connection type to target mobile vs. broadband users.
      id: ConnectionType
    SiteCompanionSetting:
      type: object
      properties:
        companionsDisabled:
          type: boolean
          description: Whether companions are disabled for this site template.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteCompanionSetting".'
          type: string
        enabledSizes:
          items:
            $ref: '#/components/schemas/Size'
          type: array
          description: Allowlist of companion sizes to be served via this site template. Set this list to null or empty to serve all companion sizes.
        imageOnly:
          description: Whether to serve only static images as companions.
          type: boolean
      description: Companion Settings
      id: SiteCompanionSetting
    LookbackConfiguration:
      type: object
      properties:
        postImpressionActivitiesDuration:
          type: integer
          description: Lookback window, in days, from the last time a given user viewed one of your ads. If you enter 0, impressions will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used. Acceptable values are 0 to 90, inclusive.
          format: int32
        clickDuration:
          description: Lookback window, in days, from the last time a given user clicked on one of your ads. If you enter 0, clicks will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used. Acceptable values are 0 to 90, inclusive.
          type: integer
          format: int32
      description: Lookback configuration settings.
      id: LookbackConfiguration
    OrderDocumentsListResponse:
      properties:
        orderDocuments:
          description: Order document collection
          items:
            $ref: '#/components/schemas/OrderDocument'
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#orderDocumentsListResponse".'
          type: string
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
      description: Order document List Response
      id: OrderDocumentsListResponse
      type: object
    PlacementsListResponse:
      id: PlacementsListResponse
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementsListResponse".'
          type: string
        placements:
          type: array
          description: Placement collection.
          items:
            $ref: '#/components/schemas/Placement'
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      description: Placement List Response
    Report:
      description: Represents a Report resource.
      type: object
      id: Report
      properties:
        etag:
          type: string
          description: The eTag of this response for caching purposes.
        accountId:
          type: string
          annotations:
            required:
              - dfareporting.reports.update
          format: int64
          description: The account ID to which this report belongs.
        floodlightCriteria:
          description: The report criteria for a report of type "FLOODLIGHT".
          properties:
            dimensions:
              description: The list of dimensions the report should include.
              items:
                $ref: '#/components/schemas/SortedDimension'
              type: array
            dimensionFilters:
              description: The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.
              type: array
              items:
                $ref: '#/components/schemas/DimensionValue'
            reportProperties:
              description: The properties of the report.
              properties:
                includeUnattributedIPConversions:
                  description: Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.
                  type: boolean
                includeAttributedIPConversions:
                  description: Include conversions that have no cookie, but do have an exposure path.
                  type: boolean
                includeUnattributedCookieConversions:
                  type: boolean
                  description: Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.
              type: object
            customRichMediaEvents:
              type: array
              description: The list of custom rich media events to include.
              items:
                $ref: '#/components/schemas/DimensionValue'
            dateRange:
              $ref: '#/components/schemas/DateRange'
              description: The date range this report should be run for.
            metricNames:
              type: array
              description: The list of names of metrics the report should include.
              items:
                type: string
            floodlightConfigId:
              $ref: '#/components/schemas/DimensionValue'
              description: The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.
          type: object
        schedule:
          properties:
            expirationDate:
              type: string
              format: date
            startDate:
              format: date
              type: string
            active:
              type: boolean
              description: Whether the schedule is active or not. Must be set to either true or false.
              annotations:
                required:
                  - dfareporting.reports.insert
                  - dfareporting.reports.update
            every:
              type: integer
              format: int32
              description: Defines every how many days, weeks or months the report should be run. Needs to be set when "repeats" is either "DAILY", "WEEKLY" or "MONTHLY".
            repeats:
              type: string
              annotations:
                required:
                  - dfareporting.reports.insert
                  - dfareporting.reports.update
              description: 'The interval for which the report is repeated. Note: - "DAILY" also requires field "every" to be set. - "WEEKLY" also requires fields "every" and "repeatsOnWeekDays" to be set. - "MONTHLY" also requires fields "every" and "runsOnDayOfMonth" to be set. '
            repeatsOnWeekDays:
              description: List of week days "WEEKLY" on which scheduled reports should run.
              type: array
              items:
                type: string
                enumDescriptions:
                  - ''
                  - ''
                  - ''
                  - ''
                  - ''
                  - ''
                  - ''
                enum:
                  - SUNDAY
                  - MONDAY
                  - TUESDAY
                  - WEDNESDAY
                  - THURSDAY
                  - FRIDAY
                  - SATURDAY
            runsOnDayOfMonth:
              description: 'Enum to define for "MONTHLY" scheduled reports whether reports should be repeated on the same day of the month as "startDate" or the same day of the week of the month. Example: If ''startDate'' is Monday, April 2nd 2012 (2012-04-02), "DAY_OF_MONTH" would run subsequent reports on the 2nd of every Month, and "WEEK_OF_MONTH" would run subsequent reports on the first Monday of the month.'
              type: string
              enum:
                - DAY_OF_MONTH
                - WEEK_OF_MONTH
              enumDescriptions:
                - ''
                - ''
          description: The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not "TODAY".
          type: object
        pathCriteria:
          type: object
          properties:
            dimensions:
              description: The list of dimensions the report should include.
              items:
                $ref: '#/components/schemas/SortedDimension'
              type: array
            activityFilters:
              type: array
              items:
                $ref: '#/components/schemas/DimensionValue'
              description: The list of 'dfa:activity' values to filter on.
            metricNames:
              items:
                type: string
              type: array
              description: The list of names of metrics the report should include.
            floodlightConfigId:
              description: The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.
              $ref: '#/components/schemas/DimensionValue'
            dateRange:
              description: The date range this report should be run for.
              $ref: '#/components/schemas/DateRange'
            customChannelGrouping:
              $ref: '#/components/schemas/ChannelGrouping'
              description: Channel Grouping.
            pathFilters:
              type: array
              items:
                $ref: '#/components/schemas/PathFilter'
              description: Path Filters.
          description: The report criteria for a report of type "PATH".
        id:
          description: The unique ID identifying this report resource.
          annotations:
            required:
              - dfareporting.reports.update
          format: int64
          type: string
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#report.
        lastModifiedTime:
          type: string
          description: The timestamp (in milliseconds since epoch) of when this report was last modified.
          annotations:
            required:
              - dfareporting.reports.update
          format: uint64
        reachCriteria:
          description: The report criteria for a report of type "REACH".
          type: object
          properties:
            enableAllDimensionCombinations:
              description: Whether to enable all reach dimension combinations in the report. Defaults to false. If enabled, the date range of the report should be within the last 42 days.
              type: boolean
            reachByFrequencyMetricNames:
              type: array
              description: The list of names of Reach By Frequency metrics the report should include.
              items:
                type: string
            activities:
              description: Activity group.
              $ref: '#/components/schemas/Activities'
            dimensionFilters:
              type: array
              items:
                $ref: '#/components/schemas/DimensionValue'
              description: The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.
            dateRange:
              $ref: '#/components/schemas/DateRange'
              description: The date range this report should be run for.
            metricNames:
              items:
                type: string
              type: array
              description: The list of names of metrics the report should include.
            customRichMediaEvents:
              $ref: '#/components/schemas/CustomRichMediaEvents'
              description: Custom Rich Media Events group.
            dimensions:
              items:
                $ref: '#/components/schemas/SortedDimension'
              description: The list of dimensions the report should include.
              type: array
        name:
          annotations:
            required:
              - dfareporting.reports.insert
              - dfareporting.reports.update
          description: The name of the report.
          type: string
        type:
          annotations:
            required:
              - dfareporting.reports.insert
              - dfareporting.reports.update
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - STANDARD
            - REACH
            - PATH_TO_CONVERSION
            - CROSS_DIMENSION_REACH
            - FLOODLIGHT
            - PATH
            - PATH_ATTRIBUTION
          type: string
          description: The type of the report.
        criteria:
          properties:
            metricNames:
              description: The list of names of metrics the report should include.
              type: array
              items:
                type: string
            activities:
              description: Activity group.
              $ref: '#/components/schemas/Activities'
            customRichMediaEvents:
              $ref: '#/components/schemas/CustomRichMediaEvents'
              description: Custom Rich Media Events group.
            dimensionFilters:
              items:
                $ref: '#/components/schemas/DimensionValue'
              type: array
              description: The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.
            dateRange:
              description: The date range for which this report should be run.
              $ref: '#/components/schemas/DateRange'
            dimensions:
              type: array
              description: The list of standard dimensions the report should include.
              items:
                $ref: '#/components/schemas/SortedDimension'
          type: object
          description: The report criteria for a report of type "STANDARD".
        fileName:
          type: string
          description: The filename used when generating report files for this report.
        pathAttributionCriteria:
          description: The report criteria for a report of type "PATH_ATTRIBUTION".
          properties:
            pathFilters:
              description: Path Filters.
              items:
                $ref: '#/components/schemas/PathFilter'
              type: array
            dimensions:
              description: The list of dimensions the report should include.
              type: array
              items:
                $ref: '#/components/schemas/SortedDimension'
            customChannelGrouping:
              description: Channel Grouping.
              $ref: '#/components/schemas/ChannelGrouping'
            dateRange:
              description: The date range this report should be run for.
              $ref: '#/components/schemas/DateRange'
            activityFilters:
              description: The list of 'dfa:activity' values to filter on.
              type: array
              items:
                $ref: '#/components/schemas/DimensionValue'
            floodlightConfigId:
              description: The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.
              $ref: '#/components/schemas/DimensionValue'
            metricNames:
              description: The list of names of metrics the report should include.
              type: array
              items:
                type: string
          type: object
        delivery:
          type: object
          description: The report's email delivery settings.
          properties:
            message:
              type: string
              description: The message to be sent with each email.
            recipients:
              type: array
              description: The list of recipients to which to email the report.
              items:
                $ref: '#/components/schemas/Recipient'
            emailOwner:
              description: Whether the report should be emailed to the report owner.
              type: boolean
            emailOwnerDeliveryType:
              enumDescriptions:
                - ''
                - ''
              enum:
                - LINK
                - ATTACHMENT
              type: string
              description: The type of delivery for the owner to receive, if enabled.
        ownerProfileId:
          type: string
          annotations:
            required:
              - dfareporting.reports.update
          description: The user profile id of the owner of this report.
          format: int64
        pathToConversionCriteria:
          description: The report criteria for a report of type "PATH_TO_CONVERSION".
          type: object
          properties:
            reportProperties:
              description: The properties of the report.
              properties:
                clicksLookbackWindow:
                  type: integer
                  format: int32
                  description: 'CM360 checks to see if a click interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.'
                impressionsLookbackWindow:
                  type: integer
                  format: int32
                  description: 'CM360 checks to see if an impression interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.'
                maximumClickInteractions:
                  type: integer
                  format: int32
                  description: The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.
                maximumInteractionGap:
                  format: int32
                  description: 'The maximum amount of time that can take place between interactions (clicks or impressions) by the same user. Valid values: 1-90.'
                  type: integer
                includeUnattributedIPConversions:
                  type: boolean
                  description: Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.
                maximumImpressionInteractions:
                  type: integer
                  format: int32
                  description: The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.
                pivotOnInteractionPath:
                  description: Enable pivoting on interaction path.
                  type: boolean
                includeUnattributedCookieConversions:
                  description: Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.
                  type: boolean
                includeAttributedIPConversions:
                  type: boolean
                  description: 'Deprecated: has no effect.'
              type: object
            dateRange:
              description: The date range this report should be run for.
              $ref: '#/components/schemas/DateRange'
            customRichMediaEvents:
              description: The list of custom rich media events to include.
              items:
                $ref: '#/components/schemas/DimensionValue'
              type: array
            floodlightConfigId:
              $ref: '#/components/schemas/DimensionValue'
              description: The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.
            metricNames:
              description: The list of names of metrics the report should include.
              type: array
              items:
                type: string
            conversionDimensions:
              items:
                $ref: '#/components/schemas/SortedDimension'
              type: array
              description: The list of conversion dimensions the report should include.
            perInteractionDimensions:
              items:
                $ref: '#/components/schemas/SortedDimension'
              type: array
              description: The list of per interaction dimensions the report should include.
            customFloodlightVariables:
              items:
                $ref: '#/components/schemas/SortedDimension'
              description: The list of custom floodlight variables the report should include.
              type: array
            activityFilters:
              type: array
              items:
                $ref: '#/components/schemas/DimensionValue'
              description: The list of 'dfa:activity' values to filter on.
        crossDimensionReachCriteria:
          properties:
            breakdown:
              type: array
              items:
                $ref: '#/components/schemas/SortedDimension'
              description: The list of dimensions the report should include.
            overlapMetricNames:
              type: array
              description: The list of names of overlap metrics the report should include.
              items:
                type: string
            dimension:
              type: string
              enumDescriptions:
                - ''
                - ''
                - ''
                - ''
              enum:
                - ADVERTISER
                - CAMPAIGN
                - SITE_BY_ADVERTISER
                - SITE_BY_CAMPAIGN
              description: The dimension option.
            dimensionFilters:
              items:
                $ref: '#/components/schemas/DimensionValue'
              type: array
              description: The list of filters on which dimensions are filtered.
            metricNames:
              description: The list of names of metrics the report should include.
              type: array
              items:
                type: string
            pivoted:
              description: Whether the report is pivoted or not. Defaults to true.
              type: boolean
            dateRange:
              $ref: '#/components/schemas/DateRange'
              description: The date range this report should be run for.
          type: object
          description: The report criteria for a report of type "CROSS_DIMENSION_REACH".
        subAccountId:
          format: int64
          type: string
          description: The subaccount ID to which this report belongs if applicable.
        format:
          type: string
          enum:
            - CSV
            - EXCEL
          enumDescriptions:
            - ''
            - ''
          description: The output format of the report. If not specified, default format is "CSV". Note that the actual format in the completed report file might differ if for instance the report's size exceeds the format's capabilities. "CSV" will then be the fallback format.
    ConversionsBatchInsertResponse:
      type: object
      properties:
        hasFailures:
          type: boolean
          description: Indicates that some or all conversions failed to insert.
        status:
          description: The insert status of each conversion. Statuses are returned in the same order that conversions are inserted.
          items:
            $ref: '#/components/schemas/ConversionStatus'
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionsBatchInsertResponse".'
          type: string
      id: ConversionsBatchInsertResponse
      description: Insert Conversions Response.
    OffsetPosition:
      type: object
      properties:
        left:
          type: integer
          format: int32
          description: Offset distance from left side of an asset or a window.
        top:
          format: int32
          description: Offset distance from top side of an asset or a window.
          type: integer
      description: Offset Position.
      id: OffsetPosition
    AccountPermissionsListResponse:
      id: AccountPermissionsListResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountPermissionsListResponse".'
        accountPermissions:
          type: array
          items:
            $ref: '#/components/schemas/AccountPermission'
          description: Account permission collection.
      type: object
      description: Account Permission List Response
    Browser:
      type: object
      description: Contains information about a browser that can be targeted by ads.
      properties:
        name:
          type: string
          description: Name of this browser.
        dartId:
          format: int64
          type: string
          description: DART ID of this browser. This is the ID used when generating reports.
        minorVersion:
          description: 'Minor version number (number after first dot on left) of this browser. For example, for Chrome 5.0.375.86 beta, this field should be set to 0. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can''t tell which version it is.'
          type: string
        browserVersionId:
          description: ID referring to this grouping of browser and version numbers. This is the ID used for targeting.
          type: string
          format: int64
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#browser".'
        majorVersion:
          type: string
          description: 'Major version number (leftmost number) of this browser. For example, for Chrome 5.0.376.86 beta, this field should be set to 5. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can''t tell which version it is.'
      id: Browser
    File:
      type: object
      properties:
        lastModifiedTime:
          format: int64
          description: The timestamp in milliseconds since epoch when this file was last modified.
          type: string
        id:
          type: string
          format: int64
          description: The unique ID of this report file.
        etag:
          description: Etag of this resource.
          type: string
        fileName:
          type: string
          description: The filename of the file.
        status:
          enum:
            - PROCESSING
            - REPORT_AVAILABLE
            - FAILED
            - CANCELLED
            - QUEUED
          description: The status of the report file.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#file".'
        dateRange:
          $ref: '#/components/schemas/DateRange'
          description: The date range for which the file has report data. The date range will always be the absolute date range for which the report is run.
        urls:
          type: object
          properties:
            apiUrl:
              description: The URL for downloading the report data through the API.
              type: string
            browserUrl:
              description: The URL for downloading the report data through a browser.
              type: string
          description: The URLs where the completed report file can be downloaded.
        reportId:
          type: string
          format: int64
          description: The ID of the report this file was generated from.
        format:
          type: string
          enumDescriptions:
            - ''
            - ''
          enum:
            - CSV
            - EXCEL
          description: The output format of the report. Only available once the file is available.
      id: File
      description: Represents a File resource. A file contains the metadata for a report run. It shows the status of the run and holds the URLs to the generated report data if the run is finished and the status is "REPORT_AVAILABLE".
    LandingPage:
      id: LandingPage
      properties:
        name:
          type: string
          description: Name of this landing page. This is a required field. It must be less than 256 characters long.
        archived:
          description: Whether this landing page has been archived.
          type: boolean
        deepLinks:
          description: Links that will direct the user to a mobile app, if installed.
          type: array
          items:
            $ref: '#/components/schemas/DeepLink'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#landingPage".'
          type: string
        id:
          type: string
          description: ID of this landing page. This is a read-only, auto-generated field.
          format: int64
        url:
          type: string
          description: URL of this landing page. This is a required field.
        advertiserId:
          type: string
          format: int64
          description: Advertiser ID of this landing page. This is a required field.
      description: Contains information about where a user's browser is taken after the user clicks an ad.
      type: object
    SiteVideoSettings:
      id: SiteVideoSettings
      description: Video Settings
      type: object
      properties:
        skippableSettings:
          $ref: '#/components/schemas/SiteSkippableSetting'
          description: Settings for the skippability of video creatives served to this site. This will act as default for new placements created under this site.
        orientation:
          enum:
            - ANY
            - LANDSCAPE
            - PORTRAIT
          description: Orientation of a site template used for video. This will act as default for new placements created under this site.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
        obaEnabled:
          description: Whether OBA icons are enabled for this placement.
          type: boolean
        publisherSpecificationId:
          description: Publisher specification ID used to identify site-associated publisher requirements and automatically populate transcode settings. If publisher specification ID is specified, it will take precedence over transcode settings.
          type: string
          format: int64
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteVideoSettings".'
        transcodeSettings:
          $ref: '#/components/schemas/SiteTranscodeSetting'
          description: Settings for the transcodes of video creatives served to this site. This will act as default for new placements created under this site.
        obaSettings:
          $ref: '#/components/schemas/ObaIcon'
          description: Settings for the OBA icon of video creatives served to this site. This will act as default for new placements created under this site.
        companionSettings:
          $ref: '#/components/schemas/SiteCompanionSetting'
          description: Settings for the companion creatives of video creatives served to this site.
    DimensionValueList:
      description: Represents the list of DimensionValue resources.
      id: DimensionValueList
      type: object
      properties:
        kind:
          description: The kind of list this is, in this case dfareporting#dimensionValueList.
          type: string
        nextPageToken:
          description: Continuation token used to page through dimension values. To retrieve the next page of results, set the next request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.
          type: string
        items:
          description: The dimension values returned in this response.
          type: array
          items:
            $ref: '#/components/schemas/DimensionValue'
        etag:
          type: string
          description: The eTag of this response for caching purposes.
    DefaultClickThroughEventTagProperties:
      description: Properties of inheriting and overriding the default click-through event tag. A campaign may override the event tag defined at the advertiser level, and an ad may also override the campaign's setting further.
      properties:
        defaultClickThroughEventTagId:
          type: string
          format: int64
          description: ID of the click-through event tag to apply to all ads in this entity's scope.
        overrideInheritedEventTag:
          type: boolean
          description: Whether this entity should override the inherited default click-through event tag with its own defined value.
      type: object
      id: DefaultClickThroughEventTagProperties
    PathToConversionReportCompatibleFields:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/Metric'
          description: Metrics which are compatible to be selected in the "metricNames" section of the report.
        customFloodlightVariables:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          description: Custom floodlight variables which are compatible to be selected in the "customFloodlightVariables" section of the report.
        perInteractionDimensions:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          description: Per-interaction dimensions which are compatible to be selected in the "perInteractionDimensions" section of the report.
        conversionDimensions:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          description: Conversion dimensions which are compatible to be selected in the "conversionDimensions" section of the report.
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields.
      description: Represents fields that are compatible to be selected for a report of type "PATH_TO_CONVERSION".
      id: PathToConversionReportCompatibleFields
    CreativeFieldsListResponse:
      type: object
      id: CreativeFieldsListResponse
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeFieldsListResponse".'
          type: string
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        creativeFields:
          type: array
          items:
            $ref: '#/components/schemas/CreativeField'
          description: Creative field collection.
      description: Creative Field List Response
    Invoice:
      id: Invoice
      type: object
      properties:
        serviceStartDate:
          type: string
          description: The invoice service start date.
        campaign_summaries:
          type: array
          items:
            $ref: '#/components/schemas/CampaignSummary'
          description: The list of summarized campaign information associated with this invoice.
        totalTaxAmountMicros:
          format: int64
          description: The sum of all taxes in invoice, in micros of the invoice's currency.
          type: string
        correctedInvoiceId:
          description: The originally issued invoice that is being adjusted by this invoice, if applicable. May appear on invoice PDF as *Reference invoice number*.
          type: string
        paymentsProfileId:
          description: The ID of the payments profile the invoice belongs to. Appears on the invoice PDF as *Billing ID*.
          type: string
        currencyCode:
          type: string
          description: Invoice currency code in ISO 4217 format.
        serviceEndDate:
          type: string
          description: The invoice service end date.
        id:
          description: ID of this invoice.
          type: string
        pdfUrl:
          type: string
          description: 'The URL to download a PDF copy of the invoice. Note that this URL is user specific and requires a valid OAuth 2.0 access token to access. The access token must be provided in an *Authorization: Bearer* HTTP header. The URL will only be usable for 7 days from when the api is called.'
        invoiceType:
          type: string
          description: The type of invoice document.
          enum:
            - INVOICE_TYPE_UNSPECIFIED
            - INVOICE_TYPE_CREDIT
            - INVOICE_TYPE_INVOICE
          enumDescriptions:
            - ''
            - ''
            - ''
        paymentsAccountId:
          description: The ID of the payments account the invoice belongs to. Appears on the invoice PDF as *Billing Account Number*.
          type: string
        issueDate:
          type: string
          description: The date when the invoice was issued.
        replacedInvoiceIds:
          description: 'The originally issued invoice(s) that is being cancelled by this invoice, if applicable. May appear on invoice PDF as *Replaced invoice numbers*. Note: There may be multiple replaced invoices due to consolidation of multiple invoices into a single invoice.'
          items:
            type: string
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#invoice".'
          type: string
        subtotalAmountMicros:
          description: The pre-tax subtotal amount, in micros of the invoice's currency.
          format: int64
          type: string
        totalAmountMicros:
          type: string
          format: int64
          description: The invoice total amount, in micros of the invoice's currency.
        purchaseOrderNumber:
          type: string
          description: Purchase order number associated with the invoice.
        dueDate:
          type: string
          description: The invoice due date.
      description: Contains information about a single invoice
    UserRolePermissionGroup:
      description: Represents a grouping of related user role permissions.
      properties:
        name:
          type: string
          description: Name of this user role permission group.
        id:
          description: ID of this user role permission.
          format: int64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolePermissionGroup".'
          type: string
      type: object
      id: UserRolePermissionGroup
    ContentCategoriesListResponse:
      description: Content Category List Response
      id: ContentCategoriesListResponse
      type: object
      properties:
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#contentCategoriesListResponse".'
          type: string
        contentCategories:
          type: array
          items:
            $ref: '#/components/schemas/ContentCategory'
          description: Content category collection.
    Project:
      id: Project
      properties:
        targetConversions:
          type: string
          format: int64
          description: Number of conversions that the advertiser is targeting.
        subaccountId:
          type: string
          format: int64
          description: Subaccount ID of this project.
        targetCpmNanos:
          description: CPM that the advertiser is targeting.
          type: string
          format: int64
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#project".'
          type: string
        targetImpressions:
          description: Number of impressions that the advertiser is targeting.
          type: string
          format: int64
        advertiserId:
          format: int64
          description: Advertiser ID of this project.
          type: string
        endDate:
          type: string
          format: date
        budget:
          description: Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.
          format: int64
          type: string
        name:
          type: string
          description: Name of this project.
        clientName:
          description: Name of the project client.
          type: string
        overview:
          description: Overview of this project.
          type: string
        startDate:
          format: date
          type: string
        id:
          type: string
          format: int64
          description: ID of this project. This is a read-only, auto-generated field.
        accountId:
          format: int64
          type: string
          description: Account ID of this project.
        audienceAgeGroup:
          description: Audience age group of this project.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - PLANNING_AUDIENCE_AGE_18_24
            - PLANNING_AUDIENCE_AGE_25_34
            - PLANNING_AUDIENCE_AGE_35_44
            - PLANNING_AUDIENCE_AGE_45_54
            - PLANNING_AUDIENCE_AGE_55_64
            - PLANNING_AUDIENCE_AGE_65_OR_MORE
            - PLANNING_AUDIENCE_AGE_UNKNOWN
          type: string
        targetCpmActiveViewNanos:
          description: vCPM from Active View that the advertiser is targeting.
          type: string
          format: int64
        targetCpcNanos:
          description: CPC that the advertiser is targeting.
          type: string
          format: int64
        clientBillingCode:
          type: string
          description: Client billing code of this project.
        audienceGender:
          enumDescriptions:
            - ''
            - ''
          enum:
            - PLANNING_AUDIENCE_GENDER_MALE
            - PLANNING_AUDIENCE_GENDER_FEMALE
          description: Audience gender of this project.
          type: string
        targetClicks:
          type: string
          description: Number of clicks that the advertiser is targeting.
          format: int64
        lastModifiedInfo:
          description: Information about the most recent modification of this project.
          $ref: '#/components/schemas/LastModifiedInfo'
        targetCpaNanos:
          type: string
          description: CPA that the advertiser is targeting.
          format: int64
      description: Contains properties of a Planning project.
      type: object
    DimensionValueRequest:
      properties:
        dimensionName:
          type: string
          annotations:
            required:
              - dfareporting.dimensionValues.query
          description: The name of the dimension for which values should be requested.
        filters:
          items:
            $ref: '#/components/schemas/DimensionFilter'
          type: array
          description: The list of filters by which to filter values. The filters are ANDed.
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        kind:
          type: string
          description: The kind of request this is, in this case dfareporting#dimensionValueRequest .
      type: object
      id: DimensionValueRequest
      description: Represents a DimensionValuesRequest.
    PlacementStrategy:
      properties:
        accountId:
          description: Account ID of this placement strategy.This is a read-only field that can be left blank.
          type: string
          format: int64
        name:
          type: string
          description: Name of this placement strategy. This is a required field. It must be less than 256 characters long and unique among placement strategies of the same account.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementStrategy".'
          type: string
        id:
          format: int64
          description: ID of this placement strategy. This is a read-only, auto-generated field.
          type: string
      id: PlacementStrategy
      type: object
      description: Contains properties of a placement strategy.
    City:
      type: object
      description: Contains information about a city that can be targeted by ads.
      id: City
      properties:
        name:
          type: string
          description: Name of this city.
        countryCode:
          description: Country code of the country to which this city belongs.
          type: string
        regionDartId:
          description: DART ID of the region to which this city belongs.
          format: int64
          type: string
        regionCode:
          description: Region code of the region to which this city belongs.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#city".'
        countryDartId:
          format: int64
          description: DART ID of the country to which this city belongs.
          type: string
        dartId:
          description: DART ID of this city. This is the ID used for targeting and generating reports.
          format: int64
          type: string
        metroCode:
          type: string
          description: Metro region code of the metro region (DMA) to which this city belongs.
        metroDmaId:
          description: ID of the metro region (DMA) to which this city belongs.
          type: string
          format: int64
    FloodlightConfiguration:
      type: object
      id: FloodlightConfiguration
      description: Contains properties of a Floodlight configuration.
      properties:
        analyticsDataSharingEnabled:
          type: boolean
          description: Whether advertiser data is shared with Google Analytics.
        thirdPartyAuthenticationTokens:
          items:
            $ref: '#/components/schemas/ThirdPartyAuthenticationToken'
          type: array
          description: List of third-party authentication tokens enabled for this configuration.
        subaccountId:
          format: int64
          description: Subaccount ID of this floodlight configuration. This is a read-only field that can be left blank.
          type: string
        naturalSearchConversionAttributionOption:
          enum:
            - EXCLUDE_NATURAL_SEARCH_CONVERSION_ATTRIBUTION
            - INCLUDE_NATURAL_SEARCH_CONVERSION_ATTRIBUTION
            - INCLUDE_NATURAL_SEARCH_TIERED_CONVERSION_ATTRIBUTION
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          description: Types of attribution options for natural search conversions.
        firstDayOfWeek:
          description: Day that will be counted as the first day of the week in reports. This is a required field.
          enumDescriptions:
            - ''
            - ''
          enum:
            - MONDAY
            - SUNDAY
          type: string
        customViewabilityMetric:
          description: Custom Viewability metric for the floodlight configuration.
          $ref: '#/components/schemas/CustomViewabilityMetric'
        inAppAttributionTrackingEnabled:
          type: boolean
          description: Whether in-app attribution tracking is enabled.
        advertiserId:
          type: string
          description: Advertiser ID of the parent advertiser of this floodlight configuration.
          format: int64
        accountId:
          type: string
          format: int64
          description: Account ID of this floodlight configuration. This is a read-only field that can be left blank.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightConfiguration".'
          type: string
        exposureToConversionEnabled:
          description: Whether the exposure-to-conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting.
          type: boolean
        userDefinedVariableConfigurations:
          items:
            $ref: '#/components/schemas/UserDefinedVariableConfiguration'
          type: array
          description: List of user defined variables enabled for this configuration.
        lookbackConfiguration:
          $ref: '#/components/schemas/LookbackConfiguration'
          description: Lookback window settings for this floodlight configuration.
        tagSettings:
          $ref: '#/components/schemas/TagSettings'
          description: Configuration settings for dynamic and image floodlight tags.
        advertiserIdDimensionValue:
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        idDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of this floodlight configuration. This is a read-only, auto-generated field.
        omnitureSettings:
          $ref: '#/components/schemas/OmnitureSettings'
          description: Settings for Campaign Manager Omniture integration.
        id:
          type: string
          format: int64
          description: ID of this floodlight configuration. This is a read-only, auto-generated field.
    TechnologyTargeting:
      description: Technology Targeting.
      properties:
        browsers:
          type: array
          items:
            $ref: '#/components/schemas/Browser'
          description: Browsers that this ad targets. For each browser either set browserVersionId or dartId along with the version numbers. If both are specified, only browserVersionId will be used. The other fields are populated automatically when the ad is inserted or updated.
        connectionTypes:
          items:
            $ref: '#/components/schemas/ConnectionType'
          description: Connection types that this ad targets. For each connection type only id is required. The other fields are populated automatically when the ad is inserted or updated.
          type: array
        mobileCarriers:
          items:
            $ref: '#/components/schemas/MobileCarrier'
          type: array
          description: Mobile carriers that this ad targets. For each mobile carrier only id is required, and the other fields are populated automatically when the ad is inserted or updated. If targeting a mobile carrier, do not set targeting for any zip codes.
        operatingSystemVersions:
          description: Operating system versions that this ad targets. To target all versions, use operatingSystems. For each operating system version, only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system version, do not set targeting for the corresponding operating system in operatingSystems.
          items:
            $ref: '#/components/schemas/OperatingSystemVersion'
          type: array
        platformTypes:
          description: Platform types that this ad targets. For example, desktop, mobile, or tablet. For each platform type, only id is required, and the other fields are populated automatically when the ad is inserted or updated.
          items:
            $ref: '#/components/schemas/PlatformType'
          type: array
        operatingSystems:
          description: Operating systems that this ad targets. To target specific versions, use operatingSystemVersions. For each operating system only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system, do not set targeting for operating system versions for the same operating system.
          type: array
          items:
            $ref: '#/components/schemas/OperatingSystem'
      id: TechnologyTargeting
      type: object
    CrossDimensionReachReportCompatibleFields:
      id: CrossDimensionReachReportCompatibleFields
      description: Represents fields that are compatible to be selected for a report of type "CROSS_DIMENSION_REACH".
      type: object
      properties:
        breakdown:
          description: Dimensions which are compatible to be selected in the "breakdown" section of the report.
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
        overlapMetrics:
          items:
            $ref: '#/components/schemas/Metric'
          description: Metrics which are compatible to be selected in the "overlapMetricNames" section of the report.
          type: array
        dimensionFilters:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
          description: Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
        metrics:
          description: Metrics which are compatible to be selected in the "metricNames" section of the report.
          items:
            $ref: '#/components/schemas/Metric'
          type: array
        kind:
          description: The kind of resource this is, in this case dfareporting#crossDimensionReachReportCompatibleFields.
          type: string
    CreativeRotation:
      properties:
        creativeAssignments:
          items:
            $ref: '#/components/schemas/CreativeAssignment'
          type: array
          description: Creative assignments in this creative rotation.
        weightCalculationStrategy:
          description: Strategy for calculating weights. Used with CREATIVE_ROTATION_TYPE_RANDOM.
          enum:
            - WEIGHT_STRATEGY_EQUAL
            - WEIGHT_STRATEGY_CUSTOM
            - WEIGHT_STRATEGY_HIGHEST_CTR
            - WEIGHT_STRATEGY_OPTIMIZED
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        type:
          enum:
            - CREATIVE_ROTATION_TYPE_SEQUENTIAL
            - CREATIVE_ROTATION_TYPE_RANDOM
          type: string
          description: Type of creative rotation. Can be used to specify whether to use sequential or random rotation.
          enumDescriptions:
            - ''
            - ''
        creativeOptimizationConfigurationId:
          type: string
          description: Creative optimization configuration that is used by this ad. It should refer to one of the existing optimization configurations in the ad's campaign. If it is unset or set to 0, then the campaign's default optimization configuration will be used for this ad.
          format: int64
      description: Creative Rotation.
      type: object
      id: CreativeRotation
    DynamicTargetingKeysListResponse:
      type: object
      properties:
        dynamicTargetingKeys:
          description: Dynamic targeting key collection.
          type: array
          items:
            $ref: '#/components/schemas/DynamicTargetingKey'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#dynamicTargetingKeysListResponse".'
      description: Dynamic Targeting Key List Response
      id: DynamicTargetingKeysListResponse
    EncryptionInfo:
      id: EncryptionInfo
      properties:
        encryptionEntityType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - ENCRYPTION_ENTITY_TYPE_UNKNOWN
            - DCM_ACCOUNT
            - DCM_ADVERTISER
            - DBM_PARTNER
            - DBM_ADVERTISER
            - ADWORDS_CUSTOMER
            - DFP_NETWORK_CODE
          description: The encryption entity type. This should match the encryption configuration for ad serving or Data Transfer.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#encryptionInfo".'
          type: string
        encryptionEntityId:
          type: string
          format: int64
          description: The encryption entity ID. This should match the encryption configuration for ad serving or Data Transfer.
        encryptionSource:
          enum:
            - ENCRYPTION_SCOPE_UNKNOWN
            - AD_SERVING
            - DATA_TRANSFER
          description: Describes whether the encrypted cookie was received from ad serving (the %m macro) or from Data Transfer.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
      type: object
      description: A description of how user IDs are encrypted.
    Conversion:
      type: object
      description: A Conversion represents when a user successfully performs a desired action after seeing an ad.
      properties:
        dclid:
          description: The display click ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, mobileDeviceId, gclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or matchId or mobileDeviceId or gclid or impressionId is a required field.
          type: string
        matchId:
          type: string
          description: The match ID field. A match ID is your own first-party identifier that has been synced with Google using the match ID feature in Floodlight. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[],mobileDeviceId, gclid, dclid, and impressionId. This or encryptedUserId orencryptedUserIdCandidates[] or mobileDeviceId or gclid or dclid or impressionIdis a required field.
        timestampMicros:
          type: string
          description: The timestamp of conversion, in Unix epoch micros. This is a required field.
          format: int64
        gclid:
          type: string
          description: The Google click ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, mobileDeviceId, dclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or matchId or mobileDeviceId or dclid or impressionId is a required field.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversion".'
          type: string
        childDirectedTreatment:
          description: Whether this particular request may come from a user under the age of 13, under COPPA compliance.
          type: boolean
        mobileDeviceId:
          description: The mobile device ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, gclid, dclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or matchId or gclid or dclid or impressionId is a required field.
          type: string
        encryptedUserId:
          type: string
          description: The alphanumeric encrypted user ID. When set, encryptionInfo should also be specified. This field is mutually exclusive with encryptedUserIdCandidates[], matchId, mobileDeviceId, gclid, dclid, and impressionId. This or encryptedUserIdCandidates[] or matchId or mobileDeviceId or gclid or dclid or impressionId is a required field.
        floodlightConfigurationId:
          description: Floodlight Configuration ID of this conversion. This is a required field.
          type: string
          format: int64
        ordinal:
          description: The ordinal of the conversion. Use this field to control how conversions of the same user and day are de-duplicated. This is a required field.
          type: string
        treatmentForUnderage:
          description: Whether this particular request may come from a user under the age of 16 (may differ by country), under compliance with the European Union's General Data Protection Regulation (GDPR).
          type: boolean
        floodlightActivityId:
          format: int64
          description: Floodlight Activity ID of this conversion. This is a required field.
          type: string
        nonPersonalizedAd:
          type: boolean
          description: Whether the conversion was for a non personalized ad.
        customVariables:
          type: array
          items:
            $ref: '#/components/schemas/CustomFloodlightVariable'
          description: Custom floodlight variables. This field may only be used when calling batchinsert; it is not supported by batchupdate.
        quantity:
          description: The quantity of the conversion.
          type: string
          format: int64
        value:
          format: double
          description: The value of the conversion.
          type: number
        encryptedUserIdCandidates:
          description: A list of the alphanumeric encrypted user IDs. Any user ID with exposure prior to the conversion timestamp will be used in the inserted conversion. If no such user ID is found then the conversion will be rejected with INVALID_ARGUMENT error. When set, encryptionInfo should also be specified. This field may only be used when calling batchinsert; it is not supported by batchupdate. This field is mutually exclusive with encryptedUserId, matchId, mobileDeviceId, gclid dclid, and impressionId. This or encryptedUserId or matchId or mobileDeviceId or gclid or dclid or impressionId is a required field.
          items:
            type: string
          type: array
        impressionId:
          description: The impression ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[], matchId, mobileDeviceId, and gclid. One of these identifiers must be set.
          type: string
        limitAdTracking:
          type: boolean
          description: Whether Limit Ad Tracking is enabled. When set to true, the conversion will be used for reporting but not targeting. This will prevent remarketing.
      id: Conversion
    MetrosListResponse:
      description: Metro List Response
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#metrosListResponse".'
        metros:
          type: array
          description: Metro collection.
          items:
            $ref: '#/components/schemas/Metro'
      id: MetrosListResponse
    ConversionsBatchUpdateRequest:
      properties:
        conversions:
          items:
            $ref: '#/components/schemas/Conversion'
          type: array
          description: The set of conversions to update.
        encryptionInfo:
          description: Describes how encryptedUserId is encrypted. This is a required field if encryptedUserId is used.
          $ref: '#/components/schemas/EncryptionInfo'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionsBatchUpdateRequest".'
      id: ConversionsBatchUpdateRequest
      description: Update Conversions Request.
      type: object
    AdvertiserLandingPagesListResponse:
      type: object
      description: Landing Page List Response
      properties:
        landingPages:
          description: Landing page collection
          items:
            $ref: '#/components/schemas/LandingPage'
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiserLandingPagesListResponse".'
          type: string
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      id: AdvertiserLandingPagesListResponse
    FloodlightActivity:
      properties:
        subaccountId:
          type: string
          format: int64
          description: Subaccount ID of this floodlight activity. This is a read-only field that can be left blank.
        floodlightActivityGroupId:
          description: Floodlight activity group ID of this floodlight activity. This is a required field.
          type: string
          format: int64
        attributionEnabled:
          type: boolean
          description: Whether the activity is enabled for attribution.
        sslRequired:
          type: boolean
          description: Whether this floodlight activity must be SSL-compliant.
        floodlightConfigurationId:
          description: Floodlight configuration ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's floodlight configuration or from the existing activity's floodlight configuration.
          format: int64
          type: string
        idDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of this floodlight activity. This is a read-only, auto-generated field.
        advertiserId:
          format: int64
          type: string
          description: Advertiser ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's advertiser or the existing activity's advertiser.
        defaultTags:
          description: Dynamic floodlight tags.
          items:
            $ref: '#/components/schemas/FloodlightActivityDynamicTag'
          type: array
        tagString:
          description: 'Value of the cat= parameter in the floodlight tag, which the ad servers use to identify the activity. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activities of the same activity group. This field is read-only after insertion.'
          type: string
        publisherTags:
          type: array
          description: Publisher dynamic floodlight tags.
          items:
            $ref: '#/components/schemas/FloodlightActivityPublisherDynamicTag'
        floodlightActivityGroupType:
          description: Type of the associated floodlight activity group. This is a read-only field.
          type: string
          enum:
            - COUNTER
            - SALE
          enumDescriptions:
            - ''
            - ''
        status:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The status of the activity. This can only be set to ACTIVE or ARCHIVED_AND_DISABLED. The ARCHIVED status is no longer supported and cannot be set for Floodlight activities. The DISABLED_POLICY status indicates that a Floodlight activity is violating Google policy. Contact your account manager for more information.
          enum:
            - ACTIVE
            - ARCHIVED_AND_DISABLED
            - ARCHIVED
            - DISABLED_POLICY
          type: string
        floodlightActivityGroupTagString:
          type: string
          description: Tag string of the associated floodlight activity group. This is a read-only field.
        floodlightConfigurationIdDimensionValue:
          description: Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivity".'
        id:
          type: string
          description: ID of this floodlight activity. This is a read-only, auto-generated field.
          format: int64
        accountId:
          format: int64
          description: Account ID of this floodlight activity. This is a read-only field that can be left blank.
          type: string
        userDefinedVariableTypes:
          description: 'List of the user-defined variables used by this conversion tag. These map to the "u[1-100]=" in the tags. Each of these can have a user defined type. Acceptable values are U1 to U100, inclusive. '
          type: array
          items:
            enum:
              - U1
              - U2
              - U3
              - U4
              - U5
              - U6
              - U7
              - U8
              - U9
              - U10
              - U11
              - U12
              - U13
              - U14
              - U15
              - U16
              - U17
              - U18
              - U19
              - U20
              - U21
              - U22
              - U23
              - U24
              - U25
              - U26
              - U27
              - U28
              - U29
              - U30
              - U31
              - U32
              - U33
              - U34
              - U35
              - U36
              - U37
              - U38
              - U39
              - U40
              - U41
              - U42
              - U43
              - U44
              - U45
              - U46
              - U47
              - U48
              - U49
              - U50
              - U51
              - U52
              - U53
              - U54
              - U55
              - U56
              - U57
              - U58
              - U59
              - U60
              - U61
              - U62
              - U63
              - U64
              - U65
              - U66
              - U67
              - U68
              - U69
              - U70
              - U71
              - U72
              - U73
              - U74
              - U75
              - U76
              - U77
              - U78
              - U79
              - U80
              - U81
              - U82
              - U83
              - U84
              - U85
              - U86
              - U87
              - U88
              - U89
              - U90
              - U91
              - U92
              - U93
              - U94
              - U95
              - U96
              - U97
              - U98
              - U99
              - U100
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
        tagFormat:
          type: string
          enumDescriptions:
            - ''
            - ''
          enum:
            - HTML
            - XHTML
          description: Tag format type for the floodlight activity. If left blank, the tag format will default to HTML.
        secure:
          type: boolean
          description: Whether this tag should use SSL.
        floodlightTagType:
          description: The type of Floodlight tag this activity will generate. This is a required field.
          enum:
            - IFRAME
            - IMAGE
            - GLOBAL_SITE_TAG
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        countingMethod:
          type: string
          description: Counting method for conversions for this floodlight activity. This is a required field.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - STANDARD_COUNTING
            - UNIQUE_COUNTING
            - SESSION_COUNTING
            - TRANSACTIONS_COUNTING
            - ITEMS_SOLD_COUNTING
        notes:
          description: General notes or implementation instructions for the tag.
          type: string
        cacheBustingType:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: Code type used for cache busting in the generated tag. Applicable only when floodlightActivityGroupType is COUNTER and countingMethod is STANDARD_COUNTING or UNIQUE_COUNTING.
          enum:
            - JAVASCRIPT
            - ACTIVE_SERVER_PAGE
            - JSP
            - PHP
            - COLD_FUSION
        name:
          description: Name of this floodlight activity. This is a required field. Must be less than 129 characters long and cannot contain quotes.
          type: string
        expectedUrl:
          type: string
          description: URL where this tag will be deployed. If specified, must be less than 256 characters long.
        floodlightActivityGroupName:
          description: Name of the associated floodlight activity group. This is a read-only field.
          type: string
        sslCompliant:
          type: boolean
          description: Whether the floodlight activity is SSL-compliant. This is a read-only field, its value detected by the system from the floodlight tags.
        advertiserIdDimensionValue:
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
      description: Contains properties of a Floodlight activity.
      type: object
      id: FloodlightActivity
    FloodlightActivityGroupsListResponse:
      description: Floodlight Activity Group List Response
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivityGroupsListResponse".'
          type: string
        floodlightActivityGroups:
          description: Floodlight activity group collection.
          items:
            $ref: '#/components/schemas/FloodlightActivityGroup'
          type: array
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
      type: object
      id: FloodlightActivityGroupsListResponse
    SkippableSetting:
      type: object
      description: Skippable Settings
      id: SkippableSetting
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#skippableSetting".'
        skippable:
          type: boolean
          description: Whether the user can skip creatives served to this placement.
        progressOffset:
          description: Amount of time to play videos served to this placement before counting a view. Applicable when skippable is true.
          $ref: '#/components/schemas/VideoOffset'
        skipOffset:
          description: Amount of time to play videos served to this placement before the skip button should appear. Applicable when skippable is true.
          $ref: '#/components/schemas/VideoOffset'
    ContentCategory:
      description: Organizes placements according to the contents of their associated webpages.
      type: object
      id: ContentCategory
      properties:
        accountId:
          format: int64
          type: string
          description: Account ID of this content category. This is a read-only field that can be left blank.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#contentCategory".'
          type: string
        id:
          type: string
          description: ID of this content category. This is a read-only, auto-generated field.
          format: int64
        name:
          description: Name of this content category. This is a required field and must be less than 256 characters long and unique among content categories of the same account.
          type: string
    UserProfile:
      id: UserProfile
      description: 'A UserProfile resource lets you list all DFA user profiles that are associated with a Google user account. The profile_id needs to be specified in other API requests. '
      properties:
        subAccountId:
          type: string
          format: int64
          description: The sub account ID this profile belongs to if applicable.
        accountId:
          description: The account ID to which this profile belongs.
          type: string
          format: int64
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userProfile".'
          type: string
        accountName:
          description: The account name this profile belongs to.
          type: string
        profileId:
          description: The unique ID of the user profile.
          format: int64
          type: string
        etag:
          type: string
          description: Etag of this resource.
        subAccountName:
          type: string
          description: The sub account name this profile belongs to if applicable.
        userName:
          type: string
          description: The user name.
      type: object
    Placement:
      id: Placement
      properties:
        directorySiteId:
          format: int64
          type: string
          description: Directory site ID of this placement. On insert, you must set either this field or the siteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#placement".'
        idDimensionValue:
          description: Dimension value for the ID of this placement. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        size:
          $ref: '#/components/schemas/Size'
          description: Size associated with this placement. When inserting or updating a placement, only the size ID field is used. This field is required on insertion.
        subaccountId:
          type: string
          format: int64
          description: Subaccount ID of this placement. This field can be left blank.
        vpaidAdapterChoice:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: 'VPAID adapter setting for this placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to this placement. *Note:* Flash is no longer supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH.'
          enum:
            - DEFAULT
            - FLASH
            - HTML5
            - BOTH
          type: string
        activeStatus:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          description: Whether this placement is active, inactive, archived or permanently archived.
          enum:
            - PLACEMENT_STATUS_UNKNOWN
            - PLACEMENT_STATUS_ACTIVE
            - PLACEMENT_STATUS_INACTIVE
            - PLACEMENT_STATUS_ARCHIVED
            - PLACEMENT_STATUS_PERMANENTLY_ARCHIVED
        contentCategoryId:
          description: ID of the content category assigned to this placement.
          format: int64
          type: string
        comment:
          type: string
          description: Comments for this placement.
        externalId:
          type: string
          description: External ID for this placement.
        additionalSizes:
          items:
            $ref: '#/components/schemas/Size'
          description: Additional sizes associated with this placement. When inserting or updating a placement, only the size ID field is used.
          type: array
        campaignIdDimensionValue:
          description: Dimension value for the ID of the campaign. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        tagSetting:
          description: Tag settings for this placement.
          $ref: '#/components/schemas/TagSetting'
        sslRequired:
          description: Whether creatives assigned to this placement must be SSL-compliant.
          type: boolean
        id:
          description: ID of this placement. This is a read-only, auto-generated field.
          type: string
          format: int64
        siteIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the site. This is a read-only, auto-generated field.
        name:
          type: string
          description: Name of this placement.This is a required field and must be less than or equal to 512 characters long.
        keyName:
          type: string
          description: Key name of this placement. This is a read-only, auto-generated field.
        publisherUpdateInfo:
          description: Information about the last publisher update. This is a read-only field.
          $ref: '#/components/schemas/LastModifiedInfo'
        videoActiveViewOptOut:
          description: Whether Verification and ActiveView are disabled for in-stream video creatives for this placement. The same setting videoActiveViewOptOut exists on the site level -- the opt out occurs if either of these settings are true. These settings are distinct from DirectorySites.settings.activeViewOptOut or Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts out both video traffic, as well as display ads, from Verification and ActiveView.
          type: boolean
        advertiserIdDimensionValue:
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        lastModifiedInfo:
          description: Information about the most recent modification of this placement. This is a read-only field.
          $ref: '#/components/schemas/LastModifiedInfo'
        adBlockingOptOut:
          type: boolean
          description: Whether this placement opts out of ad blocking. When true, ad blocking is disabled for this placement. When false, the campaign and site settings take effect.
        paymentApproved:
          description: Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid placements.
          type: boolean
        accountId:
          description: Account ID of this placement. This field can be left blank.
          format: int64
          type: string
        partnerWrappingData:
          $ref: '#/components/schemas/MeasurementPartnerWrappingData'
          description: Measurement partner provided settings for a wrapped placement.
        videoSettings:
          $ref: '#/components/schemas/VideoSettings'
          description: A collection of settings which affect video creatives served through this placement. Applicable to placements with IN_STREAM_VIDEO compatibility.
        tagFormats:
          items:
            enum:
              - PLACEMENT_TAG_STANDARD
              - PLACEMENT_TAG_IFRAME_JAVASCRIPT
              - PLACEMENT_TAG_IFRAME_ILAYER
              - PLACEMENT_TAG_INTERNAL_REDIRECT
              - PLACEMENT_TAG_JAVASCRIPT
              - PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT
              - PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT
              - PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT
              - PLACEMENT_TAG_CLICK_COMMANDS
              - PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH
              - PLACEMENT_TAG_TRACKING
              - PLACEMENT_TAG_TRACKING_IFRAME
              - PLACEMENT_TAG_TRACKING_JAVASCRIPT
              - PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3
              - PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY
              - PLACEMENT_TAG_JAVASCRIPT_LEGACY
              - PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY
              - PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY
              - PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4
              - PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT
            type: string
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
          description: 'Tag formats to generate for this placement. This field is required on insertion. Acceptable values are: - "PLACEMENT_TAG_STANDARD" - "PLACEMENT_TAG_IFRAME_JAVASCRIPT" - "PLACEMENT_TAG_IFRAME_ILAYER" - "PLACEMENT_TAG_INTERNAL_REDIRECT" - "PLACEMENT_TAG_JAVASCRIPT" - "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT" - "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT" - "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT" - "PLACEMENT_TAG_CLICK_COMMANDS" - "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH" - "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3" - "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4" - "PLACEMENT_TAG_TRACKING" - "PLACEMENT_TAG_TRACKING_IFRAME" - "PLACEMENT_TAG_TRACKING_JAVASCRIPT" '
          type: array
        placementGroupIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the placement group. This is a read-only, auto-generated field.
        campaignId:
          format: int64
          type: string
          description: Campaign ID of this placement. This field is a required field on insertion.
        paymentSource:
          description: Payment source for this placement. This is a required field that is read-only after insertion.
          enumDescriptions:
            - ''
            - ''
          enum:
            - PLACEMENT_AGENCY_PAID
            - PLACEMENT_PUBLISHER_PAID
          type: string
        advertiserId:
          type: string
          format: int64
          description: Advertiser ID of this placement. This field can be left blank.
        directorySiteIdDimensionValue:
          $ref: '#/components/schemas/DimensionValue'
          description: Dimension value for the ID of the directory site. This is a read-only, auto-generated field.
        wrappingOptOut:
          type: boolean
          description: Whether this placement opts out of tag wrapping.
        siteId:
          description: Site ID associated with this placement. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.
          format: int64
          type: string
        placementGroupId:
          format: int64
          description: ID of this placement's group, if applicable.
          type: string
        compatibility:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, on mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no longer allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.
          enum:
            - DISPLAY
            - DISPLAY_INTERSTITIAL
            - APP
            - APP_INTERSTITIAL
            - IN_STREAM_VIDEO
            - IN_STREAM_AUDIO
          type: string
        lookbackConfiguration:
          $ref: '#/components/schemas/LookbackConfiguration'
          description: Lookback window settings for this placement.
        primary:
          type: boolean
          description: Whether this placement is the primary placement of a roadblock (placement group). You cannot change this field from true to false. Setting this field to true will automatically set the primary field on the original primary placement of the roadblock to false, and it will automatically set the roadblock's primaryPlacementId field to the ID of this placement.
        pricingSchedule:
          description: Pricing schedule of this placement. This field is required on insertion, specifically subfields startDate, endDate and pricingType.
          $ref: '#/components/schemas/PricingSchedule'
        createInfo:
          description: Information about the creation of this placement. This is a read-only field.
          $ref: '#/components/schemas/LastModifiedInfo'
        status:
          description: Third-party placement status.
          type: string
          enum:
            - PENDING_REVIEW
            - PAYMENT_ACCEPTED
            - PAYMENT_REJECTED
            - ACKNOWLEDGE_REJECTION
            - ACKNOWLEDGE_ACCEPTANCE
            - DRAFT
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        placementStrategyId:
          format: int64
          description: ID of the placement strategy assigned to this placement.
          type: string
      type: object
      description: Contains properties of a placement.
    AudienceSegment:
      id: AudienceSegment
      properties:
        name:
          description: Name of this audience segment. This is a required field and must be less than 65 characters long.
          type: string
        allocation:
          description: Weight allocated to this segment. The weight assigned will be understood in proportion to the weights assigned to other segments in the same segment group. Acceptable values are 1 to 1000, inclusive.
          type: integer
          format: int32
        id:
          format: int64
          description: ID of this audience segment. This is a read-only, auto-generated field.
          type: string
      description: Audience Segment.
      type: object
    VideoFormatsListResponse:
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoFormatsListResponse".'
        videoFormats:
          type: array
          items:
            $ref: '#/components/schemas/VideoFormat'
          description: Video format collection.
      id: VideoFormatsListResponse
      description: Video Format List Response
    CustomViewabilityMetricConfiguration:
      properties:
        audible:
          description: Whether the video must be audible to count an impression.
          type: boolean
        viewabilityPercent:
          description: The percentage of video that must be on screen for the Custom Viewability Metric to count an impression.
          type: integer
          format: int32
        timeMillis:
          type: integer
          format: int32
          description: The time in milliseconds the video must play for the Custom Viewability Metric to count an impression. If both this and timePercent are specified, the earlier of the two will be used.
        timePercent:
          format: int32
          description: The percentage of video that must play for the Custom Viewability Metric to count an impression. If both this and timeMillis are specified, the earlier of the two will be used.
          type: integer
      type: object
      description: The attributes, like playtime and percent onscreen, that define the Custom Viewability Metric.
      id: CustomViewabilityMetricConfiguration
    CountriesListResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#countriesListResponse".'
        countries:
          description: Country collection.
          items:
            $ref: '#/components/schemas/Country'
          type: array
      id: CountriesListResponse
      description: Country List Response
      type: object
    TargetWindow:
      id: TargetWindow
      description: Target Window.
      properties:
        customHtml:
          description: User-entered value.
          type: string
        targetWindowOption:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          description: Type of browser window for which the backup image of the flash creative can be displayed.
          enum:
            - NEW_WINDOW
            - CURRENT_WINDOW
            - CUSTOM
      type: object
    OperatingSystemVersion:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#operatingSystemVersion".'
        majorVersion:
          description: Major version (leftmost number) of this operating system version.
          type: string
        operatingSystem:
          description: Operating system of this operating system version.
          $ref: '#/components/schemas/OperatingSystem'
        minorVersion:
          type: string
          description: Minor version (number after the first dot) of this operating system version.
        name:
          type: string
          description: Name of this operating system version.
        id:
          type: string
          description: ID of this operating system version.
          format: int64
      id: OperatingSystemVersion
      type: object
      description: Contains information about a particular version of an operating system that can be targeted by ads.
    DynamicTargetingKey:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#dynamicTargetingKey".'
          type: string
        name:
          description: Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase.
          type: string
        objectId:
          format: int64
          description: ID of the object of this dynamic targeting key. This is a required field.
          type: string
        objectType:
          enum:
            - OBJECT_ADVERTISER
            - OBJECT_AD
            - OBJECT_CREATIVE
            - OBJECT_PLACEMENT
          description: Type of the object of this dynamic targeting key. This is a required field.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          type: string
      id: DynamicTargetingKey
      description: Contains properties of a dynamic targeting key. Dynamic targeting keys are unique, user-friendly labels, created at the advertiser level in DCM, that can be assigned to ads, creatives, and placements and used for targeting with Studio dynamic creatives. Use these labels instead of numeric Campaign Manager IDs (such as placement IDs) to save time and avoid errors in your dynamic feeds.
      type: object
    FsCommand:
      description: FsCommand.
      id: FsCommand
      type: object
      properties:
        left:
          format: int32
          type: integer
          description: Distance from the left of the browser.Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.
        top:
          type: integer
          description: Distance from the top of the browser. Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.
          format: int32
        windowWidth:
          description: Width of the window.
          format: int32
          type: integer
        positionOption:
          enum:
            - CENTERED
            - DISTANCE_FROM_TOP_LEFT_CORNER
          description: Position in the browser where the window will open.
          enumDescriptions:
            - ''
            - ''
          type: string
        windowHeight:
          description: Height of the window.
          format: int32
          type: integer
    Size:
      id: Size
      properties:
        id:
          format: int64
          description: ID of this size. This is a read-only, auto-generated field.
          type: string
        width:
          format: int32
          description: Width of this size. Acceptable values are 0 to 32767, inclusive.
          type: integer
        height:
          type: integer
          description: Height of this size. Acceptable values are 0 to 32767, inclusive.
          format: int32
        iab:
          type: boolean
          description: IAB standard size. This is a read-only, auto-generated field.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#size".'
      description: Represents the dimensions of ads, placements, creatives, or creative assets.
      type: object
    Dimension:
      type: object
      description: Represents a dimension.
      properties:
        name:
          description: The dimension name, e.g. advertiser
          type: string
        kind:
          description: The kind of resource this is, in this case dfareporting#dimension.
          type: string
      id: Dimension
    UserRolePermission:
      id: UserRolePermission
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolePermission".'
        permissionGroupId:
          format: int64
          type: string
          description: ID of the permission group that this user role permission belongs to.
        id:
          type: string
          description: ID of this user role permission.
          format: int64
        name:
          description: Name of this user role permission.
          type: string
        availability:
          type: string
          enum:
            - NOT_AVAILABLE_BY_DEFAULT
            - ACCOUNT_BY_DEFAULT
            - SUBACCOUNT_AND_ACCOUNT_BY_DEFAULT
            - ACCOUNT_ALWAYS
            - SUBACCOUNT_AND_ACCOUNT_ALWAYS
            - USER_PROFILE_ONLY
          description: Levels of availability for a user role permission.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
      description: Contains properties of a user role permission.
      type: object
    PostalCode:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#postalCode".'
          type: string
        id:
          type: string
          description: ID of this postal code.
        code:
          type: string
          description: Postal code. This is equivalent to the id field.
        countryDartId:
          type: string
          description: DART ID of the country to which this postal code belongs.
          format: int64
        countryCode:
          type: string
          description: Country code of the country to which this postal code belongs.
      id: PostalCode
      description: Contains information about a postal code that can be targeted by ads.
      type: object
    ObaIcon:
      properties:
        program:
          type: string
          description: Identifies the industry initiative that the icon supports. For example, AdChoices.
        iconClickThroughUrl:
          type: string
          description: URL to redirect to when an OBA icon is clicked.
        iconClickTrackingUrl:
          description: URL to track click when an OBA icon is clicked.
          type: string
        size:
          $ref: '#/components/schemas/Size'
          description: OBA icon size.
        iconViewTrackingUrl:
          type: string
          description: URL to track view when an OBA icon is clicked.
        yPosition:
          description: OBA icon y coordinate position. Accepted values are top or bottom.
          type: string
        xPosition:
          type: string
          description: OBA icon x coordinate position. Accepted values are left or right.
        resourceUrl:
          type: string
          description: OBA icon resource URL. Campaign Manager only supports image and JavaScript icons. Learn more
      id: ObaIcon
      description: Online Behavioral Advertiser icon.
      type: object
    SubaccountsListResponse:
      description: Subaccount List Response
      type: object
      properties:
        subaccounts:
          description: Subaccount collection.
          items:
            $ref: '#/components/schemas/Subaccount'
          type: array
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#subaccountsListResponse".'
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      id: SubaccountsListResponse
    DeliverySchedule:
      id: DeliverySchedule
      properties:
        hardCutoff:
          type: boolean
          description: Whether or not hard cutoff is enabled. If true, the ad will not serve after the end date and time. Otherwise the ad will continue to be served until it has reached its delivery goals.
        frequencyCap:
          $ref: '#/components/schemas/FrequencyCap'
          description: Limit on the number of times an individual user can be served the ad within a specified period of time.
        priority:
          type: string
          enum:
            - AD_PRIORITY_01
            - AD_PRIORITY_02
            - AD_PRIORITY_03
            - AD_PRIORITY_04
            - AD_PRIORITY_05
            - AD_PRIORITY_06
            - AD_PRIORITY_07
            - AD_PRIORITY_08
            - AD_PRIORITY_09
            - AD_PRIORITY_10
            - AD_PRIORITY_11
            - AD_PRIORITY_12
            - AD_PRIORITY_13
            - AD_PRIORITY_14
            - AD_PRIORITY_15
            - AD_PRIORITY_16
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Serving priority of an ad, with respect to other ads. The lower the priority number, the greater the priority with which it is served.
        impressionRatio:
          type: string
          description: Impression ratio for this ad. This ratio determines how often each ad is served relative to the others. For example, if ad A has an impression ratio of 1 and ad B has an impression ratio of 3, then Campaign Manager will serve ad B three times as often as ad A. Acceptable values are 1 to 10, inclusive.
          format: int64
      description: Delivery Schedule.
      type: object
    ChannelGrouping:
      properties:
        name:
          type: string
          description: ChannelGrouping name.
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#channelGrouping.
        fallbackName:
          type: string
          description: ChannelGrouping fallback name.
        rules:
          description: The rules contained within this channel grouping.
          items:
            $ref: '#/components/schemas/ChannelGroupingRule'
          type: array
      id: ChannelGrouping
      type: object
      description: Represents a DfaReporting channel grouping.
    ReportsConfiguration:
      properties:
        exposureToConversionEnabled:
          description: Whether the exposure to conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting.
          type: boolean
        reportGenerationTimeZoneId:
          format: int64
          type: string
          description: 'Report generation time zone ID of this account. This is a required field that can only be changed by a superuser. Acceptable values are: - "1" for "America/New_York" - "2" for "Europe/London" - "3" for "Europe/Paris" - "4" for "Africa/Johannesburg" - "5" for "Asia/Jerusalem" - "6" for "Asia/Shanghai" - "7" for "Asia/Hong_Kong" - "8" for "Asia/Tokyo" - "9" for "Australia/Sydney" - "10" for "Asia/Dubai" - "11" for "America/Los_Angeles" - "12" for "Pacific/Auckland" - "13" for "America/Sao_Paulo" - "16" for "America/Asuncion" - "17" for "America/Chicago" - "18" for "America/Denver" - "19" for "America/St_Johns" - "20" for "Asia/Dhaka" - "21" for "Asia/Jakarta" - "22" for "Asia/Kabul" - "23" for "Asia/Karachi" - "24" for "Asia/Calcutta" - "25" for "Asia/Pyongyang" - "26" for "Asia/Rangoon" - "27" for "Atlantic/Cape_Verde" - "28" for "Atlantic/South_Georgia" - "29" for "Australia/Adelaide" - "30" for "Australia/Lord_Howe" - "31" for "Europe/Moscow" - "32" for "Pacific/Kiritimati" - "35" for "Pacific/Norfolk" - "36" for "Pacific/Tongatapu" '
        lookbackConfiguration:
          description: Default lookback windows for new advertisers in this account.
          $ref: '#/components/schemas/LookbackConfiguration'
      id: ReportsConfiguration
      type: object
      description: Reporting Configuration
    Metric:
      id: Metric
      type: object
      description: Represents a metric.
      properties:
        kind:
          description: The kind of resource this is, in this case dfareporting#metric.
          type: string
        name:
          type: string
          description: The metric name, e.g. dfa:impressions
    FloodlightActivitiesListResponse:
      description: Floodlight Activity List Response
      type: object
      properties:
        floodlightActivities:
          type: array
          description: Floodlight activity collection.
          items:
            $ref: '#/components/schemas/FloodlightActivity'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivitiesListResponse".'
          type: string
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
      id: FloodlightActivitiesListResponse
    ThirdPartyTrackingUrl:
      description: Third-party Tracking URL.
      id: ThirdPartyTrackingUrl
      properties:
        thirdPartyUrlType:
          type: string
          description: Third-party URL type for in-stream video and in-stream audio creatives.
          enum:
            - IMPRESSION
            - CLICK_TRACKING
            - VIDEO_START
            - VIDEO_FIRST_QUARTILE
            - VIDEO_MIDPOINT
            - VIDEO_THIRD_QUARTILE
            - VIDEO_COMPLETE
            - VIDEO_MUTE
            - VIDEO_PAUSE
            - VIDEO_REWIND
            - VIDEO_FULLSCREEN
            - VIDEO_STOP
            - VIDEO_CUSTOM
            - SURVEY
            - RICH_MEDIA_IMPRESSION
            - RICH_MEDIA_RM_IMPRESSION
            - RICH_MEDIA_BACKUP_IMPRESSION
            - VIDEO_SKIP
            - VIDEO_PROGRESS
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        url:
          description: URL for the specified third-party URL type.
          type: string
      type: object
    RemarketingList:
      type: object
      description: Contains properties of a remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource can be used to manage remarketing lists that are owned by your advertisers. To see all remarketing lists that are visible to your advertisers, including those that are shared to your advertiser or account, use the TargetableRemarketingLists resource.
      properties:
        listSource:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - REMARKETING_LIST_SOURCE_OTHER
            - REMARKETING_LIST_SOURCE_ADX
            - REMARKETING_LIST_SOURCE_DFP
            - REMARKETING_LIST_SOURCE_XFP
            - REMARKETING_LIST_SOURCE_DFA
            - REMARKETING_LIST_SOURCE_GA
            - REMARKETING_LIST_SOURCE_YOUTUBE
            - REMARKETING_LIST_SOURCE_DBM
            - REMARKETING_LIST_SOURCE_GPLUS
            - REMARKETING_LIST_SOURCE_DMP
            - REMARKETING_LIST_SOURCE_PLAY_STORE
          type: string
          description: Product from which this remarketing list was originated.
        id:
          description: Remarketing list ID. This is a read-only, auto-generated field.
          type: string
          format: int64
        accountId:
          description: Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.
          type: string
          format: int64
        advertiserIdDimensionValue:
          description: Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.
          $ref: '#/components/schemas/DimensionValue'
        description:
          description: Remarketing list description.
          type: string
        listSize:
          format: int64
          type: string
          description: Number of users currently in the list. This is a read-only field.
        listPopulationRule:
          $ref: '#/components/schemas/ListPopulationRule'
          description: Rule used to populate the remarketing list with users.
        subaccountId:
          description: Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.
          format: int64
          type: string
        advertiserId:
          description: Dimension value for the advertiser ID that owns this remarketing list. This is a required field.
          type: string
          format: int64
        active:
          description: Whether this remarketing list is active.
          type: boolean
        name:
          description: Name of the remarketing list. This is a required field. Must be no greater than 128 characters long.
          type: string
        lifeSpan:
          type: string
          description: Number of days that a user should remain in the remarketing list without an impression. Acceptable values are 1 to 540, inclusive.
          format: int64
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#remarketingList".'
          type: string
      id: RemarketingList
    PopupWindowProperties:
      id: PopupWindowProperties
      description: Popup Window Properties.
      properties:
        offset:
          $ref: '#/components/schemas/OffsetPosition'
          description: Upper-left corner coordinates of the popup window. Applicable if positionType is COORDINATES.
        title:
          description: Title of popup window.
          type: string
        showToolBar:
          type: boolean
          description: Whether to display the browser tool bar.
        dimension:
          $ref: '#/components/schemas/Size'
          description: 'Popup dimension for a creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID'
        showStatusBar:
          description: Whether to display the browser status bar.
          type: boolean
        positionType:
          description: Popup window position either centered or at specific coordinate.
          enumDescriptions:
            - ''
            - ''
          type: string
          enum:
            - CENTER
            - COORDINATES
        showMenuBar:
          description: Whether to display the browser menu bar.
          type: boolean
        showAddressBar:
          description: Whether to display the browser address bar.
          type: boolean
        showScrollBar:
          description: Whether to display the browser scroll bar.
          type: boolean
      type: object
    EventTagsListResponse:
      description: Event Tag List Response
      id: EventTagsListResponse
      properties:
        eventTags:
          type: array
          description: Event tag collection.
          items:
            $ref: '#/components/schemas/EventTag'
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#eventTagsListResponse".'
          type: string
      type: object
    BillingRateTieredRate:
      properties:
        rateInMicros:
          type: string
          format: int64
          description: Rate in micros for this tier.
        highValue:
          type: string
          format: int64
          description: The maximum for this tier range.
        lowValue:
          description: The minimum for this tier range.
          type: string
          format: int64
      type: object
      id: BillingRateTieredRate
    OrderDocument:
      properties:
        subaccountId:
          description: Subaccount ID of this order document.
          type: string
          format: int64
        id:
          type: string
          format: int64
          description: ID of this order document.
        type:
          enumDescriptions:
            - ''
            - ''
          description: Type of this order document
          type: string
          enum:
            - PLANNING_ORDER_TYPE_INSERTION_ORDER
            - PLANNING_ORDER_TYPE_CHANGE_ORDER
        cancelled:
          description: Whether this order document is cancelled.
          type: boolean
        createdInfo:
          description: Information about the creation of this order document.
          $ref: '#/components/schemas/LastModifiedInfo'
        signed:
          description: Whether this order document has been signed.
          type: boolean
        accountId:
          type: string
          description: Account ID of this order document.
          format: int64
        approvedByUserProfileIds:
          items:
            type: string
            format: int64
          type: array
          description: IDs of users who have approved this order document.
        lastSentTime:
          format: date-time
          type: string
        advertiserId:
          format: int64
          description: Advertiser ID of this order document.
          type: string
        projectId:
          format: int64
          description: Project ID of this order document.
          type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#orderDocument".'
        orderId:
          description: ID of the order from which this order document is created.
          type: string
          format: int64
        title:
          description: Title of this order document.
          type: string
        amendedOrderDocumentId:
          description: The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.
          format: int64
          type: string
        lastSentRecipients:
          description: List of email addresses that received the last sent document.
          type: array
          items:
            type: string
        effectiveDate:
          format: date
          type: string
      description: Contains properties of a Planning order document.
      type: object
      id: OrderDocument
    PathFilter:
      id: PathFilter
      description: Represents a DfaReporting path filter.
      type: object
      properties:
        kind:
          type: string
          description: The kind of resource this is, in this case dfareporting#pathFilter.
        pathMatchPosition:
          enum:
            - PATH_MATCH_POSITION_UNSPECIFIED
            - ANY
            - FIRST
            - LAST
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
          type: string
        eventFilters:
          items:
            $ref: '#/components/schemas/EventFilter'
          type: array
          description: Event filters in path report.
    Pricing:
      description: Pricing Information
      id: Pricing
      type: object
      properties:
        startDate:
          type: string
          format: date
        groupType:
          enumDescriptions:
            - ''
            - ''
          enum:
            - PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE
            - PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK
          description: 'Group type of this inventory item if it represents a placement group. Is null otherwise. There are two type of placement groups: PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE is a simple group of inventory items that acts as a single pricing point for a group of tags. PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK is a group of inventory items that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned inventory items to be marked as primary.'
          type: string
        pricingType:
          description: Pricing type of this inventory item.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - PLANNING_PLACEMENT_PRICING_TYPE_IMPRESSIONS
            - PLANNING_PLACEMENT_PRICING_TYPE_CPM
            - PLANNING_PLACEMENT_PRICING_TYPE_CLICKS
            - PLANNING_PLACEMENT_PRICING_TYPE_CPC
            - PLANNING_PLACEMENT_PRICING_TYPE_CPA
            - PLANNING_PLACEMENT_PRICING_TYPE_FLAT_RATE_IMPRESSIONS
            - PLANNING_PLACEMENT_PRICING_TYPE_FLAT_RATE_CLICKS
            - PLANNING_PLACEMENT_PRICING_TYPE_CPM_ACTIVEVIEW
          type: string
        endDate:
          type: string
          format: date
        capCostType:
          enum:
            - PLANNING_PLACEMENT_CAP_COST_TYPE_NONE
            - PLANNING_PLACEMENT_CAP_COST_TYPE_MONTHLY
            - PLANNING_PLACEMENT_CAP_COST_TYPE_CUMULATIVE
          enumDescriptions:
            - ''
            - ''
            - ''
          description: Cap cost type of this inventory item.
          type: string
        flights:
          items:
            $ref: '#/components/schemas/Flight'
          type: array
          description: Flights of this inventory item. A flight (a.k.a. pricing period) represents the inventory item pricing information for a specific period of time.
    CreativeClickThroughUrl:
      properties:
        customClickThroughUrl:
          description: Custom click-through URL. Applicable if the landingPageId field is left unset.
          type: string
        computedClickThroughUrl:
          description: 'Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: - If landingPageId is specified then that landing page''s URL is assigned to this field. - Otherwise, the customClickThroughUrl is assigned to this field. '
          type: string
        landingPageId:
          format: int64
          description: ID of the landing page for the click-through URL.
          type: string
      type: object
      description: Click-through URL
      id: CreativeClickThroughUrl
    ConversionStatus:
      id: ConversionStatus
      type: object
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ConversionError'
          type: array
          description: A list of errors related to this conversion.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionStatus".'
        conversion:
          description: The original conversion that was inserted or updated.
          $ref: '#/components/schemas/Conversion'
      description: The original conversion that was inserted or updated and whether there were any errors.
    ProjectsListResponse:
      id: ProjectsListResponse
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#projectsListResponse".'
        projects:
          type: array
          description: Project collection.
          items:
            $ref: '#/components/schemas/Project'
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
      type: object
      description: Project List Response
    Subaccount:
      type: object
      description: Contains properties of a Campaign Manager subaccount.
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#subaccount".'
          type: string
        accountId:
          type: string
          format: int64
          description: ID of the account that contains this subaccount. This is a read-only field that can be left blank.
        availablePermissionIds:
          type: array
          items:
            type: string
            format: int64
          description: IDs of the available user role permissions for this subaccount.
        id:
          description: ID of this subaccount. This is a read-only, auto-generated field.
          format: int64
          type: string
        name:
          description: Name of this subaccount. This is a required field. Must be less than 128 characters long and be unique among subaccounts of the same account.
          type: string
      id: Subaccount
    CampaignCreativeAssociationsListResponse:
      description: Campaign Creative Association List Response
      properties:
        nextPageToken:
          type: string
          description: Pagination token to be used for the next list operation.
        campaignCreativeAssociations:
          description: Campaign creative association collection
          items:
            $ref: '#/components/schemas/CampaignCreativeAssociation'
          type: array
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#campaignCreativeAssociationsListResponse".'
      id: CampaignCreativeAssociationsListResponse
      type: object
    GeoTargeting:
      properties:
        postalCodes:
          type: array
          description: Postal codes to be targeted. For each postal code only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a postal code, do not target or exclude the country of the postal code.
          items:
            $ref: '#/components/schemas/PostalCode'
        excludeCountries:
          type: boolean
          description: Whether or not to exclude the countries in the countries field from targeting. If false, the countries field refers to countries which will be targeted by the ad.
        metros:
          type: array
          items:
            $ref: '#/components/schemas/Metro'
          description: Metros to be targeted. For each metro only dmaId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a metro, do not target or exclude the country of the metro.
        regions:
          items:
            $ref: '#/components/schemas/Region'
          type: array
          description: Regions to be targeted. For each region only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a region, do not target or exclude the country of the region.
        cities:
          items:
            $ref: '#/components/schemas/City'
          type: array
          description: Cities to be targeted. For each city only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a city, do not target or exclude the country of the city, and do not target the metro or region of the city.
        countries:
          items:
            $ref: '#/components/schemas/Country'
          description: Countries to be targeted or excluded from targeting, depending on the setting of the excludeCountries field. For each country only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting or excluding a country, do not target regions, cities, metros, or postal codes in the same country.
          type: array
      description: Geographical Targeting.
      id: GeoTargeting
      type: object
    Rule:
      type: object
      description: A rule associates an asset with a targeting template for asset-level targeting. Applicable to INSTREAM_VIDEO creatives.
      properties:
        targetingTemplateId:
          description: A targeting template ID. The targeting from the targeting template will be used to determine whether this asset should be served. This is a required field.
          type: string
          format: int64
        assetId:
          description: A creativeAssets[].id. This should refer to one of the parent assets in this creative. This is a required field.
          type: string
          format: int64
        name:
          description: A user-friendly name for this rule. This is a required field.
          type: string
      id: Rule
    CreativesListResponse:
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativesListResponse".'
        nextPageToken:
          description: Pagination token to be used for the next list operation.
          type: string
        creatives:
          items:
            $ref: '#/components/schemas/Creative'
          description: Creative collection.
          type: array
      description: Creative List Response
      id: CreativesListResponse
      type: object
    PlacementTag:
      type: object
      id: PlacementTag
      properties:
        placementId:
          format: int64
          description: Placement ID
          type: string
        tagDatas:
          description: Tags generated for this placement.
          items:
            $ref: '#/components/schemas/TagData'
          type: array
      description: Placement Tag
    ListPopulationTerm:
      description: Remarketing List Population Rule Term.
      properties:
        negation:
          type: boolean
          description: Whether to negate the comparison result of this term during rule evaluation. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.
        value:
          description: Literal to compare the variable to. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.
          type: string
        operator:
          enum:
            - NUM_EQUALS
            - NUM_LESS_THAN
            - NUM_LESS_THAN_EQUAL
            - NUM_GREATER_THAN
            - NUM_GREATER_THAN_EQUAL
            - STRING_EQUALS
            - STRING_CONTAINS
          description: Comparison operator of this term. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
        variableName:
          type: string
          description: Name of the variable (U1, U2, etc.) being compared in this term. This field is only relevant when type is set to null, CUSTOM_VARIABLE_TERM or REFERRER_TERM.
        variableFriendlyName:
          description: Friendly name of this term's variable. This is a read-only, auto-generated field. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM.
          type: string
        type:
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
          enum:
            - CUSTOM_VARIABLE_TERM
            - LIST_MEMBERSHIP_TERM
            - REFERRER_TERM
          description: List population term type determines the applicable fields in this object. If left unset or set to CUSTOM_VARIABLE_TERM, then variableName, variableFriendlyName, operator, value, and negation are applicable. If set to LIST_MEMBERSHIP_TERM then remarketingListId and contains are applicable. If set to REFERRER_TERM then operator, value, and negation are applicable.
        remarketingListId:
          format: int64
          type: string
          description: ID of the list in question. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM.
        contains:
          description: Will be true if the term should check if the user is in the list and false if the term should check if the user is not in the list. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM. False by default.
          type: boolean
      id: ListPopulationTerm
      type: object
    RichMediaExitOverride:
      description: Rich Media Exit Override.
      id: RichMediaExitOverride
      properties:
        clickThroughUrl:
          $ref: '#/components/schemas/ClickThroughUrl'
          description: Click-through URL of this rich media exit override. Applicable if the enabled field is set to true.
        enabled:
          description: Whether to use the clickThroughUrl. If false, the creative-level exit will be used.
          type: boolean
        exitId:
          type: string
          description: ID for the override to refer to a specific exit in the creative.
          format: int64
      type: object
    RemarketingListShare:
      type: object
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#remarketingListShare".'
          type: string
        sharedAccountIds:
          description: Accounts that the remarketing list is shared with.
          type: array
          items:
            format: int64
            type: string
        sharedAdvertiserIds:
          type: array
          description: Advertisers that the remarketing list is shared with.
          items:
            format: int64
            type: string
        remarketingListId:
          format: int64
          type: string
          description: Remarketing list ID. This is a read-only, auto-generated field.
      id: RemarketingListShare
      description: Contains properties of a remarketing list's sharing information. Sharing allows other accounts or advertisers to target to your remarketing lists. This resource can be used to manage remarketing list sharing to other accounts and advertisers.
    CreativeAssetSelection:
      description: Encapsulates the list of rules for asset selection and a default asset in case none of the rules match. Applicable to INSTREAM_VIDEO creatives.
      type: object
      properties:
        defaultAssetId:
          format: int64
          type: string
          description: A creativeAssets[].id. This should refer to one of the parent assets in this creative, and will be served if none of the rules match. This is a required field.
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
          description: Rules determine which asset will be served to a viewer. Rules will be evaluated in the order in which they are stored in this list. This list must contain at least one rule. Applicable to INSTREAM_VIDEO creatives.
      id: CreativeAssetSelection
    AccountUserProfile:
      id: AccountUserProfile
      description: AccountUserProfiles contains properties of a Campaign Manager user profile. This resource is specifically for managing user profiles, whereas UserProfiles is for accessing the API.
      type: object
      properties:
        email:
          type: string
          description: Email of the user profile. The email addresss must be linked to a Google Account. This field is required on insertion and is read-only after insertion.
        subaccountId:
          type: string
          description: Subaccount ID of the user profile. This is a read-only field that can be left blank.
          format: int64
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountUserProfile".'
          type: string
        advertiserFilter:
          $ref: '#/components/schemas/ObjectFilter'
          description: Filter that describes which advertisers are visible to the user profile.
        name:
          description: 'Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally unique, and cannot contain whitespace or any of the following characters: "&;<>"#%,".'
          type: string
        comments:
          type: string
          description: Comments for this user profile.
        id:
          type: string
          description: ID of the user profile. This is a read-only, auto-generated field.
          format: int64
        accountId:
          format: int64
          description: Account ID of the user profile. This is a read-only field that can be left blank.
          type: string
        siteFilter:
          description: Filter that describes which sites are visible to the user profile.
          $ref: '#/components/schemas/ObjectFilter'
        active:
          type: boolean
          description: Whether this user profile is active. This defaults to false, and must be set true on insert for the user profile to be usable.
        traffickerType:
          description: Trafficker type of this user profile. This is a read-only field.
          enum:
            - INTERNAL_NON_TRAFFICKER
            - INTERNAL_TRAFFICKER
            - EXTERNAL_TRAFFICKER
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        userAccessType:
          enum:
            - NORMAL_USER
            - SUPER_USER
            - INTERNAL_ADMINISTRATOR
            - READ_ONLY_SUPER_USER
          type: string
          description: User type of the user profile. This is a read-only field that can be left blank.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        userRoleFilter:
          description: Filter that describes which user roles are visible to the user profile.
          $ref: '#/components/schemas/ObjectFilter'
        campaignFilter:
          description: Filter that describes which campaigns are visible to the user profile.
          $ref: '#/components/schemas/ObjectFilter'
        userRoleId:
          format: int64
          type: string
          description: User role ID of the user profile. This is a required field.
        locale:
          type: string
          description: 'Locale of the user profile. This is a required field. Acceptable values are: - "cs" (Czech) - "de" (German) - "en" (English) - "en-GB" (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it" (Italian) - "ja" (Japanese) - "ko" (Korean) - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) - "sv" (Swedish) - "tr" (Turkish) - "zh-CN" (Chinese Simplified) - "zh-TW" (Chinese Traditional) '
    CampaignCreativeAssociation:
      description: Identifies a creative which has been associated with a given campaign.
      id: CampaignCreativeAssociation
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "dfareporting#campaignCreativeAssociation".'
          type: string
        creativeId:
          type: string
          format: int64
          description: ID of the creative associated with the campaign. This is a required field.
      type: object
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/ddmconversions: Manage DoubleClick Digital Marketing conversions
            https://www.googleapis.com/auth/dfatrafficking: View and manage your DoubleClick Campaign Manager's (DCM) display ad campaigns
            https://www.googleapis.com/auth/dfareporting: View and manage DoubleClick for Advertisers reports
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    video_formats:
      id: googleads.dfareporting.video_formats
      name: video_formats
      title: Video_formats
      methods:
        videoFormats_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1videoFormats/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        videoFormats_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1videoFormats~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/video_formats/methods/videoFormats_get'
          - $ref: '#/components/x-stackQL-resources/video_formats/methods/videoFormats_list'
        insert: []
        update: []
        delete: []
    account_permission_groups:
      id: googleads.dfareporting.account_permission_groups
      name: account_permission_groups
      title: Account_permission_groups
      methods:
        accountPermissionGroups_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountPermissionGroups~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accountPermissionGroups_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountPermissionGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_permission_groups/methods/accountPermissionGroups_get'
          - $ref: '#/components/x-stackQL-resources/account_permission_groups/methods/accountPermissionGroups_list'
        insert: []
        update: []
        delete: []
    placement_strategies:
      id: googleads.dfareporting.placement_strategies
      name: placement_strategies
      title: Placement_strategies
      methods:
        placementStrategies_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementStrategies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementStrategies_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementStrategies/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementStrategies_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementStrategies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementStrategies_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementStrategies/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementStrategies_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementStrategies~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementStrategies_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementStrategies~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/placement_strategies/methods/placementStrategies_get'
          - $ref: '#/components/x-stackQL-resources/placement_strategies/methods/placementStrategies_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/placement_strategies/methods/placementStrategies_delete'
    languages:
      id: googleads.dfareporting.languages
      name: languages
      title: Languages
      methods:
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1languages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/languages/methods/list'
        insert: []
        update: []
        delete: []
    content_categories:
      id: googleads.dfareporting.content_categories
      name: content_categories
      title: Content_categories
      methods:
        contentCategories_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1contentCategories/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        contentCategories_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1contentCategories/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        contentCategories_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1contentCategories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        contentCategories_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1contentCategories/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        contentCategories_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1contentCategories~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        contentCategories_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1contentCategories~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/content_categories/methods/contentCategories_get'
          - $ref: '#/components/x-stackQL-resources/content_categories/methods/contentCategories_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/content_categories/methods/contentCategories_delete'
    advertiser_invoices:
      id: googleads.dfareporting.advertiser_invoices
      name: advertiser_invoices
      title: Advertiser_invoices
      methods:
        advertiserInvoices_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertisers~1{advertiserId}~1invoices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/advertiser_invoices/methods/advertiserInvoices_list'
        insert: []
        update: []
        delete: []
    account_active_ad_summaries:
      id: googleads.dfareporting.account_active_ad_summaries
      name: account_active_ad_summaries
      title: Account_active_ad_summaries
      methods:
        accountActiveAdSummaries_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountActiveAdSummaries~1{summaryAccountId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_active_ad_summaries/methods/accountActiveAdSummaries_get'
        insert: []
        update: []
        delete: []
    remarketing_list_shares:
      id: googleads.dfareporting.remarketing_list_shares
      name: remarketing_list_shares
      title: Remarketing_list_shares
      methods:
        remarketingListShares_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingListShares/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remarketingListShares_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingListShares/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remarketingListShares_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingListShares~1{remarketingListId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/remarketing_list_shares/methods/remarketingListShares_get'
        insert: []
        update: []
        delete: []
    placement_groups:
      id: googleads.dfareporting.placement_groups
      name: placement_groups
      title: Placement_groups
      methods:
        placementGroups_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementGroups/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementGroups_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementGroups_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementGroups/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementGroups_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        placementGroups_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placementGroups~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/placement_groups/methods/placementGroups_get'
          - $ref: '#/components/x-stackQL-resources/placement_groups/methods/placementGroups_list'
        insert: []
        update: []
        delete: []
    compatible_fields:
      id: googleads.dfareporting.compatible_fields
      name: compatible_fields
      title: Compatible_fields
      methods:
        reports_compatibleFields_query:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1compatiblefields~1query/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    files:
      id: googleads.dfareporting.files
      name: files
      title: Files
      methods:
        reports_files_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1{reportId}~1files/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reports_files_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1{reportId}~1files~1{fileId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1reports~1{reportId}~1files~1{fileId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1files/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/files/methods/reports_files_get'
          - $ref: '#/components/x-stackQL-resources/files/methods/reports_files_list'
          - $ref: '#/components/x-stackQL-resources/files/methods/get'
          - $ref: '#/components/x-stackQL-resources/files/methods/list'
        insert: []
        update: []
        delete: []
    reports:
      id: googleads.dfareporting.reports
      name: reports
      title: Reports
      methods:
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1{reportId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1{reportId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1{reportId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1{reportId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports~1{reportId}~1run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reports/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reports/methods/delete'
    sizes:
      id: googleads.dfareporting.sizes
      name: sizes
      title: Sizes
      methods:
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sizes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sizes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sizes~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sizes/methods/get'
          - $ref: '#/components/x-stackQL-resources/sizes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sizes/methods/insert'
        update: []
        delete: []
    targeting_templates:
      id: googleads.dfareporting.targeting_templates
      name: targeting_templates
      title: Targeting_templates
      methods:
        targetingTemplates_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1targetingTemplates/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        targetingTemplates_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1targetingTemplates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        targetingTemplates_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1targetingTemplates/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        targetingTemplates_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1targetingTemplates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        targetingTemplates_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1targetingTemplates~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targeting_templates/methods/targetingTemplates_get'
          - $ref: '#/components/x-stackQL-resources/targeting_templates/methods/targetingTemplates_list'
        insert: []
        update: []
        delete: []
    browsers:
      id: googleads.dfareporting.browsers
      name: browsers
      title: Browsers
      methods:
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1browsers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/browsers/methods/list'
        insert: []
        update: []
        delete: []
    operating_system_versions:
      id: googleads.dfareporting.operating_system_versions
      name: operating_system_versions
      title: Operating_system_versions
      methods:
        operatingSystemVersions_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1operatingSystemVersions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operatingSystemVersions_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1operatingSystemVersions~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operating_system_versions/methods/operatingSystemVersions_get'
          - $ref: '#/components/x-stackQL-resources/operating_system_versions/methods/operatingSystemVersions_list'
        insert: []
        update: []
        delete: []
    operating_systems:
      id: googleads.dfareporting.operating_systems
      name: operating_systems
      title: Operating_systems
      methods:
        operatingSystems_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1operatingSystems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        operatingSystems_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1operatingSystems~1{dartId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operating_systems/methods/operatingSystems_get'
          - $ref: '#/components/x-stackQL-resources/operating_systems/methods/operatingSystems_list'
        insert: []
        update: []
        delete: []
    change_logs:
      id: googleads.dfareporting.change_logs
      name: change_logs
      title: Change_logs
      methods:
        changeLogs_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1changeLogs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        changeLogs_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1changeLogs~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/change_logs/methods/changeLogs_get'
          - $ref: '#/components/x-stackQL-resources/change_logs/methods/changeLogs_list'
        insert: []
        update: []
        delete: []
    campaign_creative_associations:
      id: googleads.dfareporting.campaign_creative_associations
      name: campaign_creative_associations
      title: Campaign_creative_associations
      methods:
        campaignCreativeAssociations_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1campaigns~1{campaignId}~1campaignCreativeAssociations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        campaignCreativeAssociations_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1campaigns~1{campaignId}~1campaignCreativeAssociations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/campaign_creative_associations/methods/campaignCreativeAssociations_list'
        insert: []
        update: []
        delete: []
    advertiser_landing_pages:
      id: googleads.dfareporting.advertiser_landing_pages
      name: advertiser_landing_pages
      title: Advertiser_landing_pages
      methods:
        advertiserLandingPages_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserLandingPages/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserLandingPages_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserLandingPages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserLandingPages_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserLandingPages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserLandingPages_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserLandingPages/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserLandingPages_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserLandingPages~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/advertiser_landing_pages/methods/advertiserLandingPages_get'
          - $ref: '#/components/x-stackQL-resources/advertiser_landing_pages/methods/advertiserLandingPages_list'
        insert: []
        update: []
        delete: []
    platform_types:
      id: googleads.dfareporting.platform_types
      name: platform_types
      title: Platform_types
      methods:
        platformTypes_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1platformTypes~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        platformTypes_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1platformTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/platform_types/methods/platformTypes_get'
          - $ref: '#/components/x-stackQL-resources/platform_types/methods/platformTypes_list'
        insert: []
        update: []
        delete: []
    sites:
      id: googleads.dfareporting.sites
      name: sites
      title: Sites
      methods:
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sites~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sites/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sites/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sites/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1sites/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sites/methods/get'
          - $ref: '#/components/x-stackQL-resources/sites/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sites/methods/insert'
        update: []
        delete: []
    order_documents:
      id: googleads.dfareporting.order_documents
      name: order_documents
      title: Order_documents
      methods:
        orderDocuments_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects~1{projectId}~1orderDocuments~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        orderDocuments_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects~1{projectId}~1orderDocuments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/order_documents/methods/orderDocuments_get'
          - $ref: '#/components/x-stackQL-resources/order_documents/methods/orderDocuments_list'
        insert: []
        update: []
        delete: []
    floodlight_activity_groups:
      id: googleads.dfareporting.floodlight_activity_groups
      name: floodlight_activity_groups
      title: Floodlight_activity_groups
      methods:
        floodlightActivityGroups_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivityGroups~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivityGroups_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivityGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivityGroups_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivityGroups/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivityGroups_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivityGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivityGroups_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivityGroups/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/floodlight_activity_groups/methods/floodlightActivityGroups_get'
          - $ref: '#/components/x-stackQL-resources/floodlight_activity_groups/methods/floodlightActivityGroups_list'
        insert: []
        update: []
        delete: []
    dynamic_targeting_keys:
      id: googleads.dfareporting.dynamic_targeting_keys
      name: dynamic_targeting_keys
      title: Dynamic_targeting_keys
      methods:
        dynamicTargetingKeys_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1dynamicTargetingKeys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dynamicTargetingKeys_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1dynamicTargetingKeys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        dynamicTargetingKeys_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1dynamicTargetingKeys~1{objectId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dynamic_targeting_keys/methods/dynamicTargetingKeys_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dynamic_targeting_keys/methods/dynamicTargetingKeys_delete'
    accounts:
      id: googleads.dfareporting.accounts
      name: accounts
      title: Accounts
      methods:
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accounts/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accounts/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accounts~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
        insert: []
        update: []
        delete: []
    connection_types:
      id: googleads.dfareporting.connection_types
      name: connection_types
      title: Connection_types
      methods:
        connectionTypes_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1connectionTypes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        connectionTypes_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1connectionTypes~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connection_types/methods/connectionTypes_get'
          - $ref: '#/components/x-stackQL-resources/connection_types/methods/connectionTypes_list'
        insert: []
        update: []
        delete: []
    creative_assets:
      id: googleads.dfareporting.creative_assets
      name: creative_assets
      title: Creative_assets
      methods:
        creativeAssets_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeAssets~1{advertiserId}~1creativeAssets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    account_user_profiles:
      id: googleads.dfareporting.account_user_profiles
      name: account_user_profiles
      title: Account_user_profiles
      methods:
        accountUserProfiles_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountUserProfiles~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accountUserProfiles_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountUserProfiles/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accountUserProfiles_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountUserProfiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accountUserProfiles_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountUserProfiles/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accountUserProfiles_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountUserProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_user_profiles/methods/accountUserProfiles_get'
          - $ref: '#/components/x-stackQL-resources/account_user_profiles/methods/accountUserProfiles_list'
        insert: []
        update: []
        delete: []
    user_roles:
      id: googleads.dfareporting.user_roles
      name: user_roles
      title: User_roles
      methods:
        userRoles_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRoles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userRoles_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRoles/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userRoles_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRoles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userRoles_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRoles/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userRoles_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRoles~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userRoles_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRoles~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_roles/methods/userRoles_get'
          - $ref: '#/components/x-stackQL-resources/user_roles/methods/userRoles_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_roles/methods/userRoles_delete'
    billing_rates:
      id: googleads.dfareporting.billing_rates
      name: billing_rates
      title: Billing_rates
      methods:
        billingRates_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1billingProfiles~1{billingProfileId}~1billingRates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_rates/methods/billingRates_list'
        insert: []
        update: []
        delete: []
    projects:
      id: googleads.dfareporting.projects
      name: projects
      title: Projects
      methods:
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list'
        insert: []
        update: []
        delete: []
    directory_sites:
      id: googleads.dfareporting.directory_sites
      name: directory_sites
      title: Directory_sites
      methods:
        directorySites_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1directorySites/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        directorySites_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1directorySites/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        directorySites_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1directorySites~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/directory_sites/methods/directorySites_get'
          - $ref: '#/components/x-stackQL-resources/directory_sites/methods/directorySites_list'
        insert: []
        update: []
        delete: []
    billing_assignments:
      id: googleads.dfareporting.billing_assignments
      name: billing_assignments
      title: Billing_assignments
      methods:
        billingAssignments_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1billingProfiles~1{billingProfileId}~1billingAssignments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billingAssignments_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1billingProfiles~1{billingProfileId}~1billingAssignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_assignments/methods/billingAssignments_list'
        insert: []
        update: []
        delete: []
    floodlight_activities:
      id: googleads.dfareporting.floodlight_activities
      name: floodlight_activities
      title: Floodlight_activities
      methods:
        floodlightActivities_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivities_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivities/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivities_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivities/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivities_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivities/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivities_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivities~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivities_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivities~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightActivities_generatetag:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightActivities~1generatetag/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/floodlight_activities/methods/floodlightActivities_get'
          - $ref: '#/components/x-stackQL-resources/floodlight_activities/methods/floodlightActivities_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/floodlight_activities/methods/floodlightActivities_delete'
    ads:
      id: googleads.dfareporting.ads
      name: ads
      title: Ads
      methods:
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1ads/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1ads/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1ads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1ads/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1ads~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ads/methods/get'
          - $ref: '#/components/x-stackQL-resources/ads/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ads/methods/insert'
        update: []
        delete: []
    remarketing_lists:
      id: googleads.dfareporting.remarketing_lists
      name: remarketing_lists
      title: Remarketing_lists
      methods:
        remarketingLists_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingLists/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remarketingLists_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingLists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remarketingLists_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingLists/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remarketingLists_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingLists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remarketingLists_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1remarketingLists~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/remarketing_lists/methods/remarketingLists_get'
          - $ref: '#/components/x-stackQL-resources/remarketing_lists/methods/remarketingLists_list'
        insert: []
        update: []
        delete: []
    metros:
      id: googleads.dfareporting.metros
      name: metros
      title: Metros
      methods:
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1metros/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metros/methods/list'
        insert: []
        update: []
        delete: []
    user_role_permission_groups:
      id: googleads.dfareporting.user_role_permission_groups
      name: user_role_permission_groups
      title: User_role_permission_groups
      methods:
        userRolePermissionGroups_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRolePermissionGroups~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userRolePermissionGroups_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRolePermissionGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_role_permission_groups/methods/userRolePermissionGroups_get'
          - $ref: '#/components/x-stackQL-resources/user_role_permission_groups/methods/userRolePermissionGroups_list'
        insert: []
        update: []
        delete: []
    mobile_carriers:
      id: googleads.dfareporting.mobile_carriers
      name: mobile_carriers
      title: Mobile_carriers
      methods:
        mobileCarriers_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1mobileCarriers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mobileCarriers_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1mobileCarriers~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mobile_carriers/methods/mobileCarriers_get'
          - $ref: '#/components/x-stackQL-resources/mobile_carriers/methods/mobileCarriers_list'
        insert: []
        update: []
        delete: []
    user_profiles:
      id: googleads.dfareporting.user_profiles
      name: user_profiles
      title: User_profiles
      methods:
        userProfiles_list:
          operation:
            $ref: '#/paths/~1userprofiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userProfiles_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_profiles/methods/userProfiles_get'
          - $ref: '#/components/x-stackQL-resources/user_profiles/methods/userProfiles_list'
        insert: []
        update: []
        delete: []
    conversions:
      id: googleads.dfareporting.conversions
      name: conversions
      title: Conversions
      methods:
        batchupdate:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1conversions~1batchupdate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batchinsert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1conversions~1batchinsert/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    postal_codes:
      id: googleads.dfareporting.postal_codes
      name: postal_codes
      title: Postal_codes
      methods:
        postalCodes_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1postalCodes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        postalCodes_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1postalCodes~1{code}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/postal_codes/methods/postalCodes_get'
          - $ref: '#/components/x-stackQL-resources/postal_codes/methods/postalCodes_list'
        insert: []
        update: []
        delete: []
    mobile_apps:
      id: googleads.dfareporting.mobile_apps
      name: mobile_apps
      title: Mobile_apps
      methods:
        mobileApps_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1mobileApps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mobileApps_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1mobileApps~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mobile_apps/methods/mobileApps_get'
          - $ref: '#/components/x-stackQL-resources/mobile_apps/methods/mobileApps_list'
        insert: []
        update: []
        delete: []
    creative_fields:
      id: googleads.dfareporting.creative_fields
      name: creative_fields
      title: Creative_fields
      methods:
        creativeFields_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFields_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFields_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFields_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFields_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFields_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/creative_fields/methods/creativeFields_get'
          - $ref: '#/components/x-stackQL-resources/creative_fields/methods/creativeFields_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/creative_fields/methods/creativeFields_delete'
    advertisers:
      id: googleads.dfareporting.advertisers
      name: advertisers
      title: Advertisers
      methods:
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertisers~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertisers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertisers/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertisers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertisers/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/advertisers/methods/get'
          - $ref: '#/components/x-stackQL-resources/advertisers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/advertisers/methods/insert'
        update: []
        delete: []
    placements:
      id: googleads.dfareporting.placements
      name: placements
      title: Placements
      methods:
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placements/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placements/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placements/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placements/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placements~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generatetags:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1placements~1generatetags/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/placements/methods/get'
          - $ref: '#/components/x-stackQL-resources/placements/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/placements/methods/insert'
        update: []
        delete: []
    account_permissions:
      id: googleads.dfareporting.account_permissions
      name: account_permissions
      title: Account_permissions
      methods:
        accountPermissions_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountPermissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accountPermissions_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1accountPermissions~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/account_permissions/methods/accountPermissions_get'
          - $ref: '#/components/x-stackQL-resources/account_permissions/methods/accountPermissions_list'
        insert: []
        update: []
        delete: []
    event_tags:
      id: googleads.dfareporting.event_tags
      name: event_tags
      title: Event_tags
      methods:
        eventTags_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1eventTags~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        eventTags_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1eventTags~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        eventTags_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1eventTags/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        eventTags_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1eventTags/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        eventTags_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1eventTags/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        eventTags_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1eventTags/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_tags/methods/eventTags_get'
          - $ref: '#/components/x-stackQL-resources/event_tags/methods/eventTags_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/event_tags/methods/eventTags_delete'
    orders:
      id: googleads.dfareporting.orders
      name: orders
      title: Orders
      methods:
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects~1{projectId}~1orders~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects~1{projectId}~1orders/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/orders/methods/get'
          - $ref: '#/components/x-stackQL-resources/orders/methods/list'
        insert: []
        update: []
        delete: []
    inventory_items:
      id: googleads.dfareporting.inventory_items
      name: inventory_items
      title: Inventory_items
      methods:
        inventoryItems_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects~1{projectId}~1inventoryItems~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        inventoryItems_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1projects~1{projectId}~1inventoryItems/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/inventoryItems_get'
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/inventoryItems_list'
        insert: []
        update: []
        delete: []
    subaccounts:
      id: googleads.dfareporting.subaccounts
      name: subaccounts
      title: Subaccounts
      methods:
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1subaccounts~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1subaccounts/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1subaccounts/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1subaccounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1subaccounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subaccounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/subaccounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/subaccounts/methods/insert'
        update: []
        delete: []
    advertiser_groups:
      id: googleads.dfareporting.advertiser_groups
      name: advertiser_groups
      title: Advertiser_groups
      methods:
        advertiserGroups_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserGroups/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserGroups_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserGroups/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserGroups_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserGroups_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserGroups_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserGroups~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        advertiserGroups_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1advertiserGroups~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/advertiser_groups/methods/advertiserGroups_get'
          - $ref: '#/components/x-stackQL-resources/advertiser_groups/methods/advertiserGroups_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/advertiser_groups/methods/advertiserGroups_delete'
    dimension_values:
      id: googleads.dfareporting.dimension_values
      name: dimension_values
      title: Dimension_values
      methods:
        dimensionValues_query:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1dimensionvalues~1query/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    regions:
      id: googleads.dfareporting.regions
      name: regions
      title: Regions
      methods:
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1regions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/regions/methods/list'
        insert: []
        update: []
        delete: []
    countries:
      id: googleads.dfareporting.countries
      name: countries
      title: Countries
      methods:
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1countries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1countries~1{dartId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/countries/methods/get'
          - $ref: '#/components/x-stackQL-resources/countries/methods/list'
        insert: []
        update: []
        delete: []
    cities:
      id: googleads.dfareporting.cities
      name: cities
      title: Cities
      methods:
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1cities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cities/methods/list'
        insert: []
        update: []
        delete: []
    targetable_remarketing_lists:
      id: googleads.dfareporting.targetable_remarketing_lists
      name: targetable_remarketing_lists
      title: Targetable_remarketing_lists
      methods:
        targetableRemarketingLists_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1targetableRemarketingLists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        targetableRemarketingLists_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1targetableRemarketingLists~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targetable_remarketing_lists/methods/targetableRemarketingLists_get'
          - $ref: '#/components/x-stackQL-resources/targetable_remarketing_lists/methods/targetableRemarketingLists_list'
        insert: []
        update: []
        delete: []
    user_role_permissions:
      id: googleads.dfareporting.user_role_permissions
      name: user_role_permissions
      title: User_role_permissions
      methods:
        userRolePermissions_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRolePermissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        userRolePermissions_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1userRolePermissions~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_role_permissions/methods/userRolePermissions_get'
          - $ref: '#/components/x-stackQL-resources/user_role_permissions/methods/userRolePermissions_list'
        insert: []
        update: []
        delete: []
    creative_groups:
      id: googleads.dfareporting.creative_groups
      name: creative_groups
      title: Creative_groups
      methods:
        creativeGroups_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeGroups/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeGroups_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeGroups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeGroups_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeGroups_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeGroups/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeGroups_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeGroups~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/creative_groups/methods/creativeGroups_get'
          - $ref: '#/components/x-stackQL-resources/creative_groups/methods/creativeGroups_list'
        insert: []
        update: []
        delete: []
    creatives:
      id: googleads.dfareporting.creatives
      name: creatives
      title: Creatives
      methods:
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creatives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creatives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creatives/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creatives/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creatives~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/creatives/methods/get'
          - $ref: '#/components/x-stackQL-resources/creatives/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/creatives/methods/insert'
        update: []
        delete: []
    creative_field_values:
      id: googleads.dfareporting.creative_field_values
      name: creative_field_values
      title: Creative_field_values
      methods:
        creativeFieldValues_insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{creativeFieldId}~1creativeFieldValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFieldValues_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{creativeFieldId}~1creativeFieldValues/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFieldValues_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{creativeFieldId}~1creativeFieldValues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFieldValues_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{creativeFieldId}~1creativeFieldValues/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFieldValues_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{creativeFieldId}~1creativeFieldValues~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        creativeFieldValues_delete:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1creativeFields~1{creativeFieldId}~1creativeFieldValues~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/creative_field_values/methods/creativeFieldValues_get'
          - $ref: '#/components/x-stackQL-resources/creative_field_values/methods/creativeFieldValues_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/creative_field_values/methods/creativeFieldValues_delete'
    billing_profiles:
      id: googleads.dfareporting.billing_profiles
      name: billing_profiles
      title: Billing_profiles
      methods:
        billingProfiles_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1billingProfiles~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billingProfiles_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1billingProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        billingProfiles_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1billingProfiles/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_profiles/methods/billingProfiles_get'
          - $ref: '#/components/x-stackQL-resources/billing_profiles/methods/billingProfiles_list'
        insert: []
        update: []
        delete: []
    floodlight_configurations:
      id: googleads.dfareporting.floodlight_configurations
      name: floodlight_configurations
      title: Floodlight_configurations
      methods:
        floodlightConfigurations_list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightConfigurations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightConfigurations_update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightConfigurations/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightConfigurations_patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightConfigurations/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        floodlightConfigurations_get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1floodlightConfigurations~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/floodlight_configurations/methods/floodlightConfigurations_get'
          - $ref: '#/components/x-stackQL-resources/floodlight_configurations/methods/floodlightConfigurations_list'
        insert: []
        update: []
        delete: []
    campaigns:
      id: googleads.dfareporting.campaigns
      name: campaigns
      title: Campaigns
      methods:
        get:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1campaigns~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1campaigns/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1campaigns/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1campaigns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1userprofiles~1{profileId}~1campaigns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/get'
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/insert'
        update: []
        delete: []
paths:
  /userprofiles/{profileId}/videoFormats:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Lists available video formats.
      operationId: dfareporting.videoFormats.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoFormatsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: video_formats
      x-stackQL-verb: select
  /userprofiles/{profileId}/videoFormats/{id}:
    parameters: *ref_1
    get:
      description: Gets one video format by ID.
      operationId: dfareporting.videoFormats.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoFormat'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: video_formats
      x-stackQL-verb: select
  /userprofiles/{profileId}/accountPermissionGroups/{id}:
    parameters: *ref_1
    get:
      description: Gets one account permission group by ID.
      operationId: dfareporting.accountPermissionGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPermissionGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: account_permission_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/accountPermissionGroups:
    parameters: *ref_1
    get:
      description: Retrieves the list of account permission groups.
      operationId: dfareporting.accountPermissionGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPermissionGroupsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_permission_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/placementStrategies:
    parameters: *ref_1
    post:
      description: Inserts a new placement strategy.
      operationId: dfareporting.placementStrategies.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementStrategy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStrategy'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_strategies
      x-stackQL-verb: insert
    patch:
      description: Updates an existing placement strategy. This method supports patch semantics.
      operationId: dfareporting.placementStrategies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementStrategy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStrategy'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_strategies
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of placement strategies, possibly filtered. This method supports paging.
      operationId: dfareporting.placementStrategies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStrategiesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
      x-stackQL-resource: placement_strategies
      x-stackQL-verb: select
    put:
      description: Updates an existing placement strategy.
      operationId: dfareporting.placementStrategies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementStrategy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStrategy'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_strategies
      x-stackQL-verb: exec
  /userprofiles/{profileId}/placementStrategies/{id}:
    parameters: *ref_1
    get:
      description: Gets one placement strategy by ID.
      operationId: dfareporting.placementStrategies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementStrategy'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_strategies
      x-stackQL-verb: select
    delete:
      description: Deletes an existing placement strategy.
      operationId: dfareporting.placementStrategies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_strategies
      x-stackQL-verb: delete
  /userprofiles/{profileId}/languages:
    parameters: *ref_1
    get:
      description: Retrieves a list of languages.
      operationId: dfareporting.languages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguagesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: languages
      x-stackQL-verb: select
  /userprofiles/{profileId}/contentCategories:
    parameters: *ref_1
    patch:
      description: Updates an existing content category. This method supports patch semantics.
      operationId: dfareporting.contentCategories.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCategory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCategory'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: content_categories
      x-stackQL-verb: exec
    put:
      description: Updates an existing content category.
      operationId: dfareporting.contentCategories.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCategory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCategory'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_categories
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of content categories, possibly filtered. This method supports paging.
      operationId: dfareporting.contentCategories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCategoriesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: ids
          schema:
            type: string
      x-stackQL-resource: content_categories
      x-stackQL-verb: select
    post:
      description: Inserts a new content category.
      operationId: dfareporting.contentCategories.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCategory'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCategory'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: content_categories
      x-stackQL-verb: insert
  /userprofiles/{profileId}/contentCategories/{id}:
    parameters: *ref_1
    get:
      description: Gets one content category by ID.
      operationId: dfareporting.contentCategories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCategory'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: content_categories
      x-stackQL-verb: select
    delete:
      description: Deletes an existing content category.
      operationId: dfareporting.contentCategories.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: content_categories
      x-stackQL-verb: delete
  /userprofiles/{profileId}/advertisers/{advertiserId}/invoices:
    parameters: *ref_1
    get:
      description: Retrieves a list of invoices for a particular issue month. The api only works if the billing profile invoice level is set to either advertiser or campaign non-consolidated invoice level.
      operationId: dfareporting.advertiserInvoices.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserInvoicesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - in: query
          name: issueMonth
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: advertiser_invoices
      x-stackQL-verb: select
  /userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}:
    parameters: *ref_1
    get:
      description: Gets the account's active ad summary by account ID.
      operationId: dfareporting.accountActiveAdSummaries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActiveAdSummary'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: summaryAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_active_ad_summaries
      x-stackQL-verb: select
  /userprofiles/{profileId}/remarketingListShares:
    parameters: *ref_1
    put:
      description: Updates an existing remarketing list share.
      operationId: dfareporting.remarketingListShares.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingListShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingListShare'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_list_shares
      x-stackQL-verb: exec
    patch:
      description: Updates an existing remarketing list share. This method supports patch semantics.
      operationId: dfareporting.remarketingListShares.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingListShare'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingListShare'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_list_shares
      x-stackQL-verb: exec
  /userprofiles/{profileId}/remarketingListShares/{remarketingListId}:
    parameters: *ref_1
    get:
      description: Gets one remarketing list share by remarketing list ID.
      operationId: dfareporting.remarketingListShares.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingListShare'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: remarketingListId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_list_shares
      x-stackQL-verb: select
  /userprofiles/{profileId}/placementGroups:
    parameters: *ref_1
    patch:
      description: Updates an existing placement group. This method supports patch semantics.
      operationId: dfareporting.placementGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_groups
      x-stackQL-verb: exec
    post:
      description: Inserts a new placement group.
      operationId: dfareporting.placementGroups.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_groups
      x-stackQL-verb: insert
    put:
      description: Updates an existing placement group.
      operationId: dfareporting.placementGroups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlacementGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_groups
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of placement groups, possibly filtered. This method supports paging.
      operationId: dfareporting.placementGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementGroupsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pricingTypes
          schema:
            type: string
        - in: query
          name: maxStartDate
          schema:
            type: string
        - in: query
          name: directorySiteIds
          schema:
            type: string
        - in: query
          name: campaignIds
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: activeStatus
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: contentCategoryIds
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: advertiserIds
          schema:
            type: string
        - in: query
          name: minStartDate
          schema:
            type: string
        - in: query
          name: maxEndDate
          schema:
            type: string
        - in: query
          name: siteIds
          schema:
            type: string
        - in: query
          name: placementStrategyIds
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: placementGroupType
          schema:
            type: string
        - in: query
          name: minEndDate
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
      x-stackQL-resource: placement_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/placementGroups/{id}:
    parameters: *ref_1
    get:
      description: Gets one placement group by ID.
      operationId: dfareporting.placementGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: placement_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/reports/compatiblefields/query:
    parameters: *ref_1
    post:
      description: Returns the fields that are compatible to be selected in the respective sections of a report criteria, given the fields already selected in the input report and user permissions.
      operationId: dfareporting.reports.compatibleFields.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompatibleFields'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: compatible_fields
      x-stackQL-verb: exec
  /userprofiles/{profileId}/reports/{reportId}/files:
    parameters: *ref_1
    get:
      description: Lists files for a report.
      operationId: dfareporting.reports.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortOrder
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /userprofiles/{profileId}/reports/{reportId}/files/{fileId}:
    parameters: *ref_1
    get:
      description: Retrieves a report file by its report ID and file ID. This method supports media download.
      operationId: dfareporting.reports.files.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /userprofiles/{profileId}/reports/{reportId}:
    parameters: *ref_1
    patch:
      description: Updates an existing report. This method supports patch semantics.
      operationId: dfareporting.reports.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: exec
    delete:
      description: Deletes a report by its ID.
      operationId: dfareporting.reports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: delete
    put:
      description: Updates a report.
      operationId: dfareporting.reports.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: exec
    get:
      description: Retrieves a report by its ID.
      operationId: dfareporting.reports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /userprofiles/{profileId}/reports/{reportId}/run:
    parameters: *ref_1
    post:
      description: Runs a report.
      operationId: dfareporting.reports.run
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
        - in: query
          name: synchronous
          schema:
            type: boolean
      x-stackQL-resource: reports
      x-stackQL-verb: exec
  /userprofiles/{profileId}/reports:
    parameters: *ref_1
    post:
      description: Creates a report.
      operationId: dfareporting.reports.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: insert
    get:
      description: Retrieves list of reports.
      operationId: dfareporting.reports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: scope
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /userprofiles/{profileId}/sizes:
    parameters: *ref_1
    post:
      description: Inserts a new size.
      operationId: dfareporting.sizes.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Size'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Size'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: sizes
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of sizes, possibly filtered. Retrieved sizes are globally unique and may include values not currently in use by your account. Due to this, the list of sizes returned by this method may differ from the list seen in the Trafficking UI.
      operationId: dfareporting.sizes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SizesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: width
          schema:
            type: integer
        - in: query
          name: height
          schema:
            type: integer
        - in: query
          name: iabStandard
          schema:
            type: boolean
      x-stackQL-resource: sizes
      x-stackQL-verb: select
  /userprofiles/{profileId}/sizes/{id}:
    parameters: *ref_1
    get:
      description: Gets one size by ID.
      operationId: dfareporting.sizes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Size'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: sizes
      x-stackQL-verb: select
  /userprofiles/{profileId}/targetingTemplates:
    parameters: *ref_1
    patch:
      description: Updates an existing targeting template. This method supports patch semantics.
      operationId: dfareporting.targetingTemplates.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetingTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetingTemplate'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: targeting_templates
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of targeting templates, optionally filtered. This method supports paging.
      operationId: dfareporting.targetingTemplates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetingTemplatesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: advertiserId
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
      x-stackQL-resource: targeting_templates
      x-stackQL-verb: select
    put:
      description: Updates an existing targeting template.
      operationId: dfareporting.targetingTemplates.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetingTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetingTemplate'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: targeting_templates
      x-stackQL-verb: exec
    post:
      description: Inserts a new targeting template.
      operationId: dfareporting.targetingTemplates.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetingTemplate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetingTemplate'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: targeting_templates
      x-stackQL-verb: insert
  /userprofiles/{profileId}/targetingTemplates/{id}:
    parameters: *ref_1
    get:
      description: Gets one targeting template by ID.
      operationId: dfareporting.targetingTemplates.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetingTemplate'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: targeting_templates
      x-stackQL-verb: select
  /userprofiles/{profileId}/browsers:
    parameters: *ref_1
    get:
      description: Retrieves a list of browsers.
      operationId: dfareporting.browsers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowsersListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: browsers
      x-stackQL-verb: select
  /userprofiles/{profileId}/operatingSystemVersions:
    parameters: *ref_1
    get:
      description: Retrieves a list of operating system versions.
      operationId: dfareporting.operatingSystemVersions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemVersionsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: operating_system_versions
      x-stackQL-verb: select
  /userprofiles/{profileId}/operatingSystemVersions/{id}:
    parameters: *ref_1
    get:
      description: Gets one operating system version by ID.
      operationId: dfareporting.operatingSystemVersions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemVersion'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: operating_system_versions
      x-stackQL-verb: select
  /userprofiles/{profileId}/operatingSystems:
    parameters: *ref_1
    get:
      description: Retrieves a list of operating systems.
      operationId: dfareporting.operatingSystems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystemsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: operating_systems
      x-stackQL-verb: select
  /userprofiles/{profileId}/operatingSystems/{dartId}:
    parameters: *ref_1
    get:
      description: Gets one operating system by DART ID.
      operationId: dfareporting.operatingSystems.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatingSystem'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: dartId
          required: true
          schema:
            type: string
      x-stackQL-resource: operating_systems
      x-stackQL-verb: select
  /userprofiles/{profileId}/changeLogs:
    parameters: *ref_1
    get:
      description: Retrieves a list of change logs. This method supports paging.
      operationId: dfareporting.changeLogs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLogsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: objectIds
          schema:
            type: string
        - in: query
          name: action
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: maxChangeTime
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: objectType
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: minChangeTime
          schema:
            type: string
        - in: query
          name: userProfileIds
          schema:
            type: string
      x-stackQL-resource: change_logs
      x-stackQL-verb: select
  /userprofiles/{profileId}/changeLogs/{id}:
    parameters: *ref_1
    get:
      description: Gets one change log by ID.
      operationId: dfareporting.changeLogs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: change_logs
      x-stackQL-verb: select
  /userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations:
    parameters: *ref_1
    get:
      description: Retrieves the list of creative IDs associated with the specified campaign. This method supports paging.
      operationId: dfareporting.campaignCreativeAssociations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignCreativeAssociationsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: campaignId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
      x-stackQL-resource: campaign_creative_associations
      x-stackQL-verb: select
    post:
      description: Associates a creative with the specified campaign. This method creates a default ad with dimensions matching the creative in the campaign if such a default ad does not exist already.
      operationId: dfareporting.campaignCreativeAssociations.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCreativeAssociation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignCreativeAssociation'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: campaignId
          required: true
          schema:
            type: string
      x-stackQL-resource: campaign_creative_associations
      x-stackQL-verb: insert
  /userprofiles/{profileId}/advertiserLandingPages:
    parameters: *ref_1
    put:
      description: Updates an existing landing page.
      operationId: dfareporting.advertiserLandingPages.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LandingPage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_landing_pages
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of landing pages.
      operationId: dfareporting.advertiserLandingPages.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserLandingPagesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: advertiserIds
          schema:
            type: string
        - in: query
          name: subaccountId
          schema:
            type: string
        - in: query
          name: campaignIds
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: archived
          schema:
            type: boolean
      x-stackQL-resource: advertiser_landing_pages
      x-stackQL-verb: select
    post:
      description: Inserts a new landing page.
      operationId: dfareporting.advertiserLandingPages.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LandingPage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_landing_pages
      x-stackQL-verb: insert
    patch:
      description: Updates an existing advertiser landing page. This method supports patch semantics.
      operationId: dfareporting.advertiserLandingPages.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LandingPage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_landing_pages
      x-stackQL-verb: exec
  /userprofiles/{profileId}/advertiserLandingPages/{id}:
    parameters: *ref_1
    get:
      description: Gets one landing page by ID.
      operationId: dfareporting.advertiserLandingPages.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_landing_pages
      x-stackQL-verb: select
  /userprofiles/{profileId}/platformTypes/{id}:
    parameters: *ref_1
    get:
      description: Gets one platform type by ID.
      operationId: dfareporting.platformTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformType'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: platform_types
      x-stackQL-verb: select
  /userprofiles/{profileId}/platformTypes:
    parameters: *ref_1
    get:
      description: Retrieves a list of platform types.
      operationId: dfareporting.platformTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformTypesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: platform_types
      x-stackQL-verb: select
  /userprofiles/{profileId}/sites/{id}:
    parameters: *ref_1
    get:
      description: Gets one site by ID.
      operationId: dfareporting.sites.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: select
  /userprofiles/{profileId}/sites:
    parameters: *ref_1
    post:
      description: Inserts a new site.
      operationId: dfareporting.sites.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: insert
    put:
      description: Updates an existing site.
      operationId: dfareporting.sites.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: exec
    patch:
      description: Updates an existing site. This method supports patch semantics.
      operationId: dfareporting.sites.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of sites, possibly filtered. This method supports paging.
      operationId: dfareporting.sites.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: campaignIds
          schema:
            type: string
        - in: query
          name: directorySiteIds
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: adWordsSite
          schema:
            type: boolean
        - in: query
          name: unmappedSite
          schema:
            type: boolean
        - in: query
          name: approved
          schema:
            type: boolean
        - in: query
          name: acceptsInterstitialPlacements
          schema:
            type: boolean
        - in: query
          name: subaccountId
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: acceptsPublisherPaidPlacements
          schema:
            type: boolean
        - in: query
          name: acceptsInStreamVideoPlacements
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: ids
          schema:
            type: string
      x-stackQL-resource: sites
      x-stackQL-verb: select
  /userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}:
    parameters: *ref_1
    get:
      description: Gets one order document by ID.
      operationId: dfareporting.orderDocuments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDocument'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: order_documents
      x-stackQL-verb: select
  /userprofiles/{profileId}/projects/{projectId}/orderDocuments:
    parameters: *ref_1
    get:
      description: Retrieves a list of order documents, possibly filtered. This method supports paging.
      operationId: dfareporting.orderDocuments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDocumentsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: siteId
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: approved
          schema:
            type: boolean
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: orderId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: order_documents
      x-stackQL-verb: select
  /userprofiles/{profileId}/floodlightActivityGroups/{id}:
    parameters: *ref_1
    get:
      description: Gets one floodlight activity group by ID.
      operationId: dfareporting.floodlightActivityGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivityGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activity_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/floodlightActivityGroups:
    parameters: *ref_1
    get:
      description: Retrieves a list of floodlight activity groups, possibly filtered. This method supports paging.
      operationId: dfareporting.floodlightActivityGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivityGroupsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: advertiserId
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: floodlightConfigurationId
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
      x-stackQL-resource: floodlight_activity_groups
      x-stackQL-verb: select
    patch:
      description: Updates an existing floodlight activity group. This method supports patch semantics.
      operationId: dfareporting.floodlightActivityGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightActivityGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivityGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activity_groups
      x-stackQL-verb: exec
    post:
      description: Inserts a new floodlight activity group.
      operationId: dfareporting.floodlightActivityGroups.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightActivityGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivityGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activity_groups
      x-stackQL-verb: insert
    put:
      description: Updates an existing floodlight activity group.
      operationId: dfareporting.floodlightActivityGroups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightActivityGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivityGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activity_groups
      x-stackQL-verb: exec
  /userprofiles/{profileId}/dynamicTargetingKeys:
    parameters: *ref_1
    get:
      description: Retrieves a list of dynamic targeting keys.
      operationId: dfareporting.dynamicTargetingKeys.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicTargetingKeysListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
        - in: query
          name: objectType
          schema:
            type: string
        - in: query
          name: objectId
          schema:
            type: string
        - in: query
          name: advertiserId
          schema:
            type: string
      x-stackQL-resource: dynamic_targeting_keys
      x-stackQL-verb: select
    post:
      description: Inserts a new dynamic targeting key. Keys must be created at the advertiser level before being assigned to the advertiser's ads, creatives, or placements. There is a maximum of 1000 keys per advertiser, out of which a maximum of 20 keys can be assigned per ad, creative, or placement.
      operationId: dfareporting.dynamicTargetingKeys.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicTargetingKey'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicTargetingKey'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: dynamic_targeting_keys
      x-stackQL-verb: insert
  /userprofiles/{profileId}/dynamicTargetingKeys/{objectId}:
    parameters: *ref_1
    delete:
      description: Deletes an existing dynamic targeting key.
      operationId: dfareporting.dynamicTargetingKeys.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: objectId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: true
          schema:
            type: string
        - in: query
          name: objectType
          required: true
          schema:
            type: string
      x-stackQL-resource: dynamic_targeting_keys
      x-stackQL-verb: delete
  /userprofiles/{profileId}/accounts:
    parameters: *ref_1
    patch:
      description: Updates an existing account. This method supports patch semantics.
      operationId: dfareporting.accounts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
    get:
      description: Retrieves the list of accounts, possibly filtered. This method supports paging.
      operationId: dfareporting.accounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: accounts
      x-stackQL-verb: select
    put:
      description: Updates an existing account.
      operationId: dfareporting.accounts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /userprofiles/{profileId}/accounts/{id}:
    parameters: *ref_1
    get:
      description: Gets one account by ID.
      operationId: dfareporting.accounts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /userprofiles/{profileId}/connectionTypes:
    parameters: *ref_1
    get:
      description: Retrieves a list of connection types.
      operationId: dfareporting.connectionTypes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTypesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_types
      x-stackQL-verb: select
  /userprofiles/{profileId}/connectionTypes/{id}:
    parameters: *ref_1
    get:
      description: Gets one connection type by ID.
      operationId: dfareporting.connectionTypes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionType'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: connection_types
      x-stackQL-verb: select
  /userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets:
    parameters: *ref_1
    post:
      description: Inserts a new creative asset.
      operationId: dfareporting.creativeAssets.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeAssetMetadata'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeAssetMetadata'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: advertiserId
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_assets
      x-stackQL-verb: insert
  /userprofiles/{profileId}/accountUserProfiles/{id}:
    parameters: *ref_1
    get:
      description: Gets one account user profile by ID.
      operationId: dfareporting.accountUserProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserProfile'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: account_user_profiles
      x-stackQL-verb: select
  /userprofiles/{profileId}/accountUserProfiles:
    parameters: *ref_1
    put:
      description: Updates an existing account user profile.
      operationId: dfareporting.accountUserProfiles.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserProfile'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_user_profiles
      x-stackQL-verb: exec
    post:
      description: Inserts a new account user profile.
      operationId: dfareporting.accountUserProfiles.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserProfile'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_user_profiles
      x-stackQL-verb: insert
    patch:
      description: Updates an existing account user profile. This method supports patch semantics.
      operationId: dfareporting.accountUserProfiles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUserProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserProfile'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: account_user_profiles
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of account user profiles, possibly filtered. This method supports paging.
      operationId: dfareporting.accountUserProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUserProfilesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: subaccountId
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: userRoleId
          schema:
            type: string
        - in: query
          name: active
          schema:
            type: boolean
      x-stackQL-resource: account_user_profiles
      x-stackQL-verb: select
  /userprofiles/{profileId}/userRoles:
    parameters: *ref_1
    get:
      description: Retrieves a list of user roles, possibly filtered. This method supports paging.
      operationId: dfareporting.userRoles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRolesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: subaccountId
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: accountUserRoleOnly
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortField
          schema:
            type: string
      x-stackQL-resource: user_roles
      x-stackQL-verb: select
    patch:
      description: Updates an existing user role. This method supports patch semantics.
      operationId: dfareporting.userRoles.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRole'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: user_roles
      x-stackQL-verb: exec
    post:
      description: Inserts a new user role.
      operationId: dfareporting.userRoles.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRole'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_roles
      x-stackQL-verb: insert
    put:
      description: Updates an existing user role.
      operationId: dfareporting.userRoles.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRole'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_roles
      x-stackQL-verb: exec
  /userprofiles/{profileId}/userRoles/{id}:
    parameters: *ref_1
    get:
      description: Gets one user role by ID.
      operationId: dfareporting.userRoles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRole'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: user_roles
      x-stackQL-verb: select
    delete:
      description: Deletes an existing user role.
      operationId: dfareporting.userRoles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: user_roles
      x-stackQL-verb: delete
  /userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingRates:
    parameters: *ref_1
    get:
      description: Retrieves a list of billing rates. This method supports paging.
      operationId: dfareporting.billingRates.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingRatesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: billingProfileId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_rates
      x-stackQL-verb: select
  /userprofiles/{profileId}/projects/{id}:
    parameters: *ref_1
    get:
      description: Gets one project by ID.
      operationId: dfareporting.projects.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: select
  /userprofiles/{profileId}/projects:
    parameters: *ref_1
    get:
      description: Retrieves a list of projects, possibly filtered. This method supports paging .
      operationId: dfareporting.projects.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: advertiserIds
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: select
  /userprofiles/{profileId}/directorySites:
    parameters: *ref_1
    post:
      description: Inserts a new directory site.
      operationId: dfareporting.directorySites.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectorySite'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorySite'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: directory_sites
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of directory sites, possibly filtered. This method supports paging.
      operationId: dfareporting.directorySites.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorySitesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: acceptsInStreamVideoPlacements
          schema:
            type: boolean
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: acceptsPublisherPaidPlacements
          schema:
            type: boolean
        - in: query
          name: dfpNetworkCode
          schema:
            type: string
        - in: query
          name: acceptsInterstitialPlacements
          schema:
            type: boolean
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: directory_sites
      x-stackQL-verb: select
  /userprofiles/{profileId}/directorySites/{id}:
    parameters: *ref_1
    get:
      description: Gets one directory site by ID.
      operationId: dfareporting.directorySites.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectorySite'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: directory_sites
      x-stackQL-verb: select
  /userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingAssignments:
    parameters: *ref_1
    post:
      description: Inserts a new billing assignment and returns the new assignment. Only one of advertiser_id or campaign_id is support per request. If the new assignment has no effect (assigning a campaign to the parent advertiser billing profile or assigning an advertiser to the account billing profile), no assignment will be returned.
      operationId: dfareporting.billingAssignments.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAssignment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAssignment'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: billingProfileId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_assignments
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of billing assignments.
      operationId: dfareporting.billingAssignments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAssignmentsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: billingProfileId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_assignments
      x-stackQL-verb: select
  /userprofiles/{profileId}/floodlightActivities:
    parameters: *ref_1
    get:
      description: Retrieves a list of floodlight activities, possibly filtered. This method supports paging.
      operationId: dfareporting.floodlightActivities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivitiesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: floodlightActivityGroupIds
          schema:
            type: string
        - in: query
          name: advertiserId
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: floodlightActivityGroupType
          schema:
            type: string
        - in: query
          name: tagString
          schema:
            type: string
        - in: query
          name: floodlightActivityGroupTagString
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: floodlightConfigurationId
          schema:
            type: string
        - in: query
          name: floodlightActivityGroupName
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: floodlight_activities
      x-stackQL-verb: select
    patch:
      description: Updates an existing floodlight activity. This method supports patch semantics.
      operationId: dfareporting.floodlightActivities.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightActivity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivity'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activities
      x-stackQL-verb: exec
    post:
      description: Inserts a new floodlight activity.
      operationId: dfareporting.floodlightActivities.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightActivity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivity'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activities
      x-stackQL-verb: insert
    put:
      description: Updates an existing floodlight activity.
      operationId: dfareporting.floodlightActivities.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightActivity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivity'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activities
      x-stackQL-verb: exec
  /userprofiles/{profileId}/floodlightActivities/{id}:
    parameters: *ref_1
    get:
      description: Gets one floodlight activity by ID.
      operationId: dfareporting.floodlightActivities.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivity'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activities
      x-stackQL-verb: select
    delete:
      description: Deletes an existing floodlight activity.
      operationId: dfareporting.floodlightActivities.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_activities
      x-stackQL-verb: delete
  /userprofiles/{profileId}/floodlightActivities/generatetag:
    parameters: *ref_1
    post:
      description: Generates a tag for a floodlight activity.
      operationId: dfareporting.floodlightActivities.generatetag
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightActivitiesGenerateTagResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: floodlightActivityId
          schema:
            type: string
      x-stackQL-resource: floodlight_activities
      x-stackQL-verb: exec
  /reports/{reportId}/files/{fileId}:
    parameters: *ref_1
    get:
      description: Retrieves a report file by its report ID and file ID. This method supports media download.
      operationId: dfareporting.files.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /userprofiles/{profileId}/files:
    parameters: *ref_1
    get:
      description: Lists files for a user profile.
      operationId: dfareporting.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: scope
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /userprofiles/{profileId}/ads:
    parameters: *ref_1
    put:
      description: Updates an existing ad.
      operationId: dfareporting.ads.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: ads
      x-stackQL-verb: exec
    patch:
      description: Updates an existing ad. This method supports patch semantics.
      operationId: dfareporting.ads.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: ads
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of ads, possibly filtered. This method supports paging.
      operationId: dfareporting.ads.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: audienceSegmentIds
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: archived
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: overriddenEventTagId
          schema:
            type: string
        - in: query
          name: campaignIds
          schema:
            type: string
        - in: query
          name: sslRequired
          schema:
            type: boolean
        - in: query
          name: compatibility
          schema:
            type: string
        - in: query
          name: landingPageIds
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: placementIds
          schema:
            type: string
        - in: query
          name: sizeIds
          schema:
            type: string
        - in: query
          name: sslCompliant
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: creativeOptimizationConfigurationIds
          schema:
            type: string
        - in: query
          name: advertiserId
          schema:
            type: string
        - in: query
          name: dynamicClickTracker
          schema:
            type: boolean
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: creativeIds
          schema:
            type: string
        - in: query
          name: remarketingListIds
          schema:
            type: string
      x-stackQL-resource: ads
      x-stackQL-verb: select
    post:
      description: Inserts a new ad.
      operationId: dfareporting.ads.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: ads
      x-stackQL-verb: insert
  /userprofiles/{profileId}/ads/{id}:
    parameters: *ref_1
    get:
      description: Gets one ad by ID.
      operationId: dfareporting.ads.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: ads
      x-stackQL-verb: select
  /userprofiles/{profileId}/remarketingLists:
    parameters: *ref_1
    patch:
      description: Updates an existing remarketing list. This method supports patch semantics.
      operationId: dfareporting.remarketingLists.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_lists
      x-stackQL-verb: exec
    post:
      description: Inserts a new remarketing list.
      operationId: dfareporting.remarketingLists.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_lists
      x-stackQL-verb: insert
    put:
      description: Updates an existing remarketing list.
      operationId: dfareporting.remarketingLists.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemarketingList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_lists
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of remarketing lists, possibly filtered. This method supports paging.
      operationId: dfareporting.remarketingLists.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingListsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: advertiserId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: floodlightActivityId
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
      x-stackQL-resource: remarketing_lists
      x-stackQL-verb: select
  /userprofiles/{profileId}/remarketingLists/{id}:
    parameters: *ref_1
    get:
      description: Gets one remarketing list by ID.
      operationId: dfareporting.remarketingLists.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemarketingList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: remarketing_lists
      x-stackQL-verb: select
  /userprofiles/{profileId}/metros:
    parameters: *ref_1
    get:
      description: Retrieves a list of metros.
      operationId: dfareporting.metros.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetrosListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: metros
      x-stackQL-verb: select
  /userprofiles/{profileId}/userRolePermissionGroups/{id}:
    parameters: *ref_1
    get:
      description: Gets one user role permission group by ID.
      operationId: dfareporting.userRolePermissionGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRolePermissionGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: user_role_permission_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/userRolePermissionGroups:
    parameters: *ref_1
    get:
      description: Gets a list of all supported user role permission groups.
      operationId: dfareporting.userRolePermissionGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRolePermissionGroupsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_role_permission_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/mobileCarriers:
    parameters: *ref_1
    get:
      description: Retrieves a list of mobile carriers.
      operationId: dfareporting.mobileCarriers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileCarriersListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: mobile_carriers
      x-stackQL-verb: select
  /userprofiles/{profileId}/mobileCarriers/{id}:
    parameters: *ref_1
    get:
      description: Gets one mobile carrier by ID.
      operationId: dfareporting.mobileCarriers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileCarrier'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: mobile_carriers
      x-stackQL-verb: select
  /userprofiles:
    parameters: *ref_1
    get:
      description: Retrieves list of user profiles for a user.
      operationId: dfareporting.userProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ddmconversions
          Oauth2c:
            - https://www.googleapis.com/auth/ddmconversions
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileList'
      parameters: []
      x-stackQL-resource: user_profiles
      x-stackQL-verb: select
  /userprofiles/{profileId}:
    parameters: *ref_1
    get:
      description: Gets one user profile by ID.
      operationId: dfareporting.userProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ddmconversions
          Oauth2c:
            - https://www.googleapis.com/auth/ddmconversions
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: user_profiles
      x-stackQL-verb: select
  /userprofiles/{profileId}/conversions/batchupdate:
    parameters: *ref_1
    post:
      description: Updates existing conversions.
      operationId: dfareporting.conversions.batchupdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionsBatchUpdateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ddmconversions
          Oauth2c:
            - https://www.googleapis.com/auth/ddmconversions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionsBatchUpdateResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversions
      x-stackQL-verb: exec
  /userprofiles/{profileId}/conversions/batchinsert:
    parameters: *ref_1
    post:
      description: Inserts conversions.
      operationId: dfareporting.conversions.batchinsert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionsBatchInsertRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ddmconversions
          Oauth2c:
            - https://www.googleapis.com/auth/ddmconversions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionsBatchInsertResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: conversions
      x-stackQL-verb: exec
  /userprofiles/{profileId}/postalCodes:
    parameters: *ref_1
    get:
      description: Retrieves a list of postal codes.
      operationId: dfareporting.postalCodes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalCodesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: postal_codes
      x-stackQL-verb: select
  /userprofiles/{profileId}/postalCodes/{code}:
    parameters: *ref_1
    get:
      description: Gets one postal code by ID.
      operationId: dfareporting.postalCodes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostalCode'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: code
          required: true
          schema:
            type: string
      x-stackQL-resource: postal_codes
      x-stackQL-verb: select
  /userprofiles/{profileId}/mobileApps:
    parameters: *ref_1
    get:
      description: Retrieves list of available mobile apps.
      operationId: dfareporting.mobileApps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileAppsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: directories
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: searchString
          schema:
            type: string
      x-stackQL-resource: mobile_apps
      x-stackQL-verb: select
  /userprofiles/{profileId}/mobileApps/{id}:
    parameters: *ref_1
    get:
      description: Gets one mobile app by ID.
      operationId: dfareporting.mobileApps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileApp'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: mobile_apps
      x-stackQL-verb: select
  /userprofiles/{profileId}/creativeFields:
    parameters: *ref_1
    post:
      description: Inserts a new creative field.
      operationId: dfareporting.creativeFields.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeField'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeField'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_fields
      x-stackQL-verb: insert
    patch:
      description: Updates an existing creative field. This method supports patch semantics.
      operationId: dfareporting.creativeFields.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeField'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeField'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_fields
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of creative fields, possibly filtered. This method supports paging.
      operationId: dfareporting.creativeFields.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeFieldsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: advertiserIds
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortField
          schema:
            type: string
      x-stackQL-resource: creative_fields
      x-stackQL-verb: select
    put:
      description: Updates an existing creative field.
      operationId: dfareporting.creativeFields.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeField'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeField'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_fields
      x-stackQL-verb: exec
  /userprofiles/{profileId}/creativeFields/{id}:
    parameters: *ref_1
    get:
      description: Gets one creative field by ID.
      operationId: dfareporting.creativeFields.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeField'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_fields
      x-stackQL-verb: select
    delete:
      description: Deletes an existing creative field.
      operationId: dfareporting.creativeFields.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_fields
      x-stackQL-verb: delete
  /userprofiles/{profileId}/advertisers/{id}:
    parameters: *ref_1
    get:
      description: Gets one advertiser by ID.
      operationId: dfareporting.advertisers.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertiser'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: advertisers
      x-stackQL-verb: select
  /userprofiles/{profileId}/advertisers:
    parameters: *ref_1
    get:
      description: Retrieves a list of advertisers, possibly filtered. This method supports paging.
      operationId: dfareporting.advertisers.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertisersListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: subaccountId
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: advertiserGroupIds
          schema:
            type: string
        - in: query
          name: onlyParent
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: floodlightConfigurationIds
          schema:
            type: string
        - in: query
          name: includeAdvertisersWithoutGroupsOnly
          schema:
            type: boolean
      x-stackQL-resource: advertisers
      x-stackQL-verb: select
    patch:
      description: Updates an existing advertiser. This method supports patch semantics.
      operationId: dfareporting.advertisers.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertiser'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertiser'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: advertisers
      x-stackQL-verb: exec
    post:
      description: Inserts a new advertiser.
      operationId: dfareporting.advertisers.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertiser'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertiser'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: advertisers
      x-stackQL-verb: insert
    put:
      description: Updates an existing advertiser.
      operationId: dfareporting.advertisers.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertiser'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertiser'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: advertisers
      x-stackQL-verb: exec
  /userprofiles/{profileId}/placements:
    parameters: *ref_1
    patch:
      description: Updates an existing placement. This method supports patch semantics.
      operationId: dfareporting.placements.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Placement'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Placement'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: placements
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of placements, possibly filtered. This method supports paging.
      operationId: dfareporting.placements.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: directorySiteIds
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: minEndDate
          schema:
            type: string
        - in: query
          name: campaignIds
          schema:
            type: string
        - in: query
          name: maxEndDate
          schema:
            type: string
        - in: query
          name: paymentSource
          schema:
            type: string
        - in: query
          name: groupIds
          schema:
            type: string
        - in: query
          name: activeStatus
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: siteIds
          schema:
            type: string
        - in: query
          name: sizeIds
          schema:
            type: string
        - in: query
          name: minStartDate
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: placementStrategyIds
          schema:
            type: string
        - in: query
          name: contentCategoryIds
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: maxStartDate
          schema:
            type: string
        - in: query
          name: advertiserIds
          schema:
            type: string
        - in: query
          name: compatibilities
          schema:
            type: string
        - in: query
          name: pricingTypes
          schema:
            type: string
      x-stackQL-resource: placements
      x-stackQL-verb: select
    post:
      description: Inserts a new placement.
      operationId: dfareporting.placements.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Placement'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Placement'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: placements
      x-stackQL-verb: insert
    put:
      description: Updates an existing placement.
      operationId: dfareporting.placements.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Placement'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Placement'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: placements
      x-stackQL-verb: exec
  /userprofiles/{profileId}/placements/{id}:
    parameters: *ref_1
    get:
      description: Gets one placement by ID.
      operationId: dfareporting.placements.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Placement'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: placements
      x-stackQL-verb: select
  /userprofiles/{profileId}/placements/generatetags:
    parameters: *ref_1
    post:
      description: Generates tags for a placement.
      operationId: dfareporting.placements.generatetags
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementsGenerateTagsResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: tagFormats
          schema:
            type: string
        - in: query
          name: campaignId
          schema:
            type: string
        - in: query
          name: placementIds
          schema:
            type: string
      x-stackQL-resource: placements
      x-stackQL-verb: exec
  /userprofiles/{profileId}/accountPermissions:
    parameters: *ref_1
    get:
      description: Retrieves the list of account permissions.
      operationId: dfareporting.accountPermissions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPermissionsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: account_permissions
      x-stackQL-verb: select
  /userprofiles/{profileId}/accountPermissions/{id}:
    parameters: *ref_1
    get:
      description: Gets one account permission by ID.
      operationId: dfareporting.accountPermissions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPermission'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: account_permissions
      x-stackQL-verb: select
  /userprofiles/{profileId}/eventTags/{id}:
    parameters: *ref_1
    get:
      description: Gets one event tag by ID.
      operationId: dfareporting.eventTags.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTag'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: event_tags
      x-stackQL-verb: select
    delete:
      description: Deletes an existing event tag.
      operationId: dfareporting.eventTags.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: event_tags
      x-stackQL-verb: delete
  /userprofiles/{profileId}/eventTags:
    parameters: *ref_1
    post:
      description: Inserts a new event tag.
      operationId: dfareporting.eventTags.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTag'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: event_tags
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of event tags, possibly filtered.
      operationId: dfareporting.eventTags.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTagsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: eventTagTypes
          schema:
            type: string
        - in: query
          name: enabled
          schema:
            type: boolean
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: definitionsOnly
          schema:
            type: boolean
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: advertiserId
          schema:
            type: string
        - in: query
          name: campaignId
          schema:
            type: string
        - in: query
          name: adId
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
      x-stackQL-resource: event_tags
      x-stackQL-verb: select
    patch:
      description: Updates an existing event tag. This method supports patch semantics.
      operationId: dfareporting.eventTags.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTag'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: event_tags
      x-stackQL-verb: exec
    put:
      description: Updates an existing event tag.
      operationId: dfareporting.eventTags.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTag'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTag'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: event_tags
      x-stackQL-verb: exec
  /userprofiles/{profileId}/projects/{projectId}/orders/{id}:
    parameters: *ref_1
    get:
      description: Gets one order by ID.
      operationId: dfareporting.orders.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: select
  /userprofiles/{profileId}/projects/{projectId}/orders:
    parameters: *ref_1
    get:
      description: Retrieves a list of orders, possibly filtered. This method supports paging.
      operationId: dfareporting.orders.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: siteId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: ids
          schema:
            type: string
      x-stackQL-resource: orders
      x-stackQL-verb: select
  /userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}:
    parameters: *ref_1
    get:
      description: Gets one inventory item by ID.
      operationId: dfareporting.inventoryItems.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: inventory_items
      x-stackQL-verb: select
  /userprofiles/{profileId}/projects/{projectId}/inventoryItems:
    parameters: *ref_1
    get:
      description: Retrieves a list of inventory items, possibly filtered. This method supports paging.
      operationId: dfareporting.inventoryItems.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: inPlan
          schema:
            type: boolean
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: orderId
          schema:
            type: string
        - in: query
          name: siteId
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
      x-stackQL-resource: inventory_items
      x-stackQL-verb: select
  /userprofiles/{profileId}/subaccounts/{id}:
    parameters: *ref_1
    get:
      description: Gets one subaccount by ID.
      operationId: dfareporting.subaccounts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subaccount'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: subaccounts
      x-stackQL-verb: select
  /userprofiles/{profileId}/subaccounts:
    parameters: *ref_1
    put:
      description: Updates an existing subaccount.
      operationId: dfareporting.subaccounts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subaccount'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subaccount'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: subaccounts
      x-stackQL-verb: exec
    patch:
      description: Updates an existing subaccount. This method supports patch semantics.
      operationId: dfareporting.subaccounts.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subaccount'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subaccount'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: subaccounts
      x-stackQL-verb: exec
    get:
      description: Gets a list of subaccounts, possibly filtered. This method supports paging.
      operationId: dfareporting.subaccounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubaccountsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
      x-stackQL-resource: subaccounts
      x-stackQL-verb: select
    post:
      description: Inserts a new subaccount.
      operationId: dfareporting.subaccounts.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subaccount'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subaccount'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: subaccounts
      x-stackQL-verb: insert
  /userprofiles/{profileId}/advertiserGroups:
    parameters: *ref_1
    patch:
      description: Updates an existing advertiser group. This method supports patch semantics.
      operationId: dfareporting.advertiserGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertiserGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_groups
      x-stackQL-verb: exec
    put:
      description: Updates an existing advertiser group.
      operationId: dfareporting.advertiserGroups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertiserGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_groups
      x-stackQL-verb: exec
    post:
      description: Inserts a new advertiser group.
      operationId: dfareporting.advertiserGroups.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertiserGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_groups
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of advertiser groups, possibly filtered. This method supports paging.
      operationId: dfareporting.advertiserGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserGroupsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: searchString
          schema:
            type: string
      x-stackQL-resource: advertiser_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/advertiserGroups/{id}:
    parameters: *ref_1
    delete:
      description: Deletes an existing advertiser group.
      operationId: dfareporting.advertiserGroups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_groups
      x-stackQL-verb: delete
    get:
      description: Gets one advertiser group by ID.
      operationId: dfareporting.advertiserGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvertiserGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: advertiser_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/dimensionvalues/query:
    parameters: *ref_1
    post:
      description: Retrieves list of report dimension values for a list of filters.
      operationId: dfareporting.dimensionValues.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DimensionValueRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfareporting
          Oauth2c:
            - https://www.googleapis.com/auth/dfareporting
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DimensionValueList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: dimension_values
      x-stackQL-verb: exec
  /userprofiles/{profileId}/regions:
    parameters: *ref_1
    get:
      description: Retrieves a list of regions.
      operationId: dfareporting.regions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: regions
      x-stackQL-verb: select
  /userprofiles/{profileId}/countries:
    parameters: *ref_1
    get:
      description: Retrieves a list of countries.
      operationId: dfareporting.countries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: countries
      x-stackQL-verb: select
  /userprofiles/{profileId}/countries/{dartId}:
    parameters: *ref_1
    get:
      description: Gets one country by ID.
      operationId: dfareporting.countries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: dartId
          required: true
          schema:
            type: string
      x-stackQL-resource: countries
      x-stackQL-verb: select
  /userprofiles/{profileId}/cities:
    parameters: *ref_1
    get:
      description: Retrieves a list of cities, possibly filtered.
      operationId: dfareporting.cities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitiesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: countryDartIds
          schema:
            type: string
        - in: query
          name: regionDartIds
          schema:
            type: string
        - in: query
          name: dartIds
          schema:
            type: string
        - in: query
          name: namePrefix
          schema:
            type: string
      x-stackQL-resource: cities
      x-stackQL-verb: select
  /userprofiles/{profileId}/targetableRemarketingLists:
    parameters: *ref_1
    get:
      description: Retrieves a list of targetable remarketing lists, possibly filtered. This method supports paging.
      operationId: dfareporting.targetableRemarketingLists.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetableRemarketingListsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: advertiserId
          required: true
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
      x-stackQL-resource: targetable_remarketing_lists
      x-stackQL-verb: select
  /userprofiles/{profileId}/targetableRemarketingLists/{id}:
    parameters: *ref_1
    get:
      description: Gets one remarketing list by ID.
      operationId: dfareporting.targetableRemarketingLists.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetableRemarketingList'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: targetable_remarketing_lists
      x-stackQL-verb: select
  /userprofiles/{profileId}/userRolePermissions:
    parameters: *ref_1
    get:
      description: Gets a list of user role permissions, possibly filtered.
      operationId: dfareporting.userRolePermissions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRolePermissionsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
      x-stackQL-resource: user_role_permissions
      x-stackQL-verb: select
  /userprofiles/{profileId}/userRolePermissions/{id}:
    parameters: *ref_1
    get:
      description: Gets one user role permission by ID.
      operationId: dfareporting.userRolePermissions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRolePermission'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: user_role_permissions
      x-stackQL-verb: select
  /userprofiles/{profileId}/creativeGroups:
    parameters: *ref_1
    patch:
      description: Updates an existing creative group. This method supports patch semantics.
      operationId: dfareporting.creativeGroups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_groups
      x-stackQL-verb: exec
    post:
      description: Inserts a new creative group.
      operationId: dfareporting.creativeGroups.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_groups
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of creative groups, possibly filtered. This method supports paging.
      operationId: dfareporting.creativeGroups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeGroupsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: groupNumber
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: advertiserIds
          schema:
            type: string
      x-stackQL-resource: creative_groups
      x-stackQL-verb: select
    put:
      description: Updates an existing creative group.
      operationId: dfareporting.creativeGroups.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeGroup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_groups
      x-stackQL-verb: exec
  /userprofiles/{profileId}/creativeGroups/{id}:
    parameters: *ref_1
    get:
      description: Gets one creative group by ID.
      operationId: dfareporting.creativeGroups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeGroup'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_groups
      x-stackQL-verb: select
  /userprofiles/{profileId}/creatives:
    parameters: *ref_1
    post:
      description: Inserts a new creative.
      operationId: dfareporting.creatives.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of creatives, possibly filtered. This method supports paging.
      operationId: dfareporting.creatives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: campaignId
          schema:
            type: string
        - in: query
          name: renderingIds
          schema:
            type: string
        - in: query
          name: companionCreativeIds
          schema:
            type: string
        - in: query
          name: archived
          schema:
            type: boolean
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: creativeFieldIds
          schema:
            type: string
        - in: query
          name: active
          schema:
            type: boolean
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: studioCreativeId
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: advertiserId
          schema:
            type: string
        - in: query
          name: sizeIds
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: types
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: select
    put:
      description: Updates an existing creative.
      operationId: dfareporting.creatives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: exec
    patch:
      description: Updates an existing creative. This method supports patch semantics.
      operationId: dfareporting.creatives.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: exec
  /userprofiles/{profileId}/creatives/{id}:
    parameters: *ref_1
    get:
      description: Gets one creative by ID.
      operationId: dfareporting.creatives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: select
  /userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues:
    parameters: *ref_1
    post:
      description: Inserts a new creative field value.
      operationId: dfareporting.creativeFieldValues.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeFieldValue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeFieldValue'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: creativeFieldId
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_field_values
      x-stackQL-verb: insert
    put:
      description: Updates an existing creative field value.
      operationId: dfareporting.creativeFieldValues.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeFieldValue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeFieldValue'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: creativeFieldId
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_field_values
      x-stackQL-verb: exec
    get:
      description: Retrieves a list of creative field values, possibly filtered. This method supports paging.
      operationId: dfareporting.creativeFieldValues.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeFieldValuesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: creativeFieldId
          required: true
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: searchString
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
      x-stackQL-resource: creative_field_values
      x-stackQL-verb: select
    patch:
      description: Updates an existing creative field value. This method supports patch semantics.
      operationId: dfareporting.creativeFieldValues.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreativeFieldValue'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeFieldValue'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: creativeFieldId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_field_values
      x-stackQL-verb: exec
  /userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}:
    parameters: *ref_1
    get:
      description: Gets one creative field value by ID.
      operationId: dfareporting.creativeFieldValues.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreativeFieldValue'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: creativeFieldId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_field_values
      x-stackQL-verb: select
    delete:
      description: Deletes an existing creative field value.
      operationId: dfareporting.creativeFieldValues.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: creativeFieldId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: creative_field_values
      x-stackQL-verb: delete
  /userprofiles/{profileId}/billingProfiles/{id}:
    parameters: *ref_1
    get:
      description: Gets one billing profile by ID.
      operationId: dfareporting.billingProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingProfile'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_profiles
      x-stackQL-verb: select
  /userprofiles/{profileId}/billingProfiles:
    parameters: *ref_1
    get:
      description: Retrieves a list of billing profiles, possibly filtered. This method supports paging.
      operationId: dfareporting.billingProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingProfilesListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: currency_code
          schema:
            type: string
        - in: query
          name: onlySuggestion
          schema:
            type: boolean
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: subaccountIds
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
      x-stackQL-resource: billing_profiles
      x-stackQL-verb: select
    put:
      description: Updates an existing billing profile.
      operationId: dfareporting.billingProfiles.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingProfile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingProfile'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: billing_profiles
      x-stackQL-verb: exec
  /userprofiles/{profileId}/floodlightConfigurations:
    parameters: *ref_1
    get:
      description: Retrieves a list of floodlight configurations, possibly filtered.
      operationId: dfareporting.floodlightConfigurations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightConfigurationsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: ids
          schema:
            type: string
      x-stackQL-resource: floodlight_configurations
      x-stackQL-verb: select
    put:
      description: Updates an existing floodlight configuration.
      operationId: dfareporting.floodlightConfigurations.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightConfiguration'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightConfiguration'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_configurations
      x-stackQL-verb: exec
    patch:
      description: Updates an existing floodlight configuration. This method supports patch semantics.
      operationId: dfareporting.floodlightConfigurations.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloodlightConfiguration'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightConfiguration'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_configurations
      x-stackQL-verb: exec
  /userprofiles/{profileId}/floodlightConfigurations/{id}:
    parameters: *ref_1
    get:
      description: Gets one floodlight configuration by ID.
      operationId: dfareporting.floodlightConfigurations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloodlightConfiguration'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: floodlight_configurations
      x-stackQL-verb: select
  /userprofiles/{profileId}/campaigns/{id}:
    parameters: *ref_1
    get:
      description: Gets one campaign by ID.
      operationId: dfareporting.campaigns.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: campaigns
      x-stackQL-verb: select
  /userprofiles/{profileId}/campaigns:
    parameters: *ref_1
    put:
      description: Updates an existing campaign.
      operationId: dfareporting.campaigns.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: campaigns
      x-stackQL-verb: exec
    patch:
      description: Updates an existing campaign. This method supports patch semantics.
      operationId: dfareporting.campaigns.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: campaigns
      x-stackQL-verb: exec
    post:
      description: Inserts a new campaign.
      operationId: dfareporting.campaigns.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      x-stackQL-resource: campaigns
      x-stackQL-verb: insert
    get:
      description: Retrieves a list of campaigns, possibly filtered. This method supports paging.
      operationId: dfareporting.campaigns.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/dfatrafficking
          Oauth2c:
            - https://www.googleapis.com/auth/dfatrafficking
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignsListResponse'
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: advertiserGroupIds
          schema:
            type: string
        - in: query
          name: sortField
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: archived
          schema:
            type: boolean
        - in: query
          name: ids
          schema:
            type: string
        - in: query
          name: overriddenEventTagId
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: excludedIds
          schema:
            type: string
        - in: query
          name: atLeastOneOptimizationActivity
          schema:
            type: boolean
        - in: query
          name: advertiserIds
          schema:
            type: string
        - in: query
          name: subaccountId
          schema:
            type: string
        - in: query
          name: searchString
          schema:
            type: string
      x-stackQL-resource: campaigns
      x-stackQL-verb: select
