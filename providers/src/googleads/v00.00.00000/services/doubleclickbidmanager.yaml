openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: DoubleClick Bid Manager API
  description: DoubleClick Bid Manager API allows users to manage and create campaigns and reports.
  version: v2
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/bid-manager/
servers:
  - url: https://doubleclickbidmanager.googleapis.com/v2
components:
  schemas:
    PathQueryOptionsFilter:
      type: object
      description: Dimension filter on path events.
      id: PathQueryOptionsFilter
      properties:
        match:
          type: string
          enum:
            - UNKNOWN
            - EXACT
            - PARTIAL
            - BEGINS_WITH
            - WILDCARD_EXPRESSION
          description: Match logic of the filter.
          enumDescriptions:
            - Default value when match is not specified or is unknown in this version.
            - Matches a value exactly.
            - Matches a value partially.
            - Begins with a value.
            - Matches a value, utilizing wildcard character logic in the value.
        filter:
          type: string
          description: Dimension the filter is applied to.
        values:
          type: array
          description: Values to filter on.
          items:
            type: string
    ListReportsResponse:
      id: ListReportsResponse
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as page_token to retrieve the next page of reports. If this field is omitted, there are no subsequent pages.
        reports:
          items:
            $ref: '#/components/schemas/Report'
          type: array
          description: Retrieved reports.
      type: object
    Query:
      description: Represents a query.
      properties:
        metadata:
          description: Query metadata.
          $ref: '#/components/schemas/QueryMetadata'
        schedule:
          description: Information on how often and when to run a query. If `ONE_TIME` is set to the frequency field, the query will only be run at the time of creation.
          $ref: '#/components/schemas/QuerySchedule'
        queryId:
          type: string
          description: Output only. Query ID.
          format: int64
          readOnly: true
        params:
          $ref: '#/components/schemas/Parameters'
          description: Query parameters.
      id: Query
      type: object
    Parameters:
      properties:
        groupBys:
          description: Data is grouped by the filters listed in this field.
          type: array
          items:
            type: string
        metrics:
          description: Metrics to include as columns in your report.
          items:
            type: string
          type: array
        type:
          type: string
          enumDescriptions:
            - Default value when report type is not specified or is unknown in this version.
            - Standard report.
            - Inventory Availability report.
            - Audience Composition report.
            - Floodlight report.
            - YouTube report.
            - GRP report.
            - YouTube Programmatic Guaranteed report.
            - Reach report.
            - Unique Reach Audience report.
            - Full Path report.
            - Path Attribution report.
          enum:
            - REPORT_TYPE_UNSPECIFIED
            - STANDARD
            - INVENTORY_AVAILABILITY
            - AUDIENCE_COMPOSITION
            - FLOODLIGHT
            - YOUTUBE
            - GRP
            - YOUTUBE_PROGRAMMATIC_GUARANTEED
            - REACH
            - UNIQUE_REACH_AUDIENCE
            - FULL_PATH
            - PATH_ATTRIBUTION
          description: The type of the report. The type of the report will dictate what dimesions, filters, and metrics can be used.
        options:
          description: Additional query options.
          $ref: '#/components/schemas/Options'
        filters:
          description: Filters used to match traffic data in your report.
          items:
            $ref: '#/components/schemas/FilterPair'
          type: array
      description: Parameters of a query or report.
      type: object
      id: Parameters
    DisjunctiveMatchStatement:
      type: object
      properties:
        eventFilters:
          type: array
          description: Filters. There is a limit of 100 filters that can be set per disjunctive match statement.
          items:
            $ref: '#/components/schemas/EventFilter'
      description: DisjunctiveMatchStatement that OR's all contained filters.
      id: DisjunctiveMatchStatement
    ChannelGrouping:
      properties:
        rules:
          description: Rules within Channel Grouping. There is a limit of 100 rules that can be set per channel grouping.
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        name:
          description: Channel Grouping name.
          type: string
        fallbackName:
          description: The name to apply to an event that does not match any of the rules in the channel grouping.
          type: string
      type: object
      id: ChannelGrouping
      description: A channel grouping defines a set of rules that can be used to categorize events in a path report.
    PathQueryOptions:
      description: Path Query Options for Report Options.
      properties:
        pathFilters:
          type: array
          description: Path Filters. There is a limit of 100 path filters that can be set per report.
          items:
            $ref: '#/components/schemas/PathFilter'
        channelGrouping:
          description: Custom Channel Groupings.
          $ref: '#/components/schemas/ChannelGrouping'
      id: PathQueryOptions
      type: object
    QueryMetadata:
      id: QueryMetadata
      description: Query metadata.
      type: object
      properties:
        format:
          type: string
          enumDescriptions:
            - Default value when format is not specified or is unknown in this version.
            - CSV.
            - Excel.
          enum:
            - FORMAT_UNSPECIFIED
            - CSV
            - XLSX
          description: Format of the generated report.
        title:
          type: string
          description: Query title. It is used to name the reports generated from this query.
        shareEmailAddress:
          items:
            type: string
          type: array
          description: List of email addresses which are sent email notifications when the report is finished. Separate from send_notification.
        sendNotification:
          type: boolean
          description: Whether to send an email notification when a report is ready. Defaults to false.
        dataRange:
          description: Range of report data. All reports will be based on the same time zone as used by the advertiser.
          $ref: '#/components/schemas/DataRange'
    Options:
      id: Options
      properties:
        pathQueryOptions:
          description: Options that contain Path Filters and Custom Channel Groupings.
          $ref: '#/components/schemas/PathQueryOptions'
        includeOnlyTargetedUserLists:
          description: Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.
          type: boolean
      type: object
      description: Additional query options.
    Rule:
      properties:
        disjunctiveMatchStatements:
          items:
            $ref: '#/components/schemas/DisjunctiveMatchStatement'
          description: DisjunctiveMatchStatements within a Rule. DisjunctiveMatchStatement OR's all contained filters.
          type: array
        name:
          description: Rule name.
          type: string
      type: object
      description: A Rule defines a name, and a boolean expression in [conjunctive normal form] (http://mathworld.wolfram.com/ConjunctiveNormalForm.html){.external} that can be applied to a path event to determine if that name should be applied.
      id: Rule
    Date:
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          type: integer
          format: int32
        month:
          format: int32
          type: integer
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
        year:
          type: integer
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
      id: Date
    Report:
      description: Represents a report.
      id: Report
      properties:
        key:
          description: Key used to identify a report.
          $ref: '#/components/schemas/ReportKey'
        metadata:
          $ref: '#/components/schemas/ReportMetadata'
          description: Report metadata.
        params:
          description: Report parameters.
          $ref: '#/components/schemas/Parameters'
      type: object
    ListQueriesResponse:
      id: ListQueriesResponse
      type: object
      properties:
        nextPageToken:
          description: A token, which can be sent as page_token to retrieve the next page of queries. If this field is omitted, there are no subsequent pages.
          type: string
        queries:
          type: array
          description: The list of queries.
          items:
            $ref: '#/components/schemas/Query'
    FilterPair:
      properties:
        type:
          description: Filter type.
          type: string
        value:
          description: Filter value.
          type: string
      type: object
      description: Filter used to match traffic data in your report.
      id: FilterPair
    RunQueryRequest:
      id: RunQueryRequest
      type: object
      properties:
        dataRange:
          description: Report data range used to generate the report. If unspecified, the original parent query's data range is used.
          $ref: '#/components/schemas/DataRange'
      description: Request to run a stored query to generate a report.
    ReportKey:
      description: Key used to identify a report.
      type: object
      properties:
        queryId:
          format: int64
          description: Output only. Query ID.
          readOnly: true
          type: string
        reportId:
          type: string
          readOnly: true
          format: int64
          description: Output only. Report ID.
      id: ReportKey
    EventFilter:
      id: EventFilter
      description: Defines the type of filter to be applied to the path, a DV360 event dimension filter.
      type: object
      properties:
        dimensionFilter:
          $ref: '#/components/schemas/PathQueryOptionsFilter'
          description: Filter on a dimension.
    ReportMetadata:
      description: Report metadata.
      type: object
      id: ReportMetadata
      properties:
        status:
          $ref: '#/components/schemas/ReportStatus'
          description: Report status.
        googleCloudStoragePath:
          description: Output only. The path to the location in Google Cloud Storage where the report is stored.
          type: string
          readOnly: true
        reportDataStartDate:
          description: The starting time for the data that is shown in the report.
          $ref: '#/components/schemas/Date'
        reportDataEndDate:
          $ref: '#/components/schemas/Date'
          description: The ending time for the data that is shown in the report.
    ReportStatus:
      id: ReportStatus
      properties:
        state:
          description: Output only. The state of the report.
          enum:
            - STATE_UNSPECIFIED
            - QUEUED
            - RUNNING
            - DONE
            - FAILED
          type: string
          enumDescriptions:
            - Default value when state is not specified or is unknown in this version.
            - The report is queued to run.
            - The report is currently running.
            - The report has finished running successfully.
            - The report has finished running in failure.
          readOnly: true
        finishTime:
          format: google-datetime
          description: Output only. The time when this report either completed successfully or failed.
          type: string
          readOnly: true
        format:
          type: string
          description: The file type of the report.
          enumDescriptions:
            - Default value when format is not specified or is unknown in this version.
            - CSV.
            - Excel.
          enum:
            - FORMAT_UNSPECIFIED
            - CSV
            - XLSX
      description: Report status.
      type: object
    DataRange:
      description: Report data range.
      type: object
      properties:
        range:
          enum:
            - RANGE_UNSPECIFIED
            - CUSTOM_DATES
            - CURRENT_DAY
            - PREVIOUS_DAY
            - WEEK_TO_DATE
            - MONTH_TO_DATE
            - QUARTER_TO_DATE
            - YEAR_TO_DATE
            - PREVIOUS_WEEK
            - PREVIOUS_MONTH
            - PREVIOUS_QUARTER
            - PREVIOUS_YEAR
            - LAST_7_DAYS
            - LAST_30_DAYS
            - LAST_90_DAYS
            - LAST_365_DAYS
            - ALL_TIME
            - LAST_14_DAYS
            - LAST_60_DAYS
          description: Report data range used to generate the report.
          enumDescriptions:
            - Default value when range is not specified or is unknown in this version.
            - Custom range specified by custom_start_date and custom_end_date fields.
            - Current day.
            - Previous day.
            - All days, including the current day, since the most recent Sunday.
            - All days, including the current day, since the start of the current month.
            - All days, including the current day, since the start of the current quarter.
            - All days, including the current day, since the start of the current calendar year.
            - The previous completed week, beginning from Sunday.
            - The previous completed calendar month.
            - The previous completed quarter.
            - The previous completed calendar year.
            - The previous 7 days, excluding the current day.
            - The previous 30 days, excluding the current day.
            - The previous 90 days, excluding the current day.
            - The previous 365 days, excluding the current day.
            - All time for which data is available, excluding the current day.
            - The previous 14 days, excluding the current day.
            - The previous 60 days, excluding the current day.
          type: string
        customStartDate:
          description: The starting data for the data that is shown in the report. Note, `customStartDate` is required if `range` is `CUSTOM_DATES` and ignored otherwise.
          $ref: '#/components/schemas/Date'
        customEndDate:
          description: The ending date for the data that is shown in the report. Note, `customEndDate` is required if `range` is `CUSTOM_DATES` and ignored otherwise.
          $ref: '#/components/schemas/Date'
      id: DataRange
    PathFilter:
      description: Path filters specify which paths to include in a report. A path is the result of combining DV360 events based on User ID to create a workflow of users' actions. When a path filter is set, the resulting report will only include paths that match the specified event at the specified position. All other paths will be excluded.
      properties:
        pathMatchPosition:
          type: string
          enum:
            - PATH_MATCH_POSITION_UNSPECIFIED
            - ANY
            - FIRST
            - LAST
          enumDescriptions:
            - Default value when path match position is not specified or is unknown in this version.
            - Any position in the path.
            - The first position in the path.
            - The last position in the path.
          description: The position of the path the filter should match to (first, last, or any event in path).
        eventFilters:
          description: Filter on an event to be applied to some part of the path.
          type: array
          items:
            $ref: '#/components/schemas/EventFilter'
      type: object
      id: PathFilter
    QuerySchedule:
      type: object
      properties:
        frequency:
          enum:
            - FREQUENCY_UNSPECIFIED
            - ONE_TIME
            - DAILY
            - WEEKLY
            - SEMI_MONTHLY
            - MONTHLY
            - QUARTERLY
            - YEARLY
          enumDescriptions:
            - Default value when frequency is not specified or is unknown in this version.
            - Only once.
            - Once a day.
            - Once a week.
            - Twice a month.
            - Once a month.
            - Once a quarter
            - Once a year.
          type: string
          description: How often the query is run.
        nextRunTimezoneCode:
          description: Canonical timezone code for report generation time. Defaults to `America/New_York`.
          type: string
        endDate:
          $ref: '#/components/schemas/Date'
          description: Date to periodically run the query until. Not applicable to `ONE_TIME` frequency.
        startDate:
          description: When to start running the query. Not applicable to `ONE_TIME` frequency.
          $ref: '#/components/schemas/Date'
      description: Information on when and how frequently to run a query.
      id: QuerySchedule
  parameters:
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/doubleclickbidmanager: View and manage your reports in DoubleClick Bid Manager
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    queries:
      id: googleads.doubleclickbidmanager.queries
      name: queries
      title: Queries
      methods:
        list:
          operation:
            $ref: '#/paths/~1queries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1queries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1queries~1{queryId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1queries~1{queryId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1queries~1{queryId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/queries/methods/get'
          - $ref: '#/components/x-stackQL-resources/queries/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/queries/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/queries/methods/delete'
    reports:
      id: googleads.doubleclickbidmanager.reports
      name: reports
      title: Reports
      methods:
        queries_reports_list:
          operation:
            $ref: '#/paths/~1queries~1{queryId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        queries_reports_get:
          operation:
            $ref: '#/paths/~1queries~1{queryId}~1reports~1{reportId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/queries_reports_get'
          - $ref: '#/components/x-stackQL-resources/reports/methods/queries_reports_list'
        insert: []
        update: []
        delete: []
paths:
  /queries:
    parameters: &ref_1
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
    get:
      description: Lists queries created by the current user.
      operationId: doubleclickbidmanager.queries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueriesResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: queries
      x-stackQL-verb: select
    post:
      description: Creates a query.
      operationId: doubleclickbidmanager.queries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
      parameters: []
      x-stackQL-resource: queries
      x-stackQL-verb: insert
  /queries/{queryId}:
    parameters: *ref_1
    get:
      description: Retrieves a query.
      operationId: doubleclickbidmanager.queries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      x-stackQL-resource: queries
      x-stackQL-verb: select
    delete:
      description: Deletes a query as well as the associated reports.
      operationId: doubleclickbidmanager.queries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
      x-stackQL-resource: queries
      x-stackQL-verb: delete
  /queries/{queryId}:run:
    parameters: *ref_1
    post:
      description: Runs a stored query to generate a report.
      operationId: doubleclickbidmanager.queries.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunQueryRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
        - in: query
          name: synchronous
          schema:
            type: boolean
      x-stackQL-resource: queries
      x-stackQL-verb: exec
  /queries/{queryId}/reports:
    parameters: *ref_1
    get:
      description: Lists reports associated with a query.
      operationId: doubleclickbidmanager.queries.reports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
  /queries/{queryId}/reports/{reportId}:
    parameters: *ref_1
    get:
      description: Retrieves a report.
      operationId: doubleclickbidmanager.queries.reports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: queryId
          required: true
          schema:
            type: string
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-verb: select
