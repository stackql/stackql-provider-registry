openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Ad Exchange Buyer API II
  description: Accesses the latest features for managing Authorized Buyers accounts, Real-Time Bidding configurations and auction metrics, and Marketplace programmatic deals.
  version: v2beta1
  x-discovery-doc-revision: '20230105'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/authorized-buyers/apis/reference/rest/
servers:
  - url: https://adexchangebuyer.googleapis.com
components:
  schemas:
    ContactInformation:
      properties:
        name:
          type: string
          description: The name of the contact.
        email:
          type: string
          description: Email address for the contact.
      type: object
      id: ContactInformation
      description: Contains information on how a buyer or seller can be reached.
    Seller:
      properties:
        accountId:
          description: The unique ID for the seller. The seller fills in this field. The seller account ID is then available to buyer in the product.
          type: string
        subAccountId:
          readOnly: true
          description: Output only. Ad manager network code for the seller.
          type: string
      id: Seller
      description: Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.
      type: object
    ListFilterSetsResponse:
      id: ListFilterSetsResponse
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListFilterSetsRequest.pageToken field in the subsequent call to the accounts.filterSets.list method to retrieve the next page of results.
          type: string
        filterSets:
          items:
            $ref: '#/components/schemas/FilterSet'
          description: The filter sets belonging to the buyer.
          type: array
      type: object
      description: Response message for listing filter sets.
    Empty:
      properties: {}
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    DeliveryControl:
      properties:
        deliveryRateType:
          enumDescriptions:
            - A placeholder for an undefined delivery rate type.
            - Impressions are served uniformly over the life of the deal.
            - Impressions are served front-loaded.
            - Impressions are served as fast as possible.
          description: Output only. Specifies how the impression delivery will be paced.
          type: string
          readOnly: true
          enum:
            - DELIVERY_RATE_TYPE_UNSPECIFIED
            - EVENLY
            - FRONT_LOADED
            - AS_FAST_AS_POSSIBLE
        frequencyCaps:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FrequencyCap'
          description: Output only. Specifies any frequency caps.
        creativeBlockingLevel:
          enumDescriptions:
            - A placeholder for an undefined creative blocking level.
            - Publisher blocking rules will be applied.
            - The Ad Exchange policy blocking rules will be applied.
          readOnly: true
          type: string
          description: Output only. Specified the creative blocking levels to be applied.
          enum:
            - CREATIVE_BLOCKING_LEVEL_UNSPECIFIED
            - PUBLISHER_BLOCKING_RULES
            - ADX_POLICY_BLOCKING_ONLY
      id: DeliveryControl
      description: Message contains details about how the deals will be paced.
      type: object
    RelativeDateRange:
      type: object
      properties:
        offsetDays:
          description: 'The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0.'
          type: integer
          format: int32
        durationDays:
          description: 'The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7.'
          format: int32
          type: integer
      id: RelativeDateRange
      description: 'A relative date range, specified by an offset and a duration. The supported range of dates begins 30 days before today and ends today, for example, the limits for these values are: offset_days >= 0 duration_days >= 1 offset_days + duration_days <= 30'
    ListClientUserInvitationsResponse:
      id: ListClientUserInvitationsResponse
      properties:
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListClientUserInvitationsRequest.pageToken field in the subsequent call to the clients.invitations.list method to retrieve the next page of results.
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/ClientUserInvitation'
          description: The returned list of client users.
      type: object
    CreativeSize:
      properties:
        allowedFormats:
          description: What formats are allowed by the publisher. If this repeated field is empty then all formats are allowed. For example, if this field contains AllowedFormatType.AUDIO then the publisher only allows an audio ad (without any video).
          type: array
          items:
            type: string
            enum:
              - UNKNOWN
              - AUDIO
            enumDescriptions:
              - A placeholder for an undefined allowed format.
              - An audio-only ad (without any video).
        size:
          $ref: '#/components/schemas/Size'
          description: For regular or video creative size type, specifies the size of the creative
        creativeSizeType:
          description: The creative size type.
          enum:
            - CREATIVE_SIZE_TYPE_UNSPECIFIED
            - REGULAR
            - INTERSTITIAL
            - VIDEO
            - NATIVE
          enumDescriptions:
            - A placeholder for an undefined creative size type.
            - The creative is a regular desktop creative.
            - The creative is an interstitial creative.
            - The creative is a video creative.
            - The creative is a native (mobile) creative.
          type: string
        nativeTemplate:
          type: string
          enum:
            - UNKNOWN_NATIVE_TEMPLATE
            - NATIVE_CONTENT_AD
            - NATIVE_APP_INSTALL_AD
            - NATIVE_VIDEO_CONTENT_AD
            - NATIVE_VIDEO_APP_INSTALL_AD
          enumDescriptions:
            - A placeholder for an undefined native template.
            - The creative is linked to native content ad.
            - The creative is linked to native app install ad.
            - The creative is linked to native video content ad.
            - The creative is linked to native video app install ad.
          description: Output only. The native template for this creative. It will have a value only if creative_size_type = CreativeSizeType.NATIVE.
        skippableAdType:
          enumDescriptions:
            - A placeholder for an undefined skippable ad type.
            - This video ad can be skipped after 5 seconds.
            - This video ad can be skipped after 5 seconds, and count as engaged view after 30 seconds. The creative is hosted on YouTube only, and viewcount of the YouTube video increments after the engaged view.
            - This video ad is not skippable.
          type: string
          enum:
            - SKIPPABLE_AD_TYPE_UNSPECIFIED
            - GENERIC
            - INSTREAM_SELECT
            - NOT_SKIPPABLE
          description: The type of skippable ad for this creative. It will have a value only if creative_size_type = CreativeSizeType.VIDEO.
        companionSizes:
          description: For video creatives specifies the sizes of companion ads (if present). Companion sizes may be filled in only when creative_size_type = VIDEO
          items:
            $ref: '#/components/schemas/Size'
          type: array
      type: object
      description: Specifies the size of the creative.
      id: CreativeSize
    AddDealAssociationRequest:
      properties:
        association:
          description: The association between a creative and a deal that should be added.
          $ref: '#/components/schemas/CreativeDealAssociation'
      id: AddDealAssociationRequest
      type: object
      description: A request for associating a deal and a creative.
    AuctionContext:
      properties:
        auctionTypes:
          description: The auction types this restriction applies to.
          items:
            enum:
              - OPEN_AUCTION
              - DIRECT_DEALS
            type: string
            enumDescriptions:
              - The restriction applies to open auction.
              - The restriction applies to direct deals.
          type: array
      description: Output only. The auction type the restriction applies to.
      type: object
      id: AuctionContext
    Note:
      properties:
        note:
          type: string
          description: 'The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.'
        creatorRole:
          description: Output only. The role of the person (buyer/seller) creating the note.
          enumDescriptions:
            - A placeholder for an undefined buyer/seller role.
            - Specifies the role as buyer.
            - Specifies the role as seller.
          type: string
          readOnly: true
          enum:
            - BUYER_SELLER_ROLE_UNSPECIFIED
            - BUYER
            - SELLER
        createTime:
          type: string
          readOnly: true
          description: Output only. The timestamp for when this note was created.
          format: google-datetime
        noteId:
          type: string
          description: Output only. The unique ID for the note.
          readOnly: true
        proposalRevision:
          readOnly: true
          description: Output only. The revision number of the proposal when the note is created.
          format: int64
          type: string
      description: A proposal may be associated to several notes.
      type: object
      id: Note
    Correction:
      description: Output only. Shows any corrections that were applied to this creative.
      properties:
        type:
          type: string
          description: The type of correction that was applied to the creative.
          enumDescriptions:
            - The correction type is unknown. Refer to the details for more information.
            - The ad's declared vendors did not match the vendors that were detected. The detected vendors were added.
            - The ad had the SSL attribute declared but was not SSL-compliant. The SSL attribute was removed.
            - The ad was declared as Flash-free but contained Flash, so the Flash-free attribute was removed.
            - The ad was not declared as Flash-free but it did not reference any flash content, so the Flash-free attribute was added.
            - The ad did not declare a required creative attribute. The attribute was added.
            - The ad did not declare a required technology vendor. The technology vendor was added.
            - The ad did not declare the SSL attribute but was SSL-compliant, so the SSL attribute was added.
            - Properties consistent with In-banner video were found, so an In-Banner Video attribute was added.
            - The ad makes calls to the MRAID API so the MRAID attribute was added.
            - The ad unnecessarily declared the Flash attribute, so the Flash attribute was removed.
            - The ad contains video content.
          enum:
            - CORRECTION_TYPE_UNSPECIFIED
            - VENDOR_IDS_ADDED
            - SSL_ATTRIBUTE_REMOVED
            - FLASH_FREE_ATTRIBUTE_REMOVED
            - FLASH_FREE_ATTRIBUTE_ADDED
            - REQUIRED_ATTRIBUTE_ADDED
            - REQUIRED_VENDOR_ADDED
            - SSL_ATTRIBUTE_ADDED
            - IN_BANNER_VIDEO_ATTRIBUTE_ADDED
            - MRAID_ATTRIBUTE_ADDED
            - FLASH_ATTRIBUTE_REMOVED
            - VIDEO_IN_SNIPPET_ATTRIBUTE_ADDED
        contexts:
          type: array
          description: The contexts for the correction.
          items:
            $ref: '#/components/schemas/ServingContext'
        details:
          description: Additional details about what was corrected.
          items:
            type: string
          type: array
      id: Correction
      type: object
    ListBidMetricsResponse:
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListBidMetricsRequest.pageToken field in the subsequent call to the bidMetrics.list method to retrieve the next page of results.
          type: string
        bidMetricsRows:
          description: List of rows, each containing a set of bid metrics.
          items:
            $ref: '#/components/schemas/BidMetricsRow'
          type: array
      description: Response message for listing the metrics that are measured in number of bids.
      id: ListBidMetricsResponse
      type: object
    ResumeProposalRequest:
      properties: {}
      id: ResumeProposalRequest
      type: object
      description: Request message to resume (unpause) serving for an already-finalized proposal.
    InventorySizeTargeting:
      description: Represents the size of an ad unit that can be targeted on an ad request. It only applies to Private Auction, AdX Preferred Deals and Auction Packages. This targeting does not apply to Programmatic Guaranteed and Preferred Deals in Ad Manager.
      properties:
        targetedInventorySizes:
          description: A list of inventory sizes to be included.
          items:
            $ref: '#/components/schemas/AdSize'
          type: array
        excludedInventorySizes:
          description: A list of inventory sizes to be excluded.
          type: array
          items:
            $ref: '#/components/schemas/AdSize'
      type: object
      id: InventorySizeTargeting
    ListPublisherProfilesResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: List pagination support
        publisherProfiles:
          description: The list of matching publisher profiles.
          type: array
          items:
            $ref: '#/components/schemas/PublisherProfile'
      description: Response message for profiles visible to the buyer.
      id: ListPublisherProfilesResponse
    CompleteSetupRequest:
      description: Request message for indicating that the proposal's setup step is complete.
      type: object
      id: CompleteSetupRequest
      properties: {}
    Money:
      properties:
        nanos:
          type: integer
          format: int32
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        units:
          format: int64
          type: string
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
      description: Represents an amount of money with its currency type.
      id: Money
      type: object
    ListImpressionMetricsResponse:
      id: ListImpressionMetricsResponse
      type: object
      description: Response message for listing the metrics that are measured in number of impressions.
      properties:
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListImpressionMetricsRequest.pageToken field in the subsequent call to the impressionMetrics.list method to retrieve the next page of results.
        impressionMetricsRows:
          type: array
          description: List of rows, each containing a set of impression metrics.
          items:
            $ref: '#/components/schemas/ImpressionMetricsRow'
    ResumeProposalDealsRequest:
      description: Request message to resume (unpause) serving for already-finalized deals.
      type: object
      id: ResumeProposalDealsRequest
      properties:
        externalDealIds:
          type: array
          description: The external_deal_id's of the deals to resume. If empty, all the deals in the proposal will be resumed.
          items:
            type: string
    Date:
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: Date
      type: object
      properties:
        day:
          format: int32
          type: integer
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
        year:
          type: integer
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
        month:
          type: integer
          format: int32
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
    CriteriaTargeting:
      id: CriteriaTargeting
      type: object
      description: Generic targeting used for targeting dimensions that contains a list of included and excluded numeric IDs.
      properties:
        targetedCriteriaIds:
          type: array
          description: A list of numeric IDs to be included.
          items:
            format: int64
            type: string
        excludedCriteriaIds:
          type: array
          description: A list of numeric IDs to be excluded.
          items:
            format: int64
            type: string
    ListNonBillableWinningBidsResponse:
      type: object
      description: Response message for listing all reasons for which a buyer was not billed for a winning bid.
      id: ListNonBillableWinningBidsResponse
      properties:
        nonBillableWinningBidStatusRows:
          type: array
          items:
            $ref: '#/components/schemas/NonBillableWinningBidStatusRow'
          description: List of rows, with counts of bids not billed aggregated by reason.
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListNonBillableWinningBidsRequest.pageToken field in the subsequent call to the nonBillableWinningBids.list method to retrieve the next page of results.
    PauseProposalRequest:
      id: PauseProposalRequest
      type: object
      description: Request message to pause serving for an already-finalized proposal.
      properties:
        reason:
          description: 'The reason why the proposal is being paused. This human readable message will be displayed in the seller''s UI. (Max length: 1000 unicode code units.)'
          type: string
    BidResponseWithoutBidsStatusRow:
      id: BidResponseWithoutBidsStatusRow
      type: object
      properties:
        rowDimensions:
          description: The values of all dimensions associated with metric values in this row.
          $ref: '#/components/schemas/RowDimensions'
        impressionCount:
          $ref: '#/components/schemas/MetricValue'
          description: The number of impressions for which there was a bid response with the specified status.
        status:
          type: string
          description: The status specifying why the bid responses were considered to have no applicable bids.
          enumDescriptions:
            - A placeholder for an undefined status. This value will never be returned in responses.
            - The response had no bids.
            - 'The response had no bids for the specified account, though it may have included bids on behalf of other accounts. Applies if: 1. Request is on behalf of a bidder and an account filter is present. 2. Request is on behalf of a child seat.'
            - The response had no bids for the specified deal, though it may have included bids on other deals on behalf of the account to which the deal belongs. If request is on behalf of a bidder and an account filter is not present, this also includes responses that have bids on behalf of accounts other than the account to which the deal belongs.
          enum:
            - STATUS_UNSPECIFIED
            - RESPONSES_WITHOUT_BIDS
            - RESPONSES_WITHOUT_BIDS_FOR_ACCOUNT
            - RESPONSES_WITHOUT_BIDS_FOR_DEAL
      description: The number of impressions with the specified dimension values that were considered to have no applicable bids, as described by the specified status.
    NonGuaranteedAuctionTerms:
      description: Terms for Private Auctions. Note that Private Auctions can be created only by the seller, but they can be returned in a get or list request.
      properties:
        autoOptimizePrivateAuction:
          description: True if open auction buyers are allowed to compete with invited buyers in this private auction.
          type: boolean
        reservePricesPerBuyer:
          type: array
          description: Reserve price for the specified buyer.
          items:
            $ref: '#/components/schemas/PricePerBuyer'
      type: object
      id: NonGuaranteedAuctionTerms
    NonBillableWinningBidStatusRow:
      type: object
      description: The number of winning bids with the specified dimension values for which the buyer was not billed, as described by the specified status.
      properties:
        bidCount:
          description: The number of bids with the specified status.
          $ref: '#/components/schemas/MetricValue'
        status:
          enum:
            - STATUS_UNSPECIFIED
            - AD_NOT_RENDERED
            - INVALID_IMPRESSION
            - FATAL_VAST_ERROR
            - LOST_IN_MEDIATION
          type: string
          enumDescriptions:
            - A placeholder for an undefined status. This value will never be returned in responses.
            - The buyer was not billed because the ad was not rendered by the publisher.
            - The buyer was not billed because the impression won by the bid was determined to be invalid.
            - A video impression was served but a fatal error was reported from the client during playback.
            - The buyer was not billed because the ad was outplaced in the mediation waterfall.
          description: The status specifying why the winning bids were not billed.
        rowDimensions:
          $ref: '#/components/schemas/RowDimensions'
          description: The values of all dimensions associated with metric values in this row.
      id: NonBillableWinningBidStatusRow
    ListCreativeStatusBreakdownByCreativeResponse:
      type: object
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListCreativeStatusBreakdownByCreativeRequest.pageToken field in the subsequent call to the filteredBids.creatives.list method to retrieve the next page of results.
          type: string
        filteredBidCreativeRows:
          description: List of rows, with counts of bids with a given creative status aggregated by creative.
          type: array
          items:
            $ref: '#/components/schemas/FilteredBidCreativeRow'
      id: ListCreativeStatusBreakdownByCreativeResponse
      description: Response message for listing all creatives associated with a given filtered bid reason.
    LocationContext:
      type: object
      description: Output only. The Geo criteria the restriction applies to.
      id: LocationContext
      properties:
        geoCriteriaIds:
          description: IDs representing the geo location for this context. Refer to the [geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv) file for different geo criteria IDs.
          items:
            type: integer
            format: int32
          type: array
    ListDealAssociationsResponse:
      properties:
        associations:
          items:
            $ref: '#/components/schemas/CreativeDealAssociation'
          description: The list of associations.
          type: array
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListDealAssociationsRequest.page_token field in the subsequent call to 'ListDealAssociation' method to retrieve the next page of results.
      type: object
      id: ListDealAssociationsResponse
      description: A response for listing creative and deal associations
    CreativeDealAssociation:
      description: The association between a creative and a deal.
      properties:
        dealsId:
          type: string
          description: The externalDealId for the deal associated with the creative.
        accountId:
          description: The account the creative belongs to.
          type: string
        creativeId:
          type: string
          description: The ID of the creative associated with the deal.
      type: object
      id: CreativeDealAssociation
    TechnologyTargeting:
      type: object
      description: Represents targeting about various types of technology.
      id: TechnologyTargeting
      properties:
        deviceCategoryTargeting:
          description: IDs of device categories to be included/excluded.
          $ref: '#/components/schemas/CriteriaTargeting'
        operatingSystemTargeting:
          $ref: '#/components/schemas/OperatingSystemTargeting'
          description: Operating system related targeting information.
        deviceCapabilityTargeting:
          description: IDs of device capabilities to be included/excluded.
          $ref: '#/components/schemas/CriteriaTargeting'
    AdTechnologyProviders:
      properties:
        detectedProviderIds:
          items:
            format: int64
            type: string
          type: array
          description: The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If the creative contains provider IDs that are outside of those listed in the `BidRequest.adslot.consented_providers_settings.consented_providers` field on the (Google bid protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto] and the `BidRequest.user.ext.consented_providers_settings.consented_providers` field on the (OpenRTB protocol)[https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto], and a bid is submitted with that creative for an impression that will serve to an EEA user, the bid will be filtered before the auction.
        hasUnidentifiedProvider:
          description: Whether the creative contains an unidentified ad technology provider. If true for a given creative, any bid submitted with that creative for an impression that will serve to an EEA user will be filtered before the auction.
          type: boolean
      id: AdTechnologyProviders
      type: object
      description: Detected ad technology provider information.
    Size:
      type: object
      id: Size
      properties:
        width:
          format: int32
          description: The width of the creative
          type: integer
        height:
          type: integer
          description: The height of the creative.
          format: int32
      description: Message depicting the size of the creative. The units of width and height depend on the type of the targeting.
    MarketplaceTargeting:
      description: Targeting represents different criteria that can be used by advertisers to target ad inventory. For example, they can choose to target ad requests only if the user is in the US. Multiple types of targeting are always applied as a logical AND, unless noted otherwise.
      type: object
      id: MarketplaceTargeting
      properties:
        geoTargeting:
          $ref: '#/components/schemas/CriteriaTargeting'
          description: Geo criteria IDs to be included/excluded.
        videoTargeting:
          $ref: '#/components/schemas/VideoTargeting'
          description: Video targeting information.
        placementTargeting:
          $ref: '#/components/schemas/PlacementTargeting'
          description: Placement targeting information, for example, URL, mobile applications.
        technologyTargeting:
          description: Technology targeting information, for example, operating system, device category.
          $ref: '#/components/schemas/TechnologyTargeting'
        inventorySizeTargeting:
          $ref: '#/components/schemas/InventorySizeTargeting'
          description: Inventory sizes to be included/excluded.
    NonGuaranteedFixedPriceTerms:
      type: object
      properties:
        fixedPrices:
          type: array
          items:
            $ref: '#/components/schemas/PricePerBuyer'
          description: Fixed price for the specified buyer.
      id: NonGuaranteedFixedPriceTerms
      description: Terms for Preferred Deals.
    StopWatchingCreativeRequest:
      description: A request for stopping notifications for changes to creative Status.
      id: StopWatchingCreativeRequest
      properties: {}
      type: object
    Creative:
      description: A creative and its classification data.
      type: object
      id: Creative
      properties:
        native:
          $ref: '#/components/schemas/NativeContent'
          description: A native creative.
        advertiserName:
          description: The name of the company being advertised in the creative.
          type: string
        detectedDomains:
          description: Output only. The detected domains for this creative.
          type: array
          items:
            type: string
        vendorIds:
          type: array
          items:
            type: integer
            format: int32
          description: All vendor IDs for the ads that may be shown from this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values.
        servingRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/ServingRestriction'
          description: Output only. The granular status of this ad in specific contexts. A context here relates to where something ultimately serves (for example, a physical location, a platform, an HTTPS versus HTTP request, or the type of auction).
        corrections:
          description: Output only. Shows any corrections that were applied to this creative.
          items:
            $ref: '#/components/schemas/Correction'
          type: array
        restrictedCategories:
          type: array
          items:
            enumDescriptions:
              - The ad has no restricted categories
              - The alcohol restricted category.
            type: string
            enum:
              - NO_RESTRICTED_CATEGORIES
              - ALCOHOL
          description: All restricted categories for the ads that may be shown from this creative.
        adChoicesDestinationUrl:
          description: The link to AdChoices destination page.
          type: string
        attributes:
          items:
            enum:
              - ATTRIBUTE_UNSPECIFIED
              - IMAGE_RICH_MEDIA
              - ADOBE_FLASH_FLV
              - IS_TAGGED
              - IS_COOKIE_TARGETED
              - IS_USER_INTEREST_TARGETED
              - EXPANDING_DIRECTION_NONE
              - EXPANDING_DIRECTION_UP
              - EXPANDING_DIRECTION_DOWN
              - EXPANDING_DIRECTION_LEFT
              - EXPANDING_DIRECTION_RIGHT
              - EXPANDING_DIRECTION_UP_LEFT
              - EXPANDING_DIRECTION_UP_RIGHT
              - EXPANDING_DIRECTION_DOWN_LEFT
              - EXPANDING_DIRECTION_DOWN_RIGHT
              - CREATIVE_TYPE_HTML
              - CREATIVE_TYPE_VAST_VIDEO
              - EXPANDING_DIRECTION_UP_OR_DOWN
              - EXPANDING_DIRECTION_LEFT_OR_RIGHT
              - EXPANDING_DIRECTION_ANY_DIAGONAL
              - EXPANDING_ACTION_ROLLOVER_TO_EXPAND
              - INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH
              - RICH_MEDIA_CAPABILITY_TYPE_MRAID
              - RICH_MEDIA_CAPABILITY_TYPE_FLASH
              - RICH_MEDIA_CAPABILITY_TYPE_HTML5
              - SKIPPABLE_INSTREAM_VIDEO
              - RICH_MEDIA_CAPABILITY_TYPE_SSL
              - RICH_MEDIA_CAPABILITY_TYPE_NON_SSL
              - RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL
              - NON_SKIPPABLE_INSTREAM_VIDEO
              - NATIVE_ELIGIBILITY_ELIGIBLE
              - NON_VPAID
              - NATIVE_ELIGIBILITY_NOT_ELIGIBLE
              - ANY_INTERSTITIAL
              - NON_INTERSTITIAL
              - IN_BANNER_VIDEO
              - RENDERING_SIZELESS_ADX
              - OMSDK_1_0
            type: string
            enumDescriptions:
              - Do not use. This is a placeholder value only.
              - The creative is of type image/rich media. For pretargeting.
              - The creative is of video type Adobe Flash FLV. For pretargeting.
              - The creative is tagged.
              - The creative is cookie targeted.
              - The creative is user interest targeted.
              - The creative does not expand.
              - The creative expands up.
              - The creative expands down.
              - The creative expands left.
              - The creative expands right.
              - The creative expands up and left.
              - The creative expands up and right.
              - The creative expands down and left.
              - The creative expands down and right.
              - The creative type is HTML.
              - The creative type is VAST video.
              - The creative expands up or down.
              - The creative expands left or right.
              - The creative expands on any diagonal.
              - The creative expands when rolled over.
              - The instream vast video type is vpaid flash.
              - The creative is MRAID.
              - The creative is Flash.
              - The creative is HTML5.
              - The creative has an instream VAST video type of skippable instream video. For pretargeting.
              - The creative is SSL.
              - The creative is non-SSL.
              - The creative is an interstitial.
              - The creative has an instream VAST video type of non-skippable instream video. For pretargeting.
              - The creative is eligible for native.
              - The creative has an instream VAST video type of non-VPAID. For pretargeting.
              - The creative is not eligible for native.
              - The creative has an interstitial size of any interstitial. For pretargeting.
              - The creative has an interstitial size of non interstitial. For pretargeting.
              - The video type is in-banner video.
              - The creative can dynamically resize to fill a variety of slot sizes.
              - The open measurement SDK is supported.
          type: array
          description: All attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.
        version:
          type: integer
          description: Output only. The version of this creative.
          format: int32
        declaredClickThroughUrls:
          type: array
          items:
            type: string
          description: The set of declared destination URLs for the creative.
        detectedSensitiveCategories:
          description: Output only. Detected sensitive categories, if any. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.
          type: array
          items:
            type: integer
            format: int32
        video:
          $ref: '#/components/schemas/VideoContent'
          description: A video creative.
        detectedAdvertiserIds:
          items:
            type: string
            format: int64
          type: array
          description: Output only. Detected advertiser IDs, if any.
        detectedLanguages:
          items:
            type: string
          type: array
          description: Output only. The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes.
        detectedProductCategories:
          items:
            format: int32
            type: integer
          type: array
          description: Output only. Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs.
        openAuctionStatus:
          enumDescriptions:
            - The status is unknown.
            - The creative has not been checked.
            - The creative has been conditionally approved. See serving_restrictions for details.
            - The creative has been approved.
            - The creative has been disapproved.
            - Placeholder for transition to v1beta1. Currently not used.
            - Placeholder for transition to v1beta1. Currently not used.
          type: string
          enum:
            - STATUS_UNSPECIFIED
            - NOT_CHECKED
            - CONDITIONALLY_APPROVED
            - APPROVED
            - DISAPPROVED
            - PENDING_REVIEW
            - STATUS_TYPE_UNSPECIFIED
          description: Output only. The top-level open auction status of this creative. If disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method.
        clickThroughUrls:
          items:
            type: string
          type: array
          description: The set of destination URLs for the creative.
        agencyId:
          type: string
          description: The agency ID for this creative.
          format: int64
        impressionTrackingUrls:
          type: array
          description: The set of URLs to be called to record an impression.
          items:
            type: string
        creativeId:
          type: string
          description: The buyer-defined creative ID of this creative. Can be used to filter the response of the creatives.list method.
        dealsStatus:
          enum:
            - STATUS_UNSPECIFIED
            - NOT_CHECKED
            - CONDITIONALLY_APPROVED
            - APPROVED
            - DISAPPROVED
            - PENDING_REVIEW
            - STATUS_TYPE_UNSPECIFIED
          description: Output only. The top-level deals status of this creative. If disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in serving_restrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case, it may be preferable to read from serving_restrictions directly. Can be used to filter the response of the creatives.list method.
          type: string
          enumDescriptions:
            - The status is unknown.
            - The creative has not been checked.
            - The creative has been conditionally approved. See serving_restrictions for details.
            - The creative has been approved.
            - The creative has been disapproved.
            - Placeholder for transition to v1beta1. Currently not used.
            - Placeholder for transition to v1beta1. Currently not used.
        html:
          $ref: '#/components/schemas/HtmlContent'
          description: An HTML creative.
        apiUpdateTime:
          format: google-datetime
          description: Output only. The last update timestamp of the creative through the API.
          type: string
        accountId:
          type: string
          description: The account that this creative belongs to. Can be used to filter the response of the creatives.list method.
        adTechnologyProviders:
          description: Output only. The detected ad technology providers.
          $ref: '#/components/schemas/AdTechnologyProviders'
    FilteredBidCreativeRow:
      type: object
      description: The number of filtered bids with the specified dimension values that have the specified creative.
      properties:
        rowDimensions:
          $ref: '#/components/schemas/RowDimensions'
          description: The values of all dimensions associated with metric values in this row.
        bidCount:
          description: The number of bids with the specified creative.
          $ref: '#/components/schemas/MetricValue'
        creativeId:
          description: The ID of the creative.
          type: string
      id: FilteredBidCreativeRow
    CreativeStatusRow:
      id: CreativeStatusRow
      description: The number of bids with the specified dimension values that did not win the auction (either were filtered pre-auction or lost the auction), as described by the specified creative status.
      type: object
      properties:
        creativeStatusId:
          description: The ID of the creative status. See [creative-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/creative-status-codes).
          type: integer
          format: int32
        rowDimensions:
          $ref: '#/components/schemas/RowDimensions'
          description: The values of all dimensions associated with metric values in this row.
        bidCount:
          description: The number of bids with the specified status.
          $ref: '#/components/schemas/MetricValue'
    ListCreativesResponse:
      id: ListCreativesResponse
      type: object
      properties:
        creatives:
          type: array
          description: The list of creatives.
          items:
            $ref: '#/components/schemas/Creative'
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListCreativesRequest.page_token field in the subsequent call to `ListCreatives` method to retrieve the next page of results.
      description: A response for listing creatives.
    PlatformContext:
      id: PlatformContext
      type: object
      description: Output only. The type of platform the restriction applies to.
      properties:
        platforms:
          description: The platforms this restriction applies to.
          items:
            type: string
            enumDescriptions:
              - Desktop platform.
              - Android platform.
              - iOS platform.
            enum:
              - DESKTOP
              - ANDROID
              - IOS
          type: array
    ListClientsResponse:
      properties:
        clients:
          description: The returned list of clients.
          type: array
          items:
            $ref: '#/components/schemas/Client'
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListClientsRequest.pageToken field in the subsequent call to the accounts.clients.list method to retrieve the next page of results.
          type: string
      id: ListClientsResponse
      type: object
    DealTerms:
      description: The deal terms specify the details of a Product/deal. They specify things like price per buyer, the type of pricing model (for example, fixed price, auction) and expected impressions from the publisher.
      type: object
      properties:
        sellerTimeZone:
          description: The time zone name. For deals with Cost Per Day billing, defines the time zone used to mark the boundaries of a day. It should be an IANA TZ name, such as "America/Los_Angeles". For more information, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
          type: string
        brandingType:
          description: 'Visibility of the URL in bid requests. (default: BRANDED)'
          type: string
          enumDescriptions:
            - A placeholder for an undefined branding type.
            - Full URL is included in bid requests.
            - A TopLevelDomain or masked URL is sent in bid requests rather than the full one.
          enum:
            - BRANDING_TYPE_UNSPECIFIED
            - BRANDED
            - SEMI_TRANSPARENT
        nonGuaranteedAuctionTerms:
          description: The terms for non-guaranteed auction deals.
          $ref: '#/components/schemas/NonGuaranteedAuctionTerms'
        estimatedImpressionsPerDay:
          format: int64
          description: Non-binding estimate of the impressions served per day. Can be set by buyer or seller.
          type: string
        guaranteedFixedPriceTerms:
          $ref: '#/components/schemas/GuaranteedFixedPriceTerms'
          description: The terms for guaranteed fixed price deals.
        nonGuaranteedFixedPriceTerms:
          description: The terms for non-guaranteed fixed price deals.
          $ref: '#/components/schemas/NonGuaranteedFixedPriceTerms'
        description:
          description: Publisher provided description for the terms.
          type: string
        estimatedGrossSpend:
          description: Non-binding estimate of the estimated gross spend for this deal. Can be set by buyer or seller.
          $ref: '#/components/schemas/Price'
      id: DealTerms
    VideoTargeting:
      type: object
      description: Represents targeting information about video.
      properties:
        excludedPositionTypes:
          type: array
          description: A list of video positions to be excluded. Position types can either be included or excluded (XOR).
          items:
            enum:
              - POSITION_TYPE_UNSPECIFIED
              - PREROLL
              - MIDROLL
              - POSTROLL
            type: string
            enumDescriptions:
              - A placeholder for an undefined video position.
              - Ad is played before the video.
              - Ad is played during the video.
              - Ad is played after the video.
        targetedPositionTypes:
          description: A list of video positions to be included. When the included list is present, the excluded list must be empty. When the excluded list is present, the included list must be empty.
          items:
            type: string
            enumDescriptions:
              - A placeholder for an undefined video position.
              - Ad is played before the video.
              - Ad is played during the video.
              - Ad is played after the video.
            enum:
              - POSITION_TYPE_UNSPECIFIED
              - PREROLL
              - MIDROLL
              - POSTROLL
          type: array
      id: VideoTargeting
    OperatingSystemTargeting:
      id: OperatingSystemTargeting
      properties:
        operatingSystemCriteria:
          description: IDs of operating systems to be included/excluded.
          $ref: '#/components/schemas/CriteriaTargeting'
        operatingSystemVersionCriteria:
          description: IDs of operating system versions to be included/excluded.
          $ref: '#/components/schemas/CriteriaTargeting'
      type: object
      description: Represents targeting information for operating systems.
    Image:
      properties:
        height:
          format: int32
          type: integer
          description: Image height in pixels.
        width:
          type: integer
          description: Image width in pixels.
          format: int32
        url:
          type: string
          description: The URL of the image.
      id: Image
      description: An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved.
      type: object
    VideoContent:
      type: object
      description: Video content for a creative.
      properties:
        videoUrl:
          type: string
          description: The URL to fetch a video ad.
        videoVastXml:
          description: The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.
          type: string
      id: VideoContent
    TimeInterval:
      type: object
      id: TimeInterval
      properties:
        startTime:
          format: google-datetime
          type: string
          description: The timestamp marking the start of the range (inclusive) for which data is included.
        endTime:
          description: The timestamp marking the end of the range (exclusive) for which data is included.
          format: google-datetime
          type: string
      description: An interval of time, with an absolute start and end.
    TargetingValue:
      id: TargetingValue
      description: A polymorphic targeting value used as part of Shared Targeting.
      type: object
      properties:
        dayPartTargetingValue:
          description: The daypart targeting to include / exclude. Filled in when the key is GOOG_DAYPART_TARGETING. The definition of this targeting is derived from the structure used by Ad Manager.
          $ref: '#/components/schemas/DayPartTargeting'
        creativeSizeValue:
          $ref: '#/components/schemas/CreativeSize'
          description: The creative size value to include/exclude. Filled in when key = GOOG_CREATIVE_SIZE
        stringValue:
          type: string
          description: The string value to include/exclude.
        longValue:
          description: The long value to include/exclude.
          format: int64
          type: string
    FirstPartyMobileApplicationTargeting:
      type: object
      properties:
        targetedAppIds:
          items:
            type: string
          description: A list of application IDs to be included.
          type: array
        excludedAppIds:
          type: array
          description: A list of application IDs to be excluded.
          items:
            type: string
      id: FirstPartyMobileApplicationTargeting
      description: Represents a list of targeted and excluded mobile application IDs that publishers own. Mobile application IDs are from App Store and Google Play Store. Android App ID, for example, com.google.android.apps.maps, can be found in Google Play Store URL. iOS App ID (which is a number) can be found at the end of iTunes store URL. First party mobile applications is either included or excluded.
    ListCreativeStatusBreakdownByDetailResponse:
      id: ListCreativeStatusBreakdownByDetailResponse
      type: object
      properties:
        detailType:
          description: The type of detail that the detail IDs represent.
          enum:
            - DETAIL_TYPE_UNSPECIFIED
            - CREATIVE_ATTRIBUTE
            - VENDOR
            - SENSITIVE_CATEGORY
            - PRODUCT_CATEGORY
            - DISAPPROVAL_REASON
            - POLICY_TOPIC
            - ATP_VENDOR
            - VENDOR_DOMAIN
            - GVL_ID
          type: string
          enumDescriptions:
            - A placeholder for an undefined status. This value will never be returned in responses.
            - Indicates that the detail ID refers to a creative attribute; see [publisher-excludable-creative-attributes](https://developers.google.com/authorized-buyers/rtb/downloads/publisher-excludable-creative-attributes).
            - Indicates that the detail ID refers to a vendor; see [vendors](https://developers.google.com/authorized-buyers/rtb/downloads/vendors). This namespace is different from that of the `ATP_VENDOR` detail type.
            - Indicates that the detail ID refers to a sensitive category; see [ad-sensitive-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-sensitive-categories).
            - Indicates that the detail ID refers to a product category; see [ad-product-categories](https://developers.google.com/authorized-buyers/rtb/downloads/ad-product-categories).
            - Indicates that the detail ID refers to a disapproval reason; see DisapprovalReason enum in [snippet-status-report-proto](https://developers.google.com/authorized-buyers/rtb/downloads/snippet-status-report-proto).
            - Indicates that the detail ID refers to a policy topic.
            - Indicates that the detail ID refers to an ad technology provider (ATP); see [providers] (https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv). This namespace is different from the `VENDOR` detail type; see [ad technology providers](https://support.google.com/admanager/answer/9012903) for more information.
            - Indicates that the detail string refers the domain of an unknown vendor.
            - Indicates that the detail ID refers an IAB GVL ID which Google did not detect in the latest TCF Vendor List. See [Global Vendor List] (https://vendor-list.consensu.org/v2/vendor-list.json)
        filteredBidDetailRows:
          description: List of rows, with counts of bids with a given creative status aggregated by detail.
          items:
            $ref: '#/components/schemas/FilteredBidDetailRow'
          type: array
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListCreativeStatusBreakdownByDetailRequest.pageToken field in the subsequent call to the filteredBids.details.list method to retrieve the next page of results.
      description: Response message for listing all details associated with a given filtered bid reason.
    ListProductsResponse:
      description: Response message for listing products visible to the buyer.
      id: ListProductsResponse
      type: object
      properties:
        nextPageToken:
          description: List pagination support.
          type: string
        products:
          items:
            $ref: '#/components/schemas/Product'
          description: The list of matching products at their head revision number.
          type: array
    UrlTargeting:
      description: Represents a list of targeted and excluded URLs (for example, google.com). For Private Auction and AdX Preferred Deals, URLs are either included or excluded. For Programmatic Guaranteed and Preferred Deals, this doesn't apply.
      type: object
      id: UrlTargeting
      properties:
        excludedUrls:
          description: A list of URLs to be excluded.
          type: array
          items:
            type: string
        targetedUrls:
          description: A list of URLs to be included.
          type: array
          items:
            type: string
    FilterSet:
      type: object
      properties:
        breakdownDimensions:
          type: array
          items:
            enum:
              - BREAKDOWN_DIMENSION_UNSPECIFIED
              - PUBLISHER_IDENTIFIER
            type: string
            enumDescriptions:
              - A placeholder for an unspecified dimension; should not be used.
              - The response should be broken down by publisher identifier. This option is available only for Open Bidding buyers.
          description: The set of dimensions along which to break down the response; may be empty. If multiple dimensions are requested, the breakdown is along the Cartesian product of the requested dimensions.
        publisherIdentifiers:
          items:
            type: string
          type: array
          description: For Open Bidding partners only. The list of publisher identifiers on which to filter; may be empty. The filters represented by multiple publisher identifiers are ORed together.
        name:
          description: 'A user-defined name of the filter set. Filter set names must be unique globally and match one of the patterns: - `bidders/*/filterSets/*` (for accessing bidder-level troubleshooting data) - `bidders/*/accounts/*/filterSets/*` (for accessing account-level troubleshooting data) This field is required in create operations.'
          type: string
        dealId:
          format: int64
          description: The ID of the deal on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the `bidders/*/accounts/*/filterSets/*` pattern.
          type: string
        formats:
          description: Creative formats bidded on or allowed to bid on, can be empty. Although this field is a list, it can only be populated with a single item. A HTTP 400 bad request error will be returned in the response if you specify multiple items.
          type: array
          items:
            enum:
              - FORMAT_UNSPECIFIED
              - NATIVE_DISPLAY
              - NATIVE_VIDEO
              - NON_NATIVE_DISPLAY
              - NON_NATIVE_VIDEO
            enumDescriptions:
              - A placeholder for an undefined format; indicates that no format filter will be applied.
              - The ad impression is a native ad, and display (for example, image) format.
              - The ad impression is a native ad, and video format.
              - The ad impression is not a native ad, and display (for example, image) format.
              - The ad impression is not a native ad, and video format.
            type: string
        platforms:
          items:
            enumDescriptions:
              - A placeholder for an undefined platform; indicates that no platform filter will be applied.
              - The ad impression appears on a desktop.
              - The ad impression appears on a tablet.
              - The ad impression appears on a mobile device.
            type: string
            enum:
              - PLATFORM_UNSPECIFIED
              - DESKTOP
              - TABLET
              - MOBILE
          type: array
          description: The list of platforms on which to filter; may be empty. The filters represented by multiple platforms are ORed together (for example, if non-empty, results must match any one of the platforms).
        absoluteDateRange:
          description: An absolute date range, defined by a start date and an end date. Interpreted relative to Pacific time zone.
          $ref: '#/components/schemas/AbsoluteDateRange'
        format:
          description: Creative format bidded on or allowed to bid on, can be empty.
          enum:
            - FORMAT_UNSPECIFIED
            - NATIVE_DISPLAY
            - NATIVE_VIDEO
            - NON_NATIVE_DISPLAY
            - NON_NATIVE_VIDEO
          type: string
          enumDescriptions:
            - A placeholder for an undefined format; indicates that no format filter will be applied.
            - The ad impression is a native ad, and display (for example, image) format.
            - The ad impression is a native ad, and video format.
            - The ad impression is not a native ad, and display (for example, image) format.
            - The ad impression is not a native ad, and video format.
        realtimeTimeRange:
          description: An open-ended realtime time range, defined by the aggregation start timestamp.
          $ref: '#/components/schemas/RealtimeTimeRange'
        sellerNetworkIds:
          description: For Authorized Buyers only. The list of IDs of the seller (publisher) networks on which to filter; may be empty. The filters represented by multiple seller network IDs are ORed together (for example, if non-empty, results must match any one of the publisher networks). See [seller-network-ids](https://developers.google.com/authorized-buyers/rtb/downloads/seller-network-ids) file for the set of existing seller network IDs.
          items:
            format: int32
            type: integer
          type: array
        timeSeriesGranularity:
          enumDescriptions:
            - A placeholder for an unspecified interval; no time series is applied. All rows in response will contain data for the entire requested time range.
            - Indicates that data will be broken down by the hour.
            - Indicates that data will be broken down by the day.
          type: string
          enum:
            - TIME_SERIES_GRANULARITY_UNSPECIFIED
            - HOURLY
            - DAILY
          description: The granularity of time intervals if a time series breakdown is preferred; optional.
        environment:
          enum:
            - ENVIRONMENT_UNSPECIFIED
            - WEB
            - APP
          enumDescriptions:
            - A placeholder for an undefined environment; indicates that no environment filter will be applied.
            - The ad impression appears on the web.
            - The ad impression appears in an app.
          type: string
          description: The environment on which to filter; optional.
        relativeDateRange:
          $ref: '#/components/schemas/RelativeDateRange'
          description: A relative date range, defined by an offset from today and a duration. Interpreted relative to Pacific time zone.
        creativeId:
          description: The ID of the creative on which to filter; optional. This field may be set only for a filter set that accesses account-level troubleshooting data, for example, one whose name matches the `bidders/*/accounts/*/filterSets/*` pattern.
          type: string
      id: FilterSet
      description: A set of filters that is applied to a request for data. Within a filter set, an AND operation is performed across the filters represented by each field. An OR operation is performed across the filters represented by the multiple values of a repeated field, for example, "format=VIDEO AND deal_id=12 AND (seller_network_id=34 OR seller_network_id=56)".
    Price:
      type: object
      description: Represents a price and a pricing type for a product / deal.
      properties:
        amount:
          $ref: '#/components/schemas/Money'
          description: The actual price with currency specified.
        pricingType:
          enum:
            - PRICING_TYPE_UNSPECIFIED
            - COST_PER_MILLE
            - COST_PER_DAY
          enumDescriptions:
            - A placeholder for an undefined pricing type. If the pricing type is unpsecified, `COST_PER_MILLE` will be used instead.
            - Cost per thousand impressions.
            - Cost per day
          description: 'The pricing type for the deal/product. (default: CPM)'
          type: string
      id: Price
    AbsoluteDateRange:
      id: AbsoluteDateRange
      description: An absolute date range, specified by its start date and end date. The supported range of dates begins 30 days before today and ends today. Validity checked upon filter set creation. If a filter set with an absolute date range is run at a later date more than 30 days after start_date, it will fail.
      properties:
        startDate:
          description: The start date of the range (inclusive). Must be within the 30 days leading up to current date, and must be equal to or before end_date.
          $ref: '#/components/schemas/Date'
        endDate:
          $ref: '#/components/schemas/Date'
          description: The end date of the range (inclusive). Must be within the 30 days leading up to current date, and must be equal to or after start_date.
      type: object
    RemoveDealAssociationRequest:
      type: object
      id: RemoveDealAssociationRequest
      description: A request for removing the association between a deal and a creative.
      properties:
        association:
          $ref: '#/components/schemas/CreativeDealAssociation'
          description: The association between a creative and a deal that should be removed.
    ListBidResponsesWithoutBidsResponse:
      id: ListBidResponsesWithoutBidsResponse
      description: Response message for listing all reasons that bid responses were considered to have no applicable bids.
      properties:
        bidResponseWithoutBidsStatusRows:
          type: array
          items:
            $ref: '#/components/schemas/BidResponseWithoutBidsStatusRow'
          description: List of rows, with counts of bid responses without bids aggregated by status.
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListBidResponsesWithoutBidsRequest.pageToken field in the subsequent call to the bidResponsesWithoutBids.list method to retrieve the next page of results.
      type: object
    FilteredBidDetailRow:
      type: object
      id: FilteredBidDetailRow
      properties:
        detail:
          type: string
          description: The ID of the detail, can be numeric or text. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.
        bidCount:
          $ref: '#/components/schemas/MetricValue'
          description: The number of bids with the specified detail.
        rowDimensions:
          description: The values of all dimensions associated with metric values in this row.
          $ref: '#/components/schemas/RowDimensions'
        detailId:
          description: 'Note: this field will be deprecated, use "detail" field instead. When "detail" field represents an integer value, this field is populated as the same integer value "detail" field represents, otherwise this field will be 0. The ID of the detail. The associated value can be looked up in the dictionary file corresponding to the DetailType in the response message.'
          format: int32
          type: integer
      description: The number of filtered bids with the specified dimension values, among those filtered due to the requested filtering reason (for example, creative status), that have the specified detail.
    NativeContent:
      type: object
      description: Native content for a creative.
      properties:
        image:
          description: A large image.
          $ref: '#/components/schemas/Image'
        videoUrl:
          description: The URL to fetch a native video ad.
          type: string
        headline:
          description: A short title for the ad.
          type: string
        callToAction:
          type: string
          description: A label for the button that the user is supposed to click.
        appIcon:
          $ref: '#/components/schemas/Image'
          description: The app icon, for app download ads.
        logo:
          $ref: '#/components/schemas/Image'
          description: A smaller image, for the advertiser's logo.
        priceDisplayText:
          type: string
          description: The price of the promoted app including currency info.
        body:
          type: string
          description: A long description of the ad.
        storeUrl:
          type: string
          description: The URL to the app store to purchase/download the promoted app.
        advertiserName:
          description: The name of the advertiser or sponsor, to be displayed in the ad creative.
          type: string
        starRating:
          description: The app rating in the app store. Must be in the range [0-5].
          format: double
          type: number
        clickLinkUrl:
          description: The URL that the browser/SDK will load when the user clicks the ad.
          type: string
        clickTrackingUrl:
          type: string
          description: The URL to use for click tracking.
      id: NativeContent
    PlacementTargeting:
      properties:
        mobileApplicationTargeting:
          description: Mobile application targeting information in a deal. This doesn't apply to Auction Packages.
          $ref: '#/components/schemas/MobileApplicationTargeting'
        urlTargeting:
          description: URLs to be included/excluded.
          $ref: '#/components/schemas/UrlTargeting'
      id: PlacementTargeting
      type: object
      description: Represents targeting about where the ads can appear, for example, certain sites or mobile applications. Different placement targeting types will be logically OR'ed.
    TimeOfDay:
      id: TimeOfDay
      properties:
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          format: int32
          type: integer
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      type: object
    AddNoteRequest:
      description: Request message for adding a note to a given proposal.
      properties:
        note:
          description: Details of the note to add.
          $ref: '#/components/schemas/Note'
      id: AddNoteRequest
      type: object
    GuaranteedFixedPriceTerms:
      properties:
        reservationType:
          type: string
          enumDescriptions:
            - An unspecified reservation type.
            - Non-sponsorship deal.
            - Sponsorship deals don't have impression goal (guaranteed_looks) and they are served based on the flight dates. For CPM Sponsorship deals, impression_cap is the lifetime impression limit.
          description: The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD.
          enum:
            - RESERVATION_TYPE_UNSPECIFIED
            - STANDARD
            - SPONSORSHIP
        percentShareOfVoice:
          format: int64
          description: For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached.
          type: string
        impressionCap:
          format: int64
          type: string
          description: The lifetime impression cap for CPM sponsorship deals. The deal will stop serving when the cap is reached.
        fixedPrices:
          items:
            $ref: '#/components/schemas/PricePerBuyer'
          type: array
          description: Fixed price for the specified buyer.
        guaranteedImpressions:
          type: string
          format: int64
          description: Guaranteed impressions as a percentage. This is the percentage of guaranteed looks that the buyer is guaranteeing to buy.
        minimumDailyLooks:
          format: int64
          description: Daily minimum looks for CPD deal types.
          type: string
        guaranteedLooks:
          type: string
          format: int64
          description: Count of guaranteed looks. Required for deal, optional for product.
      type: object
      description: Terms for Programmatic Guaranteed Deals.
      id: GuaranteedFixedPriceTerms
    ClientUser:
      type: object
      properties:
        clientAccountId:
          format: int64
          description: Numerical account ID of the client buyer with which the user is associated; the buyer must be a client of the current sponsor buyer. The value of this field is ignored in an update operation.
          type: string
        status:
          enum:
            - USER_STATUS_UNSPECIFIED
            - PENDING
            - ACTIVE
            - DISABLED
          description: The status of the client user.
          type: string
          enumDescriptions:
            - A placeholder for an undefined user status.
            - A user who was already created but hasn't accepted the invitation yet.
            - A user that is currently active.
            - A user that is currently disabled.
        email:
          type: string
          description: User's email address. The value of this field is ignored in an update operation.
        userId:
          description: The unique numerical ID of the client user that has accepted an invitation. The value of this field is ignored in an update operation.
          type: string
          format: int64
      id: ClientUser
      description: A client user is created under a client buyer and has restricted access to the Marketplace and certain other sections of the Authorized Buyers UI based on the role granted to the associated client buyer. The only way a new client user can be created is through accepting an email invitation (see the accounts.clients.invitations.create method). All fields are required unless otherwise specified.
    FrequencyCap:
      description: Frequency cap.
      id: FrequencyCap
      properties:
        timeUnitType:
          enumDescriptions:
            - A placeholder for an undefined time unit type. This just indicates the variable with this value hasn't been initialized.
            - Minute
            - Hour
            - Day
            - Week
            - Month
            - Lifetime
            - Pod
            - Stream
          description: The time unit. Along with num_time_units defines the amount of time over which impressions per user are counted and capped.
          enum:
            - TIME_UNIT_TYPE_UNSPECIFIED
            - MINUTE
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - POD
            - STREAM
          type: string
        maxImpressions:
          type: integer
          description: The maximum number of impressions that can be served to a user within the specified time period.
          format: int32
        numTimeUnits:
          description: The amount of time, in the units specified by time_unit_type. Defines the amount of time over which impressions per user are counted and capped.
          format: int32
          type: integer
      type: object
    AdSize:
      type: object
      description: Represents size of a single ad slot, or a creative.
      id: AdSize
      properties:
        height:
          description: The height of the ad slot in pixels. This field will be present only when size type is `PIXEL`.
          type: string
          format: int64
        width:
          type: string
          description: The width of the ad slot in pixels. This field will be present only when size type is `PIXEL`.
          format: int64
        sizeType:
          type: string
          description: The size type of the ad slot.
          enum:
            - SIZE_TYPE_UNSPECIFIED
            - PIXEL
            - INTERSTITIAL
            - NATIVE
            - FLUID
          enumDescriptions:
            - A placeholder for an undefined size type.
            - Ad slot with size specified by height and width in pixels.
            - Special size to describe an interstitial ad slot.
            - Native (mobile) ads rendered by the publisher.
            - Fluid size (for example, responsive size) can be resized automatically with the change of outside environment.
    RowDimensions:
      properties:
        publisherIdentifier:
          type: string
          description: The publisher identifier for this row, if a breakdown by [BreakdownDimension.PUBLISHER_IDENTIFIER](https://developers.google.com/authorized-buyers/apis/reference/rest/v2beta1/bidders.accounts.filterSets#FilterSet.BreakdownDimension) was requested.
        timeInterval:
          $ref: '#/components/schemas/TimeInterval'
          description: The time interval that this row represents.
      type: object
      description: A response may include multiple rows, breaking down along various dimensions. Encapsulates the values of all dimensions for a given row.
      id: RowDimensions
    Product:
      id: Product
      type: object
      description: A product is a segment of inventory that a seller wants to sell. It is associated with certain terms and targeting information which helps the buyer know more about the inventory.
      properties:
        displayName:
          description: The display name for this product as set by the seller.
          type: string
        publisherProfileId:
          type: string
          description: An ID which can be used by the Publisher Profile API to get more information about the seller that created this product.
        updateTime:
          type: string
          description: Time of last update.
          format: google-datetime
        syndicationProduct:
          enum:
            - SYNDICATION_PRODUCT_UNSPECIFIED
            - CONTENT
            - MOBILE
            - VIDEO
            - GAMES
          enumDescriptions:
            - A placeholder for an undefined syndication product.
            - This typically represents a web page.
            - This represents a mobile property.
            - This represents video ad formats.
            - This represents ads shown within games.
          type: string
          description: The syndication product associated with the deal.
        availableStartTime:
          type: string
          description: Inventory availability dates. The start time will be truncated to seconds during serving. Thus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will be truncated to 3:23:34 when serving.
          format: google-datetime
        terms:
          $ref: '#/components/schemas/DealTerms'
          description: The negotiable terms of the deal.
        creatorContacts:
          type: array
          description: Optional contact information for the creator of this product.
          items:
            $ref: '#/components/schemas/ContactInformation'
        hasCreatorSignedOff:
          type: boolean
          description: If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.
        productId:
          type: string
          description: The unique ID for the product.
        productRevision:
          description: The revision number of the product (auto-assigned by Marketplace).
          type: string
          format: int64
        createTime:
          type: string
          description: Creation time.
          format: google-datetime
        seller:
          $ref: '#/components/schemas/Seller'
          description: Information about the seller that created this product.
        availableEndTime:
          format: google-datetime
          type: string
          description: The proposed end time for the deal. The field will be truncated to the order of seconds during serving.
        webPropertyCode:
          type: string
          description: The web-property code for the seller. This needs to be copied as is when adding a new deal to a proposal.
        targetingCriterion:
          items:
            $ref: '#/components/schemas/TargetingCriteria'
          type: array
          description: Targeting that is shared between the buyer and the seller. Each targeting criterion has a specified key and for each key there is a list of inclusion value or exclusion values.
    ListProposalsResponse:
      properties:
        proposals:
          items:
            $ref: '#/components/schemas/Proposal'
          type: array
          description: The list of proposals.
        nextPageToken:
          type: string
          description: Continuation token for fetching the next page of results.
      id: ListProposalsResponse
      description: Response message for listing proposals.
      type: object
    AppContext:
      description: Output only. The app type the restriction applies to for mobile device.
      properties:
        appTypes:
          description: The app types this restriction applies to.
          type: array
          items:
            enumDescriptions:
              - Native app context.
              - Mobile web app context.
            type: string
            enum:
              - NATIVE
              - WEB
      id: AppContext
      type: object
    CreativeRestrictions:
      properties:
        creativeSpecifications:
          items:
            $ref: '#/components/schemas/CreativeSpecification'
          type: array
        skippableAdType:
          enumDescriptions:
            - A placeholder for an undefined skippable ad type.
            - This video ad can be skipped after 5 seconds.
            - This video ad can be skipped after 5 seconds, and is counted as engaged view after 30 seconds. The creative is hosted on YouTube only, and viewcount of the YouTube video increments after the engaged view.
            - This video ad is not skippable.
          enum:
            - SKIPPABLE_AD_TYPE_UNSPECIFIED
            - SKIPPABLE
            - INSTREAM_SELECT
            - NOT_SKIPPABLE
          description: Skippable video ads allow viewers to skip ads after 5 seconds.
          type: string
        creativeFormat:
          type: string
          enum:
            - CREATIVE_FORMAT_UNSPECIFIED
            - DISPLAY
            - VIDEO
          description: The format of the environment that the creatives will be displayed in.
          enumDescriptions:
            - A placeholder for an undefined creative format.
            - A creative that will be displayed in environments such as a browser.
            - A video creative that will be displayed in environments such as a video player.
      description: Represents creative restrictions associated to Programmatic Guaranteed/ Preferred Deal in Ad Manager. This doesn't apply to Private Auction and AdX Preferred Deals.
      type: object
      id: CreativeRestrictions
    CancelNegotiationRequest:
      type: object
      description: Request to cancel an ongoing negotiation.
      properties: {}
      id: CancelNegotiationRequest
    ListFilteredBidRequestsResponse:
      id: ListFilteredBidRequestsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListFilteredBidRequestsRequest.pageToken field in the subsequent call to the filteredBidRequests.list method to retrieve the next page of results.
        calloutStatusRows:
          items:
            $ref: '#/components/schemas/CalloutStatusRow'
          description: List of rows, with counts of filtered bid requests aggregated by callout status.
          type: array
      description: Response message for listing all reasons that bid requests were filtered and not sent to the buyer.
    MetricValue:
      description: A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled).
      id: MetricValue
      type: object
      properties:
        variance:
          format: int64
          type: string
          description: 'The variance (for example, square of the standard deviation) of the metric value. If value is exact, variance is 0. Can be used to calculate margin of error as a percentage of value, using the following formula, where Z is the standard constant that depends on the preferred size of the confidence interval (for example, for 90% confidence interval, use Z = 1.645): marginOfError = 100 * Z * sqrt(variance) / value'
        value:
          description: The expected value of the metric.
          format: int64
          type: string
    ClientUserInvitation:
      id: ClientUserInvitation
      description: An invitation for a new client user to get access to the Authorized Buyers UI. All fields are required unless otherwise specified.
      type: object
      properties:
        clientAccountId:
          description: Numerical account ID of the client buyer that the invited user is associated with. The value of this field is ignored in create operations.
          type: string
          format: int64
        email:
          type: string
          description: The email address to which the invitation is sent. Email addresses should be unique among all client users under each sponsor buyer.
        invitationId:
          type: string
          format: int64
          description: The unique numerical ID of the invitation that is sent to the user. The value of this field is ignored in create operations.
    ListLosingBidsResponse:
      description: Response message for listing all reasons that bids lost in the auction.
      type: object
      id: ListLosingBidsResponse
      properties:
        creativeStatusRows:
          description: List of rows, with counts of losing bids aggregated by loss reason (for example, creative status).
          items:
            $ref: '#/components/schemas/CreativeStatusRow'
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListLosingBidsRequest.pageToken field in the subsequent call to the losingBids.list method to retrieve the next page of results.
          type: string
    PublisherProfile:
      id: PublisherProfile
      properties:
        topHeadlines:
          description: Up to three key metrics and rankings. Max 100 characters each. For example "#1 Mobile News Site for 20 Straight Months".
          items:
            type: string
          type: array
        samplePageUrl:
          description: URL to a sample content page.
          type: string
        googlePlusUrl:
          description: URL to publisher's Google+ page.
          type: string
        directDealsContact:
          type: string
          description: Contact information for direct reservation deals. This is free text entered by the publisher and may include information like names, phone numbers and email addresses.
        domains:
          type: array
          description: The list of domains represented in this publisher profile. Empty if this is a parent profile. These are top private domains, meaning that these will not contain a string like "photos.google.co.uk/123", but will instead contain "google.co.uk".
          items:
            type: string
        overview:
          description: Overview of the publisher.
          type: string
        mediaKitUrl:
          type: string
          description: URL to additional marketing and sales materials.
        programmaticDealsContact:
          description: Contact information for programmatic deals. This is free text entered by the publisher and may include information like names, phone numbers and email addresses.
          type: string
        buyerPitchStatement:
          type: string
          description: Statement explaining what's unique about publisher's business, and why buyers should partner with the publisher.
        publisherProfileId:
          type: string
          description: Unique ID for publisher profile.
        logoUrl:
          description: A Google public URL to the logo for this publisher profile. The logo is stored as a PNG, JPG, or GIF image.
          type: string
        isParent:
          type: boolean
          description: Indicates if this profile is the parent profile of the seller. A parent profile represents all the inventory from the seller, as opposed to child profile that is created to brand a portion of inventory. One seller should have only one parent publisher profile, and can have multiple child profiles. Publisher profiles for the same seller will have same value of field google.ads.adexchange.buyer.v2beta1.PublisherProfile.seller. See https://support.google.com/admanager/answer/6035806 for details.
        seller:
          $ref: '#/components/schemas/Seller'
          description: Seller of the publisher profile.
        mobileApps:
          description: The list of apps represented in this publisher profile. Empty if this is a parent profile.
          items:
            $ref: '#/components/schemas/PublisherProfileMobileApplication'
          type: array
        audienceDescription:
          type: string
          description: Description on the publisher's audience.
        rateCardInfoUrl:
          type: string
          description: URL to a publisher rate card.
        displayName:
          type: string
          description: Name of the publisher profile.
      description: Represents a publisher profile (https://support.google.com/admanager/answer/6035806) in Marketplace. All fields are read only. All string fields are free-form text entered by the publisher unless noted otherwise.
      type: object
    PricePerBuyer:
      type: object
      id: PricePerBuyer
      description: Used to specify pricing rules for buyers/advertisers. Each PricePerBuyer in a product can become 0 or 1 deals. To check if there is a PricePerBuyer for a particular buyer or buyer/advertiser pair, we look for the most specific matching rule - we first look for a rule matching the buyer and advertiser, next a rule with the buyer but an empty advertiser list, and otherwise look for a matching rule where no buyer is set.
      properties:
        price:
          description: The specified price.
          $ref: '#/components/schemas/Price'
        buyer:
          description: The buyer who will pay this price. If unset, all buyers can pay this price (if the advertisers match, and there's no more specific rule matching the buyer).
          $ref: '#/components/schemas/Buyer'
        advertiserIds:
          type: array
          items:
            type: string
          description: The list of advertisers for this price when associated with this buyer. If empty, all advertisers with this buyer pay this price.
    PublisherProfileMobileApplication:
      type: object
      properties:
        name:
          type: string
          description: The name of the app.
        appStore:
          enum:
            - APP_STORE_TYPE_UNSPECIFIED
            - APPLE_ITUNES
            - GOOGLE_PLAY
            - ROKU
            - AMAZON_FIRETV
            - PLAYSTATION
            - XBOX
            - SAMSUNG_TV
            - AMAZON
            - OPPO
            - SAMSUNG
            - VIVO
            - XIAOMI
          enumDescriptions:
            - A placeholder for an unknown app store.
            - Apple iTunes
            - Google Play
            - Roku
            - Amazon Fire TV
            - Playstation
            - Xbox
            - Samsung TV
            - Amazon Appstore
            - OPPO App Market
            - Samsung Galaxy Store
            - VIVO App Store
            - Xiaomi GetApps
          description: The app store the app belongs to.
          type: string
        externalAppId:
          description: The external ID for the app from its app store.
          type: string
      description: A mobile application that contains a external app ID, name, and app store.
      id: PublisherProfileMobileApplication
    TargetingCriteria:
      properties:
        exclusions:
          items:
            $ref: '#/components/schemas/TargetingValue'
          type: array
          description: The list of values to exclude from targeting. Each value is AND'd together.
        inclusions:
          type: array
          items:
            $ref: '#/components/schemas/TargetingValue'
          description: The list of value to include as part of the targeting. Each value is OR'd together.
        key:
          description: The key representing the shared targeting criterion. Targeting criteria defined by Google ad servers will begin with GOOG_. Third parties may define their own keys. A list of permissible keys along with the acceptable values will be provided as part of the external documentation.
          type: string
      description: Advertisers can target different attributes of an ad slot. For example, they can choose to show ads only if the user is in the U.S. Such targeting criteria can be specified as part of Shared Targeting.
      id: TargetingCriteria
      type: object
    DealPauseStatus:
      type: object
      description: Tracks which parties (if any) have paused a deal. The deal is considered paused if either hasBuyerPaused or hasSellPaused is true.
      id: DealPauseStatus
      properties:
        hasBuyerPaused:
          description: True, if the buyer has paused the deal unilaterally.
          type: boolean
        sellerPauseReason:
          description: The seller's reason for pausing, if the seller paused the deal.
          type: string
        hasSellerPaused:
          type: boolean
          description: True, if the seller has paused the deal unilaterally.
        buyerPauseReason:
          type: string
          description: The buyer's reason for pausing, if the buyer paused the deal.
        firstPausedBy:
          description: The role of the person who first paused this deal.
          enumDescriptions:
            - A placeholder for an undefined buyer/seller role.
            - Specifies the role as buyer.
            - Specifies the role as seller.
          enum:
            - BUYER_SELLER_ROLE_UNSPECIFIED
            - BUYER
            - SELLER
          type: string
    Proposal:
      description: 'Represents a proposal in the Marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Note: You can''t update, create, or otherwise modify Private Auction deals through the API. Fields are updatable unless noted otherwise.'
      id: Proposal
      type: object
      properties:
        buyer:
          $ref: '#/components/schemas/Buyer'
          description: 'Reference to the buyer on the proposal. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.'
        sellerContacts:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ContactInformation'
          description: Output only. Contact information for the seller.
        isRenegotiating:
          description: Output only. True if the proposal is being renegotiated.
          type: boolean
          readOnly: true
        buyerContacts:
          description: Contact information for the buyer.
          items:
            $ref: '#/components/schemas/ContactInformation'
          type: array
        lastUpdaterOrCommentorRole:
          enumDescriptions:
            - A placeholder for an undefined buyer/seller role.
            - Specifies the role as buyer.
            - Specifies the role as seller.
          type: string
          readOnly: true
          description: Output only. The role of the last user that either updated the proposal or left a comment.
          enum:
            - BUYER_SELLER_ROLE_UNSPECIFIED
            - BUYER
            - SELLER
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The time when the proposal was last revised.
        billedBuyer:
          description: Output only. Reference to the buyer that will get billed for this proposal.
          $ref: '#/components/schemas/Buyer'
          readOnly: true
        buyerPrivateData:
          description: Private data for buyer. (hidden from seller).
          $ref: '#/components/schemas/PrivateData'
        termsAndConditions:
          description: Output only. The terms and conditions set by the publisher for this proposal.
          readOnly: true
          type: string
        originatorRole:
          enumDescriptions:
            - A placeholder for an undefined buyer/seller role.
            - Specifies the role as buyer.
            - Specifies the role as seller.
          readOnly: true
          enum:
            - BUYER_SELLER_ROLE_UNSPECIFIED
            - BUYER
            - SELLER
          description: Output only. Indicates whether the buyer/seller created the proposal.
          type: string
        deals:
          description: The deals associated with this proposal. For Private Auction proposals (whose deals have NonGuaranteedAuctionTerms), there will only be one deal.
          items:
            $ref: '#/components/schemas/Deal'
          type: array
        privateAuctionId:
          type: string
          readOnly: true
          description: Output only. Private auction ID if this proposal is a private auction proposal.
        proposalId:
          readOnly: true
          description: Output only. The unique ID of the proposal.
          type: string
        proposalState:
          enumDescriptions:
            - A placeholder for an undefined proposal state.
            - The proposal is under negotiation or renegotiation.
            - The proposal has been accepted by the buyer.
            - The proposal has been accepted by the seller.
            - The negotiations on the proposal were canceled and the proposal was never finalized.
            - The proposal is finalized. During renegotiation, the proposal may not be in this state.
          description: Output only. The current state of the proposal.
          enum:
            - PROPOSAL_STATE_UNSPECIFIED
            - PROPOSED
            - BUYER_ACCEPTED
            - SELLER_ACCEPTED
            - CANCELED
            - FINALIZED
          readOnly: true
          type: string
        isSetupComplete:
          readOnly: true
          description: Output only. True, if the buyside inventory setup is complete for this proposal.
          type: boolean
        notes:
          items:
            $ref: '#/components/schemas/Note'
          description: Output only. The notes associated with this proposal.
          readOnly: true
          type: array
        displayName:
          type: string
          description: The name for the proposal.
        seller:
          $ref: '#/components/schemas/Seller'
          description: 'Reference to the seller on the proposal. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.'
        proposalRevision:
          format: int64
          type: string
          description: Output only. The revision number for the proposal. Each update to the proposal or the deal causes the proposal revision number to auto-increment. The buyer keeps track of the last revision number they know of and pass it in when making an update. If the head revision number on the server has since incremented, then an ABORTED error is returned during the update operation to let the buyer know that a subsequent update was made.
          readOnly: true
    DayPart:
      description: Daypart targeting message that specifies if the ad can be shown only during certain parts of a day/week.
      properties:
        dayOfWeek:
          description: The day of the week to target. If unspecified, applicable to all days.
          type: string
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          enumDescriptions:
            - A placeholder for when the day of the week is not specified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
        startTime:
          description: The starting time of day for the ad to show (minute level granularity). The start time is inclusive. This field is not available for filtering in PQL queries.
          $ref: '#/components/schemas/TimeOfDay'
        endTime:
          description: The ending time of the day for the ad to show (minute level granularity). The end time is exclusive. This field is not available for filtering in PQL queries.
          $ref: '#/components/schemas/TimeOfDay'
      id: DayPart
      type: object
    DayPartTargeting:
      type: object
      properties:
        dayParts:
          description: A list of day part targeting criterion.
          items:
            $ref: '#/components/schemas/DayPart'
          type: array
        timeZoneType:
          type: string
          enumDescriptions:
            - A placeholder for an undefined time zone source.
            - Use publisher's time zone setting.
            - Use the user's time zone setting.
          description: The timezone to use for interpreting the day part targeting.
          enum:
            - TIME_ZONE_SOURCE_UNSPECIFIED
            - PUBLISHER
            - USER
      description: Specifies the day part targeting criteria.
      id: DayPartTargeting
    HtmlContent:
      id: HtmlContent
      properties:
        height:
          description: The height of the HTML snippet in pixels.
          format: int32
          type: integer
        snippet:
          description: The HTML snippet that displays the ad when inserted in the web page.
          type: string
        width:
          description: The width of the HTML snippet in pixels.
          type: integer
          format: int32
      description: HTML content for a creative.
      type: object
    ListClientUsersResponse:
      id: ListClientUsersResponse
      type: object
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListClientUsersRequest.pageToken field in the subsequent call to the clients.invitations.list method to retrieve the next page of results.
          type: string
        users:
          items:
            $ref: '#/components/schemas/ClientUser'
          type: array
          description: The returned list of client users.
    ListBidResponseErrorsResponse:
      id: ListBidResponseErrorsResponse
      type: object
      properties:
        calloutStatusRows:
          description: List of rows, with counts of bid responses aggregated by callout status.
          type: array
          items:
            $ref: '#/components/schemas/CalloutStatusRow'
        nextPageToken:
          type: string
          description: A token to retrieve the next page of results. Pass this value in the ListBidResponseErrorsRequest.pageToken field in the subsequent call to the bidResponseErrors.list method to retrieve the next page of results.
      description: Response message for listing all reasons that bid responses resulted in an error.
    ListFilteredBidsResponse:
      description: Response message for listing all reasons that bids were filtered from the auction.
      id: ListFilteredBidsResponse
      type: object
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the ListFilteredBidsRequest.pageToken field in the subsequent call to the filteredBids.list method to retrieve the next page of results.
          type: string
        creativeStatusRows:
          description: List of rows, with counts of filtered bids aggregated by filtering reason (for example, creative status).
          items:
            $ref: '#/components/schemas/CreativeStatusRow'
          type: array
    CreativeSpecification:
      type: object
      properties:
        creativeCompanionSizes:
          items:
            $ref: '#/components/schemas/AdSize'
          description: Companion sizes may be filled in only when this is a video creative.
          type: array
        creativeSize:
          $ref: '#/components/schemas/AdSize'
          description: The size of the creative.
      id: CreativeSpecification
      description: Represents information for a creative that is associated with a Programmatic Guaranteed/Preferred Deal in Ad Manager.
    RealtimeTimeRange:
      properties:
        startTimestamp:
          description: The start timestamp of the real-time RTB metrics aggregation.
          format: google-datetime
          type: string
      type: object
      description: An open-ended realtime time range specified by the start timestamp. For filter sets that specify a realtime time range RTB metrics continue to be aggregated throughout the lifetime of the filter set.
      id: RealtimeTimeRange
    PauseProposalDealsRequest:
      type: object
      id: PauseProposalDealsRequest
      properties:
        reason:
          type: string
          description: 'The reason why the deals are being paused. This human readable message will be displayed in the seller''s UI. (Max length: 1000 unicode code units.)'
        externalDealIds:
          type: array
          description: The external_deal_id's of the deals to be paused. If empty, all the deals in the proposal will be paused.
          items:
            type: string
      description: Request message to pause serving for finalized deals.
    AcceptProposalRequest:
      description: Request to accept a proposal.
      id: AcceptProposalRequest
      properties:
        proposalRevision:
          description: The last known client revision number of the proposal.
          format: int64
          type: string
      type: object
    ImpressionMetricsRow:
      description: The set of metrics that are measured in numbers of impressions, representing how many impressions with the specified dimension values were considered eligible at each stage of the bidding funnel.
      id: ImpressionMetricsRow
      properties:
        availableImpressions:
          $ref: '#/components/schemas/MetricValue'
          description: The number of impressions available to the buyer on Ad Exchange. In some cases this value may be unavailable.
        rowDimensions:
          $ref: '#/components/schemas/RowDimensions'
          description: The values of all dimensions associated with metric values in this row.
        inventoryMatches:
          $ref: '#/components/schemas/MetricValue'
          description: The number of impressions that match the buyer's inventory pretargeting.
        responsesWithBids:
          description: The number of impressions for which Ad Exchange received a response from the buyer that contained at least one applicable bid.
          $ref: '#/components/schemas/MetricValue'
        successfulResponses:
          description: The number of impressions for which the buyer successfully sent a response to Ad Exchange.
          $ref: '#/components/schemas/MetricValue'
        bidRequests:
          description: The number of impressions for which Ad Exchange sent the buyer a bid request.
          $ref: '#/components/schemas/MetricValue'
      type: object
    Buyer:
      properties:
        accountId:
          description: Authorized Buyers account ID of the buyer.
          type: string
      description: Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.
      id: Buyer
      type: object
    Client:
      type: object
      properties:
        clientAccountId:
          format: int64
          type: string
          description: The globally-unique numerical ID of the client. The value of this field is ignored in create and update operations.
        visibleToSeller:
          description: Whether the client buyer will be visible to sellers.
          type: boolean
        entityId:
          format: int64
          description: Numerical identifier of the client entity. The entity can be an advertiser, a brand, or an agency. This identifier is unique among all the entities with the same type. The value of this field is ignored if the entity type is not provided. A list of all known advertisers with their identifiers is available in the [advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt) file. A list of all known brands with their identifiers is available in the [brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt) file. A list of all known agencies with their identifiers is available in the [agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt) file.
          type: string
        entityType:
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - ADVERTISER
            - BRAND
            - AGENCY
            - ENTITY_TYPE_UNCLASSIFIED
          type: string
          description: 'An optional field for specifying the type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.'
          enumDescriptions:
            - A placeholder for an undefined client entity type. Should not be used.
            - An advertiser.
            - A brand.
            - An advertising agency.
            - An explicit value for a client that was not yet classified as any particular entity.
        clientName:
          type: string
          description: Name used to represent this client to publishers. You may have multiple clients that map to the same entity, but for each client the combination of `clientName` and entity must be unique. You can specify this field as empty. Maximum length of 255 characters is allowed.
        entityName:
          type: string
          description: The name of the entity. This field is automatically fetched based on the type and ID. The value of this field is ignored in create and update operations.
        role:
          type: string
          enum:
            - CLIENT_ROLE_UNSPECIFIED
            - CLIENT_DEAL_VIEWER
            - CLIENT_DEAL_NEGOTIATOR
            - CLIENT_DEAL_APPROVER
          description: The role which is assigned to the client buyer. Each role implies a set of permissions granted to the client. Must be one of `CLIENT_DEAL_VIEWER`, `CLIENT_DEAL_NEGOTIATOR` or `CLIENT_DEAL_APPROVER`.
          enumDescriptions:
            - A placeholder for an undefined client role.
            - Users associated with this client can see publisher deal offers in the Marketplace. They can neither negotiate proposals nor approve deals. If this client is visible to publishers, they can send deal proposals to this client.
            - Users associated with this client can respond to deal proposals sent to them by publishers. They can also initiate deal proposals of their own.
            - Users associated with this client can approve eligible deals on your behalf. Some deals may still explicitly require publisher finalization. If this role is not selected, the sponsor buyer will need to manually approve each of their deals.
        partnerClientId:
          description: Optional arbitrary unique identifier of this client buyer from the standpoint of its Ad Exchange sponsor buyer. This field can be used to associate a client buyer with the identifier in the namespace of its sponsor buyer, lookup client buyers by that identifier and verify whether an Ad Exchange counterpart of a given client buyer already exists. If present, must be unique among all the client buyers for its Ad Exchange sponsor buyer.
          type: string
        status:
          type: string
          enum:
            - CLIENT_STATUS_UNSPECIFIED
            - DISABLED
            - ACTIVE
          description: The status of the client buyer.
          enumDescriptions:
            - A placeholder for an undefined client status.
            - A client that is currently disabled.
            - A client that is currently active.
      id: Client
      description: A client resource represents a client buyer—an agency, a brand, or an advertiser customer of the sponsor buyer. Users associated with the client buyer have restricted access to the Marketplace and certain other sections of the Authorized Buyers UI based on the role granted to the client buyer. All fields are required unless otherwise specified.
    DealServingMetadata:
      properties:
        dealPauseStatus:
          readOnly: true
          $ref: '#/components/schemas/DealPauseStatus'
          description: Output only. Tracks which parties (if any) have paused a deal.
      description: Message captures metadata about the serving status of a deal.
      id: DealServingMetadata
      type: object
    Disapproval:
      type: object
      description: Output only. The reason and details for a disapproval.
      properties:
        reason:
          enumDescriptions:
            - The length of the image animation is longer than allowed.
            - The click through URL doesn't work properly.
            - Something is wrong with the creative itself.
            - The ad makes a fourth party call to an unapproved vendor.
            - The ad targets consumers using remarketing lists and/or collects data for subsequent use in retargeting, but does not correctly declare that use.
            - Clicking on the ad leads to an error page.
            - The ad size when rendered does not match the declaration.
            - Ads with a white background require a border, which was missing.
            - The creative attempts to set cookies from a fourth party that is not certified.
            - The creative sets an LSO object.
            - The ad serves a blank.
            - The ad uses rotation, but not all destination URLs were declared.
            - There is a problem with the way the click macro is used.
            - The ad technology declaration is not accurate.
            - The actual destination URL does not match the declared destination URL.
            - The declared expanding direction does not match the actual direction.
            - The ad does not expand in a supported direction.
            - The ad uses an expandable vendor that is not supported.
            - There was an issue with the expandable ad.
            - The ad uses a video vendor that is not supported.
            - The length of the video ad is not supported.
            - The format of the video ad is not supported.
            - There was an issue with the video ad.
            - The landing page does not conform to Ad Exchange policy.
            - The ad or the landing page may contain malware.
            - The ad contains adult images or video content.
            - The ad contains text that is unclear or inaccurate.
            - The ad promotes counterfeit designer goods.
            - The ad causes a popup window to appear.
            - The creative does not follow policies set for the RTB protocol.
            - The ad contains a URL that uses a numeric IP address for the domain.
            - The ad or landing page contains unacceptable content because it initiated a software or executable download.
            - The ad set an unauthorized cookie on a Google domain.
            - Flash content found when no flash was declared.
            - SSL support declared but not working correctly.
            - Rich Media - Direct Download in Ad (ex. PDF download).
            - Maximum download size exceeded.
            - 'Bad Destination URL: Site Not Crawlable.'
            - 'Bad URL: Legal disapproval.'
            - Pharmaceuticals, Gambling, Alcohol not allowed and at least one was detected.
            - Dynamic DNS at Destination URL.
            - Poor Image / Video Quality.
            - For example, Image Trick to Click.
            - Incorrect Image Layout.
            - Irrelevant Image / Video.
            - Broken back button.
            - Misleading/Inaccurate claims in ads.
            - Restricted Products.
            - Unacceptable content. For example, malware.
            - The ad automatically redirects to the destination site without a click, or reports a click when none were made.
            - The ad uses URL protocols that do not exist or are not allowed on AdX.
            - Restricted content (for example, alcohol) was found in the ad but not declared.
            - Violation of the remarketing list policy.
            - The destination site's robot.txt file prevents it from being crawled.
            - Click to download must link to an app.
            - A review extension must be an accurate review.
            - Sexually explicit content.
            - The ad tries to gain an unfair traffic advantage.
            - The ad tries to circumvent Google's advertising systems.
            - The ad promotes dangerous knives.
            - The ad promotes explosives.
            - The ad promotes guns & parts.
            - The ad promotes recreational drugs/services & related equipment.
            - The ad promotes tobacco products/services & related equipment.
            - The ad promotes weapons.
            - The ad is unclear or irrelevant to the destination site.
            - The ad does not meet professional standards.
            - The promotion is unnecessarily difficult to navigate.
            - Violation of Google's policy for interest-based ads.
            - Misuse of personal information.
            - Omission of relevant information.
            - Unavailable promotions.
            - Misleading or unrealistic promotions.
            - Offensive or inappropriate content.
            - Capitalizing on sensitive events.
            - Shocking content.
            - Products & Services that enable dishonest behavior.
            - The ad does not meet technical requirements.
            - Restricted political content.
            - Unsupported content.
            - Invalid bidding method.
            - Video length exceeds limits.
            - 'Unacceptable content: Japanese healthcare.'
            - Online pharmacy ID required.
            - 'Unacceptable content: Abortion.'
            - 'Unacceptable content: Birth control.'
            - Restricted in China.
            - 'Unacceptable content: Korean healthcare.'
            - Non-family safe or adult content.
            - Clinical trial recruitment.
            - Maximum number of HTTP calls exceeded.
            - Maximum number of cookies exceeded.
            - Financial service ad does not adhere to specifications.
            - Flash content was found in an unsupported context.
            - Misuse by an Open Measurement SDK script.
            - Use of an Open Measurement SDK vendor not on approved vendor list.
            - Unacceptable landing page.
            - Unsupported language.
            - Non-SSL compliant.
            - Temporary pausing of creative.
            - Promotes services related to bail bonds.
            - Promotes speculative and/or experimental medical treatments.
          type: string
          enum:
            - LENGTH_OF_IMAGE_ANIMATION
            - BROKEN_URL
            - MEDIA_NOT_FUNCTIONAL
            - INVALID_FOURTH_PARTY_CALL
            - INCORRECT_REMARKETING_DECLARATION
            - LANDING_PAGE_ERROR
            - AD_SIZE_DOES_NOT_MATCH_AD_SLOT
            - NO_BORDER
            - FOURTH_PARTY_BROWSER_COOKIES
            - LSO_OBJECTS
            - BLANK_CREATIVE
            - DESTINATION_URLS_UNDECLARED
            - PROBLEM_WITH_CLICK_MACRO
            - INCORRECT_AD_TECHNOLOGY_DECLARATION
            - INCORRECT_DESTINATION_URL_DECLARATION
            - EXPANDABLE_INCORRECT_DIRECTION
            - EXPANDABLE_DIRECTION_NOT_SUPPORTED
            - EXPANDABLE_INVALID_VENDOR
            - EXPANDABLE_FUNCTIONALITY
            - VIDEO_INVALID_VENDOR
            - VIDEO_UNSUPPORTED_LENGTH
            - VIDEO_UNSUPPORTED_FORMAT
            - VIDEO_FUNCTIONALITY
            - LANDING_PAGE_DISABLED
            - MALWARE_SUSPECTED
            - ADULT_IMAGE_OR_VIDEO
            - INACCURATE_AD_TEXT
            - COUNTERFEIT_DESIGNER_GOODS
            - POP_UP
            - INVALID_RTB_PROTOCOL_USAGE
            - RAW_IP_ADDRESS_IN_SNIPPET
            - UNACCEPTABLE_CONTENT_SOFTWARE
            - UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN
            - UNDECLARED_FLASH_OBJECTS
            - INVALID_SSL_DECLARATION
            - DIRECT_DOWNLOAD_IN_AD
            - MAXIMUM_DOWNLOAD_SIZE_EXCEEDED
            - DESTINATION_URL_SITE_NOT_CRAWLABLE
            - BAD_URL_LEGAL_DISAPPROVAL
            - PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED
            - DYNAMIC_DNS_AT_DESTINATION_URL
            - POOR_IMAGE_OR_VIDEO_QUALITY
            - UNACCEPTABLE_IMAGE_CONTENT
            - INCORRECT_IMAGE_LAYOUT
            - IRRELEVANT_IMAGE_OR_VIDEO
            - DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK
            - MISLEADING_CLAIMS_IN_AD
            - RESTRICTED_PRODUCTS
            - UNACCEPTABLE_CONTENT
            - AUTOMATED_AD_CLICKING
            - INVALID_URL_PROTOCOL
            - UNDECLARED_RESTRICTED_CONTENT
            - INVALID_REMARKETING_LIST_USAGE
            - DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT
            - CLICK_TO_DOWNLOAD_NOT_AN_APP
            - INACCURATE_REVIEW_EXTENSION
            - SEXUALLY_EXPLICIT_CONTENT
            - GAINING_AN_UNFAIR_ADVANTAGE
            - GAMING_THE_GOOGLE_NETWORK
            - DANGEROUS_PRODUCTS_KNIVES
            - DANGEROUS_PRODUCTS_EXPLOSIVES
            - DANGEROUS_PRODUCTS_GUNS
            - DANGEROUS_PRODUCTS_DRUGS
            - DANGEROUS_PRODUCTS_TOBACCO
            - DANGEROUS_PRODUCTS_WEAPONS
            - UNCLEAR_OR_IRRELEVANT_AD
            - PROFESSIONAL_STANDARDS
            - DYSFUNCTIONAL_PROMOTION
            - INVALID_INTEREST_BASED_AD
            - MISUSE_OF_PERSONAL_INFORMATION
            - OMISSION_OF_RELEVANT_INFORMATION
            - UNAVAILABLE_PROMOTIONS
            - MISLEADING_PROMOTIONS
            - INAPPROPRIATE_CONTENT
            - SENSITIVE_EVENTS
            - SHOCKING_CONTENT
            - ENABLING_DISHONEST_BEHAVIOR
            - TECHNICAL_REQUIREMENTS
            - RESTRICTED_POLITICAL_CONTENT
            - UNSUPPORTED_CONTENT
            - INVALID_BIDDING_METHOD
            - VIDEO_TOO_LONG
            - VIOLATES_JAPANESE_PHARMACY_LAW
            - UNACCREDITED_PET_PHARMACY
            - ABORTION
            - CONTRACEPTIVES
            - NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA
            - KCDSP_REGISTRATION
            - NOT_FAMILY_SAFE
            - CLINICAL_TRIAL_RECRUITMENT
            - MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED
            - MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED
            - PERSONAL_LOANS
            - UNSUPPORTED_FLASH_CONTENT
            - MISUSE_BY_OMID_SCRIPT
            - NON_WHITELISTED_OMID_VENDOR
            - DESTINATION_EXPERIENCE
            - UNSUPPORTED_LANGUAGE
            - NON_SSL_COMPLIANT
            - TEMPORARY_PAUSE
            - BAIL_BONDS
            - EXPERIMENTAL_MEDICAL_TREATMENT
          description: The categorized reason for disapproval.
        details:
          items:
            type: string
          type: array
          description: Additional details about the reason for disapproval.
      id: Disapproval
    Deal:
      id: Deal
      type: object
      properties:
        updateTime:
          type: string
          description: Output only. The time when the deal was last updated.
          readOnly: true
          format: google-datetime
        isSetupComplete:
          type: boolean
          description: Output only. True, if the buyside inventory setup is complete for this deal.
          readOnly: true
        availableEndTime:
          format: google-datetime
          description: Proposed flight end time of the deal. This will generally be stored in a granularity of a second. A value is not required for Private Auction deals or Preferred Deals.
          type: string
        webPropertyCode:
          type: string
          description: The web property code for the seller copied over from the product.
        createProductRevision:
          format: int64
          type: string
          description: 'Optional. Revision number of the product that the deal was created from. If present on create, and the server `product_revision` has advanced since the passed-in `create_product_revision`, an `ABORTED` error will be returned. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.'
        dealId:
          readOnly: true
          type: string
          description: Output only. A unique deal ID for the deal (server-assigned).
        proposalId:
          type: string
          description: Output only. ID of the proposal that this deal is part of.
          readOnly: true
        externalDealId:
          type: string
          readOnly: true
          description: Output only. The external deal ID assigned to this deal once the deal is finalized. This is the deal ID that shows up in serving/reporting etc.
        displayName:
          type: string
          description: The name of the deal.
        createProductId:
          type: string
          description: 'The product ID from which this deal was created. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.'
        buyerPrivateData:
          $ref: '#/components/schemas/PrivateData'
          description: Buyer private data (hidden from seller).
        availableStartTime:
          type: string
          format: google-datetime
          description: Optional. Proposed flight start time of the deal. This will generally be stored in the granularity of one second since deal serving starts at seconds boundary. Any time specified with more granularity (for example, in milliseconds) will be truncated towards the start of time in seconds.
        programmaticCreativeSource:
          enum:
            - PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED
            - ADVERTISER
            - PUBLISHER
          description: Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by buyer.
          enumDescriptions:
            - A placeholder for an undefined programmatic creative source.
            - The advertiser provides the creatives.
            - The publisher provides the creatives to be served.
          readOnly: true
          type: string
        dealTerms:
          description: The negotiable terms of the deal.
          $ref: '#/components/schemas/DealTerms'
        creativeSafeFrameCompatibility:
          readOnly: true
          enumDescriptions:
            - A placeholder for an undefined creative safe-frame compatibility.
            - The creatives need to be compatible with the safe frame option.
            - The creatives can be incompatible with the safe frame option.
          description: Output only. Specifies whether the creative is safeFrame compatible.
          enum:
            - CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED
            - COMPATIBLE
            - INCOMPATIBLE
          type: string
        sellerContacts:
          readOnly: true
          type: array
          description: Output only. Seller contact information for the deal.
          items:
            $ref: '#/components/schemas/ContactInformation'
        creativePreApprovalPolicy:
          type: string
          description: Output only. Specifies the creative pre-approval policy.
          enumDescriptions:
            - A placeholder for an undefined creative pre-approval policy.
            - The seller needs to approve each creative before it can serve.
            - The seller does not need to approve each creative before it can serve.
          enum:
            - CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED
            - SELLER_PRE_APPROVAL_REQUIRED
            - SELLER_PRE_APPROVAL_NOT_REQUIRED
          readOnly: true
        createTime:
          description: Output only. The time of the deal creation.
          type: string
          format: google-datetime
          readOnly: true
        targeting:
          $ref: '#/components/schemas/MarketplaceTargeting'
          description: Output only. Specifies the subset of inventory targeted by the deal.
          readOnly: true
        creativeRestrictions:
          $ref: '#/components/schemas/CreativeRestrictions'
          description: Output only. Restricitions about the creatives associated with the deal (for example, size) This is available for Programmatic Guaranteed/Preferred Deals in Ad Manager.
          readOnly: true
        syndicationProduct:
          enumDescriptions:
            - A placeholder for an undefined syndication product.
            - This typically represents a web page.
            - This represents a mobile property.
            - This represents video ad formats.
            - This represents ads shown within games.
          description: 'The syndication product associated with the deal. Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.'
          type: string
          enum:
            - SYNDICATION_PRODUCT_UNSPECIFIED
            - CONTENT
            - MOBILE
            - VIDEO
            - GAMES
        dealServingMetadata:
          $ref: '#/components/schemas/DealServingMetadata'
          readOnly: true
          description: Output only. Metadata about the serving status of this deal.
        targetingCriterion:
          type: array
          items:
            $ref: '#/components/schemas/TargetingCriteria'
          description: The shared targeting visible to buyers and sellers. Each shared targeting entity is AND'd together.
        deliveryControl:
          description: The set of fields around delivery control that are interesting for a buyer to see but are non-negotiable. These are set by the publisher.
          $ref: '#/components/schemas/DeliveryControl'
        description:
          description: Description for the deal terms.
          type: string
      description: A deal represents a segment of inventory for displaying ads on. A proposal can contain multiple deals. A deal contains the terms and targeting information that is used for serving.
    BidMetricsRow:
      properties:
        viewableImpressions:
          $ref: '#/components/schemas/MetricValue'
          description: The number of bids for which the corresponding impression was viewable (as defined by Active View).
        measurableImpressions:
          description: The number of bids for which the corresponding impression was measurable for viewability (as defined by Active View).
          $ref: '#/components/schemas/MetricValue'
        bids:
          $ref: '#/components/schemas/MetricValue'
          description: The number of bids that Ad Exchange received from the buyer.
        rowDimensions:
          $ref: '#/components/schemas/RowDimensions'
          description: The values of all dimensions associated with metric values in this row.
        reachedQueries:
          $ref: '#/components/schemas/MetricValue'
          description: The number of bids that won the auction and also won the mediation waterfall (if any).
        billedImpressions:
          description: The number of bids for which the buyer was billed.
          $ref: '#/components/schemas/MetricValue'
        bidsInAuction:
          description: The number of bids that were permitted to compete in the auction.
          $ref: '#/components/schemas/MetricValue'
        impressionsWon:
          description: The number of bids that won the auction.
          $ref: '#/components/schemas/MetricValue'
      id: BidMetricsRow
      description: The set of metrics that are measured in numbers of bids, representing how many bids with the specified dimension values were considered eligible at each stage of the bidding funnel;
      type: object
    PrivateData:
      description: Buyers are allowed to store certain types of private data in a proposal/deal.
      id: PrivateData
      type: object
      properties:
        referenceId:
          type: string
          description: 'A buyer or seller specified reference ID. This can be queried in the list operations (max-length: 1024 unicode code units).'
    MobileApplicationTargeting:
      type: object
      description: Mobile application targeting settings.
      properties:
        firstPartyTargeting:
          description: Publisher owned apps to be targeted or excluded by the publisher to display the ads in.
          $ref: '#/components/schemas/FirstPartyMobileApplicationTargeting'
      id: MobileApplicationTargeting
    SecurityContext:
      description: Output only. A security context.
      type: object
      properties:
        securities:
          description: The security types in this context.
          type: array
          items:
            enum:
              - INSECURE
              - SSL
            enumDescriptions:
              - Matches impressions that require insecure compatibility.
              - Matches impressions that require SSL compatibility.
            type: string
      id: SecurityContext
    WatchCreativeRequest:
      description: A request for watching changes to creative Status.
      id: WatchCreativeRequest
      properties:
        topic:
          description: The Pub/Sub topic to publish notifications to. This topic must already exist and must give permission to ad-exchange-buyside-reports@google.com to write to the topic. This should be the full resource name in "projects/{project_id}/topics/{topic_id}" format.
          type: string
      type: object
    ServingRestriction:
      type: object
      properties:
        status:
          type: string
          enum:
            - STATUS_UNSPECIFIED
            - DISAPPROVAL
            - PENDING_REVIEW
          description: The status of the creative in this context (for example, it has been explicitly disapproved or is pending review).
          enumDescriptions:
            - The status is not known.
            - The ad was disapproved in this context.
            - The ad is pending review in this context.
        disapprovalReasons:
          items:
            $ref: '#/components/schemas/Disapproval'
          type: array
          description: Any disapprovals bound to this restriction. Only present if status=DISAPPROVED. Can be used to filter the response of the creatives.list method. Deprecated; use disapproval field instead.
        disapproval:
          description: Disapproval bound to this restriction. Only present if status=DISAPPROVED. Can be used to filter the response of the creatives.list method.
          $ref: '#/components/schemas/Disapproval'
        contexts:
          items:
            $ref: '#/components/schemas/ServingContext'
          description: The contexts for the restriction.
          type: array
      id: ServingRestriction
      description: Output only. A representation of the status of an ad in a specific context. A context here relates to where something ultimately serves (for example, a user or publisher geo, a platform, an HTTPS versus HTTP request, or the type of auction).
    ServingContext:
      id: ServingContext
      properties:
        all:
          enum:
            - SIMPLE_CONTEXT
          description: Matches all contexts.
          type: string
          enumDescriptions:
            - A simple context.
        location:
          description: Matches impressions coming from users *or* publishers in a specific location.
          $ref: '#/components/schemas/LocationContext'
        auctionType:
          description: Matches impressions for a particular auction type.
          $ref: '#/components/schemas/AuctionContext'
        securityType:
          $ref: '#/components/schemas/SecurityContext'
          description: Matches impressions for a particular security type.
        appType:
          $ref: '#/components/schemas/AppContext'
          description: Matches impressions for a particular app type.
        platform:
          description: Matches impressions coming from a particular platform.
          $ref: '#/components/schemas/PlatformContext'
      description: The serving context for this restriction.
      type: object
    CalloutStatusRow:
      type: object
      description: The number of impressions with the specified dimension values where the corresponding bid request or bid response was not successful, as described by the specified callout status.
      id: CalloutStatusRow
      properties:
        calloutStatusId:
          description: The ID of the callout status. See [callout-status-codes](https://developers.google.com/authorized-buyers/rtb/downloads/callout-status-codes).
          type: integer
          format: int32
        impressionCount:
          description: The number of impressions for which there was a bid request or bid response with the specified callout status.
          $ref: '#/components/schemas/MetricValue'
        rowDimensions:
          description: The values of all dimensions associated with metric values in this row.
          $ref: '#/components/schemas/RowDimensions'
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/adexchange.buyer: Manage your Ad Exchange buyer account configuration
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    filter_sets:
      id: googleads.adexchangebuyer2.filter_sets
      name: filter_sets
      title: Filter_sets
      methods:
        bidders_accounts_filterSets_create:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_accounts_filterSets_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_accounts_filterSets_delete:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_accounts_filterSets_get:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_get:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_delete:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_create:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_accounts_filterSets_get'
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_accounts_filterSets_list'
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_filterSets_get'
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_filterSets_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_accounts_filterSets_create'
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_filterSets_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_accounts_filterSets_delete'
          - $ref: '#/components/x-stackQL-resources/filter_sets/methods/bidders_filterSets_delete'
    filtered_bid_requests:
      id: googleads.adexchangebuyer2.filtered_bid_requests
      name: filtered_bid_requests
      title: Filtered_bid_requests
      methods:
        bidders_accounts_filterSets_filteredBidRequests_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1filteredBidRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_filteredBidRequests_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1filteredBidRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/filtered_bid_requests/methods/bidders_accounts_filterSets_filteredBidRequests_list'
          - $ref: '#/components/x-stackQL-resources/filtered_bid_requests/methods/bidders_filterSets_filteredBidRequests_list'
        insert: []
        update: []
        delete: []
    details:
      id: googleads.adexchangebuyer2.details
      name: details
      title: Details
      methods:
        bidders_accounts_filterSets_filteredBids_details_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1filteredBids~1{creativeStatusId}~1details/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_filteredBids_details_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1filteredBids~1{creativeStatusId}~1details/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/details/methods/bidders_accounts_filterSets_filteredBids_details_list'
          - $ref: '#/components/x-stackQL-resources/details/methods/bidders_filterSets_filteredBids_details_list'
        insert: []
        update: []
        delete: []
    creatives:
      id: googleads.adexchangebuyer2.creatives
      name: creatives
      title: Creatives
      methods:
        bidders_accounts_filterSets_filteredBids_creatives_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1filteredBids~1{creativeStatusId}~1creatives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_filteredBids_creatives_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1filteredBids~1{creativeStatusId}~1creatives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_update:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives~1{creativeId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_get:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives~1{creativeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_watch:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives~1{creativeId}:watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_create:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_stopWatching:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives~1{creativeId}:stopWatching/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/creatives/methods/bidders_accounts_filterSets_filteredBids_creatives_list'
          - $ref: '#/components/x-stackQL-resources/creatives/methods/bidders_filterSets_filteredBids_creatives_list'
          - $ref: '#/components/x-stackQL-resources/creatives/methods/accounts_creatives_get'
          - $ref: '#/components/x-stackQL-resources/creatives/methods/accounts_creatives_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/creatives/methods/accounts_creatives_create'
        update: []
        delete: []
    filtered_bids:
      id: googleads.adexchangebuyer2.filtered_bids
      name: filtered_bids
      title: Filtered_bids
      methods:
        bidders_accounts_filterSets_filteredBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1filteredBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_filteredBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1filteredBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/filtered_bids/methods/bidders_accounts_filterSets_filteredBids_list'
          - $ref: '#/components/x-stackQL-resources/filtered_bids/methods/bidders_filterSets_filteredBids_list'
        insert: []
        update: []
        delete: []
    bid_responses_without_bids:
      id: googleads.adexchangebuyer2.bid_responses_without_bids
      name: bid_responses_without_bids
      title: Bid_responses_without_bids
      methods:
        bidders_accounts_filterSets_bidResponsesWithoutBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1bidResponsesWithoutBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_bidResponsesWithoutBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1bidResponsesWithoutBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bid_responses_without_bids/methods/bidders_accounts_filterSets_bidResponsesWithoutBids_list'
          - $ref: '#/components/x-stackQL-resources/bid_responses_without_bids/methods/bidders_filterSets_bidResponsesWithoutBids_list'
        insert: []
        update: []
        delete: []
    impression_metrics:
      id: googleads.adexchangebuyer2.impression_metrics
      name: impression_metrics
      title: Impression_metrics
      methods:
        bidders_accounts_filterSets_impressionMetrics_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1impressionMetrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_impressionMetrics_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1impressionMetrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/impression_metrics/methods/bidders_accounts_filterSets_impressionMetrics_list'
          - $ref: '#/components/x-stackQL-resources/impression_metrics/methods/bidders_filterSets_impressionMetrics_list'
        insert: []
        update: []
        delete: []
    bid_metrics:
      id: googleads.adexchangebuyer2.bid_metrics
      name: bid_metrics
      title: Bid_metrics
      methods:
        bidders_accounts_filterSets_bidMetrics_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1bidMetrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_bidMetrics_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1bidMetrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bid_metrics/methods/bidders_accounts_filterSets_bidMetrics_list'
          - $ref: '#/components/x-stackQL-resources/bid_metrics/methods/bidders_filterSets_bidMetrics_list'
        insert: []
        update: []
        delete: []
    losing_bids:
      id: googleads.adexchangebuyer2.losing_bids
      name: losing_bids
      title: Losing_bids
      methods:
        bidders_accounts_filterSets_losingBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1losingBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_losingBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1losingBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/losing_bids/methods/bidders_accounts_filterSets_losingBids_list'
          - $ref: '#/components/x-stackQL-resources/losing_bids/methods/bidders_filterSets_losingBids_list'
        insert: []
        update: []
        delete: []
    bid_response_errors:
      id: googleads.adexchangebuyer2.bid_response_errors
      name: bid_response_errors
      title: Bid_response_errors
      methods:
        bidders_accounts_filterSets_bidResponseErrors_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1bidResponseErrors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_bidResponseErrors_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1bidResponseErrors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bid_response_errors/methods/bidders_accounts_filterSets_bidResponseErrors_list'
          - $ref: '#/components/x-stackQL-resources/bid_response_errors/methods/bidders_filterSets_bidResponseErrors_list'
        insert: []
        update: []
        delete: []
    non_billable_winning_bids:
      id: googleads.adexchangebuyer2.non_billable_winning_bids
      name: non_billable_winning_bids
      title: Non_billable_winning_bids
      methods:
        bidders_accounts_filterSets_nonBillableWinningBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1accounts~1{accountsId}~1filterSets~1{filterSetsId}~1nonBillableWinningBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bidders_filterSets_nonBillableWinningBids_list:
          operation:
            $ref: '#/paths/~1v2beta1~1bidders~1{biddersId}~1filterSets~1{filterSetsId}~1nonBillableWinningBids/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/non_billable_winning_bids/methods/bidders_accounts_filterSets_nonBillableWinningBids_list'
          - $ref: '#/components/x-stackQL-resources/non_billable_winning_bids/methods/bidders_filterSets_nonBillableWinningBids_list'
        insert: []
        update: []
        delete: []
    clients:
      id: googleads.adexchangebuyer2.clients
      name: clients
      title: Clients
      methods:
        accounts_clients_update:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_clients_get:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_clients_create:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_clients_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clients/methods/accounts_clients_get'
          - $ref: '#/components/x-stackQL-resources/clients/methods/accounts_clients_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clients/methods/accounts_clients_create'
        update: []
        delete: []
    invitations:
      id: googleads.adexchangebuyer2.invitations
      name: invitations
      title: Invitations
      methods:
        accounts_clients_invitations_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}~1invitations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_clients_invitations_create:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}~1invitations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_clients_invitations_get:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}~1invitations~1{invitationId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/invitations/methods/accounts_clients_invitations_get'
          - $ref: '#/components/x-stackQL-resources/invitations/methods/accounts_clients_invitations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/invitations/methods/accounts_clients_invitations_create'
        update: []
        delete: []
    users:
      id: googleads.adexchangebuyer2.users
      name: users
      title: Users
      methods:
        accounts_clients_users_get:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}~1users~1{userId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_clients_users_update:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}~1users~1{userId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_clients_users_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1clients~1{clientAccountId}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/accounts_clients_users_get'
          - $ref: '#/components/x-stackQL-resources/users/methods/accounts_clients_users_list'
        insert: []
        update: []
        delete: []
    publisher_profiles:
      id: googleads.adexchangebuyer2.publisher_profiles
      name: publisher_profiles
      title: Publisher_profiles
      methods:
        accounts_publisherProfiles_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1publisherProfiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_publisherProfiles_get:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1publisherProfiles~1{publisherProfileId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/publisher_profiles/methods/accounts_publisherProfiles_get'
          - $ref: '#/components/x-stackQL-resources/publisher_profiles/methods/accounts_publisherProfiles_list'
        insert: []
        update: []
        delete: []
    proposals:
      id: googleads.adexchangebuyer2.proposals
      name: proposals
      title: Proposals
      methods:
        accounts_proposals_resume:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}:resume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_create:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_accept:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}:accept/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_get:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_update:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_completeSetup:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}:completeSetup/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_cancelNegotiation:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}:cancelNegotiation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_proposals_pause:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}:pause/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/proposals/methods/accounts_proposals_get'
          - $ref: '#/components/x-stackQL-resources/proposals/methods/accounts_proposals_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/proposals/methods/accounts_proposals_create'
        update: []
        delete: []
    proposals__note:
      id: googleads.adexchangebuyer2.proposals__note
      name: proposals__note
      title: Proposals__note
      methods:
        accounts_proposals_addNote:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1proposals~1{proposalId}:addNote/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    finalized_proposals:
      id: googleads.adexchangebuyer2.finalized_proposals
      name: finalized_proposals
      title: Finalized_proposals
      methods:
        accounts_finalizedProposals_pause:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1finalizedProposals~1{proposalId}:pause/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_finalizedProposals_resume:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1finalizedProposals~1{proposalId}:resume/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_finalizedProposals_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1finalizedProposals/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/finalized_proposals/methods/accounts_finalizedProposals_list'
        insert: []
        update: []
        delete: []
    deal_associations:
      id: googleads.adexchangebuyer2.deal_associations
      name: deal_associations
      title: Deal_associations
      methods:
        accounts_creatives_dealAssociations_remove:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives~1{creativeId}~1dealAssociations:remove/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_dealAssociations_add:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives~1{creativeId}~1dealAssociations:add/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_creatives_dealAssociations_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1creatives~1{creativeId}~1dealAssociations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deal_associations/methods/accounts_creatives_dealAssociations_list'
        insert: []
        update: []
        delete: []
    products:
      id: googleads.adexchangebuyer2.products
      name: products
      title: Products
      methods:
        accounts_products_get:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1products~1{productId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accounts_products_list:
          operation:
            $ref: '#/paths/~1v2beta1~1accounts~1{accountId}~1products/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/products/methods/accounts_products_get'
          - $ref: '#/components/x-stackQL-resources/products/methods/accounts_products_list'
        insert: []
        update: []
        delete: []
paths:
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
    post:
      description: Creates the specified filter set for the account with the given account ID.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSet'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: query
          name: isTransient
          schema:
            type: boolean
      x-stackQL-resource: filter_sets
      x-stackQL-verb: insert
    get:
      description: Lists all filter sets for the account with the given account ID.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilterSetsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: filter_sets
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}:
    parameters: *ref_1
    delete:
      description: Deletes the requested filter set from the account with the given account ID.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: filter_sets
      x-stackQL-verb: delete
    get:
      description: Retrieves the requested filter set for the account with the given account ID.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSet'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: filter_sets
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBidRequests:
    parameters: *ref_1
    get:
      description: List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.filteredBidRequests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilteredBidRequestsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: filtered_bid_requests
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details:
    parameters: *ref_1
    get:
      description: List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.filteredBids.details.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreativeStatusBreakdownByDetailResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: path
          name: creativeStatusId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: details
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives:
    parameters: *ref_1
    get:
      description: List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.filteredBids.creatives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreativeStatusBreakdownByCreativeResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: path
          name: creativeStatusId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: creatives
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/filteredBids:
    parameters: *ref_1
    get:
      description: List all reasons for which bids were filtered, with the number of bids filtered for each reason.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.filteredBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilteredBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: filtered_bids
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponsesWithoutBids:
    parameters: *ref_1
    get:
      description: List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.bidResponsesWithoutBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBidResponsesWithoutBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: bid_responses_without_bids
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/impressionMetrics:
    parameters: *ref_1
    get:
      description: Lists all metrics that are measured in terms of number of impressions.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.impressionMetrics.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImpressionMetricsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: impression_metrics
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidMetrics:
    parameters: *ref_1
    get:
      description: Lists all metrics that are measured in terms of number of bids.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.bidMetrics.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBidMetricsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: bid_metrics
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/losingBids:
    parameters: *ref_1
    get:
      description: List all reasons for which bids lost in the auction, with the number of bids that lost for each reason.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.losingBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLosingBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: losing_bids
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/bidResponseErrors:
    parameters: *ref_1
    get:
      description: List all errors that occurred in bid responses, with the number of bid responses affected for each reason.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.bidResponseErrors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBidResponseErrorsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: bid_response_errors
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/accounts/{accountsId}/filterSets/{filterSetsId}/nonBillableWinningBids:
    parameters: *ref_1
    get:
      description: List all reasons for which winning bids were not billable, with the number of bids not billed for each reason.
      operationId: adexchangebuyer2.bidders.accounts.filterSets.nonBillableWinningBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNonBillableWinningBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: accountsId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: non_billable_winning_bids
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}:
    parameters: *ref_1
    get:
      description: Retrieves the requested filter set for the account with the given account ID.
      operationId: adexchangebuyer2.bidders.filterSets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSet'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: filter_sets
      x-stackQL-verb: select
    delete:
      description: Deletes the requested filter set from the account with the given account ID.
      operationId: adexchangebuyer2.bidders.filterSets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: filter_sets
      x-stackQL-verb: delete
  /v2beta1/bidders/{biddersId}/filterSets:
    parameters: *ref_1
    post:
      description: Creates the specified filter set for the account with the given account ID.
      operationId: adexchangebuyer2.bidders.filterSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSet'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: query
          name: isTransient
          schema:
            type: boolean
      x-stackQL-resource: filter_sets
      x-stackQL-verb: insert
    get:
      description: Lists all filter sets for the account with the given account ID.
      operationId: adexchangebuyer2.bidders.filterSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilterSetsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: filter_sets
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/nonBillableWinningBids:
    parameters: *ref_1
    get:
      description: List all reasons for which winning bids were not billable, with the number of bids not billed for each reason.
      operationId: adexchangebuyer2.bidders.filterSets.nonBillableWinningBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNonBillableWinningBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: non_billable_winning_bids
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBidRequests:
    parameters: *ref_1
    get:
      description: List all reasons that caused a bid request not to be sent for an impression, with the number of bid requests not sent for each reason.
      operationId: adexchangebuyer2.bidders.filterSets.filteredBidRequests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilteredBidRequestsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: filtered_bid_requests
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponseErrors:
    parameters: *ref_1
    get:
      description: List all errors that occurred in bid responses, with the number of bid responses affected for each reason.
      operationId: adexchangebuyer2.bidders.filterSets.bidResponseErrors.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBidResponseErrorsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: bid_response_errors
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidMetrics:
    parameters: *ref_1
    get:
      description: Lists all metrics that are measured in terms of number of bids.
      operationId: adexchangebuyer2.bidders.filterSets.bidMetrics.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBidMetricsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: bid_metrics
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids:
    parameters: *ref_1
    get:
      description: List all reasons for which bids were filtered, with the number of bids filtered for each reason.
      operationId: adexchangebuyer2.bidders.filterSets.filteredBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilteredBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: filtered_bids
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/details:
    parameters: *ref_1
    get:
      description: List all details associated with a specific reason for which bids were filtered, with the number of bids filtered for each detail.
      operationId: adexchangebuyer2.bidders.filterSets.filteredBids.details.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreativeStatusBreakdownByDetailResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: path
          name: creativeStatusId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: details
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/filteredBids/{creativeStatusId}/creatives:
    parameters: *ref_1
    get:
      description: List all creatives associated with a specific reason for which bids were filtered, with the number of bids filtered for each creative.
      operationId: adexchangebuyer2.bidders.filterSets.filteredBids.creatives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreativeStatusBreakdownByCreativeResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: path
          name: creativeStatusId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: creatives
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/losingBids:
    parameters: *ref_1
    get:
      description: List all reasons for which bids lost in the auction, with the number of bids that lost for each reason.
      operationId: adexchangebuyer2.bidders.filterSets.losingBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLosingBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: losing_bids
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/impressionMetrics:
    parameters: *ref_1
    get:
      description: Lists all metrics that are measured in terms of number of impressions.
      operationId: adexchangebuyer2.bidders.filterSets.impressionMetrics.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImpressionMetricsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: impression_metrics
      x-stackQL-verb: select
  /v2beta1/bidders/{biddersId}/filterSets/{filterSetsId}/bidResponsesWithoutBids:
    parameters: *ref_1
    get:
      description: List all reasons for which bid responses were considered to have no applicable bids, with the number of bid responses affected for each reason.
      operationId: adexchangebuyer2.bidders.filterSets.bidResponsesWithoutBids.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBidResponsesWithoutBidsResponse'
      parameters:
        - in: path
          name: biddersId
          required: true
          schema:
            type: string
        - in: path
          name: filterSetsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: bid_responses_without_bids
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/clients/{clientAccountId}:
    parameters: *ref_1
    put:
      description: Updates an existing client buyer.
      operationId: adexchangebuyer2.accounts.clients.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: exec
    get:
      description: Gets a client buyer with a given client account ID.
      operationId: adexchangebuyer2.accounts.clients.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/clients:
    parameters: *ref_1
    post:
      description: Creates a new client buyer.
      operationId: adexchangebuyer2.accounts.clients.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: insert
    get:
      description: Lists all the clients for the current sponsor buyer.
      operationId: adexchangebuyer2.accounts.clients.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClientsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: partnerClientId
          schema:
            type: string
      x-stackQL-resource: clients
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations:
    parameters: *ref_1
    get:
      description: Lists all the client users invitations for a client with a given account ID.
      operationId: adexchangebuyer2.accounts.clients.invitations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClientUserInvitationsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: invitations
      x-stackQL-verb: select
    post:
      description: Creates and sends out an email invitation to access an Ad Exchange client buyer account.
      operationId: adexchangebuyer2.accounts.clients.invitations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUserInvitation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUserInvitation'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
      x-stackQL-resource: invitations
      x-stackQL-verb: insert
  /v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}:
    parameters: *ref_1
    get:
      description: Retrieves an existing client user invitation.
      operationId: adexchangebuyer2.accounts.clients.invitations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUserInvitation'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
        - in: path
          name: invitationId
          required: true
          schema:
            type: string
      x-stackQL-resource: invitations
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}:
    parameters: *ref_1
    get:
      description: Retrieves an existing client user.
      operationId: adexchangebuyer2.accounts.clients.users.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: select
    put:
      description: Updates an existing client user. Only the user status can be changed on update.
      operationId: adexchangebuyer2.accounts.clients.users.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUser'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientUser'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/clients/{clientAccountId}/users:
    parameters: *ref_1
    get:
      description: Lists all the known client users for a specified sponsor buyer account ID.
      operationId: adexchangebuyer2.accounts.clients.users.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClientUsersResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: clientAccountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/publisherProfiles:
    parameters: *ref_1
    get:
      description: List all publisher profiles visible to the buyer
      operationId: adexchangebuyer2.accounts.publisherProfiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPublisherProfilesResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: publisher_profiles
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/publisherProfiles/{publisherProfileId}:
    parameters: *ref_1
    get:
      description: Gets the requested publisher profile by id.
      operationId: adexchangebuyer2.accounts.publisherProfiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublisherProfile'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: publisherProfileId
          required: true
          schema:
            type: string
      x-stackQL-resource: publisher_profiles
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/proposals/{proposalId}:resume:
    parameters: *ref_1
    post:
      description: Update the given proposal to resume serving. This method will set the `DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to false for all deals in the proposal. Note that if the `has_seller_paused` bit is also set, serving will not resume until the seller also resumes. It is a no-op to resume an already-running proposal. It is an error to call ResumeProposal for a proposal that is not finalized or renegotiating.
      operationId: adexchangebuyer2.accounts.proposals.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeProposalRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/proposals:
    parameters: *ref_1
    post:
      description: Create the given proposal. Each created proposal and any deals it contains are assigned a unique ID by the server.
      operationId: adexchangebuyer2.accounts.proposals.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: insert
    get:
      description: List proposals. A filter expression (PQL query) may be specified to filter the results. To retrieve all finalized proposals, regardless if a proposal is being renegotiated, see the FinalizedProposals resource. Note that Bidder/ChildSeat relationships differ from the usual behavior. A Bidder account can only see its child seats' proposals by specifying the ChildSeat's accountId in the request path.
      operationId: adexchangebuyer2.accounts.proposals.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProposalsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filterSyntax
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/proposals/{proposalId}:accept:
    parameters: *ref_1
    post:
      description: Mark the proposal as accepted at the given revision number. If the number does not match the server's revision number an `ABORTED` error message will be returned. This call updates the proposal_state from `PROPOSED` to `BUYER_ACCEPTED`, or from `SELLER_ACCEPTED` to `FINALIZED`. Upon calling this endpoint, the buyer implicitly agrees to the terms and conditions optionally set within the proposal by the publisher.
      operationId: adexchangebuyer2.accounts.proposals.accept
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptProposalRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/proposals/{proposalId}:
    parameters: *ref_1
    get:
      description: Gets a proposal given its ID. The proposal is returned at its head revision.
      operationId: adexchangebuyer2.accounts.proposals.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: select
    put:
      description: Update the given proposal at the client known revision number. If the server revision has advanced since the passed-in `proposal.proposal_revision`, an `ABORTED` error message will be returned. Only the buyer-modifiable fields of the proposal will be updated. Note that the deals in the proposal will be updated to match the passed-in copy. If a passed-in deal does not have a `deal_id`, the server will assign a new unique ID and create the deal. If passed-in deal has a `deal_id`, it will be updated to match the passed-in copy. Any existing deals not present in the passed-in proposal will be deleted. It is an error to pass in a deal with a `deal_id` not present at head.
      operationId: adexchangebuyer2.accounts.proposals.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proposal'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/proposals/{proposalId}:completeSetup:
    parameters: *ref_1
    post:
      description: You can opt-in to manually update proposals to indicate that setup is complete. By default, proposal setup is automatically completed after their deals are finalized. Contact your Technical Account Manager to opt in. Buyers can call this method when the proposal has been finalized, and all the required creatives have been uploaded using the Creatives API. This call updates the `is_setup_completed` field on the deals in the proposal, and notifies the seller. The server then advances the revision number of the most recent proposal. To mark an individual deal as ready to serve, call `buyers.finalizedDeals.setReadyToServe` in the Marketplace API.
      operationId: adexchangebuyer2.accounts.proposals.completeSetup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteSetupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/proposals/{proposalId}:addNote:
    parameters: *ref_1
    post:
      description: Create a new note and attach it to the proposal. The note is assigned a unique ID by the server. The proposal revision number will not increase when associated with a new note.
      operationId: adexchangebuyer2.accounts.proposals.addNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNoteRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals__note
      x-stackQL-verb: insert
  /v2beta1/accounts/{accountId}/proposals/{proposalId}:cancelNegotiation:
    parameters: *ref_1
    post:
      description: Cancel an ongoing negotiation on a proposal. This does not cancel or end serving for the deals if the proposal has been finalized, but only cancels a negotiation unilaterally.
      operationId: adexchangebuyer2.accounts.proposals.cancelNegotiation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelNegotiationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/proposals/{proposalId}:pause:
    parameters: *ref_1
    post:
      description: Update the given proposal to pause serving. This method will set the `DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to true for all deals in the proposal. It is a no-op to pause an already-paused proposal. It is an error to call PauseProposal for a proposal that is not finalized or renegotiating.
      operationId: adexchangebuyer2.accounts.proposals.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseProposalRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/finalizedProposals/{proposalId}:pause:
    parameters: *ref_1
    post:
      description: Update given deals to pause serving. This method will set the `DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to true for all listed deals in the request. Currently, this method only applies to PG and PD deals. For PA deals, call accounts.proposals.pause endpoint. It is a no-op to pause already-paused deals. It is an error to call PauseProposalDeals for deals which are not part of the proposal of proposal_id or which are not finalized or renegotiating.
      operationId: adexchangebuyer2.accounts.finalizedProposals.pause
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseProposalDealsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: finalized_proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/finalizedProposals/{proposalId}:resume:
    parameters: *ref_1
    post:
      description: Update given deals to resume serving. This method will set the `DealServingMetadata.DealPauseStatus.has_buyer_paused` bit to false for all listed deals in the request. Currently, this method only applies to PG and PD deals. For PA deals, call accounts.proposals.resume endpoint. It is a no-op to resume running deals or deals paused by the other party. It is an error to call ResumeProposalDeals for deals which are not part of the proposal of proposal_id or which are not finalized or renegotiating.
      operationId: adexchangebuyer2.accounts.finalizedProposals.resume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeProposalDealsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposal'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: proposalId
          required: true
          schema:
            type: string
      x-stackQL-resource: finalized_proposals
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/finalizedProposals:
    parameters: *ref_1
    get:
      description: List finalized proposals, regardless if a proposal is being renegotiated. A filter expression (PQL query) may be specified to filter the results. The notes will not be returned.
      operationId: adexchangebuyer2.accounts.finalizedProposals.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProposalsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: filterSyntax
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: finalized_proposals
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/creatives/{creativeId}:
    parameters: *ref_1
    put:
      description: Updates a creative.
      operationId: adexchangebuyer2.accounts.creatives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: creativeId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: exec
    get:
      description: Gets a creative.
      operationId: adexchangebuyer2.accounts.creatives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: creativeId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/creatives/{creativeId}:watch:
    parameters: *ref_1
    post:
      description: Watches a creative. Will result in push notifications being sent to the topic when the creative changes status.
      operationId: adexchangebuyer2.accounts.creatives.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchCreativeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: creativeId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/creatives:
    parameters: *ref_1
    get:
      description: Lists creatives.
      operationId: adexchangebuyer2.accounts.creatives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreativesResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: select
    post:
      description: Creates a creative.
      operationId: adexchangebuyer2.accounts.creatives.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creative'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creative'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: duplicateIdMode
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: insert
  /v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching:
    parameters: *ref_1
    post:
      description: Stops watching a creative. Will stop push notifications being sent to the topics when the creative changes status.
      operationId: adexchangebuyer2.accounts.creatives.stopWatching
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopWatchingCreativeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: creativeId
          required: true
          schema:
            type: string
      x-stackQL-resource: creatives
      x-stackQL-verb: exec
  /v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove:
    parameters: *ref_1
    post:
      description: Remove the association between a deal and a creative.
      operationId: adexchangebuyer2.accounts.creatives.dealAssociations.remove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveDealAssociationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: creativeId
          required: true
          schema:
            type: string
      x-stackQL-resource: deal_associations
      x-stackQL-verb: delete
  /v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add:
    parameters: *ref_1
    post:
      description: Associate an existing deal with a creative.
      operationId: adexchangebuyer2.accounts.creatives.dealAssociations.add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDealAssociationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: creativeId
          required: true
          schema:
            type: string
      x-stackQL-resource: deal_associations
      x-stackQL-verb: insert
  /v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:
    parameters: *ref_1
    get:
      description: List all creative-deal associations.
      operationId: adexchangebuyer2.accounts.creatives.dealAssociations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDealAssociationsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: creativeId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: deal_associations
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/products/{productId}:
    parameters: *ref_1
    get:
      description: Gets the requested product by ID.
      operationId: adexchangebuyer2.accounts.products.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: path
          name: productId
          required: true
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: select
  /v2beta1/accounts/{accountId}/products:
    parameters: *ref_1
    get:
      description: List all products visible to the buyer (optionally filtered by the specified PQL query).
      operationId: adexchangebuyer2.accounts.products.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/adexchange.buyer
          Oauth2c:
            - https://www.googleapis.com/auth/adexchange.buyer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsResponse'
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: products
      x-stackQL-verb: select
