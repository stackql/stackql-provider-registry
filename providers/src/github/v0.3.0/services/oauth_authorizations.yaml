paths:
  /applications/grants:
    get:
      summary: List your grants
      description: |-
        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `["repo", "user"]`.
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/list-grants
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#list-your-grants
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - name: client_id
          in: query
          required: false
          description: The client ID of your GitHub app.
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application-grant'
              examples:
                default:
                  $ref: '#/components/examples/application-grant-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
  /applications/grants/{grant_id}:
    get:
      summary: Get a single grant
      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/get-grant
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#get-a-single-grant
      parameters:
        - $ref: '#/components/parameters/grant-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application-grant'
              examples:
                default:
                  $ref: '#/components/examples/application-grant'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
    delete:
      summary: Delete a grant
      description: |-
        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/delete-grant
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#delete-a-grant
      parameters:
        - $ref: '#/components/parameters/grant-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
  /authorizations:
    get:
      summary: List your authorizations
      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/list-authorizations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - name: client_id
          in: query
          required: false
          description: The client ID of your GitHub app.
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
    post:
      summary: Create a new authorization
      description: |-
        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        **Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

        Creates OAuth tokens using [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."

        To create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.

        You can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://docs.github.com/articles/creating-an-access-token-for-command-line-use).

        Organizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://docs.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/create-authorization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#create-a-new-authorization
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                    - public_repo
                    - user
                  nullable: true
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                client_id:
                  description: The OAuth app client key for which to create the token.
                  maxLength: 20
                  type: string
                client_secret:
                  description: The OAuth app client secret for which to create the token.
                  maxLength: 40
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from others created for the same client ID and user.
                  type: string
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization'
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
  /authorizations/clients/{client_id}:
    put:
      summary: Get-or-create an authorization for a specific app
      description: |-
        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        **Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

        Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.

        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."

        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/get-or-create-authorization-for-app
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                client_secret:
                  description: The OAuth app client secret for which to create the token.
                  maxLength: 40
                  type: string
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                    - public_repo
                    - user
                  nullable: true
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from others created for the same client ID and user.
                  type: string
              required:
                - client_secret
              type: object
      responses:
        '200':
          description: if returning an existing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                response-if-returning-an-existing-token:
                  $ref: '#/components/examples/authorization-response-if-returning-an-existing-token-2'
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '201':
          description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization'
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
  /authorizations/clients/{client_id}/{fingerprint}:
    put:
      summary: Get-or-create an authorization for a specific app and fingerprint
      description: |-
        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        **Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).

        This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.

        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/get-or-create-authorization-for-app-and-fingerprint
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint
      parameters:
        - $ref: '#/components/parameters/client-id'
        - name: fingerprint
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                client_secret:
                  description: The OAuth app client secret for which to create the token.
                  maxLength: 40
                  type: string
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                    - public_repo
                    - user
                  nullable: true
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
              required:
                - client_secret
              type: object
      responses:
        '200':
          description: if returning an existing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                response-if-returning-an-existing-token:
                  $ref: '#/components/examples/authorization-response-if-returning-an-existing-token'
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '201':
          description: Response if returning a new token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-3'
          headers:
            Location:
              example: https://api.github.com/authorizations/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
  /authorizations/{authorization_id}:
    get:
      summary: Get a single authorization
      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/get-authorization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#get-a-single-authorization
      parameters:
        - $ref: '#/components/parameters/authorization-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-2'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
    patch:
      summary: Update an existing authorization
      description: |-
        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).

        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see "[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication)."

        You can only send one of these scope keys at a time.
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/update-authorization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#update-an-existing-authorization
      parameters:
        - $ref: '#/components/parameters/authorization-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                scopes:
                  description: A list of scopes that this authorization is in.
                  type: array
                  items:
                    type: string
                  example:
                    - public_repo
                    - user
                  nullable: true
                add_scopes:
                  description: A list of scopes to add to this authorization.
                  type: array
                  items:
                    type: string
                remove_scopes:
                  description: A list of scopes to remove from this authorization.
                  type: array
                  items:
                    type: string
                note:
                  description: A note to remind you what the OAuth token is for.
                  type: string
                  example: Update all gems
                note_url:
                  description: A URL to remind you what app the OAuth token is for.
                  type: string
                fingerprint:
                  description: A unique string to distinguish an authorization from others created for the same client ID and user.
                  type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-2'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
    delete:
      summary: Delete an authorization
      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'
      tags:
        - oauth-authorizations
      operationId: oauth-authorizations/delete-authorization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/oauth-authorizations#delete-an-authorization
      parameters:
        - $ref: '#/components/parameters/authorization-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2020-11-13'
        deprecationDate: '2020-02-14'
        category: oauth-authorizations
        subcategory: null
      deprecated: true
components:
  schemas:
    application-grant:
      title: Application Grant
      description: The authorization associated with an OAuth Access.
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/applications/grants/1
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
            - client_id
            - name
            - url
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        scopes:
          type: array
          items:
            type: string
          example:
            - public_repo
        user:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
        - app
        - id
        - scopes
        - url
        - created_at
        - updated_at
    nullable-simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    authorization:
      title: Authorization
      description: The authorization for an OAuth app, GitHub App, or a Personal Access Token.
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        scopes:
          description: A list of scopes that this authorization is in.
          type: array
          items:
            type: string
          nullable: true
        token:
          type: string
        token_last_eight:
          type: string
          nullable: true
        hashed_token:
          type: string
          nullable: true
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
            - client_id
            - name
            - url
        note:
          type: string
          nullable: true
        note_url:
          type: string
          format: uri
          nullable: true
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        fingerprint:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        installation:
          $ref: '#/components/schemas/nullable-scoped-installation'
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
        - app
        - id
        - note
        - note_url
        - scopes
        - token
        - hashed_token
        - token_last_eight
        - fingerprint
        - url
        - created_at
        - updated_at
        - expires_at
    nullable-scoped-installation:
      title: Scoped Installation
      type: object
      properties:
        permissions:
          $ref: '#/components/schemas/app-permissions'
        repository_selection:
          description: Describe whether all repositories have been selected or there's a selection involved
          type: string
          enum:
            - all
            - selected
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        account:
          $ref: '#/components/schemas/simple-user'
      required:
        - permissions
        - repository_selection
        - single_file_name
        - repositories_url
        - account
      nullable: true
    app-permissions:
      title: App Permissions
      type: object
      description: The permissions granted to the user-to-server access token.
      properties:
        actions:
          type: string
          description: 'The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        administration:
          type: string
          description: 'The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        checks:
          type: string
          description: 'The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        contents:
          type: string
          description: 'The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        deployments:
          type: string
          description: 'The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        environments:
          type: string
          description: 'The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        issues:
          type: string
          description: 'The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        metadata:
          type: string
          description: 'The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        packages:
          type: string
          description: 'The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        pages:
          type: string
          description: 'The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        pull_requests:
          type: string
          description: 'The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        repository_hooks:
          type: string
          description: 'The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        repository_projects:
          type: string
          description: 'The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.'
          enum:
            - read
            - write
            - admin
        secret_scanning_alerts:
          type: string
          description: 'The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        secrets:
          type: string
          description: 'The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        security_events:
          type: string
          description: 'The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        single_file:
          type: string
          description: 'The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        statuses:
          type: string
          description: 'The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        vulnerability_alerts:
          type: string
          description: 'The level of permission to grant the access token to manage Dependabot alerts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        workflows:
          type: string
          description: 'The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.'
          enum:
            - write
        members:
          type: string
          description: 'The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_administration:
          type: string
          description: 'The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_hooks:
          type: string
          description: 'The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_plan:
          type: string
          description: 'The level of permission to grant the access token for viewing an organization''s plan. Can be one of: `read`.'
          enum:
            - read
        organization_projects:
          type: string
          description: 'The level of permission to grant the access token to manage organization projects and projects beta (where available). Can be one of: `read`, `write`, or `admin`.'
          enum:
            - read
            - write
            - admin
        organization_packages:
          type: string
          description: 'The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_secrets:
          type: string
          description: 'The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_self_hosted_runners:
          type: string
          description: 'The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_user_blocking:
          type: string
          description: 'The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        team_discussions:
          type: string
          description: 'The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
      example:
        contents: read
        issues: read
        deployments: write
        single_file: read
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
  parameters:
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    grant-id:
      name: grant_id
      description: grant_id parameter
      in: path
      required: true
      schema:
        type: integer
    client-id:
      name: client_id
      in: path
      required: true
      description: The client ID of your GitHub app.
      schema:
        type: string
    authorization-id:
      name: authorization_id
      description: authorization_id parameter
      in: path
      required: true
      schema:
        type: integer
  responses:
    not_modified:
      description: Not modified
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    gone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
  securitySchemes: {}
  callbacks: {}
  examples:
    application-grant-items:
      value:
        - id: 1
          url: https://api.github.com/applications/grants/1
          app:
            url: http://my-github-app.com
            name: my github app
            client_id: abcde12345fghij67890
          created_at: '2011-09-06T17:26:27Z'
          updated_at: '2011-09-06T20:39:23Z'
          scopes:
            - public_repo
    application-grant:
      value:
        id: 1
        url: https://api.github.com/applications/grants/1
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        created_at: '2011-09-06T17:26:27Z'
        updated_at: '2011-09-06T20:39:23Z'
        scopes:
          - public_repo
    authorization-items:
      value:
        - id: 1
          url: https://api.github.com/authorizations/1
          scopes:
            - public_repo
          token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
          token_last_eight: Ae178B4a
          hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
          app:
            url: http://my-github-app.com
            name: my github app
            client_id: abcde12345fghij67890
          note: optional note
          note_url: http://optional/note/url
          updated_at: '2011-09-06T20:39:23Z'
          created_at: '2011-09-06T17:26:27Z'
          expires_at: '2011-09-08T17:26:27Z'
          fingerprint: jklmnop12345678
    authorization:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        expires_at: '2011-10-06T17:26:27Z'
        fingerprint: ''
    authorization-response-if-returning-an-existing-token-2:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        expires_at: '2011-10-06T17:26:27Z'
        fingerprint: ''
    authorization-response-if-returning-an-existing-token:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        expires_at: '2011-10-06T17:26:27Z'
        fingerprint: jklmnop12345678
    authorization-3:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        expires_at: '2012-10-06T17:26:27Z'
        fingerprint: jklmnop12345678
    authorization-2:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
          - public_repo
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        expires_at: '2011-10-06T17:26:27Z'
        fingerprint: jklmnop12345678
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    grants:
      id: github.oauth_authorizations.grants
      name: grants
      title: Grants
      methods:
        list_grants:
          operation:
            $ref: '#/paths/~1applications~1grants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_grant:
          operation:
            $ref: '#/paths/~1applications~1grants~1{grant_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_grant:
          operation:
            $ref: '#/paths/~1applications~1grants~1{grant_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/grants/methods/get_grant'
          - $ref: '#/components/x-stackQL-resources/grants/methods/list_grants'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/grants/methods/delete_grant'
    authorizations:
      id: github.oauth_authorizations.authorizations
      name: authorizations
      title: Oauth Authorizations
      methods:
        list_authorizations:
          operation:
            $ref: '#/paths/~1authorizations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_authorization:
          operation:
            $ref: '#/paths/~1authorizations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_or_create_authorization_for_app:
          operation:
            $ref: '#/paths/~1authorizations~1clients~1{client_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_or_create_authorization_for_app_and_fingerprint:
          operation:
            $ref: '#/paths/~1authorizations~1clients~1{client_id}~1{fingerprint}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_authorization:
          operation:
            $ref: '#/paths/~1authorizations~1{authorization_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_authorization:
          operation:
            $ref: '#/paths/~1authorizations~1{authorization_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_authorization:
          operation:
            $ref: '#/paths/~1authorizations~1{authorization_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorizations/methods/get_or_create_authorization_for_app_and_fingerprint'
          - $ref: '#/components/x-stackQL-resources/authorizations/methods/get_or_create_authorization_for_app'
          - $ref: '#/components/x-stackQL-resources/authorizations/methods/get_authorization'
          - $ref: '#/components/x-stackQL-resources/authorizations/methods/list_authorizations'
        insert:
          - $ref: '#/components/x-stackQL-resources/authorizations/methods/create_authorization'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/authorizations/methods/delete_authorization'
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - oauth_authorizations
  description: oauth_authorizations
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
