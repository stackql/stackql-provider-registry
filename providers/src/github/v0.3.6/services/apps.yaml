paths:
  /app:
    get:
      summary: Get the authenticated app
      description: |-
        Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the "[List installations for the authenticated app](https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app)" endpoint.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-the-authenticated-app
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: null
  /app-manifests/{code}/conversions:
    post:
      summary: Create a GitHub App from a manifest
      description: Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.
      tags:
        - apps
      operationId: apps/create-from-manifest
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#create-a-github-app-from-a-manifest
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/integration'
                  - type: object
                    properties:
                      client_id:
                        type: string
                      client_secret:
                        type: string
                      webhook_secret:
                        type: string
                        nullable: true
                      pem:
                        type: string
                    required:
                      - client_id
                      - client_secret
                      - webhook_secret
                      - pem
                    additionalProperties: true
              examples:
                default:
                  $ref: '#/components/examples/integration-from-manifest'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: null
  /app/hook/config:
    get:
      summary: Get a webhook configuration for an app
      description: |-
        Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "[Creating a GitHub App](/developers/apps/creating-a-github-app)."

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-webhook-config-for-app
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-a-webhook-configuration-for-an-app
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
    patch:
      summary: Update a webhook configuration for an app
      description: |-
        Updates the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see "[Creating a GitHub App](/developers/apps/creating-a-github-app)."

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/update-webhook-config-for-app
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#update-a-webhook-configuration-for-an-app
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  $ref: '#/components/schemas/webhook-config-url'
                content_type:
                  $ref: '#/components/schemas/webhook-config-content-type'
                secret:
                  $ref: '#/components/schemas/webhook-config-secret'
                insecure_ssl:
                  $ref: '#/components/schemas/webhook-config-insecure-ssl'
              example:
                content_type: json
                insecure_ssl: '0'
                secret: '********'
                url: https://example.com/webhook
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  /app/hook/deliveries:
    get:
      summary: List deliveries for an app webhook
      description: |-
        Returns a list of webhook deliveries for the webhook configured for a GitHub App.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-deliveries-for-an-app-webhook
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hook-delivery-item'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery-items'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  /app/hook/deliveries/{delivery_id}:
    get:
      summary: Get a delivery for an app webhook
      description: |-
        Returns a delivery for the webhook configured for a GitHub App.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-a-delivery-for-an-app-webhook
      parameters:
        - $ref: '#/components/parameters/delivery-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook-delivery'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  /app/hook/deliveries/{delivery_id}/attempts:
    post:
      summary: Redeliver a delivery for an app webhook
      description: |-
        Redeliver a delivery for the webhook configured for a GitHub App.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#redeliver-a-delivery-for-an-app-webhook
      parameters:
        - $ref: '#/components/parameters/delivery-id'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: webhooks
  /app/installations:
    get:
      summary: List installations for the authenticated app
      description: |-
        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.

        The permissions the installation has are included under the `permissions` key.
      tags:
        - apps
      operationId: apps/list-installations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/since'
        - name: outdated
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The permissions the installation has are included under the `permissions` key.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/base-installation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: null
  /app/installations/{installation_id}:
    get:
      summary: Get an installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find an installation's information using the installation id.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-an-installation-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/installation-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/base-installation'
        '404':
          $ref: '#/components/responses/not_found'
        '415':
          $ref: '#/components/responses/preview_header_missing'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: null
    delete:
      summary: Delete an installation for the authenticated app
      description: |-
        Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's access to your account's resources, then we recommend the "[Suspend an app installation](https://docs.github.com/rest/reference/apps/#suspend-an-app-installation)" endpoint.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/delete-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#delete-an-installation-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/installation-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: null
  /app/installations/{installation_id}/access_tokens:
    post:
      summary: Create an installation access token for an app
      description: |-
        Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/create-installation-access-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps/#create-an-installation-access-token-for-an-app
      parameters:
        - $ref: '#/components/parameters/installation-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                repositories:
                  description: List of repository names that the token should have access to
                  type: array
                  items:
                    type: string
                    example: rails
                repository_ids:
                  description: List of repository IDs that the token should have access to
                  example:
                    - 1
                  type: array
                  items:
                    type: integer
                permissions:
                  $ref: '#/components/schemas/app-permissions'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installation-token'
              examples:
                default:
                  $ref: '#/components/examples/installation-token'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '415':
          $ref: '#/components/responses/preview_header_missing'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: null
  /app/installations/{installation_id}/suspended:
    put:
      summary: Suspend an app installation
      description: |-
        Suspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub API or webhook events is blocked for that account.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/suspend-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#suspend-an-app-installation
      parameters:
        - $ref: '#/components/parameters/installation-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: null
    delete:
      summary: Unsuspend an app installation
      description: |-
        Removes a GitHub App installation suspension.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/unsuspend-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#unsuspend-an-app-installation
      parameters:
        - $ref: '#/components/parameters/installation-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: null
  /applications/{client_id}/grant:
    delete:
      summary: Delete an app authorization
      description: |-
        OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid OAuth `access_token` as an input parameter and the grant for the token's owner will be deleted.
        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).
      operationId: apps/delete-authorization
      tags:
        - apps
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#delete-an-app-authorization
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The OAuth access token used to authenticate to the GitHub API.
              required:
                - access_token
            example:
              access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
  /applications/{client_id}/token:
    post:
      summary: Check a token
      description: OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) to use this endpoint, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.
      tags:
        - apps
      operationId: apps/check-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#check-a-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth application.
                  type: string
              required:
                - access_token
              type: object
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-with-user'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
    patch:
      summary: Reset a token
      description: OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
      tags:
        - apps
      operationId: apps/reset-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#reset-a-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access_token:
                  description: The access_token of the OAuth application.
                  type: string
              required:
                - access_token
              type: object
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/authorization-with-user'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
    delete:
      summary: Delete an app token
      description: OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.
      tags:
        - apps
      operationId: apps/delete-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#delete-an-app-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The OAuth access token used to authenticate to the GitHub API.
              required:
                - access_token
            example:
              access_token: e72e16c7e42f292c6912e7710c838347ae178b4a
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
  /applications/{client_id}/token/scoped:
    post:
      summary: Create a scoped access token
      description: Use a non-scoped user-to-server OAuth access token to create a repository scoped and/or permission scoped user-to-server OAuth access token. You can specify which repositories the token can access and which permissions are granted to the token. You must use [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.
      tags:
        - apps
      operationId: apps/scope-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#create-a-scoped-access-token
      parameters:
        - $ref: '#/components/parameters/client-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The OAuth access token used to authenticate to the GitHub API.
                  example: e72e16c7e42f292c6912e7710c838347ae178b4a
                target:
                  description: The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified.
                  type: string
                  example: octocat
                target_id:
                  description: The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified.
                  example: 1
                  type: integer
                repositories:
                  description: The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified.
                  type: array
                  items:
                    type: string
                    example: rails
                repository_ids:
                  description: The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified.
                  example:
                    - 1
                  type: array
                  items:
                    type: integer
                permissions:
                  $ref: '#/components/schemas/app-permissions'
              required:
                - access_token
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authorization'
              examples:
                default:
                  $ref: '#/components/examples/scope-token'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: oauth-applications
  /apps/{app_slug}:
    get:
      summary: Get an app
      description: |-
        **Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).

        If the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://docs.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-by-slug
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps/#get-an-app
      parameters:
        - $ref: '#/components/parameters/app-slug'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '415':
          $ref: '#/components/responses/preview_header_missing'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: null
  /installation/repositories:
    get:
      summary: List repositories accessible to the app installation
      description: |-
        List repositories that an app installation can access.

        You must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
        - apps
      operationId: apps/list-repos-accessible-to-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-app-installation
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/repository'
                  repository_selection:
                    type: string
                    example: selected
              examples:
                default:
                  $ref: '#/components/examples/repository-paginated-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: installations
  /installation/token:
    delete:
      summary: Revoke an installation access token
      description: |-
        Revokes the installation token you're using to authenticate as an installation and access this endpoint.

        Once an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the "[Create an installation access token for an app](https://docs.github.com/rest/reference/apps#create-an-installation-access-token-for-an-app)" endpoint.

        You must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.
      tags:
        - apps
      operationId: apps/revoke-installation-access-token
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#revoke-an-installation-access-token
      parameters: []
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: apps
        subcategory: installations
  /marketplace_listing/accounts/{account_id}:
    get:
      summary: Get a subscription plan for an account
      description: |-
        Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
        - apps
      operationId: apps/get-subscription-plan-for-account
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account
      parameters:
        - $ref: '#/components/parameters/account-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketplace-purchase'
              examples:
                default:
                  $ref: '#/components/examples/marketplace-purchase'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '404':
          description: Not Found when the account has not purchased the listing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /marketplace_listing/plans:
    get:
      summary: List plans
      description: |-
        Lists all plans that are part of your GitHub Marketplace listing.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
        - apps
      operationId: apps/list-plans
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-plans
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/marketplace-listing-plan'
              examples:
                default:
                  $ref: '#/components/examples/marketplace-listing-plan-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /marketplace_listing/plans/{plan_id}/accounts:
    get:
      summary: List accounts for a plan
      description: |-
        Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
        - apps
      operationId: apps/list-accounts-for-plan
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan
      parameters:
        - $ref: '#/components/parameters/plan-id'
        - $ref: '#/components/parameters/sort'
        - name: direction
          description: To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/marketplace-purchase'
              examples:
                default:
                  $ref: '#/components/examples/marketplace-purchase-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /marketplace_listing/stubbed/accounts/{account_id}:
    get:
      summary: Get a subscription plan for an account (stubbed)
      description: |-
        Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
        - apps
      operationId: apps/get-subscription-plan-for-account-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account-stubbed
      parameters:
        - $ref: '#/components/parameters/account-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketplace-purchase'
              examples:
                default:
                  $ref: '#/components/examples/marketplace-purchase'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '404':
          description: Not Found when the account has not purchased the listing
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /marketplace_listing/stubbed/plans:
    get:
      summary: List plans (stubbed)
      description: |-
        Lists all plans that are part of your GitHub Marketplace listing.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
        - apps
      operationId: apps/list-plans-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-plans-stubbed
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/marketplace-listing-plan'
              examples:
                default:
                  $ref: '#/components/examples/marketplace-listing-plan-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '401':
          $ref: '#/components/responses/requires_authentication'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /marketplace_listing/stubbed/plans/{plan_id}/accounts:
    get:
      summary: List accounts for a plan (stubbed)
      description: |-
        Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.

        GitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.
      tags:
        - apps
      operationId: apps/list-accounts-for-plan-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan-stubbed
      parameters:
        - $ref: '#/components/parameters/plan-id'
        - $ref: '#/components/parameters/sort'
        - name: direction
          description: To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/marketplace-purchase'
              examples:
                default:
                  $ref: '#/components/examples/marketplace-purchase-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '401':
          $ref: '#/components/responses/requires_authentication'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /orgs/{org}/installation:
    get:
      summary: Get an organization installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the organization's installation information.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-org-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-an-organization-installation-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/installation'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: null
  /repos/{owner}/{repo}/installation:
    get:
      summary: Get a repository installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-repo-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-a-repository-installation-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/installation'
        '301':
          $ref: '#/components/responses/moved_permanently'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: null
  /user/installations:
    get:
      summary: List app installations accessible to the user access token
      description: |-
        Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.

        You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.

        You can find the permissions for the installation under the `permissions` key.
      tags:
        - apps
      operationId: apps/list-installations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: You can find the permissions for the installation under the `permissions` key.
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - installations
                properties:
                  total_count:
                    type: integer
                  installations:
                    type: array
                    items:
                      $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/base-installation-for-auth-user-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '415':
          $ref: '#/components/responses/preview_header_missing'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  /user/installations/{installation_id}/repositories:
    get:
      summary: List repositories accessible to the user access token
      description: |-
        List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.

        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.

        You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.

        The access the user has to each repository is included in the hash under the `permissions` key.
      tags:
        - apps
      operationId: apps/list-installation-repos-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-repositories-accessible-to-the-user-access-token
      parameters:
        - $ref: '#/components/parameters/installation-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: The access the user has to each repository is included in the hash under the `permissions` key.
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repository_selection:
                    type: string
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  /user/installations/{installation_id}/repositories/{repository_id}:
    put:
      summary: Add a repository to an app installation
      description: |-
        Add a single repository to an installation. The authenticated user must have admin access to the repository.

        You must use a personal access token (which you can create via the [command line](https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.
      tags:
        - apps
      operationId: apps/add-repo-to-installation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#add-a-repository-to-an-app-installation
      parameters:
        - $ref: '#/components/parameters/installation-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
    delete:
      summary: Remove a repository from an app installation
      description: |-
        Remove a single repository from an installation. The authenticated user must have admin access to the repository.

        You must use a personal access token (which you can create via the [command line](https://docs.github.com/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.
      tags:
        - apps
      operationId: apps/remove-repo-from-installation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#remove-a-repository-from-an-app-installation
      parameters:
        - $ref: '#/components/parameters/installation-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: installations
  /user/marketplace_purchases:
    get:
      summary: List subscriptions for the authenticated user
      description: Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/).
      tags:
        - apps
      operationId: apps/list-subscriptions-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user-marketplace-purchase'
              examples:
                default:
                  $ref: '#/components/examples/user-marketplace-purchase-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /user/marketplace_purchases/stubbed:
    get:
      summary: List subscriptions for the authenticated user (stubbed)
      description: Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/).
      tags:
        - apps
      operationId: apps/list-subscriptions-for-authenticated-user-stubbed
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user-stubbed
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user-marketplace-purchase'
              examples:
                default:
                  $ref: '#/components/examples/user-marketplace-purchase-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: marketplace
  /users/{username}/installation:
    get:
      summary: Get a user installation for the authenticated app
      description: |-
        Enables an authenticated GitHub App to find the user’s installation information.

        You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
      tags:
        - apps
      operationId: apps/get-user-installation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/apps#get-a-user-installation-for-the-authenticated-app
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/installation'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: apps
        subcategory: null
components:
  schemas:
    integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"'
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
    nullable-simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    webhook-config:
      title: Webhook Configuration
      description: Configuration object of the webhook
      type: object
      properties:
        url:
          $ref: '#/components/schemas/webhook-config-url'
        content_type:
          $ref: '#/components/schemas/webhook-config-content-type'
        secret:
          $ref: '#/components/schemas/webhook-config-secret'
        insecure_ssl:
          $ref: '#/components/schemas/webhook-config-insecure-ssl'
    webhook-config-url:
      type: string
      description: The URL to which the payloads will be delivered.
      example: https://example.com/webhook
      format: uri
    webhook-config-content-type:
      type: string
      description: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
      example: '"json"'
    webhook-config-secret:
      type: string
      description: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
      example: '"********"'
    webhook-config-insecure-ssl:
      oneOf:
        - type: string
          description: Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**
          example: '"0"'
        - type: number
    hook-delivery-item:
      title: Simple webhook delivery
      description: Delivery made by a webhook, without request and response information.
      type: object
      properties:
        id:
          description: Unique identifier of the webhook delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the webhook delivery occurred.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the webhook delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Describes the response returned after attempting the delivery.
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
      required:
        - id
        - guid
        - delivered_at
        - redelivery
        - duration
        - status
        - status_code
        - event
        - action
        - installation_id
        - repository_id
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
    hook-delivery:
      title: Webhook delivery
      description: Delivery made by a webhook.
      type: object
      properties:
        id:
          description: Unique identifier of the delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the delivery was delivered.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Description of the status of the attempted delivery
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
        url:
          description: The URL target of the delivery.
          type: string
          example: https://www.example.com
        request:
          type: object
          properties:
            headers:
              description: The request headers sent with the webhook delivery.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The webhook payload.
              type: object
              nullable: true
              additionalProperties: true
          required:
            - headers
            - payload
        response:
          type: object
          properties:
            headers:
              description: The response headers received when the delivery was made.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The response payload received.
              type: string
              nullable: true
              additionalProperties: true
          required:
            - headers
            - payload
      required:
        - id
        - guid
        - delivered_at
        - redelivery
        - duration
        - status
        - status_code
        - event
        - action
        - installation_id
        - repository_id
        - request
        - response
    installation:
      title: Installation
      description: Installation
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        account:
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/simple-user'
            - $ref: '#/components/schemas/enterprise'
        repository_selection:
          description: Describe whether all repositories have been selected or there's a selection involved
          type: string
          enum:
            - all
            - selected
        access_tokens_url:
          type: string
          format: uri
          example: https://api.github.com/installations/1/access_tokens
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/installation/repositories
        html_url:
          type: string
          format: uri
          example: https://github.com/organizations/github/settings/installations/1
        app_id:
          type: integer
          example: 1
        target_id:
          description: The ID of the user or organization this token is being scoped to.
          type: integer
        target_type:
          type: string
          example: Organization
        permissions:
          $ref: '#/components/schemas/app-permissions'
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
        app_slug:
          type: string
          example: github-actions
        suspended_by:
          $ref: '#/components/schemas/nullable-simple-user'
        suspended_at:
          type: string
          format: date-time
          nullable: true
        contact_email:
          type: string
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
      required:
        - id
        - app_id
        - app_slug
        - target_id
        - target_type
        - single_file_name
        - repository_selection
        - access_tokens_url
        - html_url
        - repositories_url
        - events
        - account
        - permissions
        - created_at
        - updated_at
        - suspended_by
        - suspended_at
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    enterprise:
      title: Enterprise
      description: An enterprise account
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
        - id
        - node_id
        - name
        - slug
        - html_url
        - created_at
        - updated_at
        - avatar_url
    app-permissions:
      title: App Permissions
      type: object
      description: The permissions granted to the user-to-server access token.
      properties:
        actions:
          type: string
          description: 'The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        administration:
          type: string
          description: 'The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        checks:
          type: string
          description: 'The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        contents:
          type: string
          description: 'The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        deployments:
          type: string
          description: 'The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        environments:
          type: string
          description: 'The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        issues:
          type: string
          description: 'The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        metadata:
          type: string
          description: 'The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        packages:
          type: string
          description: 'The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        pages:
          type: string
          description: 'The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        pull_requests:
          type: string
          description: 'The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        repository_hooks:
          type: string
          description: 'The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        repository_projects:
          type: string
          description: 'The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.'
          enum:
            - read
            - write
            - admin
        secret_scanning_alerts:
          type: string
          description: 'The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        secrets:
          type: string
          description: 'The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        security_events:
          type: string
          description: 'The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        single_file:
          type: string
          description: 'The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        statuses:
          type: string
          description: 'The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        vulnerability_alerts:
          type: string
          description: 'The level of permission to grant the access token to manage Dependabot alerts. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        workflows:
          type: string
          description: 'The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.'
          enum:
            - write
        members:
          type: string
          description: 'The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_administration:
          type: string
          description: 'The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_hooks:
          type: string
          description: 'The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_plan:
          type: string
          description: 'The level of permission to grant the access token for viewing an organization''s plan. Can be one of: `read`.'
          enum:
            - read
        organization_projects:
          type: string
          description: 'The level of permission to grant the access token to manage organization projects and projects beta (where available). Can be one of: `read`, `write`, or `admin`.'
          enum:
            - read
            - write
            - admin
        organization_packages:
          type: string
          description: 'The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_secrets:
          type: string
          description: 'The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_self_hosted_runners:
          type: string
          description: 'The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        organization_user_blocking:
          type: string
          description: 'The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
        team_discussions:
          type: string
          description: 'The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.'
          enum:
            - read
            - write
      example:
        contents: read
        issues: read
        deployments: write
        single_file: read
    installation-token:
      title: Installation Token
      description: Authentication token for a GitHub App installed on a user or org.
      type: object
      properties:
        token:
          type: string
        expires_at:
          type: string
        permissions:
          $ref: '#/components/schemas/app-permissions'
        repository_selection:
          type: string
          enum:
            - all
            - selected
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/repository'
        single_file:
          type: string
          example: README.md
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
      required:
        - token
        - expires_at
    repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      nullable: true
    authorization:
      title: Authorization
      description: The authorization for an OAuth app, GitHub App, or a Personal Access Token.
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
          format: uri
        scopes:
          description: A list of scopes that this authorization is in.
          type: array
          items:
            type: string
          nullable: true
        token:
          type: string
        token_last_eight:
          type: string
          nullable: true
        hashed_token:
          type: string
          nullable: true
        app:
          type: object
          properties:
            client_id:
              type: string
            name:
              type: string
            url:
              type: string
              format: uri
          required:
            - client_id
            - name
            - url
        note:
          type: string
          nullable: true
        note_url:
          type: string
          format: uri
          nullable: true
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        fingerprint:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        installation:
          $ref: '#/components/schemas/nullable-scoped-installation'
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
        - app
        - id
        - note
        - note_url
        - scopes
        - token
        - hashed_token
        - token_last_eight
        - fingerprint
        - url
        - created_at
        - updated_at
        - expires_at
    nullable-scoped-installation:
      title: Scoped Installation
      type: object
      properties:
        permissions:
          $ref: '#/components/schemas/app-permissions'
        repository_selection:
          description: Describe whether all repositories have been selected or there's a selection involved
          type: string
          enum:
            - all
            - selected
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
            - config.yml
            - .github/issue_TEMPLATE.md
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        account:
          $ref: '#/components/schemas/simple-user'
      required:
        - permissions
        - repository_selection
        - single_file_name
        - repositories_url
        - account
      nullable: true
    marketplace-purchase:
      title: Marketplace Purchase
      description: Marketplace Purchase
      type: object
      properties:
        url:
          type: string
        type:
          type: string
        id:
          type: integer
        login:
          type: string
        organization_billing_email:
          type: string
        email:
          type: string
          nullable: true
        marketplace_pending_change:
          type: object
          properties:
            is_installed:
              type: boolean
            effective_date:
              type: string
            unit_count:
              type: integer
              nullable: true
            id:
              type: integer
            plan:
              $ref: '#/components/schemas/marketplace-listing-plan'
          nullable: true
        marketplace_purchase:
          type: object
          properties:
            billing_cycle:
              type: string
            next_billing_date:
              type: string
              nullable: true
            is_installed:
              type: boolean
            unit_count:
              type: integer
              nullable: true
            on_free_trial:
              type: boolean
            free_trial_ends_on:
              type: string
              nullable: true
            updated_at:
              type: string
            plan:
              $ref: '#/components/schemas/marketplace-listing-plan'
      required:
        - url
        - id
        - type
        - login
        - marketplace_purchase
    marketplace-listing-plan:
      title: Marketplace Listing Plan
      description: Marketplace Listing Plan
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/marketplace_listing/plans/1313
        accounts_url:
          type: string
          format: uri
          example: https://api.github.com/marketplace_listing/plans/1313/accounts
        id:
          type: integer
          example: 1313
        number:
          type: integer
          example: 3
        name:
          type: string
          example: Pro
        description:
          type: string
          example: A professional-grade CI solution
        monthly_price_in_cents:
          type: integer
          example: 1099
        yearly_price_in_cents:
          type: integer
          example: 11870
        price_model:
          type: string
          example: flat-rate
        has_free_trial:
          type: boolean
          example: true
        unit_name:
          type: string
          nullable: true
        state:
          type: string
          example: published
        bullets:
          type: array
          items:
            type: string
          example:
            - Up to 25 private repositories
            - 11 concurrent builds
      required:
        - url
        - accounts_url
        - id
        - number
        - name
        - description
        - has_free_trial
        - price_model
        - unit_name
        - monthly_price_in_cents
        - state
        - yearly_price_in_cents
        - bullets
    user-marketplace-purchase:
      title: User Marketplace Purchase
      description: User Marketplace Purchase
      type: object
      properties:
        billing_cycle:
          type: string
          example: monthly
        next_billing_date:
          type: string
          format: date-time
          example: '2017-11-11T00:00:00Z'
          nullable: true
        unit_count:
          type: integer
          nullable: true
        on_free_trial:
          type: boolean
          example: true
        free_trial_ends_on:
          type: string
          format: date-time
          example: '2017-11-11T00:00:00Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2017-11-02T01:12:12Z'
          nullable: true
        account:
          $ref: '#/components/schemas/marketplace-account'
        plan:
          $ref: '#/components/schemas/marketplace-listing-plan'
      required:
        - billing_cycle
        - next_billing_date
        - unit_count
        - updated_at
        - on_free_trial
        - free_trial_ends_on
        - account
        - plan
    marketplace-account:
      title: Marketplace Account
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        type:
          type: string
        node_id:
          type: string
        login:
          type: string
        email:
          type: string
          nullable: true
          format: email
        organization_billing_email:
          type: string
          nullable: true
          format: email
      required:
        - url
        - id
        - type
        - login
  parameters:
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    cursor:
      name: cursor
      description: 'Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.'
      in: query
      required: false
      schema:
        type: string
    delivery-id:
      name: delivery_id
      in: path
      required: true
      schema:
        type: integer
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    since:
      name: since
      description: 'Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    installation-id:
      name: installation_id
      description: installation_id parameter
      in: path
      required: true
      schema:
        type: integer
    client-id:
      name: client_id
      in: path
      required: true
      description: The client ID of your GitHub app.
      schema:
        type: string
    app-slug:
      name: app_slug
      in: path
      required: true
      schema:
        type: string
    account-id:
      name: account_id
      description: account_id parameter
      in: path
      required: true
      schema:
        type: integer
    plan-id:
      name: plan_id
      description: plan_id parameter
      in: path
      required: true
      schema:
        type: integer
    sort:
      name: sort
      description: One of `created` (when the repository was starred) or `updated` (when it was last pushed to).
      in: query
      required: false
      schema:
        type: string
        enum:
          - created
          - updated
        default: created
    org:
      name: org
      in: path
      required: true
      schema:
        type: string
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    repository-id:
      name: repository_id
      in: path
      required: true
      schema:
        type: integer
    username:
      name: username
      in: path
      required: true
      schema:
        type: string
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed_simple:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error-simple'
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
        application/scim+json:
          schema:
            $ref: '#/components/schemas/scim-error'
    validation_failed:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    accepted:
      description: Accepted
      content:
        application/json:
          schema:
            type: object
    preview_header_missing:
      description: Preview header missing
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - documentation_url
            properties:
              message:
                type: string
              documentation_url:
                type: string
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    not_modified:
      description: Not modified
    moved_permanently:
      description: Moved permanently
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  securitySchemes: {}
  callbacks: {}
  examples:
    integration:
      value:
        id: 1
        slug: octoapp
        node_id: MDExOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
          - push
          - pull_request
    integration-from-manifest:
      value:
        id: 1
        slug: octoapp
        node_id: MDxOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
          - push
          - pull_request
        client_id: Iv1.8a61f9b3a7aba766
        client_secret: 1726be1638095a19edd134c77bde3aa2ece1e5d8
        webhook_secret: e340154128314309424b7c8e90325147d99fdafa
        pem: |
          -----BEGIN RSA PRIVATE KEY-----
          MIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM
          9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP
          X0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/
          6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm
          oNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma
          szdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ
          dBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva
          KOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo
          gDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP
          kYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX
          NuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd
          NBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE
          ZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG
          J4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv
          eDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3
          FI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk
          77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH
          Pza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB
          1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c
          57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8
          M5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic
          I9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN
          6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK
          fgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG
          ZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu
          -----END RSA PRIVATE KEY-----
    webhook-config:
      value:
        content_type: json
        insecure_ssl: '0'
        secret: '********'
        url: https://example.com/webhook
    hook-delivery-items:
      value:
        - id: 12345678
          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          delivered_at: '2019-06-03T00:57:16Z'
          redelivery: false
          duration: 0.27
          status: OK
          status_code: 200
          event: issues
          action: opened
          installation_id: 123
          repository_id: 456
        - id: 123456789
          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
          delivered_at: '2019-06-04T00:57:16Z'
          redelivery: true
          duration: 0.28
          status: OK
          status_code: 200
          event: issues
          action: opened
          installation_id: 123
          repository_id: 456
    hook-delivery:
      value:
        id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        url: https://www.example.com
        request:
          headers:
            X-GitHub-Delivery: 0b989ba4-242f-11e5-81e1-c7b6966d2516
            X-Hub-Signature-256: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
            Accept: '*/*'
            X-GitHub-Hook-ID: '42'
            User-Agent: GitHub-Hookshot/b8c71d8
            X-GitHub-Event: issues
            X-GitHub-Hook-Installation-Target-ID: '123'
            X-GitHub-Hook-Installation-Target-Type: repository
            content-type: application/json
            X-Hub-Signature: sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          payload:
            action: opened
            issue:
              body: foo
            repository:
              id: 123
        response:
          headers:
            Content-Type: text/html;charset=utf-8
          payload: ok
    base-installation-items:
      value:
        - id: 1
          account:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          access_tokens_url: https://api.github.com/installations/1/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/github/settings/installations/1
          app_id: 1
          target_id: 1
          target_type: Organization
          permissions:
            checks: write
            metadata: read
            contents: read
          events:
            - push
            - pull_request
          single_file_name: config.yaml
          has_multiple_single_files: true
          single_file_paths:
            - config.yml
            - .github/issue_TEMPLATE.md
          repository_selection: selected
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          app_slug: github-actions
          suspended_at: null
          suspended_by: null
    base-installation:
      value:
        id: 1
        account:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        access_tokens_url: https://api.github.com/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
          - push
          - pull_request
        single_file_name: config.yaml
        has_multiple_single_files: true
        single_file_paths:
          - config.yml
          - .github/issue_TEMPLATE.md
        repository_selection: selected
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app_slug: github-actions
        suspended_at: null
        suspended_by: null
    installation-token:
      value:
        token: ghs_16C7e42F292c6912E7710c838347Ae178B4a
        expires_at: '2016-07-11T22:14:10Z'
        permissions:
          issues: write
          contents: read
        repository_selection: selected
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
    authorization-with-user:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes:
          - public_repo
          - user
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
        expires_at: '2011-09-08T17:26:27Z'
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    scope-token:
      value:
        id: 1
        url: https://api.github.com/authorizations/1
        scopes: []
        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a
        token_last_eight: Ae178B4a
        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8
        app:
          url: http://my-github-app.com
          name: my github app
          client_id: abcde12345fghij67890
        note: optional note
        note_url: http://optional/note/url
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        fingerprint: jklmnop12345678
        expires_at: '2011-09-08T17:26:27Z'
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        installation:
          permissions:
            metadata: read
            issues: write
            contents: read
          repository_selection: selected
          single_file_name: .github/workflow.yml
          repositories_url: https://api.github.com/user/repos
          account:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          has_multiple_single_files: false
          single_file_paths: []
    repository-paginated-2:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
    marketplace-purchase:
      value:
        url: https://api.github.com/orgs/github
        type: Organization
        id: 4
        login: github
        organization_billing_email: billing@github.com
        email: billing@github.com
        marketplace_pending_change:
          effective_date: '2017-11-11T00:00:00Z'
          unit_count: null
          id: 77
          plan:
            url: https://api.github.com/marketplace_listing/plans/1111
            accounts_url: https://api.github.com/marketplace_listing/plans/1111/accounts
            id: 1111
            number: 2
            name: Startup
            description: A professional-grade CI solution
            monthly_price_in_cents: 699
            yearly_price_in_cents: 7870
            price_model: flat-rate
            has_free_trial: true
            state: published
            unit_name: null
            bullets:
              - Up to 10 private repositories
              - 3 concurrent builds
        marketplace_purchase:
          billing_cycle: monthly
          next_billing_date: '2017-11-11T00:00:00Z'
          unit_count: null
          on_free_trial: true
          free_trial_ends_on: '2017-11-11T00:00:00Z'
          updated_at: '2017-11-02T01:12:12Z'
          plan:
            url: https://api.github.com/marketplace_listing/plans/1313
            accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
            id: 1313
            number: 3
            name: Pro
            description: A professional-grade CI solution
            monthly_price_in_cents: 1099
            yearly_price_in_cents: 11870
            price_model: flat-rate
            has_free_trial: true
            unit_name: null
            state: published
            bullets:
              - Up to 25 private repositories
              - 11 concurrent builds
    marketplace-listing-plan-items:
      value:
        - url: https://api.github.com/marketplace_listing/plans/1313
          accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
          id: 1313
          number: 3
          name: Pro
          description: A professional-grade CI solution
          monthly_price_in_cents: 1099
          yearly_price_in_cents: 11870
          price_model: flat-rate
          has_free_trial: true
          unit_name: null
          state: published
          bullets:
            - Up to 25 private repositories
            - 11 concurrent builds
    marketplace-purchase-items:
      value:
        - url: https://api.github.com/orgs/github
          type: Organization
          id: 4
          login: github
          organization_billing_email: billing@github.com
          marketplace_pending_change:
            effective_date: '2017-11-11T00:00:00Z'
            unit_count: null
            id: 77
            plan:
              url: https://api.github.com/marketplace_listing/plans/1111
              accounts_url: https://api.github.com/marketplace_listing/plans/1111/accounts
              id: 1111
              number: 2
              name: Startup
              description: A professional-grade CI solution
              monthly_price_in_cents: 699
              yearly_price_in_cents: 7870
              price_model: flat-rate
              has_free_trial: true
              state: published
              unit_name: null
              bullets:
                - Up to 10 private repositories
                - 3 concurrent builds
          marketplace_purchase:
            billing_cycle: monthly
            next_billing_date: '2017-11-11T00:00:00Z'
            unit_count: null
            on_free_trial: true
            free_trial_ends_on: '2017-11-11T00:00:00Z'
            updated_at: '2017-11-02T01:12:12Z'
            plan:
              url: https://api.github.com/marketplace_listing/plans/1313
              accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
              id: 1313
              number: 3
              name: Pro
              description: A professional-grade CI solution
              monthly_price_in_cents: 1099
              yearly_price_in_cents: 11870
              price_model: flat-rate
              has_free_trial: true
              unit_name: null
              state: published
              bullets:
                - Up to 25 private repositories
                - 11 concurrent builds
    installation:
      value:
        id: 1
        account:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/orgs/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        repository_selection: all
        access_tokens_url: https://api.github.com/installations/1/access_tokens
        repositories_url: https://api.github.com/installation/repositories
        html_url: https://github.com/organizations/github/settings/installations/1
        app_id: 1
        target_id: 1
        target_type: Organization
        permissions:
          checks: write
          metadata: read
          contents: read
        events:
          - push
          - pull_request
        created_at: '2018-02-09T20:51:14Z'
        updated_at: '2018-02-09T20:51:14Z'
        single_file_name: config.yml
        has_multiple_single_files: true
        single_file_paths:
          - config.yml
          - .github/issue_TEMPLATE.md
        app_slug: github-actions
        suspended_at: null
        suspended_by: null
    base-installation-for-auth-user-paginated:
      value:
        total_count: 2
        installations:
          - id: 1
            account:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            access_tokens_url: https://api.github.com/installations/1/access_tokens
            repositories_url: https://api.github.com/installation/repositories
            html_url: https://github.com/organizations/github/settings/installations/1
            app_id: 1
            target_id: 1
            target_type: Organization
            permissions:
              checks: write
              metadata: read
              contents: read
            events:
              - push
              - pull_request
            single_file_name: config.yaml
            has_multiple_single_files: true
            single_file_paths:
              - config.yml
              - .github/issue_TEMPLATE.md
            repository_selection: all
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            app_slug: github-actions
            suspended_at: null
            suspended_by: null
          - id: 3
            account:
              login: octocat
              id: 2
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            access_tokens_url: https://api.github.com/installations/1/access_tokens
            repositories_url: https://api.github.com/installation/repositories
            html_url: https://github.com/organizations/github/settings/installations/1
            app_id: 1
            target_id: 1
            target_type: Organization
            permissions:
              checks: write
              metadata: read
              contents: read
            events:
              - push
              - pull_request
            single_file_name: config.yaml
            has_multiple_single_files: true
            single_file_paths:
              - config.yml
              - .github/issue_TEMPLATE.md
            repository_selection: all
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            app_slug: github-actions
            suspended_at: null
            suspended_by: null
    repository-paginated:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
    user-marketplace-purchase-items:
      value:
        - billing_cycle: monthly
          next_billing_date: '2017-11-11T00:00:00Z'
          unit_count: null
          on_free_trial: true
          free_trial_ends_on: '2017-11-11T00:00:00Z'
          updated_at: '2017-11-02T01:12:12Z'
          account:
            login: github
            id: 4
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            email: null
            organization_billing_email: billing@github.com
            type: Organization
          plan:
            url: https://api.github.com/marketplace_listing/plans/1313
            accounts_url: https://api.github.com/marketplace_listing/plans/1313/accounts
            id: 1313
            number: 3
            name: Pro
            description: A professional-grade CI solution
            monthly_price_in_cents: 1099
            yearly_price_in_cents: 11870
            price_model: flat-rate
            has_free_trial: true
            unit_name: null
            state: published
            bullets:
              - Up to 25 private repositories
              - 11 concurrent builds
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    user_installations:
      id: github.apps.user_installations
      name: user_installations
      title: App Installations for User
      methods:
        get_user_installation:
          operation:
            $ref: '#/paths/~1users~1{username}~1installation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_installations_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1installations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_installations/methods/get_user_installation'
          - $ref: '#/components/x-stackQL-resources/user_installations/methods/list_installations_for_authenticated_user'
        insert: []
        update: []
        delete: []
    installations:
      id: github.apps.installations
      name: installations
      title: App Installations
      methods:
        list_installations:
          operation:
            $ref: '#/paths/~1app~1installations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_installation:
          operation:
            $ref: '#/paths/~1app~1installations~1{installation_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_installation:
          operation:
            $ref: '#/paths/~1app~1installations~1{installation_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        create_installation_access_token:
          operation:
            $ref: '#/paths/~1app~1installations~1{installation_id}~1access_tokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        suspend_installation:
          operation:
            $ref: '#/paths/~1app~1installations~1{installation_id}~1suspended/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        unsuspend_installation:
          operation:
            $ref: '#/paths/~1app~1installations~1{installation_id}~1suspended/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_org_installation:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1installation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_repo_installation:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1installation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/installations/methods/get_repo_installation'
          - $ref: '#/components/x-stackQL-resources/installations/methods/get_installation'
          - $ref: '#/components/x-stackQL-resources/installations/methods/get_org_installation'
          - $ref: '#/components/x-stackQL-resources/installations/methods/list_installations'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/installations/methods/delete_installation'
    integrations:
      id: github.apps.integrations
      name: integrations
      title: App Integrations
      methods:
        get_authenticated:
          operation:
            $ref: '#/paths/~1app/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_from_manifest:
          operation:
            $ref: '#/paths/~1app-manifests~1{code}~1conversions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_by_slug:
          operation:
            $ref: '#/paths/~1apps~1{app_slug}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integrations/methods/get_by_slug'
          - $ref: '#/components/x-stackQL-resources/integrations/methods/get_authenticated'
        insert:
          - $ref: '#/components/x-stackQL-resources/integrations/methods/create_from_manifest'
        update: []
        delete: []
    webhook_deliveries:
      id: github.apps.webhook_deliveries
      name: webhook_deliveries
      title: Webhook Deliveries
      methods:
        list_webhook_deliveries:
          operation:
            $ref: '#/paths/~1app~1hook~1deliveries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_webhook_delivery:
          operation:
            $ref: '#/paths/~1app~1hook~1deliveries~1{delivery_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeliver_webhook_delivery:
          operation:
            $ref: '#/paths/~1app~1hook~1deliveries~1{delivery_id}~1attempts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhook_deliveries/methods/get_webhook_delivery'
          - $ref: '#/components/x-stackQL-resources/webhook_deliveries/methods/list_webhook_deliveries'
        insert: []
        update: []
        delete: []
    webhook_config:
      id: github.apps.webhook_config
      name: webhook_config
      title: Webhook Config
      methods:
        get_webhook_config_for_app:
          operation:
            $ref: '#/paths/~1app~1hook~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_webhook_config_for_app:
          operation:
            $ref: '#/paths/~1app~1hook~1config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhook_config/methods/get_webhook_config_for_app'
        insert: []
        update: []
        delete: []
    oauth_applications:
      id: github.apps.oauth_applications
      name: oauth_applications
      title: Oauth Applications
      methods:
        delete_authorization:
          operation:
            $ref: '#/paths/~1applications~1{client_id}~1grant/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        check_token:
          operation:
            $ref: '#/paths/~1applications~1{client_id}~1token/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_token:
          operation:
            $ref: '#/paths/~1applications~1{client_id}~1token/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_token:
          operation:
            $ref: '#/paths/~1applications~1{client_id}~1token/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        scope_token:
          operation:
            $ref: '#/paths/~1applications~1{client_id}~1token~1scoped/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/oauth_applications/methods/delete_authorization'
    installations_repos:
      id: github.apps.installations_repos
      name: installations_repos
      title: Installations Repositories
      methods:
        list_repos_accessible_to_installation:
          operation:
            $ref: '#/paths/~1installation~1repositories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_installation_access_token:
          operation:
            $ref: '#/paths/~1installation~1token/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_installation_repos_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1installations~1{installation_id}~1repositories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_repo_to_installation_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1installations~1{installation_id}~1repositories~1{repository_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_repo_from_installation_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1installations~1{installation_id}~1repositories~1{repository_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/installations_repos/methods/list_installation_repos_for_authenticated_user'
          - $ref: '#/components/x-stackQL-resources/installations_repos/methods/list_repos_accessible_to_installation'
        insert:
          - $ref: '#/components/x-stackQL-resources/installations_repos/methods/add_repo_to_installation_for_authenticated_user'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/installations_repos/methods/remove_repo_from_installation_for_authenticated_user'
    marketplace_listing_plans_stubbed:
      id: github.apps.marketplace_listing_plans_stubbed
      name: marketplace_listing_plans_stubbed
      title: Marketplace Listing Plans Stubbed
      methods:
        list_plans_stubbed:
          operation:
            $ref: '#/paths/~1marketplace_listing~1stubbed~1plans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_listing_plans_stubbed/methods/list_plans_stubbed'
        insert: []
        update: []
        delete: []
    marketplace_listing_plans:
      id: github.apps.marketplace_listing_plans
      name: marketplace_listing_plans
      title: Marketplace Listing Plans
      methods:
        list_plans:
          operation:
            $ref: '#/paths/~1marketplace_listing~1plans/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_listing_plans/methods/list_plans'
        insert: []
        update: []
        delete: []
    marketplace_purchases_stubbed:
      id: github.apps.marketplace_purchases_stubbed
      name: marketplace_purchases_stubbed
      title: Marketplace Purchases Stubbed
      methods:
        get_subscription_plan_for_account_stubbed:
          operation:
            $ref: '#/paths/~1marketplace_listing~1stubbed~1accounts~1{account_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_accounts_for_plan_stubbed:
          operation:
            $ref: '#/paths/~1marketplace_listing~1stubbed~1plans~1{plan_id}~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_purchases_stubbed/methods/get_subscription_plan_for_account_stubbed'
          - $ref: '#/components/x-stackQL-resources/marketplace_purchases_stubbed/methods/list_accounts_for_plan_stubbed'
        insert: []
        update: []
        delete: []
    user_marketplace_purchases:
      id: github.apps.user_marketplace_purchases
      name: user_marketplace_purchases
      title: User Marketplace Purchases
      methods:
        list_subscriptions_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1marketplace_purchases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_marketplace_purchases/methods/list_subscriptions_for_authenticated_user'
        insert: []
        update: []
        delete: []
    user_marketplace_purchases_stubbed:
      id: github.apps.user_marketplace_purchases_stubbed
      name: user_marketplace_purchases_stubbed
      title: User Marketplace Purchases Stubbed
      methods:
        list_subscriptions_for_authenticated_user_stubbed:
          operation:
            $ref: '#/paths/~1user~1marketplace_purchases~1stubbed/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_marketplace_purchases_stubbed/methods/list_subscriptions_for_authenticated_user_stubbed'
        insert: []
        update: []
        delete: []
    marketplace_purchases:
      id: github.apps.marketplace_purchases
      name: marketplace_purchases
      title: Marketplace Purchases
      methods:
        get_subscription_plan_for_account:
          operation:
            $ref: '#/paths/~1marketplace_listing~1accounts~1{account_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_accounts_for_plan:
          operation:
            $ref: '#/paths/~1marketplace_listing~1plans~1{plan_id}~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_purchases/methods/get_subscription_plan_for_account'
          - $ref: '#/components/x-stackQL-resources/marketplace_purchases/methods/list_accounts_for_plan'
        insert: []
        update: []
        delete: []
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - apps
  description: Information for integrations and installations.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
