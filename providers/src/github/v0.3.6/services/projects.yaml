paths:
  /orgs/{org}/projects:
    get:
      summary: List organization projects
      description: Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
        - projects
      operationId: projects/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#list-organization-projects
      parameters:
        - $ref: '#/components/parameters/org'
        - name: state
          description: Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
    post:
      summary: Create an organization project
      description: Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
        - projects
      operationId: projects/create-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#create-an-organization-project
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                body:
                  type: string
                  description: The description of the project.
              required:
                - name
            example:
              name: Organization Roadmap
              body: High-level roadmap for the upcoming year.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-2'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
  /projects/columns/cards/{card_id}:
    get:
      summary: Get a project card
      description: ''
      tags:
        - projects
      operationId: projects/get-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#get-a-project-card
      parameters:
        - $ref: '#/components/parameters/card-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-card'
              examples:
                default:
                  $ref: '#/components/examples/project-card'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
    patch:
      summary: Update an existing project card
      description: ''
      tags:
        - projects
      operationId: projects/update-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#update-a-project-card
      parameters:
        - $ref: '#/components/parameters/card-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  description: The project card's note
                  example: Update all gems
                  type: string
                  nullable: true
                archived:
                  description: Whether or not the card is archived
                  example: false
                  type: boolean
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-card'
              examples:
                default:
                  $ref: '#/components/examples/project-card'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
    delete:
      summary: Delete a project card
      description: ''
      tags:
        - projects
      operationId: projects/delete-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#delete-a-project-card
      parameters:
        - $ref: '#/components/parameters/card-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
  /projects/columns/cards/{card_id}/moves:
    post:
      summary: Move a project card
      description: ''
      tags:
        - projects
      operationId: projects/move-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#move-a-project-card
      parameters:
        - $ref: '#/components/parameters/card-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                position:
                  description: 'The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified card.'
                  example: bottom
                  type: string
                  pattern: ^(?:top|bottom|after:\d+)$
                column_id:
                  description: The unique identifier of the column the card should be moved to
                  example: 42
                  type: integer
              required:
                - position
              type: object
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                        resource:
                          type: string
                        field:
                          type: string
        '422':
          $ref: '#/components/responses/validation_failed'
        '503':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
  /projects/columns/{column_id}:
    get:
      summary: Get a project column
      description: ''
      tags:
        - projects
      operationId: projects/get-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#get-a-project-column
      parameters:
        - $ref: '#/components/parameters/column-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-column'
              examples:
                default:
                  $ref: '#/components/examples/project-column'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
    patch:
      summary: Update an existing project column
      description: ''
      tags:
        - projects
      operationId: projects/update-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#update-a-project-column
      parameters:
        - $ref: '#/components/parameters/column-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
                - name
              type: object
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-column'
              examples:
                default:
                  $ref: '#/components/examples/project-column'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
    delete:
      summary: Delete a project column
      description: ''
      tags:
        - projects
      operationId: projects/delete-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#delete-a-project-column
      parameters:
        - $ref: '#/components/parameters/column-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
  /projects/columns/{column_id}/cards:
    get:
      summary: List project cards
      description: ''
      tags:
        - projects
      operationId: projects/list-cards
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#list-project-cards
      parameters:
        - $ref: '#/components/parameters/column-id'
        - name: archived_state
          description: Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - archived
              - not_archived
            default: not_archived
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project-card'
              examples:
                default:
                  $ref: '#/components/examples/project-card-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
    post:
      summary: Create a project card
      description: ''
      tags:
        - projects
      operationId: projects/create-card
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#create-a-project-card
      parameters:
        - $ref: '#/components/parameters/column-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    note:
                      description: The project card's note
                      example: Update all gems
                      type: string
                      nullable: true
                  required:
                    - note
                - type: object
                  properties:
                    content_id:
                      description: The unique identifier of the content associated with the card
                      example: 42
                      type: integer
                    content_type:
                      description: The piece of content associated with the card
                      example: PullRequest
                      type: string
                  required:
                    - content_id
                    - content_type
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-card'
              examples:
                default:
                  $ref: '#/components/examples/project-card'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/validation-error'
                  - $ref: '#/components/schemas/validation-error-simple'
        '503':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: cards
  /projects/columns/{column_id}/moves:
    post:
      summary: Move a project column
      description: ''
      tags:
        - projects
      operationId: projects/move-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#move-a-project-column
      parameters:
        - $ref: '#/components/parameters/column-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                position:
                  description: 'The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.'
                  example: last
                  type: string
                  pattern: ^(?:first|last|after:\d+)$
              required:
                - position
              type: object
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
  /projects/{project_id}:
    get:
      summary: Get a project
      description: Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
        - projects
      operationId: projects/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#get-a-project
      parameters:
        - $ref: '#/components/parameters/project-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-3'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
    patch:
      summary: Update a project
      description: Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      operationId: projects/update
      tags:
        - projects
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#update-a-project
      parameters:
        - $ref: '#/components/parameters/project-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in January
                  type: string
                  nullable: true
                state:
                  description: State of the project; either 'open' or 'closed'
                  example: open
                  type: string
                organization_permission:
                  description: The baseline permission that all organization members have on this project
                  type: string
                  enum:
                    - read
                    - write
                    - admin
                    - none
                private:
                  description: Whether or not this project can be seen by everyone.
                  type: boolean
              type: object
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-3'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: Not Found if the authenticated user does not have access to the project
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
    delete:
      summary: Delete a project
      description: Deletes a project board. Returns a `404 Not Found` status if projects are disabled.
      operationId: projects/delete
      tags:
        - projects
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#delete-a-project
      parameters:
        - $ref: '#/components/parameters/project-id'
      responses:
        '204':
          description: Delete Success
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
  /projects/{project_id}/collaborators:
    get:
      summary: List project collaborators
      description: Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.
      tags:
        - projects
      operationId: projects/list-collaborators
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#list-project-collaborators
      parameters:
        - $ref: '#/components/parameters/project-id'
        - name: affiliation
          description: |-
            Filters the collaborators by their affiliation. Can be one of:  
            \* `outside`: Outside collaborators of a project that are not a member of the project's organization.  
            \* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  
            \* `all`: All collaborators the authenticated user can see.
          in: query
          required: false
          schema:
            type: string
            enum:
              - outside
              - direct
              - all
            default: all
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
  /projects/{project_id}/collaborators/{username}:
    put:
      summary: Add project collaborator
      description: Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.
      tags:
        - projects
      operationId: projects/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#add-project-collaborator
      parameters:
        - $ref: '#/components/parameters/project-id'
        - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  description: The permission to grant the collaborator.
                  enum:
                    - read
                    - write
                    - admin
                  default: write
                  example: write
                  type: string
              nullable: true
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
    delete:
      summary: Remove user as a collaborator
      description: Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.
      tags:
        - projects
      operationId: projects/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#remove-project-collaborator
      parameters:
        - $ref: '#/components/parameters/project-id'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
  /projects/{project_id}/collaborators/{username}/permission:
    get:
      summary: Get project permission for a user
      description: 'Returns the collaborator''s permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user''s permission level.'
      tags:
        - projects
      operationId: projects/get-permission-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#get-project-permission-for-a-user
      parameters:
        - $ref: '#/components/parameters/project-id'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-collaborator-permission'
              examples:
                default:
                  $ref: '#/components/examples/project-collaborator-permission'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: collaborators
  /projects/{project_id}/columns:
    get:
      summary: List project columns
      description: ''
      tags:
        - projects
      operationId: projects/list-columns
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#list-project-columns
      parameters:
        - $ref: '#/components/parameters/project-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project-column'
              examples:
                default:
                  $ref: '#/components/examples/project-column-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
    post:
      summary: Create a project column
      description: ''
      tags:
        - projects
      operationId: projects/create-column
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#create-a-project-column
      parameters:
        - $ref: '#/components/parameters/project-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project column
                  example: Remaining tasks
                  type: string
              required:
                - name
              type: object
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project-column'
              example:
                url: https://api.github.com/projects/columns/367
                project_url: https://api.github.com/projects/120
                cards_url: https://api.github.com/projects/columns/367/cards
                id: 367
                node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
                name: To Do
                created_at: '2016-09-05T14:18:44Z'
                updated_at: '2016-09-05T14:22:28Z'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: columns
  /repos/{owner}/{repo}/projects:
    get:
      summary: List repository projects
      description: Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
        - projects
      operationId: projects/list-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#list-repository-projects
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: state
          description: Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-items-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
    post:
      summary: Create a repository project
      description: Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
      tags:
        - projects
      operationId: projects/create-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#create-a-repository-project
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project.
                body:
                  type: string
                  description: The description of the project.
              required:
                - name
            example:
              name: Projects Documentation
              body: Developer documentation project for the developer site.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-3'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
  /user/projects:
    post:
      summary: Create a user project
      description: ''
      tags:
        - projects
      operationId: projects/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#create-a-user-project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of the project
                  example: Week One Sprint
                  type: string
                body:
                  description: Body of the project
                  example: This project represents the sprint of the first week in January
                  type: string
                  nullable: true
              required:
                - name
              type: object
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '415':
          $ref: '#/components/responses/preview_header_missing'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: projects
        subcategory: null
  /users/{username}/projects:
    get:
      summary: List user projects
      description: ''
      tags:
        - projects
      operationId: projects/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/projects#list-user-projects
      parameters:
        - $ref: '#/components/parameters/username'
        - name: state
          description: Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/project'
              examples:
                default:
                  $ref: '#/components/examples/project-items-3'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: projects
        subcategory: null
components:
  schemas:
    project:
      title: Project
      description: Projects are a way to organize columns and cards of work.
      type: object
      properties:
        owner_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604
        html_url:
          type: string
          format: uri
          example: https://github.com/api-playground/projects-test/projects/12
        columns_url:
          type: string
          format: uri
          example: https://api.github.com/projects/1002604/columns
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDc6UHJvamVjdDEwMDI2MDQ=
        name:
          description: Name of the project
          example: Week One Sprint
          type: string
        body:
          description: Body of the project
          example: This project represents the sprint of the first week in January
          type: string
          nullable: true
        number:
          type: integer
          example: 1
        state:
          description: State of the project; either 'open' or 'closed'
          example: open
          type: string
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        organization_permission:
          description: The baseline permission that all organization members have on this project. Only present if owner is an organization.
          type: string
          enum:
            - read
            - write
            - admin
            - none
        private:
          description: Whether or not this project can be seen by everyone. Only present if owner is an organization.
          type: boolean
      required:
        - id
        - node_id
        - number
        - name
        - body
        - state
        - url
        - html_url
        - owner_url
        - creator
        - columns_url
        - created_at
        - updated_at
    nullable-simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    project-card:
      title: Project Card
      description: Project cards represent a scope of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/cards/1478
        id:
          description: The project card's ID
          example: 42
          type: integer
        node_id:
          type: string
          example: MDExOlByb2plY3RDYXJkMTQ3OA==
        note:
          type: string
          example: Add payload for delete Project column
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:21:06Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:20:22Z'
        archived:
          description: Whether or not the card is archived
          example: false
          type: boolean
        column_name:
          type: string
        project_id:
          type: string
        column_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        content_url:
          type: string
          format: uri
          example: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
      required:
        - id
        - node_id
        - note
        - url
        - column_url
        - project_url
        - creator
        - created_at
        - updated_at
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
    project-column:
      title: Project Column
      description: Project columns contain cards of work.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367
        project_url:
          type: string
          format: uri
          example: https://api.github.com/projects/120
        cards_url:
          type: string
          format: uri
          example: https://api.github.com/projects/columns/367/cards
        id:
          description: The unique identifier of the project column
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name:
          description: Name of the project column
          example: Remaining tasks
          type: string
        created_at:
          type: string
          format: date-time
          example: '2016-09-05T14:18:44Z'
        updated_at:
          type: string
          format: date-time
          example: '2016-09-05T14:22:28Z'
      required:
        - id
        - node_id
        - url
        - project_url
        - cards_url
        - name
        - created_at
        - updated_at
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    project-collaborator-permission:
      title: Project Collaborator Permission
      description: Project Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        user:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
        - permission
        - user
  parameters:
    org:
      name: org
      in: path
      required: true
      schema:
        type: string
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    card-id:
      name: card_id
      description: card_id parameter
      in: path
      required: true
      schema:
        type: integer
    column-id:
      name: column_id
      description: column_id parameter
      in: path
      required: true
      schema:
        type: integer
    project-id:
      name: project_id
      in: path
      required: true
      schema:
        type: integer
    username:
      name: username
      in: path
      required: true
      schema:
        type: string
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
  responses:
    validation_failed_simple:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error-simple'
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    gone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    not_modified:
      description: Not modified
    validation_failed:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    preview_header_missing:
      description: Preview header missing
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - documentation_url
            properties:
              message:
                type: string
              documentation_url:
                type: string
  securitySchemes: {}
  callbacks: {}
  examples:
    project-items:
      value:
        - owner_url: https://api.github.com/orgs/octocat
          url: https://api.github.com/projects/1002605
          html_url: https://github.com/orgs/api-playground/projects/1
          columns_url: https://api.github.com/projects/1002605/columns
          id: 1002605
          node_id: MDc6UHJvamVjdDEwMDI2MDU=
          name: Organization Roadmap
          body: High-level roadmap for the upcoming year.
          number: 1
          state: open
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2011-04-11T20:09:31Z'
          updated_at: '2014-03-04T18:58:10Z'
    project-2:
      value:
        owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
    project-card:
      value:
        url: https://api.github.com/projects/columns/cards/1478
        id: 1478
        node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
        note: Add payload for delete Project column
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2016-09-05T14:21:06Z'
        updated_at: '2016-09-05T14:20:22Z'
        archived: false
        column_url: https://api.github.com/projects/columns/367
        content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
        project_url: https://api.github.com/projects/120
    project-column:
      value:
        url: https://api.github.com/projects/columns/367
        project_url: https://api.github.com/projects/120
        cards_url: https://api.github.com/projects/columns/367/cards
        id: 367
        node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
        name: To Do
        created_at: '2016-09-05T14:18:44Z'
        updated_at: '2016-09-05T14:22:28Z'
    project-card-items:
      value:
        - url: https://api.github.com/projects/columns/cards/1478
          id: 1478
          node_id: MDExOlByb2plY3RDYXJkMTQ3OA==
          note: Add payload for delete Project column
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2016-09-05T14:21:06Z'
          updated_at: '2016-09-05T14:20:22Z'
          archived: false
          column_url: https://api.github.com/projects/columns/367
          content_url: https://api.github.com/repos/api-playground/projects-test/issues/3
          project_url: https://api.github.com/projects/120
    project-3:
      value:
        owner_url: https://api.github.com/repos/api-playground/projects-test
        url: https://api.github.com/projects/1002604
        html_url: https://github.com/api-playground/projects-test/projects/1
        columns_url: https://api.github.com/projects/1002604/columns
        id: 1002604
        node_id: MDc6UHJvamVjdDEwMDI2MDQ=
        name: Projects Documentation
        body: Developer documentation project for the developer site.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    simple-user-items:
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    project-collaborator-permission:
      value:
        permission: admin
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    project-column-items:
      value:
        - url: https://api.github.com/projects/columns/367
          project_url: https://api.github.com/projects/120
          cards_url: https://api.github.com/projects/columns/367/cards
          id: 367
          node_id: MDEzOlByb2plY3RDb2x1bW4zNjc=
          name: To Do
          created_at: '2016-09-05T14:18:44Z'
          updated_at: '2016-09-05T14:22:28Z'
    project-items-2:
      value:
        - owner_url: https://api.github.com/repos/api-playground/projects-test
          url: https://api.github.com/projects/1002604
          html_url: https://github.com/api-playground/projects-test/projects/1
          columns_url: https://api.github.com/projects/1002604/columns
          id: 1002604
          node_id: MDc6UHJvamVjdDEwMDI2MDQ=
          name: Projects Documentation
          body: Developer documentation project for the developer site.
          number: 1
          state: open
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
    project:
      value:
        owner_url: https://api.github.com/users/octocat
        url: https://api.github.com/projects/1002603
        html_url: https://github.com/users/octocat/projects/1
        columns_url: https://api.github.com/projects/1002603/columns
        id: 1002603
        node_id: MDc6UHJvamVjdDEwMDI2MDM=
        name: My Projects
        body: A board to manage my personal projects.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
    project-items-3:
      value:
        - owner_url: https://api.github.com/users/octocat
          url: https://api.github.com/projects/1002603
          html_url: https://github.com/users/octocat/projects/1
          columns_url: https://api.github.com/projects/1002603/columns
          id: 1002603
          node_id: MDc6UHJvamVjdDEwMDI2MDM=
          name: My Projects
          body: A board to manage my personal projects.
          number: 1
          state: open
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    projects:
      id: github.projects.projects
      name: projects
      title: Projects
      methods:
        list_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1projects/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get:
          operation:
            $ref: '#/paths/~1projects~1{project_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1projects~1{project_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1projects~1{project_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1projects/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        create_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1projects/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        list_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/list_for_repo'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list_for_org'
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list_for_user'
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_for_repo'
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_for_org'
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_for_authenticated_user'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete'
    cards:
      id: github.projects.cards
      name: cards
      title: Cards
      methods:
        get_card:
          operation:
            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_card:
          operation:
            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_card:
          operation:
            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        move_card:
          operation:
            $ref: '#/paths/~1projects~1columns~1cards~1{card_id}~1moves/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        list_cards:
          operation:
            $ref: '#/paths/~1projects~1columns~1{column_id}~1cards/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_card:
          operation:
            $ref: '#/paths/~1projects~1columns~1{column_id}~1cards/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cards/methods/get_card'
          - $ref: '#/components/x-stackQL-resources/cards/methods/list_cards'
        insert:
          - $ref: '#/components/x-stackQL-resources/cards/methods/create_card'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cards/methods/delete_card'
    columns:
      id: github.projects.columns
      name: columns
      title: Columns
      methods:
        get_column:
          operation:
            $ref: '#/paths/~1projects~1columns~1{column_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_column:
          operation:
            $ref: '#/paths/~1projects~1columns~1{column_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_column:
          operation:
            $ref: '#/paths/~1projects~1columns~1{column_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        move_column:
          operation:
            $ref: '#/paths/~1projects~1columns~1{column_id}~1moves/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        list_columns:
          operation:
            $ref: '#/paths/~1projects~1{project_id}~1columns/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_column:
          operation:
            $ref: '#/paths/~1projects~1{project_id}~1columns/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/columns/methods/get_column'
          - $ref: '#/components/x-stackQL-resources/columns/methods/list_columns'
        insert:
          - $ref: '#/components/x-stackQL-resources/columns/methods/create_column'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/columns/methods/delete_column'
    collaborator_permissions:
      id: github.projects.collaborator_permissions
      name: collaborator_permissions
      title: Project Collaborator Permissions
      methods:
        get_permission_for_user:
          operation:
            $ref: '#/paths/~1projects~1{project_id}~1collaborators~1{username}~1permission/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collaborator_permissions/methods/get_permission_for_user'
        insert: []
        update: []
        delete: []
    collaborators:
      id: github.projects.collaborators
      name: collaborators
      title: Collaborators
      methods:
        list_collaborators:
          operation:
            $ref: '#/paths/~1projects~1{project_id}~1collaborators/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_collaborator:
          operation:
            $ref: '#/paths/~1projects~1{project_id}~1collaborators~1{username}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_collaborator:
          operation:
            $ref: '#/paths/~1projects~1{project_id}~1collaborators~1{username}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collaborators/methods/list_collaborators'
        insert:
          - $ref: '#/components/x-stackQL-resources/collaborators/methods/add_collaborator'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/collaborators/methods/remove_collaborator'
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - projects
  description: Interact with GitHub Projects.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
