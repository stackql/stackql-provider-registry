paths:
  /issues:
    get:
      summary: List issues assigned to the authenticated user
      description: |-
        List issues assigned to the authenticated user across all visible repositories including owned repositories, member
        repositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not
        necessarily assigned to you.


        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)" endpoint.
      tags:
        - issues
      operationId: issues/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-issues-assigned-to-the-authenticated-user
      parameters:
        - name: filter
          description: |-
            Indicates which sorts of issues to return. Can be one of:  
            \* `assigned`: Issues assigned to you  
            \* `created`: Issues created by you  
            \* `mentioned`: Issues mentioning you  
            \* `subscribed`: Issues you're subscribed to updates for  
            \* `all` or `repos`: All issues the authenticated user can see, regardless of participation or creation
          in: query
          required: false
          schema:
            type: string
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            default: assigned
        - name: state
          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/labels'
        - name: sort
          description: What to sort results by. Can be either `created`, `updated`, `comments`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - comments
            default: created
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/since'
        - name: collab
          in: query
          required: false
          schema:
            type: boolean
        - name: orgs
          in: query
          required: false
          schema:
            type: boolean
        - name: owned
          in: query
          required: false
          schema:
            type: boolean
        - name: pulls
          in: query
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue-with-repo-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: null
  /orgs/{org}/issues:
    get:
      summary: List organization issues assigned to the authenticated user
      description: |-
        List issues in an organization assigned to the authenticated user.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)" endpoint.
      tags:
        - issues
      operationId: issues/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-organization-issues-assigned-to-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/org'
        - name: filter
          description: |-
            Indicates which sorts of issues to return. Can be one of:  
            \* `assigned`: Issues assigned to you  
            \* `created`: Issues created by you  
            \* `mentioned`: Issues mentioning you  
            \* `subscribed`: Issues you're subscribed to updates for  
            \* `all` or `repos`: All issues the authenticated user can see, regardless of participation or creation
          in: query
          required: false
          schema:
            type: string
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            default: assigned
        - name: state
          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/labels'
        - name: sort
          description: What to sort results by. Can be either `created`, `updated`, `comments`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - comments
            default: created
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue-with-repo-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: null
  /repos/{owner}/{repo}/assignees:
    get:
      summary: List assignees
      description: Lists the [available assignees](https://docs.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.
      tags:
        - issues
      operationId: issues/list-assignees
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-assignees
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
  /repos/{owner}/{repo}/assignees/{assignee}:
    get:
      summary: Check if a user can be assigned
      description: |-
        Checks if a user has permission to be assigned to an issue in this repository.

        If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.

        Otherwise a `404` status code is returned.
      tags:
        - issues
      operationId: issues/check-user-can-be-assigned
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#check-if-a-user-can-be-assigned
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: assignee
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.
        '404':
          description: Otherwise a `404` status code is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
  /repos/{owner}/{repo}/issues:
    get:
      summary: List repository issues
      description: |-
        List issues in a repository.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)" endpoint.
      tags:
        - issues
      operationId: issues/list-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-repository-issues
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: milestone
          description: If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.
          in: query
          required: false
          schema:
            type: string
        - name: state
          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - name: assignee
          description: Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.
          in: query
          required: false
          schema:
            type: string
        - name: creator
          description: The user that created the issue.
          in: query
          required: false
          schema:
            type: string
        - name: mentioned
          description: A user that's mentioned in the issue.
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/labels'
        - name: sort
          description: What to sort results by. Can be either `created`, `updated`, `comments`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - comments
            default: created
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '301':
          $ref: '#/components/responses/moved_permanently'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: null
    post:
      summary: Create an issue
      description: |-
        Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://docs.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
        - issues
      operationId: issues/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#create-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  oneOf:
                    - type: string
                    - type: integer
                  description: The title of the issue.
                body:
                  type: string
                  description: The contents of the issue.
                assignee:
                  type: string
                  description: 'Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_'
                  nullable: true
                milestone:
                  oneOf:
                    - type: string
                    - type: integer
                      description: 'The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._'
                  nullable: true
                labels:
                  type: array
                  description: 'Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._'
                  items:
                    oneOf:
                      - type: string
                      - type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                            nullable: true
                          color:
                            type: string
                            nullable: true
                assignees:
                  type: array
                  description: 'Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._'
                  items:
                    type: string
              required:
                - title
            example:
              title: Found a bug
              body: I'm having a problem with this.
              assignees:
                - octocat
              milestone: 1
              labels:
                - bug
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/1347
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: null
  /repos/{owner}/{repo}/issues/comments:
    get:
      summary: List issue comments for a repository
      description: By default, Issue Comments are ordered by ascending ID.
      tags:
        - issues
      operationId: issues/list-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-issue-comments-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/sort'
        - name: direction
          description: Either `asc` or `desc`. Ignored without the `sort` parameter.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue-comment'
              examples:
                default:
                  $ref: '#/components/examples/issue-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
  /repos/{owner}/{repo}/issues/comments/{comment_id}:
    get:
      summary: Get an issue comment
      description: ''
      tags:
        - issues
      operationId: issues/get-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#get-an-issue-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/comment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue-comment'
              examples:
                default:
                  $ref: '#/components/examples/issue-comment'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
    patch:
      summary: Update an issue comment
      description: ''
      tags:
        - issues
      operationId: issues/update-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#update-an-issue-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
              required:
                - body
            example:
              body: Me too
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue-comment'
              examples:
                default:
                  $ref: '#/components/examples/issue-comment'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
    delete:
      summary: Delete an issue comment
      description: ''
      tags:
        - issues
      operationId: issues/delete-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#delete-an-issue-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/comment-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
  /repos/{owner}/{repo}/issues/events:
    get:
      summary: List issue events for a repository
      description: ''
      tags:
        - issues
      operationId: issues/list-events-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-issue-events-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue-event'
              examples:
                default:
                  $ref: '#/components/examples/issue-event-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: events
  /repos/{owner}/{repo}/issues/events/{event_id}:
    get:
      summary: Get an issue event
      description: ''
      tags:
        - issues
      operationId: issues/get-event
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#get-an-issue-event
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue-event'
              examples:
                default:
                  $ref: '#/components/examples/issue-event'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: events
  /repos/{owner}/{repo}/issues/{issue_number}:
    get:
      summary: Get an issue
      description: |-
        The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was
        [transferred](https://docs.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If
        the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API
        returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read
        access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe
        to the [`issues`](https://docs.github.com/webhooks/event-payloads/#issues) webhook.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)" endpoint.
      tags:
        - issues
      operationId: issues/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#get-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue'
        '301':
          $ref: '#/components/responses/moved_permanently'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: null
    patch:
      summary: Update an issue
      description: Issue owners and users with push access can edit an issue.
      tags:
        - issues
      operationId: issues/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues/#update-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  oneOf:
                    - type: string
                    - type: integer
                  description: The title of the issue.
                  nullable: true
                body:
                  type: string
                  description: The contents of the issue.
                  nullable: true
                assignee:
                  type: string
                  nullable: true
                  description: Login for the user that this issue should be assigned to. **This field is deprecated.**
                state:
                  type: string
                  description: State of the issue. Either `open` or `closed`.
                  enum:
                    - open
                    - closed
                milestone:
                  oneOf:
                    - type: string
                    - type: integer
                      description: 'The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._'
                  nullable: true
                labels:
                  type: array
                  description: 'Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._'
                  items:
                    oneOf:
                      - type: string
                      - type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                            nullable: true
                          color:
                            type: string
                            nullable: true
                assignees:
                  type: array
                  description: 'Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._'
                  items:
                    type: string
            example:
              title: Found a bug
              body: I'm having a problem with this.
              assignees:
                - octocat
              milestone: 1
              state: open
              labels:
                - bug
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue'
        '301':
          $ref: '#/components/responses/moved_permanently'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: null
  /repos/{owner}/{repo}/issues/{issue_number}/assignees:
    post:
      summary: Add assignees to an issue
      description: Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.
      tags:
        - issues
      operationId: issues/add-assignees
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#add-assignees-to-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                assignees:
                  type: array
                  description: 'Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._'
                  items:
                    type: string
            example:
              assignees:
                - hubot
                - other_user
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
    delete:
      summary: Remove assignees from an issue
      description: Removes one or more assignees from an issue.
      tags:
        - issues
      operationId: issues/remove-assignees
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#remove-assignees-from-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignees:
                  type: array
                  description: 'Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._'
                  items:
                    type: string
            example:
              assignees:
                - hubot
                - other_user
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: assignees
  /repos/{owner}/{repo}/issues/{issue_number}/comments:
    get:
      summary: List issue comments
      description: Issue Comments are ordered by ascending ID.
      tags:
        - issues
      operationId: issues/list-comments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-issue-comments
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue-comment'
              examples:
                default:
                  $ref: '#/components/examples/issue-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
    post:
      summary: Create an issue comment
      description: This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)" for details.
      tags:
        - issues
      operationId: issues/create-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#create-an-issue-comment
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
              required:
                - body
            example:
              body: Me too
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue-comment'
              examples:
                default:
                  $ref: '#/components/examples/issue-comment'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: comments
  /repos/{owner}/{repo}/issues/{issue_number}/events:
    get:
      summary: List issue events
      description: ''
      tags:
        - issues
      operationId: issues/list-events
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-issue-events
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue-event-for-issue'
              examples:
                default:
                  $ref: '#/components/examples/issue-event-for-issue-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: events
  /repos/{owner}/{repo}/issues/{issue_number}/labels:
    get:
      summary: List labels for an issue
      description: ''
      tags:
        - issues
      operationId: issues/list-labels-on-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-labels-for-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    post:
      summary: Add labels to an issue
      description: ''
      tags:
        - issues
      operationId: issues/add-labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#add-labels-to-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    labels:
                      type: array
                      minItems: 1
                      description: The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key. You can also replace all of the labels for an issue. For more information, see "[Set labels for an issue](https://docs.github.com/rest/reference/issues#set-labels-for-an-issue)."
                      items:
                        type: string
                - type: array
                  minItems: 1
                  items:
                    type: string
                - type: object
                  properties:
                    labels:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                        required:
                          - name
                - type: array
                  minItems: 1
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                    required:
                      - name
                - type: string
            example:
              labels:
                - bug
                - enhancement
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label-items'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    put:
      summary: Set labels for an issue
      description: Removes any previous labels and sets the new labels for an issue.
      tags:
        - issues
      operationId: issues/set-labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#set-labels-for-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    labels:
                      type: array
                      minItems: 1
                      description: The names of the labels to set for the issue. The labels you set replace any existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key. You can also add labels to the existing labels for an issue. For more information, see "[Add labels to an issue](https://docs.github.com/rest/reference/issues#add-labels-to-an-issue)."
                      items:
                        type: string
                - type: array
                  minItems: 1
                  items:
                    type: string
                - type: object
                  properties:
                    labels:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                        required:
                          - name
                - type: array
                  minItems: 1
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                    required:
                      - name
                - type: string
            example:
              labels:
                - bug
                - enhancement
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label-items'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    delete:
      summary: Remove all labels from an issue
      description: ''
      tags:
        - issues
      operationId: issues/remove-all-labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#remove-all-labels-from-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      responses:
        '204':
          description: Response
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}:
    delete:
      summary: Remove a label from an issue
      description: Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.
      tags:
        - issues
      operationId: issues/remove-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#remove-a-label-from-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label-items-2'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  /repos/{owner}/{repo}/issues/{issue_number}/lock:
    put:
      summary: Lock an issue
      description: |-
        Users with push access can lock an issue or pull request's conversation.

        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
      tags:
        - issues
      operationId: issues/lock
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#lock-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                lock_reason:
                  type: string
                  description: |-
                    The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  
                    \* `off-topic`  
                    \* `too heated`  
                    \* `resolved`  
                    \* `spam`
                  enum:
                    - off-topic
                    - too heated
                    - resolved
                    - spam
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: null
    delete:
      summary: Unlock an issue
      description: Users with push access can unlock an issue's conversation.
      tags:
        - issues
      operationId: issues/unlock
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#unlock-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: null
  /repos/{owner}/{repo}/issues/{issue_number}/timeline:
    get:
      summary: List timeline events for an issue
      description: ''
      tags:
        - issues
      operationId: issues/list-events-for-timeline
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-timeline-events-for-an-issue
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/issue-number'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/timeline-issue-events'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: timeline
  /repos/{owner}/{repo}/labels:
    get:
      summary: List labels for a repository
      description: ''
      tags:
        - issues
      operationId: issues/list-labels-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-labels-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    post:
      summary: Create a label
      description: ''
      tags:
        - issues
      operationId: issues/create-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#create-a-label
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png ":strawberry:"). For a full list of available emoji and codes, see "[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet)."
                color:
                  type: string
                  description: The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.
                description:
                  type: string
                  description: A short description of the label. Must be 100 characters or fewer.
              required:
                - name
            example:
              name: bug
              description: Something isn't working
              color: f29513
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/labels/bug
              schema:
                type: string
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  /repos/{owner}/{repo}/labels/{name}:
    get:
      summary: Get a label
      description: ''
      tags:
        - issues
      operationId: issues/get-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#get-a-label
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    patch:
      summary: Update a label
      description: ''
      tags:
        - issues
      operationId: issues/update-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#update-a-label
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  description: The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png ":strawberry:"). For a full list of available emoji and codes, see "[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet)."
                color:
                  type: string
                  description: The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.
                description:
                  type: string
                  description: A short description of the label. Must be 100 characters or fewer.
            example:
              new_name: 'bug :bug:'
              description: Small bug fix required
              color: b01f26
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
    delete:
      summary: Delete a label
      description: ''
      tags:
        - issues
      operationId: issues/delete-label
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#delete-a-label
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  /repos/{owner}/{repo}/milestones:
    get:
      summary: List milestones
      description: ''
      tags:
        - issues
      operationId: issues/list-milestones
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-milestones
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: state
          description: The state of the milestone. Either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - name: sort
          description: What to sort results by. Either `due_on` or `completeness`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - due_on
              - completeness
            default: due_on
        - name: direction
          description: The direction of the sort. Either `asc` or `desc`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/milestone'
              examples:
                default:
                  $ref: '#/components/examples/milestone-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
    post:
      summary: Create a milestone
      description: ''
      tags:
        - issues
      operationId: issues/create-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#create-a-milestone
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the milestone.
                state:
                  type: string
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                    - open
                    - closed
                  default: open
                description:
                  type: string
                  description: A description of the milestone.
                due_on:
                  type: string
                  format: date-time
                  description: 'The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
              required:
                - title
            example:
              title: v1.0
              state: open
              description: Tracking milestone for version 1.0
              due_on: '2012-10-09T23:39:01Z'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestone'
              examples:
                default:
                  $ref: '#/components/examples/milestone'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/milestones/1
              schema:
                type: string
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
  /repos/{owner}/{repo}/milestones/{milestone_number}:
    get:
      summary: Get a milestone
      description: ''
      tags:
        - issues
      operationId: issues/get-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#get-a-milestone
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/milestone-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestone'
              examples:
                default:
                  $ref: '#/components/examples/milestone'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
    patch:
      summary: Update a milestone
      description: ''
      tags:
        - issues
      operationId: issues/update-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#update-a-milestone
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/milestone-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the milestone.
                state:
                  type: string
                  description: The state of the milestone. Either `open` or `closed`.
                  enum:
                    - open
                    - closed
                  default: open
                description:
                  type: string
                  description: A description of the milestone.
                due_on:
                  type: string
                  format: date-time
                  description: 'The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
            example:
              title: v1.0
              state: open
              description: Tracking milestone for version 1.0
              due_on: '2012-10-09T23:39:01Z'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/milestone'
              examples:
                default:
                  $ref: '#/components/examples/milestone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
    delete:
      summary: Delete a milestone
      description: ''
      tags:
        - issues
      operationId: issues/delete-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#delete-a-milestone
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/milestone-number'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: milestones
  /repos/{owner}/{repo}/milestones/{milestone_number}/labels:
    get:
      summary: List labels for issues in a milestone
      description: ''
      tags:
        - issues
      operationId: issues/list-labels-for-milestone
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-labels-for-issues-in-a-milestone
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/milestone-number'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/label'
              examples:
                default:
                  $ref: '#/components/examples/label-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: issues
        subcategory: labels
  /user/issues:
    get:
      summary: List user account issues assigned to the authenticated user
      description: |-
        List issues across owned and member repositories assigned to the authenticated user.

        **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this
        reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by
        the `pull_request` key. Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull
        request id, use the "[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)" endpoint.
      tags:
        - issues
      operationId: issues/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/issues#list-user-account-issues-assigned-to-the-authenticated-user
      parameters:
        - name: filter
          description: |-
            Indicates which sorts of issues to return. Can be one of:  
            \* `assigned`: Issues assigned to you  
            \* `created`: Issues created by you  
            \* `mentioned`: Issues mentioning you  
            \* `subscribed`: Issues you're subscribed to updates for  
            \* `all` or `repos`: All issues the authenticated user can see, regardless of participation or creation
          in: query
          required: false
          schema:
            type: string
            enum:
              - assigned
              - created
              - mentioned
              - subscribed
              - repos
              - all
            default: assigned
        - name: state
          description: Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - open
              - closed
              - all
            default: open
        - $ref: '#/components/parameters/labels'
        - name: sort
          description: What to sort results by. Can be either `created`, `updated`, `comments`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - created
              - updated
              - comments
            default: created
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue'
              examples:
                default:
                  $ref: '#/components/examples/issue-with-repo-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: issues
        subcategory: null
components:
  schemas:
    issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        labels:
          description: Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
          example:
            - bug
            - registration
          type: array
          items:
            oneOf:
              - type: string
              - type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  node_id:
                    type: string
                  url:
                    type: string
                    format: uri
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  color:
                    type: string
                    nullable: true
                  default:
                    type: boolean
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        milestone:
          $ref: '#/components/schemas/nullable-milestone'
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
            - diff_url
            - html_url
            - patch_url
            - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        draft:
          type: boolean
        closed_by:
          $ref: '#/components/schemas/nullable-simple-user'
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          $ref: '#/components/schemas/repository'
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        author_association:
          $ref: '#/components/schemas/author_association'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - assignee
        - closed_at
        - comments
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - labels
        - labels_url
        - milestone
        - number
        - repository_url
        - state
        - locked
        - title
        - url
        - user
        - author_association
        - created_at
        - updated_at
    nullable-simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
            - open
            - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
        - closed_issues
        - creator
        - description
        - due_on
        - closed_at
        - id
        - node_id
        - labels_url
        - html_url
        - number
        - open_issues
        - state
        - title
        - url
        - created_at
        - updated_at
      nullable: true
    repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"'
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
      nullable: true
    author_association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
        - COLLABORATOR
        - CONTRIBUTOR
        - FIRST_TIMER
        - FIRST_TIME_CONTRIBUTOR
        - MANNEQUIN
        - MEMBER
        - NONE
        - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        '+1':
          type: integer
        '-1':
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
        - url
        - total_count
        - '+1'
        - '-1'
        - laugh
        - confused
        - heart
        - hooray
        - eyes
        - rocket
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      nullable: true
    issue-comment:
      title: Issue Comment
      description: Comments provide a way for people to collaborate on an issue.
      type: object
      properties:
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue_url:
          type: string
          format: uri
        author_association:
          $ref: '#/components/schemas/author_association'
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - id
        - node_id
        - html_url
        - issue_url
        - author_association
        - user
        - url
        - created_at
        - updated_at
    issue-event:
      title: Issue Event
      description: Issue Event
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEwOklzc3VlRXZlbnQx
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          $ref: '#/components/schemas/nullable-simple-user'
        event:
          type: string
          example: closed
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        commit_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue:
          $ref: '#/components/schemas/nullable-issue'
        label:
          $ref: '#/components/schemas/issue-event-label'
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        assigner:
          $ref: '#/components/schemas/nullable-simple-user'
        review_requester:
          $ref: '#/components/schemas/nullable-simple-user'
        requested_reviewer:
          $ref: '#/components/schemas/nullable-simple-user'
        requested_team:
          $ref: '#/components/schemas/team'
        dismissed_review:
          $ref: '#/components/schemas/issue-event-dismissed-review'
        milestone:
          $ref: '#/components/schemas/issue-event-milestone'
        project_card:
          $ref: '#/components/schemas/issue-event-project-card'
        rename:
          $ref: '#/components/schemas/issue-event-rename'
        author_association:
          $ref: '#/components/schemas/author_association'
        lock_reason:
          type: string
          nullable: true
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
    nullable-issue:
      title: Issue
      description: Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue
          example: https://api.github.com/repositories/42/issues/1
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        number:
          description: Number uniquely identifying the issue within its repository
          example: 42
          type: integer
        state:
          description: State of the issue; either 'open' or 'closed'
          example: open
          type: string
        title:
          description: Title of the issue
          example: Widget creation fails in Safari on OS X 10.8
          type: string
        body:
          description: Contents of the issue
          example: It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        labels:
          description: Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository
          example:
            - bug
            - registration
          type: array
          items:
            oneOf:
              - type: string
              - type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  node_id:
                    type: string
                  url:
                    type: string
                    format: uri
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  color:
                    type: string
                    nullable: true
                  default:
                    type: boolean
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        milestone:
          $ref: '#/components/schemas/nullable-milestone'
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        comments:
          type: integer
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
            - diff_url
            - html_url
            - patch_url
            - url
        closed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        draft:
          type: boolean
        closed_by:
          $ref: '#/components/schemas/nullable-simple-user'
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        repository:
          $ref: '#/components/schemas/repository'
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        author_association:
          $ref: '#/components/schemas/author_association'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - assignee
        - closed_at
        - comments
        - comments_url
        - events_url
        - html_url
        - id
        - node_id
        - labels
        - labels_url
        - milestone
        - number
        - repository_url
        - state
        - locked
        - title
        - url
        - user
        - author_association
        - created_at
        - updated_at
      nullable: true
    issue-event-label:
      title: Issue Event Label
      description: Issue Event Label
      type: object
      properties:
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      required:
        - name
        - color
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
            - pull
            - triage
            - push
            - maintain
            - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
        - parent
    issue-event-dismissed-review:
      title: Issue Event Dismissed Review
      type: object
      properties:
        state:
          type: string
        review_id:
          type: integer
        dismissal_message:
          type: string
          nullable: true
        dismissal_commit_id:
          type: string
          nullable: true
      required:
        - state
        - review_id
        - dismissal_message
    issue-event-milestone:
      title: Issue Event Milestone
      description: Issue Event Milestone
      type: object
      properties:
        title:
          type: string
      required:
        - title
    issue-event-project-card:
      title: Issue Event Project Card
      description: Issue Event Project Card
      type: object
      properties:
        url:
          type: string
          format: uri
        id:
          type: integer
        project_url:
          type: string
          format: uri
        project_id:
          type: integer
        column_name:
          type: string
        previous_column_name:
          type: string
      required:
        - url
        - id
        - project_url
        - project_id
        - column_name
    issue-event-rename:
      title: Issue Event Rename
      description: Issue Event Rename
      type: object
      properties:
        from:
          type: string
        to:
          type: string
      required:
        - from
        - to
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
      nullable: true
    issue-event-for-issue:
      title: Issue Event for Issue
      description: Issue Event for Issue
      anyOf:
        - $ref: '#/components/schemas/labeled-issue-event'
        - $ref: '#/components/schemas/unlabeled-issue-event'
        - $ref: '#/components/schemas/assigned-issue-event'
        - $ref: '#/components/schemas/unassigned-issue-event'
        - $ref: '#/components/schemas/milestoned-issue-event'
        - $ref: '#/components/schemas/demilestoned-issue-event'
        - $ref: '#/components/schemas/renamed-issue-event'
        - $ref: '#/components/schemas/review-requested-issue-event'
        - $ref: '#/components/schemas/review-request-removed-issue-event'
        - $ref: '#/components/schemas/review-dismissed-issue-event'
        - $ref: '#/components/schemas/locked-issue-event'
        - $ref: '#/components/schemas/added-to-project-issue-event'
        - $ref: '#/components/schemas/moved-column-in-project-issue-event'
        - $ref: '#/components/schemas/removed-from-project-issue-event'
        - $ref: '#/components/schemas/converted-note-to-issue-issue-event'
    labeled-issue-event:
      title: Labeled Issue Event
      description: Labeled Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
          required:
            - name
            - color
      required:
        - label
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    unlabeled-issue-event:
      title: Unlabeled Issue Event
      description: Unlabeled Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
          required:
            - name
            - color
      required:
        - label
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    assigned-issue-event:
      title: Assigned Issue Event
      description: Assigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/integration'
        assignee:
          $ref: '#/components/schemas/simple-user'
        assigner:
          $ref: '#/components/schemas/simple-user'
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
        - assignee
        - assigner
    unassigned-issue-event:
      title: Unassigned Issue Event
      description: Unassigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        assignee:
          $ref: '#/components/schemas/simple-user'
        assigner:
          $ref: '#/components/schemas/simple-user'
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
        - assignee
        - assigner
    milestoned-issue-event:
      title: Milestoned Issue Event
      description: Milestoned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        milestone:
          type: object
          properties:
            title:
              type: string
          required:
            - title
      required:
        - milestone
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    demilestoned-issue-event:
      title: Demilestoned Issue Event
      description: Demilestoned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        milestone:
          type: object
          properties:
            title:
              type: string
          required:
            - title
      required:
        - milestone
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    renamed-issue-event:
      title: Renamed Issue Event
      description: Renamed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        rename:
          type: object
          properties:
            from:
              type: string
            to:
              type: string
          required:
            - from
            - to
      required:
        - rename
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    review-requested-issue-event:
      title: Review Requested Issue Event
      description: Review Requested Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        review_requester:
          $ref: '#/components/schemas/simple-user'
        requested_team:
          $ref: '#/components/schemas/team'
        requested_reviewer:
          $ref: '#/components/schemas/simple-user'
      required:
        - review_requester
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    review-request-removed-issue-event:
      title: Review Request Removed Issue Event
      description: Review Request Removed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        review_requester:
          $ref: '#/components/schemas/simple-user'
        requested_team:
          $ref: '#/components/schemas/team'
        requested_reviewer:
          $ref: '#/components/schemas/simple-user'
      required:
        - review_requester
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    review-dismissed-issue-event:
      title: Review Dismissed Issue Event
      description: Review Dismissed Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        dismissed_review:
          type: object
          properties:
            state:
              type: string
            review_id:
              type: integer
            dismissal_message:
              nullable: true
              type: string
            dismissal_commit_id:
              type: string
          required:
            - state
            - review_id
            - dismissal_message
      required:
        - dismissed_review
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    locked-issue-event:
      title: Locked Issue Event
      description: Locked Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        lock_reason:
          type: string
          example: '"off-topic"'
          nullable: true
      required:
        - lock_reason
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    added-to-project-issue-event:
      title: Added to Project Issue Event
      description: Added to Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
            - id
            - url
            - project_id
            - project_url
            - column_name
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    moved-column-in-project-issue-event:
      title: Moved Column in Project Issue Event
      description: Moved Column in Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
            - id
            - url
            - project_id
            - project_url
            - column_name
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    removed-from-project-issue-event:
      title: Removed from Project Issue Event
      description: Removed from Project Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
            - id
            - url
            - project_id
            - project_url
            - column_name
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    converted-note-to-issue-issue-event:
      title: Converted Note to Issue Issue Event
      description: Converted Note to Issue Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/integration'
        project_card:
          type: object
          properties:
            id:
              type: integer
            url:
              type: string
              format: uri
            project_id:
              type: integer
            project_url:
              type: string
              format: uri
            column_name:
              type: string
            previous_column_name:
              type: string
          required:
            - id
            - url
            - project_id
            - project_url
            - column_name
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
    integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"'
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
    label:
      title: Label
      description: Color-coded labels help you categorize and filter your issues (just like labels in Gmail).
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 208045946
        node_id:
          type: string
          example: MDU6TGFiZWwyMDgwNDU5NDY=
        url:
          description: URL for the label
          example: https://api.github.com/repositories/42/labels/bug
          type: string
          format: uri
        name:
          description: The name of the label.
          example: bug
          type: string
        description:
          type: string
          example: Something isn't working
          nullable: true
        color:
          description: '6-character hex code, without the leading #, identifying the color'
          example: FFFFFF
          type: string
        default:
          type: boolean
          example: true
      required:
        - id
        - node_id
        - url
        - name
        - description
        - color
        - default
    timeline-issue-events:
      title: Timeline Event
      description: Timeline Event
      type: object
      anyOf:
        - $ref: '#/components/schemas/labeled-issue-event'
        - $ref: '#/components/schemas/unlabeled-issue-event'
        - $ref: '#/components/schemas/milestoned-issue-event'
        - $ref: '#/components/schemas/demilestoned-issue-event'
        - $ref: '#/components/schemas/renamed-issue-event'
        - $ref: '#/components/schemas/review-requested-issue-event'
        - $ref: '#/components/schemas/review-request-removed-issue-event'
        - $ref: '#/components/schemas/review-dismissed-issue-event'
        - $ref: '#/components/schemas/locked-issue-event'
        - $ref: '#/components/schemas/added-to-project-issue-event'
        - $ref: '#/components/schemas/moved-column-in-project-issue-event'
        - $ref: '#/components/schemas/removed-from-project-issue-event'
        - $ref: '#/components/schemas/converted-note-to-issue-issue-event'
        - $ref: '#/components/schemas/timeline-comment-event'
        - $ref: '#/components/schemas/timeline-cross-referenced-event'
        - $ref: '#/components/schemas/timeline-committed-event'
        - $ref: '#/components/schemas/timeline-reviewed-event'
        - $ref: '#/components/schemas/timeline-line-commented-event'
        - $ref: '#/components/schemas/timeline-commit-commented-event'
        - $ref: '#/components/schemas/timeline-assigned-issue-event'
        - $ref: '#/components/schemas/timeline-unassigned-issue-event'
    timeline-comment-event:
      title: Timeline Comment Event
      description: Timeline Comment Event
      type: object
      properties:
        event:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        id:
          description: Unique identifier of the issue comment
          example: 42
          type: integer
        node_id:
          type: string
        url:
          description: URL for the issue comment
          example: https://api.github.com/repositories/42/issues/comments/1
          type: string
          format: uri
        body:
          description: Contents of the issue comment
          example: What version of Safari were you using when you observed this bug?
          type: string
        body_text:
          type: string
        body_html:
          type: string
        html_url:
          type: string
          format: uri
        user:
          $ref: '#/components/schemas/simple-user'
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        issue_url:
          type: string
          format: uri
        author_association:
          $ref: '#/components/schemas/author_association'
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - event
        - actor
        - id
        - node_id
        - html_url
        - issue_url
        - author_association
        - user
        - url
        - created_at
        - updated_at
    timeline-cross-referenced-event:
      title: Timeline Cross Referenced Event
      description: Timeline Cross Referenced Event
      type: object
      properties:
        event:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        source:
          type: object
          properties:
            type:
              type: string
            issue:
              $ref: '#/components/schemas/issue'
      required:
        - event
        - created_at
        - updated_at
        - source
    timeline-committed-event:
      title: Timeline Committed Event
      description: Timeline Committed Event
      type: object
      properties:
        event:
          type: string
        sha:
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
          type: string
        node_id:
          type: string
        url:
          type: string
          format: uri
        author:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
            - email
            - name
            - date
        committer:
          description: Identifying information for the git-user
          type: object
          properties:
            date:
              description: Timestamp of the commit
              example: '2014-08-09T08:02:04+12:00'
              format: date-time
              type: string
            email:
              type: string
              description: Git email address of the user
              example: monalisa.octocat@example.com
            name:
              description: Name of the git user
              example: Monalisa Octocat
              type: string
          required:
            - email
            - name
            - date
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        tree:
          type: object
          properties:
            sha:
              description: SHA for the commit
              example: 7638417db6d59f3c431d3e1f261cc637155684cd
              type: string
            url:
              type: string
              format: uri
          required:
            - sha
            - url
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                description: SHA for the commit
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
                type: string
              url:
                type: string
                format: uri
              html_url:
                type: string
                format: uri
            required:
              - sha
              - url
              - html_url
        verification:
          type: object
          properties:
            verified:
              type: boolean
            reason:
              type: string
            signature:
              type: string
              nullable: true
            payload:
              type: string
              nullable: true
          required:
            - verified
            - reason
            - signature
            - payload
        html_url:
          type: string
          format: uri
      required:
        - sha
        - node_id
        - url
        - html_url
        - author
        - committer
        - tree
        - message
        - parents
        - verification
    timeline-reviewed-event:
      title: Timeline Reviewed Event
      description: Timeline Reviewed Event
      type: object
      properties:
        event:
          type: string
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
        node_id:
          type: string
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          $ref: '#/components/schemas/simple-user'
        body:
          nullable: true
          description: The text of the review.
          example: This looks great.
          type: string
        state:
          type: string
          example: CHANGES_REQUESTED
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          type: object
          properties:
            html:
              type: object
              properties:
                href:
                  type: string
              required:
                - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
              required:
                - href
          required:
            - html
            - pull_request
        submitted_at:
          type: string
          format: date-time
        commit_id:
          description: A commit SHA for the review.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
        body_html:
          type: string
        body_text:
          type: string
        author_association:
          $ref: '#/components/schemas/author_association'
      required:
        - event
        - id
        - node_id
        - user
        - body
        - state
        - commit_id
        - html_url
        - pull_request_url
        - _links
        - author_association
    timeline-line-commented-event:
      title: Timeline Line Commented Event
      description: Timeline Line Commented Event
      type: object
      properties:
        event:
          type: string
        node_id:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/pull-request-review-comment'
    timeline-commit-commented-event:
      title: Timeline Commit Commented Event
      description: Timeline Commit Commented Event
      type: object
      properties:
        event:
          type: string
        node_id:
          type: string
        commit_id:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/commit-comment'
    timeline-assigned-issue-event:
      title: Timeline Assigned Issue Event
      description: Timeline Assigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        assignee:
          $ref: '#/components/schemas/simple-user'
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
        - assignee
    timeline-unassigned-issue-event:
      title: Timeline Unassigned Issue Event
      description: Timeline Unassigned Issue Event
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
        actor:
          $ref: '#/components/schemas/simple-user'
        event:
          type: string
        commit_id:
          type: string
          nullable: true
        commit_url:
          type: string
          nullable: true
        created_at:
          type: string
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        assignee:
          $ref: '#/components/schemas/simple-user'
      required:
        - id
        - node_id
        - url
        - actor
        - event
        - commit_id
        - commit_url
        - created_at
        - performed_via_github_app
        - assignee
    pull-request-review-comment:
      title: Pull Request Review Comment
      description: Pull Request Review Comments are comments on a portion of the Pull Request's diff.
      type: object
      properties:
        url:
          description: URL for the pull request review comment
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          type: string
        pull_request_review_id:
          description: The ID of the pull request review to which the comment belongs.
          example: 42
          type: integer
          nullable: true
        id:
          description: The ID of the pull request review comment.
          example: 1
          type: integer
        node_id:
          description: The node ID of the pull request review comment.
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          description: The diff of the line that the comment refers to.
          type: string
          example: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path:
          description: The relative path of the file to which the comment applies.
          example: config/database.yaml
          type: string
        position:
          description: The line index in the diff to which the comment applies.
          example: 1
          type: integer
        original_position:
          description: The index of the original line in the diff to which the comment applies.
          example: 4
          type: integer
        commit_id:
          description: The SHA of the commit to which the comment applies.
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        original_commit_id:
          description: The SHA of the original commit to which the comment applies.
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          type: string
        in_reply_to_id:
          description: The comment ID to reply to.
          example: 8
          type: integer
        user:
          $ref: '#/components/schemas/simple-user'
        body:
          description: The text of the comment.
          example: We should probably include a check for null values here.
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          description: HTML URL for the pull request review comment.
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          description: URL for the pull request that the review comment belongs to.
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          $ref: '#/components/schemas/author_association'
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              required:
                - href
            html:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
              required:
                - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/1
              required:
                - href
          required:
            - self
            - html
            - pull_request
        start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        original_start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
            - LEFT
            - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The line of the blob to which the comment applies. The last line of the range for a multi-line comment
          example: 2
          type: integer
        side:
          description: The side of the diff to which the comment applies. The side of the last line of the range for a multi-line comment
          enum:
            - LEFT
            - RIGHT
          default: RIGHT
          type: string
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
        body_html:
          type: string
          example: '"<p>comment body</p>"'
        body_text:
          type: string
          example: '"comment body"'
      required:
        - url
        - id
        - node_id
        - pull_request_review_id
        - diff_hunk
        - path
        - position
        - original_position
        - commit_id
        - original_commit_id
        - user
        - body
        - created_at
        - updated_at
        - html_url
        - pull_request_url
        - author_association
        - _links
    commit-comment:
      title: Commit Comment
      description: Commit Comment
      type: object
      properties:
        html_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        body:
          type: string
        path:
          type: string
          nullable: true
        position:
          type: integer
          nullable: true
        line:
          type: integer
          nullable: true
        commit_id:
          type: string
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          $ref: '#/components/schemas/author_association'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
        - url
        - html_url
        - id
        - node_id
        - user
        - position
        - line
        - path
        - commit_id
        - body
        - author_association
        - created_at
        - updated_at
    milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
            - open
            - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
        - closed_issues
        - creator
        - description
        - due_on
        - closed_at
        - id
        - node_id
        - labels_url
        - html_url
        - number
        - open_issues
        - state
        - title
        - url
        - created_at
        - updated_at
  parameters:
    labels:
      name: labels
      description: 'A list of comma separated label names. Example: `bug,ui,@high`'
      in: query
      required: false
      schema:
        type: string
    direction:
      name: direction
      description: One of `asc` (ascending) or `desc` (descending).
      in: query
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
    since:
      name: since
      description: 'Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    org:
      name: org
      in: path
      required: true
      schema:
        type: string
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    sort:
      name: sort
      description: One of `created` (when the repository was starred) or `updated` (when it was last pushed to).
      in: query
      required: false
      schema:
        type: string
        enum:
          - created
          - updated
        default: created
    comment-id:
      name: comment_id
      description: comment_id parameter
      in: path
      required: true
      schema:
        type: integer
    issue-number:
      name: issue_number
      description: issue_number parameter
      in: path
      required: true
      schema:
        type: integer
    milestone-number:
      name: milestone_number
      description: milestone_number parameter
      in: path
      required: true
      schema:
        type: integer
  responses:
    not_modified:
      description: Not modified
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    moved_permanently:
      description: Moved permanently
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    gone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
  securitySchemes: {}
  callbacks: {}
  examples:
    issue-with-repo-items:
      value:
        - id: 1
          node_id: MDU6SXNzdWUx
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          number: 1347
          state: open
          title: Found a bug
          body: I'm having a problem with this.
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          labels:
            - id: 208045946
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
              name: bug
              description: Something isn't working
              color: f29513
              default: true
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          locked: true
          active_lock_reason: too heated
          comments: 0
          pull_request:
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          closed_at: null
          created_at: '2011-04-22T13:33:48Z'
          updated_at: '2011-04-22T13:33:48Z'
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
          author_association: COLLABORATOR
    simple-user-items:
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    issue-items:
      value:
        - id: 1
          node_id: MDU6SXNzdWUx
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          number: 1347
          state: open
          title: Found a bug
          body: I'm having a problem with this.
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          labels:
            - id: 208045946
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
              name: bug
              description: Something isn't working
              color: f29513
              default: true
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          locked: true
          active_lock_reason: too heated
          comments: 0
          pull_request:
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          closed_at: null
          created_at: '2011-04-22T13:33:48Z'
          updated_at: '2011-04-22T13:33:48Z'
          closed_by:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          author_association: COLLABORATOR
    issue:
      value:
        id: 1
        node_id: MDU6SXNzdWUx
        url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        repository_url: https://api.github.com/repos/octocat/Hello-World
        labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
        html_url: https://github.com/octocat/Hello-World/issues/1347
        number: 1347
        state: open
        title: Found a bug
        body: I'm having a problem with this.
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        labels:
          - id: 208045946
            node_id: MDU6TGFiZWwyMDgwNDU5NDY=
            url: https://api.github.com/repos/octocat/Hello-World/labels/bug
            name: bug
            description: Something isn't working
            color: f29513
            default: true
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        locked: true
        active_lock_reason: too heated
        comments: 0
        pull_request:
          url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html_url: https://github.com/octocat/Hello-World/pull/1347
          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        closed_at: null
        created_at: '2011-04-22T13:33:48Z'
        updated_at: '2011-04-22T13:33:48Z'
        closed_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        author_association: COLLABORATOR
    issue-comment-items:
      value:
        - id: 1
          node_id: MDEyOklzc3VlQ29tbWVudDE=
          url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
          html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
          body: Me too
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2011-04-14T16:00:49Z'
          updated_at: '2011-04-14T16:00:49Z'
          issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          author_association: COLLABORATOR
    issue-comment:
      value:
        id: 1
        node_id: MDEyOklzc3VlQ29tbWVudDE=
        url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1
        html_url: https://github.com/octocat/Hello-World/issues/1347#issuecomment-1
        body: Me too
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        author_association: COLLABORATOR
    issue-event-items:
      value:
        - id: 1
          node_id: MDEwOklzc3VlRXZlbnQx
          url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
          actor:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          event: closed
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          created_at: '2011-04-14T16:00:49Z'
          issue:
            id: 1
            node_id: MDU6SXNzdWUx
            url: https://api.github.com/repos/octocat/Hello-World/issues/1347
            repository_url: https://api.github.com/repos/octocat/Hello-World
            labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
            comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
            events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
            html_url: https://github.com/octocat/Hello-World/issues/1347
            number: 1347
            state: open
            title: Found a bug
            body: I'm having a problem with this.
            user:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            labels:
              - id: 208045946
                node_id: MDU6TGFiZWwyMDgwNDU5NDY=
                url: https://api.github.com/repos/octocat/Hello-World/labels/bug
                name: bug
                description: Something isn't working
                color: f29513
                default: true
            assignee:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            assignees:
              - login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
            milestone:
              url: https://api.github.com/repos/octocat/Hello-World/milestones/1
              html_url: https://github.com/octocat/Hello-World/milestones/v1.0
              labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
              id: 1002604
              node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
              number: 1
              state: open
              title: v1.0
              description: Tracking milestone for version 1.0
              creator:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              open_issues: 4
              closed_issues: 8
              created_at: '2011-04-10T20:09:31Z'
              updated_at: '2014-03-03T18:58:10Z'
              closed_at: '2013-02-12T13:22:01Z'
              due_on: '2012-10-09T23:39:01Z'
            locked: true
            active_lock_reason: too heated
            comments: 0
            pull_request:
              url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
              html_url: https://github.com/octocat/Hello-World/pull/1347
              diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
              patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
            closed_at: null
            created_at: '2011-04-22T13:33:48Z'
            updated_at: '2011-04-22T13:33:48Z'
            author_association: COLLABORATOR
    issue-event:
      value:
        id: 1
        node_id: MDEwOklzc3VlRXZlbnQx
        url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
        actor:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        event: closed
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        created_at: '2011-04-14T16:00:49Z'
        issue:
          id: 1
          node_id: MDU6SXNzdWUx
          url: https://api.github.com/repos/octocat/Hello-World/issues/1347
          repository_url: https://api.github.com/repos/octocat/Hello-World
          labels_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}
          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          events_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/events
          html_url: https://github.com/octocat/Hello-World/issues/1347
          number: 1347
          state: open
          title: Found a bug
          body: I'm having a problem with this.
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          labels:
            - id: 208045946
              node_id: MDU6TGFiZWwyMDgwNDU5NDY=
              url: https://api.github.com/repos/octocat/Hello-World/labels/bug
              name: bug
              description: Something isn't working
              color: f29513
              default: true
          assignee:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          assignees:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          locked: true
          performed_via_github_app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: true
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
              - push
              - pull_request
          comments: 0
          pull_request:
            url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
          closed_at: null
          created_at: '2011-04-22T13:33:48Z'
          updated_at: '2011-04-22T13:33:48Z'
          author_association: COLLABORATOR
    issue-event-for-issue-items:
      value:
        - id: 1
          node_id: MDEwOklzc3VlRXZlbnQx
          url: https://api.github.com/repos/octocat/Hello-World/issues/events/1
          actor:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          event: closed
          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          commit_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          created_at: '2011-04-14T16:00:49Z'
          performed_via_github_app: null
          label:
            name: label
            color: red
    label-items:
      value:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        - id: 208045947
          node_id: MDU6TGFiZWwyMDgwNDU5NDc=
          url: https://api.github.com/repos/octocat/Hello-World/labels/enhancement
          name: enhancement
          description: New feature or request
          color: a2eeef
          default: false
    label-items-2:
      value:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
    label:
      value:
        id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: https://api.github.com/repos/octocat/Hello-World/labels/bug
        name: bug
        description: Something isn't working
        color: f29513
        default: true
    label-2:
      value:
        id: 208045946
        node_id: MDU6TGFiZWwyMDgwNDU5NDY=
        url: 'https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:'
        name: 'bug :bug:'
        description: Small bug fix required
        color: b01f26
        default: true
    milestone-items:
      value:
        - url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
    milestone:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id: 1002604
        node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number: 1
        state: open
        title: v1.0
        description: Tracking milestone for version 1.0
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        open_issues: 4
        closed_issues: 8
        created_at: '2011-04-10T20:09:31Z'
        updated_at: '2014-03-03T18:58:10Z'
        closed_at: '2013-02-12T13:22:01Z'
        due_on: '2012-10-09T23:39:01Z'
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    issues:
      id: github.issues.issues
      name: issues
      title: Issues
      methods:
        list:
          operation:
            $ref: '#/paths/~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lock:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1lock/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        unlock:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1lock/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1issues/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/issues/methods/get'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list_for_repo'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list_for_org'
          - $ref: '#/components/x-stackQL-resources/issues/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/issues/methods/create'
        update: []
        delete: []
    assignees:
      id: github.issues.assignees
      name: assignees
      title: Assignees
      methods:
        list_assignees:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1assignees/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_user_can_be_assigned:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1assignees~1{assignee}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        add_assignees:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1assignees/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        remove_assignees:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1assignees/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assignees/methods/list_assignees'
        insert:
          - $ref: '#/components/x-stackQL-resources/assignees/methods/add_assignees'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assignees/methods/remove_assignees'
    comments:
      id: github.issues.comments
      name: comments
      title: Comments
      methods:
        list_comments_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_comments:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_comment:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1comments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/comments/methods/get_comment'
          - $ref: '#/components/x-stackQL-resources/comments/methods/list_comments'
          - $ref: '#/components/x-stackQL-resources/comments/methods/list_comments_for_repo'
        insert:
          - $ref: '#/components/x-stackQL-resources/comments/methods/create_comment'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/comments/methods/delete_comment'
    events_for_issues:
      id: github.issues.events_for_issues
      name: events_for_issues
      title: Events for Issues
      methods:
        list_events:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/events_for_issues/methods/list_events'
        insert: []
        update: []
        delete: []
    events:
      id: github.issues.events
      name: events
      title: Events
      methods:
        list_events_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_event:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1events~1{event_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/events/methods/get_event'
          - $ref: '#/components/x-stackQL-resources/events/methods/list_events_for_repo'
        insert: []
        update: []
        delete: []
    labels:
      id: github.issues.labels
      name: labels
      title: Labels
      methods:
        list_labels_on_issue:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_labels:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_labels:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_all_labels:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_label:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1labels~1{name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_labels_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_label:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_label:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels~1{name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_label:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels~1{name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_label:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1labels~1{name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_labels_for_milestone:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}~1labels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/labels/methods/list_labels_on_issue'
          - $ref: '#/components/x-stackQL-resources/labels/methods/get_label'
          - $ref: '#/components/x-stackQL-resources/labels/methods/list_labels_for_milestone'
          - $ref: '#/components/x-stackQL-resources/labels/methods/list_labels_for_repo'
        insert:
          - $ref: '#/components/x-stackQL-resources/labels/methods/add_labels'
          - $ref: '#/components/x-stackQL-resources/labels/methods/create_label'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/labels/methods/remove_label'
          - $ref: '#/components/x-stackQL-resources/labels/methods/remove_all_labels'
          - $ref: '#/components/x-stackQL-resources/labels/methods/delete_label'
    milestones:
      id: github.issues.milestones
      name: milestones
      title: Milestones
      methods:
        list_milestones:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_milestone:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_milestone:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_milestone:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_milestone:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1milestones~1{milestone_number}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/milestones/methods/get_milestone'
          - $ref: '#/components/x-stackQL-resources/milestones/methods/list_milestones'
        insert:
          - $ref: '#/components/x-stackQL-resources/milestones/methods/create_milestone'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/milestones/methods/delete_milestone'
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - issues
  description: Interact with GitHub Issues.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
