paths:
  /user:
    get:
      summary: Get the authenticated user
      description: |-
        If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the response lists public and private profile information.

        If the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.
      tags:
        - users
      operationId: users/get-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#get-the-authenticated-user
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/private-user'
                  - $ref: '#/components/schemas/public-user'
              examples:
                response-with-public-and-private-profile-information:
                  $ref: '#/components/examples/private-user-response-with-public-and-private-profile-information'
                response-with-public-profile-information:
                  $ref: '#/components/examples/private-user-response-with-public-profile-information'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: null
    patch:
      summary: Update the authenticated user
      description: '**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.'
      tags:
        - users
      operationId: users/update-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users/#update-the-authenticated-user
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The new name of the user.
                  type: string
                  example: Omar Jahandar
                email:
                  description: The publicly visible email address of the user.
                  type: string
                  example: omar@example.com
                blog:
                  description: The new blog URL of the user.
                  type: string
                  example: blog.example.com
                twitter_username:
                  description: The new Twitter username of the user.
                  type: string
                  example: therealomarj
                  nullable: true
                company:
                  description: The new company of the user.
                  type: string
                  example: Acme corporation
                location:
                  description: The new location of the user.
                  type: string
                  example: Berlin, Germany
                hireable:
                  description: The new hiring availability of the user.
                  type: boolean
                bio:
                  description: The new short biography of the user.
                  type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/private-user'
              examples:
                default:
                  $ref: '#/components/examples/private-user'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: null
  /user/blocks:
    get:
      summary: List users blocked by the authenticated user
      description: List the users you've blocked on your personal account.
      tags:
        - users
      operationId: users/list-blocked-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-users-blocked-by-the-authenticated-user
      parameters: []
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '415':
          $ref: '#/components/responses/preview_header_missing'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
  /user/blocks/{username}:
    get:
      summary: Check if a user is blocked by the authenticated user
      description: ''
      tags:
        - users
      operationId: users/check-blocked
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#check-if-a-user-is-blocked-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: 'If the user is blocked:'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          description: 'If the user is not blocked:'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
    put:
      summary: Block a user
      description: ''
      tags:
        - users
      operationId: users/block
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#block-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
    delete:
      summary: Unblock a user
      description: ''
      tags:
        - users
      operationId: users/unblock
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#unblock-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: blocking
  /user/email/visibility:
    patch:
      summary: Set primary email visibility for the authenticated user
      description: Sets the visibility for your primary email addresses.
      tags:
        - users
      operationId: users/set-primary-email-visibility-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                visibility:
                  description: Denotes whether an email is publicly visible.
                  type: string
                  enum:
                    - public
                    - private
              required:
                - visibility
              type: object
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email'
              examples:
                default:
                  $ref: '#/components/examples/email-items-3'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  /user/emails:
    get:
      summary: List email addresses for the authenticated user
      description: Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.
      tags:
        - users
      operationId: users/list-emails-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-email-addresses-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email'
              examples:
                default:
                  $ref: '#/components/examples/email-items-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
    post:
      summary: Add an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      tags:
        - users
      operationId: users/add-email-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#add-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    emails:
                      description: Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.
                      type: array
                      items:
                        type: string
                        example: username@example.com
                        minItems: 1
                      example: []
                  required:
                    - emails
                  example:
                    emails:
                      - octocat@github.com
                      - mona@github.com
                - type: array
                  items:
                    type: string
                    example: username@example.com
                    minItems: 1
                - type: string
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email'
              examples:
                default:
                  $ref: '#/components/examples/email-items'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
    delete:
      summary: Delete an email address for the authenticated user
      description: This endpoint is accessible with the `user` scope.
      tags:
        - users
      operationId: users/delete-email-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#delete-an-email-address-for-the-authenticated-user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  description: Deletes one or more email addresses from your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.
                  properties:
                    emails:
                      description: Email addresses associated with the GitHub user account.
                      type: array
                      items:
                        type: string
                        example: username@example.com
                        minItems: 1
                  example:
                    emails:
                      - octocat@github.com
                      - mona@github.com
                  required:
                    - emails
                - type: array
                  items:
                    type: string
                    example: username@example.com
                    minItems: 1
                - type: string
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  /user/followers:
    get:
      summary: List followers of the authenticated user
      description: Lists the people following the authenticated user.
      tags:
        - users
      operationId: users/list-followers-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-followers-of-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  /user/following:
    get:
      summary: List the people the authenticated user follows
      description: Lists the people who the authenticated user follows.
      tags:
        - users
      operationId: users/list-followed-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-the-people-the-authenticated-user-follows
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  /user/following/{username}:
    get:
      summary: Check if a person is followed by the authenticated user
      description: ''
      tags:
        - users
      operationId: users/check-person-is-followed-by-authenticated
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: if the person is followed by the authenticated user
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          description: if the person is not followed by the authenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
    put:
      summary: Follow a user
      description: |-
        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."

        Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.
      tags:
        - users
      operationId: users/follow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#follow-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
    delete:
      summary: Unfollow a user
      description: Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.
      tags:
        - users
      operationId: users/unfollow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#unfollow-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: followers
  /user/gpg_keys:
    get:
      summary: List GPG keys for the authenticated user
      description: Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
        - users
      operationId: users/list-gpg-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-gpg-keys-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
    post:
      summary: Create a GPG key for the authenticated user
      description: Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      operationId: users/create-gpg-key-for-authenticated-user
      tags:
        - users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#create-a-gpg-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                armored_public_key:
                  description: A GPG key in ASCII-armored format.
                  type: string
              type: object
              required:
                - armored_public_key
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
  /user/gpg_keys/{gpg_key_id}:
    get:
      summary: Get a GPG key for the authenticated user
      description: View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
        - users
      operationId: users/get-gpg-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#get-a-gpg-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/gpg-key-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
    delete:
      summary: Delete a GPG key for the authenticated user
      description: Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
        - users
      operationId: users/delete-gpg-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/gpg-key-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: gpg-keys
  /user/keys:
    get:
      summary: List public SSH keys for the authenticated user
      description: Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
        - users
      operationId: users/list-public-ssh-keys-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/key'
              examples:
                default:
                  $ref: '#/components/examples/key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
    post:
      summary: Create a public SSH key for the authenticated user
      description: Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      operationId: users/create-public-ssh-key-for-authenticated-user
      tags:
        - users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: A descriptive name for the new key.
                  type: string
                  example: Personal MacBook Air
                key:
                  description: The public SSH key to add to your GitHub account.
                  type: string
                  pattern: '^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) '
              required:
                - key
              type: object
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key'
              examples:
                default:
                  $ref: '#/components/examples/key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
  /user/keys/{key_id}:
    get:
      summary: Get a public SSH key for the authenticated user
      description: View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
        - users
      operationId: users/get-public-ssh-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/key-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key'
              examples:
                default:
                  $ref: '#/components/examples/key'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
    delete:
      summary: Delete a public SSH key for the authenticated user
      description: Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
      tags:
        - users
      operationId: users/delete-public-ssh-key-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/key-id'
      responses:
        '204':
          description: Response
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: keys
  /user/public_emails:
    get:
      summary: List public email addresses for the authenticated user
      description: Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.
      tags:
        - users
      operationId: users/list-public-emails-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-public-email-addresses-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/email'
              examples:
                default:
                  $ref: '#/components/examples/email-items-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: emails
  /users:
    get:
      summary: List users
      description: |-
        Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.

        Note: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.
      tags:
        - users
      operationId: users/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-users
      parameters:
        - $ref: '#/components/parameters/since-user'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              example: <https://api.github.com/users?since=135>; rel="next"
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: null
  /users/{username}:
    get:
      summary: Get a user
      description: |-
        Provides publicly available information about someone with a GitHub account.

        GitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See "[Identifying and authorizing users for GitHub Apps](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)" for details about authentication. For an example response, see 'Response with GitHub plan information' below"

        The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/overview/resources-in-the-rest-api#authentication).

        The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see "[Emails API](https://docs.github.com/rest/reference/users#emails)".
      tags:
        - users
      operationId: users/get-by-username
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#get-a-user
      parameters:
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/private-user'
                  - $ref: '#/components/schemas/public-user'
              examples:
                default-response:
                  $ref: '#/components/examples/public-user-default-response'
                response-with-git-hub-plan-information:
                  $ref: '#/components/examples/public-user-response-with-git-hub-plan-information'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: null
  /users/{username}/followers:
    get:
      summary: List followers of a user
      description: Lists the people following the specified user.
      tags:
        - users
      operationId: users/list-followers-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-followers-of-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  /users/{username}/following:
    get:
      summary: List the people a user follows
      description: Lists the people who the specified user follows.
      tags:
        - users
      operationId: users/list-following-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-the-people-a-user-follows
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  /users/{username}/following/{target_user}:
    get:
      summary: Check if a user follows another user
      description: ''
      tags:
        - users
      operationId: users/check-following-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#check-if-a-user-follows-another-user
      parameters:
        - $ref: '#/components/parameters/username'
        - name: target_user
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: if the user follows the target user
        '404':
          description: if the user does not follow the target user
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: followers
  /users/{username}/gpg_keys:
    get:
      summary: List GPG keys for a user
      description: Lists the GPG keys for a user. This information is accessible by anyone.
      tags:
        - users
      operationId: users/list-gpg-keys-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-gpg-keys-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gpg-key'
              examples:
                default:
                  $ref: '#/components/examples/gpg-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: gpg-keys
  /users/{username}/hovercard:
    get:
      summary: Get contextual information for a user
      description: |-
        Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.

        The `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:

        ```shell
         curl -u username:token
          https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
        ```
      tags:
        - users
      operationId: users/get-context-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#get-contextual-information-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - name: subject_type
          description: Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`.
          in: query
          required: false
          schema:
            type: string
            enum:
              - organization
              - repository
              - issue
              - pull_request
        - name: subject_id
          description: Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`.
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hovercard'
              examples:
                default:
                  $ref: '#/components/examples/hovercard'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: users
        subcategory: null
  /users/{username}/keys:
    get:
      summary: List public keys for a user
      description: Lists the _verified_ public SSH keys for a user. This is accessible by anyone.
      tags:
        - users
      operationId: users/list-public-keys-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/users#list-public-keys-for-a-user
      parameters:
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/key-simple'
              examples:
                default:
                  $ref: '#/components/examples/key-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: users
        subcategory: keys
components:
  schemas:
    private-user:
      title: Private User
      description: Private User
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        name:
          type: string
          example: monalisa octocat
          nullable: true
        company:
          type: string
          example: GitHub
          nullable: true
        blog:
          type: string
          example: https://github.com/blog
          nullable: true
        location:
          type: string
          example: San Francisco
          nullable: true
        email:
          type: string
          format: email
          example: octocat@github.com
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          example: There once was...
          nullable: true
        twitter_username:
          type: string
          example: monalisa
          nullable: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        private_gists:
          type: integer
          example: 81
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        disk_usage:
          type: integer
          example: 10000
        collaborators:
          type: integer
          example: 8
        two_factor_authentication:
          type: boolean
          example: true
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
            - collaborators
            - name
            - space
            - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        business_plus:
          type: boolean
        ldap_dn:
          type: string
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - bio
        - blog
        - company
        - email
        - followers
        - following
        - hireable
        - location
        - name
        - public_gists
        - public_repos
        - created_at
        - updated_at
        - collaborators
        - disk_usage
        - owned_private_repos
        - private_gists
        - total_private_repos
        - two_factor_authentication
    public-user:
      title: Public User
      description: Public User
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        name:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        blog:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        hireable:
          type: boolean
          nullable: true
        bio:
          type: string
          nullable: true
        twitter_username:
          type: string
          nullable: true
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        plan:
          type: object
          properties:
            collaborators:
              type: integer
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
          required:
            - collaborators
            - name
            - space
            - private_repos
        suspended_at:
          type: string
          format: date-time
          nullable: true
        private_gists:
          type: integer
          example: 1
        total_private_repos:
          type: integer
          example: 2
        owned_private_repos:
          type: integer
          example: 2
        disk_usage:
          type: integer
          example: 1
        collaborators:
          type: integer
          example: 3
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
        - bio
        - blog
        - company
        - email
        - followers
        - following
        - hireable
        - location
        - name
        - public_gists
        - public_repos
        - created_at
        - updated_at
      additionalProperties: false
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    email:
      title: Email
      description: Email
      type: object
      properties:
        email:
          type: string
          format: email
          example: octocat@github.com
        primary:
          type: boolean
          example: true
        verified:
          type: boolean
          example: true
        visibility:
          type: string
          example: public
          nullable: true
      required:
        - email
        - primary
        - verified
        - visibility
    gpg-key:
      title: GPG Key
      description: A unique encryption key
      type: object
      properties:
        id:
          type: integer
          example: 3
        primary_key_id:
          type: integer
          nullable: true
        key_id:
          type: string
          example: 3262EFF25BA0D270
        public_key:
          type: string
          example: xsBNBFayYZ...
        emails:
          type: array
          example:
            - email: mastahyeti@users.noreply.github.com
              verified: true
          items:
            type: object
            properties:
              email:
                type: string
              verified:
                type: boolean
        subkeys:
          type: array
          example:
            - id: 4
              primary_key_id: 3
              key_id: 4A595D4C72EE49C7
              public_key: zsBNBFayYZ...
              emails: []
              subkeys: []
              can_sign: false
              can_encrypt_comms: true
              can_encrypt_storage: true
              can_certify: false
              created_at: '2016-03-24T11:31:04-06:00'
              expires_at: null
          items:
            type: object
            properties:
              id:
                type: integer
              primary_key_id:
                type: integer
              key_id:
                type: string
              public_key:
                type: string
              emails:
                type: array
                items: {}
              subkeys:
                type: array
                items: {}
              can_sign:
                type: boolean
              can_encrypt_comms:
                type: boolean
              can_encrypt_storage:
                type: boolean
              can_certify:
                type: boolean
              created_at:
                type: string
              expires_at:
                type: string
                nullable: true
              raw_key:
                type: string
                nullable: true
        can_sign:
          type: boolean
          example: true
        can_encrypt_comms:
          type: boolean
        can_encrypt_storage:
          type: boolean
        can_certify:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: '2016-03-24T11:31:04-06:00'
        expires_at:
          type: string
          format: date-time
          nullable: true
        raw_key:
          type: string
          nullable: true
      required:
        - id
        - primary_key_id
        - key_id
        - raw_key
        - public_key
        - created_at
        - expires_at
        - can_sign
        - can_encrypt_comms
        - can_encrypt_storage
        - can_certify
        - emails
        - subkeys
    key:
      title: Key
      description: Key
      type: object
      properties:
        key:
          type: string
        id:
          type: integer
        url:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        verified:
          type: boolean
        read_only:
          type: boolean
      required:
        - key
        - id
        - url
        - title
        - created_at
        - verified
        - read_only
    hovercard:
      title: Hovercard
      description: Hovercard
      type: object
      properties:
        contexts:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              octicon:
                type: string
            required:
              - message
              - octicon
      required:
        - contexts
    key-simple:
      title: Key Simple
      description: Key Simple
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
      required:
        - key
        - id
  parameters:
    username:
      name: username
      in: path
      required: true
      schema:
        type: string
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    gpg-key-id:
      name: gpg_key_id
      description: gpg_key_id parameter
      in: path
      required: true
      schema:
        type: integer
    key-id:
      name: key_id
      description: key_id parameter
      in: path
      required: true
      schema:
        type: integer
    since-user:
      name: since
      description: A user ID. Only return users with an ID greater than this ID.
      in: query
      required: false
      schema:
        type: integer
  responses:
    not_modified:
      description: Not modified
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    preview_header_missing:
      description: Preview header missing
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - documentation_url
            properties:
              message:
                type: string
              documentation_url:
                type: string
  securitySchemes: {}
  callbacks: {}
  examples:
    private-user-response-with-public-and-private-profile-information:
      summary: Response with public and private profile information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        private_gists: 81
        total_private_repos: 100
        owned_private_repos: 100
        disk_usage: 10000
        collaborators: 8
        two_factor_authentication: true
        plan:
          name: Medium
          space: 400
          private_repos: 20
          collaborators: 0
    private-user-response-with-public-profile-information:
      summary: Response with public profile information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
    private-user:
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        private_gists: 81
        total_private_repos: 100
        owned_private_repos: 100
        disk_usage: 10000
        collaborators: 8
        two_factor_authentication: true
        plan:
          name: Medium
          space: 400
          private_repos: 20
          collaborators: 0
    simple-user-items:
      value:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    email-items-3:
      value:
        - email: octocat@github.com
          primary: true
          verified: true
          visibility: private
    email-items-2:
      value:
        - email: octocat@github.com
          verified: true
          primary: true
          visibility: public
    email-items:
      value:
        - email: octocat@octocat.org
          primary: false
          verified: false
          visibility: public
        - email: octocat@github.com
          primary: false
          verified: false
          visibility: null
        - email: mona@github.com
          primary: false
          verified: false
          visibility: null
    gpg-key-items:
      value:
        - id: 3
          primary_key_id: 2
          key_id: 3262EFF25BA0D270
          public_key: xsBNBFayYZ...
          emails:
            - email: mastahyeti@users.noreply.github.com
              verified: true
          subkeys:
            - id: 4
              primary_key_id: 3
              key_id: 4A595D4C72EE49C7
              public_key: zsBNBFayYZ...
              emails: []
              subkeys: []
              can_sign: false
              can_encrypt_comms: true
              can_encrypt_storage: true
              can_certify: false
              created_at: '2016-03-24T11:31:04-06:00'
              expires_at: '2016-03-24T11:31:04-07:00'
          can_sign: true
          can_encrypt_comms: false
          can_encrypt_storage: false
          can_certify: true
          created_at: '2016-03-24T11:31:04-06:00'
          expires_at: '2016-03-24T11:31:04-07:00'
          raw_key: string
    gpg-key:
      value:
        id: 3
        primary_key_id: 2
        key_id: 3262EFF25BA0D270
        public_key: xsBNBFayYZ...
        emails:
          - email: mastahyeti@users.noreply.github.com
            verified: true
        subkeys:
          - id: 4
            primary_key_id: 3
            key_id: 4A595D4C72EE49C7
            public_key: zsBNBFayYZ...
            emails: []
            subkeys: []
            can_sign: false
            can_encrypt_comms: true
            can_encrypt_storage: true
            can_certify: false
            created_at: '2016-03-24T11:31:04-06:00'
            expires_at: '2016-03-24T11:31:04-07:00'
        can_sign: true
        can_encrypt_comms: false
        can_encrypt_storage: false
        can_certify: true
        created_at: '2016-03-24T11:31:04-06:00'
        expires_at: '2016-03-24T11:31:04-07:00'
        raw_key: '"-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\nIts/HFYRLiFgDLmTlxo=\n=+OzK\n-----END PGP PUBLIC KEY BLOCK-----"'
    key-items:
      value:
        - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
          id: 2
          url: https://api.github.com/user/keys/2
          title: ssh-rsa AAAAB3NzaC1yc2EAAA
          created_at: '2020-06-11T21:31:57Z'
          verified: false
          read_only: false
        - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234
          id: 3
          url: https://api.github.com/user/keys/3
          title: ssh-rsa AAAAB3NzaC1yc2EAAB
          created_at: '2020-07-11T21:31:57Z'
          verified: false
          read_only: false
    key:
      value:
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
        id: 2
        url: https://api.github.com/user/keys/2
        title: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at: '2020-06-11T21:31:57Z'
        verified: false
        read_only: false
    public-user-default-response:
      summary: Default response
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
    public-user-response-with-git-hub-plan-information:
      summary: Response with GitHub plan information
      value:
        login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        name: monalisa octocat
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        hireable: false
        bio: There once was...
        twitter_username: monatheoctocat
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        created_at: '2008-01-14T04:33:35Z'
        updated_at: '2008-01-14T04:33:35Z'
        plan:
          name: pro
          space: 976562499
          collaborators: 0
          private_repos: 9999
    hovercard:
      value:
        contexts:
          - message: Owns this repository
            octicon: repo
    key-simple-items:
      value:
        - id: 1
          key: ssh-rsa AAA...
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    context:
      id: github.users.context
      name: context
      title: Context for User
      methods:
        get_context_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1hovercard/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contexts
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/context/methods/get_context_for_user'
        insert: []
        update: []
        delete: []
    users:
      id: github.users.users
      name: users
      title: Users
      methods:
        get_authenticated:
          operation:
            $ref: '#/paths/~1user/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_authenticated:
          operation:
            $ref: '#/paths/~1user/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_by_username:
          operation:
            $ref: '#/paths/~1users~1{username}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get_by_username'
        insert: []
        update: []
        delete: []
    blocking:
      id: github.users.blocking
      name: blocking
      title: Blocking
      methods:
        list_blocked_by_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1blocks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_blocked:
          operation:
            $ref: '#/paths/~1user~1blocks~1{username}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        block:
          operation:
            $ref: '#/paths/~1user~1blocks~1{username}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        unblock:
          operation:
            $ref: '#/paths/~1user~1blocks~1{username}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/blocking/methods/list_blocked_by_authenticated_user'
        insert: []
        update: []
        delete: []
    public_emails:
      id: github.users.public_emails
      name: public_emails
      title: Public Emails
      methods:
        list_public_emails_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1public_emails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/public_emails/methods/list_public_emails_for_authenticated_user'
        insert: []
        update: []
        delete: []
    emails:
      id: github.users.emails
      name: emails
      title: Emails
      methods:
        set_primary_email_visibility_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1email~1visibility/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_emails_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1emails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_email_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1emails/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_email_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1emails/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/emails/methods/list_emails_for_authenticated_user'
        insert:
          - $ref: '#/components/x-stackQL-resources/emails/methods/add_email_for_authenticated_user'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/emails/methods/delete_email_for_authenticated_user'
    following:
      id: github.users.following
      name: following
      title: Following
      methods:
        list_followed_by_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1following/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_person_is_followed_by_authenticated:
          operation:
            $ref: '#/paths/~1user~1following~1{username}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_following_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1following/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_following_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1following~1{target_user}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        follow:
          operation:
            $ref: '#/paths/~1user~1following~1{username}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        unfollow:
          operation:
            $ref: '#/paths/~1user~1following~1{username}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/following/methods/list_following_for_user'
          - $ref: '#/components/x-stackQL-resources/following/methods/list_followed_by_authenticated_user'
        insert: []
        update: []
        delete: []
    followers:
      id: github.users.followers
      name: followers
      title: Followers
      methods:
        list_followers_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1followers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_followers_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1followers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/followers/methods/list_followers_for_user'
          - $ref: '#/components/x-stackQL-resources/followers/methods/list_followers_for_authenticated_user'
        insert: []
        update: []
        delete: []
    gpg_keys:
      id: github.users.gpg_keys
      name: gpg_keys
      title: Gpg_keys
      methods:
        list_gpg_keys_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1gpg_keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_gpg_key_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1gpg_keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_gpg_key_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1gpg_keys~1{gpg_key_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_gpg_key_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1gpg_keys~1{gpg_key_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_gpg_keys_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1gpg_keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/get_gpg_key_for_authenticated_user'
          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/list_gpg_keys_for_user'
          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/list_gpg_keys_for_authenticated_user'
        insert:
          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/create_gpg_key_for_authenticated_user'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/delete_gpg_key_for_authenticated_user'
    keys:
      id: github.users.keys
      name: keys
      title: Keys
      methods:
        list_public_ssh_keys_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_public_ssh_key_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_public_ssh_key_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1keys~1{key_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_public_ssh_key_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1keys~1{key_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_public_keys_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/get_public_ssh_key_for_authenticated_user'
          - $ref: '#/components/x-stackQL-resources/keys/methods/list_public_keys_for_user'
          - $ref: '#/components/x-stackQL-resources/keys/methods/list_public_ssh_keys_for_authenticated_user'
        insert:
          - $ref: '#/components/x-stackQL-resources/keys/methods/create_public_ssh_key_for_authenticated_user'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/keys/methods/delete_public_ssh_key_for_authenticated_user'
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - users
  description: Interact with and view information about users and also current user.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
