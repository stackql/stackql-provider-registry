paths:
  /orgs/{org}/actions/permissions:
    get:
      summary: Get GitHub Actions permissions for an organization
      description: |-
        Gets the GitHub Actions permissions policy for repositories and allowed actions in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/get-github-actions-permissions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-organization-permissions'
              examples:
                default:
                  $ref: '#/components/examples/actions-organization-permissions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set GitHub Actions permissions for an organization
      description: |-
        Sets the GitHub Actions permissions policy for repositories and allowed actions in an organization.

        If the organization belongs to an enterprise that has set restrictive permissions at the enterprise level, such as `allowed_actions` to `selected` actions, then you cannot override them for the organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/set-github-actions-permissions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled_repositories:
                  $ref: '#/components/schemas/enabled-repositories'
                allowed_actions:
                  $ref: '#/components/schemas/allowed-actions'
              required:
                - enabled_repositories
            example:
              enabled_repositories: all
              allowed_actions: selected
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/repositories:
    get:
      summary: List selected repositories enabled for GitHub Actions in an organization
      description: |-
        Lists the selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/list-selected-repositories-enabled-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: number
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-paginated'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set selected repositories enabled for GitHub Actions in an organization
      description: |-
        Replaces the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/set-selected-repositories-enabled-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-selected-repositories-enabled-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  description: List of repository IDs to enable for GitHub Actions.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
              required:
                - selected_repository_ids
            example:
              selected_repository_ids:
                - 32
                - 42
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/repositories/{repository_id}:
    put:
      summary: Enable a selected repository for GitHub Actions in an organization
      description: |-
        Adds a repository to the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/enable-selected-repository-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#enable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    delete:
      summary: Disable a selected repository for GitHub Actions in an organization
      description: |-
        Removes a repository from the list of selected repositories that are enabled for GitHub Actions in an organization. To use this endpoint, the organization permission policy for `enabled_repositories` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/disable-selected-repository-github-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#disable-a-selected-repository-for-github-actions-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/selected-actions:
    get:
      summary: Get allowed actions for an organization
      description: |-
        Gets the selected actions that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization).""

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/get-allowed-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-allowed-actions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selected-actions'
              examples:
                default:
                  $ref: '#/components/examples/selected-actions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set allowed actions for an organization
      description: |-
        Sets the actions that are allowed in an organization. To use this endpoint, the organization permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an organization](#set-github-actions-permissions-for-an-organization)."

        If the organization belongs to an enterprise that has `selected` actions set at the enterprise level, then you cannot override any of the enterprise's allowed actions settings.

        To use the `patterns_allowed` setting for private repositories, the organization must belong to an enterprise. If the organization does not belong to an enterprise, then the `patterns_allowed` setting only applies to public repositories in the organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      operationId: actions/set-allowed-actions-organization
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-allowed-actions-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/selected-actions'
            examples:
              selected_actions:
                $ref: '#/components/examples/selected-actions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/permissions/workflow:
    get:
      summary: Get default workflow permissions
      description: |-
        Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization,
        as well if GitHub Actions can submit approving pull request reviews.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      tags:
        - actions
      operationId: actions/get-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-default-workflow-permissions
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-get-default-workflow-permissions'
              examples:
                default:
                  $ref: '#/components/examples/actions-default-workflow-permissions'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
    put:
      summary: Set default workflow permissions
      description: |-
        Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an organization, and sets if GitHub Actions
        can submit approving pull request reviews.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `administration` organization permission to use this API.
      tags:
        - actions
      operationId: actions/set-github-actions-default-workflow-permissions-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-default-workflow-permissions
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions-set-default-workflow-permissions'
            examples:
              default:
                $ref: '#/components/examples/actions-default-workflow-permissions'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: permissions
  /orgs/{org}/actions/runner-groups:
    get:
      summary: List self-hosted runner groups for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/list-self-hosted-runner-groups-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-self-hosted-runner-groups-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runner_groups
                properties:
                  total_count:
                    type: number
                  runner_groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-groups-org'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    post:
      summary: Create a self-hosted runner group for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Creates a new self-hosted runner group for an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/create-self-hosted-runner-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner group.
                  type: string
                visibility:
                  description: 'Visibility of a runner group. You can select all repositories, select individual repositories, or limit access to private repositories. Can be one of: `all`, `selected`, or `private`.'
                  type: string
                  enum:
                    - selected
                    - all
                    - private
                  default: all
                selected_repository_ids:
                  description: List of repository IDs that can access the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
                runners:
                  description: List of runner IDs to add to the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the runner.
                allows_public_repositories:
                  description: Whether the runner group can be used by `public` repositories.
                  type: boolean
                  default: false
              required:
                - name
            example:
              name: Expensive hardware runners
              visibility: selected
              selected_repository_ids:
                - 32
                - 91
              runners:
                - 9
                - 2
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-group'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}:
    get:
      summary: Get a self-hosted runner group for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Gets a specific self-hosted runner group for an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/get-self-hosted-runner-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-group-item'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    patch:
      summary: Update a self-hosted runner group for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Updates the `name` and `visibility` of a self-hosted runner group in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/update-self-hosted-runner-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#update-a-self-hosted-runner-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Name of the runner group.
                  type: string
                visibility:
                  description: 'Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`.'
                  type: string
                  enum:
                    - selected
                    - all
                    - private
                allows_public_repositories:
                  description: Whether the runner group can be used by `public` repositories.
                  type: boolean
                  default: false
              required:
                - name
            example:
              name: Expensive hardware runners
              visibility: selected
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner-groups-org'
              examples:
                default:
                  $ref: '#/components/examples/runner-group'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Delete a self-hosted runner group from an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Deletes a self-hosted runner group for an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/delete-self-hosted-runner-group-from-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-group-from-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories:
    get:
      summary: List repository access to a self-hosted runner group in an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Lists the repositories with access to a self-hosted runner group configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/list-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: number
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-paginated'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    put:
      summary: Set repository access for a self-hosted runner group in an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Replaces the list of repositories that have access to a self-hosted runner group configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/set-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  description: List of repository IDs that can access the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the repository.
              required:
                - selected_repository_ids
            example:
              selected_repository_ids:
                - 32
                - 91
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}:
    put:
      summary: Add repository access to a self-hosted runner group in an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."


        Adds a repository to the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see "[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization)."

        You must authenticate using an access token with the `admin:org`
        scope to use this endpoint.
      operationId: actions/add-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#add-repository-acess-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: true
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Remove repository access to a self-hosted runner group in an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."


        Removes a repository from the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see "[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization)."

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/remove-repo-access-to-self-hosted-runner-group-in-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/repository-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/runners:
    get:
      summary: List self-hosted runners in a group for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Lists self-hosted runners that are in a specific organization group.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/list-self-hosted-runners-in-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: number
                  runners:
                    type: array
                    items:
                      $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    put:
      summary: Set self-hosted runners in a group for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."

        Replaces the list of self-hosted runners that are part of an organization runner group.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/set-self-hosted-runners-in-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                runners:
                  description: List of runner IDs to add to the runner group.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the runner.
              required:
                - runners
            example:
              runners:
                - 9
                - 2
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}:
    put:
      summary: Add a self-hosted runner to a group for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."


        Adds a self-hosted runner to a runner group configured in an organization.

        You must authenticate using an access token with the `admin:org`
        scope to use this endpoint.
      operationId: actions/add-self-hosted-runner-to-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
    delete:
      summary: Remove a self-hosted runner from a group for an organization
      description: |-
        The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)."


        Removes a self-hosted runner from a group configured in an organization. The runner is then returned to the default group.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      operationId: actions/remove-self-hosted-runner-from-group-for-org
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-group-id'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '204':
          description: Response
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: self-hosted-runner-groups
  /orgs/{org}/actions/runners:
    get:
      summary: List self-hosted runners for an organization
      description: |-
        Lists all self-hosted runners configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-self-hosted-runners-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: integer
                  runners:
                    type: array
                    items:
                      $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/downloads:
    get:
      summary: List runner applications for an organization
      description: |-
        Lists binaries for the runner application that you can download and run.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-runner-applications-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-runner-applications-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/runner-application'
              examples:
                default:
                  $ref: '#/components/examples/runner-application-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/registration-token:
    post:
      summary: Create a registration token for an organization
      description: |-
        Returns a token that you can pass to the `config` script. The token expires after one hour.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.

        #### Example using registration token

        Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.

        ```
        ./config.sh --url https://github.com/octo-org --token TOKEN
        ```
      tags:
        - actions
      operationId: actions/create-registration-token-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-a-registration-token-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-token'
              examples:
                default:
                  $ref: '#/components/examples/authentication-token'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/remove-token:
    post:
      summary: Create a remove token for an organization
      description: |-
        Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token expires after one hour.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.

        #### Example using remove token

        To remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this
        endpoint.

        ```
        ./config.sh remove --token TOKEN
        ```
      tags:
        - actions
      operationId: actions/create-remove-token-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-a-remove-token-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-token'
              examples:
                default:
                  $ref: '#/components/examples/authentication-token-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}:
    get:
      summary: Get a self-hosted runner for an organization
      description: |-
        Gets a specific self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/get-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Delete a self-hosted runner from an organization
      description: |-
        Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-self-hosted-runner-from-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}/labels:
    get:
      summary: List labels for a self-hosted runner for an organization
      description: |-
        Lists all labels for a self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    post:
      summary: Add custom labels to a self-hosted runner for an organization
      description: |-
        Add custom labels to a self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/add-custom-labels-to-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#add-custom-labels-to-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  description: The names of the custom labels to add to the runner.
                  items:
                    type: string
            example:
              labels:
                - gpu
                - accelerated
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    put:
      summary: Set custom labels for a self-hosted runner for an organization
      description: |-
        Remove all previous custom labels and set the new custom labels for a specific
        self-hosted runner configured in an organization.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/set-custom-labels-for-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-custom-labels-for-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 0
                  maxItems: 100
                  description: The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels.
                  items:
                    type: string
            example:
              labels:
                - gpu
                - accelerated
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Remove all custom labels from a self-hosted runner for an organization
      description: |-
        Remove all custom labels from a self-hosted runner configured in an
        organization. Returns the remaining read-only labels from the runner.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/remove-all-custom-labels-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#remove-all-custom-labels-from-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels_readonly'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/runners/{runner_id}/labels/{name}:
    delete:
      summary: Remove a custom label from a self-hosted runner for an organization
      description: |-
        Remove a custom label from a self-hosted runner configured
        in an organization. Returns the remaining labels from the runner.

        This endpoint returns a `404 Not Found` status if the custom label is not
        present on the runner.

        You must authenticate using an access token with the `admin:org` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/remove-custom-label-from-self-hosted-runner-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#remove-a-custom-label-from-a-self-hosted-runner-for-an-organization
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/runner-id'
        - $ref: '#/components/parameters/runner-label-name'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /orgs/{org}/actions/secrets:
    get:
      summary: List organization secrets
      description: Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-org-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-organization-secrets
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: '#/components/schemas/organization-actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/organization-actions-secret-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/public-key:
    get:
      summary: Get an organization public key
      description: Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-org-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-an-organization-public-key
      parameters:
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-public-key'
              examples:
                default:
                  $ref: '#/components/examples/actions-public-key'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}:
    get:
      summary: Get an organization secret
      description: Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/organization-actions-secret'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update an organization secret
      description: |-
        Creates or updates an organization secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access
        token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to
        use this endpoint.

        #### Example encrypting a secret using Node.js

        Encrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.

        ```
        const sodium = require('tweetsodium');

        const key = "base64-encoded-public-key";
        const value = "plain-text-secret";

        // Convert the message and key to Uint8Array's (Buffer implements that interface)
        const messageBytes = Buffer.from(value);
        const keyBytes = Buffer.from(key, 'base64');

        // Encrypt using LibSodium.
        const encryptedBytes = sodium.seal(messageBytes, keyBytes);

        // Base64 the encrypted secret
        const encrypted = Buffer.from(encryptedBytes).toString('base64');

        console.log(encrypted);
        ```


        #### Example encrypting a secret using Python

        Encrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.

        ```
        from base64 import b64encode
        from nacl import encoding, public

        def encrypt(public_key: str, secret_value: str) -> str:
          """Encrypt a Unicode string using the public key."""
          public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
          sealed_box = public.SealedBox(public_key)
          encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
          return b64encode(encrypted).decode("utf-8")
        ```

        #### Example encrypting a secret using C#

        Encrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.

        ```
        var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");
        var publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");

        var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);

        Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));
        ```

        #### Example encrypting a secret using Ruby

        Encrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.

        ```ruby
        require "rbnacl"
        require "base64"

        key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")
        public_key = RbNaCl::PublicKey.new(key)

        box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
        encrypted_secret = box.encrypt("my_secret")

        # Print the base64 encoded secret
        puts Base64.strict_encode64(encrypted_secret)
        ```
      tags:
        - actions
      operationId: actions/create-or-update-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/rest/reference/actions#get-an-organization-public-key) endpoint.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
                visibility:
                  type: string
                  description: |-
                    Configures the access that repositories have to the organization secret. Can be one of:  
                    \- `all` - All repositories in an organization can access the secret.  
                    \- `private` - Private repositories in an organization can access the secret.  
                    \- `selected` - Only specific repositories can access the secret.
                  enum:
                    - all
                    - private
                    - selected
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.
                  items:
                    type: string
              required:
                - visibility
            example:
              encrypted_value: c2VjcmV0
              key_id: '012345678912345678'
              visibility: selected
              selected_repository_ids:
                - '1296269'
                - '1296280'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete an organization secret
      description: Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}/repositories:
    get:
      summary: List selected repositories for an organization secret
      description: Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - repositories
                properties:
                  total_count:
                    type: integer
                  repositories:
                    type: array
                    items:
                      $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/public-repository-paginated'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Set selected repositories for an organization secret
      description: Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/set-selected-repos-for-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                selected_repository_ids:
                  type: array
                  description: An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Set selected repositories for an organization secret](https://docs.github.com/rest/reference/actions#set-selected-repositories-for-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.
                  items:
                    type: integer
              required:
                - selected_repository_ids
            example:
              selected_repository_ids:
                - 64780797
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}:
    put:
      summary: Add selected repository to an organization secret
      description: Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/add-selected-repo-to-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#add-selected-repository-to-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content when repository was added to the selected list
        '409':
          description: Conflict when visibility type is not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Remove selected repository from an organization secret
      description: Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
      tags:
        - actions
      operationId: actions/remove-selected-repo-from-org-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret
      parameters:
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/secret-name'
        - name: repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Response when repository was removed from the selected list
        '409':
          description: Conflict when visibility type not set to selected
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/artifacts:
    get:
      summary: List artifacts for a repository
      description: Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-artifacts-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-artifacts-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - artifacts
                properties:
                  total_count:
                    type: integer
                  artifacts:
                    type: array
                    items:
                      $ref: '#/components/schemas/artifact'
              examples:
                default:
                  $ref: '#/components/examples/artifact-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/artifacts/{artifact_id}:
    get:
      summary: Get an artifact
      description: Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-an-artifact
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/artifact-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/artifact'
              examples:
                default:
                  $ref: '#/components/examples/artifact'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
    delete:
      summary: Delete an artifact
      description: Deletes an artifact for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-an-artifact
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/artifact-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}:
    get:
      summary: Download an artifact
      description: |-
        Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in
        the response header to find the URL for the download. The `:archive_format` must be `zip`. Anyone with read access to
        the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
        GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/download-artifact
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#download-an-artifact
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/artifact-id'
        - name: archive_format
          in: path
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              $ref: '#/components/headers/location'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/jobs/{job_id}:
    get:
      summary: Get a job for a workflow run
      description: Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-job-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-job-for-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/job-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
              examples:
                default:
                  $ref: '#/components/examples/job'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/jobs/{job_id}/logs:
    get:
      summary: Download job logs for a workflow run
      description: |-
        Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look
        for `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can
        use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must
        have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/download-job-logs-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#download-job-logs-for-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/job-id'
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/jobs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/permissions:
    get:
      summary: Get GitHub Actions permissions for a repository
      description: |-
        Gets the GitHub Actions permissions policy for a repository, including whether GitHub Actions is enabled and the actions allowed to run in the repository.

        You must authenticate using an access token with the `repo` scope to use this
        endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/get-github-actions-permissions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-github-actions-permissions-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-repository-permissions'
              examples:
                default:
                  $ref: '#/components/examples/actions-repository-permissions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set GitHub Actions permissions for a repository
      description: |-
        Sets the GitHub Actions permissions policy for enabling GitHub Actions and allowed actions in the repository.

        If the repository belongs to an organization or enterprise that has set restrictive permissions at the organization or enterprise levels, such as `allowed_actions` to `selected` actions, then you cannot override them for the repository.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/set-github-actions-permissions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-github-actions-permissions-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  $ref: '#/components/schemas/actions-enabled'
                allowed_actions:
                  $ref: '#/components/schemas/allowed-actions'
              required:
                - enabled
            example:
              enabled: true
              allowed_actions: selected
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /repos/{owner}/{repo}/actions/permissions/selected-actions:
    get:
      summary: Get allowed actions for a repository
      description: |-
        Gets the settings for selected actions that are allowed in a repository. To use this endpoint, the repository policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/get-allowed-actions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-allowed-actions-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/selected-actions'
              examples:
                default:
                  $ref: '#/components/examples/selected-actions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
    put:
      summary: Set allowed actions for a repository
      description: |-
        Sets the actions that are allowed in a repository. To use this endpoint, the repository permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for a repository](#set-github-actions-permissions-for-a-repository)."

        If the repository belongs to an organization or enterprise that has `selected` actions set at the organization or enterprise levels, then you cannot override any of the allowed actions settings.

        To use the `patterns_allowed` setting for private repositories, the repository must belong to an enterprise. If the repository does not belong to an enterprise, then the `patterns_allowed` setting only applies to public repositories.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `administration` repository permission to use this API.
      operationId: actions/set-allowed-actions-repository
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-allowed-actions-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/selected-actions'
            examples:
              selected_actions:
                $ref: '#/components/examples/selected-actions'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: actions
        subcategory: permissions
  /repos/{owner}/{repo}/actions/runners:
    get:
      summary: List self-hosted runners for a repository
      description: Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-self-hosted-runners-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-self-hosted-runners-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - runners
                properties:
                  total_count:
                    type: integer
                  runners:
                    type: array
                    items:
                      $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/downloads:
    get:
      summary: List runner applications for a repository
      description: |-
        Lists binaries for the runner application that you can download and run.

        You must authenticate using an access token with the `repo` scope to use this endpoint.
      tags:
        - actions
      operationId: actions/list-runner-applications-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-runner-applications-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/runner-application'
              examples:
                default:
                  $ref: '#/components/examples/runner-application-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/registration-token:
    post:
      summary: Create a registration token for a repository
      description: |-
        Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate
        using an access token with the `repo` scope to use this endpoint.

        #### Example using registration token
         
        Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.

        ```
        ./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN
        ```
      tags:
        - actions
      operationId: actions/create-registration-token-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-a-registration-token-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-token'
              examples:
                default:
                  $ref: '#/components/examples/authentication-token'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/remove-token:
    post:
      summary: Create a remove token for a repository
      description: |-
        Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour.
        You must authenticate using an access token with the `repo` scope to use this endpoint.

        #### Example using remove token
         
        To remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint.

        ```
        ./config.sh remove --token TOKEN
        ```
      tags:
        - actions
      operationId: actions/create-remove-token-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-a-remove-token-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-token'
              examples:
                default:
                  $ref: '#/components/examples/authentication-token-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/{runner_id}:
    get:
      summary: Get a self-hosted runner for a repository
      description: |-
        Gets a specific self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/get-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runner'
              examples:
                default:
                  $ref: '#/components/examples/runner'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Delete a self-hosted runner from a repository
      description: |-
        Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.

        You must authenticate using an access token with the `repo`
        scope to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-self-hosted-runner-from-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-from-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/{runner_id}/labels:
    get:
      summary: List labels for a self-hosted runner for a repository
      description: |-
        Lists all labels for a self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/list-labels-for-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-labels-for-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    post:
      summary: Add custom labels to a self-hosted runner for a repository
      description: |-
        Add custom labels to a self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/add-custom-labels-to-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#add-custom-labels-to-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/runner-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 1
                  maxItems: 100
                  description: The names of the custom labels to add to the runner.
                  items:
                    type: string
            example:
              labels:
                - gpu
                - accelerated
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    put:
      summary: Set custom labels for a self-hosted runner for a repository
      description: |-
        Remove all previous custom labels and set the new custom labels for a specific
        self-hosted runner configured in a repository.

        You must authenticate using an access token with the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/set-custom-labels-for-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#set-custom-labels-for-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/runner-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labels
              properties:
                labels:
                  type: array
                  minItems: 0
                  maxItems: 100
                  description: The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels.
                  items:
                    type: string
            example:
              labels:
                - gpu
                - accelerated
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
    delete:
      summary: Remove all custom labels from a self-hosted runner for a repository
      description: |-
        Remove all custom labels from a self-hosted runner configured in a
        repository. Returns the remaining read-only labels from the runner.

        You must authenticate using an access token with the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/remove-all-custom-labels-from-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#remove-all-custom-labels-from-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/runner-id'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels_readonly'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}:
    delete:
      summary: Remove a custom label from a self-hosted runner for a repository
      description: |-
        Remove a custom label from a self-hosted runner configured
        in a repository. Returns the remaining labels from the runner.

        This endpoint returns a `404 Not Found` status if the custom label is not
        present on the runner.

        You must authenticate using an access token with the `repo` scope to use this
        endpoint.
      tags:
        - actions
      operationId: actions/remove-custom-label-from-self-hosted-runner-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#remove-a-custom-label-from-a-self-hosted-runner-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/runner-id'
        - $ref: '#/components/parameters/runner-label-name'
      responses:
        '200':
          $ref: '#/components/responses/actions_runner_labels'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: self-hosted-runners
  /repos/{owner}/{repo}/actions/runs:
    get:
      summary: List workflow runs for a repository
      description: |-
        Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-workflow-runs-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-workflow-runs-for-a-repository
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/actor'
        - $ref: '#/components/parameters/workflow-run-branch'
        - $ref: '#/components/parameters/event'
        - $ref: '#/components/parameters/workflow-run-status'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/created'
        - $ref: '#/components/parameters/exclude-pull-requests'
        - $ref: '#/components/parameters/workflow-run-check-suite-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - workflow_runs
                properties:
                  total_count:
                    type: integer
                  workflow_runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/workflow-run'
              examples:
                default:
                  $ref: '#/components/examples/workflow-run-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}:
    get:
      summary: Get a workflow run
      description: Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
        - $ref: '#/components/parameters/exclude-pull-requests'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow-run'
              examples:
                default:
                  $ref: '#/components/examples/workflow-run'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    delete:
      summary: Delete a workflow run
      description: |-
        Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is
        private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:write` permission to use
        this endpoint.
      operationId: actions/delete-workflow-run
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/approvals:
    get:
      summary: Get the review history for a workflow run
      description: Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-reviews-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-the-review-history-for-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/environment-approvals'
              examples:
                default:
                  $ref: '#/components/examples/environment-approvals-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/approve:
    post:
      summary: Approve a workflow run for a fork pull request
      description: |-
        Approves a workflow run for a pull request from a public fork of a first time contributor. For more information, see ["Approving workflow runs from public forks](https://docs.github.com/actions/managing-workflow-runs/approving-workflow-runs-from-public-forks)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/approve-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#approve-a-workflow-run-for-a-fork-pull-request
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts:
    get:
      summary: List workflow run artifacts
      description: Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-workflow-run-artifacts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-workflow-run-artifacts
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - artifacts
                properties:
                  total_count:
                    type: integer
                  artifacts:
                    type: array
                    items:
                      $ref: '#/components/schemas/artifact'
              examples:
                default:
                  $ref: '#/components/examples/artifact-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: artifacts
  /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}:
    get:
      summary: Get a workflow run attempt
      description: |-
        Gets a specific workflow run attempt. Anyone with read access to the repository
        can use this endpoint. If the repository is private you must use an access token
        with the `repo` scope. GitHub Apps must have the `actions:read` permission to
        use this endpoint.
      tags:
        - actions
      operationId: actions/get-workflow-run-attempt
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-workflow-run-attempt
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
        - $ref: '#/components/parameters/attempt-number'
        - $ref: '#/components/parameters/exclude-pull-requests'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow-run'
              examples:
                default:
                  $ref: '#/components/examples/workflow-run'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs:
    get:
      summary: List jobs for a workflow run attempt
      description: Lists jobs for a specific workflow run attempt. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).
      tags:
        - actions
      operationId: actions/list-jobs-for-workflow-run-attempt
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-jobs-for-a-workflow-run-attempt
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
        - $ref: '#/components/parameters/attempt-number'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - jobs
                properties:
                  total_count:
                    type: integer
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/job'
              examples:
                default:
                  $ref: '#/components/examples/job-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs:
    get:
      summary: Download workflow run attempt logs
      description: |-
        Gets a redirect URL to download an archive of log files for a specific workflow run attempt. This link expires after
        1 minute. Look for `Location:` in the response header to find the URL for the download. Anyone with read access to
        the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
        GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/download-workflow-run-attempt-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#download-workflow-run-attempt-logs
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
        - $ref: '#/components/parameters/attempt-number'
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/cancel:
    post:
      summary: Cancel a workflow run
      description: Cancels a workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/cancel-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#cancel-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/jobs:
    get:
      summary: List jobs for a workflow run
      description: Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).
      tags:
        - actions
      operationId: actions/list-jobs-for-workflow-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-jobs-for-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
        - name: filter
          description: |-
            Filters jobs by their `completed_at` timestamp. Can be one of:  
            \* `latest`: Returns jobs from the most recent execution of the workflow run.  
            \* `all`: Returns all jobs for a workflow run, including from old executions of the workflow run.
          in: query
          required: false
          schema:
            type: string
            enum:
              - latest
              - all
            default: latest
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - jobs
                properties:
                  total_count:
                    type: integer
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/job'
              examples:
                default:
                  $ref: '#/components/examples/job-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-jobs
  /repos/{owner}/{repo}/actions/runs/{run_id}/logs:
    get:
      summary: Download workflow run logs
      description: |-
        Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for
        `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can use
        this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have
        the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/download-workflow-run-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#download-workflow-run-logs
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    delete:
      summary: Delete workflow run logs
      description: Deletes all logs for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-workflow-run-logs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-workflow-run-logs
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments:
    get:
      summary: Get pending deployments for a workflow run
      description: |-
        Get all deployment environments for a workflow run that are waiting for protection rules to pass.

        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-pending-deployments-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-pending-deployments-for-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pending-deployment'
              examples:
                default:
                  $ref: '#/components/examples/pending-deployment-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
    post:
      summary: Review pending deployments for a workflow run
      description: |-
        Approve or reject pending deployments that are waiting on approval by a required reviewer.

        Anyone with read access to the repository contents and deployments can use this endpoint.
      tags:
        - actions
      operationId: actions/review-pending-deployments-for-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#review-pending-deployments-for-a-workflow-run
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                environment_ids:
                  type: array
                  description: The list of environment ids to approve or reject
                  example:
                    - 161171787
                    - 161171795
                  items:
                    type: integer
                    example: 161171787
                state:
                  type: string
                  description: 'Whether to approve or reject deployment to the specified environments. Must be one of: `approved` or `rejected`'
                  enum:
                    - approved
                    - rejected
                  example: approved
                comment:
                  type: string
                  description: A comment to accompany the deployment review
                  example: Ship it!
              required:
                - environment_ids
                - state
                - comment
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deployment'
              examples:
                default:
                  $ref: '#/components/examples/deployment-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/runs/{run_id}/rerun:
    post:
      summary: Re-run a workflow
      description: Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/re-run-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#re-run-a-workflow
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        deprecationDate: '2021-09-14'
        category: actions
        subcategory: workflow-runs
      deprecated: true
  /repos/{owner}/{repo}/actions/runs/{run_id}/timing:
    get:
      summary: Get workflow run usage
      description: |-
        Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-workflow-run-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-workflow-run-usage
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/run-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow-run-usage'
              examples:
                default:
                  $ref: '#/components/examples/workflow-run-usage'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/secrets:
    get:
      summary: List repository secrets
      description: Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-repo-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-repository-secrets
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: '#/components/schemas/actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/actions-secret-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/secrets/public-key:
    get:
      summary: Get a repository public key
      description: Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-repo-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-repository-public-key
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-public-key'
              examples:
                default:
                  $ref: '#/components/examples/actions-public-key'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/secrets/{secret_name}:
    get:
      summary: Get a repository secret
      description: Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-repository-secret
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/actions-secret'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update a repository secret
      description: |-
        Creates or updates a repository secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access
        token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use
        this endpoint.

        #### Example encrypting a secret using Node.js

        Encrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.

        ```
        const sodium = require('tweetsodium');

        const key = "base64-encoded-public-key";
        const value = "plain-text-secret";

        // Convert the message and key to Uint8Array's (Buffer implements that interface)
        const messageBytes = Buffer.from(value);
        const keyBytes = Buffer.from(key, 'base64');

        // Encrypt using LibSodium.
        const encryptedBytes = sodium.seal(messageBytes, keyBytes);

        // Base64 the encrypted secret
        const encrypted = Buffer.from(encryptedBytes).toString('base64');

        console.log(encrypted);
        ```


        #### Example encrypting a secret using Python

        Encrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.

        ```
        from base64 import b64encode
        from nacl import encoding, public

        def encrypt(public_key: str, secret_value: str) -> str:
          """Encrypt a Unicode string using the public key."""
          public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
          sealed_box = public.SealedBox(public_key)
          encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
          return b64encode(encrypted).decode("utf-8")
        ```

        #### Example encrypting a secret using C#

        Encrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.

        ```
        var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");
        var publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");

        var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);

        Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));
        ```

        #### Example encrypting a secret using Ruby

        Encrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.

        ```ruby
        require "rbnacl"
        require "base64"

        key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")
        public_key = RbNaCl::PublicKey.new(key)

        box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
        encrypted_secret = box.encrypt("my_secret")

        # Print the base64 encoded secret
        puts Base64.strict_encode64(encrypted_secret)
        ```
      tags:
        - actions
      operationId: actions/create-or-update-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-or-update-a-repository-secret
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/reference/actions#get-a-repository-public-key) endpoint.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
            example:
              encrypted_value: c2VjcmV0
              key_id: '012345678912345678'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete a repository secret
      description: Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-a-repository-secret
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repos/{owner}/{repo}/actions/workflows:
    get:
      summary: List repository workflows
      description: Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-repo-workflows
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-repository-workflows
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - workflows
                properties:
                  total_count:
                    type: integer
                  workflows:
                    type: array
                    items:
                      $ref: '#/components/schemas/workflow'
              examples:
                default:
                  $ref: '#/components/examples/workflow-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}:
    get:
      summary: Get a workflow
      description: Gets a specific workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-a-workflow
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/workflow-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow'
              examples:
                default:
                  $ref: '#/components/examples/workflow'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable:
    put:
      summary: Disable a workflow
      description: |-
        Disables a workflow and sets the `state` of the workflow to `disabled_manually`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/disable-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#disable-a-workflow
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/workflow-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches:
    post:
      summary: Create a workflow dispatch event
      description: |-
        You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        You must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see "[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch)."

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint. For more information, see "[Creating a personal access token for the command line](https://docs.github.com/articles/creating-a-personal-access-token-for-the-command-line)."
      operationId: actions/create-workflow-dispatch
      tags:
        - actions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-a-workflow-dispatch-event
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/workflow-id'
      responses:
        '204':
          description: Response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: The git reference for the workflow. The reference can be a branch or tag name.
                inputs:
                  type: object
                  description: Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties configured in the workflow file will be used when `inputs` are omitted.
                  additionalProperties:
                    type: string
                  maxProperties: 10
              required:
                - ref
            example:
              ref: topic-branch
              inputs:
                name: Mona the Octocat
                home: San Francisco, CA
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable:
    put:
      summary: Enable a workflow
      description: |-
        Enables a workflow and sets the `state` of the workflow to `active`. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.

        You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/enable-workflow
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#enable-a-workflow
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/workflow-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflows
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs:
    get:
      summary: List workflow runs
      description: |-
        List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).

        Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.
      tags:
        - actions
      operationId: actions/list-workflow-runs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-workflow-runs
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/workflow-id'
        - $ref: '#/components/parameters/actor'
        - $ref: '#/components/parameters/workflow-run-branch'
        - $ref: '#/components/parameters/event'
        - $ref: '#/components/parameters/workflow-run-status'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/created'
        - $ref: '#/components/parameters/exclude-pull-requests'
        - $ref: '#/components/parameters/workflow-run-check-suite-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - workflow_runs
                properties:
                  total_count:
                    type: integer
                  workflow_runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/workflow-run'
              examples:
                default:
                  $ref: '#/components/examples/workflow-run-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: workflow-runs
  /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing:
    get:
      summary: Get workflow usage
      description: |-
        Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see "[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)".

        You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-workflow-usage
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-workflow-usage
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/workflow-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow-usage'
              examples:
                default:
                  $ref: '#/components/examples/workflow-usage'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: actions
        subcategory: workflows
  /repositories/{repository_id}/environments/{environment_name}/secrets:
    get:
      summary: List environment secrets
      description: Lists all secrets available in an environment without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/list-environment-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#list-environment-secrets
      parameters:
        - $ref: '#/components/parameters/repository-id'
        - $ref: '#/components/parameters/environment-name'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: '#/components/schemas/actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/actions-secret-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repositories/{repository_id}/environments/{environment_name}/secrets/public-key:
    get:
      summary: Get an environment public key
      description: Get the public key for an environment, which you need to encrypt environment secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-environment-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-an-environment-public-key
      parameters:
        - $ref: '#/components/parameters/repository-id'
        - $ref: '#/components/parameters/environment-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-public-key'
              examples:
                default:
                  $ref: '#/components/examples/actions-public-key'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
  /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}:
    get:
      summary: Get an environment secret
      description: Gets a single environment secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/get-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#get-an-environment-secret
      parameters:
        - $ref: '#/components/parameters/repository-id'
        - $ref: '#/components/parameters/environment-name'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actions-secret'
              examples:
                default:
                  $ref: '#/components/examples/actions-secret'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    put:
      summary: Create or update an environment secret
      description: |-
        Creates or updates an environment secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access
        token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use
        this endpoint.

        #### Example encrypting a secret using Node.js

        Encrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.

        ```
        const sodium = require('tweetsodium');

        const key = "base64-encoded-public-key";
        const value = "plain-text-secret";

        // Convert the message and key to Uint8Array's (Buffer implements that interface)
        const messageBytes = Buffer.from(value);
        const keyBytes = Buffer.from(key, 'base64');

        // Encrypt using LibSodium.
        const encryptedBytes = sodium.seal(messageBytes, keyBytes);

        // Base64 the encrypted secret
        const encrypted = Buffer.from(encryptedBytes).toString('base64');

        console.log(encrypted);
        ```


        #### Example encrypting a secret using Python

        Encrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.

        ```
        from base64 import b64encode
        from nacl import encoding, public

        def encrypt(public_key: str, secret_value: str) -> str:
          """Encrypt a Unicode string using the public key."""
          public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
          sealed_box = public.SealedBox(public_key)
          encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
          return b64encode(encrypted).decode("utf-8")
        ```

        #### Example encrypting a secret using C#

        Encrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.

        ```
        var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");
        var publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");

        var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);

        Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));
        ```

        #### Example encrypting a secret using Ruby

        Encrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.

        ```ruby
        require "rbnacl"
        require "base64"

        key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")
        public_key = RbNaCl::PublicKey.new(key)

        box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
        encrypted_secret = box.encrypt("my_secret")

        # Print the base64 encoded secret
        puts Base64.strict_encode64(encrypted_secret)
        ```
      tags:
        - actions
      operationId: actions/create-or-update-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#create-or-update-an-environment-secret
      parameters:
        - $ref: '#/components/parameters/repository-id'
        - $ref: '#/components/parameters/environment-name'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an environment public key](https://docs.github.com/rest/reference/actions#get-an-environment-public-key) endpoint.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
              required:
                - encrypted_value
                - key_id
            example:
              encrypted_value: c2VjcmV0
              key_id: '012345678912345678'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
    delete:
      summary: Delete an environment secret
      description: Deletes a secret in an environment using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.
      tags:
        - actions
      operationId: actions/delete-environment-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/actions#delete-an-environment-secret
      parameters:
        - $ref: '#/components/parameters/repository-id'
        - $ref: '#/components/parameters/environment-name'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '204':
          description: Default response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: actions
        subcategory: secrets
components:
  schemas:
    actions-organization-permissions:
      type: object
      properties:
        enabled_repositories:
          $ref: '#/components/schemas/enabled-repositories'
        selected_repositories_url:
          type: string
          description: The API URL to use to get or set the selected repositories that are allowed to run GitHub Actions, when `enabled_repositories` is set to `selected`.
        allowed_actions:
          $ref: '#/components/schemas/allowed-actions'
        selected_actions_url:
          $ref: '#/components/schemas/selected-actions-url'
      required:
        - enabled_repositories
    enabled-repositories:
      type: string
      description: 'The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.'
      enum:
        - all
        - none
        - selected
    allowed-actions:
      type: string
      description: 'The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `local_only`, or `selected`.'
      enum:
        - all
        - local_only
        - selected
    selected-actions-url:
      type: string
      description: The API URL to use to get or set the actions that are allowed to run, when `allowed_actions` is set to `selected`.
    repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      nullable: true
    nullable-simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    selected-actions:
      type: object
      properties:
        github_owned_allowed:
          type: boolean
          description: Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.
        verified_allowed:
          type: boolean
          description: Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators.
        patterns_allowed:
          type: array
          description: Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`."
          items:
            type: string
    actions-get-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          $ref: '#/components/schemas/actions-default-workflow-permissions'
        can_approve_pull_request_reviews:
          $ref: '#/components/schemas/actions-can-approve-pull-request-reviews'
      required:
        - default_workflow_permissions
        - can_approve_pull_request_reviews
    actions-default-workflow-permissions:
      type: string
      description: The default workflow permissions granted to the GITHUB_TOKEN when running workflows in an organization.
      enum:
        - read
        - write
    actions-can-approve-pull-request-reviews:
      type: boolean
      description: Whether GitHub Actions can submit approving pull request reviews.
    actions-set-default-workflow-permissions:
      type: object
      properties:
        default_workflow_permissions:
          $ref: '#/components/schemas/actions-default-workflow-permissions'
        can_approve_pull_request_reviews:
          $ref: '#/components/schemas/actions-can-approve-pull-request-reviews'
    runner-groups-org:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        visibility:
          type: string
        default:
          type: boolean
        selected_repositories_url:
          description: Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`
          type: string
        runners_url:
          type: string
        inherited:
          type: boolean
        inherited_allows_public_repositories:
          type: boolean
        allows_public_repositories:
          type: boolean
      required:
        - id
        - name
        - visibility
        - default
        - runners_url
        - inherited
        - allows_public_repositories
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        template_repository:
          $ref: '#/components/schemas/nullable-repository'
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
    nullable-repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
      nullable: true
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

            [homepage]: http://contributor-covenant.org
            [version]: http://contributor-covenant.org/version/1/4/
        html_url:
          type: string
          format: uri
          nullable: true
      required:
        - url
        - html_url
        - key
        - name
    runner:
      title: Self hosted runners
      description: A self hosted runner
      type: object
      properties:
        id:
          description: The id of the runner.
          type: integer
          example: 5
        name:
          description: The name of the runner.
          type: string
          example: iMac
        os:
          description: The Operating System of the runner.
          type: string
          example: macos
        status:
          description: The status of the runner.
          type: string
          example: online
        busy:
          type: boolean
        labels:
          type: array
          items:
            $ref: '#/components/schemas/runner-label'
      required:
        - id
        - name
        - os
        - status
        - busy
        - labels
    runner-label:
      title: Self hosted runner label
      description: A label for a self hosted runner
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the label.
        name:
          type: string
          description: Name of the label.
        type:
          type: string
          description: The type of label. Read-only labels are applied automatically when the runner is configured.
          enum:
            - read-only
            - custom
      required:
        - name
    runner-application:
      title: Runner Application
      description: Runner Application
      type: object
      properties:
        os:
          type: string
        architecture:
          type: string
        download_url:
          type: string
        filename:
          type: string
        temp_download_token:
          description: A short lived bearer token used to download the runner, if needed.
          type: string
        sha256_checksum:
          type: string
      required:
        - os
        - architecture
        - download_url
        - filename
    authentication-token:
      title: Authentication Token
      description: Authentication Token
      type: object
      properties:
        token:
          description: The token used for authentication
          type: string
          example: v1.1f699f1069f60xxx
        expires_at:
          description: The time this token expires
          type: string
          format: date-time
          example: '2016-07-11T22:14:10Z'
        permissions:
          type: object
          example:
            issues: read
            deployments: write
        repositories:
          description: The repositories this token has access to
          type: array
          items:
            $ref: '#/components/schemas/repository'
        single_file:
          type: string
          example: config.yaml
          nullable: true
        repository_selection:
          description: Describe whether all repositories have been selected or there's a selection involved
          type: string
          enum:
            - all
            - selected
      required:
        - token
        - expires_at
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    organization-actions-secret:
      title: Actions Secret for an Organization
      description: Secrets for GitHub Actions for an organization.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        visibility:
          description: Visibility of a secret
          enum:
            - all
            - private
            - selected
          type: string
        selected_repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/org/secrets/my_secret/repositories
      required:
        - name
        - created_at
        - updated_at
        - visibility
    actions-public-key:
      title: ActionsPublicKey
      description: The public key used for setting Actions Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
        id:
          type: integer
          example: 2
        url:
          type: string
          example: https://api.github.com/user/keys/2
        title:
          type: string
          example: ssh-rsa AAAAB3NzaC1yc2EAAA
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
      required:
        - key_id
        - key
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    artifact:
      title: Artifact
      description: An artifact
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        name:
          description: The name of the artifact.
          type: string
          example: AdventureWorks.Framework
        size_in_bytes:
          description: The size in bytes of the artifact.
          type: integer
          example: 12345
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5
        archive_download_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip
        expired:
          description: Whether or not the artifact has expired.
          type: boolean
        created_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
      required:
        - id
        - node_id
        - name
        - size_in_bytes
        - url
        - archive_download_url
        - expired
        - created_at
        - expires_at
        - updated_at
    job:
      title: Job
      description: Information of a job execution in a workflow run
      type: object
      properties:
        id:
          description: The id of the job.
          example: 21
          type: integer
        run_id:
          description: The id of the associated workflow run.
          example: 5
          type: integer
        run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        run_attempt:
          type: integer
          description: Attempt number of the associated workflow run, 1 for first attempt and higher if the workflow was re-run.
          example: 1
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        head_sha:
          description: The SHA of the commit that is being run.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/jobs/21
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        status:
          description: The phase of the lifecycle that the job is currently in.
          example: queued
          type: string
          enum:
            - queued
            - in_progress
            - completed
        conclusion:
          description: The outcome of the job.
          example: success
          type: string
          nullable: true
        started_at:
          description: The time that the job started, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
        completed_at:
          description: The time that the job finished, in ISO 8601 format.
          example: '2019-08-08T08:00:00-07:00'
          format: date-time
          type: string
          nullable: true
        name:
          description: The name of the job.
          example: test-coverage
          type: string
        steps:
          description: Steps in this job.
          type: array
          items:
            type: object
            required:
              - name
              - status
              - conclusion
              - number
            properties:
              status:
                description: The phase of the lifecycle that the job is currently in.
                example: queued
                type: string
                enum:
                  - queued
                  - in_progress
                  - completed
              conclusion:
                description: The outcome of the job.
                example: success
                type: string
                nullable: true
              name:
                description: The name of the job.
                example: test-coverage
                type: string
              number:
                type: integer
                example: 1
              started_at:
                description: The time that the step started, in ISO 8601 format.
                example: '2019-08-08T08:00:00-07:00'
                format: date-time
                type: string
                nullable: true
              completed_at:
                description: The time that the job finished, in ISO 8601 format.
                example: '2019-08-08T08:00:00-07:00'
                format: date-time
                type: string
                nullable: true
        check_run_url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        labels:
          type: array
          items:
            type: string
          description: Labels for the workflow job. Specified by the "runs_on" attribute in the action's workflow file.
          example:
            - self-hosted
            - foo
            - bar
        runner_id:
          type: integer
          nullable: true
          example: 1
          description: The ID of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
        runner_name:
          type: string
          nullable: true
          example: my runner
          description: The name of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
        runner_group_id:
          type: integer
          nullable: true
          example: 2
          description: The ID of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
        runner_group_name:
          type: string
          nullable: true
          example: my runner group
          description: The name of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
      required:
        - id
        - node_id
        - run_id
        - run_url
        - head_sha
        - name
        - url
        - html_url
        - status
        - conclusion
        - started_at
        - completed_at
        - check_run_url
        - labels
        - runner_id
        - runner_name
        - runner_group_id
        - runner_group_name
    actions-repository-permissions:
      type: object
      properties:
        enabled:
          $ref: '#/components/schemas/actions-enabled'
        allowed_actions:
          $ref: '#/components/schemas/allowed-actions'
        selected_actions_url:
          $ref: '#/components/schemas/selected-actions-url'
      required:
        - enabled
    actions-enabled:
      type: boolean
      description: Whether GitHub Actions is enabled on the repository.
    workflow-run:
      title: Workflow Run
      description: An invocation of a workflow
      type: object
      properties:
        id:
          type: integer
          description: The ID of the workflow run.
          example: 5
        name:
          type: string
          description: The name of the workflow run.
          nullable: true
          example: Build
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        check_suite_id:
          type: integer
          description: The ID of the associated check suite.
          example: 42
        check_suite_node_id:
          type: string
          description: The node ID of the associated check suite.
          example: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch:
          type: string
          nullable: true
          example: master
        head_sha:
          description: The SHA of the head commit that points to the version of the worflow being run.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        run_number:
          type: integer
          description: The auto incrementing run number for the workflow run.
          example: 106
        run_attempt:
          type: integer
          description: Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
          example: 1
        event:
          type: string
          example: push
        status:
          type: string
          nullable: true
          example: completed
        conclusion:
          type: string
          nullable: true
          example: neutral
        workflow_id:
          type: integer
          description: The ID of the parent workflow.
          example: 5
        url:
          type: string
          description: The URL to the workflow run.
          example: https://api.github.com/repos/github/hello-world/actions/runs/5
        html_url:
          type: string
          example: https://github.com/github/hello-world/suites/4
        pull_requests:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/pull-request-minimal'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        run_started_at:
          type: string
          format: date-time
          description: The start time of the latest run. Resets on re-run.
        jobs_url:
          description: The URL to the jobs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/jobs
        logs_url:
          description: The URL to download the logs for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/logs
        check_suite_url:
          description: The URL to the associated check suite.
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/12
        artifacts_url:
          description: The URL to the artifacts for the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts
        cancel_url:
          description: The URL to cancel the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/cancel
        rerun_url:
          description: The URL to rerun the workflow run.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/rerun
        previous_attempt_url:
          nullable: true
          description: The URL to the previous attempted run of this workflow, if one exists.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/runs/5/attempts/3
        workflow_url:
          description: The URL to the workflow.
          type: string
          example: https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml
        head_commit:
          $ref: '#/components/schemas/nullable-simple-commit'
        repository:
          $ref: '#/components/schemas/minimal-repository'
        head_repository:
          $ref: '#/components/schemas/minimal-repository'
        head_repository_id:
          type: integer
          example: 5
      required:
        - id
        - node_id
        - head_branch
        - run_number
        - event
        - status
        - conclusion
        - head_sha
        - workflow_id
        - url
        - html_url
        - created_at
        - updated_at
        - head_commit
        - head_repository
        - repository
        - jobs_url
        - logs_url
        - check_suite_url
        - cancel_url
        - rerun_url
        - artifacts_url
        - workflow_url
        - pull_requests
    pull-request-minimal:
      title: Pull Request Minimal
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        url:
          type: string
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
                - id
                - url
                - name
          required:
            - ref
            - sha
            - repo
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                url:
                  type: string
                name:
                  type: string
              required:
                - id
                - url
                - name
          required:
            - ref
            - sha
            - repo
      required:
        - id
        - number
        - url
        - head
        - base
    nullable-simple-commit:
      title: Simple Commit
      description: Simple Commit
      type: object
      properties:
        id:
          type: string
        tree_id:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        author:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
          nullable: true
        committer:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
          nullable: true
      required:
        - id
        - tree_id
        - message
        - timestamp
        - author
        - committer
      nullable: true
    environment-approvals:
      title: Environment Approval
      description: An entry in the reviews log for environment deployments
      type: object
      properties:
        environments:
          description: The list of environments that were approved or rejected
          type: array
          items:
            type: object
            properties:
              id:
                description: The id of the environment.
                example: 56780428
                type: integer
              node_id:
                type: string
                example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
              name:
                description: The name of the environment.
                example: staging
                type: string
              url:
                type: string
                example: https://api.github.com/repos/github/hello-world/environments/staging
              html_url:
                type: string
                example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
              created_at:
                description: The time that the environment was created, in ISO 8601 format.
                example: '2020-11-23T22:00:40Z'
                format: date-time
                type: string
              updated_at:
                description: The time that the environment was last updated, in ISO 8601 format.
                example: '2020-11-23T22:00:40Z'
                format: date-time
                type: string
        state:
          description: Whether deployment to the environment(s) was approved or rejected
          enum:
            - approved
            - rejected
          example: approved
          type: string
        user:
          $ref: '#/components/schemas/simple-user'
        comment:
          type: string
          description: The comment submitted with the deployment review
          example: Ship it!
      required:
        - environments
        - state
        - user
        - comment
    pending-deployment:
      title: Pending Deployment
      description: Details of a deployment that is waiting for protection rules to pass
      type: object
      properties:
        environment:
          type: object
          properties:
            id:
              description: The id of the environment.
              example: 56780428
              type: integer
            node_id:
              type: string
              example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
            name:
              description: The name of the environment.
              example: staging
              type: string
            url:
              type: string
              example: https://api.github.com/repos/github/hello-world/environments/staging
            html_url:
              type: string
              example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        wait_timer:
          type: integer
          description: The set duration of the wait timer
          example: 30
        wait_timer_started_at:
          description: The time that the wait timer began.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
          nullable: true
        current_user_can_approve:
          description: Whether the currently authenticated user can approve the deployment
          type: boolean
          example: true
        reviewers:
          type: array
          description: The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
          items:
            type: object
            properties:
              type:
                $ref: '#/components/schemas/deployment-reviewer-type'
              reviewer:
                anyOf:
                  - $ref: '#/components/schemas/simple-user'
                  - $ref: '#/components/schemas/team'
      required:
        - environment
        - wait_timer
        - wait_timer_started_at
        - current_user_can_approve
        - reviewers
    deployment-reviewer-type:
      type: string
      description: 'The type of reviewer. Must be one of: `User` or `Team`'
      enum:
        - User
        - Team
      example: User
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
            - pull
            - triage
            - push
            - maintain
            - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
        - parent
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
        - id
        - node_id
        - url
        - members_url
        - name
        - description
        - permission
        - html_url
        - repositories_url
        - slug
      nullable: true
    deployment:
      title: Deployment
      description: A request for a specific ref(branch,sha,tag) to be deployed
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        sha:
          type: string
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        payload:
          oneOf:
            - type: object
              additionalProperties: true
            - type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
      required:
        - id
        - node_id
        - sha
        - ref
        - task
        - environment
        - creator
        - payload
        - description
        - statuses_url
        - repository_url
        - url
        - created_at
        - updated_at
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app
          example:
            - label
            - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app
          example: 5
          type: integer
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        client_secret:
          type: string
          example: '"1d4b2097ac622ba702d19de498f005747a8b21d3"'
        webhook_secret:
          type: string
          example: '"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"'
          nullable: true
        pem:
          type: string
          example: '"-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"'
      required:
        - id
        - node_id
        - owner
        - name
        - description
        - external_url
        - html_url
        - created_at
        - updated_at
        - permissions
        - events
      nullable: true
    workflow-run-usage:
      title: Workflow Run Usage
      description: Workflow Run Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              required:
                - total_ms
                - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                      - job_id
                      - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            MACOS:
              type: object
              required:
                - total_ms
                - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                      - job_id
                      - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
            WINDOWS:
              type: object
              required:
                - total_ms
                - jobs
              properties:
                total_ms:
                  type: integer
                jobs:
                  type: integer
                job_runs:
                  type: array
                  items:
                    type: object
                    required:
                      - job_id
                      - duration_ms
                    properties:
                      job_id:
                        type: integer
                      duration_ms:
                        type: integer
        run_duration_ms:
          type: integer
      required:
        - billable
    actions-secret:
      title: Actions Secret
      description: Set secrets for GitHub Actions.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: SECRET_TOKEN
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - created_at
        - updated_at
    workflow:
      title: Workflow
      description: A GitHub Actions workflow
      type: object
      properties:
        id:
          type: integer
          example: 5
        node_id:
          type: string
          example: MDg6V29ya2Zsb3cxMg==
        name:
          type: string
          example: CI
        path:
          type: string
          example: ruby.yaml
        state:
          type: string
          example: active
          enum:
            - active
            - deleted
            - disabled_fork
            - disabled_inactivity
            - disabled_manually
        created_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
        url:
          type: string
          example: https://api.github.com/repos/actions/setup-ruby/workflows/5
        html_url:
          type: string
          example: https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml
        badge_url:
          type: string
          example: https://github.com/actions/setup-ruby/workflows/CI/badge.svg
        deleted_at:
          type: string
          format: date-time
          example: '2019-12-06T14:20:20.000Z'
      required:
        - id
        - node_id
        - name
        - path
        - state
        - url
        - html_url
        - badge_url
        - created_at
        - updated_at
    workflow-usage:
      title: Workflow Usage
      description: Workflow Usage
      type: object
      properties:
        billable:
          type: object
          properties:
            UBUNTU:
              type: object
              properties:
                total_ms:
                  type: integer
            MACOS:
              type: object
              properties:
                total_ms:
                  type: integer
            WINDOWS:
              type: object
              properties:
                total_ms:
                  type: integer
      required:
        - billable
  parameters:
    org:
      name: org
      in: path
      required: true
      schema:
        type: string
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    repository-id:
      name: repository_id
      in: path
      required: true
      schema:
        type: integer
    runner-group-id:
      name: runner_group_id
      description: Unique identifier of the self-hosted runner group.
      in: path
      required: true
      schema:
        type: integer
    runner-id:
      name: runner_id
      description: Unique identifier of the self-hosted runner.
      in: path
      required: true
      schema:
        type: integer
    runner-label-name:
      name: name
      description: The name of a self-hosted runner's custom label.
      in: path
      required: true
      schema:
        type: string
    secret-name:
      name: secret_name
      description: secret_name parameter
      in: path
      required: true
      schema:
        type: string
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    artifact-id:
      name: artifact_id
      description: artifact_id parameter
      in: path
      required: true
      schema:
        type: integer
    job-id:
      name: job_id
      description: job_id parameter
      in: path
      required: true
      schema:
        type: integer
    actor:
      name: actor
      description: Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.
      in: query
      required: false
      schema:
        type: string
    workflow-run-branch:
      name: branch
      description: Returns workflow runs associated with a branch. Use the name of the branch of the `push`.
      in: query
      required: false
      schema:
        type: string
    event:
      name: event
      description: Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see "[Events that trigger workflows](https://docs.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows)."
      in: query
      required: false
      schema:
        type: string
    workflow-run-status:
      name: status
      description: Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`. For a list of the possible `status` and `conclusion` options, see "[Create a check run](https://docs.github.com/rest/reference/checks#create-a-check-run)."
      in: query
      required: false
      schema:
        type: string
        enum:
          - completed
          - action_required
          - cancelled
          - failure
          - neutral
          - skipped
          - stale
          - success
          - timed_out
          - in_progress
          - queued
          - requested
          - waiting
    created:
      name: created
      description: Returns workflow runs created within the given date-time range. For more information on the syntax, see "[Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
      in: query
      required: false
      schema:
        type: string
        format: date-time
    exclude-pull-requests:
      name: exclude_pull_requests
      description: If `true` pull requests are omitted from the response (empty array).
      in: query
      required: false
      schema:
        type: boolean
        default: false
    workflow-run-check-suite-id:
      name: check_suite_id
      description: Returns workflow runs with the `check_suite_id` that you specify.
      in: query
      schema:
        type: integer
    run-id:
      name: run_id
      description: The id of the workflow run.
      in: path
      required: true
      schema:
        type: integer
    attempt-number:
      name: attempt_number
      description: The attempt number of the workflow run.
      in: path
      required: true
      schema:
        type: integer
    workflow-id:
      name: workflow_id
      in: path
      description: The ID of the workflow. You can also pass the workflow file name as a string.
      required: true
      schema:
        oneOf:
          - type: integer
          - type: string
    environment-name:
      name: environment_name
      in: path
      required: true
      description: The name of the environment
      schema:
        type: string
  responses:
    actions_runner_labels:
      description: Response
      content:
        application/json:
          schema:
            type: object
            required:
              - total_count
              - labels
            properties:
              total_count:
                type: integer
              labels:
                type: array
                items:
                  $ref: '#/components/schemas/runner-label'
          examples:
            default:
              $ref: '#/components/examples/runner-labels'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed_simple:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error-simple'
    actions_runner_labels_readonly:
      description: Response
      content:
        application/json:
          schema:
            type: object
            required:
              - total_count
              - labels
            properties:
              total_count:
                type: integer
              labels:
                type: array
                items:
                  $ref: '#/components/schemas/runner-label'
          examples:
            default:
              $ref: '#/components/examples/runner-labels-readonly'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  securitySchemes: {}
  callbacks: {}
  examples:
    actions-organization-permissions:
      value:
        enabled_repositories: all
        allowed_actions: selected
        selected_actions_url: https://api.github.com/organizations/42/actions/permissions/selected-actions
    repository-paginated:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
    selected-actions:
      value:
        github_owned_allowed: true
        verified_allowed: false
        patterns_allowed:
          - monalisa/octocat@*
          - docker/*
    actions-default-workflow-permissions:
      value:
        default_workflow_permissions: read
        can_approve_pull_request_reviews: true
    runner-groups-org:
      value:
        total_count: 3
        runner_groups:
          - id: 1
            name: Default
            visibility: all
            default: true
            runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/1/runners
            inherited: false
            allows_public_repositories: true
          - id: 2
            name: octo-runner-group
            visibility: selected
            default: false
            selected_repositories_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories
            runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners
            inherited: true
            allows_public_repositories: true
          - id: 3
            name: expensive-hardware
            visibility: private
            default: false
            runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/3/runners
            inherited: false
            allows_public_repositories: true
    runner-group:
      value:
        id: 2
        name: octo-runner-group
        visibility: selected
        default: false
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories
        runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners
        inherited: false
        allows_public_repositories: true
    runner-group-item:
      value:
        id: 2
        name: octo-runner-group
        visibility: selected
        default: false
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories
        runners_url: https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners
        inherited: false
        allows_public_repositories: true
    minimal-repository-paginated:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
              - octocat
              - atom
              - electron
              - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            template_repository:
              id: 1296269
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              name: Hello-World
              full_name: octocat/Hello-World
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              private: false
              html_url: https://github.com/octocat/Hello-World
              description: This your first repo!
              fork: false
              url: https://api.github.com/repos/octocat/Hello-World
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              clone_url: https://github.com/octocat/Hello-World.git
              mirror_url: git:git.example.com/octocat/Hello-World
              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
              svn_url: https://svn.github.com/octocat/Hello-World
              homepage: https://github.com
              organization: null
              language: null
              forks: 9
              forks_count: 9
              stargazers_count: 80
              watchers_count: 80
              watchers: 80
              size: 108
              default_branch: master
              open_issues: 0
              open_issues_count: 0
              is_template: true
              license:
                key: mit
                name: MIT License
                url: https://api.github.com/licenses/mit
                spdx_id: MIT
                node_id: MDc6TGljZW5zZW1pdA==
                html_url: https://api.github.com/licenses/mit
              topics:
                - octocat
                - atom
                - electron
                - api
              has_issues: true
              has_projects: true
              has_wiki: true
              has_pages: false
              has_downloads: true
              archived: false
              disabled: false
              visibility: public
              pushed_at: '2011-01-26T19:06:43Z'
              created_at: '2011-01-26T19:01:12Z'
              updated_at: '2011-01-26T19:14:43Z'
              permissions:
                admin: false
                push: false
                pull: true
              allow_rebase_merge: true
              template_repository: null
              temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
              allow_squash_merge: true
              allow_auto_merge: false
              delete_branch_on_merge: true
              allow_merge_commit: true
              subscribers_count: 42
              network_count: 0
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            delete_branch_on_merge: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            forks: 1
            open_issues: 1
            watchers: 1
    runner-paginated:
      value:
        total_count: 2
        runners:
          - id: 23
            name: linux_runner
            os: linux
            status: online
            busy: true
            labels:
              - id: 5
                name: self-hosted
                type: read-only
              - id: 7
                name: X64
                type: read-only
              - id: 11
                name: Linux
                type: read-only
          - id: 24
            name: mac_runner
            os: macos
            status: offline
            busy: false
            labels:
              - id: 5
                name: self-hosted
                type: read-only
              - id: 7
                name: X64
                type: read-only
              - id: 20
                name: macOS
                type: read-only
              - id: 21
                name: no-gpu
                type: custom
    runner-application-items:
      value:
        - os: osx
          architecture: x64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz
          filename: actions-runner-osx-x64-2.164.0.tar.gz
        - os: linux
          architecture: x64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz
          filename: actions-runner-linux-x64-2.164.0.tar.gz
        - os: linux
          architecture: arm
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz
          filename: actions-runner-linux-arm-2.164.0.tar.gz
        - os: win
          architecture: x64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip
          filename: actions-runner-win-x64-2.164.0.zip
        - os: linux
          architecture: arm64
          download_url: https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz
          filename: actions-runner-linux-arm64-2.164.0.tar.gz
    authentication-token:
      value:
        token: LLBF3JGZDX3P5PMEXLND6TS6FCWO6
        expires_at: '2020-01-22T12:13:35.123-08:00'
    authentication-token-2:
      value:
        token: AABF3JGZDX3P5PMEXLND6TS6FCWO6
        expires_at: '2020-01-29T12:13:35.123-08:00'
    runner:
      value:
        id: 23
        name: MBP
        os: macos
        status: online
        busy: true
        labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
          - id: 21
            name: no-gpu
            type: custom
    runner-labels:
      value:
        total_count: 4
        labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
          - id: 21
            name: no-gpu
            type: custom
    runner-labels-readonly:
      value:
        total_count: 3
        labels:
          - id: 5
            name: self-hosted
            type: read-only
          - id: 7
            name: X64
            type: read-only
          - id: 20
            name: macOS
            type: read-only
    organization-actions-secret-paginated:
      value:
        total_count: 3
        secrets:
          - name: GIST_ID
            created_at: '2019-08-10T14:59:22Z'
            updated_at: '2020-01-10T14:59:22Z'
            visibility: private
          - name: DEPLOY_TOKEN
            created_at: '2019-08-10T14:59:22Z'
            updated_at: '2020-01-10T14:59:22Z'
            visibility: all
          - name: GH_TOKEN
            created_at: '2019-08-10T14:59:22Z'
            updated_at: '2020-01-10T14:59:22Z'
            visibility: selected
            selected_repositories_url: https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
    actions-public-key:
      value:
        key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
    organization-actions-secret:
      value:
        name: GH_TOKEN
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
        visibility: selected
        selected_repositories_url: https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories
    public-repository-paginated:
      value:
        total_count: 1
        repositories:
          - id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    artifact-paginated:
      value:
        total_count: 2
        artifacts:
          - id: 11
            node_id: MDg6QXJ0aWZhY3QxMQ==
            name: Rails
            size_in_bytes: 556
            url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
            archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
            expired: false
            created_at: '2020-01-10T14:59:22Z'
            expires_at: '2020-03-21T14:59:22Z'
            updated_at: '2020-02-21T14:59:22Z'
          - id: 13
            node_id: MDg6QXJ0aWZhY3QxMw==
            name: ''
            size_in_bytes: 453
            url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13
            archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip
            expired: false
            created_at: '2020-01-10T14:59:22Z'
            expires_at: '2020-03-21T14:59:22Z'
            updated_at: '2020-02-21T14:59:22Z'
    artifact:
      value:
        id: 11
        node_id: MDg6QXJ0aWZhY3QxMQ==
        name: Rails
        size_in_bytes: 556
        url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11
        archive_download_url: https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip
        expired: false
        created_at: '2020-01-10T14:59:22Z'
        expires_at: '2020-01-21T14:59:22Z'
        updated_at: '2020-01-21T14:59:22Z'
    job:
      value:
        id: 399444496
        run_id: 29679449
        run_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
        node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
        head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
        url: https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
        html_url: https://github.com/octo-org/octo-repo/runs/399444496
        status: completed
        conclusion: success
        started_at: '2020-01-20T17:42:40Z'
        completed_at: '2020-01-20T17:44:39Z'
        name: build
        steps:
          - name: Set up job
            status: completed
            conclusion: success
            number: 1
            started_at: '2020-01-20T09:42:40.000-08:00'
            completed_at: '2020-01-20T09:42:41.000-08:00'
          - name: Run actions/checkout@v2
            status: completed
            conclusion: success
            number: 2
            started_at: '2020-01-20T09:42:41.000-08:00'
            completed_at: '2020-01-20T09:42:45.000-08:00'
          - name: Set up Ruby
            status: completed
            conclusion: success
            number: 3
            started_at: '2020-01-20T09:42:45.000-08:00'
            completed_at: '2020-01-20T09:42:45.000-08:00'
          - name: Run actions/cache@v2
            status: completed
            conclusion: success
            number: 4
            started_at: '2020-01-20T09:42:45.000-08:00'
            completed_at: '2020-01-20T09:42:48.000-08:00'
          - name: Install Bundler
            status: completed
            conclusion: success
            number: 5
            started_at: '2020-01-20T09:42:48.000-08:00'
            completed_at: '2020-01-20T09:42:52.000-08:00'
          - name: Install Gems
            status: completed
            conclusion: success
            number: 6
            started_at: '2020-01-20T09:42:52.000-08:00'
            completed_at: '2020-01-20T09:42:53.000-08:00'
          - name: Run Tests
            status: completed
            conclusion: success
            number: 7
            started_at: '2020-01-20T09:42:53.000-08:00'
            completed_at: '2020-01-20T09:42:59.000-08:00'
          - name: Deploy to Heroku
            status: completed
            conclusion: success
            number: 8
            started_at: '2020-01-20T09:42:59.000-08:00'
            completed_at: '2020-01-20T09:44:39.000-08:00'
          - name: Post actions/cache@v2
            status: completed
            conclusion: success
            number: 16
            started_at: '2020-01-20T09:44:39.000-08:00'
            completed_at: '2020-01-20T09:44:39.000-08:00'
          - name: Complete job
            status: completed
            conclusion: success
            number: 17
            started_at: '2020-01-20T09:44:39.000-08:00'
            completed_at: '2020-01-20T09:44:39.000-08:00'
        check_run_url: https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
        labels:
          - self-hosted
          - foo
          - bar
        runner_id: 1
        runner_name: my runner
        runner_group_id: 2
        runner_group_name: my runner group
    actions-repository-permissions:
      value:
        enabled: true
        allowed_actions: selected
        selected_actions_url: https://api.github.com/repositories/42/actions/permissions/selected-actions
    workflow-run-paginated:
      value:
        total_count: 1
        workflow_runs:
          - id: 30433642
            name: Build
            node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
            head_branch: master
            head_sha: acb5820ced9479c074f688cc328bf03f341a511d
            run_number: 562
            event: push
            status: queued
            conclusion: null
            workflow_id: 159038
            url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
            html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
            pull_requests: []
            created_at: '2020-01-22T19:33:08Z'
            updated_at: '2020-01-22T19:33:08Z'
            jobs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
            logs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
            check_suite_url: https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
            artifacts_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
            cancel_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
            rerun_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
            workflow_url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
            head_commit:
              id: acb5820ced9479c074f688cc328bf03f341a511d
              tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
              message: Create linter.yaml
              timestamp: '2020-01-22T19:33:05Z'
              author:
                name: Octo Cat
                email: octocat@github.com
              committer:
                name: GitHub
                email: noreply@github.com
            repository:
              id: 1296269
              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
              name: Hello-World
              full_name: octocat/Hello-World
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              private: false
              html_url: https://github.com/octocat/Hello-World
              description: This your first repo!
              fork: false
              url: https://api.github.com/repos/octocat/Hello-World
              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
              events_url: https://api.github.com/repos/octocat/Hello-World/events
              forks_url: https://api.github.com/repos/octocat/Hello-World/forks
              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
              git_url: git:github.com/octocat/Hello-World.git
              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
              languages_url: https://api.github.com/repos/octocat/Hello-World/languages
              merges_url: https://api.github.com/repos/octocat/Hello-World/merges
              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
              ssh_url: git@github.com:octocat/Hello-World.git
              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
              tags_url: https://api.github.com/repos/octocat/Hello-World/tags
              teams_url: https://api.github.com/repos/octocat/Hello-World/teams
              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
              hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
            head_repository:
              id: 217723378
              node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
              name: octo-repo
              full_name: octo-org/octo-repo
              private: true
              owner:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
              html_url: https://github.com/octo-org/octo-repo
              description: null
              fork: false
              url: https://api.github.com/repos/octo-org/octo-repo
              forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
              keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
              collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
              teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
              hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
              issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
              events_url: https://api.github.com/repos/octo-org/octo-repo/events
              assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
              branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
              tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
              blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
              git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
              git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
              trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
              statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
              languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
              stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
              contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
              subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
              subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
              commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
              git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
              comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
              issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
              contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
              compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
              merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
              archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
              downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
              issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
              pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
              milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
              notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
              labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
              releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
              deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
    workflow-run:
      value:
        id: 30433642
        name: Build
        node_id: MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==
        check_suite_id: 42
        check_suite_node_id: MDEwOkNoZWNrU3VpdGU0Mg==
        head_branch: master
        head_sha: acb5820ced9479c074f688cc328bf03f341a511d
        run_number: 562
        event: push
        status: queued
        conclusion: null
        workflow_id: 159038
        url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642
        html_url: https://github.com/octo-org/octo-repo/actions/runs/30433642
        pull_requests: []
        created_at: '2020-01-22T19:33:08Z'
        updated_at: '2020-01-22T19:33:08Z'
        jobs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs
        logs_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs
        check_suite_url: https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374
        artifacts_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts
        cancel_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel
        rerun_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun
        workflow_url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038
        head_commit:
          id: acb5820ced9479c074f688cc328bf03f341a511d
          tree_id: d23f6eedb1e1b9610bbc754ddb5197bfe7271223
          message: Create linter.yaml
          timestamp: '2020-01-22T19:33:05Z'
          author:
            name: Octo Cat
            email: octocat@github.com
          committer:
            name: GitHub
            email: noreply@github.com
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        head_repository:
          id: 217723378
          node_id: MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=
          name: octo-repo
          full_name: octo-org/octo-repo
          private: true
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          html_url: https://github.com/octo-org/octo-repo
          description: null
          fork: false
          url: https://api.github.com/repos/octo-org/octo-repo
          forks_url: https://api.github.com/repos/octo-org/octo-repo/forks
          keys_url: https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}
          collaborators_url: https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/octo-org/octo-repo/teams
          hooks_url: https://api.github.com/repos/octo-org/octo-repo/hooks
          issue_events_url: https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}
          events_url: https://api.github.com/repos/octo-org/octo-repo/events
          assignees_url: https://api.github.com/repos/octo-org/octo-repo/assignees{/user}
          branches_url: https://api.github.com/repos/octo-org/octo-repo/branches{/branch}
          tags_url: https://api.github.com/repos/octo-org/octo-repo/tags
          blobs_url: https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}
          trees_url: https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}
          statuses_url: https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}
          languages_url: https://api.github.com/repos/octo-org/octo-repo/languages
          stargazers_url: https://api.github.com/repos/octo-org/octo-repo/stargazers
          contributors_url: https://api.github.com/repos/octo-org/octo-repo/contributors
          subscribers_url: https://api.github.com/repos/octo-org/octo-repo/subscribers
          subscription_url: https://api.github.com/repos/octo-org/octo-repo/subscription
          commits_url: https://api.github.com/repos/octo-org/octo-repo/commits{/sha}
          git_commits_url: https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}
          comments_url: https://api.github.com/repos/octo-org/octo-repo/comments{/number}
          issue_comment_url: https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}
          contents_url: https://api.github.com/repos/octo-org/octo-repo/contents/{+path}
          compare_url: https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}
          merges_url: https://api.github.com/repos/octo-org/octo-repo/merges
          archive_url: https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/octo-org/octo-repo/downloads
          issues_url: https://api.github.com/repos/octo-org/octo-repo/issues{/number}
          pulls_url: https://api.github.com/repos/octo-org/octo-repo/pulls{/number}
          milestones_url: https://api.github.com/repos/octo-org/octo-repo/milestones{/number}
          notifications_url: https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/octo-org/octo-repo/labels{/name}
          releases_url: https://api.github.com/repos/octo-org/octo-repo/releases{/id}
          deployments_url: https://api.github.com/repos/octo-org/octo-repo/deployments
    environment-approvals-items:
      value:
        - state: approved
          comment: Ship it!
          environments:
            - id: 161088068
              node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
              name: staging
              url: https://api.github.com/repos/github/hello-world/environments/staging
              html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
              created_at: '2020-11-23T22:00:40Z'
              updated_at: '2020-11-23T22:00:40Z'
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    job-paginated:
      value:
        total_count: 1
        jobs:
          - id: 399444496
            run_id: 29679449
            run_url: https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449
            node_id: MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==
            head_sha: f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0
            url: https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496
            html_url: https://github.com/octo-org/octo-repo/runs/399444496
            status: completed
            conclusion: success
            started_at: '2020-01-20T17:42:40Z'
            completed_at: '2020-01-20T17:44:39Z'
            name: build
            steps:
              - name: Set up job
                status: completed
                conclusion: success
                number: 1
                started_at: '2020-01-20T09:42:40.000-08:00'
                completed_at: '2020-01-20T09:42:41.000-08:00'
              - name: Run actions/checkout@v2
                status: completed
                conclusion: success
                number: 2
                started_at: '2020-01-20T09:42:41.000-08:00'
                completed_at: '2020-01-20T09:42:45.000-08:00'
              - name: Set up Ruby
                status: completed
                conclusion: success
                number: 3
                started_at: '2020-01-20T09:42:45.000-08:00'
                completed_at: '2020-01-20T09:42:45.000-08:00'
              - name: Run actions/cache@v2
                status: completed
                conclusion: success
                number: 4
                started_at: '2020-01-20T09:42:45.000-08:00'
                completed_at: '2020-01-20T09:42:48.000-08:00'
              - name: Install Bundler
                status: completed
                conclusion: success
                number: 5
                started_at: '2020-01-20T09:42:48.000-08:00'
                completed_at: '2020-01-20T09:42:52.000-08:00'
              - name: Install Gems
                status: completed
                conclusion: success
                number: 6
                started_at: '2020-01-20T09:42:52.000-08:00'
                completed_at: '2020-01-20T09:42:53.000-08:00'
              - name: Run Tests
                status: completed
                conclusion: success
                number: 7
                started_at: '2020-01-20T09:42:53.000-08:00'
                completed_at: '2020-01-20T09:42:59.000-08:00'
              - name: Deploy to Heroku
                status: completed
                conclusion: success
                number: 8
                started_at: '2020-01-20T09:42:59.000-08:00'
                completed_at: '2020-01-20T09:44:39.000-08:00'
              - name: Post actions/cache@v2
                status: completed
                conclusion: success
                number: 16
                started_at: '2020-01-20T09:44:39.000-08:00'
                completed_at: '2020-01-20T09:44:39.000-08:00'
              - name: Complete job
                status: completed
                conclusion: success
                number: 17
                started_at: '2020-01-20T09:44:39.000-08:00'
                completed_at: '2020-01-20T09:44:39.000-08:00'
            check_run_url: https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496
            labels:
              - self-hosted
              - foo
              - bar
            runner_id: 1
            runner_name: my runner
            runner_group_id: 2
            runner_group_name: my runner group
    pending-deployment-items:
      value:
        - environment:
            id: 161088068
            node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
            name: staging
            url: https://api.github.com/repos/github/hello-world/environments/staging
            html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
          wait_timer: 30
          wait_timer_started_at: '2020-11-23T22:00:40Z'
          current_user_can_approve: true
          reviewers:
            - type: User
              reviewer:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
            - type: Team
              reviewer:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://github.com/orgs/github/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
    deployment-items:
      value:
        - url: https://api.github.com/repos/octocat/example/deployments/1
          id: 1
          node_id: MDEwOkRlcGxveW1lbnQx
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          ref: topic-branch
          task: deploy
          payload: {}
          original_environment: staging
          environment: production
          description: Deploy request from hubot
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          created_at: '2012-07-20T01:19:13Z'
          updated_at: '2012-07-20T01:19:13Z'
          statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
          repository_url: https://api.github.com/repos/octocat/example
          transient_environment: false
          production_environment: true
    workflow-run-usage:
      value:
        billable:
          UBUNTU:
            total_ms: 180000
            jobs: 1
            job_runs:
              - job_id: 1
                duration_ms: 180000
          MACOS:
            total_ms: 240000
            jobs: 4
            job_runs:
              - job_id: 2
                duration_ms: 60000
              - job_id: 3
                duration_ms: 60000
              - job_id: 4
                duration_ms: 60000
              - job_id: 5
                duration_ms: 60000
          WINDOWS:
            total_ms: 300000
            jobs: 2
            job_runs:
              - job_id: 6
                duration_ms: 150000
              - job_id: 7
                duration_ms: 150000
        run_duration_ms: 500000
    actions-secret-paginated:
      value:
        total_count: 2
        secrets:
          - name: GH_TOKEN
            created_at: '2019-08-10T14:59:22Z'
            updated_at: '2020-01-10T14:59:22Z'
          - name: GIST_ID
            created_at: '2020-01-10T10:59:22Z'
            updated_at: '2020-01-11T11:59:22Z'
    actions-secret:
      value:
        name: GH_TOKEN
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
    workflow-paginated:
      value:
        total_count: 2
        workflows:
          - id: 161335
            node_id: MDg6V29ya2Zsb3cxNjEzMzU=
            name: CI
            path: .github/workflows/blank.yaml
            state: active
            created_at: '2020-01-08T23:48:37.000-08:00'
            updated_at: '2020-01-08T23:50:21.000-08:00'
            url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
            html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
            badge_url: https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
          - id: 269289
            node_id: MDE4OldvcmtmbG93IFNlY29uZGFyeTI2OTI4OQ==
            name: Linter
            path: .github/workflows/linter.yaml
            state: active
            created_at: '2020-01-08T23:48:37.000-08:00'
            updated_at: '2020-01-08T23:50:21.000-08:00'
            url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/269289
            html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/269289
            badge_url: https://github.com/octo-org/octo-repo/workflows/Linter/badge.svg
    workflow:
      value:
        id: 161335
        node_id: MDg6V29ya2Zsb3cxNjEzMzU=
        name: CI
        path: .github/workflows/blank.yaml
        state: active
        created_at: '2020-01-08T23:48:37.000-08:00'
        updated_at: '2020-01-08T23:50:21.000-08:00'
        url: https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335
        html_url: https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335
        badge_url: https://github.com/octo-org/octo-repo/workflows/CI/badge.svg
    workflow-usage:
      value:
        billable:
          UBUNTU:
            total_ms: 180000
          MACOS:
            total_ms: 240000
          WINDOWS:
            total_ms: 300000
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
    location:
      example: https://pipelines.actions.githubusercontent.com/OhgS4QRKqmgx7bKC27GKU83jnQjyeqG8oIMTge8eqtheppcmw8/_apis/pipelines/1/runs/176/signedlogcontent?urlExpires=2020-01-24T18%3A10%3A31.5729946Z&urlSigningMethod=HMACV1&urlSignature=agG73JakPYkHrh06seAkvmH7rBR4Ji4c2%2B6a2ejYh3E%3D
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    repository_permissions:
      id: github.actions.repository_permissions
      name: repository_permissions
      title: Actions Repository Permissions
      methods:
        get_github_actions_permissions_repository:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_github_actions_permissions_repository:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1permissions/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repository_permissions/methods/get_github_actions_permissions_repository'
        insert: []
        update: []
        delete: []
    organization_permissions:
      id: github.actions.organization_permissions
      name: organization_permissions
      title: Actions Organization Permissions
      methods:
        get_github_actions_permissions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_github_actions_permissions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organization_permissions/methods/get_github_actions_permissions_organization'
        insert: []
        update: []
        delete: []
    default_workflow_permissions:
      id: github.actions.default_workflow_permissions
      name: default_workflow_permissions
      title: Organization Default Workflow Permissions
      methods:
        get_github_actions_default_workflow_permissions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1workflow/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_github_actions_default_workflow_permissions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1workflow/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/default_workflow_permissions/methods/get_github_actions_default_workflow_permissions_organization'
        insert: []
        update: []
        delete: []
    allowed_actions:
      id: github.actions.allowed_actions
      name: allowed_actions
      title: Allowed Actions for an Organization or Repository
      methods:
        get_allowed_actions_repository:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1permissions~1selected-actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_allowed_actions_repository:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1permissions~1selected-actions/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_allowed_actions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1selected-actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_allowed_actions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1selected-actions/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/allowed_actions/methods/get_allowed_actions_repository'
          - $ref: '#/components/x-stackQL-resources/allowed_actions/methods/get_allowed_actions_organization'
        insert: []
        update: []
        delete: []
    selected_repositories_enabled:
      id: github.actions.selected_repositories_enabled
      name: selected_repositories_enabled
      title: Selected Repositories Enabled
      methods:
        list_selected_repositories_enabled_github_actions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1repositories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.repositories
        set_selected_repositories_enabled_github_actions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1repositories/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        enable_selected_repository_github_actions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1repositories~1{repository_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        disable_selected_repository_github_actions_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1permissions~1repositories~1{repository_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/selected_repositories_enabled/methods/list_selected_repositories_enabled_github_actions_organization'
        insert: []
        update: []
        delete: []
    self_hosted_runner_group_repo_access:
      id: github.actions.self_hosted_runner_group_repo_access
      name: self_hosted_runner_group_repo_access
      title: Organization Self Hosted Runner Group Repo Access
      methods:
        list_repo_access_to_self_hosted_runner_group_in_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1repositories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.repositories
        set_repo_access_to_self_hosted_runner_group_in_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1repositories/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        add_repo_access_to_self_hosted_runner_group_in_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1repositories~1{repository_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_repo_access_to_self_hosted_runner_group_in_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1repositories~1{repository_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_group_repo_access/methods/list_repo_access_to_self_hosted_runner_group_in_org'
        insert: []
        update: []
        delete: []
    self_hosted_runner_groups:
      id: github.actions.self_hosted_runner_groups
      name: self_hosted_runner_groups
      title: Organization Self Hosted Runner Groups
      methods:
        list_self_hosted_runner_groups_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runner_groups
        create_self_hosted_runner_group_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_self_hosted_runner_group_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_self_hosted_runner_group_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_self_hosted_runner_group_from_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_groups/methods/get_self_hosted_runner_group_for_org'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_groups/methods/list_self_hosted_runner_groups_for_org'
        insert:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_groups/methods/create_self_hosted_runner_group_for_org'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_groups/methods/delete_self_hosted_runner_group_from_org'
    self_hosted_runner_labels:
      id: github.actions.self_hosted_runner_labels
      name: self_hosted_runner_labels
      title: Self Hosted Runner Labels
      methods:
        list_labels_for_self_hosted_runner_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1{runner_id}~1labels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.labels
        add_custom_labels_to_self_hosted_runner_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1{runner_id}~1labels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_custom_labels_for_self_hosted_runner_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1{runner_id}~1labels/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_all_custom_labels_from_self_hosted_runner_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1{runner_id}~1labels/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_custom_label_from_self_hosted_runner_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1{runner_id}~1labels~1{name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_labels_for_self_hosted_runner_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1{runner_id}~1labels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.labels
        add_custom_labels_to_self_hosted_runner_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1{runner_id}~1labels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_custom_labels_for_self_hosted_runner_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1{runner_id}~1labels/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_all_custom_labels_from_self_hosted_runner_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1{runner_id}~1labels/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_custom_label_from_self_hosted_runner_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1{runner_id}~1labels~1{name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/list_labels_for_self_hosted_runner_for_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/list_labels_for_self_hosted_runner_for_org'
        insert:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/add_custom_labels_to_self_hosted_runner_for_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/add_custom_labels_to_self_hosted_runner_for_org'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/remove_custom_label_from_self_hosted_runner_for_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/remove_all_custom_labels_from_self_hosted_runner_for_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/remove_custom_label_from_self_hosted_runner_for_org'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_labels/methods/remove_all_custom_labels_from_self_hosted_runner_for_org'
    self_hosted_runner_applications:
      id: github.actions.self_hosted_runner_applications
      name: self_hosted_runner_applications
      title: Self Hosted Runner Applications
      methods:
        list_runner_applications_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1downloads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_runner_applications_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1downloads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_applications/methods/list_runner_applications_for_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runner_applications/methods/list_runner_applications_for_org'
        insert: []
        update: []
        delete: []
    self_hosted_runners:
      id: github.actions.self_hosted_runners
      name: self_hosted_runners
      title: Self Hosted Runners
      methods:
        list_self_hosted_runners_in_group_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1runners/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runners
        set_self_hosted_runners_in_group_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1runners/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        add_self_hosted_runner_to_group_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1runners~1{runner_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_self_hosted_runner_from_group_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runner-groups~1{runner_group_id}~1runners~1{runner_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_self_hosted_runners_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runners
        create_registration_token_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1registration-token/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        create_remove_token_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1remove-token/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_self_hosted_runner_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1{runner_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_self_hosted_runner_from_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1runners~1{runner_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_self_hosted_runners_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runners
        create_registration_token_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1registration-token/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        create_remove_token_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1remove-token/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_self_hosted_runner_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1{runner_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_self_hosted_runner_from_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runners~1{runner_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/get_self_hosted_runner_for_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/list_self_hosted_runners_in_group_for_org'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/get_self_hosted_runner_for_org'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/list_self_hosted_runners_for_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/list_self_hosted_runners_for_org'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/remove_self_hosted_runner_from_group_for_org'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/delete_self_hosted_runner_from_repo'
          - $ref: '#/components/x-stackQL-resources/self_hosted_runners/methods/delete_self_hosted_runner_from_org'
    public_keys:
      id: github.actions.public_keys
      name: public_keys
      title: Actions Public Keys
      methods:
        get_org_public_key:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1public-key/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_repo_public_key:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1secrets~1public-key/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_environment_public_key:
          operation:
            $ref: '#/paths/~1repositories~1{repository_id}~1environments~1{environment_name}~1secrets~1public-key/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/get_environment_public_key'
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/get_repo_public_key'
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/get_org_public_key'
        insert: []
        update: []
        delete: []
    org_secrets:
      id: github.actions.org_secrets
      name: org_secrets
      title: Organization Actions Secrets
      methods:
        get_org_secret:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1{secret_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_org_secret:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1{secret_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        delete_org_secret:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1{secret_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_org_secrets:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.secrets
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/org_secrets/methods/get_org_secret'
          - $ref: '#/components/x-stackQL-resources/org_secrets/methods/list_org_secrets'
        insert:
          - $ref: '#/components/x-stackQL-resources/org_secrets/methods/create_or_update_org_secret'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/org_secrets/methods/delete_org_secret'
    selected_repos_for_org_secret:
      id: github.actions.selected_repos_for_org_secret
      name: selected_repos_for_org_secret
      title: Selected Repos for Organization Actions Secrets
      methods:
        list_selected_repos_for_org_secret:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1{secret_name}~1repositories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.repositories
        set_selected_repos_for_org_secret:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1{secret_name}~1repositories/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        add_selected_repo_to_org_secret:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1{secret_name}~1repositories~1{repository_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_selected_repo_from_org_secret:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1actions~1secrets~1{secret_name}~1repositories~1{repository_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/selected_repos_for_org_secret/methods/list_selected_repos_for_org_secret'
        insert:
          - $ref: '#/components/x-stackQL-resources/selected_repos_for_org_secret/methods/add_selected_repo_to_org_secret'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/selected_repos_for_org_secret/methods/remove_selected_repo_from_org_secret'
    environment_secrets:
      id: github.actions.environment_secrets
      name: environment_secrets
      title: Environment Secrets
      methods:
        list_environment_secrets:
          operation:
            $ref: '#/paths/~1repositories~1{repository_id}~1environments~1{environment_name}~1secrets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_environment_secret:
          operation:
            $ref: '#/paths/~1repositories~1{repository_id}~1environments~1{environment_name}~1secrets~1{secret_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_environment_secret:
          operation:
            $ref: '#/paths/~1repositories~1{repository_id}~1environments~1{environment_name}~1secrets~1{secret_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        delete_environment_secret:
          operation:
            $ref: '#/paths/~1repositories~1{repository_id}~1environments~1{environment_name}~1secrets~1{secret_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environment_secrets/methods/get_environment_secret'
          - $ref: '#/components/x-stackQL-resources/environment_secrets/methods/list_environment_secrets'
        insert:
          - $ref: '#/components/x-stackQL-resources/environment_secrets/methods/create_or_update_environment_secret'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environment_secrets/methods/delete_environment_secret'
    repo_secrets:
      id: github.actions.repo_secrets
      name: repo_secrets
      title: Actions Repository Secrets
      methods:
        list_repo_secrets:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1secrets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.secrets
        get_repo_secret:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1secrets~1{secret_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_repo_secret:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1secrets~1{secret_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        delete_repo_secret:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1secrets~1{secret_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/repo_secrets/methods/get_repo_secret'
          - $ref: '#/components/x-stackQL-resources/repo_secrets/methods/list_repo_secrets'
        insert:
          - $ref: '#/components/x-stackQL-resources/repo_secrets/methods/create_or_update_repo_secret'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/repo_secrets/methods/delete_repo_secret'
    artifacts:
      id: github.actions.artifacts
      name: artifacts
      title: Artifacts
      methods:
        list_artifacts_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1artifacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.artifacts
        get_artifact:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1artifacts~1{artifact_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_artifact:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1artifacts~1{artifact_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        download_artifact:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1artifacts~1{artifact_id}~1{archive_format}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_workflow_run_artifacts:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1artifacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/get_artifact'
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/list_workflow_run_artifacts'
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/list_artifacts_for_repo'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/delete_artifact'
    workflow_jobs:
      id: github.actions.workflow_jobs
      name: workflow_jobs
      title: Workflow Jobs
      methods:
        get_job_for_workflow_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1jobs~1{job_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        download_job_logs_for_workflow_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1jobs~1{job_id}~1logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_jobs_for_workflow_run_attempt:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1attempts~1{attempt_number}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
        list_jobs_for_workflow_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1jobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.jobs
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_jobs/methods/list_jobs_for_workflow_run_attempt'
          - $ref: '#/components/x-stackQL-resources/workflow_jobs/methods/get_job_for_workflow_run'
          - $ref: '#/components/x-stackQL-resources/workflow_jobs/methods/list_jobs_for_workflow_run'
        insert: []
        update: []
        delete: []
    workflow_run_approvals:
      id: github.actions.workflow_run_approvals
      name: workflow_run_approvals
      title: Workflow Runs Approvals
      methods:
        get_reviews_for_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1approvals/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_workflow_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_approvals/methods/get_reviews_for_run'
        insert: []
        update: []
        delete: []
    workflow_run_pending_deployments:
      id: github.actions.workflow_run_pending_deployments
      name: workflow_run_pending_deployments
      title: Workflow Pending Deployments
      methods:
        get_pending_deployments_for_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1pending_deployments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        review_pending_deployments_for_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1pending_deployments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_pending_deployments/methods/get_pending_deployments_for_run'
        insert: []
        update: []
        delete: []
    workflow_run_usage:
      id: github.actions.workflow_run_usage
      name: workflow_run_usage
      title: Workflow Run Usage
      methods:
        get_workflow_run_usage:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1timing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_run_usage/methods/get_workflow_run_usage'
        insert: []
        update: []
        delete: []
    workflow_runs:
      id: github.actions.workflow_runs
      name: workflow_runs
      title: Workflow Runs
      methods:
        list_workflow_runs_for_repo:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workflow_runs
        get_workflow_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_workflow_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_workflow_run_attempt:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1attempts~1{attempt_number}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_workflow_run_attempt_logs:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1attempts~1{attempt_number}~1logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_workflow_run:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        download_workflow_run_logs:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1logs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_workflow_run_logs:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1logs/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        re_run_workflow:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1runs~1{run_id}~1rerun/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        list_workflow_runs:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1workflows~1{workflow_id}~1runs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_runs/methods/get_workflow_run_attempt'
          - $ref: '#/components/x-stackQL-resources/workflow_runs/methods/get_workflow_run'
          - $ref: '#/components/x-stackQL-resources/workflow_runs/methods/list_workflow_runs'
          - $ref: '#/components/x-stackQL-resources/workflow_runs/methods/list_workflow_runs_for_repo'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workflow_runs/methods/delete_workflow_run'
    workflow_usage:
      id: github.actions.workflow_usage
      name: workflow_usage
      title: Workflow Usage
      methods:
        get_workflow_usage:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1workflows~1{workflow_id}~1timing/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_usage/methods/get_workflow_usage'
        insert: []
        update: []
        delete: []
    workflows:
      id: github.actions.workflows
      name: workflows
      title: Workflows
      methods:
        list_repo_workflows:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1workflows/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workflows
        get_workflow:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1workflows~1{workflow_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_workflow:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1workflows~1{workflow_id}~1disable/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        create_workflow_dispatch:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1workflows~1{workflow_id}~1dispatches/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        enable_workflow:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1actions~1workflows~1{workflow_id}~1enable/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflows/methods/get_workflow'
          - $ref: '#/components/x-stackQL-resources/workflows/methods/list_repo_workflows'
        insert: []
        update: []
        delete: []
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - actions
  description: Endpoints to manage GitHub Actions using the REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
