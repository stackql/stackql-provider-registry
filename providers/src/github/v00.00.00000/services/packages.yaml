paths:
  /orgs/{org}/packages:
    get:
      summary: List packages for an organization
      description: |-
        Lists all packages in an organization readable by the user.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/list-packages-for-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#list-packages-for-an-organization
      parameters:
        - name: package_type
          description: The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.
          in: query
          required: true
          schema:
            type: string
            enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-visibility'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-org'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /orgs/{org}/packages/{package_type}/{package_name}:
    get:
      summary: Get a package for an organization
      description: |-
        Gets a specific package in an organization.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-package-for-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-a-package-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/package-org'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
    delete:
      summary: Delete a package for an organization
      description: |-
        Deletes an entire package in an organization. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container you want to delete.
      tags:
        - packages
      operationId: packages/delete-package-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#delete-a-package-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /orgs/{org}/packages/{package_type}/{package_name}/restore:
    post:
      summary: Restore a package for an organization
      description: |-
        Restores an entire package in an organization.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.
      tags:
        - packages
      operationId: packages/restore-package-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#restore-a-package-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - name: token
          description: package token
          schema:
            type: string
          required: false
          in: query
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /orgs/{org}/packages/{package_type}/{package_name}/versions:
    get:
      summary: Get all package versions for a package owned by an organization
      description: |-
        Returns all package versions for a package owned by an organization.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - name: state
          in: query
          required: false
          description: The state of the package, either active or deleted.
          schema:
            type: string
            enum:
              - active
              - deleted
            default: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-versions-for-org'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}:
    get:
      summary: Get a package version for an organization
      description: |-
        Gets a specific package version in an organization.

        You must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-package-version-for-organization
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-a-package-version-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-version-org'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
    delete:
      summary: Delete package version for an organization
      description: |-
        Deletes a specific package version in an organization. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container you want to delete.
      tags:
        - packages
      operationId: packages/delete-package-version-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#delete-a-package-version-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:
    post:
      summary: Restore package version for an organization
      description: |-
        Restores a specific package version in an organization.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.
      tags:
        - packages
      operationId: packages/restore-package-version-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#restore-a-package-version-for-an-organization
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/org'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /user/packages:
    get:
      summary: List packages for the authenticated user's namespace
      description: |-
        Lists packages owned by the authenticated user within the user's namespace.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/list-packages-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#list-packages-for-the-authenticated-user
      parameters:
        - name: package_type
          description: The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.
          in: query
          required: true
          schema:
            type: string
            enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
        - $ref: '#/components/parameters/package-visibility'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /user/packages/{package_type}/{package_name}:
    get:
      summary: Get a package for the authenticated user
      description: |-
        Gets a specific package for a package owned by the authenticated user.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-a-package-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/package-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
    delete:
      summary: Delete a package for the authenticated user
      description: |-
        Deletes a package owned by the authenticated user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/delete-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#delete-a-package-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /user/packages/{package_type}/{package_name}/restore:
    post:
      summary: Restore a package for the authenticated user
      description: |-
        Restores a package owned by the authenticated user.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/restore-package-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#restore-a-package-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - name: token
          description: package token
          schema:
            type: string
          required: false
          in: query
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /user/packages/{package_type}/{package_name}/versions:
    get:
      summary: Get all package versions for a package owned by the authenticated user
      description: |-
        Returns all package versions for a package owned by the authenticated user.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per-page'
        - name: state
          in: query
          required: false
          description: The state of the package, either active or deleted.
          schema:
            type: string
            enum:
              - active
              - deleted
            default: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-versions-for-authenticated-user'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /user/packages/{package_type}/{package_name}/versions/{package_version_id}:
    get:
      summary: Get a package version for the authenticated user
      description: |-
        Gets a specific package version for a package owned by the authenticated user.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-a-package-version-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-version-authenticated-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
    delete:
      summary: Delete a package version for the authenticated user
      description: |-
        Deletes a specific package version for a package owned by the authenticated user.  If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/delete-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#delete-a-package-version-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:
    post:
      summary: Restore a package version for the authenticated user
      description: |-
        Restores a package version owned by the authenticated user.

        You can restore a deleted package version under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/restore-package-version-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#restore-a-package-version-for-the-authenticated-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /users/{username}/packages:
    get:
      summary: List packages for a user
      description: |-
        Lists all packages in a user's namespace for which the requesting user has access.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/list-packages-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#list-packages-for-user
      parameters:
        - name: package_type
          description: The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.
          in: query
          required: true
          schema:
            type: string
            enum:
              - npm
              - maven
              - rubygems
              - docker
              - nuget
              - container
        - $ref: '#/components/parameters/package-visibility'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/packages-for-user'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /users/{username}/packages/{package_type}/{package_name}:
    get:
      summary: Get a package for a user
      description: |-
        Gets a specific package metadata for a public package owned by a user.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-package-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-a-package-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package'
              examples:
                default:
                  $ref: '#/components/examples/package-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
    delete:
      summary: Delete a package for a user
      description: |-
        Deletes an entire package for a user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container you want to delete.
      tags:
        - packages
      operationId: packages/delete-package-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#delete-a-package-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /users/{username}/packages/{package_type}/{package_name}/restore:
    post:
      summary: Restore a package for a user
      description: |-
        Restores an entire package for a user.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.
      tags:
        - packages
      operationId: packages/restore-package-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#restore-a-package-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
        - name: token
          description: package token
          schema:
            type: string
          required: false
          in: query
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /users/{username}/packages/{package_type}/{package_name}/versions:
    get:
      summary: Get all package versions for a package owned by a user
      description: |-
        Returns all package versions for a public package owned by a specified user.

        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-all-package-versions-for-package-owned-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-versions-for-user'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}:
    get:
      summary: Get a package version for a user
      description: |-
        Gets a specific package version for a public package owned by a specified user.

        At this time, to use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        If `package_type` is not `container`, your token must also include the `repo` scope.
      tags:
        - packages
      operationId: packages/get-package-version-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#get-a-package-version-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/package-version-id'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package-version'
              examples:
                default:
                  $ref: '#/components/examples/package-version-user'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
    delete:
      summary: Delete package version for a user
      description: |-
        Deletes a specific package version for a user. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.

        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container you want to delete.
      tags:
        - packages
      operationId: packages/delete-package-version-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#delete-a-package-version-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
  /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:
    post:
      summary: Restore package version for a user
      description: |-
        Restores a specific package version for a user.

        You can restore a deleted package under the following conditions:
          - The package was deleted within the last 30 days.
          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.

        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:
        - If `package_type` is not `container`, your token must also include the `repo` scope.
        - If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.
      tags:
        - packages
      operationId: packages/restore-package-version-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/packages#restore-a-package-version-for-a-user
      parameters:
        - $ref: '#/components/parameters/package-type'
        - $ref: '#/components/parameters/package-name'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/package-version-id'
      responses:
        '204':
          description: Response
        '401':
          $ref: '#/components/responses/requires_authentication'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: packages
        subcategory: null
components:
  schemas:
    package:
      title: Package
      description: A software package
      type: object
      properties:
        id:
          description: Unique identifier of the package.
          type: integer
          example: 1
        name:
          description: The name of the package.
          type: string
          example: super-linter
        package_type:
          type: string
          example: docker
          enum:
            - npm
            - maven
            - rubygems
            - docker
            - nuget
            - container
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter
        html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/package/super-linter
        version_count:
          description: The number of versions of the package.
          type: integer
          example: 1
        visibility:
          type: string
          example: private
          enum:
            - private
            - public
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        repository:
          $ref: '#/components/schemas/nullable-minimal-repository'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - package_type
        - visibility
        - url
        - html_url
        - version_count
        - created_at
        - updated_at
    nullable-simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
      nullable: true
    nullable-minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        template_repository:
          $ref: '#/components/schemas/nullable-repository'
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
      nullable: true
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    simple-user:
      title: Simple User
      description: Simple User
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
      required:
        - avatar_url
        - events_url
        - followers_url
        - following_url
        - gists_url
        - gravatar_id
        - html_url
        - id
        - node_id
        - login
        - organizations_url
        - received_events_url
        - repos_url
        - site_admin
        - starred_url
        - subscriptions_url
        - type
        - url
    nullable-repository:
      title: Repository
      description: A git repository
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
            - admin
            - pull
            - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        template_repository:
          nullable: true
          type: object
          properties:
            id:
              type: integer
            node_id:
              type: string
            name:
              type: string
            full_name:
              type: string
            owner:
              type: object
              properties:
                login:
                  type: string
                id:
                  type: integer
                node_id:
                  type: string
                avatar_url:
                  type: string
                gravatar_id:
                  type: string
                url:
                  type: string
                html_url:
                  type: string
                followers_url:
                  type: string
                following_url:
                  type: string
                gists_url:
                  type: string
                starred_url:
                  type: string
                subscriptions_url:
                  type: string
                organizations_url:
                  type: string
                repos_url:
                  type: string
                events_url:
                  type: string
                received_events_url:
                  type: string
                type:
                  type: string
                site_admin:
                  type: boolean
            private:
              type: boolean
            html_url:
              type: string
            description:
              type: string
            fork:
              type: boolean
            url:
              type: string
            archive_url:
              type: string
            assignees_url:
              type: string
            blobs_url:
              type: string
            branches_url:
              type: string
            collaborators_url:
              type: string
            comments_url:
              type: string
            commits_url:
              type: string
            compare_url:
              type: string
            contents_url:
              type: string
            contributors_url:
              type: string
            deployments_url:
              type: string
            downloads_url:
              type: string
            events_url:
              type: string
            forks_url:
              type: string
            git_commits_url:
              type: string
            git_refs_url:
              type: string
            git_tags_url:
              type: string
            git_url:
              type: string
            issue_comment_url:
              type: string
            issue_events_url:
              type: string
            issues_url:
              type: string
            keys_url:
              type: string
            labels_url:
              type: string
            languages_url:
              type: string
            merges_url:
              type: string
            milestones_url:
              type: string
            notifications_url:
              type: string
            pulls_url:
              type: string
            releases_url:
              type: string
            ssh_url:
              type: string
            stargazers_url:
              type: string
            statuses_url:
              type: string
            subscribers_url:
              type: string
            subscription_url:
              type: string
            tags_url:
              type: string
            teams_url:
              type: string
            trees_url:
              type: string
            clone_url:
              type: string
            mirror_url:
              type: string
            hooks_url:
              type: string
            svn_url:
              type: string
            homepage:
              type: string
            language:
              type: string
            forks_count:
              type: integer
            stargazers_count:
              type: integer
            watchers_count:
              type: integer
            size:
              type: integer
            default_branch:
              type: string
            open_issues_count:
              type: integer
            is_template:
              type: boolean
            topics:
              type: array
              items:
                type: string
            has_issues:
              type: boolean
            has_projects:
              type: boolean
            has_wiki:
              type: boolean
            has_pages:
              type: boolean
            has_downloads:
              type: boolean
            archived:
              type: boolean
            disabled:
              type: boolean
            visibility:
              type: string
            pushed_at:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
            permissions:
              type: object
              properties:
                admin:
                  type: boolean
                maintain:
                  type: boolean
                push:
                  type: boolean
                triage:
                  type: boolean
                pull:
                  type: boolean
            allow_rebase_merge:
              type: boolean
            temp_clone_token:
              type: string
            allow_squash_merge:
              type: boolean
            allow_auto_merge:
              type: boolean
            delete_branch_on_merge:
              type: boolean
            allow_update_branch:
              type: boolean
            allow_merge_commit:
              type: boolean
            subscribers_count:
              type: integer
            network_count:
              type: integer
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
      required:
        - archive_url
        - assignees_url
        - blobs_url
        - branches_url
        - collaborators_url
        - comments_url
        - commits_url
        - compare_url
        - contents_url
        - contributors_url
        - deployments_url
        - description
        - downloads_url
        - events_url
        - fork
        - forks_url
        - full_name
        - git_commits_url
        - git_refs_url
        - git_tags_url
        - hooks_url
        - html_url
        - id
        - node_id
        - issue_comment_url
        - issue_events_url
        - issues_url
        - keys_url
        - labels_url
        - languages_url
        - merges_url
        - milestones_url
        - name
        - notifications_url
        - owner
        - private
        - pulls_url
        - releases_url
        - stargazers_url
        - statuses_url
        - subscribers_url
        - subscription_url
        - tags_url
        - teams_url
        - trees_url
        - url
        - clone_url
        - default_branch
        - forks
        - forks_count
        - git_url
        - has_downloads
        - has_issues
        - has_projects
        - has_wiki
        - has_pages
        - homepage
        - language
        - archived
        - disabled
        - mirror_url
        - open_issues
        - open_issues_count
        - license
        - pushed_at
        - size
        - ssh_url
        - stargazers_count
        - svn_url
        - watchers
        - watchers_count
        - created_at
        - updated_at
      nullable: true
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: |
            # Contributor Covenant Code of Conduct

            ## Our Pledge

            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.

            ## Our Standards

            Examples of behavior that contributes to creating a positive environment include:

            * Using welcoming and inclusive language
            * Being respectful of differing viewpoints and experiences
            * Gracefully accepting constructive criticism
            * Focusing on what is best for the community
            * Showing empathy towards other community members

            Examples of unacceptable behavior by participants include:

            * The use of sexualized language or imagery and unwelcome sexual attention or advances
            * Trolling, insulting/derogatory comments, and personal or political attacks
            * Public or private harassment
            * Publishing others' private information, such as a physical or electronic address, without explicit permission
            * Other conduct which could reasonably be considered inappropriate in a professional setting

            ## Our Responsibilities

            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response
                              to any instances of unacceptable behavior.

            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.

            ## Scope

            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,
                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.

            ## Enforcement

            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.

            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.

            ## Attribution

            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]

            [homepage]: http://contributor-covenant.org
            [version]: http://contributor-covenant.org/version/1/4/
        html_url:
          type: string
          format: uri
          nullable: true
      required:
        - url
        - html_url
        - key
        - name
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
        - key
        - name
        - url
        - spdx_id
        - node_id
      nullable: true
    package-version:
      title: Package Version
      description: A version of a software package
      type: object
      properties:
        id:
          description: Unique identifier of the package version.
          type: integer
          example: 1
        name:
          description: The name of the package version.
          type: string
          example: latest
        url:
          type: string
          example: https://api.github.com/orgs/github/packages/container/super-linter/versions/786068
        package_html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/package/super-linter
        html_url:
          type: string
          example: https://github.com/orgs/github/packages/container/super-linter/786068
        license:
          type: string
          example: MIT
        description:
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        deleted_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        metadata:
          type: object
          title: Package Version Metadata
          properties:
            package_type:
              type: string
              example: docker
              enum:
                - npm
                - maven
                - rubygems
                - docker
                - nuget
                - container
            container:
              type: object
              title: Container Metadata
              properties:
                tags:
                  type: array
                  items:
                    type: string
              required:
                - tags
            docker:
              type: object
              title: Docker Metadata
              properties:
                tag:
                  type: array
                  items:
                    type: string
              required:
                - tags
          required:
            - package_type
      required:
        - id
        - name
        - url
        - package_html_url
        - created_at
        - updated_at
  parameters:
    org:
      name: org
      in: path
      required: true
      schema:
        type: string
    package-visibility:
      name: visibility
      description: The selected visibility of the packages. Can be one of `public`, `private`, or `internal`. Only `container` package_types currently support `internal` visibility properly. For other ecosystems `internal` is synonymous with `private`. This parameter is optional and only filters an existing result set.
      in: query
      required: false
      schema:
        type: string
        enum:
          - public
          - private
          - internal
    package-type:
      name: package_type
      description: The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.
      in: path
      required: true
      schema:
        type: string
        enum:
          - npm
          - maven
          - rubygems
          - docker
          - nuget
          - container
    package-name:
      name: package_name
      description: The name of the package.
      in: path
      required: true
      schema:
        type: string
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    package-version-id:
      name: package_version_id
      description: Unique identifier of the package version.
      in: path
      required: true
      schema:
        type: integer
    username:
      name: username
      in: path
      required: true
      schema:
        type: string
  responses:
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  securitySchemes: {}
  callbacks: {}
  examples:
    packages-for-org:
      value:
        - id: 197
          name: hello_docker
          package_type: container
          owner:
            login: github
            id: 9919
            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
            avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
            gravatar_id: ''
            url: https://api.github.com/users/github
            html_url: https://github.com/github
            followers_url: https://api.github.com/users/github/followers
            following_url: https://api.github.com/users/github/following{/other_user}
            gists_url: https://api.github.com/users/github/gists{/gist_id}
            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/github/subscriptions
            organizations_url: https://api.github.com/users/github/orgs
            repos_url: https://api.github.com/users/github/repos
            events_url: https://api.github.com/users/github/events{/privacy}
            received_events_url: https://api.github.com/users/github/received_events
            type: Organization
            site_admin: false
          version_count: 1
          visibility: private
          url: https://api.github.com/orgs/github/packages/container/hello_docker
          created_at: '2020-05-19T22:19:11Z'
          updated_at: '2020-05-19T22:19:11Z'
          html_url: https://github.com/orgs/github/packages/container/package/hello_docker
        - id: 198
          name: goodbye_docker
          package_type: container
          owner:
            login: github
            id: 9919
            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
            avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
            gravatar_id: ''
            url: https://api.github.com/users/github
            html_url: https://github.com/github
            followers_url: https://api.github.com/users/github/followers
            following_url: https://api.github.com/users/github/following{/other_user}
            gists_url: https://api.github.com/users/github/gists{/gist_id}
            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/github/subscriptions
            organizations_url: https://api.github.com/users/github/orgs
            repos_url: https://api.github.com/users/github/repos
            events_url: https://api.github.com/users/github/events{/privacy}
            received_events_url: https://api.github.com/users/github/received_events
            type: Organization
            site_admin: false
          version_count: 2
          visibility: private
          url: https://api.github.com/orgs/github/packages/container/goodbye_docker
          created_at: '2020-05-20T22:19:11Z'
          updated_at: '2020-05-20T22:19:11Z'
          html_url: https://github.com/orgs/github/packages/container/package/goodbye_docker
    package-org:
      value:
        id: 197
        name: hello_docker
        package_type: container
        owner:
          login: github
          id: 9919
          node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
          gravatar_id: ''
          url: https://api.github.com/users/github
          html_url: https://github.com/github
          followers_url: https://api.github.com/users/github/followers
          following_url: https://api.github.com/users/github/following{/other_user}
          gists_url: https://api.github.com/users/github/gists{/gist_id}
          starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/github/subscriptions
          organizations_url: https://api.github.com/users/github/orgs
          repos_url: https://api.github.com/users/github/repos
          events_url: https://api.github.com/users/github/events{/privacy}
          received_events_url: https://api.github.com/users/github/received_events
          type: Organization
          site_admin: false
        version_count: 1
        visibility: private
        url: https://api.github.com/orgs/github/packages/container/hello_docker
        created_at: '2020-05-19T22:19:11Z'
        updated_at: '2020-05-19T22:19:11Z'
        html_url: https://github.com/orgs/github/packages/container/package/hello_docker
    package-versions-for-org:
      value:
        - id: 245301
          name: 1.0.4
          url: https://api.github.com/orgs/octo-org/packages/npm/hello-world-npm/versions/245301
          package_html_url: https://github.com/octo-org/hello-world-npm/packages/43752
          created_at: '2019-11-05T22:49:04Z'
          updated_at: '2019-11-05T22:49:04Z'
          html_url: https://github.com/octo-org/hello-world-npm/packages/43752?version=1.0.4
          metadata:
            package_type: npm
        - id: 209672
          name: 1.0.3
          url: https://api.github.com/orgs/octo-org/packages/npm/hello-world-npm/versions/209672
          package_html_url: https://github.com/octo-org/hello-world-npm/packages/43752
          created_at: '2019-10-29T15:42:11Z'
          updated_at: '2019-10-29T15:42:12Z'
          html_url: https://github.com/octo-org/hello-world-npm/packages/43752?version=1.0.3
          metadata:
            package_type: npm
    package-version-org:
      value:
        id: 836
        name: sha256:b3d3e366b55f9a54599220198b3db5da8f53592acbbb7dc7e4e9878762fc5344
        url: https://api.github.com/orgs/github/packages/container/hello_docker/versions/836
        package_html_url: https://github.com/orgs/github/packages/container/package/hello_docker
        created_at: '2020-05-19T22:19:11Z'
        updated_at: '2020-05-19T22:19:11Z'
        html_url: https://github.com/orgs/github/packages/container/hello_docker/836
        metadata:
          package_type: container
          container:
            tags:
              - latest
    packages-for-user:
      value:
        - id: 197
          name: hello_docker
          package_type: container
          owner:
            login: monalisa
            id: 9919
            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
            avatar_url: https://avatars.monalisausercontent.com/u/9919?v=4
            gravatar_id: ''
            url: https://api.github.com/users/monalisa
            html_url: https://github.com/github
            followers_url: https://api.github.com/users/github/followers
            following_url: https://api.github.com/users/github/following{/other_user}
            gists_url: https://api.github.com/users/github/gists{/gist_id}
            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/github/subscriptions
            organizations_url: https://api.github.com/users/github/orgs
            repos_url: https://api.github.com/users/github/repos
            events_url: https://api.github.com/users/github/events{/privacy}
            received_events_url: https://api.github.com/users/github/received_events
            type: User
            site_admin: false
          version_count: 1
          visibility: private
          url: https://api.github.com/orgs/github/packages/container/hello_docker
          created_at: '2020-05-19T22:19:11Z'
          updated_at: '2020-05-19T22:19:11Z'
          html_url: https://github.com/orgs/github/packages/container/package/hello_docker
        - id: 198
          name: goodbye_docker
          package_type: container
          owner:
            login: github
            id: 9919
            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
            avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
            gravatar_id: ''
            url: https://api.github.com/users/monalisa
            html_url: https://github.com/github
            followers_url: https://api.github.com/users/github/followers
            following_url: https://api.github.com/users/github/following{/other_user}
            gists_url: https://api.github.com/users/github/gists{/gist_id}
            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/github/subscriptions
            organizations_url: https://api.github.com/users/github/orgs
            repos_url: https://api.github.com/users/github/repos
            events_url: https://api.github.com/users/github/events{/privacy}
            received_events_url: https://api.github.com/users/github/received_events
            type: User
            site_admin: false
          version_count: 2
          visibility: private
          url: https://api.github.com/user/monalisa/packages/container/goodbye_docker
          created_at: '2020-05-20T22:19:11Z'
          updated_at: '2020-05-20T22:19:11Z'
          html_url: https://github.com/user/monalisa/packages/container/package/goodbye_docker
    package-user:
      value:
        id: 40201
        name: octo-name
        package_type: rubygems
        owner:
          login: octocat
          id: 209477
          node_id: MDQ6VXNlcjIwOTQ3Nw==
          avatar_url: https://avatars.githubusercontent.com/u/209477?v=4
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        version_count: 3
        visibility: public
        url: https://api.github.com/users/octocat/packages/rubygems/octo-name
        created_at: '2019-10-20T14:17:14Z'
        updated_at: '2019-10-20T14:17:14Z'
        repository:
          id: 216219492
          node_id: MDEwOlJlcG9zaXRvcnkyMTYyMTk0OTI=
          name: octo-name-repo
          full_name: octocat/octo-name-repo
          private: false
          owner:
            login: octocat
            id: 209477
            node_id: MDQ6VXNlcjIwOTQ3Nw==
            avatar_url: https://avatars.githubusercontent.com/u/209477?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          html_url: https://github.com/octocat/octo-name-repo
          description: Project for octocats
          fork: false
          url: https://api.github.com/repos/octocat/octo-name-repo
          forks_url: https://api.github.com/repos/octocat/octo-name-repo/forks
          keys_url: https://api.github.com/repos/octocat/octo-name-repo/keys{/key_id}
          collaborators_url: https://api.github.com/repos/octocat/octo-name-repo/collaborators{/collaborator}
          teams_url: https://api.github.com/repos/octocat/octo-name-repo/teams
          hooks_url: https://api.github.com/repos/octocat/octo-name-repo/hooks
          issue_events_url: https://api.github.com/repos/octocat/octo-name-repo/issues/events{/number}
          events_url: https://api.github.com/repos/octocat/octo-name-repo/events
          assignees_url: https://api.github.com/repos/octocat/octo-name-repo/assignees{/user}
          branches_url: https://api.github.com/repos/octocat/octo-name-repo/branches{/branch}
          tags_url: https://api.github.com/repos/octocat/octo-name-repo/tags
          blobs_url: https://api.github.com/repos/octocat/octo-name-repo/git/blobs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/octo-name-repo/git/tags{/sha}
          git_refs_url: https://api.github.com/repos/octocat/octo-name-repo/git/refs{/sha}
          trees_url: https://api.github.com/repos/octocat/octo-name-repo/git/trees{/sha}
          statuses_url: https://api.github.com/repos/octocat/octo-name-repo/statuses/{sha}
          languages_url: https://api.github.com/repos/octocat/octo-name-repo/languages
          stargazers_url: https://api.github.com/repos/octocat/octo-name-repo/stargazers
          contributors_url: https://api.github.com/repos/octocat/octo-name-repo/contributors
          subscribers_url: https://api.github.com/repos/octocat/octo-name-repo/subscribers
          subscription_url: https://api.github.com/repos/octocat/octo-name-repo/subscription
          commits_url: https://api.github.com/repos/octocat/octo-name-repo/commits{/sha}
          git_commits_url: https://api.github.com/repos/octocat/octo-name-repo/git/commits{/sha}
          comments_url: https://api.github.com/repos/octocat/octo-name-repo/comments{/number}
          issue_comment_url: https://api.github.com/repos/octocat/octo-name-repo/issues/comments{/number}
          contents_url: https://api.github.com/repos/octocat/octo-name-repo/contents/{+path}
          compare_url: https://api.github.com/repos/octocat/octo-name-repo/compare/{base}...{head}
          merges_url: https://api.github.com/repos/octocat/octo-name-repo/merges
          archive_url: https://api.github.com/repos/octocat/octo-name-repo/{archive_format}{/ref}
          downloads_url: https://api.github.com/repos/octocat/octo-name-repo/downloads
          issues_url: https://api.github.com/repos/octocat/octo-name-repo/issues{/number}
          pulls_url: https://api.github.com/repos/octocat/octo-name-repo/pulls{/number}
          milestones_url: https://api.github.com/repos/octocat/octo-name-repo/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/octo-name-repo/notifications{?since,all,participating}
          labels_url: https://api.github.com/repos/octocat/octo-name-repo/labels{/name}
          releases_url: https://api.github.com/repos/octocat/octo-name-repo/releases{/id}
          deployments_url: https://api.github.com/repos/octocat/octo-name-repo/deployments
        html_url: https://github.com/octocat/octo-name-repo/packages/40201
    package-versions-for-authenticated-user:
      value:
        - id: 45763
          name: sha256:08a44bab0bddaddd8837a8b381aebc2e4b933768b981685a9e088360af0d3dd9
          url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/45763
          package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker
          created_at: '2020-09-11T21:56:40Z'
          updated_at: '2021-02-05T21:32:32Z'
          html_url: https://github.com/users/octocat/packages/container/hello_docker/45763
          metadata:
            package_type: container
            container:
              tags:
                - latest
        - id: 881
          name: sha256:b3d3e366b55f9a54599220198b3db5da8f53592acbbb7dc7e4e9878762fc5344
          url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/881
          package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker
          created_at: '2020-05-21T22:22:20Z'
          updated_at: '2021-02-05T21:32:32Z'
          html_url: https://github.com/users/octocat/packages/container/hello_docker/881
          metadata:
            package_type: container
            container:
              tags: []
    package-version-authenticated-user:
      value:
        id: 214
        name: sha256:3561f0cff06caccddb99c93bd26e712fcc56a811de0f8ea7a17bb865f30b176a
        url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/214
        package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker
        created_at: '2020-05-15T03:46:45Z'
        updated_at: '2020-05-15T03:46:45Z'
        html_url: https://github.com/users/octocat/packages/container/hello_docker/214
        metadata:
          package_type: container
          container:
            tags:
              - 1.13.6
    package-versions-for-user:
      value:
        - id: 3497268
          name: 0.3.0
          url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/3497268
          package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
          license: MIT
          created_at: '2020-08-31T15:22:11Z'
          updated_at: '2020-08-31T15:22:12Z'
          description: Project for octocats
          html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.3.0
          metadata:
            package_type: rubygems
        - id: 387039
          name: 0.2.0
          url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039
          package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
          license: MIT
          created_at: '2019-12-01T20:49:29Z'
          updated_at: '2019-12-01T20:49:30Z'
          description: Project for octocats
          html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0
          metadata:
            package_type: rubygems
        - id: 169770
          name: 0.1.0
          url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/169770
          package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
          license: MIT
          created_at: '2019-10-20T14:17:14Z'
          updated_at: '2019-10-20T14:17:15Z'
          html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.1.0
          metadata:
            package_type: rubygems
    package-version-user:
      value:
        id: 387039
        name: 0.2.0
        url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039
        package_html_url: https://github.com/octocat/octo-name-repo/packages/40201
        license: MIT
        created_at: '2019-12-01T20:49:29Z'
        updated_at: '2019-12-01T20:49:30Z'
        description: Octo-name client for Ruby
        html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0
        metadata:
          package_type: rubygems
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    package_versions:
      id: github.packages.package_versions
      name: package_versions
      title: Package Versions
      methods:
        get_all_package_versions_for_package_owned_by_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages~1{package_type}~1{package_name}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_package_version_for_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_package_version_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        restore_package_version_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_package_version_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_package_version_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        restore_package_version_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_package_version_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_package_version_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        restore_package_version_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_all_package_versions_for_package_owned_by_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_all_package_versions_for_package_owned_by_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/get_package_version_for_organization'
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/get_package_version_for_user'
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/get_package_version_for_authenticated_user'
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/get_all_package_versions_for_package_owned_by_org'
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/get_all_package_versions_for_package_owned_by_user'
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/get_all_package_versions_for_package_owned_by_authenticated_user'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/delete_package_version_for_org'
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/delete_package_version_for_user'
          - $ref: '#/components/x-stackQL-resources/package_versions/methods/delete_package_version_for_authenticated_user'
    packages:
      id: github.packages.packages
      name: packages
      title: Packages
      methods:
        list_packages_for_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_package_for_organization:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages~1{package_type}~1{package_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_package_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages~1{package_type}~1{package_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        restore_package_for_org:
          operation:
            $ref: '#/paths/~1orgs~1{org}~1packages~1{package_type}~1{package_name}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_packages_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_package_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_package_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        restore_package_for_authenticated_user:
          operation:
            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_packages_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_package_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_package_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        restore_package_for_user:
          operation:
            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1restore/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/packages/methods/get_package_for_organization'
          - $ref: '#/components/x-stackQL-resources/packages/methods/get_package_for_user'
          - $ref: '#/components/x-stackQL-resources/packages/methods/get_package_for_authenticated_user'
          - $ref: '#/components/x-stackQL-resources/packages/methods/list_packages_for_organization'
          - $ref: '#/components/x-stackQL-resources/packages/methods/list_packages_for_user'
          - $ref: '#/components/x-stackQL-resources/packages/methods/list_packages_for_authenticated_user'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/packages/methods/delete_package_for_org'
          - $ref: '#/components/x-stackQL-resources/packages/methods/delete_package_for_user'
          - $ref: '#/components/x-stackQL-resources/packages/methods/delete_package_for_authenticated_user'
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - packages
  description: Manage packages for authenticated users and organizations.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
