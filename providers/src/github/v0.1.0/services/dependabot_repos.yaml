paths:
  /repos/{owner}/{repo}/dependabot/secrets:
    get:
      summary: List repository secrets
      description: Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.
      tags:
        - dependabot
      operationId: dependabot/list-repo-secrets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/dependabot#list-repository-secrets
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/per-page'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_count
                  - secrets
                properties:
                  total_count:
                    type: integer
                  secrets:
                    type: array
                    items:
                      $ref: '#/components/schemas/dependabot-secret'
              examples:
                default:
                  $ref: '#/components/examples/dependabot-secret-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  /repos/{owner}/{repo}/dependabot/secrets/public-key:
    get:
      summary: Get a repository public key
      description: Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.
      tags:
        - dependabot
      operationId: dependabot/get-repo-public-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/dependabot#get-a-repository-public-key
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dependabot-public-key'
              examples:
                default:
                  $ref: '#/components/examples/dependabot-public-key'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
  /repos/{owner}/{repo}/dependabot/secrets/{secret_name}:
    get:
      summary: Get a repository secret
      description: Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.
      tags:
        - dependabot
      operationId: dependabot/get-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/dependabot#get-a-repository-secret
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dependabot-secret'
              examples:
                default:
                  $ref: '#/components/examples/dependabot-secret'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    put:
      summary: Create or update a repository secret
      description: |-
        Creates or updates a repository secret with an encrypted value. Encrypt your secret using
        [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access
        token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository
        permission to use this endpoint.

        #### Example encrypting a secret using Node.js

        Encrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.

        ```
        const sodium = require('tweetsodium');

        const key = "base64-encoded-public-key";
        const value = "plain-text-secret";

        // Convert the message and key to Uint8Array's (Buffer implements that interface)
        const messageBytes = Buffer.from(value);
        const keyBytes = Buffer.from(key, 'base64');

        // Encrypt using LibSodium.
        const encryptedBytes = sodium.seal(messageBytes, keyBytes);

        // Base64 the encrypted secret
        const encrypted = Buffer.from(encryptedBytes).toString('base64');

        console.log(encrypted);
        ```


        #### Example encrypting a secret using Python

        Encrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/latest/public/#nacl-public-sealedbox) with Python 3.

        ```
        from base64 import b64encode
        from nacl import encoding, public

        def encrypt(public_key: str, secret_value: str) -> str:
          """Encrypt a Unicode string using the public key."""
          public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
          sealed_box = public.SealedBox(public_key)
          encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
          return b64encode(encrypted).decode("utf-8")
        ```

        #### Example encrypting a secret using C#

        Encrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.

        ```
        var secretValue = System.Text.Encoding.UTF8.GetBytes("mySecret");
        var publicKey = Convert.FromBase64String("2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=");

        var sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);

        Console.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));
        ```

        #### Example encrypting a secret using Ruby

        Encrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.

        ```ruby
        require "rbnacl"
        require "base64"

        key = Base64.decode64("+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=")
        public_key = RbNaCl::PublicKey.new(key)

        box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
        encrypted_secret = box.encrypt("my_secret")

        # Print the base64 encoded secret
        puts Base64.strict_encode64(encrypted_secret)
        ```
      tags:
        - dependabot
      operationId: dependabot/create-or-update-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/dependabot#create-or-update-a-repository-secret
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/secret-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encrypted_value:
                  type: string
                  description: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/reference/dependabot#get-a-repository-public-key) endpoint.
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
                key_id:
                  type: string
                  description: ID of the key you used to encrypt the secret.
            example:
              encrypted_value: c2VjcmV0
              key_id: '012345678912345678'
      responses:
        '201':
          description: Response when creating a secret
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
        '204':
          description: Response when updating a secret
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
    delete:
      summary: Delete a repository secret
      description: Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` repository permission to use this endpoint.
      tags:
        - dependabot
      operationId: dependabot/delete-repo-secret
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/dependabot#delete-a-repository-secret
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/secret-name'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: dependabot
        subcategory: secrets
components:
  schemas:
    dependabot-secret:
      title: Dependabot Secret
      description: Set secrets for Dependabot.
      type: object
      properties:
        name:
          description: The name of the secret.
          example: MY_ARTIFACTORY_PASSWORD
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - created_at
        - updated_at
    dependabot-public-key:
      title: DependabotPublicKey
      description: The public key used for setting Dependabot Secrets.
      type: object
      properties:
        key_id:
          description: The identifier for the key.
          type: string
          example: '1234567'
        key:
          description: The Base64 encoded public key.
          type: string
          example: hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=
      required:
        - key_id
        - key
  parameters:
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    per-page:
      name: per_page
      description: Results per page (max 100)
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: Page number of the results to fetch.
      in: query
      schema:
        type: integer
        default: 1
    secret-name:
      name: secret_name
      description: secret_name parameter
      in: path
      required: true
      schema:
        type: string
  responses: {}
  securitySchemes: {}
  callbacks: {}
  examples:
    dependabot-secret-paginated:
      value:
        total_count: 2
        secrets:
          - name: AZURE_DEVOPS_PAT
            created_at: '2019-08-10T14:59:22Z'
            updated_at: '2020-01-10T14:59:22Z'
          - name: MY_ARTIFACTORY_PASSWORD
            created_at: '2020-01-10T10:59:22Z'
            updated_at: '2020-01-11T11:59:22Z'
    dependabot-public-key:
      value:
        key_id: '012345678912345678'
        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234
    dependabot-secret:
      value:
        name: MY_ARTIFACTORY_PASSWORD
        created_at: '2019-08-10T14:59:22Z'
        updated_at: '2020-01-10T14:59:22Z'
  requestBodies: {}
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
  links: {}
  x-stackQL-resources:
    secrets:
      id: github.dependabot_repos.secrets
      name: secrets
      title: secrets
      methods:
        list_repo_secrets:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_repo_public_key:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1public-key/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_repo_secret:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1{secret_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_repo_secret:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1{secret_name}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        delete_repo_secret:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dependabot~1secrets~1{secret_name}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/get_repo_secret'
          - $ref: '#/components/x-stackQL-resources/secrets/methods/list_repo_secrets'
        insert:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/create_or_update_repo_secret'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/delete_repo_secret'
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - dependabot_repos
  description: Endpoints to manage Dependabot.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
