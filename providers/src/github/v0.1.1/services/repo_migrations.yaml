paths:
  /repos/{owner}/{repo}/import:
    get:
      summary: Get an import status
      description: |-
        View the progress of an import.

        **Import status**

        This section includes details about the possible values of the `status` field of the Import Progress response.

        An import that does not have errors will progress through these steps:

        *   `detecting` - the "detection" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.
        *   `importing` - the "raw" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).
        *   `mapping` - the "rewrite" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.
        *   `pushing` - the "push" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is "Writing objects".
        *   `complete` - the import is complete, and the repository is ready on GitHub.

        If there are problems, you will see one of these in the `status` field:

        *   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.
        *   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api) for more information.
        *   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.
        *   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://docs.github.com/rest/reference/migrations#cancel-an-import) and [retry](https://docs.github.com/rest/reference/migrations#start-an-import) with the correct URL.
        *   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.

        **The project_choices field**

        When multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.

        **Git LFS related fields**

        This section includes details about Git LFS related fields that may be present in the Import Progress response.

        *   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.
        *   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.
        *   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.
        *   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a "Get Large Files" request.
      tags:
        - migrations
      operationId: migrations/get-import-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#get-an-import-status
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/import'
              examples:
                default:
                  $ref: '#/components/examples/import'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
    put:
      summary: Start an import
      description: Start a source import to a GitHub repository using GitHub Importer.
      tags:
        - migrations
      operationId: migrations/start-import
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#start-an-import
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vcs_url:
                  type: string
                  description: The URL of the originating repository.
                vcs:
                  type: string
                  description: The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.
                  enum:
                    - subversion
                    - git
                    - mercurial
                    - tfvc
                vcs_username:
                  type: string
                  description: If authentication is required, the username to provide to `vcs_url`.
                vcs_password:
                  type: string
                  description: If authentication is required, the password to provide to `vcs_url`.
                tfvc_project:
                  type: string
                  description: For a tfvc import, the name of the project that is being imported.
              required:
                - vcs_url
            example:
              vcs: subversion
              vcs_url: http://svn.mycompany.com/svn/myproject
              vcs_username: octocat
              vcs_password: secret
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/import'
              examples:
                default:
                  $ref: '#/components/examples/import-2'
          headers:
            Location:
              example: https://api.github.com/repos/spraints/socm/import
              schema:
                type: string
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
    patch:
      summary: Update an import
      description: |-
        An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API
        request. If no parameters are provided, the import will be restarted.
      tags:
        - migrations
      operationId: migrations/update-import
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#update-an-import
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                vcs_username:
                  type: string
                  description: The username to provide to the originating repository.
                vcs_password:
                  type: string
                  description: The password to provide to the originating repository.
                vcs:
                  type: string
                  example: '"git"'
                tfvc_project:
                  type: string
                  example: '"project1"'
              nullable: true
            examples:
              example-1:
                summary: Example 1
                value:
                  vcs_username: octocat
                  vcs_password: secret
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/import'
              examples:
                example-1:
                  $ref: '#/components/examples/import-example-1'
                example-2:
                  $ref: '#/components/examples/import-example-2'
                response:
                  $ref: '#/components/examples/import-response'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
    delete:
      summary: Cancel an import
      description: Stop an import for a repository.
      tags:
        - migrations
      operationId: migrations/cancel-import
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#cancel-an-import
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  /repos/{owner}/{repo}/import/authors:
    get:
      summary: Get commit authors
      description: |-
        Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.

        This endpoint and the [Map a commit author](https://docs.github.com/rest/reference/migrations#map-a-commit-author) endpoint allow you to provide correct Git author information.
      tags:
        - migrations
      operationId: migrations/get-commit-authors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#get-commit-authors
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - $ref: '#/components/parameters/since-user'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/porter-author'
              examples:
                default:
                  $ref: '#/components/examples/porter-author-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  /repos/{owner}/{repo}/import/authors/{author_id}:
    patch:
      summary: Map a commit author
      description: Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.
      tags:
        - migrations
      operationId: migrations/map-commit-author
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#map-a-commit-author
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
        - name: author_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The new Git author email.
                name:
                  type: string
                  description: The new Git author name.
              additionalProperties: false
            example:
              email: hubot@github.com
              name: Hubot the Robot
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/porter-author'
              examples:
                default:
                  $ref: '#/components/examples/porter-author'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  /repos/{owner}/{repo}/import/large_files:
    get:
      summary: Get large files
      description: List files larger than 100MB found during the import
      tags:
        - migrations
      operationId: migrations/get-large-files
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#get-large-files
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/porter-large-file'
              examples:
                default:
                  $ref: '#/components/examples/porter-large-file-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
  /repos/{owner}/{repo}/import/lfs:
    patch:
      summary: Update Git LFS preference
      description: You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://docs.github.com/articles/versioning-large-files/).
      tags:
        - migrations
      operationId: migrations/set-lfs-preference
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reference/migrations#update-git-lfs-preference
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                use_lfs:
                  type: string
                  description: Can be one of `opt_in` (large files will be stored using Git LFS) or `opt_out` (large files will be removed during the import).
                  enum:
                    - opt_in
                    - opt_out
              required:
                - use_lfs
            example:
              use_lfs: opt_in
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/import'
              examples:
                default:
                  $ref: '#/components/examples/import'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: migrations
        subcategory: source-imports
components:
  schemas:
    import:
      title: Import
      description: A repository import from an external source.
      type: object
      properties:
        vcs:
          type: string
          nullable: true
        use_lfs:
          type: boolean
        vcs_url:
          description: The URL of the originating repository.
          type: string
        svc_root:
          type: string
        tfvc_project:
          type: string
        status:
          type: string
          enum:
            - auth
            - error
            - none
            - detecting
            - choose
            - auth_failed
            - importing
            - mapping
            - waiting_to_push
            - pushing
            - complete
            - setup
            - unknown
            - detection_found_multiple
            - detection_found_nothing
            - detection_needs_auth
        status_text:
          type: string
          nullable: true
        failed_step:
          type: string
          nullable: true
        error_message:
          type: string
          nullable: true
        import_percent:
          type: integer
          nullable: true
        commit_count:
          type: integer
          nullable: true
        push_percent:
          type: integer
          nullable: true
        has_large_files:
          type: boolean
        large_files_size:
          type: integer
        large_files_count:
          type: integer
        project_choices:
          type: array
          items:
            type: object
            properties:
              vcs:
                type: string
              tfvc_project:
                type: string
              human_name:
                type: string
        message:
          type: string
        authors_count:
          type: integer
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        authors_url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        svn_root:
          type: string
      required:
        - vcs
        - vcs_url
        - status
        - url
        - repository_url
        - html_url
        - authors_url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
        - message
        - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                  - type: string
                    nullable: true
                  - type: integer
                    nullable: true
                  - type: array
                    nullable: true
                    items:
                      type: string
    porter-author:
      title: Porter Author
      description: Porter Author
      type: object
      properties:
        id:
          type: integer
        remote_id:
          type: string
        remote_name:
          type: string
        email:
          type: string
        name:
          type: string
        url:
          type: string
          format: uri
        import_url:
          type: string
          format: uri
      required:
        - id
        - remote_id
        - remote_name
        - email
        - name
        - url
        - import_url
    porter-large-file:
      title: Porter Large File
      description: Porter Large File
      type: object
      properties:
        ref_name:
          type: string
        path:
          type: string
        oid:
          type: string
        size:
          type: integer
      required:
        - oid
        - path
        - ref_name
        - size
  parameters:
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    since-user:
      name: since
      description: A user ID. Only return users with an ID greater than this ID.
      in: query
      required: false
      schema:
        type: integer
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
  securitySchemes: {}
  callbacks: {}
  examples:
    import:
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: complete
        status_text: Done
        has_large_files: true
        large_files_size: 132331036
        large_files_count: 1
        authors_count: 4
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-2:
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: importing
        status_text: Importing...
        has_large_files: false
        large_files_size: 0
        large_files_count: 0
        authors_count: 0
        commit_count: 1042
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-example-1:
      summary: Example 1
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: detecting
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-example-2:
      summary: Example 2
      value:
        vcs: tfvc
        use_lfs: true
        vcs_url: http://tfs.mycompany.com/tfs/myproject
        tfvc_project: project1
        status: importing
        status_text: Importing...
        has_large_files: false
        large_files_size: 0
        large_files_count: 0
        authors_count: 0
        commit_count: 1042
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    import-response:
      summary: Response
      value:
        vcs: subversion
        use_lfs: true
        vcs_url: http://svn.mycompany.com/svn/myproject
        status: importing
        status_text: Importing...
        has_large_files: false
        large_files_size: 0
        large_files_count: 0
        authors_count: 0
        commit_count: 1042
        url: https://api.github.com/repos/octocat/socm/import
        html_url: https://import.github.com/octocat/socm/import
        authors_url: https://api.github.com/repos/octocat/socm/import/authors
        repository_url: https://api.github.com/repos/octocat/socm
    porter-author-items:
      value:
        - id: 2268557
          remote_id: nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef
          remote_name: nobody
          email: hubot@github.com
          name: Hubot
          url: https://api.github.com/repos/octocat/socm/import/authors/2268557
          import_url: https://api.github.com/repos/octocat/socm/import
        - id: 2268558
          remote_id: svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef
          remote_name: svner
          email: svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef
          name: svner
          url: https://api.github.com/repos/octocat/socm/import/authors/2268558
          import_url: https://api.github.com/repos/octocat/socm/import
        - id: 2268559
          remote_id: svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef
          remote_name: svner@example.com
          email: svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef
          name: svner@example.com
          url: https://api.github.com/repos/octocat/socm/import/authors/2268559
          import_url: https://api.github.com/repos/octocat/socm/import
    porter-author:
      value:
        id: 2268557
        remote_id: nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef
        remote_name: nobody
        email: hubot@github.com
        name: Hubot
        url: https://api.github.com/repos/octocat/socm/import/authors/2268557
        import_url: https://api.github.com/repos/octocat/socm/import
    porter-large-file-items:
      value:
        - ref_name: refs/heads/master
          path: foo/bar/1
          oid: d3d9446802a44259755d38e6d163e820
          size: 10485760
        - ref_name: refs/heads/master
          path: foo/bar/2
          oid: 6512bd43d9caa6e02c990b0a82652dca
          size: 11534336
        - ref_name: refs/heads/master
          path: foo/bar/3
          oid: c20ad4d76fe97759aa27a0c99bff6710
          size: 12582912
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    source_imports:
      id: github.repo_migrations.source_imports
      name: source_imports
      title: source_imports
      methods:
        get_import_status:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_import:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        update_import:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_import:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_commit_authors:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import~1authors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        map_commit_author:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import~1authors~1{author_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_large_files:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import~1large_files/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_lfs_preference:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1import~1lfs/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/source_imports/methods/get_import_status'
        insert: []
        update: []
        delete: []
openapi: 3.0.3
servers:
  - url: https://api.github.com
tags:
  - name: actions
    description: Endpoints to manage GitHub Actions using the REST API.
  - name: activity
    description: Activity APIs provide access to notifications, subscriptions, and timelines.
  - name: apps
    description: Information for integrations and installations.
  - name: billing
    description: Monitor charges and usage from Actions and Packages.
  - name: checks
    description: Rich interactions with checks run by your integrations.
  - name: code-scanning
    description: Retrieve code scanning alerts from a repository.
  - name: codes-of-conduct
    description: Insight into codes of conduct for your communities.
  - name: codespaces
    description: Endpoints to manage Codespaces using the REST API.
  - name: emojis
    description: List emojis available to use on GitHub.
  - name: enterprise-admin
    description: Administer a GitHub enterprise.
  - name: dependabot
    description: Endpoints to manage Dependabot.
  - name: gists
    description: View, modify your gists.
  - name: git
    description: Raw Git functionality.
  - name: gitignore
    description: View gitignore templates
  - name: interactions
    description: Owner or admin management of users interactions.
  - name: issues
    description: Interact with GitHub Issues.
  - name: licenses
    description: View various OSS licenses.
  - name: markdown
    description: Render GitHub flavored markdown
  - name: meta
    description: Endpoints that give information about the API.
  - name: migrations
    description: Move projects to or from GitHub.
  - name: oauth-authorizations
    description: Manage access of OAuth applications
  - name: orgs
    description: Interact with GitHub Orgs.
  - name: packages
    description: Manage packages for authenticated users and organizations.
  - name: projects
    description: Interact with GitHub Projects.
  - name: pulls
    description: Interact with GitHub Pull Requests.
  - name: rate-limit
    description: Check your current rate limit status
  - name: reactions
    description: Interact with reactions to various GitHub entities.
  - name: repos
    description: Interact with GitHub Repos.
  - name: scim
    description: Provisioning of GitHub organization membership for SCIM-enabled providers.
  - name: search
    description: Look for stuff on GitHub.
  - name: secret-scanning
    description: Retrieve secret scanning alerts from a repository.
  - name: server-statistics
    description: GHES statistics
  - name: teams
    description: Interact with GitHub Teams.
  - name: users
    description: Interact with and view information about users and also current user.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
info:
  version: 1.1.4
  title: GitHub v3 REST API - repo_migrations
  description: Move projects to or from GitHub.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
