components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
        - '1'
        - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
        - json
        - media
        - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you
        with API access, quota, and reports. Required unless you provide an OAuth
        2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications.
        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Instance:
      description: A server.
      properties:
        createTime:
          description: Output only. Create a time stamp.
          format: google-datetime
          readOnly: true
          type: string
        hyperthreadingEnabled:
          description: True if you enable hyperthreading for the server, otherwise
            false. The default value is false.
          type: boolean
        interactiveSerialConsoleEnabled:
          description: True if the interactive serial console feature is enabled for
            the instance, false otherwise. The default value is false.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        luns:
          description: List of LUNs associated with this server.
          items:
            $ref: '#/components/schemas/Lun'
          type: array
        machineType:
          description: The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
          type: string
        name:
          description: 'Output only. The resource name of this `Instance`. Resource
            names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
            Format: `projects/{project}/locations/{location}/instances/{instance}`'
          readOnly: true
          type: string
        networks:
          description: List of networks associated with this server.
          items:
            $ref: '#/components/schemas/Network'
          type: array
        state:
          description: The state of the server.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - RUNNING
          - DELETED
          type: string
        updateTime:
          description: Output only. Update a time stamp.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ListInstancesResponse:
      description: Response message for the list of servers.
      properties:
        instances:
          description: The list of servers.
          items:
            $ref: '#/components/schemas/Instance'
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListLunsResponse:
      description: Response message containing the list of storage volume luns.
      properties:
        luns:
          description: The list of luns.
          items:
            $ref: '#/components/schemas/Lun'
          type: array
        nextPageToken:
          description: A token identifying a page of results from the server.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city
            name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region":
            "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata. For example the available capacity
            at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations.
            For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    Lun:
      description: A storage volume logical unit number (LUN).
      properties:
        bootLun:
          description: Display if this LUN is a boot LUN.
          type: boolean
        multiprotocolType:
          description: The LUN multiprotocol type ensures the characteristics of the
            LUN are optimized for each operating system.
          enum:
          - MULTIPROTOCOL_TYPE_UNSPECIFIED
          - LINUX
          type: string
        name:
          description: Output only. The name of the LUN.
          readOnly: true
          type: string
        shareable:
          description: Display if this LUN can be shared between multiple physical
            servers.
          type: boolean
        sizeGb:
          description: The size of this LUN, in gigabytes.
          format: int64
          type: string
        state:
          description: The state of this storage volume.
          enum:
          - STATE_UNSPECIFIED
          - CREATING
          - UPDATING
          - READY
          - DELETING
          type: string
        storageType:
          description: The storage type for this LUN.
          enum:
          - STORAGE_TYPE_UNSPECIFIED
          - SSD
          - HDD
          type: string
        storageVolume:
          description: Display the storage volume for this LUN.
          type: string
        wwid:
          description: The WWID for this LUN.
          type: string
      type: object
    Network:
      description: A Network.
      properties:
        cidr:
          description: The cidr of the Network.
          type: string
        ipAddress:
          description: IP address configured.
          type: string
        macAddress:
          description: List of physical interfaces.
          items:
            type: string
          type: array
        name:
          description: 'Output only. The resource name of this `Network`. Resource
            names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
            Format: `projects/{project}/locations/{location}/networks/{network}` This
            field will contain the same value as field "network", which will soon
            be deprecated. Please use this field to reference the name of the network
            resource.'
          readOnly: true
          type: string
        network:
          description: Name of the network.
          type: string
        state:
          description: The Network state.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - PROVISIONED
          type: string
        type:
          description: The type of this network.
          enum:
          - TYPE_UNSPECIFIED
          - CLIENT
          - PRIVATE
          type: string
        vlanId:
          description: The vlan id of the Network.
          type: string
        vrf:
          $ref: '#/components/schemas/VRF'
          description: The vrf for the Network.
      type: object
    VRF:
      description: A network VRF.
      properties:
        autonomousSystemNumber:
          description: The autonomous system number of the VRF.
          type: string
        juniperAlias:
          description: The Juniper alias of the VRF.
          type: string
        name:
          description: The name of the VRF.
          type: string
        routeTarget:
          description: The route target of the VRF.
          format: int64
          type: string
        state:
          description: The possible state of VRF.
          enum:
          - STATE_UNSPECIFIED
          - PROVISIONING
          - PROVISIONED
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,
              and delete your Google Cloud data and see the email address for your
              Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,
              and delete your Google Cloud data and see the email address for your
              Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources: {}
externalDocs:
  url: https://cloud.google.com/bare-metal
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Provides ways to manage Bare Metal Solution hardware installed in a
    regional extension located near a Google Cloud data center.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Bare Metal Solution API
  version: v2
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://baremetalsolution.googleapis.com/$discovery/rest?version=v2
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: baremetalsolution
openapi: 3.0.0
paths:
  /v2/{name}:
    get:
      description: Get details of a single storage lun.
      operationId: baremetalsolution.projects.locations.volumes.luns.get
      parameters:
      - description: Required. Name of the resource.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lun'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: baremetalsolution.projects.locations.list
      parameters:
      - description: The resource that owns the locations collection, if applicable.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: A filter to narrow down results to a preferred subset. The filtering
          language accepts strings like "displayName=tokyo", and is documented in
          more detail in [AIP-160](https://google.aip.dev/160).
        in: query
        name: filter
        schema:
          type: string
      - description: The maximum number of results to return. If not set, the service
          selects a default.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: A page token received from the `next_page_token` field in the
          response. Send that page token to receive the subsequent page.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/{parent}/instances:
    get:
      description: List servers in a given project and location.
      operationId: baremetalsolution.projects.locations.instances.list
      parameters:
      - description: Required. Parent value for ListInstancesRequest.
        in: path
        name: parent
        required: true
        schema:
          type: string
      - description: Filtering results.
        in: query
        name: filter
        schema:
          type: string
      - description: Hint for how to order the results.
        in: query
        name: orderBy
        schema:
          type: string
      - description: Requested page size. Server may return fewer items than requested.
          If unspecified, the server will pick an appropriate default.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: A token identifying a page of results from the server.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/{parent}/luns:
    get:
      description: List storage volume luns for given storage volume.
      operationId: baremetalsolution.projects.locations.volumes.luns.list
      parameters:
      - description: Required. Parent value for ListLunsRequest.
        in: path
        name: parent
        required: true
        schema:
          type: string
      - description: Filtering results.
        in: query
        name: filter
        schema:
          type: string
      - description: Hint for how to order the results.
        in: query
        name: orderBy
        schema:
          type: string
      - description: Requested page size. The server might return fewer items than
          requested. If unspecified, server will pick an appropriate default.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: A token identifying a page of results from the server.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLunsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
servers:
- url: https://baremetalsolution.googleapis.com/
tags:
- name: projects
