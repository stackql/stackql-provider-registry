components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
        - '1'
        - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
        - json
        - media
        - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you
        with API access, quota, and reports. Required unless you provide an OAuth
        2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications.
        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudOrgpolicyV2Constraint:
      description: A `constraint` describes a way to restrict resource's configuration.
        For example, you could enforce a constraint that controls which cloud services
        can be activated across an organization, or whether a Compute Engine instance
        can have serial port connections established. `Constraints` can be configured
        by the organization's policy administrator to fit the needs of the organization
        by setting a `policy` that includes `constraints` at different locations in
        the organization's resource hierarchy. Policies are inherited down the resource
        hierarchy from higher levels, but can also be overridden. For details about
        the inheritance rules please read about `policies`. `Constraints` have a default
        behavior determined by the `constraint_default` field, which is the enforcement
        behavior that is used in the absence of a `policy` being defined or inherited
        for the resource in question.
      properties:
        booleanConstraint:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ConstraintBooleanConstraint'
          description: Defines this constraint as being a BooleanConstraint.
        constraintDefault:
          description: The evaluation behavior of this constraint in the absence of
            'Policy'.
          enum:
          - CONSTRAINT_DEFAULT_UNSPECIFIED
          - ALLOW
          - DENY
          type: string
        description:
          description: Detailed description of what this `Constraint` controls as
            well as how and where it is enforced. Mutable.
          type: string
        displayName:
          description: The human readable name. Mutable.
          type: string
        listConstraint:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ConstraintListConstraint'
          description: Defines this constraint as being a ListConstraint.
        name:
          description: 'Immutable. The resource name of the Constraint. Must be in
            one of the following forms: * `projects/{project_number}/constraints/{constraint_name}`
            * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}`
            For example, "/projects/123/constraints/compute.disableSerialPortAccess".'
          type: string
      type: object
    GoogleCloudOrgpolicyV2ConstraintBooleanConstraint:
      description: A `Constraint` that is either enforced or not. For example a constraint
        `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance,
        serial port connections will not be opened to that instance.
      properties: {}
      type: object
    GoogleCloudOrgpolicyV2ConstraintListConstraint:
      description: A `Constraint` that allows or disallows a list of string values,
        which are configured by an Organization's policy administrator with a `Policy`.
      properties:
        supportsIn:
          description: Indicates whether values grouped into categories can be used
            in `Policy.allowed_values` and `Policy.denied_values`. For example, `"in:Python"`
            would match any value in the 'Python' group.
          type: boolean
        supportsUnder:
          description: Indicates whether subtrees of Cloud Resource Manager resource
            hierarchy can be used in `Policy.allowed_values` and `Policy.denied_values`.
            For example, `"under:folders/123"` would match any resource under the
            'folders/123' folder.
          type: boolean
      type: object
    GoogleCloudOrgpolicyV2ListConstraintsResponse:
      description: The response returned from the ListConstraints method.
      properties:
        constraints:
          description: The collection of constraints that are available on the targeted
            resource.
          items:
            $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Constraint'
          type: array
        nextPageToken:
          description: Page token used to retrieve the next page. This is currently
            not used.
          type: string
      type: object
    GoogleCloudOrgpolicyV2ListPoliciesResponse:
      description: The response returned from the ListPolicies method. It will be
        empty if no `Policies` are set on the resource.
      properties:
        nextPageToken:
          description: Page token used to retrieve the next page. This is currently
            not used, but the server may at any point start supplying a valid token.
          type: string
        policies:
          description: All `Policies` that exist on the resource. It will be empty
            if no `Policies` are set.
          items:
            $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          type: array
      type: object
    GoogleCloudOrgpolicyV2Policy:
      description: Defines a Cloud Organization `Policy` which is used to specify
        `Constraints` for configurations of Cloud Platform resources.
      properties:
        name:
          description: 'Immutable. The resource name of the Policy. Must be one of
            the following forms, where constraint_name is the name of the constraint
            which this Policy configures: * `projects/{project_number}/policies/{constraint_name}`
            * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}`
            For example, "projects/123/policies/compute.disableSerialPortAccess".
            Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable
            name for API requests, but responses will return the name using the equivalent
            project number.'
          type: string
        spec:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpec'
          description: Basic information about the Organization Policy.
      type: object
    GoogleCloudOrgpolicyV2PolicySpec:
      description: Defines a Cloud Organization `PolicySpec` which is used to specify
        `Constraints` for configurations of Cloud Platform resources.
      properties:
        etag:
          description: An opaque tag indicating the current version of the `Policy`,
            used for concurrency control. This field is ignored if used in a `CreatePolicy`
            request. When the `Policy` is returned from either a `GetPolicy` or a
            `ListPolicies` request, this `etag` indicates the version of the current
            `Policy` to use when executing a read-modify-write loop. When the `Policy`
            is returned from a `GetEffectivePolicy` request, the `etag` will be unset.
          type: string
        inheritFromParent:
          description: Determines the inheritance behavior for this `Policy`. If `inherit_from_parent`
            is true, PolicyRules set higher up in the hierarchy (up to the closest
            root) are inherited and present in the effective policy. If it is false,
            then no rules are inherited, and this Policy becomes the new root for
            evaluation. This field can be set only for Policies which configure list
            constraints.
          type: boolean
        reset:
          description: Ignores policies set above this resource and restores the `constraint_default`
            enforcement behavior of the specific `Constraint` at this resource. This
            field can be set in policies for either list or boolean constraints. If
            set, `rules` must be empty and `inherit_from_parent` must be set to false.
          type: boolean
        rules:
          description: 'Up to 10 PolicyRules are allowed. In Policies for boolean
            constraints, the following requirements apply: - There must be one and
            only one PolicyRule where condition is unset. - BooleanPolicyRules with
            conditions must set `enforced` to the opposite of the PolicyRule without
            a condition. - During policy evaluation, PolicyRules with conditions that
            are true for a target resource take precedence.'
          items:
            $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpecPolicyRule'
          type: array
        updateTime:
          description: Output only. The time stamp this was previously updated. This
            represents the last time a call to `CreatePolicy` or `UpdatePolicy` was
            made for that `Policy`.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudOrgpolicyV2PolicySpecPolicyRule:
      description: A rule used to express this policy.
      properties:
        allowAll:
          description: Setting this to true means that all values are allowed. This
            field can be set only in Policies for list constraints.
          type: boolean
        condition:
          $ref: '#/components/schemas/GoogleTypeExpr'
          description: 'A condition which determines whether this rule is used in
            the evaluation of the policy. When set, the `expression` field in the
            `Expr'' must include from 1 to 10 subexpressions, joined by the "||" or
            "&&" operators. Each subexpression must be of the form "resource.matchTag(''/tag_key_short_name,
            ''tag_value_short_name'')". or "resource.matchTagId(''tagKeys/key_id'',
            ''tagValues/value_id'')". where key_name and value_name are the resource
            names for Label Keys and Values. These names are available from the Tag
            Manager Service. An example expression is: "resource.matchTag(''123456789/environment,
            ''prod'')". or "resource.matchTagId(''tagKeys/123'', ''tagValues/456'')".'
        denyAll:
          description: Setting this to true means that all values are denied. This
            field can be set only in Policies for list constraints.
          type: boolean
        enforce:
          description: If `true`, then the `Policy` is enforced. If `false`, then
            any configuration is acceptable. This field can be set only in Policies
            for boolean constraints.
          type: boolean
        values:
          $ref: '#/components/schemas/GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues'
          description: List of values to be used for this PolicyRule. This field can
            be set only in Policies for list constraints.
      type: object
    GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues:
      description: 'A message that holds specific allowed and denied values. This
        message can define specific values and subtrees of Cloud Resource Manager
        resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed
        or denied. This is achieved by using the `under:` and optional `is:` prefixes.
        The `under:` prefix is used to denote resource subtree values. The `is:` prefix
        is used to denote specific values, and is required only if the value contains
        a ":". Values prefixed with "is:" are treated the same as values with no prefix.
        Ancestry subtrees must be in one of the following formats: - "projects/",
        e.g. "projects/tokyo-rain-123" - "folders/", e.g. "folders/1234" - "organizations/",
        e.g. "organizations/1234" The `supports_under` field of the associated `Constraint`
        defines whether ancestry prefixes can be used.'
      properties:
        allowedValues:
          description: List of values allowed at this resource.
          items:
            type: string
          type: array
        deniedValues:
          description: List of values denied at this resource.
          items:
            type: string
          type: array
      type: object
    GoogleProtobufEmpty:
      description: 'A generic empty message that you can re-use to avoid defining
        duplicated empty messages in your APIs. A typical example is to use it as
        the request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON
        representation for `Empty` is empty JSON object `{}`.'
      properties: {}
      type: object
    GoogleTypeExpr:
      description: 'Represents a textual expression in the Common Expression Language
        (CEL) syntax. CEL is a C-like expression language. The syntax and semantics
        of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):
        title: "Summary size limit" description: "Determines if a summary is less
        than 100 chars" expression: "document.summary.size() < 100" Example (Equality):
        title: "Requestor is owner" description: "Determines if requestor is the document
        owner" expression: "document.owner == request.auth.claims.email" Example (Logic):
        title: "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != ''private'' && document.type
        != ''internal''" Example (Data Manipulation): title: "Notification string"
        description: "Create a notification string with a timestamp." expression:
        "''New message received at '' + string(document.create_time)" The exact variables
        and functions that may be referenced within an expression are determined by
        the service that evaluates it. See the service documentation for additional
        information.'
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text
            which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression
            for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,
              and delete your Google Cloud data and see the email address for your
              Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,
              and delete your Google Cloud data and see the email address for your
              Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources:
    folders.constraints:
      id: google.orgpolicy.folders.constraints
      methods:
        list:
          operation:
            $ref: get
          path:
            $ref: /v2/folders/{foldersId}/constraints
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: folders.constraints
      title: folders.constraints
    folders.policies:
      id: google.orgpolicy.folders.policies
      methods:
        create:
          operation:
            $ref: post
          path:
            $ref: /v2/folders/{foldersId}/policies
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: delete
          path:
            $ref: /v2/folders/{foldersId}/policies/{policiesId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: get
          path:
            $ref: /v2/folders/{foldersId}/policies/{policiesId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getEffectivePolicy:
          operation:
            $ref: get
          path:
            $ref: /v2/folders/{foldersId}/policies/{policiesId}:getEffectivePolicy
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: get
          path:
            $ref: /v2/folders/{foldersId}/policies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: patch
          path:
            $ref: /v2/folders/{foldersId}/policies/{policiesId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: folders.policies
      title: folders.policies
    organizations.constraints:
      id: google.orgpolicy.organizations.constraints
      methods:
        list:
          operation:
            $ref: get
          path:
            $ref: /v2/organizations/{organizationsId}/constraints
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: organizations.constraints
      title: organizations.constraints
    organizations.customConstraints:
      id: google.orgpolicy.organizations.customConstraints
      methods:
        patch:
          operation:
            $ref: patch
          path:
            $ref: /v2/organizations/{organizationsId}/customConstraints/{customConstraintsId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: organizations.customConstraints
      title: organizations.customConstraints
    organizations.policies:
      id: google.orgpolicy.organizations.policies
      methods:
        create:
          operation:
            $ref: post
          path:
            $ref: /v2/organizations/{organizationsId}/policies
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: delete
          path:
            $ref: /v2/organizations/{organizationsId}/policies/{policiesId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: get
          path:
            $ref: /v2/organizations/{organizationsId}/policies/{policiesId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getEffectivePolicy:
          operation:
            $ref: get
          path:
            $ref: /v2/organizations/{organizationsId}/policies/{policiesId}:getEffectivePolicy
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: get
          path:
            $ref: /v2/organizations/{organizationsId}/policies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: patch
          path:
            $ref: /v2/organizations/{organizationsId}/policies/{policiesId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: organizations.policies
      title: organizations.policies
    projects.constraints:
      id: google.orgpolicy.projects.constraints
      methods:
        list:
          operation:
            $ref: get
          path:
            $ref: /v2/projects/{projectsId}/constraints
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: projects.constraints
      title: projects.constraints
    projects.policies:
      id: google.orgpolicy.projects.policies
      methods:
        create:
          operation:
            $ref: post
          path:
            $ref: /v2/projects/{projectsId}/policies
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: delete
          path:
            $ref: /v2/projects/{projectsId}/policies/{policiesId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: get
          path:
            $ref: /v2/projects/{projectsId}/policies/{policiesId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        getEffectivePolicy:
          operation:
            $ref: get
          path:
            $ref: /v2/projects/{projectsId}/policies/{policiesId}:getEffectivePolicy
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: get
          path:
            $ref: /v2/projects/{projectsId}/policies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: patch
          path:
            $ref: /v2/projects/{projectsId}/policies/{policiesId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: projects.policies
      title: projects.policies
externalDocs:
  url: https://cloud.google.com/orgpolicy/docs/reference/rest/index.html
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Org Policy API allows users to configure governance ruleson their
    GCP resources across the Cloud Resource Hierarchy.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Organization Policy API
  version: v2
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://orgpolicy.googleapis.com/$discovery/rest?version=v2
    version: v1
  x-providerName: googleapis.com
  x-serviceName: orgpolicy
openapi: 3.0.0
paths:
  /v2/folders/{foldersId}/constraints:
    get:
      description: Lists `Constraints` that could be applied on the specified resource.
      operationId: orgpolicy.projects.constraints.list
      parameters:
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      - in: path
        name: foldersId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListConstraintsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/folders/{foldersId}/policies:
    get:
      description: Retrieves all of the `Policies` that exist on a particular resource.
      operationId: orgpolicy.projects.policies.list
      parameters:
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      - in: path
        name: foldersId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListPoliciesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    post:
      description: Creates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS`
        if the policy already exists on the given Cloud resource.
      operationId: orgpolicy.projects.policies.create
      parameters:
      - in: path
        name: foldersId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/folders/{foldersId}/policies/{policiesId}:
    delete:
      description: Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or Org Policy does not exist.
      operationId: orgpolicy.projects.policies.delete
      parameters:
      - in: path
        name: foldersId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    get:
      description: Gets a `Policy` on a resource. If no `Policy` is set on the resource,
        NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()`
        to update a `Policy` during read-modify-write.
      operationId: orgpolicy.projects.policies.get
      parameters:
      - in: path
        name: foldersId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    patch:
      description: 'Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or the policy do not exist. Returns a `google.rpc.Status`
        with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the policy Note: the supplied policy will perform
        a full overwrite of all fields.'
      operationId: orgpolicy.projects.policies.patch
      parameters:
      - in: path
        name: foldersId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/folders/{foldersId}/policies/{policiesId}:getEffectivePolicy:
    get:
      description: Gets the effective `Policy` on a resource. This is the result of
        merging `Policies` in the resource hierarchy and evaluating conditions. The
        returned `Policy` will not have an `etag` or `condition` set because it is
        a computed `Policy` across multiple resources. Subtrees of Resource Manager
        resource hierarchy with 'under:' prefix will not be expanded.
      operationId: orgpolicy.projects.policies.getEffectivePolicy
      parameters:
      - in: path
        name: foldersId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/organizations/{organizationsId}/constraints:
    get:
      description: Lists `Constraints` that could be applied on the specified resource.
      operationId: orgpolicy.projects.constraints.list
      parameters:
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListConstraintsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/organizations/{organizationsId}/customConstraints/{customConstraintsId}:
    delete:
      description: Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or Org Policy does not exist.
      operationId: orgpolicy.projects.policies.delete
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      - in: path
        name: customConstraintsId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    get:
      description: Gets a `Policy` on a resource. If no `Policy` is set on the resource,
        NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()`
        to update a `Policy` during read-modify-write.
      operationId: orgpolicy.projects.policies.get
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      - in: path
        name: customConstraintsId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    patch:
      description: 'Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or the policy do not exist. Returns a `google.rpc.Status`
        with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the policy Note: the supplied policy will perform
        a full overwrite of all fields.'
      operationId: orgpolicy.projects.policies.patch
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      - in: path
        name: customConstraintsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/organizations/{organizationsId}/policies:
    get:
      description: Retrieves all of the `Policies` that exist on a particular resource.
      operationId: orgpolicy.projects.policies.list
      parameters:
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListPoliciesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    post:
      description: Creates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS`
        if the policy already exists on the given Cloud resource.
      operationId: orgpolicy.projects.policies.create
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/organizations/{organizationsId}/policies/{policiesId}:
    delete:
      description: Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or Org Policy does not exist.
      operationId: orgpolicy.projects.policies.delete
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    get:
      description: Gets a `Policy` on a resource. If no `Policy` is set on the resource,
        NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()`
        to update a `Policy` during read-modify-write.
      operationId: orgpolicy.projects.policies.get
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    patch:
      description: 'Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or the policy do not exist. Returns a `google.rpc.Status`
        with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the policy Note: the supplied policy will perform
        a full overwrite of all fields.'
      operationId: orgpolicy.projects.policies.patch
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/organizations/{organizationsId}/policies/{policiesId}:getEffectivePolicy:
    get:
      description: Gets the effective `Policy` on a resource. This is the result of
        merging `Policies` in the resource hierarchy and evaluating conditions. The
        returned `Policy` will not have an `etag` or `condition` set because it is
        a computed `Policy` across multiple resources. Subtrees of Resource Manager
        resource hierarchy with 'under:' prefix will not be expanded.
      operationId: orgpolicy.projects.policies.getEffectivePolicy
      parameters:
      - in: path
        name: organizationsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/projects/{projectsId}/constraints:
    get:
      description: Lists `Constraints` that could be applied on the specified resource.
      operationId: orgpolicy.projects.constraints.list
      parameters:
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      - in: path
        name: projectsId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListConstraintsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/projects/{projectsId}/policies:
    get:
      description: Retrieves all of the `Policies` that exist on a particular resource.
      operationId: orgpolicy.projects.policies.list
      parameters:
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      - in: path
        name: projectsId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListPoliciesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    post:
      description: Creates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS`
        if the policy already exists on the given Cloud resource.
      operationId: orgpolicy.projects.policies.create
      parameters:
      - in: path
        name: projectsId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/projects/{projectsId}/policies/{policiesId}:
    delete:
      description: Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or Org Policy does not exist.
      operationId: orgpolicy.projects.policies.delete
      parameters:
      - in: path
        name: projectsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    get:
      description: Gets a `Policy` on a resource. If no `Policy` is set on the resource,
        NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()`
        to update a `Policy` during read-modify-write.
      operationId: orgpolicy.projects.policies.get
      parameters:
      - in: path
        name: projectsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    patch:
      description: 'Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or the policy do not exist. Returns a `google.rpc.Status`
        with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the policy Note: the supplied policy will perform
        a full overwrite of all fields.'
      operationId: orgpolicy.projects.policies.patch
      parameters:
      - in: path
        name: projectsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/projects/{projectsId}/policies/{policiesId}:getEffectivePolicy:
    get:
      description: Gets the effective `Policy` on a resource. This is the result of
        merging `Policies` in the resource hierarchy and evaluating conditions. The
        returned `Policy` will not have an `etag` or `condition` set because it is
        a computed `Policy` across multiple resources. Subtrees of Resource Manager
        resource hierarchy with 'under:' prefix will not be expanded.
      operationId: orgpolicy.projects.policies.getEffectivePolicy
      parameters:
      - in: path
        name: projectsId
        required: true
        schema:
          type: string
      - in: path
        name: policiesId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/{name}:
    delete:
      description: Deletes a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or Org Policy does not exist.
      operationId: orgpolicy.projects.policies.delete
      parameters:
      - description: Required. Name of the policy to delete. See `Policy` for naming
          rules.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    get:
      description: Gets a `Policy` on a resource. If no `Policy` is set on the resource,
        NOT_FOUND is returned. The `etag` value can be used with `UpdatePolicy()`
        to update a `Policy` during read-modify-write.
      operationId: orgpolicy.projects.policies.get
      parameters:
      - description: Required. Resource name of the policy. See `Policy` for naming
          requirements.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    patch:
      description: 'Updates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint or the policy do not exist. Returns a `google.rpc.Status`
        with `google.rpc.Code.ABORTED` if the etag supplied in the request does not
        match the persisted etag of the policy Note: the supplied policy will perform
        a full overwrite of all fields.'
      operationId: orgpolicy.projects.policies.patch
      parameters:
      - description: 'Immutable. The resource name of the Policy. Must be one of the
          following forms, where constraint_name is the name of the constraint which
          this Policy configures: * `projects/{project_number}/policies/{constraint_name}`
          * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}`
          For example, "projects/123/policies/compute.disableSerialPortAccess". Note:
          `projects/{project_id}/policies/{constraint_name}` is also an acceptable
          name for API requests, but responses will return the name using the equivalent
          project number.'
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
  /v2/{name}:getEffectivePolicy:
    get:
      description: Gets the effective `Policy` on a resource. This is the result of
        merging `Policies` in the resource hierarchy and evaluating conditions. The
        returned `Policy` will not have an `etag` or `condition` set because it is
        a computed `Policy` across multiple resources. Subtrees of Resource Manager
        resource hierarchy with 'under:' prefix will not be expanded.
      operationId: orgpolicy.projects.policies.getEffectivePolicy
      parameters:
      - description: Required. The effective policy to compute. See `Policy` for naming
          rules.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/{parent}/constraints:
    get:
      description: Lists `Constraints` that could be applied on the specified resource.
      operationId: orgpolicy.projects.constraints.list
      parameters:
      - description: 'Required. The Cloud resource that parents the constraint. Must
          be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}`
          * `folders/{folder_id}` * `organizations/{organization_id}`'
        in: path
        name: parent
        required: true
        schema:
          type: string
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListConstraintsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
  /v2/{parent}/policies:
    get:
      description: Retrieves all of the `Policies` that exist on a particular resource.
      operationId: orgpolicy.projects.policies.list
      parameters:
      - description: 'Required. The target Cloud resource that parents the set of
          constraints and policies that will be returned from this call. Must be in
          one of the following forms: * `projects/{project_number}` * `projects/{project_id}`
          * `folders/{folder_id}` * `organizations/{organization_id}`'
        in: path
        name: parent
        required: true
        schema:
          type: string
      - description: Size of the pages to be returned. This is currently unsupported
          and will be ignored. The server may at any point start using this field
          to limit page size.
        in: query
        name: pageSize
        schema:
          type: integer
      - description: Page token used to retrieve the next page. This is currently
          unsupported and will be ignored. The server may at any point start using
          this field.
        in: query
        name: pageToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2ListPoliciesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
    parameters:
    - $ref: '#/components/parameters/_.xgafv'
    - $ref: '#/components/parameters/access_token'
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/callback'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/upload_protocol'
    - $ref: '#/components/parameters/uploadType'
    post:
      description: Creates a Policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND`
        if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS`
        if the policy already exists on the given Cloud resource.
      operationId: orgpolicy.projects.policies.create
      parameters:
      - description: 'Required. The Cloud resource that will parent the new Policy.
          Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}`
          * `folders/{folder_id}` * `organizations/{organization_id}`'
        in: path
        name: parent
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudOrgpolicyV2Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
servers:
- url: https://orgpolicy.googleapis.com/
tags:
- name: folders
- name: organizations
- name: projects
