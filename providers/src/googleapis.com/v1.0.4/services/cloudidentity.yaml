components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    CheckTransitiveMembershipResponse:
      description: The response message for MembershipsService.CheckTransitiveMembership.
      id: CheckTransitiveMembershipResponse
      properties:
        hasMembership:
          description: Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths.
          type: boolean
      type: object
    CreateGroupMetadata:
      description: Metadata for CreateGroup LRO.
      id: CreateGroupMetadata
      properties: {}
      type: object
    CreateMembershipMetadata:
      description: Metadata for CreateMembership LRO.
      id: CreateMembershipMetadata
      properties: {}
      type: object
    DeleteGroupMetadata:
      description: Metadata for DeleteGroup LRO.
      id: DeleteGroupMetadata
      properties: {}
      type: object
    DeleteMembershipMetadata:
      description: Metadata for DeleteMembership LRO.
      id: DeleteMembershipMetadata
      properties: {}
      type: object
    DynamicGroupMetadata:
      description: Dynamic group metadata like queries and status.
      id: DynamicGroupMetadata
      properties:
        queries:
          description: Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups.
          items:
            $ref: '#/components/schemas/DynamicGroupQuery'
          type: array
        status:
          $ref: '#/components/schemas/DynamicGroupStatus'
          description: Output only. Status of the dynamic group.
          readOnly: true
      type: object
    DynamicGroupQuery:
      description: Defines a query on a resource.
      id: DynamicGroupQuery
      properties:
        query:
          description: 'Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department==''engineering'')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area==''foo'' && loc.building_id==''bar'')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase(''jOhn DoE'')`'
          type: string
        resourceType:
          description: Resource type for the Dynamic Group Query
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - USER
          enumDescriptions:
            - Default value (not valid)
            - For queries on User
          type: string
      type: object
    DynamicGroupStatus:
      description: The current status of a dynamic group along with timestamp.
      id: DynamicGroupStatus
      properties:
        status:
          description: Status of the dynamic group.
          enum:
            - STATUS_UNSPECIFIED
            - UP_TO_DATE
            - UPDATING_MEMBERSHIPS
            - INVALID_QUERY
          enumDescriptions:
            - Default.
            - The dynamic group is up-to-date.
            - The dynamic group has just been created and memberships are being updated.
            - Group is in an unrecoverable state and its memberships can't be updated.
          type: string
        statusTime:
          description: The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
          format: google-datetime
          type: string
      type: object
    EntityKey:
      description: A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
      id: EntityKey
      properties:
        id:
          description: The ID of the entity. For Google-managed entities, the `id` should be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
          type: string
        namespace:
          description: The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source}`.
          type: string
      type: object
    ExpiryDetail:
      description: The `MembershipRole` expiry details.
      id: ExpiryDetail
      properties:
        expireTime:
          description: The time at which the `MembershipRole` will expire.
          format: google-datetime
          type: string
      type: object
    GetMembershipGraphMetadata:
      description: Metadata of GetMembershipGraphResponse LRO. This is currently empty to permit future extensibility.
      id: GetMembershipGraphMetadata
      properties: {}
      type: object
    GetMembershipGraphResponse:
      description: The response message for MembershipsService.GetMembershipGraph.
      id: GetMembershipGraphResponse
      properties:
        adjacencyList:
          description: The membership graph's path information represented as an adjacency list.
          items:
            $ref: '#/components/schemas/MembershipAdjacencyList'
          type: array
        groups:
          description: The resources representing each group in the adjacency list. Each group in this list can be correlated to a 'group' of the MembershipAdjacencyList using the 'name' of the Group resource.
          items:
            $ref: '#/components/schemas/Group'
          type: array
      type: object
    GoogleAppsCloudidentityDevicesV1AndroidAttributes:
      description: Resource representing the Android specific attributes of a Device.
      id: GoogleAppsCloudidentityDevicesV1AndroidAttributes
      properties:
        enabledUnknownSources:
          description: Whether applications from unknown sources can be installed on device.
          type: boolean
        ownerProfileAccount:
          description: Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
          type: boolean
        ownershipPrivilege:
          description: Ownership privileges on device.
          enum:
            - OWNERSHIP_PRIVILEGE_UNSPECIFIED
            - DEVICE_ADMINISTRATOR
            - PROFILE_OWNER
            - DEVICE_OWNER
          enumDescriptions:
            - Ownership privilege is not set.
            - Active device administrator privileges on the device.
            - Profile Owner privileges. The account is in a managed corporate profile.
            - Device Owner privileges on the device.
          type: string
        supportsWorkProfile:
          description: Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
          type: boolean
      type: object
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata:
      description: Metadata for ApproveDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest:
      description: Request message for approving the device to access user data.
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse:
      description: Response message for approving the device to access user data.
      id: GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse
      properties:
        deviceUser:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Resultant DeviceUser object for the action.
      type: object
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata:
      description: Metadata for BlockDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest:
      description: Request message for blocking account on device.
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse:
      description: Response message for blocking the device from accessing user data.
      id: GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse
      properties:
        deviceUser:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Resultant DeviceUser object for the action.
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata:
      description: Metadata for CancelWipeDevice LRO.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest:
      description: Request message for cancelling an unfinished device wipe.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse:
      description: Response message for cancelling an unfinished device wipe.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse
      properties:
        device:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
          description: Resultant Device object for the action. Note that asset tags will not be returned in the device object.
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata:
      description: Metadata for CancelWipeDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest:
      description: Request message for cancelling an unfinished user account wipe.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse:
      description: Response message for cancelling an unfinished user account wipe.
      id: GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse
      properties:
        deviceUser:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Resultant DeviceUser object for the action.
      type: object
    GoogleAppsCloudidentityDevicesV1ClientState:
      description: Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users
      id: GoogleAppsCloudidentityDevicesV1ClientState
      properties:
        assetTags:
          description: The caller can specify asset tags for this resource
          items:
            type: string
          type: array
        complianceState:
          description: The compliance state of the resource as specified by the API client.
          enum:
            - COMPLIANCE_STATE_UNSPECIFIED
            - COMPLIANT
            - NON_COMPLIANT
          enumDescriptions:
            - The compliance state of the resource is unknown or unspecified.
            - Device is compliant with third party policies
            - Device is not compliant with third party policies
          type: string
        createTime:
          description: Output only. The time the client state data was created.
          format: google-datetime
          readOnly: true
          type: string
        customId:
          description: This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.
          type: string
        etag:
          description: The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest
          type: string
        healthScore:
          description: The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.
          enum:
            - HEALTH_SCORE_UNSPECIFIED
            - VERY_POOR
            - POOR
            - NEUTRAL
            - GOOD
            - VERY_GOOD
          enumDescriptions:
            - Default value
            - The object is in very poor health as defined by the caller.
            - The object is in poor health as defined by the caller.
            - The object health is neither good nor poor, as defined by the caller.
            - The object is in good health as defined by the caller.
            - The object is in very good health as defined by the caller.
          type: string
        keyValuePairs:
          additionalProperties:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1CustomAttributeValue'
          description: The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.
          type: object
        lastUpdateTime:
          description: Output only. The time the client state data was last updated.
          format: google-datetime
          readOnly: true
          type: string
        managed:
          description: The management state of the resource as specified by the API client.
          enum:
            - MANAGED_STATE_UNSPECIFIED
            - MANAGED
            - UNMANAGED
          enumDescriptions:
            - The management state of the resource is unknown or unspecified.
            - The resource is managed.
            - The resource is not managed.
          type: string
        name:
          description: 'Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`, where partner corresponds to the partner storing the data. For partners belonging to the "BeyondCorp Alliance", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer}-suffix`, where `customer` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization''s customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter ''C''. The customer ID to be used in this API is the string after the letter ''C'' (not including ''C'')'
          readOnly: true
          type: string
        ownerType:
          description: Output only. The owner of the ClientState
          enum:
            - OWNER_TYPE_UNSPECIFIED
            - OWNER_TYPE_CUSTOMER
            - OWNER_TYPE_PARTNER
          enumDescriptions:
            - Unknown owner type
            - Customer is the owner
            - Partner is the owner
          readOnly: true
          type: string
        scoreReason:
          description: A descriptive cause of the health score.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata:
      description: Metadata for CreateDevice LRO.
      id: GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1CustomAttributeValue:
      description: Additional custom attribute values may be one of these types
      id: GoogleAppsCloudidentityDevicesV1CustomAttributeValue
      properties:
        boolValue:
          description: Represents a boolean value.
          type: boolean
        numberValue:
          description: Represents a double value.
          format: double
          type: number
        stringValue:
          description: Represents a string value.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata:
      description: Metadata for DeleteDevice LRO.
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata:
      description: Metadata for DeleteDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1Device:
      description: ' A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.'
      id: GoogleAppsCloudidentityDevicesV1Device
      properties:
        androidSpecificAttributes:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1AndroidAttributes'
          description: Output only. Attributes specific to Android devices.
          readOnly: true
        assetTag:
          description: Asset tag of the device.
          type: string
        basebandVersion:
          description: Output only. Baseband version of the device.
          readOnly: true
          type: string
        bootloaderVersion:
          description: 'Output only. Device bootloader version. Example: 0.6.7.'
          readOnly: true
          type: string
        brand:
          description: 'Output only. Device brand. Example: Samsung.'
          readOnly: true
          type: string
        buildNumber:
          description: Output only. Build number of the device.
          readOnly: true
          type: string
        compromisedState:
          description: Output only. Represents whether the Device is compromised.
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - UNCOMPROMISED
          enumDescriptions:
            - Default value.
            - The device is compromised (currently, this means Android device is rooted).
            - The device is safe (currently, this means Android device is unrooted).
          readOnly: true
          type: string
        createTime:
          description: Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
          format: google-datetime
          readOnly: true
          type: string
        deviceId:
          description: Unique identifier for the device.
          type: string
        deviceType:
          description: Output only. Type of device.
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - ANDROID
            - IOS
            - GOOGLE_SYNC
            - WINDOWS
            - MAC_OS
            - LINUX
            - CHROME_OS
          enumDescriptions:
            - Unknown device type
            - Device is an Android device
            - Device is an iOS device
            - Device is a Google Sync device.
            - Device is a Windows device.
            - Device is a MacOS device.
            - Device is a Linux device.
            - Device is a ChromeOS device.
          readOnly: true
          type: string
        enabledDeveloperOptions:
          description: Output only. Whether developer options is enabled on device.
          readOnly: true
          type: boolean
        enabledUsbDebugging:
          description: Output only. Whether USB debugging is enabled on device.
          readOnly: true
          type: boolean
        encryptionState:
          description: Output only. Device encryption state.
          enum:
            - ENCRYPTION_STATE_UNSPECIFIED
            - UNSUPPORTED_BY_DEVICE
            - ENCRYPTED
            - NOT_ENCRYPTED
          enumDescriptions:
            - Encryption Status is not set.
            - Device doesn't support encryption.
            - Device is encrypted.
            - Device is not encrypted.
          readOnly: true
          type: string
        imei:
          description: Output only. IMEI number of device if GSM device; empty otherwise.
          readOnly: true
          type: string
        kernelVersion:
          description: Output only. Kernel version of the device.
          readOnly: true
          type: string
        lastSyncTime:
          description: Most recent time when device synced with this service.
          format: google-datetime
          type: string
        managementState:
          description: Output only. Management state of the device
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - APPROVED
            - BLOCKED
            - PENDING
            - UNPROVISIONED
            - WIPING
            - WIPED
          enumDescriptions:
            - Default value. This value is unused.
            - Device is approved.
            - Device is blocked.
            - Device is pending approval.
            - The device is not provisioned. Device will start from this state until some action is taken (i.e. a user starts using the device).
            - Data and settings on the device are being removed.
            - All data and settings on the device are removed.
          readOnly: true
          type: string
        manufacturer:
          description: 'Output only. Device manufacturer. Example: Motorola.'
          readOnly: true
          type: string
        meid:
          description: Output only. MEID number of device if CDMA device; empty otherwise.
          readOnly: true
          type: string
        model:
          description: 'Output only. Model name of device. Example: Pixel 3.'
          readOnly: true
          type: string
        name:
          description: 'Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device}`, where device is the unique id assigned to the Device.'
          readOnly: true
          type: string
        networkOperator:
          description: Output only. Mobile or network operator of device, if available.
          readOnly: true
          type: string
        osVersion:
          description: 'Output only. OS version of the device. Example: Android 8.1.0.'
          readOnly: true
          type: string
        otherAccounts:
          description: 'Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account''s domain has only one account. Examples: "com.example", "xyz.com".'
          items:
            type: string
          readOnly: true
          type: array
        ownerType:
          description: Output only. Whether the device is owned by the company or an individual
          enum:
            - DEVICE_OWNERSHIP_UNSPECIFIED
            - COMPANY
            - BYOD
          enumDescriptions:
            - Default value. The value is unused.
            - Company owns the device.
            - Bring Your Own Device (i.e. individual owns the device)
          readOnly: true
          type: string
        releaseVersion:
          description: 'Output only. OS release version. Example: 6.0.'
          readOnly: true
          type: string
        securityPatchTime:
          description: Output only. OS security patch update time on device.
          format: google-datetime
          readOnly: true
          type: string
        serialNumber:
          description: 'Serial Number of device. Example: HT82V1A01076.'
          type: string
        wifiMacAddresses:
          description: WiFi MAC addresses of device.
          items:
            type: string
          type: array
      type: object
    GoogleAppsCloudidentityDevicesV1DeviceUser:
      description: Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
      id: GoogleAppsCloudidentityDevicesV1DeviceUser
      properties:
        compromisedState:
          description: Compromised State of the DeviceUser object
          enum:
            - COMPROMISED_STATE_UNSPECIFIED
            - COMPROMISED
            - NOT_COMPROMISED
          enumDescriptions:
            - Compromised state of Device User account is unknown or unspecified.
            - Device User Account is compromised.
            - Device User Account is not compromised.
          type: string
        createTime:
          description: When the user first signed in to the device
          format: google-datetime
          type: string
        firstSyncTime:
          description: Output only. Most recent time when user registered with this service.
          format: google-datetime
          readOnly: true
          type: string
        languageCode:
          description: Output only. Default locale used on device, in IETF BCP-47 format.
          readOnly: true
          type: string
        lastSyncTime:
          description: Output only. Last time when user synced with policies.
          format: google-datetime
          readOnly: true
          type: string
        managementState:
          description: Output only. Management state of the user on the device.
          enum:
            - MANAGEMENT_STATE_UNSPECIFIED
            - WIPING
            - WIPED
            - APPROVED
            - BLOCKED
            - PENDING_APPROVAL
            - UNENROLLED
          enumDescriptions:
            - Default value. This value is unused.
            - This user's data and profile is being removed from the device.
            - This user's data and profile is removed from the device.
            - User is approved to access data on the device.
            - User is blocked from accessing data on the device.
            - User is awaiting approval.
            - User is unenrolled from Advanced Windows Management, but the Windows account is still intact.
          readOnly: true
          type: string
        name:
          description: 'Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device}/deviceUsers/{device_user}`, where `device_user` uniquely identifies a user''s use of a device.'
          readOnly: true
          type: string
        passwordState:
          description: Password state of the DeviceUser object
          enum:
            - PASSWORD_STATE_UNSPECIFIED
            - PASSWORD_SET
            - PASSWORD_NOT_SET
          enumDescriptions:
            - Password state not set.
            - Password set in object.
            - Password not set in object.
          type: string
        userAgent:
          description: Output only. User agent on the device for this specific user
          readOnly: true
          type: string
        userEmail:
          description: Email address of the user registered on the device.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1ListClientStatesResponse:
      description: Response message that is returned in ListClientStates.
      id: GoogleAppsCloudidentityDevicesV1ListClientStatesResponse
      properties:
        clientStates:
          description: Client states meeting the list restrictions.
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. Empty if there are no more results.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse:
      description: Response message that is returned from the ListDeviceUsers method.
      id: GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse
      properties:
        deviceUsers:
          description: Devices meeting the list restrictions.
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. Empty if there are no more results.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1ListDevicesResponse:
      description: Response message that is returned from the ListDevices method.
      id: GoogleAppsCloudidentityDevicesV1ListDevicesResponse
      properties:
        devices:
          description: Devices meeting the list restrictions.
          items:
            $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. Empty if there are no more results.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata:
      description: Metadata for ListEndpointApps LRO.
      id: GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse:
      description: Response containing resource names of the DeviceUsers associated with the caller's credentials.
      id: GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse
      properties:
        customer:
          description: The obfuscated customer Id that may be passed back to other Devices API methods such as List, Get, etc.
          type: string
        names:
          description: '[Resource names](https://cloud.google.com/apis/design/resource_names) of the DeviceUsers in the format: `devices/{device}/deviceUsers/{user_resource}`, where device is the unique ID assigned to a Device and user_resource is the unique user ID'
          items:
            type: string
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. Empty if there are no more results.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata:
      description: Metadata for SignoutDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata:
      description: Metadata for UpdateClientState LRO.
      id: GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata:
      description: Metadata for UpdateDevice LRO.
      id: GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata:
      description: Metadata for WipeDevice LRO.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1WipeDeviceRequest:
      description: Request message for wiping all data on the device.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceRequest
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
        removeResetLock:
          description: Optional. Specifies if a user is able to factory reset a device after a Device Wipe. On iOS, this is called "Activation Lock", while on Android, this is known as "Factory Reset Protection". If true, this protection will be removed from the device, so that a user can successfully factory reset. If false, the setting is untouched on the device.
          type: boolean
      type: object
    GoogleAppsCloudidentityDevicesV1WipeDeviceResponse:
      description: Response message for wiping all data on the device.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceResponse
      properties:
        device:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
          description: Resultant Device object for the action. Note that asset tags will not be returned in the device object.
      type: object
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata:
      description: Metadata for WipeDeviceUser LRO.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata
      properties: {}
      type: object
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest:
      description: Request message for starting an account wipe on device.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest
      properties:
        customer:
          description: Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer}`, where customer is the customer to whom the device belongs.
          type: string
      type: object
    GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse:
      description: Response message for wiping the user's account from the device.
      id: GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse
      properties:
        deviceUser:
          $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Resultant DeviceUser object for the action.
      type: object
    Group:
      description: A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account.
      id: Group
      properties:
        createTime:
          description: Output only. The time when the `Group` was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters.
          type: string
        displayName:
          description: The display name of the `Group`.
          type: string
        dynamicGroupMetadata:
          $ref: '#/components/schemas/DynamicGroupMetadata'
          description: Optional. Dynamic group metadata like queries and status.
        groupKey:
          $ref: '#/components/schemas/EntityKey'
          description: Required. The `EntityKey` of the `Group`.
        labels:
          additionalProperties:
            type: string
          description: Required. One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value.
          type: object
        name:
          description: Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group}`.
          readOnly: true
          type: string
        parent:
          description: Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source}` for external- identity-mapped groups or `customers/{customer}` for Google Groups. The `customer` must begin with "C" (for example, 'C046psxkn').
          type: string
        updateTime:
          description: Output only. The time when the `Group` was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GroupRelation:
      description: Message representing a transitive group of a user or a group.
      id: GroupRelation
      properties:
        displayName:
          description: Display name for this group.
          type: string
        group:
          description: Resource name for this group.
          type: string
        groupKey:
          $ref: '#/components/schemas/EntityKey'
          description: Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
        labels:
          additionalProperties:
            type: string
          description: Labels for Group resource.
          type: object
        relationType:
          description: The relation between the member and the transitive group.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - The two entities have both a direct and an indirect membership with each other.
          type: string
        roles:
          description: Membership roles of the member for the group.
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
          type: array
      type: object
    ListGroupsResponse:
      description: Response message for ListGroups operation.
      id: ListGroupsResponse
      properties:
        groups:
          description: Groups returned in response to list request. The results are not sorted.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results available for listing.
          type: string
      type: object
    ListMembershipsResponse:
      description: The response message for MembershipsService.ListMemberships.
      id: ListMembershipsResponse
      properties:
        memberships:
          description: The `Membership`s under the specified `parent`.
          items:
            $ref: '#/components/schemas/Membership'
          type: array
        nextPageToken:
          description: A continuation token to retrieve the next page of results, or empty if there are no more results available.
          type: string
      type: object
    LookupGroupNameResponse:
      description: The response message for GroupsService.LookupGroupName.
      id: LookupGroupNameResponse
      properties:
        name:
          description: The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Group`.
          type: string
      type: object
    LookupMembershipNameResponse:
      description: The response message for MembershipsService.LookupMembershipName.
      id: LookupMembershipNameResponse
      properties:
        name:
          description: The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Membership`. Must be of the form `groups/{group}/memberships/{membership}`.
          type: string
      type: object
    MemberRelation:
      description: Message representing a transitive membership of a group.
      id: MemberRelation
      properties:
        member:
          description: Resource name for this member.
          type: string
        preferredMemberKey:
          description: Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
          items:
            $ref: '#/components/schemas/EntityKey'
          type: array
        relationType:
          description: The relation between the group and the transitive member.
          enum:
            - RELATION_TYPE_UNSPECIFIED
            - DIRECT
            - INDIRECT
            - DIRECT_AND_INDIRECT
          enumDescriptions:
            - The relation type is undefined or undetermined.
            - The two entities have only a direct membership with each other.
            - The two entities have only an indirect membership with each other.
            - The two entities have both a direct and an indirect membership with each other.
          type: string
        roles:
          description: The membership role details (i.e name of role and expiry time).
          items:
            $ref: '#/components/schemas/TransitiveMembershipRole'
          type: array
      type: object
    MemberRestriction:
      description: The definition of MemberRestriction
      id: MemberRestriction
      properties:
        evaluation:
          $ref: '#/components/schemas/RestrictionEvaluation'
          description: The evaluated state of this restriction on a group.
        query:
          description: 'Member Restriction as defined by CEL expression. Supported restrictions are: `member.customer_id` and `member.type`. Valid values for `member.type` are `1`, `2` and `3`. They correspond to USER, SERVICE_ACCOUNT, and GROUP respectively. The value for `member.customer_id` only supports `groupCustomerId()` currently which means the customer id of the group will be used for restriction. Supported operators are `&&`, `||` and `==`, corresponding to AND, OR, and EQUAL. Examples: Allow only service accounts of given customer to be members. `member.type == 2 && member.customer_id == groupCustomerId()` Allow only users or groups to be members. `member.type == 1 || member.type == 3`'
          type: string
      type: object
    Membership:
      description: A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
      id: Membership
      properties:
        createTime:
          description: Output only. The time when the `Membership` was created.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group}/memberships/{membership}`.
          readOnly: true
          type: string
        preferredMemberKey:
          $ref: '#/components/schemas/EntityKey'
          description: Required. Immutable. The `EntityKey` of the member.
        roles:
          description: The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
          items:
            $ref: '#/components/schemas/MembershipRole'
          type: array
        type:
          description: Output only. The type of the membership.
          enum:
            - TYPE_UNSPECIFIED
            - USER
            - SERVICE_ACCOUNT
            - GROUP
            - SHARED_DRIVE
            - OTHER
          enumDescriptions:
            - Default. Should not be used.
            - Represents user type.
            - Represents service account type.
            - Represents group type.
            - Represents Shared drive.
            - Represents other type.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time when the `Membership` was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    MembershipAdjacencyList:
      description: Membership graph's path information as an adjacency list.
      id: MembershipAdjacencyList
      properties:
        edges:
          description: 'Each edge contains information about the member that belongs to this group. Note: Fields returned here will help identify the specific Membership resource (e.g name, preferred_member_key and role), but may not be a comprehensive list of all fields.'
          items:
            $ref: '#/components/schemas/Membership'
          type: array
        group:
          description: Resource name of the group that the members belong to.
          type: string
      type: object
    MembershipRole:
      description: A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
      id: MembershipRole
      properties:
        expiryDetail:
          $ref: '#/components/schemas/ExpiryDetail'
          description: The expiry details of the `MembershipRole`. Expiry details are only supported for `MEMBER` `MembershipRoles`. May be set if `name` is `MEMBER`. Must not be set if `name` is any other value.
        name:
          description: The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
          type: string
        restrictionEvaluations:
          $ref: '#/components/schemas/RestrictionEvaluations'
          description: Evaluations of restrictions applied to parent group on this membership.
      type: object
    MembershipRoleRestrictionEvaluation:
      description: The evaluated state of this restriction.
      id: MembershipRoleRestrictionEvaluation
      properties:
        state:
          description: Output only. The current state of the restriction
          enum:
            - STATE_UNSPECIFIED
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
            - EVALUATING
          enumDescriptions:
            - Default. Should not be used.
            - The member adheres to the parent group's restriction.
            - The group-group membership might be currently violating some parent group's restriction but in future, it will never allow any new member in the child group which can violate parent group's restriction.
            - The member violates the parent group's restriction.
            - The state of the membership is under evaluation.
          readOnly: true
          type: string
      type: object
    ModifyMembershipRolesRequest:
      description: The request message for MembershipsService.ModifyMembershipRoles.
      id: ModifyMembershipRolesRequest
      properties:
        addRoles:
          description: The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.
          items:
            $ref: '#/components/schemas/MembershipRole'
          type: array
        removeRoles:
          description: The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.
          items:
            type: string
          type: array
        updateRolesParams:
          description: The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.
          items:
            $ref: '#/components/schemas/UpdateMembershipRolesParams'
          type: array
      type: object
    ModifyMembershipRolesResponse:
      description: The response message for MembershipsService.ModifyMembershipRoles.
      id: ModifyMembershipRolesResponse
      properties:
        membership:
          $ref: '#/components/schemas/Membership'
          description: The `Membership` resource after modifying its `MembershipRole`s.
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    RestrictionEvaluation:
      description: The evaluated state of this restriction.
      id: RestrictionEvaluation
      properties:
        state:
          description: Output only. The current state of the restriction
          enum:
            - STATE_UNSPECIFIED
            - EVALUATING
            - COMPLIANT
            - FORWARD_COMPLIANT
            - NON_COMPLIANT
          enumDescriptions:
            - Default. Should not be used.
            - The restriction state is currently being evaluated.
            - All transitive memberships are adhering to restriction.
            - Some transitive memberships violate the restriction. No new violating memberships can be added.
            - Some transitive memberships violate the restriction. New violating direct memberships will be denied while indirect memberships may be added.
          readOnly: true
          type: string
      type: object
    RestrictionEvaluations:
      description: Evaluations of restrictions applied to parent group on this membership.
      id: RestrictionEvaluations
      properties:
        memberRestrictionEvaluation:
          $ref: '#/components/schemas/MembershipRoleRestrictionEvaluation'
          description: Evaluation of the member restriction applied to this membership. Empty if the user lacks permission to view the restriction evaluation.
      type: object
    SearchGroupsResponse:
      description: The response message for GroupsService.SearchGroups.
      id: SearchGroupsResponse
      properties:
        groups:
          description: The `Group` resources that match the search query.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        nextPageToken:
          description: A continuation token to retrieve the next page of results, or empty if there are no more results available.
          type: string
      type: object
    SearchTransitiveGroupsResponse:
      description: The response message for MembershipsService.SearchTransitiveGroups.
      id: SearchTransitiveGroupsResponse
      properties:
        memberships:
          description: List of transitive groups satisfying the query.
          items:
            $ref: '#/components/schemas/GroupRelation'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results available for listing.
          type: string
      type: object
    SearchTransitiveMembershipsResponse:
      description: The response message for MembershipsService.SearchTransitiveMemberships.
      id: SearchTransitiveMembershipsResponse
      properties:
        memberships:
          description: List of transitive members satisfying the query.
          items:
            $ref: '#/components/schemas/MemberRelation'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results.
          type: string
      type: object
    SecuritySettings:
      description: The definition of security settings.
      id: SecuritySettings
      properties:
        memberRestriction:
          $ref: '#/components/schemas/MemberRestriction'
          description: The Member Restriction value
        name:
          description: Output only. The resource name of the security settings. Shall be of the form `groups/{group_id}/securitySettings`.
          readOnly: true
          type: string
      type: object
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TransitiveMembershipRole:
      description: Message representing the role of a TransitiveMembership.
      id: TransitiveMembershipRole
      properties:
        role:
          description: 'TransitiveMembershipRole in string format. Currently supported TransitiveMembershipRoles: `"MEMBER"`, `"OWNER"`, and `"MANAGER"`.'
          type: string
      type: object
    UpdateGroupMetadata:
      description: Metadata for UpdateGroup LRO.
      id: UpdateGroupMetadata
      properties: {}
      type: object
    UpdateMembershipMetadata:
      description: Metadata for UpdateMembership LRO.
      id: UpdateMembershipMetadata
      properties: {}
      type: object
    UpdateMembershipRolesParams:
      description: The details of an update to a `MembershipRole`.
      id: UpdateMembershipRolesParams
      properties:
        fieldMask:
          description: The fully-qualified names of fields to update. May only contain the field `expiry_detail.expire_time`.
          format: google-fieldmask
          type: string
        membershipRole:
          $ref: '#/components/schemas/MembershipRole'
          description: The `MembershipRole`s to be updated. Only `MEMBER` `MembershipRole` can currently be updated.
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-identity: 'Private Service: https://www.googleapis.com/auth/cloud-identity'
            https://www.googleapis.com/auth/cloud-identity.devices: 'Private Service: https://www.googleapis.com/auth/cloud-identity.devices'
            https://www.googleapis.com/auth/cloud-identity.devices.lookup: See your device details
            https://www.googleapis.com/auth/cloud-identity.devices.readonly: 'Private Service: https://www.googleapis.com/auth/cloud-identity.devices.readonly'
            https://www.googleapis.com/auth/cloud-identity.groups: See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group
            https://www.googleapis.com/auth/cloud-identity.groups.readonly: See any Cloud Identity Groups that you can access, including group members and their emails
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-identity: 'Private Service: https://www.googleapis.com/auth/cloud-identity'
            https://www.googleapis.com/auth/cloud-identity.devices: 'Private Service: https://www.googleapis.com/auth/cloud-identity.devices'
            https://www.googleapis.com/auth/cloud-identity.devices.lookup: See your device details
            https://www.googleapis.com/auth/cloud-identity.devices.readonly: 'Private Service: https://www.googleapis.com/auth/cloud-identity.devices.readonly'
            https://www.googleapis.com/auth/cloud-identity.groups: See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group
            https://www.googleapis.com/auth/cloud-identity.groups.readonly: See any Cloud Identity Groups that you can access, including group members and their emails
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources:
    devices:
      id: google.cloudidentity.devices
      name: devices
      title: Devices
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1devices/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancelWipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}:cancelWipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        wipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}:wipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/get'
          - $ref: '#/components/x-stackQL-resources/devices/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete'
    device_users:
      id: google.cloudidentity.device_users
      name: device_users
      title: Device_users
      methods:
        devices_deviceUsers_list:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_delete:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_get:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_approve:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_block:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:block/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_cancelWipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:cancelWipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_wipe:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}:wipe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_lookup:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_users/methods/devices_deviceUsers_get'
          - $ref: '#/components/x-stackQL-resources/device_users/methods/devices_deviceUsers_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/device_users/methods/devices_deviceUsers_delete'
    client_states:
      id: google.cloudidentity.client_states
      name: client_states
      title: Client_states
      methods:
        devices_deviceUsers_clientStates_list:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_clientStates_get:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates~1{clientStatesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        devices_deviceUsers_clientStates_patch:
          operation:
            $ref: '#/paths/~1v1~1devices~1{devicesId}~1deviceUsers~1{deviceUsersId}~1clientStates~1{clientStatesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_states/methods/devices_deviceUsers_clientStates_get'
          - $ref: '#/components/x-stackQL-resources/client_states/methods/devices_deviceUsers_clientStates_list'
        insert: []
        update: []
        delete: []
    groups:
      id: google.cloudidentity.groups
      name: groups
      title: Groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: groups
        create:
          operation:
            $ref: '#/paths/~1v1~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        updateSecuritySettings:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1securitySettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lookup:
          operation:
            $ref: '#/paths/~1v1~1groups:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: '#/paths/~1v1~1groups:search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    memberships:
      id: google.cloudidentity.memberships
      name: memberships
      title: Memberships
      methods:
        groups_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: memberships
        groups_memberships_create:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_delete:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_get:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_modifyMembershipRoles:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships~1{membershipsId}:modifyMembershipRoles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_checkTransitiveMembership:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:checkTransitiveMembership/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_lookup:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:lookup/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_searchTransitiveGroups:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:searchTransitiveGroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        groups_memberships_searchTransitiveMemberships:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:searchTransitiveMemberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_get'
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/groups_memberships_delete'
    memberships_membership_graph:
      id: google.cloudidentity.memberships_membership_graph
      name: memberships_membership_graph
      title: Memberships_membership_graph
      methods:
        groups_memberships_getMembershipGraph:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1memberships:getMembershipGraph/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships_membership_graph/methods/groups_memberships_getMembershipGraph'
        insert: []
        update: []
        delete: []
    groups_security_settings:
      id: google.cloudidentity.groups_security_settings
      name: groups_security_settings
      title: Groups_security_settings
      methods:
        groups_getSecuritySettings:
          operation:
            $ref: '#/paths/~1v1~1groups~1{groupsId}~1securitySettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups_security_settings/methods/groups_getSecuritySettings'
        insert: []
        update: []
        delete: []
externalDocs:
  url: https://cloud.google.com/identity/
info:
  description: API for provisioning and managing identity resources.
  title: Cloud Identity API
  version: v1
openapi: 3.1.0
paths:
  /v1/devices:
    get:
      description: Lists/Searches devices.
      operationId: cloudidentity.devices.list
      parameters:
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ListDevicesResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      tags:
        - devices
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: 'Creates a device. Only company-owned device may be created. **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium'
      operationId: cloudidentity.devices.create
      parameters:
        - in: query
          name: customer
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - devices
  /v1/devices/{devicesId}:
    delete:
      description: Deletes the specified device.
      operationId: cloudidentity.devices.delete
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - devices
    get:
      description: Retrieves the specified device.
      operationId: cloudidentity.devices.get
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1Device'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      tags:
        - devices
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/devices/{devicesId}/deviceUsers:
    get:
      description: Lists/Searches DeviceUsers.
      operationId: cloudidentity.devices.deviceUsers.list
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ListDeviceUsersResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      tags:
        - device_users
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:
    delete:
      description: Deletes the specified DeviceUser. This also revokes the user's access to device data.
      operationId: cloudidentity.devices.deviceUsers.delete
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - device_users
    get:
      description: Retrieves the specified DeviceUser
      operationId: cloudidentity.devices.deviceUsers.get
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1DeviceUser'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      tags:
        - device_users
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}/clientStates:
    get:
      description: Lists the client states for the given search query.
      operationId: cloudidentity.devices.deviceUsers.clientStates.list
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ListClientStatesResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      tags:
        - client_states
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}/clientStates/{clientStatesId}:
    get:
      description: Gets the client state for the device user
      operationId: cloudidentity.devices.deviceUsers.clientStates.get
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.readonly
      tags:
        - client_states
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    patch:
      description: 'Updates the client state for the device user **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium'
      operationId: cloudidentity.devices.deviceUsers.clientStates.patch
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
        - in: path
          name: clientStatesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: customer
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ClientState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - client_states
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:approve:
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Approves device to access user data.
      operationId: cloudidentity.devices.deviceUsers.approve
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1ApproveDeviceUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - device_users
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:block:
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Blocks device from accessing user data
      operationId: cloudidentity.devices.deviceUsers.block
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1BlockDeviceUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - device_users
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:cancelWipe:
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Cancels an unfinished user account wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped.
      operationId: cloudidentity.devices.deviceUsers.cancelWipe
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - device_users
  /v1/devices/{devicesId}/deviceUsers/{deviceUsersId}:wipe:
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Wipes the user's account on a device. Other data on the device that is not associated with the user's work account is not affected. For example, if a Gmail app is installed on a device that is used for personal and work purposes, and the user is logged in to the Gmail app with their personal account as well as their work account, wiping the "deviceUser" by their work administrator will not affect their personal account within Gmail or other apps such as Photos.
      operationId: cloudidentity.devices.deviceUsers.wipe
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: path
          name: deviceUsersId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1WipeDeviceUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - device_users
  /v1/devices/{devicesId}/deviceUsers:lookup:
    get:
      description: 'Looks up resource names of the DeviceUsers associated with the caller''s credentials, as well as the properties provided in the request. This method must be called with end-user credentials with the scope: https://www.googleapis.com/auth/cloud-identity.devices.lookup If multiple properties are provided, only DeviceUsers having all of these properties are considered as matches - i.e. the query behaves like an AND. Different platforms require different amounts of information from the caller to ensure that the DeviceUser is uniquely identified. - iOS: No properties need to be passed, the caller''s credentials are sufficient to identify the corresponding DeviceUser. - Android: Specifying the ''android_id'' field is required. - Desktop: Specifying the ''raw_resource_id'' field is required.'
      operationId: cloudidentity.devices.deviceUsers.lookup
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
        - in: query
          name: androidId
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: rawResourceId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: userId
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices.lookup
      tags:
        - device_users
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/devices/{devicesId}:cancelWipe:
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Cancels an unfinished device wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped. This operation is possible when the device is in a "pending wipe" state. The device enters the "pending wipe" state when a wipe device command is issued, but has not yet been sent to the device. The cancel wipe will fail if the wipe command has already been issued to the device.
      operationId: cloudidentity.devices.cancelWipe
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1CancelWipeDeviceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - devices
  /v1/devices/{devicesId}:wipe:
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Wipes all data on the specified device.
      operationId: cloudidentity.devices.wipe
      parameters:
        - in: path
          name: devicesId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAppsCloudidentityDevicesV1WipeDeviceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.devices
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.devices
      tags:
        - devices
  /v1/groups:
    get:
      description: Lists the `Group` resources under a customer or namespace.
      operationId: cloudidentity.groups.list
      parameters:
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Creates a Group.
      operationId: cloudidentity.groups.create
      parameters:
        - in: query
          name: initialGroupConfig
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
  /v1/groups/{groupsId}:
    delete:
      description: Deletes a `Group`.
      operationId: cloudidentity.groups.delete
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
    get:
      description: Retrieves a `Group`.
      operationId: cloudidentity.groups.get
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    patch:
      description: Updates a `Group`.
      operationId: cloudidentity.groups.patch
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
  /v1/groups/{groupsId}/memberships:
    get:
      description: Lists the `Membership`s within a `Group`.
      operationId: cloudidentity.groups.memberships.list
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembershipsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Creates a `Membership`.
      operationId: cloudidentity.groups.memberships.create
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
  /v1/groups/{groupsId}/memberships/{membershipsId}:
    delete:
      description: Deletes a `Membership`.
      operationId: cloudidentity.groups.memberships.delete
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    get:
      description: Retrieves a `Membership`.
      operationId: cloudidentity.groups.memberships.get
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/groups/{groupsId}/memberships/{membershipsId}:modifyMembershipRoles:
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    post:
      description: Modifies the `MembershipRole`s of a `Membership`.
      operationId: cloudidentity.groups.memberships.modifyMembershipRoles
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: path
          name: membershipsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMembershipRolesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyMembershipRolesResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
  /v1/groups/{groupsId}/memberships:checkTransitiveMembership:
    get:
      description: Check a potential member for membership in a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A member has membership to a group as long as there is a single viewable transitive membership between the group and the member. The actor must have view permissions to at least one transitive membership between the member and group.
      operationId: cloudidentity.groups.memberships.checkTransitiveMembership
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckTransitiveMembershipResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/groups/{groupsId}/memberships:getMembershipGraph:
    get:
      description: Get a membership graph of just a member or both a member and a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. Given a member, the response will contain all membership paths from the member. Given both a group and a member, the response will contain all membership paths between the group and the member.
      operationId: cloudidentity.groups.memberships.getMembershipGraph
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships_membership_graph
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/groups/{groupsId}/memberships:lookup:
    get:
      description: Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Membership` by its `EntityKey`.
      operationId: cloudidentity.groups.memberships.lookup
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: memberKey.id
          schema:
            type: string
        - in: query
          name: memberKey.namespace
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupMembershipNameResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/groups/{groupsId}/memberships:searchTransitiveGroups:
    get:
      description: Search transitive groups of a member. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the member is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive group is any group that has a direct or indirect membership to the member. Actor must have view permissions all transitive groups.
      operationId: cloudidentity.groups.memberships.searchTransitiveGroups
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveGroupsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/groups/{groupsId}/memberships:searchTransitiveMemberships:
    get:
      description: Search transitive memberships of a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. If the account of the group is not one of these, a 403 (PERMISSION_DENIED) HTTP status code will be returned. A transitive membership is any direct or indirect membership of a group. Actor must have view permissions to all transitive memberships.
      operationId: cloudidentity.groups.memberships.searchTransitiveMemberships
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTransitiveMembershipsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/groups/{groupsId}/securitySettings:
    get:
      description: Get Security Settings
      operationId: cloudidentity.groups.getSecuritySettings
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: readMask
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySettings'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups_security_settings
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
    patch:
      description: Update Security Settings
      operationId: cloudidentity.groups.updateSecuritySettings
      parameters:
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySettings'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
  /v1/groups:lookup:
    get:
      description: Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Group` by its `EntityKey`.
      operationId: cloudidentity.groups.lookup
      parameters:
        - in: query
          name: groupKey.id
          schema:
            type: string
        - in: query
          name: groupKey.namespace
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupGroupNameResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
  /v1/groups:search:
    get:
      description: Searches for `Group` resources matching a specified query.
      operationId: cloudidentity.groups.search
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGroupsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-identity.groups.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - groups
    parameters:
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
servers:
  - url: https://cloudidentity.googleapis.com
