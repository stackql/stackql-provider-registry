components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment:
      description: Account Defender risk assessment.
      id: GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment
      properties:
        labels:
          description: Labels for this request.
          items:
            enum:
              - ACCOUNT_DEFENDER_LABEL_UNSPECIFIED
              - PROFILE_MATCH
              - SUSPICIOUS_LOGIN_ACTIVITY
              - SUSPICIOUS_ACCOUNT_CREATION
              - RELATED_ACCOUNTS_NUMBER_HIGH
            enumDescriptions:
              - Default unspecified type.
              - The request matches a known good profile for the user.
              - The request is potentially a suspicious login event and should be further verified either via multi-factor authentication or another system.
              - The request matched a profile that previously had suspicious account creation behavior. This could mean this is a fake account.
              - The account in the request has a high number of related accounts. It does not necessarily imply that the account is bad but could require investigating.
            type: string
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1AndroidKeySettings:
      description: Settings specific to keys that can be used by Android apps.
      id: GoogleCloudRecaptchaenterpriseV1AndroidKeySettings
      properties:
        allowAllPackageNames:
          description: If set to true, allowed_package_names are not enforced.
          type: boolean
        allowedPackageNames:
          description: 'Android package names of apps allowed to use the key. Example: ''com.companyname.appname'''
          items:
            type: string
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest:
      description: The request message to annotate an Assessment.
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest
      properties:
        annotation:
          description: Optional. The annotation that will be assigned to the Event. This field can be left empty to provide reasons that apply to an event without concluding whether the event is legitimate or fraudulent.
          enum:
            - ANNOTATION_UNSPECIFIED
            - LEGITIMATE
            - FRAUDULENT
            - PASSWORD_CORRECT
            - PASSWORD_INCORRECT
          enumDescriptions:
            - Default unspecified type.
            - Provides information that the event turned out to be legitimate.
            - Provides information that the event turned out to be fraudulent.
            - Provides information that the event was related to a login event in which the user typed the correct password. Deprecated, prefer indicating CORRECT_PASSWORD through the reasons field instead.
            - Provides information that the event was related to a login event in which the user typed the incorrect password. Deprecated, prefer indicating INCORRECT_PASSWORD through the reasons field instead.
          type: string
        hashedAccountId:
          description: Optional. Optional unique stable hashed user identifier to apply to the assessment. This is an alternative to setting the hashed_account_id in CreateAssessment, for example when the account identifier is not yet known in the initial request. It is recommended that the identifier is hashed using hmac-sha256 with stable secret.
          format: byte
          type: string
        reasons:
          description: Optional. Optional reasons for the annotation that will be assigned to the Event.
          items:
            enum:
              - REASON_UNSPECIFIED
              - CHARGEBACK
              - CHARGEBACK_FRAUD
              - CHARGEBACK_DISPUTE
              - PAYMENT_HEURISTICS
              - INITIATED_TWO_FACTOR
              - PASSED_TWO_FACTOR
              - FAILED_TWO_FACTOR
              - CORRECT_PASSWORD
              - INCORRECT_PASSWORD
            enumDescriptions:
              - Default unspecified reason.
              - Indicates a chargeback issued for the transaction with no other details. When possible, specify the type by using CHARGEBACK_FRAUD or CHARGEBACK_DISPUTE instead.
              - Indicates a chargeback related to an alleged unauthorized transaction from the cardholder's perspective (for example, the card number was stolen).
              - Indicates a chargeback related to the cardholder having provided their card details but allegedly not being satisfied with the purchase (for example, misrepresentation, attempted cancellation).
              - Indicates the transaction associated with the assessment is suspected of being fraudulent based on the payment method, billing details, shipping address or other transaction information.
              - Indicates that the user was served a 2FA challenge. An old assessment with `ENUM_VALUES.INITIATED_TWO_FACTOR` reason that has not been overwritten with `PASSED_TWO_FACTOR` is treated as an abandoned 2FA flow. This is equivalent to `FAILED_TWO_FACTOR`.
              - Indicates that the user passed a 2FA challenge.
              - Indicates that the user failed a 2FA challenge.
              - Indicates the user provided the correct password.
              - Indicates the user provided an incorrect password.
            type: string
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse:
      description: Empty response for AnnotateAssessment.
      id: GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1Assessment:
      description: A recaptcha assessment resource.
      id: GoogleCloudRecaptchaenterpriseV1Assessment
      properties:
        accountDefenderAssessment:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AccountDefenderAssessment'
          description: Assessment returned by Account Defender when a hashed_account_id is provided.
        event:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Event'
          description: The event being assessed.
        name:
          description: Output only. The resource name for the Assessment in the format "projects/{project}/assessments/{assessment}".
          readOnly: true
          type: string
        privatePasswordLeakVerification:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification'
          description: The private password leak verification field contains the parameters used to check for leaks privately without sharing user credentials.
        riskAnalysis:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RiskAnalysis'
          description: Output only. The risk analysis result for the event being assessed.
          readOnly: true
        tokenProperties:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TokenProperties'
          description: Output only. Properties of the provided event token.
          readOnly: true
      type: object
    GoogleCloudRecaptchaenterpriseV1ChallengeMetrics:
      description: Metrics related to challenges.
      id: GoogleCloudRecaptchaenterpriseV1ChallengeMetrics
      properties:
        failedCount:
          description: Count of submitted challenge solutions that were incorrect or otherwise deemed suspicious such that a subsequent challenge was triggered.
          format: int64
          type: string
        nocaptchaCount:
          description: Count of nocaptchas (successful verification without a challenge) issued.
          format: int64
          type: string
        pageloadCount:
          description: Count of reCAPTCHA checkboxes or badges rendered. This is mostly equivalent to a count of pageloads for pages that include reCAPTCHA.
          format: int64
          type: string
        passedCount:
          description: Count of nocaptchas (successful verification without a challenge) plus submitted challenge solutions that were correct and resulted in verification.
          format: int64
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1Event:
      id: GoogleCloudRecaptchaenterpriseV1Event
      properties:
        expectedAction:
          description: Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.
          type: string
        hashedAccountId:
          description: Optional. Optional unique stable hashed user identifier for the request. The identifier should ideally be hashed using sha256 with stable secret.
          format: byte
          type: string
        siteKey:
          description: Optional. The site key that was used to invoke reCAPTCHA on your site and generate the token.
          type: string
        token:
          description: Optional. The user response token provided by the reCAPTCHA client-side integration on your site.
          type: string
        userAgent:
          description: Optional. The user agent present in the request from the user's device related to this event.
          type: string
        userIpAddress:
          description: Optional. The IP address in the request from the user's device related to this event.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1IOSKeySettings:
      description: Settings specific to keys that can be used by iOS apps.
      id: GoogleCloudRecaptchaenterpriseV1IOSKeySettings
      properties:
        allowAllBundleIds:
          description: If set to true, allowed_bundle_ids are not enforced.
          type: boolean
        allowedBundleIds:
          description: 'iOS bundle ids of apps allowed to use the key. Example: ''com.companyname.productname.appname'''
          items:
            type: string
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1Key:
      description: A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise.
      id: GoogleCloudRecaptchaenterpriseV1Key
      properties:
        androidSettings:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AndroidKeySettings'
          description: Settings for keys that can be used by Android apps.
        createTime:
          description: The timestamp corresponding to the creation of this Key.
          format: google-datetime
          type: string
        displayName:
          description: Human-readable display name of this key. Modifiable by user.
          type: string
        iosSettings:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1IOSKeySettings'
          description: Settings for keys that can be used by iOS apps.
        labels:
          additionalProperties:
            type: string
          description: See Creating and managing labels.
          type: object
        name:
          description: The resource name for the Key in the format "projects/{project}/keys/{key}".
          type: string
        testingOptions:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1TestingOptions'
          description: Options for user acceptance testing.
        wafSettings:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WafSettings'
          description: Settings for WAF
        webSettings:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1WebKeySettings'
          description: Settings for keys that can be used by websites.
      type: object
    GoogleCloudRecaptchaenterpriseV1ListKeysResponse:
      description: Response to request to list keys in a project.
      id: GoogleCloudRecaptchaenterpriseV1ListKeysResponse
      properties:
        keys:
          description: Key details.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. It is set to empty if no keys remain in results.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse:
      description: The response to a `ListRelatedAccountGroupMemberships` call.
      id: GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroupMemberships:
          description: The memberships listed by the query.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership'
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse:
      description: The response to a `ListRelatedAccountGroups` call.
      id: GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroups:
          description: The groups of related accounts listed by the query.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup'
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1Metrics:
      description: Metrics for a single Key.
      id: GoogleCloudRecaptchaenterpriseV1Metrics
      properties:
        challengeMetrics:
          description: Metrics will be continuous and in order by dates, and in the granularity of day. Only challenge-based keys (CHECKBOX, INVISIBLE), will have challenge-based data.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ChallengeMetrics'
          type: array
        name:
          description: Output only. The name of the metrics, in the format "projects/{project}/keys/{key}/metrics".
          readOnly: true
          type: string
        scoreMetrics:
          description: Metrics will be continuous and in order by dates, and in the granularity of day. All Key types should have score-based data.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreMetrics'
          type: array
        startTime:
          description: Inclusive start time aligned to a day (UTC).
          format: google-datetime
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest:
      description: The migrate key request message.
      id: GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest
      properties: {}
      type: object
    GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification:
      description: Private password leak verification info.
      id: GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification
      properties:
        encryptedLeakMatchPrefixes:
          description: Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They should be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`
          items:
            format: byte
            type: string
          readOnly: true
          type: array
        encryptedUserCredentialsHash:
          description: Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.
          format: byte
          type: string
        lookupHashPrefix:
          description: Optional. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.
          format: byte
          type: string
        reencryptedUserCredentialsHash:
          description: Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. Used to match potential password leaks within `encrypted_leak_match_prefixes`.
          format: byte
          readOnly: true
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup:
      description: A group of related accounts.
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroup
      properties:
        name:
          description: Required. The resource name for the related account group in the format `projects/{project}/relatedaccountgroups/{related_account_group}`.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership:
      description: A membership in a group of related accounts.
      id: GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership
      properties:
        hashedAccountId:
          description: The unique stable hashed user identifier of the member. The identifier corresponds to a `hashed_account_id` provided in a previous CreateAssessment or AnnotateAssessment call.
          format: byte
          type: string
        name:
          description: Required. The resource name for this membership in the format `projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}`.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse:
      description: Secret key used in legacy reCAPTCHA only. Should be used when integrating with a 3rd party which is still using legacy reCAPTCHA.
      id: GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse
      properties:
        legacySecretKey:
          description: The secret key (also known as shared secret) authorizes communication between your application backend and the reCAPTCHA Enterprise server to create an assessment. The secret key needs to be kept safe for security purposes.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1RiskAnalysis:
      description: Risk analysis result for an event.
      id: GoogleCloudRecaptchaenterpriseV1RiskAnalysis
      properties:
        reasons:
          description: Reasons contributing to the risk analysis verdict.
          items:
            enum:
              - CLASSIFICATION_REASON_UNSPECIFIED
              - AUTOMATION
              - UNEXPECTED_ENVIRONMENT
              - TOO_MUCH_TRAFFIC
              - UNEXPECTED_USAGE_PATTERNS
              - LOW_CONFIDENCE_SCORE
            enumDescriptions:
              - Default unspecified type.
              - Interactions matched the behavior of an automated agent.
              - The event originated from an illegitimate environment.
              - Traffic volume from the event source is higher than normal.
              - Interactions with the site were significantly different than expected patterns.
              - Too little traffic has been received from this site thus far to generate quality risk analysis.
            type: string
          type: array
        score:
          description: Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic).
          format: float
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1ScoreDistribution:
      description: Score distribution.
      id: GoogleCloudRecaptchaenterpriseV1ScoreDistribution
      properties:
        scoreBuckets:
          additionalProperties:
            format: int64
            type: string
          description: Map key is score value multiplied by 100. The scores are discrete values between [0, 1]. The maximum number of buckets is on order of a few dozen, but typically much lower (ie. 10).
          type: object
      type: object
    GoogleCloudRecaptchaenterpriseV1ScoreMetrics:
      description: Metrics related to scoring.
      id: GoogleCloudRecaptchaenterpriseV1ScoreMetrics
      properties:
        actionMetrics:
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution'
          description: Action-based metrics. The map key is the action name which specified by the site owners at time of the "execute" client-side call. Populated only for SCORE keys.
          type: object
        overallMetrics:
          $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ScoreDistribution'
          description: Aggregated score metrics for all traffic.
      type: object
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest:
      description: The request message to search related account group memberships.
      id: GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest
      properties:
        hashedAccountId:
          description: Optional. The unique stable hashed user identifier we should search connections to. The identifier should correspond to a `hashed_account_id` provided in a previous CreateAssessment or AnnotateAssessment call.
          format: byte
          type: string
        pageSize:
          description: Optional. The maximum number of groups to return. The service may return fewer than this value. If unspecified, at most 50 groups will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          format: int32
          type: integer
        pageToken:
          description: Optional. A page token, received from a previous `SearchRelatedAccountGroupMemberships` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `SearchRelatedAccountGroupMemberships` must match the call that provided the page token.
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse:
      description: The response to a `SearchRelatedAccountGroupMemberships` call.
      id: GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        relatedAccountGroupMemberships:
          description: The queried memberships.
          items:
            $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RelatedAccountGroupMembership'
          type: array
      type: object
    GoogleCloudRecaptchaenterpriseV1TestingOptions:
      description: Options for user acceptance testing.
      id: GoogleCloudRecaptchaenterpriseV1TestingOptions
      properties:
        testingChallenge:
          description: For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
          enum:
            - TESTING_CHALLENGE_UNSPECIFIED
            - NOCAPTCHA
            - UNSOLVABLE_CHALLENGE
          enumDescriptions:
            - Perform the normal risk analysis and return either nocaptcha or a challenge depending on risk and trust factors.
            - Challenge requests for this key always return a nocaptcha, which does not require a solution.
            - Challenge requests for this key always return an unsolvable challenge.
          type: string
        testingScore:
          description: All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
          format: float
          type: number
      type: object
    GoogleCloudRecaptchaenterpriseV1TokenProperties:
      id: GoogleCloudRecaptchaenterpriseV1TokenProperties
      properties:
        action:
          description: Action name provided at token generation.
          type: string
        createTime:
          description: The timestamp corresponding to the generation of the token.
          format: google-datetime
          type: string
        hostname:
          description: The hostname of the page on which the token was generated.
          type: string
        invalidReason:
          description: Reason associated with the response when valid = false.
          enum:
            - INVALID_REASON_UNSPECIFIED
            - UNKNOWN_INVALID_REASON
            - MALFORMED
            - EXPIRED
            - DUPE
            - MISSING
            - BROWSER_ERROR
          enumDescriptions:
            - Default unspecified type.
            - If the failure reason was not accounted for.
            - The provided user verification token was malformed.
            - The user verification token had expired.
            - The user verification had already been seen.
            - The user verification token was not present.
            - A retriable error (such as network failure) occurred on the browser. Could easily be simulated by an attacker.
          type: string
        valid:
          description: Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment).
          type: boolean
      type: object
    GoogleCloudRecaptchaenterpriseV1WafSettings:
      description: Settings specific to keys that can be used for WAF (Web Application Firewall).
      id: GoogleCloudRecaptchaenterpriseV1WafSettings
      properties:
        wafFeature:
          description: Required. The WAF feature for which this key is enabled.
          enum:
            - WAF_FEATURE_UNSPECIFIED
            - CHALLENGE_PAGE
            - SESSION_TOKEN
            - ACTION_TOKEN
          enumDescriptions:
            - Undefined feature.
            - Redirects suspicious traffic to reCAPTCHA.
            - Use reCAPTCHA session-tokens to protect the whole user session on the site's domain.
            - Use reCAPTCHA action-tokens to protect user actions.
          type: string
        wafService:
          description: Required. The WAF service that uses this key.
          enum:
            - WAF_SERVICE_UNSPECIFIED
            - CA
          enumDescriptions:
            - Undefined WAF
            - Cloud Armor
          type: string
      type: object
    GoogleCloudRecaptchaenterpriseV1WebKeySettings:
      description: Settings specific to keys that can be used by websites.
      id: GoogleCloudRecaptchaenterpriseV1WebKeySettings
      properties:
        allowAllDomains:
          description: If set to true, it means allowed_domains will not be enforced.
          type: boolean
        allowAmpTraffic:
          description: If set to true, the key can be used on AMP (Accelerated Mobile Pages) websites. This is supported only for the SCORE integration type.
          type: boolean
        allowedDomains:
          description: 'Domains or subdomains of websites allowed to use the key. All subdomains of an allowed domain are automatically allowed. A valid domain requires a host and must not include any path, port, query or fragment. Examples: ''example.com'' or ''subdomain.example.com'''
          items:
            type: string
          type: array
        challengeSecurityPreference:
          description: Settings for the frequency and difficulty at which this key triggers captcha challenges. This should only be specified for IntegrationTypes CHECKBOX and INVISIBLE.
          enum:
            - CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED
            - USABILITY
            - BALANCE
            - SECURITY
          enumDescriptions:
            - Default type that indicates this enum hasn't been specified.
            - Key tends to show fewer and easier challenges.
            - Key tends to show balanced (in amount and difficulty) challenges.
            - Key tends to show more and harder challenges.
          type: string
        integrationType:
          description: Required. Describes how this key is integrated with the website.
          enum:
            - INTEGRATION_TYPE_UNSPECIFIED
            - SCORE
            - CHECKBOX
            - INVISIBLE
          enumDescriptions:
            - Default type that indicates this enum hasn't been specified. This is not a valid IntegrationType, one of the other types must be specified instead.
            - Only used to produce scores. It doesn't display the "I'm not a robot" checkbox and never shows captcha challenges.
            - Displays the "I'm not a robot" checkbox and may show captcha challenges after it is checked.
            - Doesn't display the "I'm not a robot" checkbox, but may show captcha challenges after risk analysis.
          type: string
      type: object
    GoogleProtobufEmpty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources:
    assessments:
      id: google.recaptchaenterprise.assessments
      name: assessments
      title: Assessments
      methods:
        projects_assessments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assessments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_assessments_annotate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1assessments~1{assessmentsId}:annotate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/assessments/methods/projects_assessments_create'
        update: []
        delete: []
    keys:
      id: google.recaptchaenterprise.keys
      name: keys
      title: Keys
      methods:
        projects_keys_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_keys_migrate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:migrate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_get'
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/keys/methods/projects_keys_delete'
    keys_metrics:
      id: google.recaptchaenterprise.keys_metrics
      name: keys_metrics
      title: Keys_metrics
      methods:
        projects_keys_getMetrics:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys_metrics/methods/projects_keys_getMetrics'
        insert: []
        update: []
        delete: []
    keys_legacy_secret_key:
      id: google.recaptchaenterprise.keys_legacy_secret_key
      name: keys_legacy_secret_key
      title: Keys_legacy_secret_key
      methods:
        projects_keys_retrieveLegacySecretKey:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1keys~1{keysId}:retrieveLegacySecretKey/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys_legacy_secret_key/methods/projects_keys_retrieveLegacySecretKey'
        insert: []
        update: []
        delete: []
    relatedaccountgroupmemberships:
      id: google.recaptchaenterprise.relatedaccountgroupmemberships
      name: relatedaccountgroupmemberships
      title: Relatedaccountgroupmemberships
      methods:
        projects_relatedaccountgroupmemberships_search:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroupmemberships:search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    relatedaccountgroups:
      id: google.recaptchaenterprise.relatedaccountgroups
      name: relatedaccountgroups
      title: Relatedaccountgroups
      methods:
        projects_relatedaccountgroups_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/relatedaccountgroups/methods/projects_relatedaccountgroups_list'
        insert: []
        update: []
        delete: []
    memberships:
      id: google.recaptchaenterprise.memberships
      name: memberships
      title: Memberships
      methods:
        projects_relatedaccountgroups_memberships_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1relatedaccountgroups~1{relatedaccountgroupsId}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/projects_relatedaccountgroups_memberships_list'
        insert: []
        update: []
        delete: []
externalDocs:
  url: https://cloud.google.com/recaptcha-enterprise/
info:
  description: ''
  title: reCAPTCHA Enterprise API
  version: v1
openapi: 3.1.0
paths:
  /v1/projects/{projectsId}/assessments:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
    post:
      description: Creates an Assessment of the likelihood an event is legitimate.
      operationId: recaptchaenterprise.projects.assessments.create
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Assessment'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - assessments
  /v1/projects/{projectsId}/assessments/{assessmentsId}:annotate:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
    post:
      description: Annotates a previously created Assessment to provide additional information on whether the event turned out to be authentic or fraudulent.
      operationId: recaptchaenterprise.projects.assessments.annotate
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: assessmentsId:annotate
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - assessments
  /v1/projects/{projectsId}/keys:
    get:
      description: Returns the list of all keys that belong to a project.
      operationId: recaptchaenterprise.projects.keys.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListKeysResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
    post:
      description: Creates a new reCAPTCHA Enterprise key.
      operationId: recaptchaenterprise.projects.keys.create
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys
  /v1/projects/{projectsId}/keys/{keysId}:
    delete:
      description: Deletes the specified key.
      operationId: recaptchaenterprise.projects.keys.delete
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys
    get:
      description: Returns the specified key.
      operationId: recaptchaenterprise.projects.keys.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
    patch:
      description: Updates the specified key.
      operationId: recaptchaenterprise.projects.keys.patch
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys
  /v1/projects/{projectsId}/keys/{keysId}/metrics:
    get:
      description: Get some aggregated metrics for a Key. This data can be used to build dashboards.
      operationId: recaptchaenterprise.projects.keys.getMetrics
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Metrics'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys_metrics
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
  /v1/projects/{projectsId}/keys/{keysId}:migrate:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
    post:
      description: Migrates an existing key from reCAPTCHA to reCAPTCHA Enterprise. Once a key is migrated, it can be used from either product. SiteVerify requests are billed as CreateAssessment calls. You must be authenticated as one of the current owners of the reCAPTCHA Site Key, and your user must have the reCAPTCHA Enterprise Admin IAM role in the destination project.
      operationId: recaptchaenterprise.projects.keys.migrate
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId:migrate
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1MigrateKeyRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1Key'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys
  /v1/projects/{projectsId}/keys/{keysId}:retrieveLegacySecretKey:
    get:
      description: Returns the secret key related to the specified public key. You should use the legacy secret key only if you are integrating with a 3rd party using the legacy reCAPTCHA instead of reCAPTCHA Enterprise.
      operationId: recaptchaenterprise.projects.keys.retrieveLegacySecretKey
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: keysId:retrieveLegacySecretKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1RetrieveLegacySecretKeyResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - keys_legacy_secret_key
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
  /v1/projects/{projectsId}/relatedaccountgroupmemberships:search:
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
    post:
      description: Search group memberships related to a given account.
      operationId: recaptchaenterprise.projects.relatedaccountgroupmemberships.search
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1SearchRelatedAccountGroupMembershipsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - relatedaccountgroupmemberships
  /v1/projects/{projectsId}/relatedaccountgroups:
    get:
      description: List groups of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - relatedaccountgroups
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
  /v1/projects/{projectsId}/relatedaccountgroups/{relatedaccountgroupsId}/memberships:
    get:
      description: Get the memberships in a group of related accounts.
      operationId: recaptchaenterprise.projects.relatedaccountgroups.memberships.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: relatedaccountgroupsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudRecaptchaenterpriseV1ListRelatedAccountGroupMembershipsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - memberships
    parameters:
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
servers:
  - url: https://recaptchaenterprise.googleapis.com
