openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Notebooks API
  description: Notebooks API is used to manage notebook resources in Google Cloud.
  version: v2
  x-discovery-doc-revision: '20230720'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/notebooks/docs/'
servers:
  - url: 'https://notebooks.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ContainerImage:
      type: object
      properties:
        repository:
          description: 'Required. The path to the container image repository. For example: `gcr.io/{project_id}/{image_name}`'
          type: string
        tag:
          description: 'Optional. The tag of the container image. If not specified, this defaults to the latest tag.'
          type: string
      description: Definition of a container image for starting a notebook instance with the environment installed in a container.
      id: ContainerImage
    ListInstancesResponse:
      type: object
      description: Response for listing notebook instances.
      properties:
        instances:
          items:
            $ref: '#/components/schemas/Instance'
          description: A list of returned instances.
          type: array
        unreachable:
          type: array
          items:
            type: string
          description: 'Locations that could not be reached. For example, [''us-west1-a'', ''us-central1-b'']. A ListInstancesResponse will only contain either instances or unreachables,'
        nextPageToken:
          description: Page token that can be used to continue listing from the last result in the next list call.
          type: string
      id: ListInstancesResponse
    AcceleratorConfig:
      description: 'An accelerator configuration for a VM instance Definition of a hardware accelerator. Note that there is no check on `type` and `core_count` combinations. TPUs are not supported. See [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a valid combination.'
      properties:
        type:
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - NVIDIA_A100_80GB
            - NVIDIA_L4
            - NVIDIA_TESLA_T4_VWS
            - NVIDIA_TESLA_P100_VWS
            - NVIDIA_TESLA_P4_VWS
          type: string
          description: Optional. Type of this accelerator.
          enumDescriptions:
            - Accelerator type is not specified.
            - Accelerator type is Nvidia Tesla P100.
            - Accelerator type is Nvidia Tesla V100.
            - Accelerator type is Nvidia Tesla P4.
            - Accelerator type is Nvidia Tesla T4.
            - Accelerator type is Nvidia Tesla A100 - 40GB.
            - Accelerator type is Nvidia Tesla A100 - 80GB.
            - Accelerator type is Nvidia Tesla L4.
            - Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
        coreCount:
          description: Optional. Count of cores of this accelerator.
          type: string
          format: int64
      type: object
      id: AcceleratorConfig
    NetworkInterface:
      type: object
      id: NetworkInterface
      description: The definition of a network interface resource attached to a VM.
      properties:
        network:
          type: string
          description: 'Optional. The name of the VPC that this VM instance is in. Format: `projects/{project_id}/global/networks/{network_id}`'
        nicType:
          enumDescriptions:
            - No type specified.
            - VIRTIO
            - GVNIC
          enum:
            - NIC_TYPE_UNSPECIFIED
            - VIRTIO_NET
            - GVNIC
          type: string
          description: Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
        subnet:
          type: string
          description: 'Optional. The name of the subnet that this VM instance is in. Format: `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`'
    DiagnoseInstanceRequest:
      properties:
        diagnosticConfig:
          description: Required. Defines flags that are used to run the diagnostic tool
          $ref: '#/components/schemas/DiagnosticConfig'
        timeoutMinutes:
          description: Optional. Maxmium amount of time in minutes before the operation times out.
          type: integer
          format: int32
      description: Request for creating a notebook instance diagnostic file.
      id: DiagnoseInstanceRequest
      type: object
    UpgradeInstanceRequest:
      properties: {}
      type: object
      id: UpgradeInstanceRequest
      description: Request for upgrading a notebook instance
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      id: TestIamPermissionsRequest
      properties:
        permissions:
          type: array
          description: 'The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).'
          items:
            type: string
      type: object
    ShieldedInstanceConfig:
      properties:
        enableSecureBoot:
          type: boolean
          description: 'Optional. Defines whether the VM instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.'
        enableVtpm:
          type: boolean
          description: Optional. Defines whether the VM instance has the vTPM enabled. Enabled by default.
        enableIntegrityMonitoring:
          type: boolean
          description: Optional. Defines whether the VM instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the VM instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the VM instance is created. Enabled by default.
      id: ShieldedInstanceConfig
      type: object
      description: 'A set of Shielded Instance options. See [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.'
    CheckInstanceUpgradabilityResponse:
      properties:
        upgradeVersion:
          description: The version this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true.
          type: string
        upgradeable:
          type: boolean
          description: If an instance is upgradeable.
        upgradeImage:
          type: string
          description: The new image self link this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true.
        upgradeInfo:
          description: Additional information about upgrade.
          type: string
      id: CheckInstanceUpgradabilityResponse
      type: object
      description: Response for checking if a notebook instance is upgradeable.
    Instance:
      description: The definition of a notebook instance.
      id: Instance
      type: object
      properties:
        proxyUri:
          readOnly: true
          type: string
          description: Output only. The proxy endpoint that is used to access the Jupyter notebook.
        name:
          description: 'Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`'
          readOnly: true
          type: string
        updateTime:
          format: google-datetime
          description: Output only. Instance update time.
          type: string
          readOnly: true
        state:
          type: string
          enumDescriptions:
            - State is not specified.
            - The control logic is starting the instance.
            - The control logic is installing required frameworks and registering the instance with notebook proxy
            - The instance is running.
            - The control logic is stopping the instance.
            - The instance is stopped.
            - The instance is deleted.
            - The instance is upgrading.
            - The instance is being created.
            - The instance is suspending.
            - The instance is suspended.
          description: Output only. The state of this instance.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - STARTING
            - PROVISIONING
            - ACTIVE
            - STOPPING
            - STOPPED
            - DELETED
            - UPGRADING
            - INITIALIZING
            - SUSPENDING
            - SUSPENDED
        createTime:
          description: Output only. Instance creation time.
          format: google-datetime
          readOnly: true
          type: string
        creator:
          type: string
          description: Output only. Email address of entity that sent original CreateInstance request.
          readOnly: true
        healthInfo:
          additionalProperties:
            type: string
          description: 'Output only. Additional information about instance health. Example: healthInfo": { "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }'
          readOnly: true
          type: object
        disableProxyAccess:
          description: 'Optional. If true, the notebook instance will not register with the proxy.'
          type: boolean
        gceSetup:
          $ref: '#/components/schemas/GceSetup'
          description: Optional. Compute Engine setup for the notebook. Uses notebook-defined fields.
        healthState:
          enumDescriptions:
            - The instance substate is unknown.
            - 'The instance is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.'
            - 'The instance is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.'
            - The instance has not installed health monitoring agent. Applies to ACTIVE state.
            - The instance health monitoring agent is not running. Applies to ACTIVE state.
          type: string
          description: Output only. Instance health_state.
          readOnly: true
          enum:
            - HEALTH_STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - AGENT_NOT_INSTALLED
            - AGENT_NOT_RUNNING
        labels:
          description: Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance method.
          type: object
          additionalProperties:
            type: string
        upgradeHistory:
          items:
            $ref: '#/components/schemas/UpgradeHistoryEntry'
          readOnly: true
          description: Output only. The upgrade history of this instance.
          type: array
        instanceOwners:
          items:
            type: string
          description: 'Optional. Input only. The owner of this instance after creation. Format: `alias@example.com` Currently supports one owner only. If not specified, all of the service account users of your VM instance''s service account can use the instance.'
          type: array
        id:
          type: string
          description: Output only. Unique ID of the resource.
          readOnly: true
    ListLocationsResponse:
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
          type: array
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
    Binding:
      description: 'Associates `members`, or principals, with a `role`.'
      properties:
        members:
          type: array
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.'
          items:
            type: string
        role:
          description: 'Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
          type: string
        condition:
          $ref: '#/components/schemas/Expr'
          description: 'The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
      id: Binding
      type: object
    ReportInstanceInfoSystemRequest:
      id: ReportInstanceInfoSystemRequest
      type: object
      properties:
        event:
          description: Required. The Event to be reported.
          $ref: '#/components/schemas/Event'
        vmId:
          type: string
          description: 'Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity'
      description: Request for notebook instances to report information to Notebooks API.
    ResetInstanceRequest:
      id: ResetInstanceRequest
      description: Request for resetting a notebook instance
      type: object
      properties: {}
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      type: object
      properties:
        statusMessage:
          description: 'Human-readable status of the operation, if any.'
          type: string
        apiVersion:
          description: API version used to start the operation.
          type: string
        verb:
          type: string
          description: Name of the verb executed by the operation.
        endpoint:
          type: string
          description: API endpoint name of this operation.
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        endTime:
          format: google-datetime
          description: The time the operation finished running.
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
        requestedCancellation:
          type: boolean
          description: 'Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
    ListOperationsResponse:
      type: object
      id: ListOperationsResponse
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Operations.ListOperations.
    Location:
      type: object
      description: A resource that represents a Google Cloud location.
      id: Location
      properties:
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        labels:
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
    BootDisk:
      id: BootDisk
      type: object
      properties:
        diskEncryption:
          type: string
          description: 'Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.'
          enum:
            - DISK_ENCRYPTION_UNSPECIFIED
            - GMEK
            - CMEK
          enumDescriptions:
            - Disk encryption is not specified.
            - Use Google managed encryption keys to encrypt the boot disk.
            - Use customer managed encryption keys to encrypt the boot disk.
        kmsKey:
          type: string
          description: 'Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about using your own encryption keys.'
        diskSizeGb:
          description: 'Optional. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). If not specified, this defaults to the recommended value of 150GB.'
          format: int64
          type: string
        diskType:
          enumDescriptions:
            - Disk type not set.
            - Standard persistent disk type.
            - SSD persistent disk type.
            - Balanced persistent disk type.
            - Extreme persistent disk type.
          enum:
            - DISK_TYPE_UNSPECIFIED
            - PD_STANDARD
            - PD_SSD
            - PD_BALANCED
            - PD_EXTREME
          description: Optional. Indicates the type of the disk.
          type: string
      description: The definition of a boot disk.
    RollbackInstanceRequest:
      id: RollbackInstanceRequest
      properties:
        revisionId:
          readOnly: true
          description: Required. Output only. Revision Id
          type: string
        targetSnapshot:
          type: string
          description: 'Required. The snapshot for rollback. Example: "projects/test-project/global/snapshots/krwlzipynril".'
      description: Request for rollbacking a notebook instance
      type: object
    Expr:
      properties:
        location:
          type: string
          description: 'Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.'
        title:
          type: string
          description: 'Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.'
        description:
          description: 'Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.'
          type: string
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      id: Expr
      type: object
    StartInstanceRequest:
      type: object
      description: Request for starting a notebook instance
      id: StartInstanceRequest
      properties: {}
    DataDisk:
      id: DataDisk
      type: object
      properties:
        diskSizeGb:
          type: string
          description: 'Optional. The size of the disk in GB attached to this VM instance, up to a maximum of 64000 GB (64 TB). If not specified, this defaults to 100.'
          format: int64
        diskEncryption:
          enumDescriptions:
            - Disk encryption is not specified.
            - Use Google managed encryption keys to encrypt the boot disk.
            - Use customer managed encryption keys to encrypt the boot disk.
          type: string
          enum:
            - DISK_ENCRYPTION_UNSPECIFIED
            - GMEK
            - CMEK
          description: 'Optional. Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.'
        kmsKey:
          description: 'Optional. Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about using your own encryption keys.'
          type: string
        diskType:
          enumDescriptions:
            - Disk type not set.
            - Standard persistent disk type.
            - SSD persistent disk type.
            - Balanced persistent disk type.
            - Extreme persistent disk type.
          type: string
          description: Optional. Input only. Indicates the type of the disk.
          enum:
            - DISK_TYPE_UNSPECIFIED
            - PD_STANDARD
            - PD_SSD
            - PD_BALANCED
            - PD_EXTREME
      description: An instance-attached disk resource.
    UpgradeHistoryEntry:
      id: UpgradeHistoryEntry
      description: The entry of VM image upgrade history.
      type: object
      properties:
        framework:
          description: Optional. The framework of this notebook instance.
          type: string
        targetVersion:
          type: string
          description: 'Optional. Target VM Version, like m63.'
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
          description: Output only. The state of this instance upgrade history entry.
          readOnly: true
          enumDescriptions:
            - State is not specified.
            - The instance upgrade is started.
            - The instance upgrade is succeeded.
            - The instance upgrade is failed.
        createTime:
          type: string
          format: google-datetime
          description: Immutable. The time that this instance upgrade history entry is created.
        vmImage:
          type: string
          description: Optional. The VM image before this instance upgrade.
        version:
          description: Optional. The version of the notebook instance before this upgrade.
          type: string
        action:
          enumDescriptions:
            - Operation is not specified.
            - Upgrade.
            - Rollback.
          description: Optional. Action. Rolloback or Upgrade.
          enum:
            - ACTION_UNSPECIFIED
            - UPGRADE
            - ROLLBACK
          type: string
        containerImage:
          description: Optional. The container image before this instance upgrade.
          type: string
        snapshot:
          type: string
          description: Optional. The snapshot of the boot disk of this notebook instance before upgrade.
    Empty:
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
    Operation:
      properties:
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
      type: object
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    GPUDriverConfig:
      description: A GPU driver configuration
      type: object
      properties:
        customGpuDriverPath:
          description: 'Optional. Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we''ll automatically choose from official GPU drivers.'
          type: string
        enableGpuDriver:
          description: 'Optional. Whether the end user authorizes Google Cloud to install GPU driver on this VM instance. If this field is empty or set to false, the GPU driver won''t be installed. Only applicable to instances with GPUs.'
          type: boolean
      id: GPUDriverConfig
    TestIamPermissionsResponse:
      type: object
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
    Policy:
      id: Policy
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      type: object
      properties:
        bindings:
          items:
            $ref: '#/components/schemas/Binding'
          type: array
          description: 'Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.'
        etag:
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
        version:
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          format: int32
          type: integer
    GceSetup:
      properties:
        shieldedInstanceConfig:
          description: 'Optional. Shielded VM configuration. [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).'
          $ref: '#/components/schemas/ShieldedInstanceConfig'
        bootDisk:
          $ref: '#/components/schemas/BootDisk'
          description: Optional. The boot disk for the VM.
        enableIpForwarding:
          description: 'Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward'
          type: boolean
        machineType:
          description: 'Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource'
          type: string
        tags:
          items:
            type: string
          description: 'Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).'
          type: array
        vmImage:
          description: Optional. Use a Compute Engine VM image to start the notebook instance.
          $ref: '#/components/schemas/VmImage'
        dataDisks:
          description: Optional. Data disks attached to the VM instance. Currently supports only one data disk.
          type: array
          items:
            $ref: '#/components/schemas/DataDisk'
        serviceAccounts:
          type: array
          description: Optional. The service account that serves as an identity for the VM instance. Currently supports only one service account.
          items:
            $ref: '#/components/schemas/ServiceAccount'
        networkInterfaces:
          description: Optional. The network interfaces for the VM. Supports only one interface.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
        containerImage:
          $ref: '#/components/schemas/ContainerImage'
          description: Optional. Use a container image to start the notebook instance.
        disablePublicIp:
          type: boolean
          description: 'Optional. If true, no external IP will be assigned to this VM instance.'
        metadata:
          type: object
          description: Optional. Custom metadata to apply to this instance.
          additionalProperties:
            type: string
        acceleratorConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
          description: 'Optional. The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has [enough vCPUs and memory to support the `machine_type` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list). Currently supports only one accelerator configuration.'
        gpuDriverConfig:
          $ref: '#/components/schemas/GPUDriverConfig'
          description: Optional. Configuration for GPU drivers.
      type: object
      id: GceSetup
      description: The definition of how to configure a VM instance outside of Resources and Identity.
    VmImage:
      properties:
        project:
          type: string
          description: 'Required. The name of the Google Cloud project that this VM image belongs to. Format: `{project_id}`'
        name:
          description: Optional. Use VM image name to find the image.
          type: string
        family:
          description: Optional. Use this VM image family to find the image; the newest image in this family will be used.
          type: string
      description: Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.
      id: VmImage
      type: object
    SetIamPolicyRequest:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy'
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
    StopInstanceRequest:
      type: object
      properties: {}
      id: StopInstanceRequest
      description: Request for stopping a notebook instance
    ServiceAccount:
      id: ServiceAccount
      type: object
      properties:
        email:
          description: Optional. Email address of the service account.
          type: string
        scopes:
          type: array
          readOnly: true
          items:
            type: string
          description: 'Output only. The list of scopes to be made available for this service account. Set by the CLH to https://www.googleapis.com/auth/cloud-platform'
      description: A service account that acts as an identity.
    Event:
      properties:
        type:
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - IDLE
            - HEARTBEAT
            - HEALTH
            - MAINTENANCE
            - METADATA_CHANGE
          description: Optional. Event type.
          type: string
          enumDescriptions:
            - Event is not specified.
            - The instance / runtime is idle
            - The instance / runtime is available. This event indicates that instance / runtime underlying compute is operational.
            - The instance / runtime health is available. This event indicates that instance / runtime health information.
            - 'The instance / runtime is available. This event allows instance / runtime to send Host maintenance information to Control Plane. https://cloud.google.com/compute/docs/gpus/gpu-host-maintenance'
            - The instance / runtime is available. This event indicates that the instance had metadata that needs to be modified.
        details:
          additionalProperties:
            type: string
          type: object
          description: Optional. Event details. This field is used to pass event information.
        reportTime:
          description: Optional. Event report time.
          format: google-datetime
          type: string
      description: The definition of an Event for a managed / semi-managed notebook instance.
      type: object
      id: Event
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      type: object
      id: CancelOperationRequest
      properties: {}
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        code:
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
    DiagnosticConfig:
      id: DiagnosticConfig
      properties:
        enableCopyHomeFilesFlag:
          type: boolean
          description: Optional. Enables flag to copy all `/home/jupyter` folder contents
        gcsBucket:
          description: 'Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (`gs://$GCS_BUCKET`). Permissions: User Managed Notebooks: - storage.buckets.writer: Must be given to the project''s service account attached to VM. Google Managed Notebooks: - storage.buckets.writer: Must be given to the project''s service account or user credentials attached to VM depending on authentication mode. Cloud Storage bucket Log file will be written to `gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz`'
          type: string
        enablePacketCaptureFlag:
          description: Optional. Enables flag to capture packets from the instance for 30 seconds
          type: boolean
        enableRepairFlag:
          description: Optional. Enables flag to repair service for instance
          type: boolean
        relativePath:
          type: string
          description: 'Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (`gs://$GCS_BUCKET/$DATE_$TIME.tar.gz`) Example of full path where Log file will be written: `gs://$GCS_BUCKET/$RELATIVE_PATH/`'
      type: object
      description: Defines flags that are used to run the diagnostic tool
    UpgradeInstanceSystemRequest:
      id: UpgradeInstanceSystemRequest
      properties:
        vmId:
          type: string
          description: 'Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity'
      description: Request for upgrading a notebook instance from within the VM
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    locations:
      id: google.notebooks.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.notebooks.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    instances:
      id: google.notebooks.instances
      name: instances
      title: Instances
      methods:
        stop:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgrade/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        report_info_system:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reportInfoSystem/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade_system:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgradeSystem/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        _list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rollback:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rollback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        diagnose:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:diagnose/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_upgradability:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:checkUpgradability/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_iam_policies:
      id: google.notebooks.instances_iam_policies
      name: instances_iam_policies
      title: Instances Iam Policies
      methods:
        test_iam_permissions:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        _get_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_iam_policy:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_iam_policies/methods/get_iam_policy'
        insert: []
        update: []
        delete: []
paths:
  '/v2/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Gets information about a location.
      operationId: notebooks.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: notebooks.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: notebooks.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: notebooks.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: notebooks.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: notebooks.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop':
    parameters: *ref_1
    post:
      description: Stops a notebook instance.
      operationId: notebooks.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: stop
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade':
    parameters: *ref_1
    post:
      description: Upgrades a notebook instance to the latest version.
      operationId: notebooks.projects.locations.instances.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: upgrade
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start':
    parameters: *ref_1
    post:
      description: Starts a notebook instance.
      operationId: notebooks.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: start
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}':
    parameters: *ref_1
    patch:
      description: UpdateInstance updates an Instance.
      operationId: notebooks.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Instance.
      operationId: notebooks.projects.locations.instances.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Instance.
      operationId: notebooks.projects.locations.instances.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reportInfoSystem':
    parameters: *ref_1
    post:
      description: Allows notebook instances to report their latest instance information to the Notebooks API server. The server will merge the reported information to the instance metadata store. Do not use this method directly.
      operationId: notebooks.projects.locations.instances.reportInfoSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportInstanceInfoSystemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: report_info_system
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgradeSystem':
    parameters: *ref_1
    post:
      description: Allows notebook instances to upgrade themselves. Do not use this method directly.
      operationId: notebooks.projects.locations.instances.upgradeSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceSystemRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: upgrade_system
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances':
    parameters: *ref_1
    post:
      description: Creates a new Instance in a given project and location.
      operationId: notebooks.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists instances in a given project and location.
      operationId: notebooks.projects.locations.instances.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: instances
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.instances
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset':
    parameters: *ref_1
    post:
      description: Resets a notebook instance.
      operationId: notebooks.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: reset
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rollback':
    parameters: *ref_1
    post:
      description: Rollbacks a notebook instance to the previous version.
      operationId: notebooks.projects.locations.instances.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: rollback
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:diagnose':
    parameters: *ref_1
    post:
      description: Creates a Diagnostic File and runs Diagnostic Tool given an Instance.
      operationId: notebooks.projects.locations.instances.diagnose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnoseInstanceRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: diagnose
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions':
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: notebooks.projects.locations.instances.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_iam_policies
      x-stackQL-method: test_iam_permissions
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy':
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: notebooks.projects.locations.instances.getIamPolicy
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: instances_iam_policies
      x-stackQL-method: get_iam_policy
      x-stackQL-verb: select
      x-stackQL-objectKey: $.bindings
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:checkUpgradability':
    parameters: *ref_1
    get:
      description: Checks whether a notebook instance is upgradable.
      operationId: notebooks.projects.locations.instances.checkUpgradability
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInstanceUpgradabilityResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-method: check_upgradability
      x-stackQL-verb: exec
  '/v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy':
    parameters: *ref_1
    post:
      description: 'Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.'
      operationId: notebooks.projects.locations.instances.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_iam_policies
      x-stackQL-method: set_iam_policy
      x-stackQL-verb: exec
