openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Notebooks API
  description: Notebooks API is used to manage notebook resources in Google Cloud.
  version: v1
  x-discovery-doc-revision: '20221213'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/notebooks/docs/
servers:
  - url: https://notebooks.googleapis.com
components:
  schemas:
    ReservationAffinity:
      id: ReservationAffinity
      properties:
        key:
          description: Optional. Corresponds to the label key of reservation resource.
          type: string
        values:
          type: array
          items:
            type: string
          description: Optional. Corresponds to the label values of reservation resource.
        consumeReservationType:
          enum:
            - TYPE_UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
          description: Optional. Type of reservation to consume
          type: string
          enumDescriptions:
            - Default type.
            - Do not consume from any allocated capacity.
            - Consume any reservation available.
            - Must consume from a specific reservation. Must specify key value fields for specifying the reservations.
      type: object
      description: Reservation Affinity for consuming Zonal reservation.
    Schedule:
      type: object
      description: The definition of a schedule.
      id: Schedule
      properties:
        state:
          type: string
          enumDescriptions:
            - Unspecified state.
            - The job is executing normally.
            - The job is paused by the user. It will not execute. A user can intentionally pause the job using PauseJobRequest.
            - The job is disabled by the system due to error. The user cannot directly set a job to be disabled.
            - The job state resulting from a failed CloudScheduler.UpdateJob operation. To recover a job from this state, retry CloudScheduler.UpdateJob until a successful response is received.
            - The schedule resource is being created.
            - The schedule resource is being deleted.
          enum:
            - STATE_UNSPECIFIED
            - ENABLED
            - PAUSED
            - DISABLED
            - UPDATE_FAILED
            - INITIALIZING
            - DELETING
        name:
          description: 'Output only. The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`'
          readOnly: true
          type: string
        cronSchedule:
          type: string
          description: 'Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. 0 0 * * WED = every Wednesday More examples: https://crontab.guru/examples.html'
        recentExecutions:
          items:
            $ref: '#/components/schemas/Execution'
          description: Output only. The most recent execution names triggered from this schedule and their corresponding states.
          type: array
          readOnly: true
        description:
          description: A brief description of this environment.
          type: string
        updateTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. Time the schedule was last updated.
        timeZone:
          type: string
          description: 'Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string "utc". If a time zone is not specified, the default will be in UTC (also known as GMT).'
        displayName:
          type: string
          readOnly: true
          description: Output only. Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens '-', and underscores '_'.
        executionTemplate:
          $ref: '#/components/schemas/ExecutionTemplate'
          description: Notebook Execution Template corresponding to this schedule.
        createTime:
          description: Output only. Time the schedule was created.
          type: string
          format: google-datetime
          readOnly: true
    ContainerImage:
      id: ContainerImage
      description: Definition of a container image for starting a notebook instance with the environment installed in a container.
      type: object
      properties:
        tag:
          type: string
          description: The tag of the container image. If not specified, this defaults to the latest tag.
        repository:
          description: 'Required. The path to the container image repository. For example: `gcr.io/{project_id}/{image_name}`'
          type: string
    Location:
      type: object
      id: Location
      description: A resource that represents Google Cloud Platform location.
      properties:
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: Service-specific metadata. For example the available capacity at the given location.
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
    CancelOperationRequest:
      type: object
      description: The request message for Operations.CancelOperation.
      properties: {}
      id: CancelOperationRequest
    ExecutionTemplate:
      type: object
      id: ExecutionTemplate
      description: The description a notebook execution workload.
      properties:
        tensorboard:
          type: string
          description: 'The name of a Vertex AI [Tensorboard] resource to which this execution will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`'
        inputNotebookFile:
          type: string
          description: 'Path to the notebook file to execute. Must be in a Google Cloud Storage bucket. Format: `gs://{bucket_name}/{folder}/{notebook_file_name}` Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook.ipynb`'
        jobType:
          type: string
          enumDescriptions:
            - No type specified.
            - Custom Job in `aiplatform.googleapis.com`. Default value for an execution.
            - Run execution on a cluster with Dataproc as a job. https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs
          description: The type of Job to be used on this execution.
          enum:
            - JOB_TYPE_UNSPECIFIED
            - VERTEX_AI
            - DATAPROC
        masterType:
          description: 'Specifies the type of virtual machine to use for your training job''s master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. The following types are supported: - `n1-standard-4` - `n1-standard-8` - `n1-standard-16` - `n1-standard-32` - `n1-standard-64` - `n1-standard-96` - `n1-highmem-2` - `n1-highmem-4` - `n1-highmem-8` - `n1-highmem-16` - `n1-highmem-32` - `n1-highmem-64` - `n1-highmem-96` - `n1-highcpu-16` - `n1-highcpu-32` - `n1-highcpu-64` - `n1-highcpu-96` Alternatively, you can use the following legacy machine types: - `standard` - `large_model` - `complex_model_s` - `complex_model_m` - `complex_model_l` - `standard_gpu` - `complex_model_m_gpu` - `complex_model_l_gpu` - `standard_p100` - `complex_model_m_p100` - `standard_v100` - `large_model_v100` - `complex_model_m_v100` - `complex_model_l_v100` Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPU](https://cloud.google.com/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).'
          type: string
        containerImageUri:
          description: 'Container Image URI to a DLVM Example: ''gcr.io/deeplearning-platform-release/base-cu100'' More examples can be found at: https://cloud.google.com/ai-platform/deep-learning-containers/docs/choosing-container'
          type: string
        paramsYamlFile:
          type: string
          description: 'Parameters to be overridden in the notebook during execution. Ref https://papermill.readthedocs.io/en/latest/usage-parameterize.html on how to specifying parameters in the input notebook and pass them here in an YAML file. Ex: `gs://notebook_user/scheduled_notebooks/sentiment_notebook_params.yaml`'
        vertexAiParameters:
          $ref: '#/components/schemas/VertexAIParameters'
          description: Parameters used in Vertex AI JobType executions.
        kernelSpec:
          type: string
          description: Name of the kernel spec to use. This must be specified if the kernel spec name on the execution target does not match the name in the input notebook file.
        scaleTier:
          type: string
          description: Required. Scale tier of the hardware used for notebook execution. DEPRECATED Will be discontinued. As right now only CUSTOM is supported.
          enum:
            - SCALE_TIER_UNSPECIFIED
            - BASIC
            - STANDARD_1
            - PREMIUM_1
            - BASIC_GPU
            - BASIC_TPU
            - CUSTOM
          enumDescriptions:
            - Unspecified Scale Tier.
            - A single worker instance. This tier is suitable for learning how to use Cloud ML, and for experimenting with new models using small datasets.
            - Many workers and a few parameter servers.
            - A large number of workers with many parameter servers.
            - A single worker instance with a K80 GPU.
            - A single worker instance with a Cloud TPU.
            - 'The CUSTOM tier is not a set tier, but rather enables you to use your own cluster specification. When you use this tier, set values to configure your processing cluster according to these guidelines: * You _must_ set `ExecutionTemplate.masterType` to specify the type of machine to use for your master node. This is the only required setting.'
        outputNotebookFolder:
          description: 'Path to the notebook folder to write to. Must be in a Google Cloud Storage bucket path. Format: `gs://{bucket_name}/{folder}` Ex: `gs://notebook_user/scheduled_notebooks`'
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels for execution. If execution is scheduled, a field included will be 'nbs-scheduled'. Otherwise, it is an immediate execution, and an included field will be 'nbs-immediate'. Use fields to efficiently index between various types of executions.
          type: object
        serviceAccount:
          description: The email address of a service account to use when running the execution. You must have the `iam.serviceAccounts.actAs` permission for the specified service account.
          type: string
        dataprocParameters:
          description: Parameters used in Dataproc JobType executions.
          $ref: '#/components/schemas/DataprocParameters'
        acceleratorConfig:
          description: Configuration (count and accelerator type) for hardware running notebook execution.
          $ref: '#/components/schemas/SchedulerAcceleratorConfig'
        parameters:
          type: string
          description: Parameters used within the 'input_notebook_file' notebook.
    Status:
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        details:
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
    Instance:
      description: The definition of a notebook instance.
      id: Instance
      type: object
      properties:
        installGpuDriver:
          type: boolean
          description: Whether the end user authorizes Google Cloud to install GPU driver on this instance. If this field is empty or set to false, the GPU driver won't be installed. Only applicable to instances with GPUs.
        metadata:
          description: Custom metadata to apply to this instance.
          type: object
          additionalProperties:
            type: string
        name:
          readOnly: true
          type: string
          description: 'Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`'
        serviceAccountScopes:
          type: array
          description: 'Optional. The URIs of service account scopes to be included in Compute Engine instances. If not specified, the following [scopes](https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam) are defined: - https://www.googleapis.com/auth/cloud-platform - https://www.googleapis.com/auth/userinfo.email If not using default scopes, you need at least: https://www.googleapis.com/auth/compute'
          items:
            type: string
        vmImage:
          description: Use a Compute Engine VM image to start the notebook instance.
          $ref: '#/components/schemas/VmImage'
        network:
          type: string
          description: 'The name of the VPC that this instance is in. Format: `projects/{project_id}/global/networks/{network_id}`'
        shieldedInstanceConfig:
          $ref: '#/components/schemas/ShieldedInstanceConfig'
          description: Optional. Shielded VM configuration. [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
        subnet:
          description: 'The name of the subnet that this instance is in. Format: `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`'
          type: string
        upgradeHistory:
          items:
            $ref: '#/components/schemas/UpgradeHistoryEntry'
          description: The upgrade history of this instance.
          type: array
        acceleratorConfig:
          $ref: '#/components/schemas/AcceleratorConfig'
          description: The hardware accelerator used on this instance. If you use accelerators, make sure that your configuration has [enough vCPUs and memory to support the `machine_type` you have selected](/compute/docs/gpus/#gpus-list).
        dataDiskSizeGb:
          type: string
          description: Input only. The size of the data disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). You can choose the size of the data disk based on how big your notebooks and data are. If not specified, this defaults to 100.
          format: int64
        creator:
          type: string
          description: Output only. Email address of entity that sent original CreateInstance request.
          readOnly: true
        noRemoveDataDisk:
          type: boolean
          description: Input only. If true, the data disk will not be auto deleted when deleting the instance.
        customGpuDriverPath:
          type: string
          description: Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.
        proxyUri:
          type: string
          description: Output only. The proxy endpoint that is used to access the Jupyter notebook.
          readOnly: true
        containerImage:
          description: Use a container image to start the notebook instance.
          $ref: '#/components/schemas/ContainerImage'
        serviceAccount:
          description: The service account on this instance, giving access to other Google Cloud services. You can use any service account within the same project, but you must have the service account user permission to use the instance. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
          type: string
        noPublicIp:
          type: boolean
          description: If true, no public IP will be assigned to this instance.
        state:
          type: string
          enumDescriptions:
            - State is not specified.
            - The control logic is starting the instance.
            - The control logic is installing required frameworks and registering the instance with notebook proxy
            - The instance is running.
            - The control logic is stopping the instance.
            - The instance is stopped.
            - The instance is deleted.
            - The instance is upgrading.
            - The instance is being created.
            - The instance is getting registered.
            - The instance is suspending.
            - The instance is suspended.
          description: Output only. The state of this instance.
          enum:
            - STATE_UNSPECIFIED
            - STARTING
            - PROVISIONING
            - ACTIVE
            - STOPPING
            - STOPPED
            - DELETED
            - UPGRADING
            - INITIALIZING
            - REGISTERING
            - SUSPENDING
            - SUSPENDED
          readOnly: true
        diskEncryption:
          enumDescriptions:
            - Disk encryption is not specified.
            - Use Google managed encryption keys to encrypt the boot disk.
            - Use customer managed encryption keys to encrypt the boot disk.
          enum:
            - DISK_ENCRYPTION_UNSPECIFIED
            - GMEK
            - CMEK
          type: string
          description: Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.
        machineType:
          type: string
          description: Required. The [Compute Engine machine type](/compute/docs/machine-types) of this instance.
        dataDiskType:
          enum:
            - DISK_TYPE_UNSPECIFIED
            - PD_STANDARD
            - PD_SSD
            - PD_BALANCED
            - PD_EXTREME
          type: string
          description: Input only. The type of the data disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).
          enumDescriptions:
            - Disk type not set.
            - Standard persistent disk type.
            - SSD persistent disk type.
            - Balanced persistent disk type.
            - Extreme persistent disk type.
        bootDiskSizeGb:
          format: int64
          description: Input only. The size of the boot disk in GB attached to this instance, up to a maximum of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not specified, this defaults to 100.
          type: string
        postStartupScript:
          type: string
          description: Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`).
        disks:
          items:
            $ref: '#/components/schemas/Disk'
          type: array
          readOnly: true
          description: Output only. Attached disks to notebook instance.
        noProxyAccess:
          type: boolean
          description: If true, the notebook instance will not register with the proxy.
        instanceOwners:
          type: array
          items:
            type: string
          description: 'Input only. The owner of this instance after creation. Format: `alias@example.com` Currently supports one owner only. If not specified, all of the service account users of your VM instance''s service account can use the instance.'
        bootDiskType:
          enumDescriptions:
            - Disk type not set.
            - Standard persistent disk type.
            - SSD persistent disk type.
            - Balanced persistent disk type.
            - Extreme persistent disk type.
          type: string
          description: Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).
          enum:
            - DISK_TYPE_UNSPECIFIED
            - PD_STANDARD
            - PD_SSD
            - PD_BALANCED
            - PD_EXTREME
        reservationAffinity:
          description: Optional. The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this notebook instance.
          $ref: '#/components/schemas/ReservationAffinity'
        nicType:
          type: string
          enumDescriptions:
            - No type specified.
            - VIRTIO
            - GVNIC
          enum:
            - UNSPECIFIED_NIC_TYPE
            - VIRTIO_NET
            - GVNIC
          description: Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
        labels:
          description: Labels to apply to this instance. These can be later modified by the setLabels method.
          type: object
          additionalProperties:
            type: string
        updateTime:
          readOnly: true
          description: Output only. Instance update time.
          type: string
          format: google-datetime
        canIpForward:
          type: boolean
          description: Optional. Flag to enable ip forwarding or not, default false/off. https://cloud.google.com/vpc/docs/using-routes#canipforward
        kmsKey:
          description: 'Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption is CMEK. Format: `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}` Learn more about [using your own encryption keys](/kms/docs/quickstart).'
          type: string
        createTime:
          readOnly: true
          type: string
          description: Output only. Instance creation time.
          format: google-datetime
        tags:
          items:
            type: string
          description: Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
          type: array
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      type: object
      id: ListLocationsResponse
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
          type: array
        nextPageToken:
          type: string
          description: The standard List next-page token.
    Environment:
      type: object
      description: Definition of a software environment that is used to start a notebook instance.
      properties:
        postStartupScript:
          description: 'Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path. Example: `"gs://path-to-file/file-name"`'
          type: string
        containerImage:
          description: Use a container image to start the notebook instance.
          $ref: '#/components/schemas/ContainerImage'
        description:
          type: string
          description: A brief description of this environment.
        vmImage:
          $ref: '#/components/schemas/VmImage'
          description: Use a Compute Engine VM image to start the notebook instance.
        name:
          type: string
          readOnly: true
          description: 'Output only. Name of this environment. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`'
        displayName:
          description: Display name of this environment for the UI.
          type: string
        createTime:
          type: string
          description: Output only. The time at which this environment was created.
          format: google-datetime
          readOnly: true
      id: Environment
    ShieldedInstanceConfig:
      description: A set of Shielded Instance options. Check [Images using supported Shielded VM features] Not all combinations are valid.
      properties:
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.
          type: boolean
        enableIntegrityMonitoring:
          type: boolean
          description: Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.
        enableVtpm:
          description: Defines whether the instance has the vTPM enabled. Enabled by default.
          type: boolean
      id: ShieldedInstanceConfig
      type: object
    LocalDiskInitializeParams:
      id: LocalDiskInitializeParams
      description: Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new runtime. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
      type: object
      properties:
        diskSizeGb:
          description: Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.
          format: int64
          type: string
        diskType:
          type: string
          enum:
            - DISK_TYPE_UNSPECIFIED
            - PD_STANDARD
            - PD_SSD
            - PD_BALANCED
            - PD_EXTREME
          enumDescriptions:
            - Disk type not set.
            - Standard persistent disk type.
            - SSD persistent disk type.
            - Balanced persistent disk type.
            - Extreme persistent disk type.
          description: Input only. The type of the boot disk attached to this instance, defaults to standard persistent disk (`PD_STANDARD`).
        diskName:
          type: string
          description: Optional. Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.
        description:
          description: Optional. Provide this property when creating the disk.
          type: string
        labels:
          description: Optional. Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks.
          additionalProperties:
            type: string
          type: object
    SchedulerAcceleratorConfig:
      properties:
        type:
          enumDescriptions:
            - Unspecified accelerator type. Default to no GPU.
            - Nvidia Tesla K80 GPU.
            - Nvidia Tesla P100 GPU.
            - Nvidia Tesla V100 GPU.
            - Nvidia Tesla P4 GPU.
            - Nvidia Tesla T4 GPU.
            - Nvidia Tesla A100 GPU.
            - TPU v2.
            - TPU v3.
          description: Type of this accelerator.
          enum:
            - SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_K80
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - TPU_V2
            - TPU_V3
          type: string
        coreCount:
          description: Count of cores of this accelerator.
          format: int64
          type: string
      type: object
      id: SchedulerAcceleratorConfig
      description: Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus) to find a valid combination. TPUs are not supported.
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.'
          $ref: '#/components/schemas/Policy'
      type: object
      id: SetIamPolicyRequest
    LocalDisk:
      type: object
      properties:
        deviceName:
          readOnly: true
          description: Optional. Output only. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
          type: string
        type:
          type: string
          description: 'Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT. Valid values: * PERSISTENT * SCRATCH'
        mode:
          description: 'The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode. Valid values: * READ_ONLY * READ_WRITE'
          type: string
        kind:
          readOnly: true
          type: string
          description: Output only. Type of the resource. Always compute#attachedDisk for attached disks.
        initializeParams:
          description: Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
          $ref: '#/components/schemas/LocalDiskInitializeParams'
        guestOsFeatures:
          type: array
          items:
            $ref: '#/components/schemas/RuntimeGuestOsFeature'
          readOnly: true
          description: Output only. Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
        source:
          type: string
          description: Specifies a valid partial or full URL to an existing Persistent Disk resource.
        interface:
          description: 'Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI'
          type: string
        boot:
          type: boolean
          description: Optional. Output only. Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
          readOnly: true
        licenses:
          items:
            type: string
          readOnly: true
          description: Output only. Any valid publicly visible licenses.
          type: array
        index:
          type: integer
          format: int32
          description: Output only. A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.
          readOnly: true
        autoDelete:
          type: boolean
          description: Optional. Output only. Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
          readOnly: true
      description: A Local attached disk resource.
      id: LocalDisk
    Expr:
      id: Expr
      type: object
      description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
      properties:
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
    Disk:
      properties:
        deviceName:
          type: string
          description: Indicates a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine.This field is only applicable for persistent disks.
        source:
          description: Indicates a valid partial or full URL to an existing Persistent Disk resource.
          type: string
        licenses:
          items:
            type: string
          type: array
          description: A list of publicly visible licenses. Reserved for Google's use. A License represents billing and aggregate usage data for public and marketplace images.
        autoDelete:
          description: Indicates whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
          type: boolean
        type:
          description: 'Indicates the type of the disk, either SCRATCH or PERSISTENT. Valid values: * PERSISTENT * SCRATCH'
          type: string
        kind:
          description: Type of the resource. Always compute#attachedDisk for attached disks.
          type: string
        mode:
          description: 'The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode. Valid values: * READ_ONLY * READ_WRITE'
          type: string
        guestOsFeatures:
          items:
            $ref: '#/components/schemas/GuestOsFeature'
          description: Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
          type: array
        interface:
          description: 'Indicates the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI'
          type: string
        boot:
          description: Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
          type: boolean
        diskSizeGb:
          type: string
          description: Indicates the size of the disk in base-2 GB.
          format: int64
        index:
          description: A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.
          type: string
          format: int64
      description: An instance-attached disk resource.
      id: Disk
      type: object
    ListExecutionsResponse:
      description: Response for listing scheduled notebook executions
      properties:
        unreachable:
          type: array
          description: 'Executions IDs that could not be reached. For example: [''projects/{project_id}/location/{location}/executions/imagenet_test1'', ''projects/{project_id}/location/{location}/executions/classifier_train1'']'
          items:
            type: string
        executions:
          type: array
          description: A list of returned instances.
          items:
            $ref: '#/components/schemas/Execution'
        nextPageToken:
          description: Page token that can be used to continue listing from the last result in the next list call.
          type: string
      id: ListExecutionsResponse
      type: object
    Runtime:
      id: Runtime
      properties:
        createTime:
          description: Output only. Runtime creation time.
          format: google-datetime
          type: string
          readOnly: true
        state:
          enum:
            - STATE_UNSPECIFIED
            - STARTING
            - PROVISIONING
            - ACTIVE
            - STOPPING
            - STOPPED
            - DELETING
            - UPGRADING
            - INITIALIZING
          readOnly: true
          description: Output only. Runtime state.
          type: string
          enumDescriptions:
            - State is not specified.
            - The compute layer is starting the runtime. It is not ready for use.
            - The compute layer is installing required frameworks and registering the runtime with notebook proxy. It cannot be used.
            - The runtime is currently running. It is ready for use.
            - The control logic is stopping the runtime. It cannot be used.
            - The runtime is stopped. It cannot be used.
            - The runtime is being deleted. It cannot be used.
            - The runtime is upgrading. It cannot be used.
            - The runtime is being created and set up. It is not ready for use.
        healthState:
          enumDescriptions:
            - The runtime substate is unknown.
            - The runtime is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.
            - The runtime is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.
            - The runtime has not installed health monitoring agent. Applies to ACTIVE state.
            - The runtime health monitoring agent is not running. Applies to ACTIVE state.
          type: string
          enum:
            - HEALTH_STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - AGENT_NOT_INSTALLED
            - AGENT_NOT_RUNNING
          readOnly: true
          description: Output only. Runtime health_state.
        updateTime:
          readOnly: true
          description: Output only. Runtime update time.
          type: string
          format: google-datetime
        virtualMachine:
          $ref: '#/components/schemas/VirtualMachine'
          description: Use a Compute Engine VM image to start the managed notebook instance.
        accessConfig:
          $ref: '#/components/schemas/RuntimeAccessConfig'
          description: The config settings for accessing runtime.
        softwareConfig:
          description: The config settings for software inside the runtime.
          $ref: '#/components/schemas/RuntimeSoftwareConfig'
        metrics:
          description: Output only. Contains Runtime daemon metrics such as Service status and JupyterLab stats.
          readOnly: true
          $ref: '#/components/schemas/RuntimeMetrics'
        name:
          type: string
          description: 'Output only. The resource name of the runtime. Format: `projects/{project}/locations/{location}/runtimes/{runtimeId}`'
          readOnly: true
      type: object
      description: The definition of a Runtime for a managed notebook instance.
    RegisterInstanceRequest:
      properties:
        instanceId:
          description: Required. User defined unique ID of this instance. The `instance_id` must be 1 to 63 characters long and contain only lowercase letters, numeric characters, and dashes. The first character must be a lowercase letter and the last character cannot be a dash.
          type: string
      id: RegisterInstanceRequest
      type: object
      description: Request for registering a notebook instance.
    StopInstanceRequest:
      id: StopInstanceRequest
      type: object
      description: Request for stopping a notebook instance
      properties: {}
    GuestOsFeature:
      id: GuestOsFeature
      type: object
      description: Guest OS features for boot disk.
      properties:
        type:
          description: 'The ID of a supported feature. Read Enabling guest operating system features to see a list of available options. Valid values: * FEATURE_TYPE_UNSPECIFIED * MULTI_IP_SUBNET * SECURE_BOOT * UEFI_COMPATIBLE * VIRTIO_SCSI_MULTIQUEUE * WINDOWS'
          type: string
    UpdateInstanceMetadataItemsRequest:
      type: object
      id: UpdateInstanceMetadataItemsRequest
      properties:
        items:
          description: Metadata items to add/update for the instance.
          additionalProperties:
            type: string
          type: object
      description: Request for adding/changing metadata items for an instance.
    SetInstanceMachineTypeRequest:
      type: object
      description: Request for setting instance machine type.
      id: SetInstanceMachineTypeRequest
      properties:
        machineType:
          description: Required. The [Compute Engine machine type](https://cloud.google.com/compute/docs/machine-types).
          type: string
    UpdateInstanceMetadataItemsResponse:
      description: Response for adding/changing metadata items for an instance.
      type: object
      properties:
        items:
          type: object
          description: Map of items that were added/updated to/in the metadata.
          additionalProperties:
            type: string
      id: UpdateInstanceMetadataItemsResponse
    SetInstanceLabelsRequest:
      type: object
      description: Request for setting instance labels.
      id: SetInstanceLabelsRequest
      properties:
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this instance. These can be later modified by the setLabels method
          type: object
    TriggerScheduleRequest:
      id: TriggerScheduleRequest
      properties: {}
      type: object
      description: Request for created scheduled notebooks
    VmImage:
      id: VmImage
      properties:
        imageName:
          description: Use VM image name to find the image.
          type: string
        imageFamily:
          description: Use this VM image family to find the image; the newest image in this family will be used.
          type: string
        project:
          description: 'Required. The name of the Google Cloud project that this VM image belongs to. Format: `{project_id}`'
          type: string
      type: object
      description: Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.
    RuntimeGuestOsFeature:
      description: Optional. A list of features to enable on the guest operating system. Applicable only for bootable images. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options. Guest OS features for boot disk.
      type: object
      id: RuntimeGuestOsFeature
      properties:
        type:
          description: 'The ID of a supported feature. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options. Valid values: * FEATURE_TYPE_UNSPECIFIED * MULTI_IP_SUBNET * SECURE_BOOT * UEFI_COMPATIBLE * VIRTIO_SCSI_MULTIQUEUE * WINDOWS'
          type: string
    StartInstanceRequest:
      id: StartInstanceRequest
      type: object
      properties: {}
      description: Request for starting a notebook instance
    VertexAIParameters:
      id: VertexAIParameters
      properties:
        network:
          description: The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.
          type: string
        env:
          additionalProperties:
            type: string
          description: 'Environment variables. At most 100 environment variables can be specified and unique. Example: GCP_BUCKET=gs://my-bucket/samples/'
          type: object
      type: object
      description: Parameters used in Vertex AI JobType executions.
    ListOperationsResponse:
      type: object
      description: The response message for Operations.ListOperations.
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          type: string
          description: The standard List next-page token.
      id: ListOperationsResponse
    Execution:
      type: object
      description: The definition of a single executed notebook.
      id: Execution
      properties:
        state:
          enumDescriptions:
            - The job state is unspecified.
            - The job has been just created and processing has not yet begun.
            - The service is preparing to execution the job.
            - The job is in progress.
            - The job completed successfully.
            - The job failed. `error_message` should contain the details of the failure.
            - The job is being cancelled. `error_message` should describe the reason for the cancellation.
            - The job has been cancelled. `error_message` should describe the reason for the cancellation.
            - The job has become expired (relevant to Vertex AI jobs) https://cloud.google.com/vertex-ai/docs/reference/rest/v1/JobState
            - The Execution is being created.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - QUEUED
            - PREPARING
            - RUNNING
            - SUCCEEDED
            - FAILED
            - CANCELLING
            - CANCELLED
            - EXPIRED
            - INITIALIZING
          description: Output only. State of the underlying AI Platform job.
          type: string
        jobUri:
          readOnly: true
          description: Output only. The URI of the external job used to execute the notebook.
          type: string
        name:
          readOnly: true
          description: 'Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`'
          type: string
        outputNotebookFile:
          description: Output notebook file generated by this execution
          type: string
        displayName:
          type: string
          description: Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
          readOnly: true
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. Time the Execution was instantiated.
        executionTemplate:
          description: execute metadata including name, hardware spec, region, labels, etc.
          $ref: '#/components/schemas/ExecutionTemplate'
        updateTime:
          description: Output only. Time the Execution was last updated.
          type: string
          format: google-datetime
          readOnly: true
        description:
          type: string
          description: A brief description of this execution.
    StopRuntimeRequest:
      description: Request for stopping a Managed Notebook Runtime.
      type: object
      id: StopRuntimeRequest
      properties:
        requestId:
          description: Idempotent request UUID.
          type: string
    VirtualMachineConfig:
      id: VirtualMachineConfig
      properties:
        shieldedInstanceConfig:
          description: Optional. Shielded VM Instance configuration settings.
          $ref: '#/components/schemas/RuntimeShieldedInstanceConfig'
        reservedIpRange:
          type: string
          description: 'Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it''s assigned. Example: managed-notebooks-range-c PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \ --global \ --prefix-length=24 \ --description="Google Cloud Managed Notebooks Range 24 c" \ --network=$NETWORK \ --addresses=192.168.0.0 \ --purpose=VPC_PEERING Field value will be: `managed-notebooks-range-c`'
        subnet:
          description: 'Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0`'
          type: string
        metadata:
          description: Optional. The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
          type: object
          additionalProperties:
            type: string
        labels:
          type: object
          description: Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
          additionalProperties:
            type: string
        acceleratorConfig:
          $ref: '#/components/schemas/RuntimeAcceleratorConfig'
          description: Optional. The Compute Engine accelerator configuration for this runtime.
        nicType:
          enum:
            - UNSPECIFIED_NIC_TYPE
            - VIRTIO_NET
            - GVNIC
          type: string
          description: Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
          enumDescriptions:
            - No type specified.
            - VIRTIO
            - GVNIC
        network:
          description: 'Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither `network` nor `subnet` is specified, the "default" network of the project is used, if it exists. A full URL or partial URI. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default` * `projects/[project_id]/global/networks/default` Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations: * Google Managed Network (Network & subnet are empty) * Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. * Shared VPC (network & subnet are required). Requires configuring Private Service Access.'
          type: string
        internalIpOnly:
          description: Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.
          type: boolean
        machineType:
          description: 'Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples: * `n1-standard-2` * `e2-standard-8`'
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: Optional. Encryption settings for virtual machine data disk.
        containerImages:
          items:
            $ref: '#/components/schemas/ContainerImage'
          description: Optional. Use a list of container images to use as Kernels in the notebook instance.
          type: array
        bootImage:
          description: Optional. Boot image metadata used for runtime upgradeability.
          $ref: '#/components/schemas/BootImage'
        dataDisk:
          $ref: '#/components/schemas/LocalDisk'
          description: Required. Data disk option configuration settings.
        tags:
          items:
            type: string
          type: array
          description: Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
        guestAttributes:
          readOnly: true
          additionalProperties:
            type: string
          description: Output only. The Compute Engine guest attributes. (see [Project and instance guest attributes](https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes)).
          type: object
        zone:
          description: 'Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example: * `us-central1-b`'
          type: string
          readOnly: true
      description: The config settings for virtual machine.
      type: object
    ListEnvironmentsResponse:
      type: object
      id: ListEnvironmentsResponse
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        environments:
          description: A list of returned environments.
          items:
            $ref: '#/components/schemas/Environment'
          type: array
        nextPageToken:
          description: A page token that can be used to continue listing from the last result in the next list call.
          type: string
      description: Response for listing environments.
    InstanceConfig:
      id: InstanceConfig
      description: Notebook instance configurations that can be updated.
      type: object
      properties:
        notebookUpgradeSchedule:
          description: Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
          type: string
        enableHealthMonitoring:
          description: Verifies core internal services are running.
          type: boolean
    Policy:
      description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
      properties:
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/Binding'
          type: array
        etag:
          format: byte
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
          type: string
        version:
          format: int32
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          type: integer
      id: Policy
      type: object
    RuntimeAcceleratorConfig:
      properties:
        type:
          description: Accelerator model.
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_K80
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - TPU_V2
            - TPU_V3
            - NVIDIA_TESLA_T4_VWS
            - NVIDIA_TESLA_P100_VWS
            - NVIDIA_TESLA_P4_VWS
          type: string
          enumDescriptions:
            - Accelerator type is not specified.
            - Accelerator type is Nvidia Tesla K80.
            - Accelerator type is Nvidia Tesla P100.
            - Accelerator type is Nvidia Tesla V100.
            - Accelerator type is Nvidia Tesla P4.
            - Accelerator type is Nvidia Tesla T4.
            - Accelerator type is Nvidia Tesla A100.
            - (Coming soon) Accelerator type is TPU V2.
            - (Coming soon) Accelerator type is TPU V3.
            - Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
        coreCount:
          description: Count of cores of this accelerator.
          type: string
          format: int64
      id: RuntimeAcceleratorConfig
      description: 'Definition of the types of hardware accelerators that can be used. Definition of the types of hardware accelerators that can be used. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `nvidia-tesla-k80` * `nvidia-tesla-p100` * `nvidia-tesla-v100` * `nvidia-tesla-p4` * `nvidia-tesla-t4` * `nvidia-tesla-a100`'
      type: object
    TestIamPermissionsRequest:
      properties:
        permissions:
          items:
            type: string
          type: array
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
      id: TestIamPermissionsRequest
      type: object
      description: Request message for `TestIamPermissions` method.
    UpgradeRuntimeRequest:
      type: object
      description: Request for upgrading a Managed Notebook Runtime to the latest version. option (google.api.message_visibility).restriction = "TRUSTED_TESTER,SPECIAL_TESTER";
      id: UpgradeRuntimeRequest
      properties:
        requestId:
          type: string
          description: Idempotent request UUID.
    StartRuntimeRequest:
      type: object
      properties:
        requestId:
          description: Idempotent request UUID.
          type: string
      id: StartRuntimeRequest
      description: Request for starting a Managed Notebook Runtime.
    AcceleratorConfig:
      id: AcceleratorConfig
      description: Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported.
      type: object
      properties:
        type:
          type: string
          description: Type of this accelerator.
          enumDescriptions:
            - Accelerator type is not specified.
            - Accelerator type is Nvidia Tesla K80.
            - Accelerator type is Nvidia Tesla P100.
            - Accelerator type is Nvidia Tesla V100.
            - Accelerator type is Nvidia Tesla P4.
            - Accelerator type is Nvidia Tesla T4.
            - Accelerator type is Nvidia Tesla A100.
            - Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
            - (Coming soon) Accelerator type is TPU V2.
            - (Coming soon) Accelerator type is TPU V3.
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_K80
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - NVIDIA_TESLA_T4_VWS
            - NVIDIA_TESLA_P100_VWS
            - NVIDIA_TESLA_P4_VWS
            - TPU_V2
            - TPU_V3
        coreCount:
          description: Count of cores of this accelerator.
          format: int64
          type: string
    RuntimeSoftwareConfig:
      description: 'Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`'
      type: object
      properties:
        customGpuDriverPath:
          type: string
          description: Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.
        upgradeable:
          description: Output only. Bool indicating whether an newer image is available in an image family.
          readOnly: true
          type: boolean
        idleShutdownTimeout:
          format: int32
          description: 'Time in minutes to wait before shutting down runtime. Default: 180 minutes'
          type: integer
        enableHealthMonitoring:
          description: 'Verifies core internal services are running. Default: True'
          type: boolean
        installGpuDriver:
          type: boolean
          description: 'Install Nvidia Driver automatically. Default: True'
        idleShutdown:
          description: 'Runtime will automatically shutdown after idle_shutdown_time. Default: True'
          type: boolean
        version:
          description: Output only. version of boot image such as M100, from release label of the image.
          readOnly: true
          type: string
        postStartupScript:
          type: string
          description: Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`).
        postStartupScriptBehavior:
          type: string
          enum:
            - POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED
            - RUN_EVERY_START
            - DOWNLOAD_AND_RUN_EVERY_START
          enumDescriptions:
            - Unspecified post startup script behavior. Will run only once at creation.
            - Runs the post startup script provided during creation at every start.
            - Downloads and runs the provided post startup script at every start.
          description: Behavior for the post startup script.
        disableTerminal:
          description: 'Bool indicating whether JupyterLab terminal will be available or not. Default: False'
          type: boolean
        notebookUpgradeSchedule:
          type: string
          description: Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
        kernels:
          items:
            $ref: '#/components/schemas/ContainerImage'
          type: array
          description: Optional. Use a list of container images to use as Kernels in the notebook instance.
      id: RuntimeSoftwareConfig
    RuntimeMetrics:
      description: Contains runtime daemon metrics, such as OS and kernels and sessions stats.
      id: RuntimeMetrics
      type: object
      properties:
        systemMetrics:
          additionalProperties:
            type: string
          type: object
          readOnly: true
          description: Output only. The system metrics.
    VirtualMachine:
      properties:
        instanceName:
          description: Output only. The user-friendly name of the Managed Compute Engine instance.
          readOnly: true
          type: string
        virtualMachineConfig:
          $ref: '#/components/schemas/VirtualMachineConfig'
          description: Virtual Machine configuration settings.
        instanceId:
          readOnly: true
          description: Output only. The unique identifier of the Managed Compute Engine instance.
          type: string
      type: object
      id: VirtualMachine
      description: Runtime using Virtual Machine for computing.
    ResetRuntimeRequest:
      id: ResetRuntimeRequest
      type: object
      properties:
        requestId:
          type: string
          description: Idempotent request UUID.
      description: Request for resetting a Managed Notebook Runtime.
    GetInstanceHealthResponse:
      id: GetInstanceHealthResponse
      description: Response for checking if a notebook instance is healthy.
      properties:
        healthInfo:
          additionalProperties:
            type: string
          type: object
          description: 'Output only. Additional information about instance health. Example: healthInfo": { "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }'
          readOnly: true
        healthState:
          readOnly: true
          enumDescriptions:
            - The instance substate is unknown.
            - The instance is known to be in an healthy state (for example, critical daemons are running) Applies to ACTIVE state.
            - The instance is known to be in an unhealthy state (for example, critical daemons are not running) Applies to ACTIVE state.
            - The instance has not installed health monitoring agent. Applies to ACTIVE state.
            - The instance health monitoring agent is not running. Applies to ACTIVE state.
          type: string
          description: Output only. Runtime health_state.
          enum:
            - HEALTH_STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - AGENT_NOT_INSTALLED
            - AGENT_NOT_RUNNING
      type: object
    RuntimeShieldedInstanceConfig:
      properties:
        enableIntegrityMonitoring:
          type: boolean
          description: Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled. Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.
          type: boolean
        enableVtpm:
          description: Defines whether the instance has the vTPM enabled. Enabled by default.
          type: boolean
      type: object
      id: RuntimeShieldedInstanceConfig
      description: A set of Shielded Instance options. Check [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.
    Event:
      properties:
        reportTime:
          type: string
          format: google-datetime
          description: Event report time.
        type:
          description: Event type.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - IDLE
            - HEARTBEAT
            - HEALTH
            - MAINTENANCE
          enumDescriptions:
            - Event is not specified.
            - The instance / runtime is idle
            - The instance / runtime is available. This event indicates that instance / runtime underlying compute is operational.
            - The instance / runtime health is available. This event indicates that instance / runtime health information.
            - The instance / runtime is available. This event allows instance / runtime to send Host maintenance information to Control Plane. https://cloud.google.com/compute/docs/gpus/gpu-host-maintenance
          type: string
        details:
          additionalProperties:
            type: string
          type: object
          description: Optional. Event details. This field is used to pass event information.
      id: Event
      type: object
      description: The definition of an Event for a managed / semi-managed notebook instance.
    RollbackInstanceRequest:
      properties:
        targetSnapshot:
          type: string
          description: 'Required. The snapshot for rollback. Example: "projects/test-project/global/snapshots/krwlzipynril".'
      type: object
      id: RollbackInstanceRequest
      description: Request for rollbacking a notebook instance
    RefreshRuntimeTokenInternalResponse:
      description: Response with a new access token.
      id: RefreshRuntimeTokenInternalResponse
      type: object
      properties:
        accessToken:
          description: The OAuth 2.0 access token.
          type: string
        expireTime:
          format: google-datetime
          description: Output only. Token expiration time.
          type: string
          readOnly: true
    UpdateShieldedInstanceConfigRequest:
      description: Request for updating the Shielded Instance config for a notebook instance. You can only use this method on a stopped instance
      id: UpdateShieldedInstanceConfigRequest
      type: object
      properties:
        shieldedInstanceConfig:
          $ref: '#/components/schemas/ShieldedInstanceConfig'
          description: ShieldedInstance configuration to be updated.
    DiagnoseRuntimeRequest:
      properties:
        diagnosticConfig:
          $ref: '#/components/schemas/DiagnosticConfig'
          description: Required. Defines flags that are used to run the diagnostic tool
      description: Request for creating a notebook instance diagnostic file.
      type: object
      id: DiagnoseRuntimeRequest
    RefreshRuntimeTokenInternalRequest:
      description: Request for getting a new access token.
      properties:
        vmId:
          type: string
          description: Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity
      id: RefreshRuntimeTokenInternalRequest
      type: object
    UpgradeInstanceInternalRequest:
      properties:
        type:
          description: Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.
          type: string
          enum:
            - UPGRADE_TYPE_UNSPECIFIED
            - UPGRADE_FRAMEWORK
            - UPGRADE_OS
            - UPGRADE_CUDA
            - UPGRADE_ALL
          enumDescriptions:
            - Upgrade type is not specified.
            - Upgrade ML framework.
            - Upgrade Operating System.
            - Upgrade CUDA.
            - Upgrade All (OS, Framework and CUDA).
        vmId:
          description: Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity
          type: string
      description: Request for upgrading a notebook instance from within the VM
      id: UpgradeInstanceInternalRequest
      type: object
    SwitchRuntimeRequest:
      type: object
      properties:
        requestId:
          type: string
          description: Idempotent request UUID.
        acceleratorConfig:
          $ref: '#/components/schemas/RuntimeAcceleratorConfig'
          description: accelerator config.
        machineType:
          description: machine type.
          type: string
      id: SwitchRuntimeRequest
      description: Request for switching a Managed Notebook Runtime.
    SetInstanceAcceleratorRequest:
      type: object
      description: Request for setting instance accelerator.
      id: SetInstanceAcceleratorRequest
      properties:
        type:
          enumDescriptions:
            - Accelerator type is not specified.
            - Accelerator type is Nvidia Tesla K80.
            - Accelerator type is Nvidia Tesla P100.
            - Accelerator type is Nvidia Tesla V100.
            - Accelerator type is Nvidia Tesla P4.
            - Accelerator type is Nvidia Tesla T4.
            - Accelerator type is Nvidia Tesla A100.
            - Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
            - (Coming soon) Accelerator type is TPU V2.
            - (Coming soon) Accelerator type is TPU V3.
          type: string
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_K80
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - NVIDIA_TESLA_T4_VWS
            - NVIDIA_TESLA_P100_VWS
            - NVIDIA_TESLA_P4_VWS
            - TPU_V2
            - TPU_V3
          description: Required. Type of this accelerator.
        coreCount:
          description: Required. Count of cores of this accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a valid combination. TPUs are not supported.
          format: int64
          type: string
    IsInstanceUpgradeableResponse:
      description: Response for checking if a notebook instance is upgradeable.
      properties:
        upgradeable:
          description: If an instance is upgradeable.
          type: boolean
        upgradeInfo:
          description: Additional information about upgrade.
          type: string
        upgradeVersion:
          type: string
          description: The version this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true.
        upgradeImage:
          type: string
          description: The new image self link this instance will be upgraded to if calling the upgrade endpoint. This field will only be populated if field upgradeable is true.
      id: IsInstanceUpgradeableResponse
      type: object
    Empty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
    ListInstancesResponse:
      description: Response for listing notebook instances.
      id: ListInstancesResponse
      type: object
      properties:
        instances:
          description: A list of returned instances.
          items:
            $ref: '#/components/schemas/Instance'
          type: array
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached. For example, ['us-west1-a', 'us-central1-b']. A ListInstancesResponse will only contain either instances or unreachables,
        nextPageToken:
          type: string
          description: Page token that can be used to continue listing from the last result in the next list call.
    Operation:
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
        metadata:
          type: object
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ReportRuntimeEventRequest:
      properties:
        vmId:
          description: Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity
          type: string
        event:
          description: Required. The Event to be reported.
          $ref: '#/components/schemas/Event'
      id: ReportRuntimeEventRequest
      description: Request for reporting a Managed Notebook Event.
      type: object
    EncryptionConfig:
      id: EncryptionConfig
      type: object
      description: Represents a custom encryption key configuration that can be applied to a resource. This will encrypt all disks in Virtual Machine.
      properties:
        kmsKey:
          description: 'The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`'
          type: string
    RuntimeAccessConfig:
      properties:
        proxyUri:
          readOnly: true
          type: string
          description: Output only. The proxy endpoint that is used to access the runtime.
        runtimeOwner:
          type: string
          description: 'The owner of this runtime after creation. Format: `alias@example.com` Currently supports one owner only.'
        accessType:
          description: The type of access mode this instance.
          enumDescriptions:
            - Unspecified access.
            - Single user login.
            - Service Account mode. In Service Account mode, Runtime creator will specify a SA that exists in the consumer project. Using Runtime Service Account field. Users accessing the Runtime need ActAs (Service Account User) permission.
          type: string
          enum:
            - RUNTIME_ACCESS_TYPE_UNSPECIFIED
            - SINGLE_USER
            - SERVICE_ACCOUNT
      description: Specifies the login configuration for Runtime
      type: object
      id: RuntimeAccessConfig
    Binding:
      id: Binding
      properties:
        role:
          type: string
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. '
        condition:
          $ref: '#/components/schemas/Expr'
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
      type: object
      description: Associates `members`, or principals, with a `role`.
    UpgradeInstanceRequest:
      description: Request for upgrading a notebook instance
      properties:
        type:
          enum:
            - UPGRADE_TYPE_UNSPECIFIED
            - UPGRADE_FRAMEWORK
            - UPGRADE_OS
            - UPGRADE_CUDA
            - UPGRADE_ALL
          enumDescriptions:
            - Upgrade type is not specified.
            - Upgrade ML framework.
            - Upgrade Operating System.
            - Upgrade CUDA.
            - Upgrade All (OS, Framework and CUDA).
          type: string
          description: Optional. The optional UpgradeType. Setting this field will search for additional compute images to upgrade this instance.
      type: object
      id: UpgradeInstanceRequest
    DataprocParameters:
      description: Parameters used in Dataproc JobType executions.
      type: object
      properties:
        cluster:
          type: string
          description: 'URI for cluster used to run Dataproc execution. Format: `projects/{PROJECT_ID}/regions/{REGION}/clusters/{CLUSTER_NAME}`'
      id: DataprocParameters
    UpgradeHistoryEntry:
      description: The entry of VM image upgrade history.
      properties:
        containerImage:
          description: The container image before this instance upgrade.
          type: string
        targetImage:
          description: 'Target VM Image. Format: ainotebooks-vm/project/image-name/name.'
          type: string
        vmImage:
          type: string
          description: The VM image before this instance upgrade.
        snapshot:
          type: string
          description: The snapshot of the boot disk of this notebook instance before upgrade.
        state:
          type: string
          enumDescriptions:
            - State is not specified.
            - The instance upgrade is started.
            - The instance upgrade is succeeded.
            - The instance upgrade is failed.
          description: The state of this instance upgrade history entry.
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
        targetVersion:
          description: Target VM Version, like m63.
          type: string
        createTime:
          description: The time that this instance upgrade history entry is created.
          type: string
          format: google-datetime
        version:
          description: The version of the notebook instance before this upgrade.
          type: string
        framework:
          description: The framework of this notebook instance.
          type: string
        action:
          enumDescriptions:
            - Operation is not specified.
            - Upgrade.
            - Rollback.
          type: string
          description: Action. Rolloback or Upgrade.
          enum:
            - ACTION_UNSPECIFIED
            - UPGRADE
            - ROLLBACK
      id: UpgradeHistoryEntry
      type: object
    ListSchedulesResponse:
      properties:
        schedules:
          items:
            $ref: '#/components/schemas/Schedule'
          description: A list of returned instances.
          type: array
        nextPageToken:
          type: string
          description: Page token that can be used to continue listing from the last result in the next list call.
        unreachable:
          type: array
          description: 'Schedules that could not be reached. For example: [''projects/{project_id}/location/{location}/schedules/monthly_digest'', ''projects/{project_id}/location/{location}/schedules/weekly_sentiment'']'
          items:
            type: string
      description: Response for listing scheduled notebook job.
      id: ListSchedulesResponse
      type: object
    ResetInstanceRequest:
      description: Request for resetting a notebook instance
      id: ResetInstanceRequest
      type: object
      properties: {}
    DiagnosticConfig:
      id: DiagnosticConfig
      description: Defines flags that are used to run the diagnostic tool
      type: object
      properties:
        copyHomeFilesFlagEnabled:
          type: boolean
          description: Optional. Enables flag to copy all `/home/jupyter` folder contents
        relativePath:
          type: string
          description: 'Optional. Defines the relative storage path in the Cloud Storage bucket where the diagnostic logs will be written: Default path will be the root directory of the Cloud Storage bucket (`gs://$GCS_BUCKET/$DATE_$TIME.tar.gz`) Example of full path where Log file will be written: `gs://$GCS_BUCKET/$RELATIVE_PATH/`'
        repairFlagEnabled:
          type: boolean
          description: Optional. Enables flag to repair service for instance
        gcsBucket:
          type: string
          description: 'Required. User Cloud Storage bucket location (REQUIRED). Must be formatted with path prefix (`gs://$GCS_BUCKET`). Permissions: User Managed Notebooks: - storage.buckets.writer: Must be given to the project''s service account attached to VM. Google Managed Notebooks: - storage.buckets.writer: Must be given to the project''s service account or user credentials attached to VM depending on authentication mode. Cloud Storage bucket Log file will be written to `gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz`'
        packetCaptureFlagEnabled:
          description: Optional. Enables flag to capture packets from the instance for 30 seconds
          type: boolean
    ReportInstanceInfoRequest:
      description: Request for notebook instances to report information to Notebooks API.
      properties:
        vmId:
          description: Required. The VM hardware token for authenticating the VM. https://cloud.google.com/compute/docs/instances/verifying-instance-identity
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
          description: The metadata reported to Notebooks API. This will be merged to the instance metadata store
      type: object
      id: ReportInstanceInfoRequest
    OperationMetadata:
      properties:
        apiVersion:
          description: API version used to start the operation.
          type: string
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        endpoint:
          type: string
          description: API endpoint name of this operation.
        statusMessage:
          type: string
          description: Human-readable status of the operation, if any.
        requestedCancellation:
          description: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
        verb:
          description: Name of the verb executed by the operation.
          type: string
        endTime:
          description: The time the operation finished running.
          format: google-datetime
          type: string
        createTime:
          format: google-datetime
          type: string
          description: The time the operation was created.
      type: object
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
    BootImage:
      id: BootImage
      description: Definition of the boot image used by the Runtime. Used to facilitate runtime upgradeability.
      properties: {}
      type: object
    UpdateInstanceConfigRequest:
      type: object
      id: UpdateInstanceConfigRequest
      properties:
        config:
          $ref: '#/components/schemas/InstanceConfig'
          description: The instance configurations to be updated.
      description: Request for updating instance configurations.
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
    DiagnoseInstanceRequest:
      id: DiagnoseInstanceRequest
      properties:
        diagnosticConfig:
          description: Required. Defines flags that are used to run the diagnostic tool
          $ref: '#/components/schemas/DiagnosticConfig'
      description: Request for creating a notebook instance diagnostic file.
      type: object
    ListRuntimesResponse:
      type: object
      properties:
        runtimes:
          type: array
          items:
            $ref: '#/components/schemas/Runtime'
          description: A list of returned Runtimes.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached. For example, ['us-west1', 'us-central1']. A ListRuntimesResponse will only contain either runtimes or unreachables,
          type: array
        nextPageToken:
          description: Page token that can be used to continue listing from the last result in the next list call.
          type: string
      description: Response for listing Managed Notebook Runtimes.
      id: ListRuntimesResponse
  parameters:
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.notebooks.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    schedules:
      id: google.notebooks.schedules
      name: schedules
      title: Schedules
      methods:
        projects_locations_schedules_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_schedules_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_schedules_trigger:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules~1{schedulesId}:trigger/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_schedules_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_schedules_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1schedules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/projects_locations_schedules_get'
          - $ref: '#/components/x-stackQL-resources/schedules/methods/projects_locations_schedules_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/projects_locations_schedules_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/projects_locations_schedules_delete'
    executions:
      id: google.notebooks.executions
      name: executions
      title: Executions
      methods:
        projects_locations_executions_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_executions_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1executions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_executions_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1executions~1{executionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_executions_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1executions~1{executionsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/projects_locations_executions_get'
          - $ref: '#/components/x-stackQL-resources/executions/methods/projects_locations_executions_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/executions/methods/projects_locations_executions_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/executions/methods/projects_locations_executions_delete'
    operations:
      id: google.notebooks.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
    runtimes:
      id: google.notebooks.runtimes
      name: runtimes
      title: Runtimes
      methods:
        projects_locations_runtimes_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_diagnose:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:diagnose/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_reset:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_upgrade:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:upgrade/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_refreshRuntimeTokenInternal:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:refreshRuntimeTokenInternal/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_start:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_switch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:switch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_reportEvent:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:reportEvent/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runtimes/methods/projects_locations_runtimes_get'
          - $ref: '#/components/x-stackQL-resources/runtimes/methods/projects_locations_runtimes_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/runtimes/methods/projects_locations_runtimes_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/runtimes/methods/projects_locations_runtimes_delete'
    runtimes_iam_policies:
      id: google.notebooks.runtimes_iam_policies
      name: runtimes_iam_policies
      title: Runtimes_iam_policies
      methods:
        projects_locations_runtimes_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_runtimes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runtimes_iam_policies/methods/projects_locations_runtimes_getIamPolicy'
        insert: []
        update: []
        delete: []
    instances:
      id: google.notebooks.instances
      name: instances
      title: Instances
      methods:
        projects_locations_instances_report:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:report/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_updateMetadataItems:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:updateMetadataItems/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_setMachineType:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:setMachineType/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_setAccelerator:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:setAccelerator/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_diagnose:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:diagnose/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_start:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_register:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances:register/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_upgrade:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgrade/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_upgradeInternal:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgradeInternal/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_isUpgradeable:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:isUpgradeable/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_updateConfig:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:updateConfig/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_reset:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_stop:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_setLabels:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:setLabels/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_updateShieldedInstanceConfig:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:updateShieldedInstanceConfig/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_rollback:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rollback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/projects_locations_instances_delete'
    instances_iam_policies:
      id: google.notebooks.instances_iam_policies
      name: instances_iam_policies
      title: Instances_iam_policies
      methods:
        projects_locations_instances_setIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:setIamPolicy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_testIamPermissions:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:testIamPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_instances_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances_iam_policies/methods/projects_locations_instances_getIamPolicy'
        insert: []
        update: []
        delete: []
    instances__instance_health:
      id: google.notebooks.instances__instance_health
      name: instances__instance_health
      title: Instances__instance_health
      methods:
        projects_locations_instances_getInstanceHealth:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:getInstanceHealth/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances__instance_health/methods/projects_locations_instances_getInstanceHealth'
        insert: []
        update: []
        delete: []
    environments:
      id: google.notebooks.environments
      name: environments
      title: Environments
      methods:
        projects_locations_environments_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_environments_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1environments~1{environmentsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_locations_environments_delete'
    runtimes_iam_bindings:
      id: google.notebooks.runtimes_iam_bindings
      name: runtimes_iam_bindings
      title: runtimes_iam_bindings
      methods:
        projects_locations_runtimes_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1runtimes~1{runtimesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/runtimes_iam_bindings/methods/projects_locations_runtimes_getIamPolicy'
    instances_iam_bindings:
      id: google.notebooks.instances_iam_bindings
      name: instances_iam_bindings
      title: instances_iam_bindings
      methods:
        projects_locations_instances_getIamPolicy:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:getIamPolicy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: bindings
      sqlVerbs:
        insert: []
        update: []
        delete: []
        select:
          - $ref: '#/components/x-stackQL-resources/instances_iam_bindings/methods/projects_locations_instances_getIamPolicy'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
    get:
      description: Gets information about a location.
      operationId: notebooks.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: notebooks.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:
    parameters: *ref_1
    delete:
      description: Deletes schedule and all underlying jobs
      operationId: notebooks.projects.locations.schedules.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-verb: delete
    get:
      description: Gets details of schedule
      operationId: notebooks.projects.locations.schedules.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/schedules/{schedulesId}:trigger:
    parameters: *ref_1
    post:
      description: Triggers execution of an existing schedule.
      operationId: notebooks.projects.locations.schedules.trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerScheduleRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: schedulesId
          required: true
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/schedules:
    parameters: *ref_1
    post:
      description: Creates a new Scheduled Notebook in a given project and location.
      operationId: notebooks.projects.locations.schedules.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: scheduleId
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-verb: insert
    get:
      description: Lists schedules in a given project and location.
      operationId: notebooks.projects.locations.schedules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchedulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: schedules
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/executions:
    parameters: *ref_1
    get:
      description: Lists executions in a given project and location
      operationId: notebooks.projects.locations.executions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: select
    post:
      description: Creates a new Execution in a given project and location.
      operationId: notebooks.projects.locations.executions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: executionId
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/executions/{executionsId}:
    parameters: *ref_1
    get:
      description: Gets details of executions
      operationId: notebooks.projects.locations.executions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: select
    delete:
      description: Deletes execution
      operationId: notebooks.projects.locations.executions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: notebooks.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: notebooks.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: notebooks.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: notebooks.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:
    parameters: *ref_1
    patch:
      description: Update Notebook Runtime configuration.
      operationId: notebooks.projects.locations.runtimes.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Runtime'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
    delete:
      description: Deletes a single Runtime.
      operationId: notebooks.projects.locations.runtimes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Runtime. The location must be a regional endpoint rather than zonal.
      operationId: notebooks.projects.locations.runtimes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runtime'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:diagnose:
    parameters: *ref_1
    post:
      description: Creates a Diagnostic File and runs Diagnostic Tool given a Runtime.
      operationId: notebooks.projects.locations.runtimes.diagnose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnoseRuntimeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:reset:
    parameters: *ref_1
    post:
      description: Resets a Managed Notebook Runtime.
      operationId: notebooks.projects.locations.runtimes.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetRuntimeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:stop:
    parameters: *ref_1
    post:
      description: 'Stops a Managed Notebook Runtime. Perform "Stop" on GPU instances; "Suspend" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance'
      operationId: notebooks.projects.locations.runtimes.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRuntimeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes:
    parameters: *ref_1
    get:
      description: Lists Runtimes in a given project and location.
      operationId: notebooks.projects.locations.runtimes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: select
    post:
      description: Creates a new Runtime in a given project and location.
      operationId: notebooks.projects.locations.runtimes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Runtime'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: runtimeId
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: notebooks.projects.locations.runtimes.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:upgrade:
    parameters: *ref_1
    post:
      description: Upgrades a Managed Notebook Runtime to the latest version.
      operationId: notebooks.projects.locations.runtimes.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeRuntimeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:refreshRuntimeTokenInternal:
    parameters: *ref_1
    post:
      description: Gets an access token for the consumer service account that the customer attached to the runtime. Only accessible from the tenant instance.
      operationId: notebooks.projects.locations.runtimes.refreshRuntimeTokenInternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRuntimeTokenInternalRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshRuntimeTokenInternalResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: notebooks.projects.locations.runtimes.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:start:
    parameters: *ref_1
    post:
      description: 'Starts a Managed Notebook Runtime. Perform "Start" on GPU instances; "Resume" on CPU instances See: https://cloud.google.com/compute/docs/instances/stop-start-instance https://cloud.google.com/compute/docs/instances/suspend-resume-instance'
      operationId: notebooks.projects.locations.runtimes.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRuntimeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: notebooks.projects.locations.runtimes.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: runtimes_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:switch:
    parameters: *ref_1
    post:
      description: Switch a Managed Notebook Runtime.
      operationId: notebooks.projects.locations.runtimes.switch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchRuntimeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/runtimes/{runtimesId}:reportEvent:
    parameters: *ref_1
    post:
      description: Report and process a runtime event.
      operationId: notebooks.projects.locations.runtimes.reportEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRuntimeEventRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: runtimesId
          required: true
          schema:
            type: string
      x-stackQL-resource: runtimes
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:report:
    parameters: *ref_1
    post:
      description: Allows notebook instances to report their latest instance information to the Notebooks API server. The server will merge the reported information to the instance metadata store. Do not use this method directly.
      operationId: notebooks.projects.locations.instances.report
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportInstanceInfoRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: notebooks.projects.locations.instances.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateMetadataItems:
    parameters: *ref_1
    patch:
      description: Add/update metadata items for an instance.
      operationId: notebooks.projects.locations.instances.updateMetadataItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceMetadataItemsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInstanceMetadataItemsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: notebooks.projects.locations.instances.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances_iam_policies
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setMachineType:
    parameters: *ref_1
    patch:
      description: Updates the machine type of a single Instance.
      operationId: notebooks.projects.locations.instances.setMachineType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstanceMachineTypeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    get:
      description: Lists instances in a given project and location.
      operationId: notebooks.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
    post:
      description: Creates a new Instance in a given project and location.
      operationId: notebooks.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setAccelerator:
    parameters: *ref_1
    patch:
      description: Updates the guest accelerators of a single Instance.
      operationId: notebooks.projects.locations.instances.setAccelerator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstanceAcceleratorRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:diagnose:
    parameters: *ref_1
    post:
      description: Creates a Diagnostic File and runs Diagnostic Tool given an Instance.
      operationId: notebooks.projects.locations.instances.diagnose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnoseInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start:
    parameters: *ref_1
    post:
      description: Starts a notebook instance.
      operationId: notebooks.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances:register:
    parameters: *ref_1
    post:
      description: Registers an existing legacy notebook instance to the Notebooks API server. Legacy instances are instances created with the legacy Compute Engine calls. They are not manageable by the Notebooks API out of the box. This call makes these instances manageable by the Notebooks API.
      operationId: notebooks.projects.locations.instances.register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade:
    parameters: *ref_1
    post:
      description: Upgrades a notebook instance to the latest version.
      operationId: notebooks.projects.locations.instances.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgradeInternal:
    parameters: *ref_1
    post:
      description: Allows notebook instances to call this endpoint to upgrade themselves. Do not use this method directly.
      operationId: notebooks.projects.locations.instances.upgradeInternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceInternalRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:isUpgradeable:
    parameters: *ref_1
    get:
      description: Check if a notebook instance is upgradable.
      operationId: notebooks.projects.locations.instances.isUpgradeable
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsInstanceUpgradeableResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateConfig:
    parameters: *ref_1
    patch:
      description: Update Notebook Instance configurations.
      operationId: notebooks.projects.locations.instances.updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset:
    parameters: *ref_1
    post:
      description: Resets a notebook instance.
      operationId: notebooks.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getInstanceHealth:
    parameters: *ref_1
    get:
      description: Check if a notebook instance is healthy.
      operationId: notebooks.projects.locations.instances.getInstanceHealth
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceHealthResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances__instance_health
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: notebooks.projects.locations.instances.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      x-stackQL-resource: instances_iam_policies
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop:
    parameters: *ref_1
    post:
      description: Stops a notebook instance.
      operationId: notebooks.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Instance.
      operationId: notebooks.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: select
    delete:
      description: Deletes a single Instance.
      operationId: notebooks.projects.locations.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setLabels:
    parameters: *ref_1
    patch:
      description: Replaces all the labels of an Instance.
      operationId: notebooks.projects.locations.instances.setLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInstanceLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:updateShieldedInstanceConfig:
    parameters: *ref_1
    patch:
      description: Updates the Shielded instance configuration of a single Instance.
      operationId: notebooks.projects.locations.instances.updateShieldedInstanceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShieldedInstanceConfigRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rollback:
    parameters: *ref_1
    post:
      description: Rollbacks a notebook instance to the previous version.
      operationId: notebooks.projects.locations.instances.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
      x-stackQL-resource: instances
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/environments:
    parameters: *ref_1
    get:
      description: Lists environments in a project.
      operationId: notebooks.projects.locations.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: environments
      x-stackQL-verb: select
    post:
      description: Creates a new Environment.
      operationId: notebooks.projects.locations.environments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: environmentId
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Environment.
      operationId: notebooks.projects.locations.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
    delete:
      description: Deletes a single Environment.
      operationId: notebooks.projects.locations.environments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: environmentsId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: delete
