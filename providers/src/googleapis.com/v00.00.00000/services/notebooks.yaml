openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Notebooks API
  description: Notebooks API is used to manage notebook resources in Google Cloud.
  version: v2
  x-discovery-doc-revision: '20240820'
  x-generated-date: '2024-09-13'
externalDocs:
  url: https://cloud.google.com/notebooks/docs/
servers:
  - url: https://notebooks.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListInstancesResponse:
      id: ListInstancesResponse
      description: Response for listing notebook instances.
      type: object
      properties:
        instances:
          description: A list of returned instances.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: >-
            Page token that can be used to continue listing from the last result
            in the next list call.
          type: string
        unreachable:
          description: >-
            Locations that could not be reached. For example, ['us-west1-a',
            'us-central1-b']. A ListInstancesResponse will only contain either
            instances or unreachables,
          type: array
          items:
            type: string
    Instance:
      id: Instance
      description: The definition of a notebook instance.
      type: object
      properties:
        name:
          description: >-
            Output only. The name of this notebook instance. Format:
            `projects/{project_id}/locations/{location}/instances/{instance_id}`
          readOnly: true
          type: string
        gceSetup:
          description: >-
            Optional. Compute Engine setup for the notebook. Uses
            notebook-defined fields.
          $ref: '#/components/schemas/GceSetup'
        proxyUri:
          description: >-
            Output only. The proxy endpoint that is used to access the Jupyter
            notebook.
          readOnly: true
          type: string
        instanceOwners:
          description: >-
            Optional. Input only. The owner of this instance after creation.
            Format: `alias@example.com` Currently supports one owner only. If
            not specified, all of the service account users of your VM
            instance's service account can use the instance.
          type: array
          items:
            type: string
        creator:
          description: >-
            Output only. Email address of entity that sent original
            CreateInstance request.
          readOnly: true
          type: string
        state:
          description: Output only. The state of this instance.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - The control logic is starting the instance.
            - >-
              The control logic is installing required frameworks and
              registering the instance with notebook proxy
            - The instance is running.
            - The control logic is stopping the instance.
            - The instance is stopped.
            - The instance is deleted.
            - The instance is upgrading.
            - The instance is being created.
            - The instance is suspending.
            - The instance is suspended.
          enum:
            - STATE_UNSPECIFIED
            - STARTING
            - PROVISIONING
            - ACTIVE
            - STOPPING
            - STOPPED
            - DELETED
            - UPGRADING
            - INITIALIZING
            - SUSPENDING
            - SUSPENDED
        upgradeHistory:
          description: Output only. The upgrade history of this instance.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/UpgradeHistoryEntry'
        id:
          description: Output only. Unique ID of the resource.
          readOnly: true
          type: string
        healthState:
          description: Output only. Instance health_state.
          readOnly: true
          type: string
          enumDescriptions:
            - The instance substate is unknown.
            - >-
              The instance is known to be in an healthy state (for example,
              critical daemons are running) Applies to ACTIVE state.
            - >-
              The instance is known to be in an unhealthy state (for example,
              critical daemons are not running) Applies to ACTIVE state.
            - >-
              The instance has not installed health monitoring agent. Applies to
              ACTIVE state.
            - >-
              The instance health monitoring agent is not running. Applies to
              ACTIVE state.
          enum:
            - HEALTH_STATE_UNSPECIFIED
            - HEALTHY
            - UNHEALTHY
            - AGENT_NOT_INSTALLED
            - AGENT_NOT_RUNNING
        healthInfo:
          description: >-
            Output only. Additional information about instance health. Example:
            healthInfo": { "docker_proxy_agent_status": "1", "docker_status":
            "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1",
            "updated": "2020-10-18 09:40:03.573409" }
          readOnly: true
          type: object
          additionalProperties:
            type: string
        createTime:
          description: Output only. Instance creation time.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Instance update time.
          readOnly: true
          type: string
          format: google-datetime
        disableProxyAccess:
          description: >-
            Optional. If true, the notebook instance will not register with the
            proxy.
          type: boolean
        labels:
          description: >-
            Optional. Labels to apply to this instance. These can be later
            modified by the UpdateInstance method.
          type: object
          additionalProperties:
            type: string
        thirdPartyProxyUrl:
          description: >-
            Output only. The workforce pools proxy endpoint that is used to
            access the Jupyter notebook.
          readOnly: true
          type: string
        satisfiesPzs:
          description: Output only. Reserved for future use for Zone Separation.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Output only. Reserved for future use for Zone Isolation.
          readOnly: true
          type: boolean
    GceSetup:
      id: GceSetup
      description: >-
        The definition of how to configure a VM instance outside of Resources
        and Identity.
      type: object
      properties:
        machineType:
          description: >-
            Optional. The machine type of the VM instance.
            https://cloud.google.com/compute/docs/machine-resource
          type: string
        minCpuPlatform:
          description: >-
            Optional. The minimum CPU platform to use for this instance. The
            list of valid values can be found in
            https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones
          type: string
        acceleratorConfigs:
          description: >-
            Optional. The hardware accelerators used on this instance. If you
            use accelerators, make sure that your configuration has [enough
            vCPUs and memory to support the `machine_type` you have
            selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
            Currently supports only one accelerator configuration.
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorConfig'
        serviceAccounts:
          description: >-
            Optional. The service account that serves as an identity for the VM
            instance. Currently supports only one service account.
          type: array
          items:
            $ref: '#/components/schemas/ServiceAccount'
        vmImage:
          description: >-
            Optional. Use a Compute Engine VM image to start the notebook
            instance.
          $ref: '#/components/schemas/VmImage'
        containerImage:
          description: Optional. Use a container image to start the notebook instance.
          $ref: '#/components/schemas/ContainerImage'
        bootDisk:
          description: Optional. The boot disk for the VM.
          $ref: '#/components/schemas/BootDisk'
        dataDisks:
          description: >-
            Optional. Data disks attached to the VM instance. Currently supports
            only one data disk.
          type: array
          items:
            $ref: '#/components/schemas/DataDisk'
        shieldedInstanceConfig:
          description: >-
            Optional. Shielded VM configuration. [Images using supported
            Shielded VM
            features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
          $ref: '#/components/schemas/ShieldedInstanceConfig'
        networkInterfaces:
          description: >-
            Optional. The network interfaces for the VM. Supports only one
            interface.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
        disablePublicIp:
          description: >-
            Optional. If true, no external IP will be assigned to this VM
            instance.
          type: boolean
        tags:
          description: >-
            Optional. The Compute Engine tags to add to runtime (see [Tagging
            instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
          type: array
          items:
            type: string
        metadata:
          description: Optional. Custom metadata to apply to this instance.
          type: object
          additionalProperties:
            type: string
        enableIpForwarding:
          description: >-
            Optional. Flag to enable ip forwarding or not, default false/off.
            https://cloud.google.com/vpc/docs/using-routes#canipforward
          type: boolean
        gpuDriverConfig:
          description: Optional. Configuration for GPU drivers.
          $ref: '#/components/schemas/GPUDriverConfig'
    AcceleratorConfig:
      id: AcceleratorConfig
      description: >-
        An accelerator configuration for a VM instance Definition of a hardware
        accelerator. Note that there is no check on `type` and `core_count`
        combinations. TPUs are not supported. See [GPUs on Compute
        Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a
        valid combination.
      type: object
      properties:
        type:
          description: Optional. Type of this accelerator.
          type: string
          enumDescriptions:
            - Accelerator type is not specified.
            - Accelerator type is Nvidia Tesla P100.
            - Accelerator type is Nvidia Tesla V100.
            - Accelerator type is Nvidia Tesla P4.
            - Accelerator type is Nvidia Tesla T4.
            - Accelerator type is Nvidia Tesla A100 - 40GB.
            - Accelerator type is Nvidia Tesla A100 - 80GB.
            - Accelerator type is Nvidia Tesla L4.
            - Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
            - Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
          enum:
            - ACCELERATOR_TYPE_UNSPECIFIED
            - NVIDIA_TESLA_P100
            - NVIDIA_TESLA_V100
            - NVIDIA_TESLA_P4
            - NVIDIA_TESLA_T4
            - NVIDIA_TESLA_A100
            - NVIDIA_A100_80GB
            - NVIDIA_L4
            - NVIDIA_TESLA_T4_VWS
            - NVIDIA_TESLA_P100_VWS
            - NVIDIA_TESLA_P4_VWS
        coreCount:
          description: Optional. Count of cores of this accelerator.
          type: string
          format: int64
    ServiceAccount:
      id: ServiceAccount
      description: A service account that acts as an identity.
      type: object
      properties:
        email:
          description: Optional. Email address of the service account.
          type: string
        scopes:
          description: >-
            Output only. The list of scopes to be made available for this
            service account. Set by the CLH to
            https://www.googleapis.com/auth/cloud-platform
          readOnly: true
          type: array
          items:
            type: string
    VmImage:
      id: VmImage
      description: >-
        Definition of a custom Compute Engine virtual machine image for starting
        a notebook instance with the environment installed directly on the VM.
      type: object
      properties:
        project:
          description: >-
            Required. The name of the Google Cloud project that this VM image
            belongs to. Format: `{project_id}`
          type: string
        name:
          description: Optional. Use VM image name to find the image.
          type: string
        family:
          description: >-
            Optional. Use this VM image family to find the image; the newest
            image in this family will be used.
          type: string
    ContainerImage:
      id: ContainerImage
      description: >-
        Definition of a container image for starting a notebook instance with
        the environment installed in a container.
      type: object
      properties:
        repository:
          description: >-
            Required. The path to the container image repository. For example:
            `gcr.io/{project_id}/{image_name}`
          type: string
        tag:
          description: >-
            Optional. The tag of the container image. If not specified, this
            defaults to the latest tag.
          type: string
    BootDisk:
      id: BootDisk
      description: The definition of a boot disk.
      type: object
      properties:
        diskSizeGb:
          description: >-
            Optional. The size of the boot disk in GB attached to this instance,
            up to a maximum of 64000 GB (64 TB). If not specified, this defaults
            to the recommended value of 150GB.
          type: string
          format: int64
        diskType:
          description: Optional. Indicates the type of the disk.
          type: string
          enumDescriptions:
            - Disk type not set.
            - Standard persistent disk type.
            - SSD persistent disk type.
            - Balanced persistent disk type.
            - Extreme persistent disk type.
          enum:
            - DISK_TYPE_UNSPECIFIED
            - PD_STANDARD
            - PD_SSD
            - PD_BALANCED
            - PD_EXTREME
        diskEncryption:
          description: >-
            Optional. Input only. Disk encryption method used on the boot and
            data disks, defaults to GMEK.
          type: string
          enumDescriptions:
            - Disk encryption is not specified.
            - Use Google managed encryption keys to encrypt the boot disk.
            - Use customer managed encryption keys to encrypt the boot disk.
          enum:
            - DISK_ENCRYPTION_UNSPECIFIED
            - GMEK
            - CMEK
        kmsKey:
          description: >-
            Optional. Input only. The KMS key used to encrypt the disks, only
            applicable if disk_encryption is CMEK. Format:
            `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
            Learn more about using your own encryption keys.
          type: string
    DataDisk:
      id: DataDisk
      description: An instance-attached disk resource.
      type: object
      properties:
        diskSizeGb:
          description: >-
            Optional. The size of the disk in GB attached to this VM instance,
            up to a maximum of 64000 GB (64 TB). If not specified, this defaults
            to 100.
          type: string
          format: int64
        diskType:
          description: Optional. Input only. Indicates the type of the disk.
          type: string
          enumDescriptions:
            - Disk type not set.
            - Standard persistent disk type.
            - SSD persistent disk type.
            - Balanced persistent disk type.
            - Extreme persistent disk type.
          enum:
            - DISK_TYPE_UNSPECIFIED
            - PD_STANDARD
            - PD_SSD
            - PD_BALANCED
            - PD_EXTREME
        diskEncryption:
          description: >-
            Optional. Input only. Disk encryption method used on the boot and
            data disks, defaults to GMEK.
          type: string
          enumDescriptions:
            - Disk encryption is not specified.
            - Use Google managed encryption keys to encrypt the boot disk.
            - Use customer managed encryption keys to encrypt the boot disk.
          enum:
            - DISK_ENCRYPTION_UNSPECIFIED
            - GMEK
            - CMEK
        kmsKey:
          description: >-
            Optional. Input only. The KMS key used to encrypt the disks, only
            applicable if disk_encryption is CMEK. Format:
            `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
            Learn more about using your own encryption keys.
          type: string
    ShieldedInstanceConfig:
      id: ShieldedInstanceConfig
      description: >-
        A set of Shielded Instance options. See [Images using supported Shielded
        VM
        features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
        Not all combinations are valid.
      type: object
      properties:
        enableSecureBoot:
          description: >-
            Optional. Defines whether the VM instance has Secure Boot enabled.
            Secure Boot helps ensure that the system only runs authentic
            software by verifying the digital signature of all boot components,
            and halting the boot process if signature verification fails.
            Disabled by default.
          type: boolean
        enableVtpm:
          description: >-
            Optional. Defines whether the VM instance has the vTPM enabled.
            Enabled by default.
          type: boolean
        enableIntegrityMonitoring:
          description: >-
            Optional. Defines whether the VM instance has integrity monitoring
            enabled. Enables monitoring and attestation of the boot integrity of
            the VM instance. The attestation is performed against the integrity
            policy baseline. This baseline is initially derived from the
            implicitly trusted boot image when the VM instance is created.
            Enabled by default.
          type: boolean
    NetworkInterface:
      id: NetworkInterface
      description: The definition of a network interface resource attached to a VM.
      type: object
      properties:
        network:
          description: >-
            Optional. The name of the VPC that this VM instance is in. Format:
            `projects/{project_id}/global/networks/{network_id}`
          type: string
        subnet:
          description: >-
            Optional. The name of the subnet that this VM instance is in.
            Format:
            `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`
          type: string
        nicType:
          description: >-
            Optional. The type of vNIC to be used on this interface. This may be
            gVNIC or VirtioNet.
          type: string
          enumDescriptions:
            - No type specified.
            - VIRTIO
            - GVNIC
          enum:
            - NIC_TYPE_UNSPECIFIED
            - VIRTIO_NET
            - GVNIC
        accessConfigs:
          description: >-
            Optional. An array of configurations for this interface. Currently,
            only one access config, ONE_TO_ONE_NAT, is supported. If no
            accessConfigs specified, the instance will have an external internet
            access through an ephemeral external IP address.
          type: array
          items:
            $ref: '#/components/schemas/AccessConfig'
    AccessConfig:
      id: AccessConfig
      description: An access configuration attached to an instance's network interface.
      type: object
      properties:
        externalIp:
          description: >-
            An external IP address associated with this instance. Specify an
            unused static external IP address available to the project or leave
            this field undefined to use an IP from a shared ephemeral IP address
            pool. If you specify a static external IP address, it must live in
            the same region as the zone of the instance.
          type: string
    GPUDriverConfig:
      id: GPUDriverConfig
      description: A GPU driver configuration
      type: object
      properties:
        enableGpuDriver:
          description: >-
            Optional. Whether the end user authorizes Google Cloud to install
            GPU driver on this VM instance. If this field is empty or set to
            false, the GPU driver won't be installed. Only applicable to
            instances with GPUs.
          type: boolean
        customGpuDriverPath:
          description: >-
            Optional. Specify a custom Cloud Storage path where the GPU driver
            is stored. If not specified, we'll automatically choose from
            official GPU drivers.
          type: string
    UpgradeHistoryEntry:
      id: UpgradeHistoryEntry
      description: The entry of VM image upgrade history.
      type: object
      properties:
        snapshot:
          description: >-
            Optional. The snapshot of the boot disk of this notebook instance
            before upgrade.
          type: string
        vmImage:
          description: Optional. The VM image before this instance upgrade.
          type: string
        containerImage:
          description: Optional. The container image before this instance upgrade.
          type: string
        framework:
          description: Optional. The framework of this notebook instance.
          type: string
        version:
          description: Optional. The version of the notebook instance before this upgrade.
          type: string
        state:
          description: Output only. The state of this instance upgrade history entry.
          readOnly: true
          type: string
          enumDescriptions:
            - State is not specified.
            - The instance upgrade is started.
            - The instance upgrade is succeeded.
            - The instance upgrade is failed.
          enum:
            - STATE_UNSPECIFIED
            - STARTED
            - SUCCEEDED
            - FAILED
        createTime:
          description: >-
            Immutable. The time that this instance upgrade history entry is
            created.
          type: string
          format: google-datetime
        action:
          description: Optional. Action. Rolloback or Upgrade.
          type: string
          enumDescriptions:
            - Operation is not specified.
            - Upgrade.
            - Rollback.
          enum:
            - ACTION_UNSPECIFIED
            - UPGRADE
            - ROLLBACK
        targetVersion:
          description: Optional. Target VM Version, like m63.
          type: string
    StartInstanceRequest:
      id: StartInstanceRequest
      description: Request for starting a notebook instance
      type: object
      properties: {}
    StopInstanceRequest:
      id: StopInstanceRequest
      description: Request for stopping a notebook instance
      type: object
      properties: {}
    ResetInstanceRequest:
      id: ResetInstanceRequest
      description: Request for resetting a notebook instance
      type: object
      properties: {}
    CheckInstanceUpgradabilityResponse:
      id: CheckInstanceUpgradabilityResponse
      description: Response for checking if a notebook instance is upgradeable.
      type: object
      properties:
        upgradeable:
          description: If an instance is upgradeable.
          type: boolean
        upgradeVersion:
          description: >-
            The version this instance will be upgraded to if calling the upgrade
            endpoint. This field will only be populated if field upgradeable is
            true.
          type: string
        upgradeInfo:
          description: Additional information about upgrade.
          type: string
        upgradeImage:
          description: >-
            The new image self link this instance will be upgraded to if calling
            the upgrade endpoint. This field will only be populated if field
            upgradeable is true.
          type: string
    UpgradeInstanceRequest:
      id: UpgradeInstanceRequest
      description: Request for upgrading a notebook instance
      type: object
      properties: {}
    ResizeDiskRequest:
      id: ResizeDiskRequest
      description: Request for resizing the notebook instance disks
      type: object
      properties:
        bootDisk:
          description: >-
            Required. The boot disk to be resized. Only disk_size_gb will be
            used.
          $ref: '#/components/schemas/BootDisk'
        dataDisk:
          description: >-
            Required. The data disk to be resized. Only disk_size_gb will be
            used.
          $ref: '#/components/schemas/DataDisk'
    RollbackInstanceRequest:
      id: RollbackInstanceRequest
      description: Request for rollbacking a notebook instance
      type: object
      properties:
        targetSnapshot:
          description: >-
            Required. The snapshot for rollback. Example:
            "projects/test-project/global/snapshots/krwlzipynril".
          type: string
        revisionId:
          description: Required. Output only. Revision Id
          readOnly: true
          type: string
    DiagnoseInstanceRequest:
      id: DiagnoseInstanceRequest
      description: Request for creating a notebook instance diagnostic file.
      type: object
      properties:
        diagnosticConfig:
          description: Required. Defines flags that are used to run the diagnostic tool
          $ref: '#/components/schemas/DiagnosticConfig'
        timeoutMinutes:
          description: >-
            Optional. Maxmium amount of time in minutes before the operation
            times out.
          type: integer
          format: int32
    DiagnosticConfig:
      id: DiagnosticConfig
      description: Defines flags that are used to run the diagnostic tool
      type: object
      properties:
        gcsBucket:
          description: >-
            Required. User Cloud Storage bucket location (REQUIRED). Must be
            formatted with path prefix (`gs://$GCS_BUCKET`). Permissions: User
            Managed Notebooks: - storage.buckets.writer: Must be given to the
            project's service account attached to VM. Google Managed Notebooks:
            - storage.buckets.writer: Must be given to the project's service
            account or user credentials attached to VM depending on
            authentication mode. Cloud Storage bucket Log file will be written
            to `gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz`
          type: string
        relativePath:
          description: >-
            Optional. Defines the relative storage path in the Cloud Storage
            bucket where the diagnostic logs will be written: Default path will
            be the root directory of the Cloud Storage bucket
            (`gs://$GCS_BUCKET/$DATE_$TIME.tar.gz`) Example of full path where
            Log file will be written: `gs://$GCS_BUCKET/$RELATIVE_PATH/`
          type: string
        enableRepairFlag:
          description: Optional. Enables flag to repair service for instance
          type: boolean
        enablePacketCaptureFlag:
          description: >-
            Optional. Enables flag to capture packets from the instance for 30
            seconds
          type: boolean
        enableCopyHomeFilesFlag:
          description: Optional. Enables flag to copy all `/home/jupyter` folder contents
          type: boolean
    Config:
      id: Config
      description: Response for getting WbI configurations in a location
      type: object
      properties:
        defaultValues:
          description: Output only. The default values for configuration.
          readOnly: true
          $ref: '#/components/schemas/DefaultValues'
        supportedValues:
          description: Output only. The supported values for configuration.
          readOnly: true
          $ref: '#/components/schemas/SupportedValues'
        availableImages:
          description: Output only. The list of available images to create a WbI.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ImageRelease'
    DefaultValues:
      id: DefaultValues
      description: DefaultValues represents the default configuration values.
      type: object
      properties:
        machineType:
          description: >-
            Output only. The default machine type used by the backend if not
            provided by the user.
          readOnly: true
          type: string
    SupportedValues:
      id: SupportedValues
      description: SupportedValues represents the values supported by the configuration.
      type: object
      properties:
        machineTypes:
          description: Output only. The machine types supported by WbI.
          readOnly: true
          type: array
          items:
            type: string
        acceleratorTypes:
          description: Output only. The accelerator types supported by WbI.
          readOnly: true
          type: array
          items:
            type: string
    ImageRelease:
      id: ImageRelease
      description: ConfigImage represents an image release available to create a WbI
      type: object
      properties:
        imageName:
          description: >-
            Output only. The name of the image of the form
            workbench-instances-vYYYYmmdd--
          readOnly: true
          type: string
        releaseName:
          description: Output only. The release of the image of the form m123
          readOnly: true
          type: string
    RestoreInstanceRequest:
      id: RestoreInstanceRequest
      description: Request for restoring the notebook instance from a BackupSource.
      type: object
      properties:
        snapshot:
          description: Snapshot to be used for restore.
          $ref: '#/components/schemas/Snapshot'
    Snapshot:
      id: Snapshot
      description: >-
        Snapshot represents the snapshot of the data disk used to restore the
        Workbench Instance from. Refers to:
        compute/v1/projects/{project_id}/global/snapshots/{snapshot_id}
      type: object
      properties:
        snapshotId:
          description: Required. The ID of the snapshot.
          type: string
        projectId:
          description: Required. The project ID of the snapshot.
          type: string
    ReportInstanceInfoSystemRequest:
      id: ReportInstanceInfoSystemRequest
      description: Request for notebook instances to report information to Notebooks API.
      type: object
      properties:
        vmId:
          description: >-
            Required. The VM hardware token for authenticating the VM.
            https://cloud.google.com/compute/docs/instances/verifying-instance-identity
          type: string
        event:
          description: Required. The Event to be reported.
          $ref: '#/components/schemas/Event'
    Event:
      id: Event
      description: >-
        The definition of an Event for a managed / semi-managed notebook
        instance.
      type: object
      properties:
        reportTime:
          description: Optional. Event report time.
          type: string
          format: google-datetime
        type:
          description: Optional. Event type.
          type: string
          enumDescriptions:
            - Event is not specified.
            - The instance / runtime is idle
            - >-
              The instance / runtime is available. This event indicates that
              instance / runtime underlying compute is operational.
            - >-
              The instance / runtime health is available. This event indicates
              that instance / runtime health information.
            - >-
              The instance / runtime is available. This event allows instance /
              runtime to send Host maintenance information to Control Plane.
              https://cloud.google.com/compute/docs/gpus/gpu-host-maintenance
            - >-
              The instance / runtime is available. This event indicates that the
              instance had metadata that needs to be modified.
          enum:
            - EVENT_TYPE_UNSPECIFIED
            - IDLE
            - HEARTBEAT
            - HEALTH
            - MAINTENANCE
            - METADATA_CHANGE
        details:
          description: >-
            Optional. Event details. This field is used to pass event
            information.
          type: object
          additionalProperties:
            type: string
    UpgradeInstanceSystemRequest:
      id: UpgradeInstanceSystemRequest
      description: Request for upgrading a notebook instance from within the VM
      type: object
      properties:
        vmId:
          description: >-
            Required. The VM hardware token for authenticating the VM.
            https://cloud.google.com/compute/docs/instances/verifying-instance-identity
          type: string
    SetIamPolicyRequest:
      id: SetIamPolicyRequest
      description: Request message for `SetIamPolicy` method.
      type: object
      properties:
        policy:
          description: >-
            REQUIRED: The complete policy to be applied to the `resource`. The
            size of the policy is limited to a few 10s of KB. An empty policy is
            a valid policy but certain Google Cloud services (such as Projects)
            might reject them.
          $ref: '#/components/schemas/Policy'
    Policy:
      id: Policy
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      type: object
      properties:
        version:
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          type: integer
          format: int32
        bindings:
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          type: array
          items:
            $ref: '#/components/schemas/Binding'
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          type: string
          format: byte
    Binding:
      id: Binding
      description: Associates `members`, or principals, with a `role`.
      type: object
      properties:
        role:
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
        members:
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
          items:
            type: string
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/Expr'
    Expr:
      id: Expr
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      type: object
      properties:
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
    TestIamPermissionsRequest:
      id: TestIamPermissionsRequest
      description: Request message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as `*` or `storage.*`) are not allowed. For more
            information see [IAM
            Overview](https://cloud.google.com/iam/docs/overview#permissions).
          type: array
          items:
            type: string
    TestIamPermissionsResponse:
      id: TestIamPermissionsResponse
      description: Response message for `TestIamPermissions` method.
      type: object
      properties:
        permissions:
          description: >-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          type: array
          items:
            type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
        statusMessage:
          description: Human-readable status of the operation, if any.
          type: string
        requestedCancellation:
          description: >-
            Identifies whether the user has requested cancellation of the
            operation. Operations that have successfully been cancelled have
            Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
        apiVersion:
          description: API version used to start the operation.
          type: string
        endpoint:
          description: API endpoint name of this operation.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.notebooks.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.notebooks.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    instances:
      id: google.notebooks.instances
      name: instances
      title: Instances
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        create:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:start/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:stop/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reset/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_upgradability:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:checkUpgradability/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgrade/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resize_disk:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:resizeDisk/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rollback:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:rollback/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        diagnose:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:diagnose/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:restore/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        report_info_system:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:reportInfoSystem/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade_system:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:upgradeSystem/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    instances_config:
      id: google.notebooks.instances_config
      name: instances_config
      title: Instances_config
      methods:
        get_config:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances:getConfig/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_config/methods/get_config
        insert: []
        update: []
        replace: []
        delete: []
    instances_iam_policies:
      id: google.notebooks.instances_iam_policies
      name: instances_iam_policies
      title: Instances_iam_policies
      methods:
        set_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:setIamPolicy/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_iam_policy:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:getIamPolicy/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        test_iam_permissions:
          operation:
            $ref: >-
              #/paths/~1v2~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:testIamPermissions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/instances_iam_policies/methods/get_iam_policy
        insert: []
        update: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/instances_iam_policies/methods/set_iam_policy
        delete: []
paths:
  /v2/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: notebooks.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: notebooks.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: notebooks.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: notebooks.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: notebooks.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: notebooks.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    get:
      description: Lists instances in a given project and location.
      operationId: notebooks.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates a new Instance in a given project and location.
      operationId: notebooks.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Instance.
      operationId: notebooks.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    patch:
      description: UpdateInstance updates an Instance.
      operationId: notebooks.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a single Instance.
      operationId: notebooks.projects.locations.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start:
    parameters: *ref_1
    post:
      description: Starts a notebook instance.
      operationId: notebooks.projects.locations.instances.start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop:
    parameters: *ref_1
    post:
      description: Stops a notebook instance.
      operationId: notebooks.projects.locations.instances.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset:
    parameters: *ref_1
    post:
      description: Resets a notebook instance.
      operationId: notebooks.projects.locations.instances.reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:checkUpgradability:
    parameters: *ref_1
    get:
      description: Checks whether a notebook instance is upgradable.
      operationId: notebooks.projects.locations.instances.checkUpgradability
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInstanceUpgradabilityResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgrade:
    parameters: *ref_1
    post:
      description: Upgrades a notebook instance to the latest version.
      operationId: notebooks.projects.locations.instances.upgrade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:resizeDisk:
    parameters: *ref_1
    post:
      description: Resize a notebook instance disk to a higher capacity.
      operationId: notebooks.projects.locations.instances.resizeDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeDiskRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rollback:
    parameters: *ref_1
    post:
      description: Rollbacks a notebook instance to the previous version.
      operationId: notebooks.projects.locations.instances.rollback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:diagnose:
    parameters: *ref_1
    post:
      description: Creates a Diagnostic File and runs Diagnostic Tool given an Instance.
      operationId: notebooks.projects.locations.instances.diagnose
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnoseInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances:getConfig:
    parameters: *ref_1
    get:
      description: >-
        Gets general backend configurations that might also affect the frontend.
        Location is required by CCFE. Although we could bypass it to send
        location- less request directly to the backend job, we would need CPE
        (go/cloud-cpe). Having the location might also be useful depending on
        the query.
      operationId: notebooks.projects.locations.instances.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:restore:
    parameters: *ref_1
    post:
      description: RestoreInstance restores an Instance from a BackupSource.
      operationId: notebooks.projects.locations.instances.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reportInfoSystem:
    parameters: *ref_1
    post:
      description: >-
        Allows notebook instances to report their latest instance information to
        the Notebooks API server. The server will merge the reported information
        to the instance metadata store. Do not use this method directly.
      operationId: notebooks.projects.locations.instances.reportInfoSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportInstanceInfoSystemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:upgradeSystem:
    parameters: *ref_1
    post:
      description: >-
        Allows notebook instances to upgrade themselves. Do not use this method
        directly.
      operationId: notebooks.projects.locations.instances.upgradeSystem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradeInstanceSystemRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:setIamPolicy:
    parameters: *ref_1
    post:
      description: >-
        Sets the access control policy on the specified resource. Replaces any
        existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
        `PERMISSION_DENIED` errors.
      operationId: notebooks.projects.locations.instances.setIamPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:getIamPolicy:
    parameters: *ref_1
    get:
      description: >-
        Gets the access control policy for a resource. Returns an empty policy
        if the resource exists and does not have a policy set.
      operationId: notebooks.projects.locations.instances.getIamPolicy
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
            format: int32
  /v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:testIamPermissions:
    parameters: *ref_1
    post:
      description: >-
        Returns permissions that a caller has on the specified resource. If the
        resource does not exist, this will return an empty set of permissions,
        not a `NOT_FOUND` error. Note: This operation is designed to be used for
        building permission-aware UIs and command-line tools, not for
        authorization checking. This operation may "fail open" without warning.
      operationId: notebooks.projects.locations.instances.testIamPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
