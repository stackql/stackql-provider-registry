openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Looker (Google Cloud core) API
  description: ''
  version: v1
  x-discovery-doc-revision: '20250730'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/looker/docs/reference/rest/
servers:
  - url: https://looker.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListInstancesResponse:
      id: ListInstancesResponse
      description: Response from ListInstances.
      type: object
      properties:
        instances:
          description: >-
            The list of instances matching the request filters, up to the
            requested ListInstancesRequest.pageSize.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: >-
            If provided, a page token that can look up the next
            ListInstancesRequest.pageSize results. If empty, the results list is
            exhausted.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Instance:
      id: Instance
      description: A Looker instance.
      type: object
      properties:
        name:
          description: >-
            Output only. Format:
            `projects/{project}/locations/{location}/instances/{instance}`.
          readOnly: true
          type: string
        createTime:
          description: >-
            Output only. The time when the Looker instance provisioning was
            first requested.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The time when the Looker instance was last updated.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The state of the instance.
          readOnly: true
          type: string
          enumDescriptions:
            - State is unspecified.
            - Instance is active and ready for use.
            - Instance provisioning is in progress.
            - Instance is in a failed state.
            - Instance was suspended.
            - Instance update is in progress.
            - Instance delete is in progress.
            - Instance is being exported.
            - Instance is importing data.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - CREATING
            - FAILED
            - SUSPENDED
            - UPDATING
            - DELETING
            - EXPORTING
            - IMPORTING
        platformEdition:
          description: Platform edition.
          type: string
          enumDescriptions:
            - Platform edition is unspecified.
            - Trial.
            - Standard.
            - Subscription Standard.
            - Subscription Enterprise.
            - Subscription Embed.
            - Nonprod Subscription Standard.
            - Nonprod Subscription Enterprise.
            - Nonprod Subscription Embed.
            - Trial Standard.
            - Trial Enterprise.
            - Trial Embed.
          enum:
            - PLATFORM_EDITION_UNSPECIFIED
            - LOOKER_CORE_TRIAL
            - LOOKER_CORE_STANDARD
            - LOOKER_CORE_STANDARD_ANNUAL
            - LOOKER_CORE_ENTERPRISE_ANNUAL
            - LOOKER_CORE_EMBED_ANNUAL
            - LOOKER_CORE_NONPROD_STANDARD_ANNUAL
            - LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL
            - LOOKER_CORE_NONPROD_EMBED_ANNUAL
            - LOOKER_CORE_TRIAL_STANDARD
            - LOOKER_CORE_TRIAL_ENTERPRISE
            - LOOKER_CORE_TRIAL_EMBED
        publicIpEnabled:
          description: Whether public IP is enabled on the Looker instance.
          type: boolean
        privateIpEnabled:
          description: Whether private IP is enabled on the Looker instance.
          type: boolean
        lookerVersion:
          description: Output only. The Looker version that the instance is using.
          readOnly: true
          type: string
        egressPublicIp:
          description: Output only. Public Egress IP (IPv4).
          readOnly: true
          type: string
        ingressPrivateIp:
          description: Output only. Private Ingress IP (IPv4).
          readOnly: true
          type: string
        ingressPublicIp:
          description: Output only. Public Ingress IP (IPv4).
          readOnly: true
          type: string
        lookerUri:
          description: >-
            Output only. Looker instance URI which can be used to access the
            Looker Instance UI.
          readOnly: true
          type: string
        pscEnabled:
          description: >-
            Optional. Whether to use Private Service Connect (PSC) for private
            IP connectivity. If true, neither `public_ip_enabled` nor
            `private_ip_enabled` can be true.
          type: boolean
        pscConfig:
          description: Optional. PSC configuration. Used when `psc_enabled` is true.
          $ref: '#/components/schemas/PscConfig'
        consumerNetwork:
          description: >-
            Network name in the consumer project. Format:
            `projects/{project}/global/networks/{network}`. Note that the
            consumer network may be in a different GCP project than the consumer
            project that is hosting the Looker Instance.
          type: string
        reservedRange:
          description: >-
            Name of a reserved IP address range within the
            Instance.consumer_network, to be used for private services access
            connection. May or may not be specified in a create request.
          type: string
        maintenanceWindow:
          description: Maintenance window for this instance.
          $ref: '#/components/schemas/MaintenanceWindow'
        denyMaintenancePeriod:
          description: Maintenance denial period for this instance.
          $ref: '#/components/schemas/DenyMaintenancePeriod'
        lastDenyMaintenancePeriod:
          description: >-
            Output only. Last computed maintenance denial period for this
            instance.
          readOnly: true
          $ref: '#/components/schemas/DenyMaintenancePeriod'
        maintenanceSchedule:
          description: Maintenance schedule for this instance.
          $ref: '#/components/schemas/MaintenanceSchedule'
        userMetadata:
          description: Optional. User metadata.
          $ref: '#/components/schemas/UserMetadata'
        customDomain:
          description: Custom domain configuration for the instance.
          $ref: '#/components/schemas/CustomDomain'
        encryptionConfig:
          description: >-
            Encryption configuration (CMEK). Only set if CMEK has been enabled
            on the instance.
          $ref: '#/components/schemas/EncryptionConfig'
        adminSettings:
          description: Looker Instance Admin settings.
          $ref: '#/components/schemas/AdminSettings'
        oauthConfig:
          description: Looker instance OAuth login settings.
          $ref: '#/components/schemas/OAuthConfig'
        linkedLspProjectNumber:
          description: Optional. Linked Google Cloud Project Number for Looker Studio Pro.
          type: string
          format: int64
        fipsEnabled:
          description: Optional. Whether FIPS is enabled on the Looker instance.
          type: boolean
        geminiEnabled:
          description: >-
            Optional. Whether Gemini feature is enabled on the Looker instance
            or not.
          type: boolean
        satisfiesPzs:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        satisfiesPzi:
          description: Output only. Reserved for future use.
          readOnly: true
          type: boolean
        classType:
          description: Optional. Storage class of the instance.
          type: string
          enumDescriptions:
            - Unspecified storage class.
            - Filestore.
            - PD SSD.
          enum:
            - CLASS_TYPE_UNSPECIFIED
            - R1
            - P1
    PscConfig:
      id: PscConfig
      description: >-
        Information for Private Service Connect (PSC) setup for a Looker
        instance.
      type: object
      properties:
        allowedVpcs:
          description: >-
            Optional. List of VPCs that are allowed ingress into looker. Format:
            projects/{project}/global/networks/{network}
          type: array
          items:
            type: string
        serviceAttachments:
          description: Optional. List of egress service attachment configurations.
          type: array
          items:
            $ref: '#/components/schemas/ServiceAttachment'
        lookerServiceAttachmentUri:
          description: Output only. URI of the Looker service attachment.
          readOnly: true
          type: string
    ServiceAttachment:
      id: ServiceAttachment
      description: Service attachment configuration.
      type: object
      properties:
        localFqdn:
          description: >-
            Optional. Fully qualified domain name that will be used in the
            private DNS record created for the service attachment.
          type: string
        targetServiceAttachmentUri:
          description: >-
            Required. URI of the service attachment to connect to. Format:
            projects/{project}/regions/{region}/serviceAttachments/{service_attachment}
          type: string
        connectionStatus:
          description: Output only. Connection status.
          readOnly: true
          type: string
          enumDescriptions:
            - Connection status is unspecified.
            - Connection is established and functioning normally.
            - >-
              Connection is not established (Looker tenant project hasn't been
              allowlisted).
            - >-
              Connection is not established (Looker tenant project is explicitly
              in reject list).
            - >-
              Issue with target service attachment, e.g. NAT subnet is
              exhausted.
            - >-
              Target service attachment does not exist. This status is a
              terminal state.
          enum:
            - UNKNOWN
            - ACCEPTED
            - PENDING
            - REJECTED
            - NEEDS_ATTENTION
            - CLOSED
        localFqdns:
          description: >-
            Optional. List of fully qualified domain names that will be used in
            the private DNS record created for the service attachment.
          type: array
          items:
            type: string
    MaintenanceWindow:
      id: MaintenanceWindow
      description: Specifies the recurring maintenance window.
      type: object
      properties:
        dayOfWeek:
          description: Required. Day of the week for this MaintenanceWindow (in UTC).
          type: string
          enumDescriptions:
            - The day of the week is unspecified.
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        startTime:
          description: >-
            Required. Time in UTC when the period starts. Maintenance will be
            scheduled within 60 minutes.
          $ref: '#/components/schemas/TimeOfDay'
    TimeOfDay:
      id: TimeOfDay
      description: >-
        Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap
        seconds. Related types are google.type.Date and
        `google.protobuf.Timestamp`.
      type: object
      properties:
        hours:
          description: >-
            Hours of a day in 24 hour format. Must be greater than or equal to 0
            and typically must be less than or equal to 23. An API may choose to
            allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: >-
            Minutes of an hour. Must be greater than or equal to 0 and less than
            or equal to 59.
          type: integer
          format: int32
        seconds:
          description: >-
            Seconds of a minute. Must be greater than or equal to 0 and
            typically must be less than or equal to 59. An API may allow the
            value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: >-
            Fractions of seconds, in nanoseconds. Must be greater than or equal
            to 0 and less than or equal to 999,999,999.
          type: integer
          format: int32
    DenyMaintenancePeriod:
      id: DenyMaintenancePeriod
      description: Specifies the maintenance denial period.
      type: object
      properties:
        startDate:
          description: Required. Start date of the deny maintenance period.
          $ref: '#/components/schemas/Date'
        endDate:
          description: Required. End date of the deny maintenance period.
          $ref: '#/components/schemas/Date'
        time:
          description: Required. Time in UTC when the period starts and ends.
          $ref: '#/components/schemas/TimeOfDay'
    Date:
      id: Date
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      properties:
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
          format: int32
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
          format: int32
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
    MaintenanceSchedule:
      id: MaintenanceSchedule
      description: Published upcoming future maintenance schedule.
      type: object
      properties:
        startTime:
          description: The scheduled start time for the maintenance.
          type: string
          format: google-datetime
        endTime:
          description: The scheduled end time for the maintenance.
          type: string
          format: google-datetime
    UserMetadata:
      id: UserMetadata
      description: Metadata about users for a Looker instance.
      type: object
      properties:
        additionalViewerUserCount:
          description: >-
            Optional. The number of additional viewer users the instance owner
            has purchased.
          type: integer
          format: int32
        additionalStandardUserCount:
          description: >-
            Optional. The number of additional standard users the instance owner
            has purchased.
          type: integer
          format: int32
        additionalDeveloperUserCount:
          description: >-
            Optional. The number of additional developer users the instance
            owner has purchased.
          type: integer
          format: int32
    CustomDomain:
      id: CustomDomain
      description: Custom domain information.
      type: object
      properties:
        domain:
          description: Domain name.
          type: string
        state:
          description: Domain state.
          type: string
          enumDescriptions:
            - Unspecified state.
            - DNS record is not created.
            - DNS record is created.
            - Calling SLM to update.
            - ManagedCertificate is ready.
            - ManagedCertificate is not ready.
            - Status is not known.
          enum:
            - CUSTOM_DOMAIN_STATE_UNSPECIFIED
            - UNVERIFIED
            - VERIFIED
            - MODIFYING
            - AVAILABLE
            - UNAVAILABLE
            - UNKNOWN
    EncryptionConfig:
      id: EncryptionConfig
      description: Encryption configuration (i.e. CMEK).
      type: object
      properties:
        kmsKeyName:
          description: Name of the CMEK key in KMS (input parameter).
          type: string
        kmsKeyState:
          description: Output only. Status of the CMEK key.
          readOnly: true
          type: string
          enumDescriptions:
            - CMEK status not specified.
            - CMEK key is currently valid.
            - >-
              CMEK key is currently revoked (instance should in restricted
              mode).
          enum:
            - KMS_KEY_STATE_UNSPECIFIED
            - VALID
            - REVOKED
        kmsKeyNameVersion:
          description: >-
            Output only. Full name and version of the CMEK key currently in use
            to encrypt Looker data. Format:
            `projects/{project}/locations/{location}/keyRings/{ring}/cryptoKeys/{key}/cryptoKeyVersions/{version}`.
            Empty if CMEK is not configured in this instance.
          readOnly: true
          type: string
    AdminSettings:
      id: AdminSettings
      description: Looker instance Admin settings fields.
      type: object
      properties:
        allowedEmailDomains:
          description: Email domain allowlist for the instance.
          type: array
          items:
            type: string
    OAuthConfig:
      id: OAuthConfig
      description: Looker instance OAuth login settings.
      type: object
      properties:
        clientId:
          description: >-
            Input only. Client ID from an external OAuth application. This is an
            input-only field, and thus will not be set in any responses.
          type: string
        clientSecret:
          description: >-
            Input only. Client secret from an external OAuth application. This
            is an input-only field, and thus will not be set in any responses.
          type: string
    RestartInstanceRequest:
      id: RestartInstanceRequest
      description: Request options for restarting an instance.
      type: object
      properties: {}
    ListInstanceBackupsResponse:
      id: ListInstanceBackupsResponse
      description: Response from listing Looker instance backups.
      type: object
      properties:
        instanceBackups:
          description: >-
            The list of instances matching the request filters, up to the
            requested `page_size`.
          type: array
          items:
            $ref: '#/components/schemas/InstanceBackup'
        nextPageToken:
          description: >-
            If provided, a page token that can look up the next `page_size`
            results. If empty, the results list is exhausted.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    InstanceBackup:
      id: InstanceBackup
      description: The details of a backup resource.
      type: object
      properties:
        name:
          description: >-
            Immutable. The relative resource name of the backup, in the
            following form:
            `projects/{project_number}/locations/{location_id}/instances/{instance_id}/backups/{backup}`
          type: string
        createTime:
          description: Output only. The time when the backup was started.
          readOnly: true
          type: string
          format: google-datetime
        expireTime:
          description: Output only. The time when the backup will be deleted.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The current state of the backup.
          readOnly: true
          type: string
          enumDescriptions:
            - The state of the backup is unknown.
            - The backup is being created.
            - The backup is being deleted.
            - The backup is active and ready to use.
            - The backup failed.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - DELETING
            - ACTIVE
            - FAILED
        encryptionConfig:
          description: Output only. Current status of the CMEK encryption
          readOnly: true
          $ref: '#/components/schemas/EncryptionConfig'
    RestoreInstanceRequest:
      id: RestoreInstanceRequest
      description: Request options for restoring an instance
      type: object
      properties:
        backup:
          description: >-
            Required. Backup being used to restore the instance Format:
            projects/{project}/locations/{location}/instances/{instance}/backups/{backup}
          type: string
    ImportInstanceRequest:
      id: ImportInstanceRequest
      description: Requestion options for importing looker data to an Instance
      type: object
      properties:
        gcsUri:
          description: >-
            Path to the import folder in Google Cloud Storage, in the form
            `gs://bucketName/folderName`.
          type: string
    ExportInstanceRequest:
      id: ExportInstanceRequest
      description: Request options for exporting data of an Instance.
      type: object
      properties:
        gcsUri:
          description: >-
            The path to the folder in Google Cloud Storage where the export will
            be stored. The URI is in the form `gs://bucketName/folderName`.
          type: string
        encryptionConfig:
          description: >-
            Required. Encryption configuration (CMEK). For CMEK enabled
            instances it should be same as looker CMEK.
          $ref: '#/components/schemas/ExportEncryptionConfig'
    ExportEncryptionConfig:
      id: ExportEncryptionConfig
      description: Configuration for Encryption - e.g. CMEK.
      type: object
      properties:
        kmsKeyName:
          description: Required. Name of the CMEK key in KMS.
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: The time the operation was created.
          type: string
          format: google-datetime
        endTime:
          description: The time the operation finished running.
          type: string
          format: google-datetime
        target:
          description: Server-defined resource path for the target of the operation.
          type: string
        verb:
          description: Name of the verb executed by the operation.
          type: string
        statusMessage:
          description: Human-readable status of the operation, if any.
          type: string
        requestedCancellation:
          description: >-
            Identifies whether the user has requested cancellation of the
            operation. Operations that have successfully been cancelled have
            Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
        apiVersion:
          description: API version used to start the operation.
          type: string
    ExportMetadata:
      id: ExportMetadata
      description: >-
        ExportMetadata represents the metadata of the exported artifacts. The
        metadata.json file in export artifact can be parsed as this message
      type: object
      properties:
        lookerInstance:
          description: >-
            Name of the exported instance. Format:
            projects/{project}/locations/{location}/instances/{instance}
          type: string
        lookerVersion:
          description: Version of instance when the export was created.
          type: string
        lookerPlatformEdition:
          description: Platform edition of the exported instance.
          type: string
        exportEncryptionKey:
          description: Encryption key that was used to encrypt the export artifacts.
          $ref: '#/components/schemas/ExportMetadataEncryptionKey'
        lookerEncryptionKey:
          description: >-
            Looker encryption key, encrypted with the provided export encryption
            key. This value will only be populated if the looker instance uses
            Looker managed encryption instead of CMEK.
          type: string
        filePaths:
          description: >-
            List of files created as part of export artifact (excluding the
            metadata). The paths are relative to the folder containing the
            metadata.
          type: array
          items:
            type: string
        source:
          description: The source type of the migration.
          type: string
          enumDescriptions:
            - Source not specified
            - Source of export is Looker Core
            - Source of export is Looker Original
          enum:
            - SOURCE_UNSPECIFIED
            - LOOKER_CORE
            - LOOKER_ORIGINAL
    ExportMetadataEncryptionKey:
      id: ExportMetadataEncryptionKey
      description: Encryption key details for the exported artifact.
      type: object
      properties:
        cmek:
          description: Name of the CMEK.
          type: string
        version:
          description: Version of the CMEK.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.looker.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.looker.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    instances:
      id: google.looker.instances
      name: instances
      title: Instances
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instances
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:restart/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:restore/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}:export/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete'
    backups:
      id: google.looker.backups
      name: backups
      title: Backups
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1backups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instanceBackups
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1backups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1backups~1{backupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1instances~1{instancesId}~1backups~1{backupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: looker.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: looker.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: looker.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: looker.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: looker.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: looker.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances:
    parameters: *ref_1
    get:
      description: Lists Instances in a given project and location.
      operationId: looker.projects.locations.instances.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: Creates a new Instance in a given project and location.
      operationId: looker.projects.locations.instances.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: instanceId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Instance.
      operationId: looker.projects.locations.instances.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
    delete:
      description: Delete instance.
      operationId: looker.projects.locations.instances.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: Update Instance.
      operationId: looker.projects.locations.instances.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:restart:
    parameters: *ref_1
    post:
      description: Restart instance.
      operationId: looker.projects.locations.instances.restart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:restore:
    parameters: *ref_1
    post:
      description: Restore Looker instance.
      operationId: looker.projects.locations.instances.restore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:import:
    parameters: *ref_1
    post:
      description: Import instance.
      operationId: looker.projects.locations.instances.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:export:
    parameters: *ref_1
    post:
      description: Export instance.
      operationId: looker.projects.locations.instances.export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportInstanceRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/backups:
    parameters: *ref_1
    get:
      description: List backups of Looker instance.
      operationId: looker.projects.locations.instances.backups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceBackupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Backup Looker instance.
      operationId: looker.projects.locations.instances.backups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceBackup'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}/backups/{backupsId}:
    parameters: *ref_1
    get:
      description: ''
      operationId: looker.projects.locations.instances.backups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceBackup'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
    delete:
      description: Delete backup.
      operationId: looker.projects.locations.instances.backups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: instancesId
          required: true
          schema:
            type: string
        - in: path
          name: backupsId
          required: true
          schema:
            type: string
