openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Document AI Warehouse API
  description: ''
  version: v1
  x-discovery-doc-revision: '20240506'
  x-generated-date: '2024-06-03'
externalDocs:
  url: https://cloud.google.com/document-warehouse
servers:
  - url: https://contentwarehouse.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    CloudAiPlatformTenantresourceTenantProjectResource:
      id: CloudAiPlatformTenantresourceTenantProjectResource
      description: 'The tenant project and tenant resources. Next ID: 10'
      properties:
        tag:
          type: string
          description: >-
            Input/Output [Required]. The tag that uniquely identifies a tenant
            project within a tenancy unit. Note: for the same tenant project
            tag, all tenant manager operations should be idempotent.
        infraSpannerConfigs:
          type: array
          items:
            $ref: >-
              #/components/schemas/CloudAiPlatformTenantresourceInfraSpannerConfig
          description: >-
            The Infra Spanner databases that are provisioned under the tenant
            project. Note: this is an experimental feature.
        tenantProjectConfig:
          $ref: >-
            #/components/schemas/CloudAiPlatformTenantresourceTenantProjectConfig
          description: The configurations of a tenant project.
        gcsBuckets:
          items:
            $ref: '#/components/schemas/CloudAiPlatformTenantresourceGcsBucketConfig'
          description: The GCS buckets that are provisioned under the tenant project.
          type: array
        tenantProjectNumber:
          type: string
          format: int64
          description: Output only. The tenant project number that has been created.
        cloudSqlInstances:
          items:
            $ref: >-
              #/components/schemas/CloudAiPlatformTenantresourceCloudSqlInstanceConfig
          description: >-
            The CloudSQL instances that are provisioned under the tenant
            project.
          type: array
        iamPolicyBindings:
          description: >-
            The dynamic IAM bindings that are granted under the tenant project.
            Note: this should only add new bindings to the project if they don't
            exist and the existing bindings won't be affected.
          type: array
          items:
            $ref: '#/components/schemas/CloudAiPlatformTenantresourceIamPolicyBinding'
        tenantProjectId:
          description: Output only. The tenant project ID that has been created.
          type: string
        tenantServiceAccounts:
          items:
            $ref: >-
              #/components/schemas/CloudAiPlatformTenantresourceTenantServiceAccountIdentity
          description: >-
            The service account identities (or enabled API service's P4SA) that
            are expclicitly created under the tenant project (before JIT
            provisioning during enabled API services).
          type: array
      type: object
    GoogleCloudDocumentaiV1DocumentPageMatrix:
      type: object
      id: GoogleCloudDocumentaiV1DocumentPageMatrix
      properties:
        rows:
          format: int32
          description: Number of rows in the matrix.
          type: integer
        cols:
          type: integer
          description: Number of columns in the matrix.
          format: int32
        data:
          description: The matrix data.
          type: string
          format: byte
        type:
          type: integer
          description: >-
            This encodes information about what data type the matrix uses. For
            example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of
            OpenCV primitive data types, please refer to
            https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html
          format: int32
      description: >-
        Representation for transformation matrix, intended to be compatible and
        used with OpenCV format for image manipulation.
    GoogleApiServiceconsumermanagementV1BillingConfig:
      id: GoogleApiServiceconsumermanagementV1BillingConfig
      description: Describes the billing configuration for a new tenant project.
      properties:
        billingAccount:
          description: >-
            Name of the billing account. For example
            `billingAccounts/012345-567890-ABCDEF`.
          type: string
      type: object
    GoogleCloudContentwarehouseV1WeightedSchemaProperty:
      description: Specifies the schema property name.
      properties:
        documentSchemaName:
          description: The document schema name.
          type: string
        propertyNames:
          items:
            type: string
          type: array
          description: The property definition names in the schema.
      id: GoogleCloudContentwarehouseV1WeightedSchemaProperty
      type: object
    GoogleCloudContentwarehouseV1GcsIngestWithDocAiProcessorsPipeline:
      id: GoogleCloudContentwarehouseV1GcsIngestWithDocAiProcessorsPipeline
      description: >-
        The configuration of the Cloud Storage Ingestion with DocAI Processors
        pipeline.
      properties:
        splitClassifyProcessorInfo:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ProcessorInfo'
          description: >-
            The split and classify processor information. The split and classify
            result will be used to find a matched extract processor.
        skipIngestedDocuments:
          type: boolean
          description: >-
            The flag whether to skip ingested documents. If it is set to true,
            documents in Cloud Storage contains key "status" with value
            "status=ingested" in custom metadata will be skipped to ingest.
        extractProcessorInfos:
          description: >-
            The extract processors information. One matched extract processor
            will be used to process documents based on the classify processor
            result. If no classify processor is specified, the first extract
            processor will be used.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ProcessorInfo'
        inputPath:
          description: >-
            The input Cloud Storage folder. All files under this folder will be
            imported to Document Warehouse. Format: `gs:///`.
          type: string
        processorResultsFolderPath:
          type: string
          description: >-
            The Cloud Storage folder path used to store the raw results from
            processors. Format: `gs:///`.
        pipelineConfig:
          description: >-
            Optional. The config for the Cloud Storage Ingestion with DocAI
            Processors pipeline. It provides additional customization options to
            run the pipeline and can be skipped if it is not applicable.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1IngestPipelineConfig
      type: object
    GoogleCloudContentwarehouseV1RunPipelineMetadataProcessWithDocAiPipelineMetadata:
      properties:
        documents:
          description: >-
            The input list of all the resource names of the documents to be
            processed.
          items:
            type: string
          type: array
        processorInfo:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ProcessorInfo'
          description: The DocAI processor to process the documents with.
      description: The metadata message for Process-with-DocAi pipeline.
      id: >-
        GoogleCloudContentwarehouseV1RunPipelineMetadataProcessWithDocAiPipelineMetadata
      type: object
    GoogleCloudContentwarehouseV1ListRuleSetsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        ruleSets:
          description: The rule sets from the specified parent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleSet'
      id: GoogleCloudContentwarehouseV1ListRuleSetsResponse
      type: object
      description: Response message for RuleSetService.ListRuleSets.
    GoogleTypeDateTime:
      description: >-
        Represents civil time (or occasionally physical time). This type can
        represent a civil time in one of a few possible ways: * When utc_offset
        is set and time_zone is unset: a civil time on a calendar day with a
        particular offset from UTC. * When time_zone is set and utc_offset is
        unset: a civil time on a calendar day in a particular time zone. * When
        neither time_zone nor utc_offset is set: a civil time on a calendar day
        in local time. The date is relative to the Proleptic Gregorian Calendar.
        If year, month, or day are 0, the DateTime is considered not to have a
        specific year, month, or day respectively. This type may also be used to
        represent a physical time if all the date and time fields are set and
        either case of the `time_offset` oneof is set. Consider using
        `Timestamp` message for physical time instead. If your use case also
        would like to store the user's timezone, that can be done in another
        field. This type is more flexible than some applications may want. Make
        sure to document and validate your application's limitations.
      properties:
        utcOffset:
          description: >-
            UTC offset. Must be whole seconds, between -18 hours and +18 hours.
            For example, a UTC offset of -4:00 would be represented as {
            seconds: -14400 }.
          type: string
          format: google-duration
        timeZone:
          $ref: '#/components/schemas/GoogleTypeTimeZone'
          description: Time zone.
        year:
          type: integer
          description: >-
            Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a
            datetime without a year.
          format: int32
        day:
          description: >-
            Optional. Day of month. Must be from 1 to 31 and valid for the year
            and month, or 0 if specifying a datetime without a day.
          format: int32
          type: integer
        nanos:
          description: >-
            Optional. Fractions of seconds in nanoseconds. Must be from 0 to
            999,999,999, defaults to 0.
          type: integer
          format: int32
        seconds:
          type: integer
          format: int32
          description: >-
            Optional. Seconds of minutes of the time. Must normally be from 0 to
            59, defaults to 0. An API may allow the value 60 if it allows
            leap-seconds.
        month:
          format: int32
          type: integer
          description: >-
            Optional. Month of year. Must be from 1 to 12, or 0 if specifying a
            datetime without a month.
        hours:
          type: integer
          format: int32
          description: >-
            Optional. Hours of day in 24 hour format. Should be from 0 to 23,
            defaults to 0 (midnight). An API may choose to allow the value
            "24:00:00" for scenarios like business closing time.
        minutes:
          description: >-
            Optional. Minutes of hour of day. Must be from 0 to 59, defaults to
            0.
          type: integer
          format: int32
      type: object
      id: GoogleTypeDateTime
    GoogleCloudContentwarehouseV1HistogramQuery:
      description: The histogram request.
      type: object
      id: GoogleCloudContentwarehouseV1HistogramQuery
      properties:
        histogramQuery:
          type: string
          description: >-
            An expression specifies a histogram request against matching
            documents for searches. See SearchDocumentsRequest.histogram_queries
            for details about syntax.
        filters:
          description: >-
            Optional. Filter the result of histogram query by the property
            names. It only works with histogram query
            count('FilterableProperties'). It is an optional. It will perform
            histogram on all the property names for all the document schemas.
            Setting this field will have a better performance.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter
        requirePreciseResultSize:
          type: boolean
          description: >-
            Controls if the histogram query requires the return of a precise
            count. Enable this flag may adversely impact performance. Defaults
            to true.
    CloudAiPlatformTenantresourceGcsBucketConfig:
      id: CloudAiPlatformTenantresourceGcsBucketConfig
      type: object
      properties:
        kmsKeyReference:
          description: >-
            Input/Output [Optional]. The KMS key name or the KMS grant name used
            for CMEK encryption. Only set this field when provisioning new GCS
            bucket. For existing GCS bucket, this field will be ignored because
            CMEK re-encryption is not supported.
          type: string
        viewers:
          type: array
          description: Input/Output [Required]. IAM roles (viewer/admin) put on the bucket.
          items:
            type: string
        admins:
          items:
            type: string
          type: array
        ttlDays:
          type: integer
          description: >-
            Input/Output [Optional]. Only needed when the content in bucket need
            to be garbage collected within some amount of days.
          format: int32
        entityName:
          description: >-
            Input/Output [Optional]. Only needed for per-entity tenant GCP
            resources. During Deprovision API, the on-demand deletion will only
            cover the tenant GCP resources with the specified entity name.
          type: string
        bucketName:
          description: >-
            Input/Output [Optional]. The name of a GCS bucket with max length of
            63 chars. If not set, a random UUID will be generated as bucket
            name.
          type: string
      description: The identity to configure a GCS bucket.
    GoogleCloudContentwarehouseV1ProcessWithDocAiPipeline:
      properties:
        documents:
          description: >-
            The list of all the resource names of the documents to be processed.
            Format:
            projects/{project_number}/locations/{location}/documents/{document_id}.
          items:
            type: string
          type: array
        processorResultsFolderPath:
          type: string
          description: >-
            The Cloud Storage folder path used to store the raw results from
            processors. Format: `gs:///`.
        processorInfo:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ProcessorInfo'
          description: The CDW processor information.
        exportFolderPath:
          description: >-
            The Cloud Storage folder path used to store the exported documents
            before being sent to CDW. Format: `gs:///`.
          type: string
      id: GoogleCloudContentwarehouseV1ProcessWithDocAiPipeline
      type: object
      description: >-
        The configuration of processing documents in Document Warehouse with
        DocAi processors pipeline.
    GoogleCloudContentwarehouseV1MapTypeOptions:
      type: object
      properties: {}
      id: GoogleCloudContentwarehouseV1MapTypeOptions
      description: Configurations for a Map property.
    GoogleCloudContentwarehouseV1EnumTypeOptions:
      properties:
        validationCheckDisabled:
          type: boolean
          description: >-
            Make sure the Enum property value provided in the document is in the
            possile value list during document creation. The validation check
            runs by default.
        possibleValues:
          items:
            type: string
          description: Required. List of possible enum values.
          type: array
      description: Configurations for an enum/categorical property.
      type: object
      id: GoogleCloudContentwarehouseV1EnumTypeOptions
    GoogleCloudContentwarehouseV1ListLinkedSourcesRequest:
      type: object
      description: Response message for DocumentLinkService.ListLinkedSources.
      id: GoogleCloudContentwarehouseV1ListLinkedSourcesRequest
      properties:
        pageToken:
          type: string
          description: >-
            A page token, received from a previous `ListLinkedSources` call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to `ListLinkedSources` must match the call
            that provided the page token.
        pageSize:
          type: integer
          description: >-
            The maximum number of document-links to return. The service may
            return fewer than this value. If unspecified, at most 50
            document-links will be returned. The maximum value is 1000; values
            above 1000 will be coerced to 1000.
          format: int32
        requestMetadata:
          description: >-
            The meta information collected about the document creator, used to
            enforce access control for the service.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
    GoogleCloudContentwarehouseV1TextTypeOptions:
      description: Configurations for a text property.
      properties: {}
      id: GoogleCloudContentwarehouseV1TextTypeOptions
      type: object
    GoogleCloudContentwarehouseV1PropertyArray:
      id: GoogleCloudContentwarehouseV1PropertyArray
      description: Property values.
      properties:
        properties:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Property'
          description: List of property values.
      type: object
    GoogleCloudContentwarehouseV1InvalidRule:
      type: object
      properties:
        error:
          type: string
          description: Validation error on a parsed expression.
        rule:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Rule'
          description: Triggered rule.
      id: GoogleCloudContentwarehouseV1InvalidRule
      description: A triggered rule that failed the validation check(s) after parsing.
    GoogleCloudContentwarehouseV1CustomWeightsMetadata:
      description: To support the custom weighting across document schemas.
      properties:
        weightedSchemaProperties:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1WeightedSchemaProperty
          type: array
          description: >-
            List of schema and property name. Allows a maximum of 10 schemas to
            be specified for relevance boosting.
      type: object
      id: GoogleCloudContentwarehouseV1CustomWeightsMetadata
    GoogleCloudDocumentaiV1DocumentPageTable:
      id: GoogleCloudDocumentaiV1DocumentPageTable
      type: object
      description: A table representation similar to HTML table structure.
      properties:
        detectedLanguages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          description: A list of detected languages together with confidence.
        bodyRows:
          description: Body rows of the table.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageTableTableRow
        layout:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
          description: Layout for Table.
        provenance:
          deprecated: true
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          description: The history of this table.
        headerRows:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageTableTableRow
          description: Header rows of the table.
    CloudAiPlatformTenantresourceTenantServiceAccountIdentity:
      properties:
        serviceName:
          type: string
          description: >-
            Input/Output [Required]. The service that the service account
            belongs to. (e.g. cloudbuild.googleapis.com for GCB service
            accounts)
        serviceAccountEmail:
          description: Output only. The email address of the generated service account.
          type: string
      id: CloudAiPlatformTenantresourceTenantServiceAccountIdentity
      description: >-
        The identity of service accounts that have been explicitly created under
        tenant projects.
      type: object
    GoogleCloudContentwarehouseV1RuleActionsPair:
      type: object
      id: GoogleCloudContentwarehouseV1RuleActionsPair
      description: Represents a rule and outputs of associated actions.
      properties:
        rule:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Rule'
          description: Represents the rule.
        actionOutputs:
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ActionOutput'
          description: Outputs of executing the actions associated with the above rule.
          type: array
    GoogleRpcStatus:
      properties:
        message:
          type: string
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
        code:
          type: integer
          format: int32
          description: The status code, which should be an enum value of google.rpc.Code.
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      id: GoogleRpcStatus
      type: object
    GoogleCloudDocumentaiV1DocumentPageLine:
      id: GoogleCloudDocumentaiV1DocumentPageLine
      type: object
      properties:
        detectedLanguages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          description: A list of detected languages together with confidence.
        provenance:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          deprecated: true
          description: The history of this annotation.
        layout:
          description: Layout for Line.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
      description: >-
        A collection of tokens that a human would perceive as a line. Does not
        cross column boundaries, can be horizontal, vertical, etc.
    GoogleCloudDocumentaiV1DocumentPageDimension:
      description: Dimension for the page.
      properties:
        height:
          description: Page height.
          format: float
          type: number
        width:
          description: Page width.
          type: number
          format: float
        unit:
          type: string
          description: Dimension unit.
      id: GoogleCloudDocumentaiV1DocumentPageDimension
      type: object
    GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter:
      properties:
        propertyNames:
          items:
            type: string
          description: >-
            It is optional. It will perform histogram for all the property names
            if it is not set. The properties need to be defined with the
            is_filterable flag set to true and the name of the property should
            be in the format: "schemaId.propertyName". The property needs to be
            defined in the schema. Example: the schema id is abc. Then the name
            of property for property MORTGAGE_TYPE will be "abc.MORTGAGE_TYPE".
          type: array
        documentSchemas:
          items:
            type: string
          type: array
          description: >-
            This filter specifies the exact document schema(s)
            Document.document_schema_name to run histogram query against. It is
            optional. It will perform histogram for property names for all the
            document schemas if it is not set. At most 10 document schema names
            are allowed. Format:
            projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
        yAxis:
          description: >-
            By default, the y_axis is HISTOGRAM_YAXIS_DOCUMENT if this field is
            not set.
          enum:
            - HISTOGRAM_YAXIS_DOCUMENT
            - HISTOGRAM_YAXIS_PROPERTY
          type: string
          enumDescriptions:
            - Count the documents per property name.
            - Count the properties per property name.
      type: object
      id: GoogleCloudContentwarehouseV1HistogramQueryPropertyNameFilter
    GoogleCloudContentwarehouseV1MapProperty:
      description: >-
        Map property value. Represents a structured entries of key value pairs,
        consisting of field names which map to dynamically typed values.
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Value'
          description: Unordered map of dynamically typed values.
      type: object
      id: GoogleCloudContentwarehouseV1MapProperty
    GoogleCloudContentwarehouseV1ActionExecutorOutput:
      id: GoogleCloudContentwarehouseV1ActionExecutorOutput
      type: object
      properties:
        ruleActionsPairs:
          description: List of rule and corresponding actions result.
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleActionsPair'
          type: array
      description: Represents the output of the Action Executor.
    GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo:
      properties:
        superscript:
          description: >-
            Whether the text is a superscript. This feature is not supported
            yet.
          type: boolean
        handwritten:
          type: boolean
          description: Whether the text is handwritten.
        fontWeight:
          type: integer
          description: >-
            TrueType weight on a scale `100` (thin) to `1000` (ultra-heavy).
            Normal is `400`, bold is `700`.
          format: int32
        italic:
          type: boolean
          description: Whether the text is italic.
        underlined:
          type: boolean
          description: Whether the text is underlined.
        pixelFontSize:
          format: double
          type: number
          description: >-
            Font size in pixels, equal to _unrounded font_size_ * _resolution_ ÷
            `72.0`.
        subscript:
          type: boolean
          description: Whether the text is a subscript. This feature is not supported yet.
        fontType:
          description: Name or style of the font.
          type: string
        textColor:
          $ref: '#/components/schemas/GoogleTypeColor'
          description: Color of the text.
        fontSize:
          description: Font size in points (`1` point is `¹⁄₇₂` inches).
          format: int32
          type: integer
        backgroundColor:
          $ref: '#/components/schemas/GoogleTypeColor'
          description: Color of the background.
        bold:
          type: boolean
          description: >-
            Whether the text is bold (equivalent to font_weight is at least
            `700`).
        strikeout:
          type: boolean
          description: >-
            Whether the text is strikethrough. This feature is not supported
            yet.
        letterSpacing:
          type: number
          format: double
          description: Letter spacing in points.
        smallcaps:
          description: >-
            Whether the text is in small caps. This feature is not supported
            yet.
          type: boolean
      type: object
      id: GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo
      description: Font and other text style attributes.
    GoogleCloudDocumentaiV1DocumentPageImage:
      type: object
      id: GoogleCloudDocumentaiV1DocumentPageImage
      properties:
        mimeType:
          type: string
          description: >-
            Encoding [media type (MIME
            type)](https://www.iana.org/assignments/media-types/media-types.xhtml)
            for the image.
        height:
          format: int32
          type: integer
          description: Height of the image in pixels.
        width:
          description: Width of the image in pixels.
          format: int32
          type: integer
        content:
          type: string
          description: Raw byte content of the image.
          format: byte
      description: Rendered image contents for this page.
    GoogleCloudContentwarehouseV1ExportToCdwPipeline:
      properties:
        documents:
          items:
            type: string
          description: >-
            The list of all the resource names of the documents to be processed.
            Format:
            projects/{project_number}/locations/{location}/documents/{document_id}.
          type: array
        exportFolderPath:
          type: string
          description: >-
            The Cloud Storage folder path used to store the exported documents
            before being sent to CDW. Format: `gs:///`.
        trainingSplitRatio:
          format: float
          type: number
          description: >-
            Ratio of training dataset split. When importing into Document AI
            Workbench, documents will be automatically split into training and
            test split category with the specified ratio. This field is required
            if doc_ai_dataset is set.
        docAiDataset:
          description: >-
            Optional. The CDW dataset resource name. This field is optional. If
            not set, the documents will be exported to Cloud Storage only.
            Format:
            projects/{project}/locations/{location}/processors/{processor}/dataset
          type: string
      description: >-
        The configuration of exporting documents from the Document Warehouse to
        CDW pipeline.
      id: GoogleCloudContentwarehouseV1ExportToCdwPipeline
      type: object
    GoogleCloudDocumentaiV1DocumentPageFormField:
      id: GoogleCloudDocumentaiV1DocumentPageFormField
      description: A form field detected on the page.
      type: object
      properties:
        fieldValue:
          description: Layout for the FormField value.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
        valueType:
          description: >-
            If the value is non-textual, this field represents the type. Current
            valid values are: - blank (this indicates the `field_value` is
            normal text) - `unfilled_checkbox` - `filled_checkbox`
          type: string
        correctedKeyText:
          type: string
          description: >-
            Created for Labeling UI to export key text. If corrections were made
            to the text identified by the `field_name.text_anchor`, this field
            will contain the correction.
        fieldName:
          description: >-
            Layout for the FormField name. e.g. `Address`, `Email`, `Grand
            total`, `Phone number`, etc.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
        provenance:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          description: The history of this annotation.
        nameDetectedLanguages:
          description: A list of detected languages for name together with confidence.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          type: array
        correctedValueText:
          description: >-
            Created for Labeling UI to export value text. If corrections were
            made to the text identified by the `field_value.text_anchor`, this
            field will contain the correction.
          type: string
        valueDetectedLanguages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          description: A list of detected languages for value together with confidence.
    GoogleCloudContentwarehouseV1ListDocumentSchemasResponse:
      type: object
      description: Response message for DocumentSchemaService.ListDocumentSchemas.
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        documentSchemas:
          description: The document schemas from the specified parent.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentSchema'
      id: GoogleCloudContentwarehouseV1ListDocumentSchemasResponse
    GoogleIamV1Policy:
      description: >-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources. A `Policy` is a collection of
        `bindings`. A `binding` binds one or more `members`, or principals, to a
        single `role`. Principals can be user accounts, service accounts, Google
        groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role. For some types of Google Cloud resources, a `binding` can
        also specify a `condition`, which is a logical expression that allows
        access to a resource only if the expression evaluates to `true`. A
        condition can add constraints based on attributes of the request, the
        resource, or both. To learn which resources support conditions in their
        IAM policies, see the [IAM
        documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        **JSON example:** ``` { "bindings": [ { "role":
        "roles/resourcemanager.organizationAdmin", "members": [
        "user:mike@example.com", "group:admins@example.com",
        "domain:google.com",
        "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, {
        "role": "roles/resourcemanager.organizationViewer", "members": [
        "user:eve@example.com" ], "condition": { "title": "expirable access",
        "description": "Does not grant access after Sep 2020", "expression":
        "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
        "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
        members: - user:mike@example.com - group:admins@example.com -
        domain:google.com -
        serviceAccount:my-project-id@appspot.gserviceaccount.com role:
        roles/resourcemanager.organizationAdmin - members: -
        user:eve@example.com role: roles/resourcemanager.organizationViewer
        condition: title: expirable access description: Does not grant access
        after Sep 2020 expression: request.time <
        timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ```
        For a description of IAM and its features, see the [IAM
        documentation](https://cloud.google.com/iam/docs/).
      properties:
        version:
          format: int32
          type: integer
          description: >-
            Specifies the format of the policy. Valid values are `0`, `1`, and
            `3`. Requests that specify an invalid value are rejected. Any
            operation that affects conditional role bindings must specify
            version `3`. This requirement applies to the following operations: *
            Getting a policy that includes a conditional role binding * Adding a
            conditional role binding to a policy * Changing a conditional role
            binding in a policy * Removing any role binding, with or without a
            condition, from a policy that includes conditions **Important:** If
            you use IAM Conditions, you must include the `etag` field whenever
            you call `setIamPolicy`. If you omit this field, then IAM allows you
            to overwrite a version `3` policy with a version `1` policy, and all
            of the conditions in the version `3` policy are lost. If a policy
            does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset. To learn which
            resources support conditions in their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy. **Important:** If you use
            IAM Conditions, you must include the `etag` field whenever you call
            `setIamPolicy`. If you omit this field, then IAM allows you to
            overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          type: string
        bindings:
          type: array
          description: >-
            Associates a list of `members`, or principals, with a `role`.
            Optionally, may specify a `condition` that determines how and when
            the `bindings` are applied. Each of the `bindings` must contain at
            least one principal. The `bindings` in a `Policy` can refer to up to
            1,500 principals; up to 250 of these principals can be Google
            groups. Each occurrence of a principal counts towards these limits.
            For example, if the `bindings` grant 50 different roles to
            `user:alice@example.com`, and not to any other principal, then you
            can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: '#/components/schemas/GoogleIamV1Binding'
        auditConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditConfig'
          type: array
          description: Specifies cloud audit logging configuration for this policy.
      id: GoogleIamV1Policy
      type: object
    GoogleCloudDocumentaiV1DocumentStyleFontSize:
      id: GoogleCloudDocumentaiV1DocumentStyleFontSize
      type: object
      description: Font size with unit.
      properties:
        size:
          format: float
          type: number
          description: Font size for the text.
        unit:
          description: >-
            Unit for the font size. Follows CSS naming (such as `in`, `px`, and
            `pt`).
          type: string
    GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment:
      description: >-
        A text segment in the Document.text. The indices may be out of bounds
        which indicate that the text extends into another document shard for
        large sharded documents. See ShardInfo.text_offset
      type: object
      properties:
        startIndex:
          type: string
          format: int64
          description: TextSegment start UTF-8 char index in the Document.text.
        endIndex:
          format: int64
          description: TextSegment half open end UTF-8 char index in the Document.text.
          type: string
      id: GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment
    GoogleCloudContentwarehouseV1RequestMetadata:
      id: GoogleCloudContentwarehouseV1RequestMetadata
      type: object
      properties:
        userInfo:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1UserInfo'
          description: Provides user unique identification and groups information.
      description: Meta information is used to improve the performance of the service.
    GoogleCloudDocumentaiV1DocumentEntityRelation:
      id: GoogleCloudDocumentaiV1DocumentEntityRelation
      type: object
      properties:
        relation:
          description: Relationship description.
          type: string
        objectId:
          type: string
          description: Object entity id.
        subjectId:
          type: string
          description: Subject entity id.
      description: Relationship between Entities.
    GoogleIamV1AuditLogConfig:
      type: object
      properties:
        logType:
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          description: The log type that this config enables.
          type: string
          enumDescriptions:
            - Default case. Should never be this.
            - 'Admin reads. Example: CloudIAM getIamPolicy'
            - 'Data writes. Example: CloudSQL Users create'
            - 'Data reads. Example: CloudSQL Users list'
        exemptedMembers:
          items:
            type: string
          description: >-
            Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of Binding.members.
          type: array
      id: GoogleIamV1AuditLogConfig
      description: >-
        Provides the configuration for logging a type of permissions. Example: {
        "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
        "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This
        enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
    GoogleCloudContentwarehouseV1beta1InitializeProjectResponse:
      id: GoogleCloudContentwarehouseV1beta1InitializeProjectResponse
      type: object
      description: Response message for projectService.InitializeProject
      properties:
        message:
          type: string
          description: The message of the project initialization process.
        state:
          enumDescriptions:
            - Clients should never see this.
            - Finished project initialization without error.
            - Finished project initialization with an error.
            - Client canceled the LRO.
            - Ask the customer to check the operation for results.
          description: The state of the project initialization process.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - RUNNING
    GoogleTypeTimeZone:
      description: >-
        Represents a time zone from the [IANA Time Zone
        Database](https://www.iana.org/time-zones).
      properties:
        version:
          description: Optional. IANA Time Zone Database version number, e.g. "2019a".
          type: string
        id:
          type: string
          description: IANA Time Zone Database time zone, e.g. "America/New_York".
      type: object
      id: GoogleTypeTimeZone
    GoogleCloudDocumentaiV1DocumentPageVisualElement:
      id: GoogleCloudDocumentaiV1DocumentPageVisualElement
      properties:
        detectedLanguages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          type: array
          description: A list of detected languages together with confidence.
        layout:
          description: Layout for VisualElement.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
        type:
          description: Type of the VisualElement.
          type: string
      description: >-
        Detected non-text visual elements e.g. checkbox, signature etc. on the
        page.
      type: object
    GoogleCloudContentwarehouseV1CreateDocumentRequest:
      properties:
        cloudAiDocumentOption:
          description: >-
            Request Option for processing Cloud AI Document in Document
            Warehouse. This field offers limited support for mapping entities
            from Cloud AI Document to Warehouse Document. Please consult with
            product team before using this field and other available options.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1CloudAIDocumentOption
        document:
          description: Required. The document to create.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
        requestMetadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
          description: >-
            The meta information collected about the end user, used to enforce
            access control for the service.
        createMask:
          format: google-fieldmask
          description: >-
            Field mask for creating Document fields. If mask path is empty, it
            means all fields are masked. For the `FieldMask` definition, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.
          type: string
        policy:
          description: >-
            Default document policy during creation. This refers to an Identity
            and Access (IAM) policy, which specifies access controls for the
            Document. Conditions defined in the policy will be ignored.
          $ref: '#/components/schemas/GoogleIamV1Policy'
      description: Request message for DocumentService.CreateDocument.
      id: GoogleCloudContentwarehouseV1CreateDocumentRequest
      type: object
    GoogleCloudContentwarehouseV1UpdateDocumentSchemaRequest:
      description: Request message for DocumentSchemaService.UpdateDocumentSchema.
      type: object
      properties:
        documentSchema:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentSchema'
          description: Required. The document schema to update with.
      id: GoogleCloudContentwarehouseV1UpdateDocumentSchemaRequest
    GoogleCloudContentwarehouseV1HistogramQueryResult:
      description: Histogram result that matches HistogramQuery specified in searches.
      type: object
      id: GoogleCloudContentwarehouseV1HistogramQueryResult
      properties:
        histogramQuery:
          type: string
          description: Requested histogram expression.
        histogram:
          additionalProperties:
            format: int64
            type: string
          type: object
          description: >-
            A map from the values of the facet associated with distinct values
            to the number of matching entries with corresponding value. The key
            format is: * (for string histogram) string values stored in the
            field.
    GoogleCloudDocumentaiV1DocumentPageAnchorPageRef:
      properties:
        confidence:
          type: number
          format: float
          description: >-
            Optional. Confidence of detected page element, if applicable. Range
            `[0, 1]`.
        page:
          format: int64
          description: >-
            Required. Index into the Document.pages element, for example using
            `Document.pages` to locate the related page element. This field is
            skipped when its value is the default `0`. See
            https://developers.google.com/protocol-buffers/docs/proto3#json.
          type: string
        layoutId:
          type: string
          deprecated: true
          description: Optional. Deprecated. Use PageRef.bounding_poly instead.
        layoutType:
          description: >-
            Optional. The type of the layout element that is being referenced if
            any.
          type: string
          enumDescriptions:
            - Layout Unspecified.
            - References a Page.blocks element.
            - References a Page.paragraphs element.
            - References a Page.lines element.
            - References a Page.tokens element.
            - References a Page.visual_elements element.
            - Refrrences a Page.tables element.
            - References a Page.form_fields element.
          enum:
            - LAYOUT_TYPE_UNSPECIFIED
            - BLOCK
            - PARAGRAPH
            - LINE
            - TOKEN
            - VISUAL_ELEMENT
            - TABLE
            - FORM_FIELD
        boundingPoly:
          description: >-
            Optional. Identifies the bounding polygon of a layout element on the
            page. If `layout_type` is set, the bounding polygon must be exactly
            the same to the layout element it's referring to.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1BoundingPoly'
      type: object
      id: GoogleCloudDocumentaiV1DocumentPageAnchorPageRef
      description: Represents a weak reference to a page element within a document.
    GoogleCloudContentwarehouseV1IngestPipelineConfig:
      properties:
        folder:
          type: string
          description: >-
            Optional. The name of the folder to which all ingested documents
            will be linked during ingestion process. Format is
            `projects/{project}/locations/{location}/documents/{folder_id}`
        cloudFunction:
          type: string
          description: >-
            The Cloud Function resource name. The Cloud Function needs to live
            inside consumer project and is accessible to Document AI Warehouse
            P4SA. Only Cloud Functions V2 is supported. Cloud function execution
            should complete within 5 minutes or this file ingestion may fail due
            to timeout. Format:
            `https://{region}-{project_id}.cloudfunctions.net/{cloud_function}`
            The following keys are available the request json payload. *
            display_name * properties * plain_text * reference_id *
            document_schema_name * raw_document_path * raw_document_file_type
            The following keys from the cloud function json response payload
            will be ingested to the Document AI Warehouse as part of Document
            proto content and/or related information. The original values will
            be overridden if any key is present in the response. * display_name
            * properties * plain_text * document_acl_policy * folder
        enableDocumentTextExtraction:
          description: >-
            The document text extraction enabled flag. If the flag is set to
            true, DWH will perform text extraction on the raw document.
          type: boolean
        documentAclPolicy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: >-
            The document level acl policy config. This refers to an Identity and
            Access (IAM) policy, which specifies access controls for all
            documents ingested by the pipeline. The role and members under the
            policy needs to be specified. The following roles are supported for
            document level acl control: * roles/contentwarehouse.documentAdmin *
            roles/contentwarehouse.documentEditor *
            roles/contentwarehouse.documentViewer The following members are
            supported for document level acl control: *
            user:user-email@example.com * group:group-email@example.com Note
            that for documents searched with LLM, only single level user or
            group acl check is supported.
      description: The ingestion pipeline config.
      type: object
      id: GoogleCloudContentwarehouseV1IngestPipelineConfig
    GoogleCloudDocumentaiV1DocumentPageImageQualityScores:
      id: GoogleCloudDocumentaiV1DocumentPageImageQualityScores
      properties:
        qualityScore:
          format: float
          description: >-
            The overall quality score. Range `[0, 1]` where `1` is perfect
            quality.
          type: number
        detectedDefects:
          description: A list of detected defects.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect
      type: object
      description: Image quality scores for the page image.
    GoogleCloudContentwarehouseV1Property:
      properties:
        dateTimeValues:
          description: >-
            Date time property values. It is not supported by CMEK compliant
            deployment.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DateTimeArray'
        floatValues:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1FloatArray'
          description: Float property values.
        mapProperty:
          description: Map property values.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1MapProperty'
        timestampValues:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1TimestampArray'
          description: >-
            Timestamp property values. It is not supported by CMEK compliant
            deployment.
        name:
          description: >-
            Required. Must match the name of a PropertyDefinition in the
            DocumentSchema.
          type: string
        integerValues:
          description: Integer property values.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1IntegerArray'
        enumValues:
          description: Enum property values.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1EnumArray'
        propertyValues:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1PropertyArray'
          description: Nested structured data property values.
        textValues:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1TextArray'
          description: String/text property values.
      id: GoogleCloudContentwarehouseV1Property
      type: object
      description: Property of a document.
    GoogleCloudContentwarehouseV1Value:
      id: GoogleCloudContentwarehouseV1Value
      description: >-
        `Value` represents a dynamically typed value which can be either be a
        float, a integer, a string, or a datetime value. A producer of value is
        expected to set one of these variants. Absence of any variant indicates
        an error.
      properties:
        booleanValue:
          description: Represents a boolean value.
          type: boolean
        datetimeValue:
          $ref: '#/components/schemas/GoogleTypeDateTime'
          description: Represents a datetime value.
        enumValue:
          description: Represents an enum value.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1EnumValue'
        floatValue:
          type: number
          description: Represents a float value.
          format: float
        stringValue:
          type: string
          description: Represents a string value.
        timestampValue:
          description: Represents a timestamp value.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1TimestampValue'
        intValue:
          type: integer
          description: Represents a integer value.
          format: int32
      type: object
    GoogleCloudContentwarehouseV1CloudAIDocumentOption:
      type: object
      description: Request Option for processing Cloud AI Document in CW Document.
      id: GoogleCloudContentwarehouseV1CloudAIDocumentOption
      properties:
        enableEntitiesConversions:
          type: boolean
          description: Whether to convert all the entities to properties.
        customizedEntitiesPropertiesConversions:
          additionalProperties:
            type: string
          description: If set, only selected entities will be converted to properties.
          type: object
    GoogleCloudContentwarehouseV1Action:
      properties:
        deleteDocumentAction:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1DeleteDocumentAction
          description: Action deleting the document.
        publishToPubSub:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1PublishAction'
          description: Action publish to Pub/Sub operation.
        removeFromFolderAction:
          description: Action removing a document from a folder.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1RemoveFromFolderAction
        actionId:
          type: string
          description: ID of the action. Managed internally.
        dataValidation:
          description: Action triggering data validation operations.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1DataValidationAction
        addToFolder:
          description: Action triggering create document link operation.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1AddToFolderAction'
        accessControl:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1AccessControlAction
          description: Action triggering access control operations.
        dataUpdate:
          description: Action triggering data update operations.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DataUpdateAction'
      type: object
      description: Represents the action triggered by Rule Engine when the rule is true.
      id: GoogleCloudContentwarehouseV1Action
    GoogleCloudContentwarehouseV1SearchDocumentsRequest:
      properties:
        offset:
          format: int32
          description: >-
            An integer that specifies the current offset (that is, starting
            result location, amongst the documents deemed by the API as
            relevant) in search results. This field is only considered if
            page_token is unset. The maximum allowed value is 5000. Otherwise an
            error is thrown. For example, 0 means to return results starting
            from the first matching document, and 10 means to return from the
            11th document. This can be used for pagination, (for example,
            pageSize = 10 and offset = 10 means to return from the second page).
          type: integer
        pageToken:
          description: >-
            The token specifying the current offset within search results. See
            SearchDocumentsResponse.next_page_token for an explanation of how to
            obtain the next set of query results.
          type: string
        totalResultSize:
          type: string
          enumDescriptions:
            - Total number calculation will be skipped.
            - >-
              Estimate total number. The total result size will be accurated up
              to 10,000. This option will add cost and latency to your request.
            - It may adversely impact performance. The limit is 1000,000.
          description: >-
            Controls if the search document request requires the return of a
            total size of matched documents. See
            SearchDocumentsResponse.total_size.
          enum:
            - TOTAL_RESULT_SIZE_UNSPECIFIED
            - ESTIMATED_SIZE
            - ACTUAL_SIZE
        orderBy:
          type: string
          description: >-
            The criteria determining how search results are sorted. For
            non-empty query, default is `"relevance desc"`. For empty query,
            default is `"upload_date desc"`. Supported options are: *
            `"relevance desc"`: By relevance descending, as determined by the
            API algorithms. * `"upload_date desc"`: By upload date descending. *
            `"upload_date"`: By upload date ascending. * `"update_date desc"`:
            By last updated date descending. * `"update_date"`: By last updated
            date ascending. * `"retrieval_importance desc"`: By retrieval
            importance of properties descending. This feature is still under
            development, please do not use unless otherwise instructed to do so.
        requireTotalSize:
          type: boolean
          description: >-
            Controls if the search document request requires the return of a
            total size of matched documents. See
            SearchDocumentsResponse.total_size. Enabling this flag may adversely
            impact performance. Hint: If this is used with pagination, set this
            flag on the initial query but set this to false on subsequent page
            calls (keep the total count locally). Defaults to false.
        requestMetadata:
          description: >-
            The meta information collected about the end user, used to enforce
            access control and improve the search quality of the service.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
        qaSizeLimit:
          description: >-
            Experimental, do not use. The limit on the number of documents
            returned for the question-answering feature. To enable the
            question-answering feature, set [DocumentQuery].is_nl_query to true.
          format: int32
          type: integer
        pageSize:
          type: integer
          description: >-
            A limit on the number of documents returned in the search results.
            Increasing this value above the default value of 10 can increase
            search response time. The value can be between 1 and 100.
          format: int32
        histogramQueries:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1HistogramQuery'
          description: >-
            An expression specifying a histogram request against matching
            documents. Expression syntax is an aggregation function call with
            histogram facets and other options. The following aggregation
            functions are supported: * `count(string_histogram_facet)`: Count
            the number of matching entities for each distinct attribute value.
            Data types: * Histogram facet (aka filterable properties): Facet
            names with format <schema id>.<facet>. Facets will have the format
            of: `a-zA-Z`. If the facet is a child facet, then the parent
            hierarchy needs to be specified separated by dots in the prefix
            after the schema id. Thus, the format for a multi- level facet is:
            <schema id>.<parent facet name>. <child facet name>. Example:
            schema123.root_parent_facet.middle_facet.child_facet *
            DocumentSchemaId: (with no schema id prefix) to get histograms for
            each document type (returns the schema id path, e.g.
            projects/12345/locations/us-west/documentSchemas/abc123). Example
            expression: * Document type counts: count('DocumentSchemaId') * For
            schema id, abc123, get the counts for MORTGAGE_TYPE:
            count('abc123.MORTGAGE_TYPE')
        documentQuery:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentQuery'
          description: Query used to search against documents (keyword, filters, etc.).
      id: GoogleCloudContentwarehouseV1SearchDocumentsRequest
      description: Request message for DocumentService.SearchDocuments.
      type: object
    GoogleCloudContentwarehouseV1RunPipelineMetadata:
      properties:
        exportToCdwPipelineMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1RunPipelineMetadataExportToCdwPipelineMetadata
          description: The pipeline metadata for Export-to-CDW pipeline.
        individualDocumentStatuses:
          description: The list of response details of each document.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1RunPipelineMetadataIndividualDocumentStatus
        failedFileCount:
          description: Number of files that have failed at some point in the pipeline.
          type: integer
          format: int32
        userInfo:
          description: User unique identification and groups information.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1UserInfo'
        processWithDocAiPipelineMetadata:
          description: The pipeline metadata for Process-with-DocAi pipeline.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1RunPipelineMetadataProcessWithDocAiPipelineMetadata
        gcsIngestPipelineMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1RunPipelineMetadataGcsIngestPipelineMetadata
          description: The pipeline metadata for GcsIngest pipeline.
        totalFileCount:
          description: Number of files that were processed by the pipeline.
          type: integer
          format: int32
      description: Metadata message of RunPipeline method.
      type: object
      id: GoogleCloudContentwarehouseV1RunPipelineMetadata
    GoogleCloudContentwarehouseV1RuleEngineOutput:
      id: GoogleCloudContentwarehouseV1RuleEngineOutput
      description: >-
        Records the output of Rule Engine including rule evaluation and actions
        result.
      type: object
      properties:
        documentName:
          type: string
          description: >-
            Name of the document against which the rules and actions were
            evaluated.
        ruleEvaluatorOutput:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1RuleEvaluatorOutput
          description: >-
            Output from Rule Evaluator containing matched, unmatched and invalid
            rules.
        actionExecutorOutput:
          description: >-
            Output from Action Executor containing rule and corresponding
            actions execution result.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1ActionExecutorOutput
    GoogleCloudContentwarehouseV1UpdateOptions:
      properties:
        updateType:
          enum:
            - UPDATE_TYPE_UNSPECIFIED
            - UPDATE_TYPE_REPLACE
            - UPDATE_TYPE_MERGE
            - UPDATE_TYPE_INSERT_PROPERTIES_BY_NAMES
            - UPDATE_TYPE_REPLACE_PROPERTIES_BY_NAMES
            - UPDATE_TYPE_DELETE_PROPERTIES_BY_NAMES
            - UPDATE_TYPE_MERGE_AND_REPLACE_OR_INSERT_PROPERTIES_BY_NAMES
          description: Type for update.
          type: string
          enumDescriptions:
            - Defaults to full replace behavior, ie. FULL_REPLACE.
            - >-
              Fully replace all the fields (including previously linked raw
              document). Any field masks will be ignored.
            - Merge the fields into the existing entities.
            - Inserts the properties by names.
            - Replace the properties by names.
            - Delete the properties by names.
            - >-
              For each of the property, replaces the property if the it exists,
              otherwise inserts a new property. And for the rest of the fields,
              merge them based on update mask and merge fields options.
        updateMask:
          format: google-fieldmask
          description: >-
            Field mask for merging Document fields. For the `FieldMask`
            definition, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
          type: string
        mergeFieldsOptions:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1MergeFieldsOptions'
          description: Options for merging.
      id: GoogleCloudContentwarehouseV1UpdateOptions
      description: Options for Update operations.
      type: object
    GoogleCloudContentwarehouseV1Document:
      type: object
      properties:
        plainText:
          type: string
          description: Other document format, such as PPTX, XLXS
        inlineRawDocument:
          description: Raw document content.
          format: byte
          type: string
        rawDocumentPath:
          description: Raw document file in Cloud Storage path.
          type: string
        textExtractionEnabled:
          type: boolean
          description: If true, text extraction will be performed.
        updater:
          type: string
          description: The user who lastly updates the document.
        contentCategory:
          enum:
            - CONTENT_CATEGORY_UNSPECIFIED
            - CONTENT_CATEGORY_IMAGE
            - CONTENT_CATEGORY_AUDIO
            - CONTENT_CATEGORY_VIDEO
          type: string
          enumDescriptions:
            - No category is specified.
            - Content is of image type.
            - Content is of audio type.
            - Content is of video type.
          description: >-
            Indicates the category (image, audio, video etc.) of the original
            content.
        cloudAiDocument:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1Document'
          description: Document AI format to save the structured content, including OCR.
        dispositionTime:
          format: google-datetime
          description: >-
            Output only. If linked to a Collection with RetentionPolicy, the
            date when the document becomes mutable.
          readOnly: true
          type: string
        legalHold:
          readOnly: true
          description: Output only. Indicates if the document has a legal hold on it.
          type: boolean
        createTime:
          description: Output only. The time when the document is created.
          format: google-datetime
          readOnly: true
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The time when the document is last updated.
        displayName:
          type: string
          description: >-
            Required. Display name of the document given by the user. This name
            will be displayed in the UI. Customer can populate this field with
            the name of the document. This differs from the 'title' field as
            'title' is optional and stores the top heading in the document.
        title:
          description: >-
            Title that describes the document. This can be the top heading or
            text that describes the document.
          type: string
        name:
          type: string
          description: >-
            The resource name of the document. Format:
            projects/{project_number}/locations/{location}/documents/{document_id}.
            The name is ignored when creating a document.
        documentSchemaName:
          description: >-
            The Document schema name. Format:
            projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
          type: string
        displayUri:
          description: Uri to display the document, for example, in the UI.
          type: string
        properties:
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Property'
          type: array
          description: List of values that are user supplied metadata.
        textExtractionDisabled:
          deprecated: true
          type: boolean
          description: If true, text extraction will not be performed.
        referenceId:
          type: string
          description: >-
            The reference ID set by customers. Must be unique per project and
            location.
        creator:
          type: string
          description: The user who creates the document.
        rawDocumentFileType:
          description: >-
            This is used when DocAI was not used to load the document and
            parsing/ extracting is needed for the inline_raw_document. For
            example, if inline_raw_document is the byte representation of a PDF
            file, then this should be set to: RAW_DOCUMENT_FILE_TYPE_PDF.
          type: string
          enum:
            - RAW_DOCUMENT_FILE_TYPE_UNSPECIFIED
            - RAW_DOCUMENT_FILE_TYPE_PDF
            - RAW_DOCUMENT_FILE_TYPE_DOCX
            - RAW_DOCUMENT_FILE_TYPE_XLSX
            - RAW_DOCUMENT_FILE_TYPE_PPTX
            - RAW_DOCUMENT_FILE_TYPE_TEXT
            - RAW_DOCUMENT_FILE_TYPE_TIFF
          enumDescriptions:
            - No raw document specified or it is non-parsable
            - Adobe PDF format
            - Microsoft Word format
            - Microsoft Excel format
            - Microsoft Powerpoint format
            - UTF-8 encoded text format
            - TIFF or TIF image file format
      id: GoogleCloudContentwarehouseV1Document
      description: Defines the structure for content warehouse document proto.
    CloudAiPlatformTenantresourceTenantProjectConfig:
      type: object
      id: CloudAiPlatformTenantresourceTenantProjectConfig
      description: The identity to configure a tenant project.
      properties:
        policyBindings:
          description: >-
            Input/Output [Required]. The policy bindings that are applied to the
            tenant project during creation. At least one binding must have the
            role `roles/owner` with either `user` or `group` type.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleApiServiceconsumermanagementV1PolicyBinding
        services:
          description: >-
            Input/Output [Required]. The API services that are enabled on the
            tenant project during creation.
          type: array
          items:
            type: string
        folder:
          type: string
          description: >-
            Input/Output [Required]. The folder that holds tenant projects and
            folder-level permissions will be automatically granted to all tenant
            projects under the folder. Note: the valid folder format is
            `folders/{folder_number}`.
        billingConfig:
          description: >-
            Input/Output [Required]. The billing account properties to create
            the tenant project.
          $ref: >-
            #/components/schemas/GoogleApiServiceconsumermanagementV1BillingConfig
    GoogleLongrunningOperation:
      id: GoogleLongrunningOperation
      properties:
        done:
          type: boolean
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/GoogleRpcStatus'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        name:
          type: string
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
    GoogleCloudDocumentaiV1DocumentPage:
      type: object
      description: A page in a Document.
      properties:
        detectedBarcodes:
          description: A list of detected barcodes.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedBarcode
        tables:
          type: array
          description: A list of visually detected tables on the page.
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageTable'
        visualElements:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageVisualElement
          description: >-
            A list of detected non-text visual elements e.g. checkbox, signature
            etc. on the page.
        pageNumber:
          type: integer
          format: int32
          description: >-
            1-based index for current Page in a parent Document. Useful when a
            page is taken out of a Document for individual processing.
        detectedLanguages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          description: A list of detected languages together with confidence.
          type: array
        symbols:
          type: array
          description: A list of visually detected symbols on the page.
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageSymbol'
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageBlock'
          description: >-
            A list of visually detected text blocks on the page. A block has a
            set of lines (collected into paragraphs) that have a common
            line-spacing and orientation.
        formFields:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageFormField'
          description: A list of visually detected form fields on the page.
        image:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageImage'
          description: >-
            Rendered image for this page. This image is preprocessed to remove
            any skew, rotation, and distortions such that the annotation
            bounding boxes can be upright and axis-aligned.
        lines:
          type: array
          description: >-
            A list of visually detected text lines on the page. A collection of
            tokens that a human would perceive as a line.
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLine'
        imageQualityScores:
          $ref: >-
            #/components/schemas/GoogleCloudDocumentaiV1DocumentPageImageQualityScores
          description: Image quality scores.
        transforms:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageMatrix'
          description: >-
            Transformation matrices that were applied to the original document
            image to produce Page.image.
        tokens:
          description: A list of visually detected tokens on the page.
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageToken'
        paragraphs:
          type: array
          description: >-
            A list of visually detected text paragraphs on the page. A
            collection of lines that a human would perceive as a paragraph.
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageParagraph'
        dimension:
          description: Physical dimension of the page.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageDimension'
        layout:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
          description: Layout for the page.
        provenance:
          description: The history of this page.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          deprecated: true
      id: GoogleCloudDocumentaiV1DocumentPage
    GoogleCloudContentwarehouseV1RuleSet:
      properties:
        name:
          description: >-
            The resource name of the rule set. Managed internally. Format:
            projects/{project_number}/locations/{location}/ruleSet/{rule_set_id}.
            The name is ignored when creating a rule set.
          type: string
        rules:
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Rule'
          type: array
          description: List of rules given by the customer.
        description:
          description: Short description of the rule-set.
          type: string
        source:
          description: Source of the rules i.e., customer name.
          type: string
      description: Represents a set of rules from a single customer.
      type: object
      id: GoogleCloudContentwarehouseV1RuleSet
    GoogleCloudContentwarehouseV1FileTypeFilter:
      properties:
        fileType:
          enumDescriptions:
            - Default document type. If set, disables the filter.
            - Returns all document types, including folders.
            - Returns only folders.
            - Returns only non-folder documents.
            - Returns only root folders
          type: string
          enum:
            - FILE_TYPE_UNSPECIFIED
            - ALL
            - FOLDER
            - DOCUMENT
            - ROOT_FOLDER
          description: The type of files to return.
      id: GoogleCloudContentwarehouseV1FileTypeFilter
      description: Filter for the specific types of documents returned.
      type: object
    CloudAiPlatformTenantresourceInfraSpannerConfig:
      type: object
      id: CloudAiPlatformTenantresourceInfraSpannerConfig
      properties:
        spannerBorgServiceAccount:
          type: string
          description: >-
            Input [Optional]. The spanner borg service account for delegating
            the kms key to. For example,
            spanner-infra-cmek-nonprod@system.gserviceaccount.com, for the
            nonprod universe.
        spannerLocalNamePrefix:
          type: string
        createDatabaseOptions:
          $ref: >-
            #/components/schemas/CloudAiPlatformTenantresourceInfraSpannerConfigCreateDatabaseOptions
          description: >-
            Input [Optional]. The options to create a spanner database. Note:
            give the right options to ensure the right KMS key access audit
            logging and AxT logging in expected logging category.
        spannerUniverse:
          type: string
          description: >-
            Input [Required]. Every database in Spanner can be identified by the
            following path name: /span//:
        sdlBundlePath:
          type: string
          description: Input [Required]. The file path to the spanner SDL bundle.
        kmsKeyReference:
          description: >-
            Input [Optional]. The KMS key name or the KMS grant name used for
            CMEK encryption. Only set this field when provisioning new Infra
            Spanner databases. For existing Infra Spanner databases, this field
            will be ignored because CMEK re-encryption is not supported. For
            example, projects//locations//keyRings//cryptoKeys/
          type: string
        spannerNamespace:
          type: string
      description: 'The configuration for a spanner database provisioning. Next ID: 8'
    GoogleCloudContentwarehouseV1UpdateDocumentResponse:
      properties:
        metadata:
          description: >-
            Additional information for the API invocation, such as the request
            tracking id.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ResponseMetadata'
        ruleEngineOutput:
          description: >-
            Output from Rule Engine recording the rule evaluator and action
            executor's output. Refer format in:
            google/cloud/contentwarehouse/v1/rule_engine.proto
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleEngineOutput'
        document:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
          description: Updated document after executing update request.
      description: Response message for DocumentService.UpdateDocument.
      type: object
      id: GoogleCloudContentwarehouseV1UpdateDocumentResponse
    GoogleCloudDocumentaiV1Document:
      properties:
        revisions:
          description: Placeholder. Revision history of this document.
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentRevision'
          type: array
        error:
          description: Any error that occurred while processing this document.
          $ref: '#/components/schemas/GoogleRpcStatus'
        text:
          type: string
          description: Optional. UTF-8 encoded text in reading order from the document.
        pages:
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPage'
          type: array
          description: Visual page layout for the Document.
        textChanges:
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentTextChange'
          description: >-
            Placeholder. A list of text corrections made to Document.text. This
            is usually used for annotating corrections to OCR mistakes. Text
            changes for a given revision may not overlap with each other.
          type: array
        entities:
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentEntity'
          type: array
          description: >-
            A list of entities detected on Document.text. For document shards,
            entities in this list may cross shard boundaries.
        content:
          type: string
          format: byte
          description: >-
            Optional. Inline document content, represented as a stream of bytes.
            Note: As with all `bytes` fields, protobuffers use a pure binary
            representation, whereas JSON representations use base64.
        entityRelations:
          type: array
          description: Placeholder. Relationship among Document.entities.
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentEntityRelation'
        uri:
          type: string
          description: >-
            Optional. Currently supports Google Cloud Storage URI of the form
            `gs://bucket_name/object_name`. Object versioning is not supported.
            For more information, refer to [Google Cloud Storage Request
            URIs](https://cloud.google.com/storage/docs/reference-uris).
        textStyles:
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentStyle'
          description: Styles for the Document.text.
          type: array
          deprecated: true
        mimeType:
          type: string
          description: >-
            An IANA published [media type (MIME
            type)](https://www.iana.org/assignments/media-types/media-types.xhtml).
        shardInfo:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentShardInfo'
          description: >-
            Information about the sharding if this document is sharded part of a
            larger document. If the document is not sharded, this message is not
            specified.
      type: object
      id: GoogleCloudDocumentaiV1Document
      description: >-
        Document represents the canonical document resource in Document AI. It
        is an interchange format that provides insights into documents and
        allows for collaboration between users and Document AI to iterate and
        optimize for quality.
    GoogleCloudContentwarehouseV1FetchAclRequest:
      type: object
      properties:
        projectOwner:
          description: >-
            For Get Project ACL only. Authorization check for end user will be
            ignored when project_owner=true.
          type: boolean
        requestMetadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
          description: >-
            The meta information collected about the end user, used to enforce
            access control for the service.
      description: Request message for DocumentService.FetchAcl
      id: GoogleCloudContentwarehouseV1FetchAclRequest
    GoogleTypeDate:
      id: GoogleTypeDate
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      properties:
        month:
          type: integer
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          format: int32
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          format: int32
          type: integer
        day:
          type: integer
          format: int32
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
      type: object
    GoogleCloudDocumentaiV1DocumentPageSymbol:
      id: GoogleCloudDocumentaiV1DocumentPageSymbol
      properties:
        layout:
          description: Layout for Symbol.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
        detectedLanguages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          type: array
          description: A list of detected languages together with confidence.
      type: object
      description: A detected symbol.
    GoogleCloudDocumentaiV1DocumentPageParagraph:
      type: object
      id: GoogleCloudDocumentaiV1DocumentPageParagraph
      properties:
        detectedLanguages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          description: A list of detected languages together with confidence.
          type: array
        layout:
          description: Layout for Paragraph.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
        provenance:
          description: The history of this annotation.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          deprecated: true
      description: A collection of lines that a human would perceive as a paragraph.
    GoogleCloudContentwarehouseV1PublishAction:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
          description: Messages to be published.
        topicId:
          type: string
          description: >-
            The topic id in the Pub/Sub service for which messages will be
            published to.
      description: >-
        Represents the action responsible for publishing messages to a Pub/Sub
        topic.
      id: GoogleCloudContentwarehouseV1PublishAction
    GoogleCloudDocumentaiV1DocumentTextChange:
      id: GoogleCloudDocumentaiV1DocumentTextChange
      properties:
        textAnchor:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentTextAnchor'
          description: >-
            Provenance of the correction. Text anchor indexing into the
            Document.text. There can only be a single `TextAnchor.text_segments`
            element. If the start and end index of the text segment are the
            same, the text change is inserted before that index.
        changedText:
          description: The text that replaces the text identified in the `text_anchor`.
          type: string
        provenance:
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          description: The history of this annotation.
          deprecated: true
          type: array
      description: This message is used for text changes aka. OCR corrections.
      type: object
    GoogleCloudContentwarehouseV1QAResult:
      description: Additional result info for the question-answering feature.
      properties:
        confidenceScore:
          format: float
          type: number
          description: >-
            The calibrated confidence score for this document, in the range [0.,
            1.]. This represents the confidence level for whether the returned
            document and snippet answers the user's query.
        highlights:
          description: Highlighted sections in the snippet.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1QAResultHighlight
          type: array
      type: object
      id: GoogleCloudContentwarehouseV1QAResult
    GoogleCloudContentwarehouseV1RuleEvaluatorOutput:
      type: object
      id: GoogleCloudContentwarehouseV1RuleEvaluatorOutput
      properties:
        matchedRules:
          type: array
          description: >-
            A subset of triggered rules that are evaluated true for a given
            request.
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Rule'
        invalidRules:
          type: array
          description: >-
            A subset of triggered rules that failed the validation check(s)
            after parsing.
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1InvalidRule'
        triggeredRules:
          type: array
          description: >-
            List of rules fetched from database for the given request trigger
            type.
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Rule'
      description: Represents the output of the Rule Evaluator.
    GoogleCloudDocumentaiV1DocumentRevision:
      type: object
      description: Contains past or forward revisions of this document.
      properties:
        parent:
          items:
            type: integer
            format: int32
          type: array
          deprecated: true
          description: >-
            The revisions that this revision is based on. This can include one
            or more parent (when documents are merged.) This field represents
            the index into the `revisions` field.
        parentIds:
          type: array
          description: >-
            The revisions that this revision is based on. Must include all the
            ids that have anything to do with this revision - eg. there are
            `provenance.parent.revision` fields that index into this field.
          items:
            type: string
        agent:
          type: string
          description: >-
            If the change was made by a person specify the name or id of that
            person.
        createTime:
          type: string
          description: >-
            The time that the revision was created, internally generated by doc
            proto storage at the time of create.
          format: google-datetime
        id:
          description: >-
            Id of the revision, internally generated by doc proto storage.
            Unique within the context of the document.
          type: string
        humanReview:
          description: Human Review information of this revision.
          $ref: >-
            #/components/schemas/GoogleCloudDocumentaiV1DocumentRevisionHumanReview
        processor:
          description: >-
            If the annotation was made by processor identify the processor by
            its resource name.
          type: string
      id: GoogleCloudDocumentaiV1DocumentRevision
    GoogleCloudContentwarehouseV1CreateDocumentMetadata:
      type: object
      description: Metadata object for CreateDocument request (currently empty).
      properties: {}
      id: GoogleCloudContentwarehouseV1CreateDocumentMetadata
    GoogleProtobufEmpty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      properties: {}
      id: GoogleProtobufEmpty
      type: object
    GoogleCloudContentwarehouseV1DateTimeTypeOptions:
      type: object
      id: GoogleCloudContentwarehouseV1DateTimeTypeOptions
      description: Configurations for a date time property.
      properties: {}
    GoogleCloudDocumentaiV1NormalizedVertex:
      type: object
      description: >-
        A vertex represents a 2D point in the image. NOTE: the normalized vertex
        coordinates are relative to the original image and range from 0 to 1.
      id: GoogleCloudDocumentaiV1NormalizedVertex
      properties:
        x:
          type: number
          description: X coordinate.
          format: float
        'y':
          type: number
          description: Y coordinate (starts from the top of the image).
          format: float
    GoogleCloudContentwarehouseV1SearchDocumentsResponse:
      type: object
      id: GoogleCloudContentwarehouseV1SearchDocumentsResponse
      properties:
        matchingDocuments:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1SearchDocumentsResponseMatchingDocument
          description: >-
            The document entities that match the specified
            SearchDocumentsRequest.
          type: array
        histogramQueryResults:
          description: >-
            The histogram results that match with the specified
            SearchDocumentsRequest.histogram_queries.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1HistogramQueryResult
          type: array
        totalSize:
          type: integer
          description: >-
            The total number of matched documents which is available only if the
            client set SearchDocumentsRequest.require_total_size to `true` or
            set SearchDocumentsRequest.total_result_size to `ESTIMATED_SIZE` or
            `ACTUAL_SIZE`. Otherwise, the value will be `-1`. Typically a UI
            would handle this condition by displaying "of many", for example:
            "Displaying 10 of many".
          format: int32
        metadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ResponseMetadata'
          description: >-
            Additional information for the API invocation, such as the request
            tracking id.
        questionAnswer:
          type: string
          description: Experimental. Question answer from the query against the document.
        nextPageToken:
          type: string
          description: >-
            The token that specifies the starting position of the next page of
            results. This field is empty if there are no more results.
      description: Response message for DocumentService.SearchDocuments.
    GoogleCloudDocumentaiV1DocumentPageTableTableCell:
      type: object
      description: A cell representation inside the table.
      properties:
        colSpan:
          type: integer
          description: How many columns this cell spans.
          format: int32
        rowSpan:
          format: int32
          type: integer
          description: How many rows this cell spans.
        detectedLanguages:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          description: A list of detected languages together with confidence.
          type: array
        layout:
          description: Layout for TableCell.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
      id: GoogleCloudDocumentaiV1DocumentPageTableTableCell
    GoogleTypeColor:
      type: object
      id: GoogleTypeColor
      description: >-
        Represents a color in the RGBA color space. This representation is
        designed for simplicity of conversion to and from color representations
        in various languages over compactness. For example, the fields of this
        representation can be trivially provided to the constructor of
        `java.awt.Color` in Java; it can also be trivially provided to UIColor's
        `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little
        work, it can be easily formatted into a CSS `rgba()` string in
        JavaScript. This reference page doesn't have information about the
        absolute color space that should be used to interpret the RGB value—for
        example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications
        should assume the sRGB color space. When color equality needs to be
        decided, implementations, unless documented otherwise, treat two colors
        as equal if all their red, green, blue, and alpha values each differ by
        at most `1e-5`. Example (Java): import com.google.type.Color; // ...
        public static java.awt.Color fromProto(Color protocolor) { float alpha =
        protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return
        new java.awt.Color( protocolor.getRed(), protocolor.getGreen(),
        protocolor.getBlue(), alpha); } public static Color
        toProto(java.awt.Color color) { float red = (float) color.getRed();
        float green = (float) color.getGreen(); float blue = (float)
        color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder
        = Color .newBuilder() .setRed(red / denominator) .setGreen(green /
        denominator) .setBlue(blue / denominator); int alpha = color.getAlpha();
        if (alpha != 255) { result.setAlpha( FloatValue .newBuilder()
        .setValue(((float) alpha) / denominator) .build()); } return
        resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static
        UIColor* fromProto(Color* protocolor) { float red = [protocolor red];
        float green = [protocolor green]; float blue = [protocolor blue];
        FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if
        (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return
        [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static
        Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if
        (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return
        nil; } Color* result = [[Color alloc] init]; [result setRed:red];
        [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) {
        [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease];
        return result; } // ... Example (JavaScript): // ... var protoToCssColor
        = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var
        greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue ||
        0.0; var red = Math.floor(redFrac * 255); var green =
        Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if
        (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); }
        var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red,
        green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac,
        ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var
        rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
        = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
        resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) {
        resultBuilder.push('0'); } resultBuilder.push(hexString); return
        resultBuilder.join(''); }; // ...
      properties:
        red:
          format: float
          type: number
          description: The amount of red in the color as a value in the interval [0, 1].
        alpha:
          description: >-
            The fraction of this color that should be applied to the pixel. That
            is, the final pixel color is defined by the equation: `pixel color =
            alpha * (this color) + (1.0 - alpha) * (background color)` This
            means that a value of 1.0 corresponds to a solid color, whereas a
            value of 0.0 corresponds to a completely transparent color. This
            uses a wrapper message rather than a simple float scalar so that it
            is possible to distinguish between a default value and the value
            being unset. If omitted, this color object is rendered as a solid
            color (as if the alpha value had been explicitly given a value of
            1.0).
          format: float
          type: number
        green:
          description: The amount of green in the color as a value in the interval [0, 1].
          type: number
          format: float
        blue:
          description: The amount of blue in the color as a value in the interval [0, 1].
          format: float
          type: number
    GoogleCloudContentwarehouseV1RunPipelineMetadataIndividualDocumentStatus:
      properties:
        documentId:
          type: string
          description: Document identifier of an existing document.
        status:
          $ref: '#/components/schemas/GoogleRpcStatus'
          description: The status processing the document.
      description: The status of processing a document.
      id: GoogleCloudContentwarehouseV1RunPipelineMetadataIndividualDocumentStatus
      type: object
    GoogleIamV1AuditConfig:
      properties:
        auditLogConfigs:
          items:
            $ref: '#/components/schemas/GoogleIamV1AuditLogConfig'
          type: array
          description: The configuration for logging of each type of permission.
        service:
          type: string
          description: >-
            Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
      id: GoogleIamV1AuditConfig
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
        specific service, the union of the two AuditConfigs is used for that
        service: the log_types specified in each AuditConfig are enabled, and
        the exempted_members in each AuditLogConfig are exempted. Example Policy
        with multiple AuditConfigs: { "audit_configs": [ { "service":
        "allServices", "audit_log_configs": [ { "log_type": "DATA_READ",
        "exempted_members": [ "user:jose@example.com" ] }, { "log_type":
        "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service":
        "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type":
        "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
        "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy
        enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts
        `jose@example.com` from DATA_READ logging, and `aliya@example.com` from
        DATA_WRITE logging.
      type: object
    GoogleCloudContentwarehouseV1ListLinkedTargetsResponse:
      type: object
      description: Response message for DocumentLinkService.ListLinkedTargets.
      properties:
        documentLinks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentLink'
          description: Target document-links.
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
      id: GoogleCloudContentwarehouseV1ListLinkedTargetsResponse
    GoogleCloudContentwarehouseV1ListSynonymSetsResponse:
      properties:
        nextPageToken:
          type: string
          description: >-
            A page token, received from a previous `ListSynonymSets` call.
            Provide this to retrieve the subsequent page.
        synonymSets:
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SynonymSet'
          type: array
          description: The synonymSets from the specified parent.
      id: GoogleCloudContentwarehouseV1ListSynonymSetsResponse
      type: object
      description: Response message for SynonymSetService.ListSynonymSets.
    CloudAiPlatformTenantresourceIamPolicyBinding:
      properties:
        resource:
          description: >-
            Input/Output [Required]. The resource name that will be accessed by
            members, which also depends on resource_type. Note: placeholders are
            supported in resource names. For example, ${tpn} will be used when
            the tenant project number is not ready.
          type: string
        members:
          items:
            type: string
          type: array
          description: >-
            Input/Output [Required]. The member service accounts with the roles
            above. Note: placeholders are same as the resource above.
        role:
          description: Input/Output [Required]. The role for members below.
          type: string
        resourceType:
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - PROJECT
            - SERVICE_ACCOUNT
            - GCS_BUCKET
            - SERVICE_CONSUMER
            - AR_REPO
          type: string
          description: >-
            Input/Output [Required]. Specifies the type of resource that will be
            accessed by members.
          enumDescriptions:
            - ''
            - >-
              The value of resource field is the ID or number of a project.
              Format is 
            - >-
              The value of resource field is the resource name of a service
              account. Format is projects//serviceAccounts/
            - >-
              The value of resource field is the name of a GCS bucket (not its
              resource name). Format is .
            - >-
              The value of resource field is the resource name of a service
              consumer. Format is services//consumers/
            - >-
              The value of the resource field is the AR Image Uri which
              identifies an AR REPO. Allowed formats are: /// ///: ///@
      id: CloudAiPlatformTenantresourceIamPolicyBinding
      description: >-
        The dynamic IAM bindings to be granted after tenant projects are
        created.
      type: object
    GoogleCloudContentwarehouseV1CreateDocumentLinkRequest:
      description: Request message for DocumentLinkService.CreateDocumentLink.
      type: object
      id: GoogleCloudContentwarehouseV1CreateDocumentLinkRequest
      properties:
        documentLink:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentLink'
          description: >-
            Required. Document links associated with the source documents
            (source_document_id).
        requestMetadata:
          description: >-
            The meta information collected about the document creator, used to
            enforce access control for the service.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
    GoogleCloudContentwarehouseV1SynonymSet:
      type: object
      properties:
        synonyms:
          description: List of Synonyms for the context.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1SynonymSetSynonym
        name:
          description: >-
            The resource name of the SynonymSet This is mandatory for
            google.api.resource. Format:
            projects/{project_number}/locations/{location}/synonymSets/{context}.
          type: string
        context:
          description: >-
            This is a freeform field. Example contexts can be "sales,"
            "engineering," "real estate," "accounting," etc. The context can be
            supplied during search requests.
          type: string
      id: GoogleCloudContentwarehouseV1SynonymSet
      description: >-
        Represents a list of synonyms for a given context. For example a context
        "sales" could contain: Synonym 1: sale, invoice, bill, order Synonym 2:
        money, credit, finance, payment Synonym 3: shipping, freight, transport
        Each SynonymSets should be disjoint
    GoogleCloudContentwarehouseV1GcsIngestPipeline:
      type: object
      properties:
        processorType:
          type: string
          description: >-
            The Doc AI processor type name. Only used when the format of
            ingested files is Doc AI Document proto format.
        pipelineConfig:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1IngestPipelineConfig
          description: >-
            Optional. The config for the Cloud Storage Ingestion pipeline. It
            provides additional customization options to run the pipeline and
            can be skipped if it is not applicable.
        skipIngestedDocuments:
          type: boolean
          description: >-
            The flag whether to skip ingested documents. If it is set to true,
            documents in Cloud Storage contains key "status" with value
            "status=ingested" in custom metadata will be skipped to ingest.
        schemaName:
          description: >-
            The Document Warehouse schema resource name. All documents processed
            by this pipeline will use this schema. Format:
            projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
          type: string
        inputPath:
          description: >-
            The input Cloud Storage folder. All files under this folder will be
            imported to Document Warehouse. Format: `gs:///`.
          type: string
      description: The configuration of the Cloud Storage Ingestion pipeline.
      id: GoogleCloudContentwarehouseV1GcsIngestPipeline
    GoogleCloudContentwarehouseV1UpdateDocumentMetadata:
      type: object
      description: Metadata object for UpdateDocument request (currently empty).
      properties: {}
      id: GoogleCloudContentwarehouseV1UpdateDocumentMetadata
    GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak:
      id: GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak
      properties:
        type:
          type: string
          enumDescriptions:
            - Unspecified break type.
            - A single whitespace.
            - A wider whitespace.
            - A hyphen that indicates that a token has been split across lines.
          description: Detected break type.
          enum:
            - TYPE_UNSPECIFIED
            - SPACE
            - WIDE_SPACE
            - HYPHEN
      description: Detected break at the end of a Token.
      type: object
    GoogleCloudContentwarehouseV1TextArray:
      id: GoogleCloudContentwarehouseV1TextArray
      description: String/text values.
      type: object
      properties:
        values:
          description: List of text values.
          items:
            type: string
          type: array
    GoogleCloudDocumentaiV1DocumentStyle:
      type: object
      properties:
        fontWeight:
          type: string
          description: >-
            [Font weight](https://www.w3schools.com/cssref/pr_font_weight.asp).
            Possible values are `normal`, `bold`, `bolder`, and `lighter`.
        fontFamily:
          description: >-
            Font family such as `Arial`, `Times New Roman`.
            https://www.w3schools.com/cssref/pr_font_font-family.asp
          type: string
        backgroundColor:
          $ref: '#/components/schemas/GoogleTypeColor'
          description: Text background color.
        fontSize:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentStyleFontSize'
          description: Font size.
        textDecoration:
          type: string
          description: >-
            [Text
            decoration](https://www.w3schools.com/cssref/pr_text_text-decoration.asp).
            Follows CSS standard. 
        textAnchor:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentTextAnchor'
          description: Text anchor indexing into the Document.text.
        color:
          description: Text color.
          $ref: '#/components/schemas/GoogleTypeColor'
        textStyle:
          type: string
          description: >-
            [Text
            style](https://www.w3schools.com/cssref/pr_font_font-style.asp).
            Possible values are `normal`, `italic`, and `oblique`.
      description: >-
        Annotation for common text style attributes. This adheres to CSS
        conventions as much as possible.
      id: GoogleCloudDocumentaiV1DocumentStyle
    GoogleCloudContentwarehouseV1FloatArray:
      description: Float values.
      id: GoogleCloudContentwarehouseV1FloatArray
      type: object
      properties:
        values:
          type: array
          items:
            type: number
            format: float
          description: List of float values.
    GoogleTypeMoney:
      properties:
        units:
          description: >-
            The whole units of the amount. For example if `currencyCode` is
            `"USD"`, then 1 unit is one US dollar.
          type: string
          format: int64
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
        nanos:
          description: >-
            Number of nano (10^-9) units of the amount. The value must be
            between -999,999,999 and +999,999,999 inclusive. If `units` is
            positive, `nanos` must be positive or zero. If `units` is zero,
            `nanos` can be positive, zero, or negative. If `units` is negative,
            `nanos` must be negative or zero. For example $-1.75 is represented
            as `units`=-1 and `nanos`=-750,000,000.
          type: integer
          format: int32
      id: GoogleTypeMoney
      type: object
      description: Represents an amount of money with its currency type.
    CloudAiPlatformTenantresourceCloudSqlInstanceConfig:
      description: >-
        The identity to configure a CloudSQL instance provisioned via SLM
        Terraform.
      type: object
      id: CloudAiPlatformTenantresourceCloudSqlInstanceConfig
      properties:
        cloudSqlInstanceConnectionName:
          description: Output only. The CloudSQL instance connection name.
          type: string
        slmInstanceType:
          description: Input [Required]. The SLM instance type to provision CloudSQL.
          type: string
        cloudSqlInstanceName:
          type: string
          description: >-
            Input/Output [Optional]. The CloudSQL instance name within SLM
            instance. If not set, a random UUIC will be generated as instance
            name.
        slmInstanceName:
          type: string
          description: Output only. The SLM instance's full resource name.
        mdbRolesForCorpAccess:
          type: array
          description: Input [Optional]. MDB roles for corp access to CloudSQL instance.
          items:
            type: string
        slmInstanceTemplate:
          description: Input [Required]. The SLM instance template to provision CloudSQL.
          type: string
        kmsKeyReference:
          description: >-
            Input [Optional]. The KMS key name or the KMS grant name used for
            CMEK encryption. Only set this field when provisioning new CloudSQL
            instances. For existing CloudSQL instances, this field will be
            ignored because CMEK re-encryption is not supported.
          type: string
    GoogleCloudContentwarehouseV1RunPipelineMetadataExportToCdwPipelineMetadata:
      description: The metadata message for Export-to-CDW pipeline.
      properties:
        documents:
          description: >-
            The input list of all the resource names of the documents to be
            exported.
          type: array
          items:
            type: string
        docAiDataset:
          description: The output CDW dataset resource name.
          type: string
        outputPath:
          type: string
          description: The output Cloud Storage folder in this pipeline.
      type: object
      id: >-
        GoogleCloudContentwarehouseV1RunPipelineMetadataExportToCdwPipelineMetadata
    GoogleCloudContentwarehouseV1ProcessorInfo:
      id: GoogleCloudContentwarehouseV1ProcessorInfo
      properties:
        documentType:
          type: string
          description: The processor will process the documents with this document type.
        processorName:
          description: >-
            The processor resource name. Format is
            `projects/{project}/locations/{location}/processors/{processor}`, or
            `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}`
          type: string
        schemaName:
          description: >-
            The Document schema resource name. All documents processed by this
            processor will use this schema. Format:
            projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
          type: string
      type: object
      description: The DocAI processor information.
    GoogleCloudContentwarehouseV1TimestampArray:
      type: object
      description: Timestamp values.
      properties:
        values:
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1TimestampValue'
          description: List of timestamp values.
          type: array
      id: GoogleCloudContentwarehouseV1TimestampArray
    GoogleCloudContentwarehouseV1PropertyDefinition:
      id: GoogleCloudContentwarehouseV1PropertyDefinition
      type: object
      description: Defines the metadata for a schema property.
      properties:
        schemaSources:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1PropertyDefinitionSchemaSource
          type: array
          description: >-
            The mapping information between this property to another schema
            source.
        mapTypeOptions:
          description: Map property.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1MapTypeOptions'
        textTypeOptions:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1TextTypeOptions'
          description: Text/string property.
        propertyTypeOptions:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1PropertyTypeOptions
          description: Nested structured data property.
        isMetadata:
          description: >-
            Whether the property is user supplied metadata. This out-of-the box
            placeholder setting can be used to tag derived properties. Its value
            and interpretation logic should be implemented by API user.
          type: boolean
        retrievalImportance:
          enum:
            - RETRIEVAL_IMPORTANCE_UNSPECIFIED
            - HIGHEST
            - HIGHER
            - HIGH
            - MEDIUM
            - LOW
            - LOWEST
          type: string
          description: The retrieval importance of the property during search.
          enumDescriptions:
            - No importance specified. Default medium importance.
            - Highest importance.
            - Higher importance.
            - High importance.
            - Medium importance.
            - Low importance (negative).
            - Lowest importance (negative).
        isRepeatable:
          type: boolean
          description: Whether the property can have multiple values.
        dateTimeTypeOptions:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1DateTimeTypeOptions
          description: >-
            Date time property. It is not supported by CMEK compliant
            deployment.
        timestampTypeOptions:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1TimestampTypeOptions
          description: >-
            Timestamp property. It is not supported by CMEK compliant
            deployment.
        floatTypeOptions:
          description: Float property.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1FloatTypeOptions'
        isFilterable:
          type: boolean
          description: >-
            Whether the property can be filtered. If this is a sub-property, all
            the parent properties must be marked filterable.
        isSearchable:
          type: boolean
          description: Indicates that the property should be included in a global search.
        name:
          type: string
          description: >-
            Required. The name of the metadata property. Must be unique within a
            document schema and is case insensitive. Names must be non-blank,
            start with a letter, and can contain alphanumeric characters and: /,
            :, -, _, and .
        displayName:
          type: string
          description: The display-name for the property, used for front-end.
        enumTypeOptions:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1EnumTypeOptions'
          description: Enum/categorical property.
        integerTypeOptions:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1IntegerTypeOptions'
          description: Integer property.
        isRequired:
          type: boolean
          description: >-
            Whether the property is mandatory. Default is 'false', i.e.
            populating property value can be skipped. If 'true' then user must
            populate the value for this property.
    GoogleCloudContentwarehouseV1FetchAclResponse:
      description: Response message for DocumentService.FetchAcl.
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: The IAM policy.
        metadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ResponseMetadata'
          description: >-
            Additional information for the API invocation, such as the request
            tracking id.
      id: GoogleCloudContentwarehouseV1FetchAclResponse
    GoogleCloudDocumentaiV1DocumentProvenance:
      type: object
      description: >-
        Structure to identify provenance relationships between annotations in
        different revisions.
      id: GoogleCloudDocumentaiV1DocumentProvenance
      properties:
        type:
          enumDescriptions:
            - >-
              Operation type unspecified. If no operation is specified a
              provenance entry is simply used to match against a `parent`.
            - Add an element.
            - Remove an element identified by `parent`.
            - >-
              Updates any fields within the given provenance scope of the
              message. It overwrites the fields rather than replacing them. Use
              this when you want to update a field value of an entity without
              also updating all the child properties.
            - Currently unused. Replace an element identified by `parent`.
            - >-
              Deprecated. Request human review for the element identified by
              `parent`.
            - >-
              Deprecated. Element is reviewed and approved at human review,
              confidence will be set to 1.0.
            - Deprecated. Element is skipped in the validation process.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - true
            - true
            - true
          type: string
          enum:
            - OPERATION_TYPE_UNSPECIFIED
            - ADD
            - REMOVE
            - UPDATE
            - REPLACE
            - EVAL_REQUESTED
            - EVAL_APPROVED
            - EVAL_SKIPPED
          description: The type of provenance operation.
        id:
          deprecated: true
          type: integer
          format: int32
          description: >-
            The Id of this operation. Needs to be unique within the scope of the
            revision.
        parents:
          description: References to the original elements that are replaced.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentProvenanceParent
          type: array
        revision:
          format: int32
          deprecated: true
          type: integer
          description: The index of the revision that produced this element.
    GoogleCloudContentwarehouseV1FloatTypeOptions:
      description: Configurations for a float property.
      properties: {}
      type: object
      id: GoogleCloudContentwarehouseV1FloatTypeOptions
    GoogleCloudDocumentaiV1DocumentPageTableTableRow:
      type: object
      id: GoogleCloudDocumentaiV1DocumentPageTableTableRow
      description: A row of table cells.
      properties:
        cells:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageTableTableCell
          description: Cells that make up this row.
          type: array
    GoogleCloudContentwarehouseV1QAResultHighlight:
      description: >-
        A text span in the search text snippet that represents a highlighted
        section (answer context, highly relevant sentence, etc.).
      type: object
      properties:
        endIndex:
          description: End index of the highlight, exclusive.
          type: integer
          format: int32
        startIndex:
          description: Start index of the highlight.
          format: int32
          type: integer
      id: GoogleCloudContentwarehouseV1QAResultHighlight
    GoogleCloudContentwarehouseV1UpdateRuleSetRequest:
      properties:
        ruleSet:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleSet'
          description: Required. The rule set to update.
      description: Request message for RuleSetService.UpdateRuleSet.
      type: object
      id: GoogleCloudContentwarehouseV1UpdateRuleSetRequest
    GoogleCloudDocumentaiV1DocumentPageBlock:
      properties:
        detectedLanguages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          description: A list of detected languages together with confidence.
        layout:
          description: Layout for Block.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
        provenance:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          deprecated: true
          description: The history of this annotation.
      description: >-
        A block has a set of lines (collected into paragraphs) that have a
        common line-spacing and orientation.
      type: object
      id: GoogleCloudDocumentaiV1DocumentPageBlock
    GoogleCloudContentwarehouseV1EnumArray:
      properties:
        values:
          type: array
          description: List of enum values.
          items:
            type: string
      description: Enum values.
      id: GoogleCloudContentwarehouseV1EnumArray
      type: object
    GoogleCloudDocumentaiV1DocumentPageToken:
      type: object
      properties:
        provenance:
          deprecated: true
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
          description: The history of this annotation.
        styleInfo:
          $ref: >-
            #/components/schemas/GoogleCloudDocumentaiV1DocumentPageTokenStyleInfo
          description: Text style attributes.
        detectedLanguages:
          description: A list of detected languages together with confidence.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
          type: array
        layout:
          description: Layout for Token.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
        detectedBreak:
          description: Detected break at the end of a Token.
          $ref: >-
            #/components/schemas/GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak
      id: GoogleCloudDocumentaiV1DocumentPageToken
      description: A detected token.
    CloudAiPlatformTenantresourceInfraSpannerConfigCreateDatabaseOptions:
      description: >-
        The options to create a spanner database. KMS key access audit logging
        and AxT logging will be associated with the given resource name,
        resource type and service name. Please ensure to give right options to
        enable correct audit logging and AxT logging.
      type: object
      properties:
        cmekCloudResourceType:
          description: >-
            The cloud resource type for the CMEK encryption. For example,
            contentwarehouse.googleapis.com/Location
          type: string
        cmekServiceName:
          description: >-
            The service name for the CMEK encryption. For example,
            contentwarehouse.googleapis.com
          type: string
        cmekCloudResourceName:
          type: string
          description: >-
            The cloud resource name for the CMEK encryption. For example,
            projects//locations/
      id: CloudAiPlatformTenantresourceInfraSpannerConfigCreateDatabaseOptions
    GoogleTypeExpr:
      description: >-
        Represents a textual expression in the Common Expression Language (CEL)
        syntax. CEL is a C-like expression language. The syntax and semantics of
        CEL are documented at https://github.com/google/cel-spec. Example
        (Comparison): title: "Summary size limit" description: "Determines if a
        summary is less than 100 chars" expression: "document.summary.size() <
        100" Example (Equality): title: "Requestor is owner" description:
        "Determines if requestor is the document owner" expression:
        "document.owner == request.auth.claims.email" Example (Logic): title:
        "Public documents" description: "Determine whether the document should
        be publicly visible" expression: "document.type != 'private' &&
        document.type != 'internal'" Example (Data Manipulation): title:
        "Notification string" description: "Create a notification string with a
        timestamp." expression: "'New message received at ' +
        string(document.create_time)" The exact variables and functions that may
        be referenced within an expression are determined by the service that
        evaluates it. See the service documentation for additional information.
      properties:
        location:
          description: >-
            Optional. String indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: >-
            Optional. Title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
        description:
          description: >-
            Optional. Description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          type: string
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.
      id: GoogleTypeExpr
      type: object
    GoogleCloudContentwarehouseV1CreateDocumentResponse:
      properties:
        ruleEngineOutput:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleEngineOutput'
          description: >-
            Output from Rule Engine recording the rule evaluator and action
            executor's output. Refer format in:
            google/cloud/contentwarehouse/v1/rule_engine.proto
        longRunningOperations:
          type: array
          description: post-processing LROs
          items:
            $ref: '#/components/schemas/GoogleLongrunningOperation'
        document:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
          description: Document created after executing create request.
        metadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ResponseMetadata'
          description: >-
            Additional information for the API invocation, such as the request
            tracking id.
      id: GoogleCloudContentwarehouseV1CreateDocumentResponse
      description: Response message for DocumentService.CreateDocument.
      type: object
    GoogleCloudContentwarehouseV1GetDocumentRequest:
      description: Request message for DocumentService.GetDocument.
      type: object
      id: GoogleCloudContentwarehouseV1GetDocumentRequest
      properties:
        requestMetadata:
          description: >-
            The meta information collected about the end user, used to enforce
            access control for the service.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
    GoogleCloudContentwarehouseV1ListLinkedTargetsRequest:
      properties:
        requestMetadata:
          description: >-
            The meta information collected about the document creator, used to
            enforce access control for the service.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
      id: GoogleCloudContentwarehouseV1ListLinkedTargetsRequest
      type: object
      description: Request message for DocumentLinkService.ListLinkedTargets.
    GoogleTypePostalAddress:
      description: >-
        Represents a postal address, e.g. for postal delivery or payments
        addresses. Given a postal address, a postal service can deliver items to
        a premise, P.O. Box or similar. It is not intended to model geographical
        locations (roads, towns, mountains). In typical usage an address would
        be created via user input or from importing existing data, depending on
        the type of process. Advice on address input / editing: - Use an
        internationalization-ready address widget such as
        https://github.com/google/libaddressinput) - Users should not be
        presented with UI elements for input or editing of fields outside
        countries where that field is used. For more guidance on how to use this
        schema, please see: https://support.google.com/business/answer/6397478
      type: object
      properties:
        languageCode:
          type: string
          description: >-
            Optional. BCP-47 language code of the contents of this address (if
            known). This is often the UI language of the input form or is
            expected to match one of the languages used in the address'
            country/region, or their transliterated equivalents. This can affect
            formatting in certain countries, but is not critical to the
            correctness of the data and will never affect any validation or
            other non-formatting related operations. If this value is not known,
            it should be omitted (rather than specifying a possibly incorrect
            default). Examples: "zh-Hant", "ja", "ja-Latn", "en".
        locality:
          description: >-
            Optional. Generally refers to the city/town portion of the address.
            Examples: US city, IT comune, UK post town. In regions of the world
            where localities are not well defined or do not fit into this
            structure well, leave locality empty and use address_lines.
          type: string
        sublocality:
          description: >-
            Optional. Sublocality of the address. For example, this can be
            neighborhoods, boroughs, districts.
          type: string
        administrativeArea:
          type: string
          description: >-
            Optional. Highest administrative subdivision which is used for
            postal addresses of a country or region. For example, this can be a
            state, a province, an oblast, or a prefecture. Specifically, for
            Spain this is the province and not the autonomous community (e.g.
            "Barcelona" and not "Catalonia"). Many countries don't use an
            administrative area in postal addresses. E.g. in Switzerland this
            should be left unpopulated.
        sortingCode:
          type: string
          description: >-
            Optional. Additional, country-specific, sorting code. This is not
            used in most regions. Where it is used, the value is either a string
            like "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or
            just a number alone, representing the "sector code" (Jamaica),
            "delivery area indicator" (Malawi) or "post office indicator" (e.g.
            Côte d'Ivoire).
        postalCode:
          type: string
          description: >-
            Optional. Postal code of the address. Not all countries use or
            require postal codes to be present, but where they are used, they
            may trigger additional validation with other parts of the address
            (e.g. state/zip validation in the U.S.A.).
        recipients:
          items:
            type: string
          description: >-
            Optional. The recipient at the address. This field may, under
            certain circumstances, contain multiline information. For example,
            it might contain "care of" information.
          type: array
        regionCode:
          type: string
          description: >-
            Required. CLDR region code of the country/region of the address.
            This is never inferred and it is up to the user to ensure the value
            is correct. See https://cldr.unicode.org/ and
            https://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
            for details. Example: "CH" for Switzerland.
        addressLines:
          type: array
          items:
            type: string
          description: >-
            Unstructured address lines describing the lower levels of an
            address. Because values in address_lines do not have type
            information and may sometimes contain multiple values in a single
            field (e.g. "Austin, TX"), it is important that the line order is
            clear. The order of address lines should be "envelope order" for the
            country/region of the address. In places where this can vary (e.g.
            Japan), address_language is used to make it explicit (e.g. "ja" for
            large-to-small ordering and "ja-Latn" or "en" for small-to-large).
            This way, the most specific line of an address can be selected based
            on the language. The minimum permitted structural representation of
            an address consists of a region_code with all remaining information
            placed in the address_lines. It would be possible to format such an
            address very approximately without geocoding, but no semantic
            reasoning could be made about any of the address components until it
            was at least partially resolved. Creating an address only containing
            a region_code and address_lines, and then geocoding is the
            recommended way to handle completely unstructured addresses (as
            opposed to guessing which parts of the address should be localities
            or administrative areas).
        revision:
          type: integer
          description: >-
            The schema revision of the `PostalAddress`. This must be set to 0,
            which is the latest revision. All new revisions **must** be backward
            compatible with old revisions.
          format: int32
        organization:
          description: Optional. The name of the organization at the address.
          type: string
      id: GoogleTypePostalAddress
    GoogleCloudDocumentaiV1BoundingPoly:
      properties:
        normalizedVertices:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1NormalizedVertex'
          description: The bounding polygon normalized vertices.
        vertices:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1Vertex'
          description: The bounding polygon vertices.
      description: A bounding polygon for the detected image annotation.
      type: object
      id: GoogleCloudDocumentaiV1BoundingPoly
    GoogleCloudContentwarehouseV1DocumentSchema:
      id: GoogleCloudContentwarehouseV1DocumentSchema
      description: A document schema used to define document structure.
      type: object
      properties:
        displayName:
          description: >-
            Required. Name of the schema given by the user. Must be unique per
            project.
          type: string
        documentIsFolder:
          type: boolean
          description: >-
            Document Type, true refers the document is a folder, otherwise it is
            a typical document.
        description:
          type: string
          description: Schema description.
        createTime:
          description: Output only. The time when the document schema is created.
          type: string
          readOnly: true
          format: google-datetime
        propertyDefinitions:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1PropertyDefinition
          description: Document details.
          type: array
        name:
          description: >-
            The resource name of the document schema. Format:
            projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
            The name is ignored when creating a document schema.
          type: string
        updateTime:
          type: string
          readOnly: true
          description: Output only. The time when the document schema is last updated.
          format: google-datetime
    GoogleCloudDocumentaiV1DocumentTextAnchor:
      properties:
        content:
          type: string
          description: >-
            Contains the content of the text span so that users do not have to
            look it up in the text_segments. It is always populated for
            formFields.
        textSegments:
          description: The text segments from the Document.text.
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment
          type: array
      id: GoogleCloudDocumentaiV1DocumentTextAnchor
      description: Text reference indexing into the Document.text.
      type: object
    GoogleCloudDocumentaiV1DocumentEntityNormalizedValue:
      type: object
      properties:
        integerValue:
          format: int32
          type: integer
          description: Integer value.
        dateValue:
          description: >-
            Date value. Includes year, month, day. See also:
            https://github.com/googleapis/googleapis/blob/master/google/type/date.proto
          $ref: '#/components/schemas/GoogleTypeDate'
        floatValue:
          format: float
          type: number
          description: Float value.
        text:
          type: string
          description: >-
            Optional. An optional field to store a normalized string. For some
            entity types, one of respective `structured_value` fields may also
            be populated. Also not all the types of `structured_value` will be
            normalized. For example, some processors may not generate `float` or
            `integer` normalized text by default. Below are sample formats
            mapped to structured values. - Money/Currency type (`money_value`)
            is in the ISO 4217 text format. - Date type (`date_value`) is in the
            ISO 8601 text format. - Datetime type (`datetime_value`) is in the
            ISO 8601 text format.
        datetimeValue:
          $ref: '#/components/schemas/GoogleTypeDateTime'
          description: >-
            DateTime value. Includes date, time, and timezone. See also:
            https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto
        booleanValue:
          description: >-
            Boolean value. Can be used for entities with binary values, or for
            checkboxes.
          type: boolean
        addressValue:
          $ref: '#/components/schemas/GoogleTypePostalAddress'
          description: >-
            Postal address. See also:
            https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto
        moneyValue:
          $ref: '#/components/schemas/GoogleTypeMoney'
          description: >-
            Money value. See also:
            https://github.com/googleapis/googleapis/blob/master/google/type/money.proto
      id: GoogleCloudDocumentaiV1DocumentEntityNormalizedValue
      description: Parsed and normalized entity value.
    GoogleCloudContentwarehouseV1DeleteDocumentLinkRequest:
      id: GoogleCloudContentwarehouseV1DeleteDocumentLinkRequest
      type: object
      properties:
        requestMetadata:
          description: >-
            The meta information collected about the document creator, used to
            enforce access control for the service.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
      description: Request message for DocumentLinkService.DeleteDocumentLink.
    GoogleCloudContentwarehouseV1IntegerArray:
      type: object
      description: Integer values.
      id: GoogleCloudContentwarehouseV1IntegerArray
      properties:
        values:
          type: array
          items:
            format: int32
            type: integer
          description: List of integer values.
    GoogleCloudContentwarehouseV1SetAclRequest:
      id: GoogleCloudContentwarehouseV1SetAclRequest
      properties:
        requestMetadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
          description: >-
            The meta information collected about the end user, used to enforce
            access control for the service.
        projectOwner:
          type: boolean
          description: >-
            For Set Project ACL only. Authorization check for end user will be
            ignored when project_owner=true.
        policy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: >-
            Required. REQUIRED: The complete policy to be applied to the
            `resource`. The size of the policy is limited to a few 10s of KB.
            This refers to an Identity and Access (IAM) policy, which specifies
            access controls for the Document. You can set ACL with condition for
            projects only. Supported operators are: `=`, `!=`, `<`, `<=`, `>`,
            and `>=` where the left of the operator is `DocumentSchemaId` or
            property name and the right of the operator is a number or a quoted
            string. You must escape backslash (\\) and quote (\") characters.
            Boolean expressions (AND/OR) are supported up to 3 levels of nesting
            (for example, "((A AND B AND C) OR D) AND E"), a maximum of 10
            comparisons are allowed in the expression. The expression must be <
            6000 bytes in length. Sample condition: `"DocumentSchemaId = \"some
            schema id\" OR SchemaId.floatPropertyName >= 10"`
      description: Request message for DocumentService.SetAcl.
      type: object
    GoogleCloudContentwarehouseV1DocumentReference:
      properties:
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The time when the document is created.
          type: string
        displayName:
          description: >-
            display_name of the referenced document; this name does not need to
            be consistent to the display_name in the Document proto, depending
            on the ACL constraint.
          type: string
        snippet:
          type: string
          description: >-
            Stores the subset of the referenced document's content. This is
            useful to allow user peek the information of the referenced
            document.
        deleteTime:
          format: google-datetime
          description: Output only. The time when the document is deleted.
          readOnly: true
          type: string
        documentName:
          type: string
          description: Required. Name of the referenced document.
        updateTime:
          description: Output only. The time when the document is last updated.
          type: string
          readOnly: true
          format: google-datetime
        documentIsRetentionFolder:
          type: boolean
          description: Document is a folder with retention policy.
        documentIsFolder:
          type: boolean
          description: The document type of the document being referenced.
        documentIsLegalHoldFolder:
          description: Document is a folder with legal hold.
          type: boolean
      description: References to the documents.
      type: object
      id: GoogleCloudContentwarehouseV1DocumentReference
    GoogleCloudContentwarehouseV1TimestampTypeOptions:
      type: object
      description: Configurations for a timestamp property.
      properties: {}
      id: GoogleCloudContentwarehouseV1TimestampTypeOptions
    GoogleCloudDocumentaiV1DocumentRevisionHumanReview:
      id: GoogleCloudDocumentaiV1DocumentRevisionHumanReview
      description: Human Review information of the document.
      type: object
      properties:
        state:
          type: string
          description: Human review state. e.g. `requested`, `succeeded`, `rejected`.
        stateMessage:
          type: string
          description: >-
            A message providing more details about the current state of
            processing. For example, the rejection reason when the state is
            `rejected`.
    GoogleCloudContentwarehouseV1SearchDocumentsResponseMatchingDocument:
      description: Document entry with metadata inside SearchDocumentsResponse
      type: object
      id: GoogleCloudContentwarehouseV1SearchDocumentsResponseMatchingDocument
      properties:
        document:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
          description: >-
            Document that matches the specified SearchDocumentsRequest. This
            document only contains indexed metadata information.
        searchTextSnippet:
          type: string
          description: >-
            Contains snippets of text from the document full raw text that most
            closely match a search query's keywords, if available. All HTML tags
            in the original fields are stripped when returned in this field, and
            matching query keywords are enclosed in HTML bold tags. If the
            question-answering feature is enabled, this field will instead
            contain a snippet that answers the user's natural-language query. No
            HTML bold tags will be present, and highlights in the answer snippet
            can be found in QAResult.highlights.
        qaResult:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1QAResult'
          description: >-
            Experimental. Additional result info if the question-answering
            feature is enabled.
        matchedTokenPageIndices:
          description: >-
            Return the 1-based page indices where those pages have one or more
            matched tokens.
          type: array
          items:
            format: int64
            type: string
    GoogleCloudContentwarehouseV1AccessControlAction:
      properties:
        operationType:
          type: string
          description: Identifies the type of operation.
          enumDescriptions:
            - The unknown operation type.
            - Adds newly given policy bindings in the existing bindings list.
            - >-
              Removes newly given policy bindings from the existing bindings
              list.
            - >-
              Replaces existing policy bindings with the given policy binding
              list
          enum:
            - UNKNOWN
            - ADD_POLICY_BINDING
            - REMOVE_POLICY_BINDING
            - REPLACE_POLICY_BINDING
        policy:
          $ref: '#/components/schemas/GoogleIamV1Policy'
          description: >-
            Represents the new policy from which bindings are added, removed or
            replaced based on the type of the operation. the policy is limited
            to a few 10s of KB.
      description: >-
        Represents the action responsible for access control list management
        operations.
      type: object
      id: GoogleCloudContentwarehouseV1AccessControlAction
    CloudAiPlatformTenantresourceTenantResource:
      properties:
        p4ServiceAccounts:
          items:
            $ref: >-
              #/components/schemas/CloudAiPlatformTenantresourceServiceAccountIdentity
          type: array
          description: A list of P4 service accounts (go/p4sa) to provision or deprovision.
        tenantProjectResources:
          items:
            $ref: >-
              #/components/schemas/CloudAiPlatformTenantresourceTenantProjectResource
          type: array
          description: >-
            A list of tenant projects and tenant resources to provision or
            deprovision.
      description: A collection of tenant resources.
      type: object
      id: CloudAiPlatformTenantresourceTenantResource
    GoogleCloudContentwarehouseV1SynonymSetSynonym:
      description: >-
        Represents a list of words given by the customer All these words are
        synonyms of each other.
      id: GoogleCloudContentwarehouseV1SynonymSetSynonym
      type: object
      properties:
        words:
          description: 'For example: sale, invoice, bill, order'
          items:
            type: string
          type: array
    GoogleCloudContentwarehouseV1DeleteDocumentRequest:
      properties:
        requestMetadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
          description: >-
            The meta information collected about the end user, used to enforce
            access control for the service.
      type: object
      description: Request message for DocumentService.DeleteDocument.
      id: GoogleCloudContentwarehouseV1DeleteDocumentRequest
    GoogleCloudContentwarehouseV1PropertyTypeOptions:
      properties:
        propertyDefinitions:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCloudContentwarehouseV1PropertyDefinition
          description: Required. List of property definitions.
      description: Configurations for a nested structured data property.
      type: object
      id: GoogleCloudContentwarehouseV1PropertyTypeOptions
    GoogleCloudDocumentaiV1Vertex:
      properties:
        'y':
          type: integer
          format: int32
          description: Y coordinate (starts from the top of the image).
        x:
          description: X coordinate.
          format: int32
          type: integer
      description: >-
        A vertex represents a 2D point in the image. NOTE: the vertex
        coordinates are in the same scale as the original image.
      type: object
      id: GoogleCloudDocumentaiV1Vertex
    GoogleCloudContentwarehouseV1PropertyDefinitionSchemaSource:
      id: GoogleCloudContentwarehouseV1PropertyDefinitionSchemaSource
      description: The schema source information.
      properties:
        name:
          description: The schema name in the source.
          type: string
        processorType:
          description: The Doc AI processor type name.
          type: string
      type: object
    GoogleCloudContentwarehouseV1DocumentQuery:
      id: GoogleCloudContentwarehouseV1DocumentQuery
      type: object
      properties:
        queryContext:
          type: array
          description: >-
            For custom synonyms. Customers provide the synonyms based on
            context. One customer can provide multiple set of synonyms based on
            different context. The search query will be expanded based on the
            custom synonyms of the query context set. By default, no custom
            synonyms wll be applied if no query context is provided. It is not
            supported for CMEK compliant deployment.
          items:
            type: string
        timeFilters:
          description: >-
            Documents created/updated within a range specified by this filter
            are searched against.
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1TimeFilter'
          type: array
        customWeightsMetadata:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1CustomWeightsMetadata
          description: >-
            To support the custom weighting across document schemas, customers
            need to provide the properties to be used to boost the ranking in
            the search request. For a search query with CustomWeightsMetadata
            specified, only the RetrievalImportance for the properties in the
            CustomWeightsMetadata will be honored.
        documentCreatorFilter:
          items:
            type: string
          description: >-
            The exact creator(s) of the documents to search against. If a value
            isn't specified, documents within the search results are associated
            with any creator. If multiple values are specified, documents within
            the search results may be associated with any of the specified
            creators.
          type: array
        folderNameFilter:
          type: string
          description: >-
            Search all the documents under this specified folder. Format:
            projects/{project_number}/locations/{location}/documents/{document_id}.
        propertyFilter:
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1PropertyFilter'
          description: >-
            This filter specifies a structured syntax to match against the
            PropertyDefinition.is_filterable marked as `true`. The relationship
            between the PropertyFilters is OR.
          type: array
        documentNameFilter:
          description: >-
            Search the documents in the list. Format:
            projects/{project_number}/locations/{location}/documents/{document_id}.
          items:
            type: string
          type: array
        isNlQuery:
          description: >-
            Experimental, do not use. If the query is a natural language
            question. False by default. If true, then the question-answering
            feature will be used instead of search, and `result_count` in
            SearchDocumentsRequest must be set. In addition, all other input
            fields related to search (pagination, histograms, etc.) will be
            ignored.
          type: boolean
        customPropertyFilter:
          description: >-
            This filter specifies a structured syntax to match against the
            [PropertyDefinition].is_filterable marked as `true`. The syntax for
            this expression is a subset of SQL syntax. Supported operators are:
            `=`, `!=`, `<`, `<=`, `>`, and `>=` where the left of the operator
            is a property name and the right of the operator is a number or a
            quoted string. You must escape backslash (\\) and quote (\")
            characters. Supported functions are `LOWER([property_name])` to
            perform a case insensitive match and `EMPTY([property_name])` to
            filter on the existence of a key. Boolean expressions (AND/OR/NOT)
            are supported up to 3 levels of nesting (for example, "((A AND B AND
            C) OR NOT D) AND E"), a maximum of 100 comparisons or functions are
            allowed in the expression. The expression must be < 6000 bytes in
            length. Sample Query: `(LOWER(driving_license)="class \"a\"" OR
            EMPTY(driving_license)) AND driving_years > 10`
          deprecated: true
          type: string
        documentSchemaNames:
          description: >-
            This filter specifies the exact document schema
            Document.document_schema_name of the documents to search against. If
            a value isn't specified, documents within the search results are
            associated with any schema. If multiple values are specified,
            documents within the search results may be associated with any of
            the specified schemas. At most 20 document schema names are allowed.
          items:
            type: string
          type: array
        query:
          description: >-
            The query string that matches against the full text of the document
            and the searchable properties. The query partially supports [Google
            AIP style syntax](https://google.aip.dev/160). Specifically, the
            query supports literals, logical operators, negation operators,
            comparison operators, and functions. Literals: A bare literal value
            (examples: "42", "Hugo") is a value to be matched against. It
            searches over the full text of the document and the searchable
            properties. Logical operators: "AND", "and", "OR", and "or" are
            binary logical operators (example: "engineer OR developer").
            Negation operators: "NOT" and "!" are negation operators (example:
            "NOT software"). Comparison operators: support the binary comparison
            operators =, !=, <, >, <= and >= for string, numeric, enum, boolean.
            Also support like operator `~~` for string. It provides semantic
            search functionality by parsing, stemming and doing synonyms
            expansion against the input query. To specify a property in the
            query, the left hand side expression in the comparison must be the
            property ID including the parent. The right hand side must be
            literals. For example: "\"projects/123/locations/us\".property_a <
            1" matches results whose "property_a" is less than 1 in project 123
            and us location. The literals and comparison expression can be
            connected in a single query (example: "software engineer
            \"projects/123/locations/us\".salary > 100"). Functions: supported
            functions are `LOWER([property_name])` to perform a case insensitive
            match and `EMPTY([property_name])` to filter on the existence of a
            key. Support nested expressions connected using parenthesis and
            logical operators. The default logical operators is `AND` if there
            is no operators between expressions. The query can be used with
            other filters e.g. `time_filters` and `folder_name_filter`. They are
            connected with `AND` operator under the hood. The maximum number of
            allowed characters is 255.
          type: string
        fileTypeFilter:
          description: >-
            This filter specifies the types of files to return: ALL, FOLDER, or
            FILE. If FOLDER or FILE is specified, then only either folders or
            files will be returned, respectively. If ALL is specified, both
            folders and files will be returned. If no value is specified, ALL
            files will be returned.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1FileTypeFilter'
    GoogleCloudDocumentaiV1DocumentPageAnchor:
      type: object
      properties:
        pageRefs:
          items:
            $ref: >-
              #/components/schemas/GoogleCloudDocumentaiV1DocumentPageAnchorPageRef
          description: One or more references to visual page elements
          type: array
      description: >-
        Referencing the visual context of the entity in the Document.pages. Page
        anchors can be cross-page, consist of multiple bounding polygons and
        optionally reference specific layout element types.
      id: GoogleCloudDocumentaiV1DocumentPageAnchor
    GoogleCloudDocumentaiV1DocumentPageDetectedLanguage:
      properties:
        languageCode:
          description: >-
            The [BCP-47 language
            code](https://www.unicode.org/reports/tr35/#Unicode_locale_identifier),
            such as `en-US` or `sr-Latn`.
          type: string
        confidence:
          format: float
          description: Confidence of detected language. Range `[0, 1]`.
          type: number
      type: object
      description: Detected language for a structural component.
      id: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage
    GoogleCloudContentwarehouseV1TimeFilter:
      type: object
      id: GoogleCloudContentwarehouseV1TimeFilter
      properties:
        timeField:
          type: string
          description: >-
            Specifies which time field to filter documents on. Defaults to
            TimeField.UPLOAD_TIME.
          enumDescriptions:
            - Default value.
            - Earliest document create time.
            - Latest document update time.
            - Time when document becomes mutable again.
          enum:
            - TIME_FIELD_UNSPECIFIED
            - CREATE_TIME
            - UPDATE_TIME
            - DISPOSITION_TIME
        timeRange:
          $ref: '#/components/schemas/GoogleTypeInterval'
      description: Filter on create timestamp or update timestamp of documents.
    GoogleCloudDocumentaiV1Barcode:
      id: GoogleCloudDocumentaiV1Barcode
      properties:
        valueFormat:
          description: >-
            Value format describes the format of the value that a barcode
            encodes. The supported formats are: - `CONTACT_INFO`: Contact
            information. - `EMAIL`: Email address. - `ISBN`: ISBN identifier. -
            `PHONE`: Phone number. - `PRODUCT`: Product. - `SMS`: SMS message. -
            `TEXT`: Text string. - `URL`: URL address. - `WIFI`: Wifi
            information. - `GEO`: Geo-localization. - `CALENDAR_EVENT`: Calendar
            event. - `DRIVER_LICENSE`: Driver's license.
          type: string
        format:
          type: string
          description: >-
            Format of a barcode. The supported formats are: - `CODE_128`: Code
            128 type. - `CODE_39`: Code 39 type. - `CODE_93`: Code 93 type. -
            `CODABAR`: Codabar type. - `DATA_MATRIX`: 2D Data Matrix type. -
            `ITF`: ITF type. - `EAN_13`: EAN-13 type. - `EAN_8`: EAN-8 type. -
            `QR_CODE`: 2D QR code type. - `UPC_A`: UPC-A type. - `UPC_E`: UPC-E
            type. - `PDF417`: PDF417 type. - `AZTEC`: 2D Aztec code type. -
            `DATABAR`: GS1 DataBar code type.
        rawValue:
          type: string
          description: >-
            Raw value encoded in the barcode. For example:
            `'MEBKM:TITLE:Google;URL:https://www.google.com;;'`.
      description: Encodes the detailed information of a barcode.
      type: object
    GoogleCloudContentwarehouseV1EnumValue:
      properties:
        value:
          description: >-
            String value of the enum field. This must match defined set of enums
            in document schema using EnumTypeOptions.
          type: string
      id: GoogleCloudContentwarehouseV1EnumValue
      description: Represents the string value of the enum field.
      type: object
    GoogleCloudContentwarehouseV1DeleteDocumentAction:
      description: Represents the action responsible for deleting the document.
      id: GoogleCloudContentwarehouseV1DeleteDocumentAction
      type: object
      properties:
        enableHardDelete:
          type: boolean
          description: >-
            Boolean field to select between hard vs soft delete options. Set
            'true' for 'hard delete' and 'false' for 'soft delete'.
    GoogleTypeInterval:
      type: object
      id: GoogleTypeInterval
      properties:
        endTime:
          type: string
          description: >-
            Optional. Exclusive end of the interval. If specified, a Timestamp
            matching this interval will have to be before the end.
          format: google-datetime
        startTime:
          type: string
          description: >-
            Optional. Inclusive start of the interval. If specified, a Timestamp
            matching this interval will have to be the same or after the start.
          format: google-datetime
      description: >-
        Represents a time interval, encoded as a Timestamp start (inclusive) and
        a Timestamp end (exclusive). The start must be less than or equal to the
        end. When the start equals the end, the interval is empty (matches no
        time). When both start and end are unspecified, the interval matches any
        time.
    CloudAiPlatformTenantresourceServiceAccountIdentity:
      description: The identity to configure a service account.
      type: object
      properties:
        serviceAccountEmail:
          type: string
          description: Output only. The service account email that has been created.
        tag:
          type: string
          description: >-
            Input/Output [Optional]. The tag that configures the service
            account, as defined in
            google3/configs/production/cdpush/acl-zanzibar-cloud-prod/activation_grants/activation_grants.gcl.
            Note: The default P4 service account has the empty tag.
      id: CloudAiPlatformTenantresourceServiceAccountIdentity
    GoogleCloudContentwarehouseV1UpdateDocumentRequest:
      id: GoogleCloudContentwarehouseV1UpdateDocumentRequest
      description: Request message for DocumentService.UpdateDocument.
      properties:
        updateOptions:
          description: Options for the update operation.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1UpdateOptions'
        requestMetadata:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
          description: >-
            The meta information collected about the end user, used to enforce
            access control for the service.
        document:
          description: Required. The document to update.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
        cloudAiDocumentOption:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1CloudAIDocumentOption
          description: >-
            Request Option for processing Cloud AI Document in Document
            Warehouse. This field offers limited support for mapping entities
            from Cloud AI Document to Warehouse Document. Please consult with
            product team before using this field and other available options.
      type: object
    GoogleCloudContentwarehouseV1Rule:
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Action'
          description: List of actions that are executed when the rule is satisfied.
        description:
          type: string
          description: Short description of the rule and its context.
        ruleId:
          type: string
          description: >-
            ID of the rule. It has to be unique across all the examples. This is
            managed internally.
        condition:
          description: >-
            Represents the conditional expression to be evaluated. Expression
            should evaluate to a boolean result. When the condition is true
            actions are executed. Example: user_role = "hsbc_role_1" AND
            doc.salary > 20000
          type: string
        triggerType:
          enumDescriptions:
            - Trigger for unknown action.
            - Trigger for create document action.
            - Trigger for update document action.
            - Trigger for create link action.
            - Trigger for delete link action.
          enum:
            - UNKNOWN
            - ON_CREATE
            - ON_UPDATE
            - ON_CREATE_LINK
            - ON_DELETE_LINK
          description: Identifies the trigger type for running the policy.
          type: string
      id: GoogleCloudContentwarehouseV1Rule
      type: object
      description: Represents the rule for a content warehouse trigger.
    GoogleCloudContentwarehouseV1AddToFolderAction:
      properties:
        folders:
          items:
            type: string
          type: array
          description: >-
            Names of the folder under which new document is to be added. Format:
            projects/{project_number}/locations/{location}/documents/{document_id}.
      id: GoogleCloudContentwarehouseV1AddToFolderAction
      description: Represents the action responsible for adding document under a folder.
      type: object
    GoogleCloudContentwarehouseV1DateTimeArray:
      type: object
      id: GoogleCloudContentwarehouseV1DateTimeArray
      description: DateTime values.
      properties:
        values:
          description: >-
            List of datetime values. Both OffsetDateTime and ZonedDateTime are
            supported.
          items:
            $ref: '#/components/schemas/GoogleTypeDateTime'
          type: array
    GoogleCloudContentwarehouseV1InitializeProjectRequest:
      properties:
        accessControlMode:
          enum:
            - ACL_MODE_UNKNOWN
            - ACL_MODE_UNIVERSAL_ACCESS
            - ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID
            - ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI
          enumDescriptions:
            - This value is required by protobuf best practices
            - 'Universal Access: No document level access control.'
            - Document level access control with customer own Identity Service.
            - Document level access control using Google Cloud Identity.
          description: Required. The access control mode for accessing the customer data
          type: string
        enableCalUserEmailLogging:
          description: Optional. Whether to enable CAL user email logging.
          type: boolean
        kmsKey:
          type: string
          description: >-
            Optional. The KMS key used for CMEK encryption. It is required that
            the kms key is in the same region as the endpoint. The same key will
            be used for all provisioned resources, if encryption is available.
            If the kms_key is left empty, no encryption will be enforced.
        databaseType:
          enumDeprecated:
            - false
            - false
            - true
          enumDescriptions:
            - This value is required by protobuf best practices
            - Internal Spanner
            - Cloud Sql with a Postgres Sql instance
          description: Required. The type of database used to store customer data
          type: string
          enum:
            - DB_UNKNOWN
            - DB_INFRA_SPANNER
            - DB_CLOUD_SQL_POSTGRES
        documentCreatorDefaultRole:
          enumDescriptions:
            - Unspecified, will be default to document admin role.
            - >-
              Document Admin, same as
              contentwarehouse.googleapis.com/documentAdmin.
            - >-
              Document Editor, same as
              contentwarehouse.googleapis.com/documentEditor.
            - >-
              Document Viewer, same as
              contentwarehouse.googleapis.com/documentViewer.
          description: Optional. The default role for the person who create a document.
          enum:
            - DOCUMENT_CREATOR_DEFAULT_ROLE_UNSPECIFIED
            - DOCUMENT_ADMIN
            - DOCUMENT_EDITOR
            - DOCUMENT_VIEWER
          type: string
      description: Request message for projectService.InitializeProject
      type: object
      id: GoogleCloudContentwarehouseV1InitializeProjectRequest
    GoogleCloudContentwarehouseV1ListLinkedSourcesResponse:
      id: GoogleCloudContentwarehouseV1ListLinkedSourcesResponse
      properties:
        nextPageToken:
          type: string
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
        documentLinks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentLink'
          description: Source document-links.
      description: Response message for DocumentLinkService.ListLinkedSources.
      type: object
    GoogleCloudContentwarehouseV1RunPipelineMetadataGcsIngestPipelineMetadata:
      type: object
      id: >-
        GoogleCloudContentwarehouseV1RunPipelineMetadataGcsIngestPipelineMetadata
      properties:
        inputPath:
          description: 'The input Cloud Storage folder in this pipeline. Format: `gs:///`.'
          type: string
      description: The metadata message for GcsIngest pipeline.
    GoogleCloudContentwarehouseV1SetAclResponse:
      properties:
        policy:
          description: The policy will be attached to a resource (e.g. projecct, document).
          $ref: '#/components/schemas/GoogleIamV1Policy'
        metadata:
          description: >-
            Additional information for the API invocation, such as the request
            tracking id.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1ResponseMetadata'
      description: Response message for DocumentService.SetAcl.
      id: GoogleCloudContentwarehouseV1SetAclResponse
      type: object
    GoogleCloudContentwarehouseV1beta1CreateDocumentMetadata:
      description: Metadata object for CreateDocument request (currently empty).
      properties: {}
      id: GoogleCloudContentwarehouseV1beta1CreateDocumentMetadata
      type: object
    GoogleApiServiceconsumermanagementV1PolicyBinding:
      id: GoogleApiServiceconsumermanagementV1PolicyBinding
      type: object
      properties:
        members:
          type: array
          items:
            type: string
          description: >-
            Uses the same format as in IAM policy. `member` must include both a
            prefix and ID. For example, `user:{emailId}`,
            `serviceAccount:{emailId}`, `group:{emailId}`.
        role:
          type: string
          description: >-
            Role. (https://cloud.google.com/iam/docs/understanding-roles) For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`.
      description: Translates to IAM Policy bindings (without auditing at this level)
    GoogleCloudContentwarehouseV1InitializeProjectResponse:
      type: object
      id: GoogleCloudContentwarehouseV1InitializeProjectResponse
      properties:
        message:
          type: string
          description: The message of the project initialization process.
        state:
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - RUNNING
          type: string
          description: The state of the project initialization process.
          enumDescriptions:
            - Clients should never see this.
            - Finished project initialization without error.
            - Finished project initialization with an error.
            - Client canceled the LRO.
            - Ask the customer to check the operation for results.
      description: Response message for projectService.InitializeProject
    GoogleCloudContentwarehouseV1PropertyFilter:
      properties:
        documentSchemaName:
          description: >-
            The Document schema name Document.document_schema_name. Format:
            projects/{project_number}/locations/{location}/documentSchemas/{document_schema_id}.
          type: string
        condition:
          type: string
          description: >-
            The filter condition. The syntax for this expression is a subset of
            SQL syntax. Supported operators are: `=`, `!=`, `<`, `<=`, `>`,
            `>=`, and `~~` where the left of the operator is a property name and
            the right of the operator is a number or a quoted string. You must
            escape backslash (\\) and quote (\") characters. `~~` is the LIKE
            operator. The right of the operator must be a string. The only
            supported property data type for LIKE is text_values. It provides
            semantic search functionality by parsing, stemming and doing
            synonyms expansion against the input query. It matches if the
            property contains semantic similar content to the query. It is not
            regex matching or wildcard matching. For example, "property.company
            ~~ \"google\"" will match records whose property `property.compnay`
            have values like "Google Inc.", "Google LLC" or "Google Company".
            Supported functions are `LOWER([property_name])` to perform a case
            insensitive match and `EMPTY([property_name])` to filter on the
            existence of a key. Boolean expressions (AND/OR/NOT) are supported
            up to 3 levels of nesting (for example, "((A AND B AND C) OR NOT D)
            AND E"), a maximum of 100 comparisons or functions are allowed in
            the expression. The expression must be < 6000 bytes in length. Only
            properties that are marked filterable are allowed
            (PropertyDefinition.is_filterable). Property names do not need to be
            prefixed by the document schema id (as is the case with histograms),
            however property names will need to be prefixed by its parent
            hierarchy, if any. For example: top_property_name.sub_property_name.
            Sample Query: `(LOWER(driving_license)="class \"a\"" OR
            EMPTY(driving_license)) AND driving_years > 10` CMEK compliant
            deployment only supports: * Operators: `=`, `<`, `<=`, `>`, and
            `>=`. * Boolean expressions: AND and OR.
      id: GoogleCloudContentwarehouseV1PropertyFilter
      type: object
    GoogleIamV1Binding:
      description: Associates `members`, or principals, with a `role`.
      type: object
      id: GoogleIamV1Binding
      properties:
        role:
          type: string
          description: >-
            Role that is assigned to the list of `members`, or principals. For
            example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
            overview of the IAM roles and permissions, see the [IAM
            documentation](https://cloud.google.com/iam/docs/roles-overview).
            For a list of the available pre-defined roles, see
            [here](https://cloud.google.com/iam/docs/understanding-roles).
        condition:
          description: >-
            The condition that is associated with this binding. If the condition
            evaluates to `true`, then this binding applies to the current
            request. If the condition evaluates to `false`, then this binding
            does not apply to the current request. However, a different role
            binding might grant the same role to one or more of the principals
            in this binding. To learn which resources support conditions in
            their IAM policies, see the [IAM
            documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          $ref: '#/components/schemas/GoogleTypeExpr'
        members:
          items:
            type: string
          description: >-
            Specifies the principals requesting access for a Google Cloud
            resource. `members` can have the following values: * `allUsers`: A
            special identifier that represents anyone who is on the internet;
            with or without a Google account. * `allAuthenticatedUsers`: A
            special identifier that represents anyone who is authenticated with
            a Google account or a service account. Does not include identities
            that come from external identity providers (IdPs) through identity
            federation. * `user:{emailid}`: An email address that represents a
            specific Google account. For example, `alice@example.com` . *
            `serviceAccount:{emailid}`: An email address that represents a
            Google service account. For example,
            `my-other-app@appspot.gserviceaccount.com`. *
            `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
            An identifier for a [Kubernetes service
            account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
            For example,
            `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
            `group:{emailid}`: An email address that represents a Google group.
            For example, `admins@example.com`. * `domain:{domain}`: The G Suite
            domain (primary) that represents all the users of that domain. For
            example, `google.com` or `example.com`. *
            `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workforce identity pool. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
            All workforce identities in a group. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All workforce identities with a specific attribute value. *
            `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`:
            All identities in a workforce identity pool. *
            `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
            A single identity in a workload identity pool. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
            A workload identity pool group. *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
            All identities in a workload identity pool with a certain attribute.
            *
            `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
            All identities in a workload identity pool. *
            `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus
            unique identifier) representing a user that has been recently
            deleted. For example, `alice@example.com?uid=123456789012345678901`.
            If the user is recovered, this value reverts to `user:{emailid}` and
            the recovered user retains the role in the binding. *
            `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
            (plus unique identifier) representing a service account that has
            been recently deleted. For example,
            `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
            If the service account is undeleted, this value reverts to
            `serviceAccount:{emailid}` and the undeleted service account retains
            the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:
            An email address (plus unique identifier) representing a Google
            group that has been recently deleted. For example,
            `admins@example.com?uid=123456789012345678901`. If the group is
            recovered, this value reverts to `group:{emailid}` and the recovered
            group retains the role in the binding. *
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
            Deleted single identity in a workforce identity pool. For example,
            `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
          type: array
    GoogleCloudContentwarehouseV1TimestampValue:
      description: Timestamp value type.
      properties:
        textValue:
          description: >-
            The string must represent a valid instant in UTC and is parsed using
            java.time.format.DateTimeFormatter.ISO_INSTANT. e.g.
            "2013-09-29T18:46:19Z"
          type: string
        timestampValue:
          format: google-datetime
          description: Timestamp value
          type: string
      id: GoogleCloudContentwarehouseV1TimestampValue
      type: object
    GoogleCloudDocumentaiV1DocumentPageLayout:
      id: GoogleCloudDocumentaiV1DocumentPageLayout
      type: object
      description: Visual element describing a layout unit on a page.
      properties:
        confidence:
          type: number
          format: float
          description: >-
            Confidence of the current Layout within context of the object this
            layout is for. e.g. confidence can be for a single token, a table, a
            visual element, etc. depending on context. Range `[0, 1]`.
        boundingPoly:
          description: The bounding polygon for the Layout.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1BoundingPoly'
        textAnchor:
          description: Text anchor indexing into the Document.text.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentTextAnchor'
        orientation:
          enumDescriptions:
            - Unspecified orientation.
            - Orientation is aligned with page up.
            - >-
              Orientation is aligned with page right. Turn the head 90 degrees
              clockwise from upright to read.
            - >-
              Orientation is aligned with page down. Turn the head 180 degrees
              from upright to read.
            - >-
              Orientation is aligned with page left. Turn the head 90 degrees
              counterclockwise from upright to read.
          enum:
            - ORIENTATION_UNSPECIFIED
            - PAGE_UP
            - PAGE_RIGHT
            - PAGE_DOWN
            - PAGE_LEFT
          description: Detected orientation for the Layout.
          type: string
    GoogleCloudContentwarehouseV1LockDocumentRequest:
      type: object
      properties:
        lockingUser:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1UserInfo'
          description: The user information who locks the document.
        collectionId:
          type: string
          description: The collection the document connects to.
      id: GoogleCloudContentwarehouseV1LockDocumentRequest
      description: Request message for DocumentService.LockDocument.
    GoogleCloudContentwarehouseV1DataValidationAction:
      id: GoogleCloudContentwarehouseV1DataValidationAction
      description: Represents the action responsible for data validation operations.
      properties:
        conditions:
          type: object
          description: >-
            Map of (K, V) -> (field, string condition to be evaluated on the
            field) E.g., ("age", "age > 18 && age < 60") entry triggers
            validation of field age with the given condition. Map entries will
            be ANDed during validation.
          additionalProperties:
            type: string
      type: object
    GoogleCloudDocumentaiV1DocumentShardInfo:
      properties:
        textOffset:
          description: >-
            The index of the first character in Document.text in the overall
            document global text.
          type: string
          format: int64
        shardCount:
          type: string
          description: Total number of shards.
          format: int64
        shardIndex:
          format: int64
          description: The 0-based index of this shard.
          type: string
      id: GoogleCloudDocumentaiV1DocumentShardInfo
      description: >-
        For a large document, sharding may be performed to produce several
        document shards. Each document shard contains this field to detail which
        shard it is.
      type: object
    GoogleCloudDocumentaiV1DocumentProvenanceParent:
      properties:
        revision:
          description: The index of the index into current revision's parent_ids list.
          format: int32
          type: integer
        id:
          deprecated: true
          format: int32
          description: The id of the parent provenance.
          type: integer
        index:
          type: integer
          format: int32
          description: >-
            The index of the parent item in the corresponding item list (eg.
            list of entities, properties within entities, etc.) in the parent
            revision.
      id: GoogleCloudDocumentaiV1DocumentProvenanceParent
      type: object
      description: >-
        The parent element the current element is based on. Used for
        referencing/aligning, removal and replacement operations.
    GoogleCloudContentwarehouseV1MergeFieldsOptions:
      id: GoogleCloudContentwarehouseV1MergeFieldsOptions
      type: object
      properties:
        replaceRepeatedFields:
          description: >-
            When merging repeated fields, the default behavior is to append
            entries from the source repeated field to the destination repeated
            field. If you instead want to keep only the entries from the source
            repeated field, set this flag to true. If you want to replace a
            repeated field within a message field on the destination message,
            you must set both replace_repeated_fields and replace_message_fields
            to true, otherwise the repeated fields will be appended.
          type: boolean
        replaceMessageFields:
          type: boolean
          description: >-
            When merging message fields, the default behavior is to merge the
            content of two message fields together. If you instead want to use
            the field from the source message to replace the corresponding field
            in the destination message, set this flag to true. When this flag is
            set, specified submessage fields that are missing in source will be
            cleared in destination.
      description: Options for merging updated fields.
    GoogleCloudContentwarehouseV1UserInfo:
      properties:
        id:
          description: >-
            A unique user identification string, as determined by the client.
            The maximum number of allowed characters is 255. Allowed characters
            include numbers 0 to 9, uppercase and lowercase letters, and
            restricted special symbols (:, @, +, -, _, ~) The format is
            "user:xxxx@example.com";
          type: string
        groupIds:
          type: array
          description: >-
            The unique group identifications which the user is belong to. The
            format is "group:yyyy@example.com";
          items:
            type: string
      description: The user information.
      id: GoogleCloudContentwarehouseV1UserInfo
      type: object
    GoogleCloudContentwarehouseV1ActionOutput:
      description: Represents the result of executing an action.
      type: object
      id: GoogleCloudContentwarehouseV1ActionOutput
      properties:
        actionState:
          type: string
          enumDescriptions:
            - The unknown state.
            - State indicating action executed successfully.
            - State indicating action failed.
            - State indicating action timed out.
            - State indicating action is pending.
          enum:
            - UNKNOWN
            - ACTION_SUCCEEDED
            - ACTION_FAILED
            - ACTION_TIMED_OUT
            - ACTION_PENDING
          description: State of an action.
        outputMessage:
          description: Action execution output message.
          type: string
        actionId:
          description: ID of the action.
          type: string
    GoogleCloudContentwarehouseV1RunPipelineRequest:
      properties:
        processWithDocAiPipeline:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1ProcessWithDocAiPipeline
          description: >-
            Use a DocAI processor to process documents in Document Warehouse,
            and re-ingest the updated results into Document Warehouse.
        exportCdwPipeline:
          description: >-
            Export docuemnts from Document Warehouse to CDW for training
            purpose.
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1ExportToCdwPipeline
        gcsIngestWithDocAiProcessorsPipeline:
          $ref: >-
            #/components/schemas/GoogleCloudContentwarehouseV1GcsIngestWithDocAiProcessorsPipeline
          description: >-
            Use DocAI processors to process documents in Cloud Storage and
            ingest them to Document Warehouse.
        requestMetadata:
          description: >-
            The meta information collected about the end user, used to enforce
            access control for the service.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RequestMetadata'
        gcsIngestPipeline:
          description: Cloud Storage ingestion pipeline.
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1GcsIngestPipeline'
      id: GoogleCloudContentwarehouseV1RunPipelineRequest
      type: object
      description: Request message for DocumentService.RunPipeline.
    GoogleCloudContentwarehouseV1DataUpdateAction:
      description: Represents the action responsible for properties update operations.
      properties:
        entries:
          description: >-
            Map of (K, V) -> (valid name of the field, new value of the field)
            E.g., ("age", "60") entry triggers update of field age with a value
            of 60. If the field is not present then new entry is added. During
            update action execution, value strings will be casted to appropriate
            types.
          additionalProperties:
            type: string
          type: object
      type: object
      id: GoogleCloudContentwarehouseV1DataUpdateAction
    GoogleCloudContentwarehouseV1IntegerTypeOptions:
      description: Configurations for an integer property.
      properties: {}
      id: GoogleCloudContentwarehouseV1IntegerTypeOptions
      type: object
    GoogleCloudContentwarehouseV1DocumentLink:
      id: GoogleCloudContentwarehouseV1DocumentLink
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - SOFT_DELETED
          type: string
          enumDescriptions:
            - Unknown state of documentlink.
            - The documentlink has both source and target documents detected.
            - >-
              Target document is deleted, and mark the documentlink as
              soft-deleted.
          description: >-
            The state of the documentlink. If target node has been deleted, the
            link is marked as invalid. Removing a source node will result in
            removal of all associated links.
        targetDocumentReference:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentReference'
          description: Document references of the target document.
        description:
          type: string
          description: Description of this document-link.
        updateTime:
          description: Output only. The time when the documentLink is last updated.
          type: string
          readOnly: true
          format: google-datetime
        name:
          type: string
          description: >-
            Name of this document-link. It is required that the parent derived
            form the name to be consistent with the source document reference.
            Otherwise an exception will be thrown. Format:
            projects/{project_number}/locations/{location}/documents/{source_document_id}/documentLinks/{document_link_id}.
        createTime:
          type: string
          format: google-datetime
          description: Output only. The time when the documentLink is created.
          readOnly: true
        sourceDocumentReference:
          $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentReference'
          description: Document references of the source document.
      description: A document-link between source and target document.
      type: object
    GoogleCloudContentwarehouseV1beta1UpdateDocumentMetadata:
      id: GoogleCloudContentwarehouseV1beta1UpdateDocumentMetadata
      description: Metadata object for UpdateDocument request (currently empty).
      properties: {}
      type: object
    GoogleCloudContentwarehouseV1ProjectStatus:
      type: object
      id: GoogleCloudContentwarehouseV1ProjectStatus
      description: >-
        Status of a project, including the project state, dbType, aclMode and
        etc.
      properties:
        location:
          type: string
          description: The location of the queried project.
        state:
          type: string
          enum:
            - PROJECT_STATE_UNSPECIFIED
            - PROJECT_STATE_PENDING
            - PROJECT_STATE_COMPLETED
            - PROJECT_STATE_FAILED
            - PROJECT_STATE_DELETING
            - PROJECT_STATE_DELETING_FAILED
            - PROJECT_STATE_DELETED
            - PROJECT_STATE_NOT_FOUND
          enumDescriptions:
            - Default status, required by protobuf best practices.
            - The project is in the middle of a provision process.
            - All dependencies have been provisioned.
            - A provision process was previously initiated, but failed.
            - The project is in the middle of a deletion process.
            - A deleting process was initiated, but failed.
            - The project is deleted.
            - The project is not found.
          description: State of the project.
        databaseType:
          enumDeprecated:
            - false
            - false
            - true
          type: string
          enum:
            - DB_UNKNOWN
            - DB_INFRA_SPANNER
            - DB_CLOUD_SQL_POSTGRES
          description: Database type.
          enumDescriptions:
            - This value is required by protobuf best practices
            - Internal Spanner
            - Cloud Sql with a Postgres Sql instance
        documentCreatorDefaultRole:
          type: string
          description: The default role for the person who create a document.
        qaEnabled:
          description: If the qa is enabled on this project.
          type: boolean
        accessControlMode:
          enum:
            - ACL_MODE_UNKNOWN
            - ACL_MODE_UNIVERSAL_ACCESS
            - ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID
            - ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI
          description: Access control mode.
          type: string
          enumDescriptions:
            - This value is required by protobuf best practices
            - 'Universal Access: No document level access control.'
            - Document level access control with customer own Identity Service.
            - Document level access control using Google Cloud Identity.
    GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect:
      description: Image Quality Defects
      id: GoogleCloudDocumentaiV1DocumentPageImageQualityScoresDetectedDefect
      properties:
        confidence:
          format: float
          type: number
          description: >-
            Confidence of detected defect. Range `[0, 1]` where `1` indicates
            strong confidence that the defect exists.
        type:
          type: string
          description: >-
            Name of the defect type. Supported values are: -
            `quality/defect_blurry` - `quality/defect_noisy` -
            `quality/defect_dark` - `quality/defect_faint` -
            `quality/defect_text_too_small` - `quality/defect_document_cutoff` -
            `quality/defect_text_cutoff` - `quality/defect_glare`
      type: object
    GoogleCloudDocumentaiV1DocumentEntity:
      id: GoogleCloudDocumentaiV1DocumentEntity
      properties:
        confidence:
          description: Optional. Confidence of detected Schema entity. Range `[0, 1]`.
          type: number
          format: float
        textAnchor:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentTextAnchor'
          description: >-
            Optional. Provenance of the entity. Text anchor indexing into the
            Document.text.
        properties:
          type: array
          description: >-
            Optional. Entities can be nested to form a hierarchical data
            structure representing the content in the document.
          items:
            $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentEntity'
        normalizedValue:
          $ref: >-
            #/components/schemas/GoogleCloudDocumentaiV1DocumentEntityNormalizedValue
          description: >-
            Optional. Normalized entity value. Absent if the extracted value
            could not be converted or the type (e.g. address) is not supported
            for certain parsers. This field is also only populated for certain
            supported document types.
        pageAnchor:
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageAnchor'
          description: >-
            Optional. Represents the provenance of this entity wrt. the location
            on the page where it was found.
        mentionText:
          description: Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
          type: string
        provenance:
          description: Optional. The history of this annotation.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentProvenance'
        id:
          type: string
          description: >-
            Optional. Canonical id. This will be a unique value in the entity
            list for this document.
        redacted:
          type: boolean
          description: >-
            Optional. Whether the entity will be redacted for de-identification
            purposes.
        mentionId:
          description: Optional. Deprecated. Use `id` field instead.
          type: string
        type:
          type: string
          description: Required. Entity type from a schema e.g. `Address`.
      type: object
      description: >-
        An entity that could be a phrase in the text or a property that belongs
        to the document. It is a known entity type, such as a person, an
        organization, or location.
    GoogleCloudContentwarehouseV1RemoveFromFolderAction:
      properties:
        folder:
          type: string
          description: >-
            Name of the folder under which new document is to be added. Format:
            projects/{project_number}/locations/{location}/documents/{document_id}.
        condition:
          description: Condition of the action to be executed.
          type: string
      id: GoogleCloudContentwarehouseV1RemoveFromFolderAction
      type: object
      description: >-
        Represents the action responsible for remove a document from a specific
        folder.
    GoogleCloudDocumentaiV1DocumentPageDetectedBarcode:
      properties:
        barcode:
          description: Detailed barcode information of the DetectedBarcode.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1Barcode'
        layout:
          description: Layout for DetectedBarcode.
          $ref: '#/components/schemas/GoogleCloudDocumentaiV1DocumentPageLayout'
      id: GoogleCloudDocumentaiV1DocumentPageDetectedBarcode
      description: A detected barcode.
      type: object
    GoogleCloudContentwarehouseV1ResponseMetadata:
      properties:
        requestId:
          description: >-
            A unique id associated with this call. This id is logged for
            tracking purpose.
          type: string
      id: GoogleCloudContentwarehouseV1ResponseMetadata
      description: >-
        Additional information returned to client, such as debugging
        information.
      type: object
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
  x-stackQL-resources:
    reference_id:
      id: google.contentwarehouse.reference_id
      name: reference_id
      title: Reference_id
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1referenceId~1{referenceIdId}:get/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1referenceId~1{referenceIdId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1referenceId~1{referenceIdId}:delete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/reference_id/methods/patch'
        delete: []
    document_links:
      id: google.contentwarehouse.document_links
      name: document_links
      title: Document_links
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}~1documentLinks~1{documentLinksId}:delete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}~1documentLinks/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/document_links/methods/create'
        update: []
        delete: []
    documents:
      id: google.contentwarehouse.documents
      name: documents
      title: Documents
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}:delete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        linked_sources:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}~1linkedSources/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}:get/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_acl:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}:setAcl/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents:search/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        linked_targets:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}~1linkedTargets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        lock:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}:lock/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/documents/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/documents/methods/patch'
        delete: []
    documents_acl:
      id: google.contentwarehouse.documents_acl
      name: documents_acl
      title: Documents_acl
      methods:
        fetch_acl:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documents~1{documentsId}:fetchAcl/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    synonym_sets:
      id: google.contentwarehouse.synonym_sets
      name: synonym_sets
      title: Synonym_sets
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1synonymSets~1{synonymSetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1synonymSets~1{synonymSetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1synonymSets~1{synonymSetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_1
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1synonymSets/get
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.synonymSets
        list:
          operation: *ref_1
          response: *ref_2
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1synonymSets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/synonym_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/synonym_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/synonym_sets/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/synonym_sets/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/synonym_sets/methods/delete'
    document_schemas:
      id: google.contentwarehouse.document_schemas
      name: document_schemas
      title: Document_schemas
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documentSchemas/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documentSchemas/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.documentSchemas
        list:
          operation: *ref_3
          response: *ref_4
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documentSchemas~1{documentSchemasId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documentSchemas~1{documentSchemasId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1documentSchemas~1{documentSchemasId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/document_schemas/methods/get'
          - $ref: '#/components/x-stackQL-resources/document_schemas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/document_schemas/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/document_schemas/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/document_schemas/methods/delete'
    rule_sets:
      id: google.contentwarehouse.rule_sets
      name: rule_sets
      title: Rule_sets
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1ruleSets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1ruleSets/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.ruleSets
        list:
          operation: *ref_5
          response: *ref_6
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1ruleSets~1{ruleSetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1ruleSets~1{ruleSetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1ruleSets~1{ruleSetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/rule_sets/methods/delete'
    operations:
      id: google.contentwarehouse.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete: []
    status:
      id: google.contentwarehouse.status
      name: status
      title: Status
      methods:
        get_status:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:getStatus/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/status/methods/get_status'
        insert: []
        update: []
        delete: []
    locations:
      id: google.contentwarehouse.locations
      name: locations
      title: Locations
      methods:
        initialize:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:initialize/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run_pipeline:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}:runPipeline/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    acl:
      id: google.contentwarehouse.acl
      name: acl
      title: Acl
      methods:
        fetch_acl:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}:fetchAcl/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    projects:
      id: google.contentwarehouse.projects
      name: projects
      title: Projects
      methods:
        set_acl:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}:setAcl/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/documents/referenceId/{referenceIdId}:get:
    parameters: &ref_7
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
    post:
      description: Gets a document. Returns NOT_FOUND if the document does not exist.
      operationId: contentwarehouse.projects.locations.documents.referenceId.get
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1GetDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceIdId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/referenceId/{referenceIdId}:
    parameters: *ref_7
    patch:
      description: >-
        Updates a document. Returns INVALID_ARGUMENT if the name of the document
        is non-empty and does not equal the existing name.
      operationId: contentwarehouse.projects.locations.documents.referenceId.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1UpdateDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1UpdateDocumentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceIdId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/referenceId/{referenceIdId}:delete:
    parameters: *ref_7
    post:
      description: Deletes a document. Returns NOT_FOUND if the document does not exist.
      operationId: contentwarehouse.projects.locations.documents.referenceId.delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1DeleteDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: referenceIdId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}/documentLinks/{documentLinksId}:delete:
    parameters: *ref_7
    post:
      description: Remove the link between the source and target documents.
      operationId: contentwarehouse.projects.locations.documents.documentLinks.delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1DeleteDocumentLinkRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
        - in: path
          name: documentLinksId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}/documentLinks:
    parameters: *ref_7
    post:
      description: Create a link between a source document and a target document.
      operationId: contentwarehouse.projects.locations.documents.documentLinks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1CreateDocumentLinkRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentLink'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}:delete:
    parameters: *ref_7
    post:
      description: Deletes a document. Returns NOT_FOUND if the document does not exist.
      operationId: contentwarehouse.projects.locations.documents.delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1DeleteDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}:
    parameters: *ref_7
    patch:
      description: >-
        Updates a document. Returns INVALID_ARGUMENT if the name of the document
        is non-empty and does not equal the existing name.
      operationId: contentwarehouse.projects.locations.documents.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1UpdateDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1UpdateDocumentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}/linkedSources:
    parameters: *ref_7
    post:
      description: Return all source document-links from the document.
      operationId: contentwarehouse.projects.locations.documents.linkedSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1ListLinkedSourcesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1ListLinkedSourcesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents:
    parameters: *ref_7
    post:
      description: Creates a document.
      operationId: contentwarehouse.projects.locations.documents.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1CreateDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1CreateDocumentResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}:get:
    parameters: *ref_7
    post:
      description: Gets a document. Returns NOT_FOUND if the document does not exist.
      operationId: contentwarehouse.projects.locations.documents.get
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1GetDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}:setAcl:
    parameters: *ref_7
    post:
      description: >-
        Sets the access control policy for a resource. Replaces any existing
        policy.
      operationId: contentwarehouse.projects.locations.documents.setAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SetAclRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1SetAclResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}:fetchAcl:
    parameters: *ref_7
    post:
      description: >-
        Gets the access control policy for a resource. Returns NOT_FOUND error
        if the resource does not exist. Returns an empty policy if the resource
        exists but does not have a policy set.
      operationId: contentwarehouse.projects.locations.documents.fetchAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1FetchAclRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1FetchAclResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents:search:
    parameters: *ref_7
    post:
      description: >-
        Searches for documents using provided SearchDocumentsRequest. This call
        only returns documents that the caller has permission to search against.
      operationId: contentwarehouse.projects.locations.documents.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1SearchDocumentsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1SearchDocumentsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}/linkedTargets:
    parameters: *ref_7
    post:
      description: Return all target document-links from the document.
      operationId: contentwarehouse.projects.locations.documents.linkedTargets
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1ListLinkedTargetsRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1ListLinkedTargetsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documents/{documentsId}:lock:
    parameters: *ref_7
    post:
      description: Lock the document so the document cannot be updated by other users.
      operationId: contentwarehouse.projects.locations.documents.lock
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1LockDocumentRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1Document'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/synonymSets/{synonymSetsId}:
    parameters: *ref_7
    get:
      description: >-
        Gets a SynonymSet for a particular context. Throws a NOT_FOUND exception
        if the Synonymset does not exist
      operationId: contentwarehouse.projects.locations.synonymSets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SynonymSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: synonymSetsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a SynonymSet for a given context. Throws a NOT_FOUND exception
        if the SynonymSet is not found.
      operationId: contentwarehouse.projects.locations.synonymSets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: synonymSetsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Remove the existing SynonymSet for the context and replaces it with a
        new one. Throws a NOT_FOUND exception if the SynonymSet is not found.
      operationId: contentwarehouse.projects.locations.synonymSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SynonymSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SynonymSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: synonymSetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/synonymSets:
    parameters: *ref_7
    get:
      description: Returns all SynonymSets (for all contexts) for the specified location.
      operationId: contentwarehouse.projects.locations.synonymSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1ListSynonymSetsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a SynonymSet for a single context. Throws an ALREADY_EXISTS
        exception if a synonymset already exists for the context.
      operationId: contentwarehouse.projects.locations.synonymSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SynonymSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SynonymSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documentSchemas:
    parameters: *ref_7
    post:
      description: Creates a document schema.
      operationId: contentwarehouse.projects.locations.documentSchemas.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContentwarehouseV1DocumentSchema'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1DocumentSchema
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists document schemas.
      operationId: contentwarehouse.projects.locations.documentSchemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1ListDocumentSchemasResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/documentSchemas/{documentSchemasId}:
    parameters: *ref_7
    patch:
      description: >-
        Updates a Document Schema. Returns INVALID_ARGUMENT if the name of the
        Document Schema is non-empty and does not equal the existing name.
        Supports only appending new properties, adding new ENUM possible values,
        and updating the EnumTypeOptions.validation_check_disabled flag for ENUM
        possible values. Updating existing properties will result into
        INVALID_ARGUMENT.
      operationId: contentwarehouse.projects.locations.documentSchemas.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1UpdateDocumentSchemaRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1DocumentSchema
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentSchemasId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a document schema. Returns NOT_FOUND if the document schema does
        not exist. Returns BAD_REQUEST if the document schema has documents
        depending on it.
      operationId: contentwarehouse.projects.locations.documentSchemas.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentSchemasId
          required: true
          schema:
            type: string
    get:
      description: >-
        Gets a document schema. Returns NOT_FOUND if the document schema does
        not exist.
      operationId: contentwarehouse.projects.locations.documentSchemas.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1DocumentSchema
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: documentSchemasId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/ruleSets:
    parameters: *ref_7
    post:
      description: Creates a ruleset.
      operationId: contentwarehouse.projects.locations.ruleSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    get:
      description: Lists rulesets.
      operationId: contentwarehouse.projects.locations.ruleSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1ListRuleSetsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/ruleSets/{ruleSetsId}:
    parameters: *ref_7
    delete:
      description: Deletes a ruleset. Returns NOT_FOUND if the document does not exist.
      operationId: contentwarehouse.projects.locations.ruleSets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: ruleSetsId
          required: true
          schema:
            type: string
    get:
      description: Gets a ruleset. Returns NOT_FOUND if the ruleset does not exist.
      operationId: contentwarehouse.projects.locations.ruleSets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: ruleSetsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates a ruleset. Returns INVALID_ARGUMENT if the name of the ruleset
        is non-empty and does not equal the existing name.
      operationId: contentwarehouse.projects.locations.ruleSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1UpdateRuleSetRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudContentwarehouseV1RuleSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: ruleSetsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_7
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: contentwarehouse.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:getStatus:
    parameters: *ref_7
    get:
      description: Get the project status.
      operationId: contentwarehouse.projects.locations.getStatus
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1ProjectStatus
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:initialize:
    parameters: *ref_7
    post:
      description: >-
        Provisions resources for given tenant project. Returns a long running
        operation.
      operationId: contentwarehouse.projects.locations.initialize
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1InitializeProjectRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:runPipeline:
    parameters: *ref_7
    post:
      description: Run a predefined pipeline.
      operationId: contentwarehouse.projects.locations.runPipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1RunPipelineRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLongrunningOperation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}:fetchAcl:
    parameters: *ref_7
    post:
      description: >-
        Gets the access control policy for a resource. Returns NOT_FOUND error
        if the resource does not exist. Returns an empty policy if the resource
        exists but does not have a policy set.
      operationId: contentwarehouse.projects.fetchAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleCloudContentwarehouseV1FetchAclRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1FetchAclResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}:setAcl:
    parameters: *ref_7
    post:
      description: >-
        Sets the access control policy for a resource. Replaces any existing
        policy.
      operationId: contentwarehouse.projects.setAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudContentwarehouseV1SetAclRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleCloudContentwarehouseV1SetAclResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
