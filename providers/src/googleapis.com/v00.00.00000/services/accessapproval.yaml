openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Access Approval API
  description: An API for controlling access to data by Google personnel.
  version: v1
  x-discovery-doc-revision: '20250821'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/assured-workloads/access-approval/docs
servers:
  - url: https://accessapproval.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListApprovalRequestsResponse:
      id: ListApprovalRequestsResponse
      description: Response to listing of ApprovalRequest objects.
      type: object
      properties:
        approvalRequests:
          description: Approval request details.
          type: array
          items:
            $ref: '#/components/schemas/ApprovalRequest'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more.
          type: string
    ApprovalRequest:
      id: ApprovalRequest
      description: A request for the customer to approve access to a resource.
      type: object
      properties:
        name:
          description: >-
            The resource name of the request. Format is
            "{projects|folders|organizations}/{id}/approvalRequests/{approval_request}".
          type: string
        requestedResourceName:
          description: >-
            The resource for which approval is being requested. The format of
            the resource name is defined at
            https://cloud.google.com/apis/design/resource_names. The resource
            name here may either be a "full" resource name (e.g.
            "//library.googleapis.com/shelves/shelf1/books/book2") or a
            "relative" resource name (e.g. "shelves/shelf1/books/book2") as
            described in the resource name specification.
          type: string
        requestedAugmentedInfo:
          description: This field contains the augmented information of the request.
          $ref: '#/components/schemas/AugmentedInfo'
        requestedResourceProperties:
          description: >-
            Properties related to the resource represented by
            requested_resource_name.
          $ref: '#/components/schemas/ResourceProperties'
        requestedReason:
          description: The justification for which approval is being requested.
          $ref: '#/components/schemas/AccessReason'
        requestedLocations:
          description: The locations for which approval is being requested.
          $ref: '#/components/schemas/AccessLocations'
        requestTime:
          description: The time at which approval was requested.
          type: string
          format: google-datetime
        requestedExpiration:
          description: >-
            The original requested expiration for the approval. Calculated by
            adding the requested_duration to the request_time.
          type: string
          format: google-datetime
        requestedDuration:
          description: The requested access duration.
          type: string
          format: google-duration
        approve:
          description: Access was approved.
          $ref: '#/components/schemas/ApproveDecision'
        dismiss:
          description: The request was dismissed.
          $ref: '#/components/schemas/DismissDecision'
    AugmentedInfo:
      id: AugmentedInfo
      description: This field contains the augmented information of the request.
      type: object
      properties:
        command:
          description: >-
            For command-line tools, the full command-line exactly as entered by
            the actor without adding any additional characters (such as
            quotation marks).
          type: string
    ResourceProperties:
      id: ResourceProperties
      description: The properties associated with the resource of the request.
      type: object
      properties:
        excludesDescendants:
          description: >-
            Whether an approval will exclude the descendants of the resource
            being requested.
          type: boolean
    AccessReason:
      id: AccessReason
      type: object
      properties:
        type:
          description: Type of access justification.
          type: string
          enumDescriptions:
            - Default value for proto, shouldn't be used.
            - >-
              Customer made a request or raised an issue that required the
              principal to access customer data. `detail` is of the form
              ("#####" is the issue ID): * "Feedback Report: #####" * "Case
              Number: #####" * "Case ID: #####" * "E-PIN Reference: #####" *
              "Google-#####" * "T-#####"
            - >-
              The principal accessed customer data in order to diagnose or
              resolve a suspected issue in services. Often this access is used
              to confirm that customers are not affected by a suspected service
              issue or to remediate a reversible system issue.
            - >-
              Google initiated service for security, fraud, abuse, or compliance
              purposes.
            - >-
              The principal was compelled to access customer data in order to
              respond to a legal third party data request or process, including
              legal processes from customers themselves.
            - >-
              The principal accessed customer data in order to diagnose or
              resolve a suspected issue in services or a known outage.
            - >-
              Similar to 'GOOGLE_INITIATED_SERVICE' or
              'GOOGLE_INITIATED_REVIEW', but with universe agnostic naming. The
              principal accessed customer data in order to diagnose or resolve a
              suspected issue in services or a known outage, or for security,
              fraud, abuse, or compliance review purposes.
          enum:
            - TYPE_UNSPECIFIED
            - CUSTOMER_INITIATED_SUPPORT
            - GOOGLE_INITIATED_SERVICE
            - GOOGLE_INITIATED_REVIEW
            - THIRD_PARTY_DATA_REQUEST
            - GOOGLE_RESPONSE_TO_PRODUCTION_ALERT
            - CLOUD_INITIATED_ACCESS
        detail:
          description: >-
            More detail about certain reason types. See comments for each type
            above.
          type: string
    AccessLocations:
      id: AccessLocations
      description: Home office and physical location of the principal.
      type: object
      properties:
        principalOfficeCountry:
          description: >-
            The "home office" location of the principal. A two-letter country
            code (ISO 3166-1 alpha-2), such as "US", "DE" or "GB" or a region
            code. In some limited situations Google systems may refer refer to a
            region code instead of a country code. Possible Region Codes: * ASI:
            Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America
            * SAM: South America * ANT: Antarctica * ANY: Any location
          type: string
        principalPhysicalLocationCountry:
          description: >-
            Physical location of the principal at the time of the access. A
            two-letter country code (ISO 3166-1 alpha-2), such as "US", "DE" or
            "GB" or a region code. In some limited situations Google systems may
            refer refer to a region code instead of a country code. Possible
            Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa
            * NAM: North America * SAM: South America * ANT: Antarctica * ANY:
            Any location
          type: string
    ApproveDecision:
      id: ApproveDecision
      description: A decision that has been made to approve access to a resource.
      type: object
      properties:
        approveTime:
          description: The time at which approval was granted.
          type: string
          format: google-datetime
        expireTime:
          description: The time at which the approval expires.
          type: string
          format: google-datetime
        invalidateTime:
          description: If set, denotes the timestamp at which the approval is invalidated.
          type: string
          format: google-datetime
        signatureInfo:
          description: >-
            The signature for the ApprovalRequest and details on how it was
            signed.
          $ref: '#/components/schemas/SignatureInfo'
        autoApproved:
          description: True when the request has been auto-approved.
          type: boolean
        policyApproved:
          description: >-
            True when the request has been approved by the customer's defined
            policy.
          type: boolean
    SignatureInfo:
      id: SignatureInfo
      description: Information about the digital signature of the resource.
      type: object
      properties:
        signature:
          description: The digital signature.
          type: string
          format: byte
        googlePublicKeyPem:
          description: >-
            The public key for the Google default signing, encoded in PEM
            format. The signature was created using a private key which may be
            verified using this public key.
          type: string
        customerKmsKeyVersion:
          description: The resource name of the customer CryptoKeyVersion used for signing.
          type: string
        googleKeyAlgorithm:
          description: >-
            The hashing algorithm used for signature verification. It will only
            be present in the case of Google managed keys.
          type: string
          enumDescriptions:
            - Not specified.
            - Creates symmetric encryption keys.
            - AES-GCM (Galois Counter Mode) using 128-bit keys.
            - AES-GCM (Galois Counter Mode) using 256-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 128-bit keys.
            - AES-CBC (Cipher Block Chaining Mode) using 256-bit keys.
            - AES-CTR (Counter Mode) using 128-bit keys.
            - AES-CTR (Counter Mode) using 256-bit keys.
            - RSASSA-PSS 2048 bit key with a SHA256 digest.
            - RSASSA-PSS 3072 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA256 digest.
            - RSASSA-PSS 4096 bit key with a SHA512 digest.
            - RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
            - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.
            - RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.
            - RSAES-OAEP 2048 bit key with a SHA256 digest.
            - RSAES-OAEP 3072 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA256 digest.
            - RSAES-OAEP 4096 bit key with a SHA512 digest.
            - RSAES-OAEP 2048 bit key with a SHA1 digest.
            - RSAES-OAEP 3072 bit key with a SHA1 digest.
            - RSAES-OAEP 4096 bit key with a SHA1 digest.
            - >-
              ECDSA on the NIST P-256 curve with a SHA256 digest. Other hash
              functions can also be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - >-
              ECDSA on the NIST P-384 curve with a SHA384 digest. Other hash
              functions can also be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - >-
              ECDSA on the non-NIST secp256k1 curve. This curve is only
              supported for HSM protection level. Other hash functions can also
              be used:
              https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms
            - EdDSA on the Curve25519 in pure mode (taking data as input).
            - HMAC-SHA256 signing with a 256 bit key.
            - HMAC-SHA1 signing with a 160 bit key.
            - HMAC-SHA384 signing with a 384 bit key.
            - HMAC-SHA512 signing with a 512 bit key.
            - HMAC-SHA224 signing with a 224 bit key.
            - >-
              Algorithm representing symmetric encryption by an external key
              manager.
            - ML-KEM-768 (FIPS 203)
            - ML-KEM-1024 (FIPS 203)
            - >-
              X-Wing hybrid KEM combining ML-KEM-768 with X25519 following
              datatracker.ietf.org/doc/draft-connolly-cfrg-xwing-kem/.
            - >-
              The post-quantum Module-Lattice-Based Digital Signature Algorithm,
              at security level 3. Randomized version.
            - >-
              The post-quantum stateless hash-based digital signature algorithm,
              at security level 1. Randomized version.
            - >-
              The post-quantum stateless hash-based digital signature algorithm,
              at security level 1. Randomized pre-hash version supporting SHA256
              digests.
          enum:
            - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
            - GOOGLE_SYMMETRIC_ENCRYPTION
            - AES_128_GCM
            - AES_256_GCM
            - AES_128_CBC
            - AES_256_CBC
            - AES_128_CTR
            - AES_256_CTR
            - RSA_SIGN_PSS_2048_SHA256
            - RSA_SIGN_PSS_3072_SHA256
            - RSA_SIGN_PSS_4096_SHA256
            - RSA_SIGN_PSS_4096_SHA512
            - RSA_SIGN_PKCS1_2048_SHA256
            - RSA_SIGN_PKCS1_3072_SHA256
            - RSA_SIGN_PKCS1_4096_SHA256
            - RSA_SIGN_PKCS1_4096_SHA512
            - RSA_SIGN_RAW_PKCS1_2048
            - RSA_SIGN_RAW_PKCS1_3072
            - RSA_SIGN_RAW_PKCS1_4096
            - RSA_DECRYPT_OAEP_2048_SHA256
            - RSA_DECRYPT_OAEP_3072_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA256
            - RSA_DECRYPT_OAEP_4096_SHA512
            - RSA_DECRYPT_OAEP_2048_SHA1
            - RSA_DECRYPT_OAEP_3072_SHA1
            - RSA_DECRYPT_OAEP_4096_SHA1
            - EC_SIGN_P256_SHA256
            - EC_SIGN_P384_SHA384
            - EC_SIGN_SECP256K1_SHA256
            - EC_SIGN_ED25519
            - HMAC_SHA256
            - HMAC_SHA1
            - HMAC_SHA384
            - HMAC_SHA512
            - HMAC_SHA224
            - EXTERNAL_SYMMETRIC_ENCRYPTION
            - ML_KEM_768
            - ML_KEM_1024
            - KEM_XWING
            - PQ_SIGN_ML_DSA_65
            - PQ_SIGN_SLH_DSA_SHA2_128S
            - PQ_SIGN_HASH_SLH_DSA_SHA2_128S_SHA256
        serializedApprovalRequest:
          description: >-
            The ApprovalRequest that is serialized without the SignatureInfo
            message field. This data is used with the hashing algorithm to
            generate the digital signature, and it can be used for signature
            verification.
          type: string
          format: byte
    DismissDecision:
      id: DismissDecision
      description: A decision that has been made to dismiss an approval request.
      type: object
      properties:
        dismissTime:
          description: The time at which the approval request was dismissed.
          type: string
          format: google-datetime
        implicit:
          description: >-
            This field will be true if the ApprovalRequest was implicitly
            dismissed due to inaction by the access approval approvers (the
            request is not acted on by the approvers before the exiration time).
          type: boolean
    ApproveApprovalRequestMessage:
      id: ApproveApprovalRequestMessage
      description: Request to approve an ApprovalRequest.
      type: object
      properties:
        expireTime:
          description: The expiration time of this approval.
          type: string
          format: google-datetime
    DismissApprovalRequestMessage:
      id: DismissApprovalRequestMessage
      description: Request to dismiss an approval request.
      type: object
      properties: {}
    InvalidateApprovalRequestMessage:
      id: InvalidateApprovalRequestMessage
      description: Request to invalidate an existing approval.
      type: object
      properties: {}
    AccessApprovalSettings:
      id: AccessApprovalSettings
      description: Settings on a Project/Folder/Organization related to Access Approval.
      type: object
      properties:
        name:
          description: >-
            The resource name of the settings. Format is one of: *
            "projects/{project}/accessApprovalSettings" *
            "folders/{folder}/accessApprovalSettings" *
            "organizations/{organization}/accessApprovalSettings"
          type: string
        notificationEmails:
          description: >-
            A list of email addresses to which notifications relating to
            approval requests should be sent. Notifications relating to a
            resource will be sent to all emails in the settings of ancestor
            resources of that resource. A maximum of 50 email addresses are
            allowed.
          type: array
          items:
            type: string
        enrolledServices:
          description: >-
            A list of Google Cloud Services for which the given resource has
            Access Approval enrolled. Access requests for the resource given by
            name against any of these services contained here will be required
            to have explicit approval. If name refers to an organization,
            enrollment can be done for individual services. If name refers to a
            folder or project, enrollment can only be done on an all or nothing
            basis. If a cloud_product is repeated in this list, the first entry
            will be honored and all following entries will be discarded. A
            maximum of 10 enrolled services will be enforced, to be expanded as
            the set of supported services is expanded.
          type: array
          items:
            $ref: '#/components/schemas/EnrolledService'
        enrolledAncestor:
          description: >-
            Output only. This field is read only (not settable via
            UpdateAccessApprovalSettings method). If the field is true, that
            indicates that at least one service is enrolled for Access Approval
            in one or more ancestors of the Project or Folder (this field will
            always be unset for the organization since organizations do not have
            ancestors).
          readOnly: true
          type: boolean
        activeKeyVersion:
          description: >-
            The asymmetric crypto key version to use for signing approval
            requests. Empty active_key_version indicates that a Google-managed
            key should be used for signing. This property will be ignored if set
            by an ancestor of this resource, and new non-empty values may not be
            set.
          type: string
        ancestorHasActiveKeyVersion:
          description: >-
            Output only. This field is read only (not settable via
            UpdateAccessApprovalSettings method). If the field is true, that
            indicates that an ancestor of this Project or Folder has set
            active_key_version (this field will always be unset for the
            organization since organizations do not have ancestors).
          readOnly: true
          type: boolean
        invalidKeyVersion:
          description: >-
            Output only. This field is read only (not settable via
            UpdateAccessApprovalSettings method). If the field is true, that
            indicates that there is some configuration issue with the
            active_key_version configured at this level in the resource
            hierarchy (e.g. it doesn't exist or the Access Approval service
            account doesn't have the correct permissions on it, etc.) This key
            version is not necessarily the effective key version at this level,
            as key versions are inherited top-down.
          readOnly: true
          type: boolean
        preferredRequestExpirationDays:
          description: >-
            This preference is shared with Google personnel, but can be
            overridden if said personnel deems necessary. The approver
            ultimately can set the expiration at approval time.
          type: integer
          format: int32
        preferNoBroadApprovalRequests:
          description: >-
            This preference is communicated to Google personnel when sending an
            approval request but can be overridden if necessary.
          type: boolean
        notificationPubsubTopic:
          description: >-
            Optional. A pubsub topic to which notifications relating to approval
            requests should be sent.
          type: string
        requireCustomerVisibleJustification:
          description: >-
            Optional. A setting to require approval request justifications to be
            customer visible.
          type: boolean
        requestScopeMaxWidthPreference:
          description: >-
            Optional. A setting to indicate the maximum width of an Access
            Approval request.
          type: string
          enumDescriptions:
            - Default value for proto, shouldn't be used.
            - >-
              This is the widest scope possible. It means the customer has no
              scope restriction when it comes to Access Approval requests.
            - >-
              Customer allows the scope of Access Approval requests as broad as
              the Folder level.
            - >-
              Customer allows the scope of Access Approval requests as broad as
              the Project level.
          enum:
            - REQUEST_SCOPE_MAX_WIDTH_PREFERENCE_UNSPECIFIED
            - ORGANIZATION
            - FOLDER
            - PROJECT
        approvalPolicy:
          description: Optional. Policy for approval. This contains all policies.
          $ref: '#/components/schemas/CustomerApprovalApprovalPolicy'
        effectiveApprovalPolicy:
          description: >-
            Output only. Policy for approval included inherited settings to
            understand the exact policy applied to this resource. This is a
            read-only field.
          readOnly: true
          $ref: '#/components/schemas/CustomerApprovalApprovalPolicy'
    EnrolledService:
      id: EnrolledService
      description: Represents the enrollment of a cloud resource into a specific service.
      type: object
      properties:
        cloudProduct:
          description: >-
            The product for which Access Approval will be enrolled. Allowed
            values are listed below (case-sensitive): * all * GA * App Engine *
            Artifact Registry * BigQuery * Certificate Authority Service * Cloud
            Bigtable * Cloud Key Management Service * Compute Engine * Cloud
            Composer * Cloud Dataflow * Cloud Dataproc * Cloud DLP * Cloud EKM *
            Cloud Firestore * Cloud HSM * Cloud Identity and Access Management *
            Cloud Logging * Cloud NAT * Cloud Pub/Sub * Cloud Spanner * Cloud
            SQL * Cloud Storage * Eventarc * Google Kubernetes Engine *
            Organization Policy Serivice * Persistent Disk * Resource Manager *
            Secret Manager * Speaker ID Note: These values are supported as
            input for legacy purposes, but will not be returned from the API. *
            all * ga-only * appengine.googleapis.com *
            artifactregistry.googleapis.com * bigquery.googleapis.com *
            bigtable.googleapis.com * container.googleapis.com *
            cloudkms.googleapis.com * cloudresourcemanager.googleapis.com *
            cloudsql.googleapis.com * compute.googleapis.com *
            dataflow.googleapis.com * dataproc.googleapis.com *
            dlp.googleapis.com * iam.googleapis.com * logging.googleapis.com *
            orgpolicy.googleapis.com * pubsub.googleapis.com *
            spanner.googleapis.com * secretmanager.googleapis.com *
            speakerid.googleapis.com * storage.googleapis.com Calls to
            UpdateAccessApprovalSettings using 'all' or any of the
            XXX.googleapis.com will be translated to the associated product name
            ('all', 'App Engine', etc.). Note: 'all' will enroll the resource in
            all products supported at both 'GA' and 'Preview' levels. More
            information about levels of support is available at
            https://cloud.google.com/access-approval/docs/supported-services
          type: string
        enrollmentLevel:
          description: The enrollment level of the service.
          type: string
          enumDescriptions:
            - Default value for proto, shouldn't be used.
            - Service is enrolled in Access Approval for all requests
          enum:
            - ENROLLMENT_LEVEL_UNSPECIFIED
            - BLOCK_ALL
    CustomerApprovalApprovalPolicy:
      id: CustomerApprovalApprovalPolicy
      description: Represents all the policies that can be set for Customer Approval.
      type: object
      properties:
        justificationBasedApprovalPolicy:
          description: Optional. Policy for approval based on the justification given.
          type: string
          enumDescriptions:
            - Default value for proto.
            - Instant approval is enabled for all accesses.
            - Instant approval is enabled for external justifications.
            - Instant approval is not enabled for any accesses.
            - Instant approval is inherited from the parent.
          enum:
            - JUSTIFICATION_BASED_APPROVAL_POLICY_UNSPECIFIED
            - JUSTIFICATION_BASED_APPROVAL_ENABLED_ALL
            - JUSTIFICATION_BASED_APPROVAL_ENABLED_EXTERNAL_JUSTIFICATIONS
            - JUSTIFICATION_BASED_APPROVAL_NOT_ENABLED
            - JUSTIFICATION_BASED_APPROVAL_INHERITED
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    AccessApprovalServiceAccount:
      id: AccessApprovalServiceAccount
      description: >-
        Access Approval service account related to a
        project/folder/organization.
      type: object
      properties:
        name:
          description: >-
            The resource name of the Access Approval service account. Format is
            one of: * "projects/{project}/serviceAccount" *
            "folders/{folder}/serviceAccount" *
            "organizations/{organization}/serviceAccount"
          type: string
        accountEmail:
          description: Email address of the service account.
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    access_approval_settings:
      id: google.accessapproval.access_approval_settings
      name: access_approval_settings
      title: Access_approval_settings
      methods:
        projects_get_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1accessApprovalSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_update_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1accessApprovalSettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_delete_access_approval_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1accessApprovalSettings/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_get_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1accessApprovalSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_update_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1accessApprovalSettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_delete_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1accessApprovalSettings/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_get_access_approval_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1accessApprovalSettings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_update_access_approval_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1accessApprovalSettings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_delete_access_approval_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1accessApprovalSettings/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/projects_get_access_approval_settings
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/folders_get_access_approval_settings
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/organizations_get_access_approval_settings
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/projects_update_access_approval_settings
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/folders_update_access_approval_settings
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/organizations_update_access_approval_settings
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/projects_delete_access_approval_settings
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/folders_delete_access_approval_settings
          - $ref: >-
              #/components/x-stackQL-resources/access_approval_settings/methods/organizations_delete_access_approval_settings
    service_account:
      id: google.accessapproval.service_account
      name: service_account
      title: Service_account
      methods:
        projects_get_service_account:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_get_service_account:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_get_service_account:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_account/methods/projects_get_service_account
          - $ref: >-
              #/components/x-stackQL-resources/service_account/methods/folders_get_service_account
          - $ref: >-
              #/components/x-stackQL-resources/service_account/methods/organizations_get_service_account
        insert: []
        update: []
        replace: []
        delete: []
    approval_requests:
      id: google.accessapproval.approval_requests
      name: approval_requests
      title: Approval_requests
      methods:
        projects_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.approvalRequests
        projects_approval_requests_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_approve:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}:approve/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_dismiss:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}:dismiss/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_invalidate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}:invalidate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.approvalRequests
        folders_approval_requests_get:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_approve:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}:approve/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_dismiss:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}:dismiss/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_invalidate:
          operation:
            $ref: >-
              #/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}:invalidate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_list:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.approvalRequests
        organizations_approval_requests_get:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_approve:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}:approve/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_dismiss:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}:dismiss/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_invalidate:
          operation:
            $ref: >-
              #/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}:invalidate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/approval_requests/methods/projects_approval_requests_get
          - $ref: >-
              #/components/x-stackQL-resources/approval_requests/methods/folders_approval_requests_get
          - $ref: >-
              #/components/x-stackQL-resources/approval_requests/methods/organizations_approval_requests_get
          - $ref: >-
              #/components/x-stackQL-resources/approval_requests/methods/projects_approval_requests_list
          - $ref: >-
              #/components/x-stackQL-resources/approval_requests/methods/folders_approval_requests_list
          - $ref: >-
              #/components/x-stackQL-resources/approval_requests/methods/organizations_approval_requests_list
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/accessApprovalSettings:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets the settings associated with a project, folder, or organization.
      operationId: accessapproval.projects.getAccessApprovalSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the settings associated with a project, folder, or organization.
        Settings to update are determined by the value of field_mask.
      operationId: accessapproval.projects.updateAccessApprovalSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessApprovalSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes the settings associated with a project, folder, or organization.
        This will have the effect of disabling Access Approval for the project,
        folder, or organization, but only if all ancestors also have Access
        Approval disabled. If Access Approval is enabled at a higher level of
        the hierarchy, then Access Approval will still be enabled at this level
        as the settings are inherited.
      operationId: accessapproval.projects.deleteAccessApprovalSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/serviceAccount:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the service account that is used by Access Approval to access
        KMS keys for signing approved approval requests.
      operationId: accessapproval.projects.getServiceAccount
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/approvalRequests:
    parameters: *ref_1
    get:
      description: >-
        Lists approval requests associated with a project, folder, or
        organization. Approval requests can be filtered by state (pending,
        active, dismissed). The order is reverse chronological.
      operationId: accessapproval.projects.approvalRequests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApprovalRequestsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets an approval request. Returns NOT_FOUND if the request does not
        exist.
      operationId: accessapproval.projects.approvalRequests.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:approve:
    parameters: *ref_1
    post:
      description: >-
        Approves a request and returns the updated ApprovalRequest. Returns
        NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if
        the request exists but is not in a pending state.
      operationId: accessapproval.projects.approvalRequests.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:dismiss:
    parameters: *ref_1
    post:
      description: >-
        Dismisses a request. Returns the updated ApprovalRequest. NOTE: This
        does not deny access to the resource if another request has been made
        and approved. It is equivalent in effect to ignoring the request
        altogether. Returns NOT_FOUND if the request does not exist. Returns
        FAILED_PRECONDITION if the request exists but is not in a pending state.
      operationId: accessapproval.projects.approvalRequests.dismiss
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:invalidate:
    parameters: *ref_1
    post:
      description: >-
        Invalidates an existing ApprovalRequest. Returns the updated
        ApprovalRequest. NOTE: This does not deny access to the resource if
        another request has been made and approved. It only invalidates a single
        approval. Returns FAILED_PRECONDITION if the request exists but is not
        in an approved state.
      operationId: accessapproval.projects.approvalRequests.invalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/accessApprovalSettings:
    parameters: *ref_1
    get:
      description: Gets the settings associated with a project, folder, or organization.
      operationId: accessapproval.folders.getAccessApprovalSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the settings associated with a project, folder, or organization.
        Settings to update are determined by the value of field_mask.
      operationId: accessapproval.folders.updateAccessApprovalSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessApprovalSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes the settings associated with a project, folder, or organization.
        This will have the effect of disabling Access Approval for the project,
        folder, or organization, but only if all ancestors also have Access
        Approval disabled. If Access Approval is enabled at a higher level of
        the hierarchy, then Access Approval will still be enabled at this level
        as the settings are inherited.
      operationId: accessapproval.folders.deleteAccessApprovalSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/serviceAccount:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the service account that is used by Access Approval to access
        KMS keys for signing approved approval requests.
      operationId: accessapproval.folders.getServiceAccount
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalServiceAccount'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/approvalRequests:
    parameters: *ref_1
    get:
      description: >-
        Lists approval requests associated with a project, folder, or
        organization. Approval requests can be filtered by state (pending,
        active, dismissed). The order is reverse chronological.
      operationId: accessapproval.folders.approvalRequests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApprovalRequestsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets an approval request. Returns NOT_FOUND if the request does not
        exist.
      operationId: accessapproval.folders.approvalRequests.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:approve:
    parameters: *ref_1
    post:
      description: >-
        Approves a request and returns the updated ApprovalRequest. Returns
        NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if
        the request exists but is not in a pending state.
      operationId: accessapproval.folders.approvalRequests.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:dismiss:
    parameters: *ref_1
    post:
      description: >-
        Dismisses a request. Returns the updated ApprovalRequest. NOTE: This
        does not deny access to the resource if another request has been made
        and approved. It is equivalent in effect to ignoring the request
        altogether. Returns NOT_FOUND if the request does not exist. Returns
        FAILED_PRECONDITION if the request exists but is not in a pending state.
      operationId: accessapproval.folders.approvalRequests.dismiss
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:invalidate:
    parameters: *ref_1
    post:
      description: >-
        Invalidates an existing ApprovalRequest. Returns the updated
        ApprovalRequest. NOTE: This does not deny access to the resource if
        another request has been made and approved. It only invalidates a single
        approval. Returns FAILED_PRECONDITION if the request exists but is not
        in an approved state.
      operationId: accessapproval.folders.approvalRequests.invalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/accessApprovalSettings:
    parameters: *ref_1
    get:
      description: Gets the settings associated with a project, folder, or organization.
      operationId: accessapproval.organizations.getAccessApprovalSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the settings associated with a project, folder, or organization.
        Settings to update are determined by the value of field_mask.
      operationId: accessapproval.organizations.updateAccessApprovalSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessApprovalSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes the settings associated with a project, folder, or organization.
        This will have the effect of disabling Access Approval for the project,
        folder, or organization, but only if all ancestors also have Access
        Approval disabled. If Access Approval is enabled at a higher level of
        the hierarchy, then Access Approval will still be enabled at this level
        as the settings are inherited.
      operationId: accessapproval.organizations.deleteAccessApprovalSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/serviceAccount:
    parameters: *ref_1
    get:
      description: >-
        Retrieves the service account that is used by Access Approval to access
        KMS keys for signing approved approval requests.
      operationId: accessapproval.organizations.getServiceAccount
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalServiceAccount'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/approvalRequests:
    parameters: *ref_1
    get:
      description: >-
        Lists approval requests associated with a project, folder, or
        organization. Approval requests can be filtered by state (pending,
        active, dismissed). The order is reverse chronological.
      operationId: accessapproval.organizations.approvalRequests.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApprovalRequestsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets an approval request. Returns NOT_FOUND if the request does not
        exist.
      operationId: accessapproval.organizations.approvalRequests.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:approve:
    parameters: *ref_1
    post:
      description: >-
        Approves a request and returns the updated ApprovalRequest. Returns
        NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if
        the request exists but is not in a pending state.
      operationId: accessapproval.organizations.approvalRequests.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:dismiss:
    parameters: *ref_1
    post:
      description: >-
        Dismisses a request. Returns the updated ApprovalRequest. NOTE: This
        does not deny access to the resource if another request has been made
        and approved. It is equivalent in effect to ignoring the request
        altogether. Returns NOT_FOUND if the request does not exist. Returns
        FAILED_PRECONDITION if the request exists but is not in a pending state.
      operationId: accessapproval.organizations.approvalRequests.dismiss
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
  /v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:invalidate:
    parameters: *ref_1
    post:
      description: >-
        Invalidates an existing ApprovalRequest. Returns the updated
        ApprovalRequest. NOTE: This does not deny access to the resource if
        another request has been made and approved. It only invalidates a single
        approval. Returns FAILED_PRECONDITION if the request exists but is not
        in an approved state.
      operationId: accessapproval.organizations.approvalRequests.invalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateApprovalRequestMessage'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
