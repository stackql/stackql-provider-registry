openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Access Approval API
  description: An API for controlling access to data by Google personnel.
  version: v1
  x-discovery-doc-revision: '20230818'
  x-generated-date: '2023-09-01'
externalDocs:
  url: 'https://cloud.google.com/assured-workloads/access-approval/docs'
servers:
  - url: 'https://accessapproval.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    DismissDecision:
      id: DismissDecision
      properties:
        dismissTime:
          description: The time at which the approval request was dismissed.
          format: google-datetime
          type: string
        implicit:
          type: boolean
          description: This field will be true if the ApprovalRequest was implicitly dismissed due to inaction by the access approval approvers (the request is not acted on by the approvers before the exiration time).
      type: object
      description: A decision that has been made to dismiss an approval request.
    ApproveDecision:
      id: ApproveDecision
      type: object
      description: A decision that has been made to approve access to a resource.
      properties:
        approveTime:
          format: google-datetime
          description: The time at which approval was granted.
          type: string
        autoApproved:
          type: boolean
          description: True when the request has been auto-approved.
        invalidateTime:
          format: google-datetime
          description: 'If set, denotes the timestamp at which the approval is invalidated.'
          type: string
        signatureInfo:
          description: The signature for the ApprovalRequest and details on how it was signed.
          $ref: '#/components/schemas/SignatureInfo'
        expireTime:
          description: The time at which the approval expires.
          type: string
          format: google-datetime
    ApprovalRequest:
      type: object
      description: A request for the customer to approve access to a resource.
      properties:
        requestedResourceProperties:
          description: Properties related to the resource represented by requested_resource_name.
          $ref: '#/components/schemas/ResourceProperties'
        approve:
          description: Access was approved.
          $ref: '#/components/schemas/ApproveDecision'
        requestedResourceName:
          type: string
          description: 'The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a "full" resource name (e.g. "//library.googleapis.com/shelves/shelf1/books/book2") or a "relative" resource name (e.g. "shelves/shelf1/books/book2") as described in the resource name specification.'
        dismiss:
          description: The request was dismissed.
          $ref: '#/components/schemas/DismissDecision'
        requestedReason:
          $ref: '#/components/schemas/AccessReason'
          description: The justification for which approval is being requested.
        requestTime:
          format: google-datetime
          type: string
          description: The time at which approval was requested.
        requestedExpiration:
          description: 'The requested expiration for the approval. If the request is approved, access will be granted from the time of approval until the expiration time.'
          type: string
          format: google-datetime
        requestedLocations:
          $ref: '#/components/schemas/AccessLocations'
          description: The locations for which approval is being requested.
        name:
          description: 'The resource name of the request. Format is "{projects|folders|organizations}/{id}/approvalRequests/{approval_request}".'
          type: string
      id: ApprovalRequest
    DismissApprovalRequestMessage:
      properties: {}
      id: DismissApprovalRequestMessage
      type: object
      description: Request to dismiss an approval request.
    SignatureInfo:
      properties:
        signature:
          description: The digital signature.
          type: string
          format: byte
        customerKmsKeyVersion:
          type: string
          description: The resource name of the customer CryptoKeyVersion used for signing.
        googlePublicKeyPem:
          type: string
          description: 'The public key for the Google default signing, encoded in PEM format. The signature was created using a private key which may be verified using this public key.'
      type: object
      description: Information about the digital signature of the resource.
      id: SignatureInfo
    AccessReason:
      type: object
      properties:
        type:
          enum:
            - TYPE_UNSPECIFIED
            - CUSTOMER_INITIATED_SUPPORT
            - GOOGLE_INITIATED_SERVICE
            - GOOGLE_INITIATED_REVIEW
            - THIRD_PARTY_DATA_REQUEST
            - GOOGLE_RESPONSE_TO_PRODUCTION_ALERT
          enumDescriptions:
            - 'Default value for proto, shouldn''t be used.'
            - 'Customer made a request or raised an issue that required the principal to access customer data. `detail` is of the form ("#####" is the issue ID): * "Feedback Report: #####" * "Case Number: #####" * "Case ID: #####" * "E-PIN Reference: #####" * "Google-#####" * "T-#####"'
            - The principal accessed customer data in order to diagnose or resolve a suspected issue in services. Often this access is used to confirm that customers are not affected by a suspected service issue or to remediate a reversible system issue.
            - 'Google initiated service for security, fraud, abuse, or compliance purposes.'
            - 'The principal was compelled to access customer data in order to respond to a legal third party data request or process, including legal processes from customers themselves.'
            - The principal accessed customer data in order to diagnose or resolve a suspected issue in services or a known outage.
          description: Type of access justification.
          type: string
        detail:
          description: More detail about certain reason types. See comments for each type above.
          type: string
      id: AccessReason
    AccessLocations:
      type: object
      id: AccessLocations
      description: Home office and physical location of the principal.
      properties:
        principalOfficeCountry:
          type: string
          description: 'The "home office" location of the principal. A two-letter country code (ISO 3166-1 alpha-2), such as "US", "DE" or "GB" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location'
        principalPhysicalLocationCountry:
          description: 'Physical location of the principal at the time of the access. A two-letter country code (ISO 3166-1 alpha-2), such as "US", "DE" or "GB" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location'
          type: string
    AccessApprovalServiceAccount:
      description: Access Approval service account related to a project/folder/organization.
      type: object
      id: AccessApprovalServiceAccount
      properties:
        name:
          type: string
          description: 'The resource name of the Access Approval service account. Format is one of: * "projects/{project}/serviceAccount" * "folders/{folder}/serviceAccount" * "organizations/{organization}/serviceAccount"'
        accountEmail:
          description: Email address of the service account.
          type: string
    ApproveApprovalRequestMessage:
      description: Request to approve an ApprovalRequest.
      properties:
        expireTime:
          description: The expiration time of this approval.
          type: string
          format: google-datetime
      type: object
      id: ApproveApprovalRequestMessage
    ListApprovalRequestsResponse:
      description: Response to listing of ApprovalRequest objects.
      id: ListApprovalRequestsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Token to retrieve the next page of results, or empty if there are no more.'
        approvalRequests:
          description: Approval request details.
          type: array
          items:
            $ref: '#/components/schemas/ApprovalRequest'
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      type: object
      id: Empty
    EnrolledService:
      properties:
        enrollmentLevel:
          description: The enrollment level of the service.
          type: string
          enumDescriptions:
            - 'Default value for proto, shouldn''t be used.'
            - Service is enrolled in Access Approval for all requests
          enum:
            - ENROLLMENT_LEVEL_UNSPECIFIED
            - BLOCK_ALL
        cloudProduct:
          type: string
          description: 'The product for which Access Approval will be enrolled. Allowed values are listed below (case-sensitive): * all * GA * App Engine * Artifact Registry * BigQuery * Certificate Authority Service * Cloud Bigtable * Cloud Key Management Service * Compute Engine * Cloud Composer * Cloud Dataflow * Cloud Dataproc * Cloud DLP * Cloud EKM * Cloud Firestore * Cloud HSM * Cloud Identity and Access Management * Cloud Logging * Cloud NAT * Cloud Pub/Sub * Cloud Spanner * Cloud SQL * Cloud Storage * Eventarc * Google Kubernetes Engine * Organization Policy Serivice * Persistent Disk * Resource Manager * Secret Manager * Speaker ID Note: These values are supported as input for legacy purposes, but will not be returned from the API. * all * ga-only * appengine.googleapis.com * artifactregistry.googleapis.com * bigquery.googleapis.com * bigtable.googleapis.com * container.googleapis.com * cloudkms.googleapis.com * cloudresourcemanager.googleapis.com * cloudsql.googleapis.com * compute.googleapis.com * dataflow.googleapis.com * dataproc.googleapis.com * dlp.googleapis.com * iam.googleapis.com * logging.googleapis.com * orgpolicy.googleapis.com * pubsub.googleapis.com * spanner.googleapis.com * secretmanager.googleapis.com * speakerid.googleapis.com * storage.googleapis.com Calls to UpdateAccessApprovalSettings using ''all'' or any of the XXX.googleapis.com will be translated to the associated product name (''all'', ''App Engine'', etc.). Note: ''all'' will enroll the resource in all products supported at both ''GA'' and ''Preview'' levels. More information about levels of support is available at https://cloud.google.com/access-approval/docs/supported-services'
      type: object
      id: EnrolledService
      description: Represents the enrollment of a cloud resource into a specific service.
    ResourceProperties:
      id: ResourceProperties
      type: object
      description: The properties associated with the resource of the request.
      properties:
        excludesDescendants:
          type: boolean
          description: Whether an approval will exclude the descendants of the resource being requested.
    AccessApprovalSettings:
      type: object
      description: Settings on a Project/Folder/Organization related to Access Approval.
      properties:
        enrolledServices:
          description: 'A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the resource given by name against any of these services contained here will be required to have explicit approval. If name refers to an organization, enrollment can be done for individual services. If name refers to a folder or project, enrollment can only be done on an all or nothing basis. If a cloud_product is repeated in this list, the first entry will be honored and all following entries will be discarded. A maximum of 10 enrolled services will be enforced, to be expanded as the set of supported services is expanded.'
          items:
            $ref: '#/components/schemas/EnrolledService'
          type: array
        ancestorHasActiveKeyVersion:
          readOnly: true
          type: boolean
          description: 'Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that an ancestor of this Project or Folder has set active_key_version (this field will always be unset for the organization since organizations do not have ancestors).'
        invalidKeyVersion:
          readOnly: true
          type: boolean
          description: 'Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that there is some configuration issue with the active_key_version configured at this level in the resource hierarchy (e.g. it doesn''t exist or the Access Approval service account doesn''t have the correct permissions on it, etc.) This key version is not necessarily the effective key version at this level, as key versions are inherited top-down.'
        preferNoBroadApprovalRequests:
          type: boolean
          description: This preference is communicated to Google personnel when sending an approval request but can be overridden if necessary.
        enrolledAncestor:
          readOnly: true
          type: boolean
          description: 'Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that at least one service is enrolled for Access Approval in one or more ancestors of the Project or Folder (this field will always be unset for the organization since organizations do not have ancestors).'
        activeKeyVersion:
          type: string
          description: 'The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a Google-managed key should be used for signing. This property will be ignored if set by an ancestor of this resource, and new non-empty values may not be set.'
        preferredRequestExpirationDays:
          format: int32
          description: 'This preference is shared with Google personnel, but can be overridden if said personnel deems necessary. The approver ultimately can set the expiration at approval time.'
          type: integer
        name:
          type: string
          description: 'The resource name of the settings. Format is one of: * "projects/{project}/accessApprovalSettings" * "folders/{folder}/accessApprovalSettings" * "organizations/{organization}/accessApprovalSettings"'
        notificationEmails:
          type: array
          items:
            type: string
          description: A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email addresses are allowed.
      id: AccessApprovalSettings
    InvalidateApprovalRequestMessage:
      type: object
      description: Request to invalidate an existing approval.
      id: InvalidateApprovalRequestMessage
      properties: {}
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
  x-stackQL-resources:
    service_account:
      id: google.accessapproval.service_account
      name: service_account
      title: Service Account
      methods:
        organizations_get_service_account:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_get_service_account:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_get_service_account:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1serviceAccount/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_account/methods/organizations_get_service_account'
          - $ref: '#/components/x-stackQL-resources/service_account/methods/folders_get_service_account'
          - $ref: '#/components/x-stackQL-resources/service_account/methods/projects_get_service_account'
        insert: []
        update: []
        delete: []
    access_approval_settings:
      id: google.accessapproval.access_approval_settings
      name: access_approval_settings
      title: Access Approval Settings
      methods:
        organizations_delete_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1accessApprovalSettings/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_get_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1accessApprovalSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_update_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1accessApprovalSettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_delete_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1accessApprovalSettings/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_get_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1accessApprovalSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_update_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1accessApprovalSettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_update_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1accessApprovalSettings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_get_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1accessApprovalSettings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_delete_access_approval_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1accessApprovalSettings/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_approval_settings/methods/organizations_get_access_approval_settings'
          - $ref: '#/components/x-stackQL-resources/access_approval_settings/methods/folders_get_access_approval_settings'
          - $ref: '#/components/x-stackQL-resources/access_approval_settings/methods/projects_get_access_approval_settings'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_approval_settings/methods/organizations_delete_access_approval_settings'
          - $ref: '#/components/x-stackQL-resources/access_approval_settings/methods/folders_delete_access_approval_settings'
          - $ref: '#/components/x-stackQL-resources/access_approval_settings/methods/projects_delete_access_approval_settings'
    approval_requests:
      id: google.accessapproval.approval_requests
      name: approval_requests
      title: Approval Requests
      methods:
        organizations_approval_requests_approve:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}:approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_dismiss:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}:dismiss/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.approvalRequests
        _organizations_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_get:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        organizations_approval_requests_invalidate:
          operation:
            $ref: '#/paths/~1v1~1organizations~1{organizationsId}~1approvalRequests~1{approvalRequestsId}:invalidate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_approve:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}:approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_dismiss:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}:dismiss/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.approvalRequests
        _folders_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_get:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        folders_approval_requests_invalidate:
          operation:
            $ref: '#/paths/~1v1~1folders~1{foldersId}~1approvalRequests~1{approvalRequestsId}:invalidate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_dismiss:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}:dismiss/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_approve:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}:approve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_invalidate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}:invalidate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1approvalRequests~1{approvalRequestsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.approvalRequests
        _projects_approval_requests_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1approvalRequests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/approval_requests/methods/organizations_approval_requests_get'
          - $ref: '#/components/x-stackQL-resources/approval_requests/methods/folders_approval_requests_get'
          - $ref: '#/components/x-stackQL-resources/approval_requests/methods/projects_approval_requests_get'
          - $ref: '#/components/x-stackQL-resources/approval_requests/methods/organizations_approval_requests_list'
          - $ref: '#/components/x-stackQL-resources/approval_requests/methods/folders_approval_requests_list'
          - $ref: '#/components/x-stackQL-resources/approval_requests/methods/projects_approval_requests_list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/organizations/{organizationsId}/serviceAccount':
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Retrieves the service account that is used by Access Approval to access KMS keys for signing approved approval requests.
      operationId: accessapproval.organizations.getServiceAccount
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalServiceAccount'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_account
      x-stackQL-method: organizations_get_service_account
      x-stackQL-verb: select
  '/v1/organizations/{organizationsId}/accessApprovalSettings':
    parameters: *ref_1
    delete:
      description: 'Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.'
      operationId: accessapproval.organizations.deleteAccessApprovalSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: organizations_delete_access_approval_settings
      x-stackQL-verb: delete
    get:
      description: 'Gets the settings associated with a project, folder, or organization.'
      operationId: accessapproval.organizations.getAccessApprovalSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: organizations_get_access_approval_settings
      x-stackQL-verb: select
    patch:
      description: 'Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.'
      operationId: accessapproval.organizations.updateAccessApprovalSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessApprovalSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: organizations_update_access_approval_settings
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:approve':
    parameters: *ref_1
    post:
      description: Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.
      operationId: accessapproval.organizations.approvalRequests.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: organizations_approval_requests_approve
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:dismiss':
    parameters: *ref_1
    post:
      description: 'Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.'
      operationId: accessapproval.organizations.approvalRequests.dismiss
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: organizations_approval_requests_dismiss
      x-stackQL-verb: exec
  '/v1/organizations/{organizationsId}/approvalRequests':
    parameters: *ref_1
    get:
      description: 'Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.'
      operationId: accessapproval.organizations.approvalRequests.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApprovalRequestsResponse'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: organizations_approval_requests_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.approvalRequests
  '/v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}':
    parameters: *ref_1
    get:
      description: Gets an approval request. Returns NOT_FOUND if the request does not exist.
      operationId: accessapproval.organizations.approvalRequests.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: organizations_approval_requests_get
      x-stackQL-verb: select
  '/v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:invalidate':
    parameters: *ref_1
    post:
      description: 'Invalidates an existing ApprovalRequest. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It only invalidates a single approval. Returns FAILED_PRECONDITION if the request exists but is not in an approved state.'
      operationId: accessapproval.organizations.approvalRequests.invalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: organizationsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: organizations_approval_requests_invalidate
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:approve':
    parameters: *ref_1
    post:
      description: Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.
      operationId: accessapproval.folders.approvalRequests.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: folders_approval_requests_approve
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:dismiss':
    parameters: *ref_1
    post:
      description: 'Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.'
      operationId: accessapproval.folders.approvalRequests.dismiss
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: folders_approval_requests_dismiss
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/approvalRequests':
    parameters: *ref_1
    get:
      description: 'Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.'
      operationId: accessapproval.folders.approvalRequests.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApprovalRequestsResponse'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: folders_approval_requests_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.approvalRequests
  '/v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}':
    parameters: *ref_1
    get:
      description: Gets an approval request. Returns NOT_FOUND if the request does not exist.
      operationId: accessapproval.folders.approvalRequests.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: folders_approval_requests_get
      x-stackQL-verb: select
  '/v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:invalidate':
    parameters: *ref_1
    post:
      description: 'Invalidates an existing ApprovalRequest. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It only invalidates a single approval. Returns FAILED_PRECONDITION if the request exists but is not in an approved state.'
      operationId: accessapproval.folders.approvalRequests.invalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: folders_approval_requests_invalidate
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/accessApprovalSettings':
    parameters: *ref_1
    delete:
      description: 'Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.'
      operationId: accessapproval.folders.deleteAccessApprovalSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: folders_delete_access_approval_settings
      x-stackQL-verb: delete
    get:
      description: 'Gets the settings associated with a project, folder, or organization.'
      operationId: accessapproval.folders.getAccessApprovalSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: folders_get_access_approval_settings
      x-stackQL-verb: select
    patch:
      description: 'Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.'
      operationId: accessapproval.folders.updateAccessApprovalSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessApprovalSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: folders_update_access_approval_settings
      x-stackQL-verb: exec
  '/v1/folders/{foldersId}/serviceAccount':
    parameters: *ref_1
    get:
      description: Retrieves the service account that is used by Access Approval to access KMS keys for signing approved approval requests.
      operationId: accessapproval.folders.getServiceAccount
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalServiceAccount'
      parameters:
        - in: path
          name: foldersId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_account
      x-stackQL-method: folders_get_service_account
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/serviceAccount':
    parameters: *ref_1
    get:
      description: Retrieves the service account that is used by Access Approval to access KMS keys for signing approved approval requests.
      operationId: accessapproval.projects.getServiceAccount
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalServiceAccount'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: service_account
      x-stackQL-method: projects_get_service_account
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/accessApprovalSettings':
    parameters: *ref_1
    patch:
      description: 'Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.'
      operationId: accessapproval.projects.updateAccessApprovalSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessApprovalSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: projects_update_access_approval_settings
      x-stackQL-verb: exec
    get:
      description: 'Gets the settings associated with a project, folder, or organization.'
      operationId: accessapproval.projects.getAccessApprovalSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessApprovalSettings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: projects_get_access_approval_settings
      x-stackQL-verb: select
    delete:
      description: 'Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.'
      operationId: accessapproval.projects.deleteAccessApprovalSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: access_approval_settings
      x-stackQL-method: projects_delete_access_approval_settings
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:dismiss':
    parameters: *ref_1
    post:
      description: 'Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.'
      operationId: accessapproval.projects.approvalRequests.dismiss
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: projects_approval_requests_dismiss
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:approve':
    parameters: *ref_1
    post:
      description: Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.
      operationId: accessapproval.projects.approvalRequests.approve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: projects_approval_requests_approve
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:invalidate':
    parameters: *ref_1
    post:
      description: 'Invalidates an existing ApprovalRequest. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It only invalidates a single approval. Returns FAILED_PRECONDITION if the request exists but is not in an approved state.'
      operationId: accessapproval.projects.approvalRequests.invalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateApprovalRequestMessage'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: projects_approval_requests_invalidate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}':
    parameters: *ref_1
    get:
      description: Gets an approval request. Returns NOT_FOUND if the request does not exist.
      operationId: accessapproval.projects.approvalRequests.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequest'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestsId
          required: true
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: projects_approval_requests_get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/approvalRequests':
    parameters: *ref_1
    get:
      description: 'Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.'
      operationId: accessapproval.projects.approvalRequests.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApprovalRequestsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: approval_requests
      x-stackQL-method: projects_approval_requests_list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.approvalRequests
