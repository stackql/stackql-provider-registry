openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Workload Manager API
  description: ''
  version: v1
  x-discovery-doc-revision: '20221213'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://cloud.google.com/workload-manager/docs
servers:
  - url: https://workloadmanager.googleapis.com
components:
  schemas:
    SapDiscoveryMetadata:
      properties:
        definedSystem:
          type: string
          description: Customer defined, something like "E-commerce pre prod"
        customerRegion:
          description: Customer region string for customer's use. Does not represent GCP region.
          type: string
        environmentType:
          type: string
          description: Should be "prod", "QA", "dev", "staging", etc.
        sapProduct:
          type: string
          description: This sap product name
      description: Message describing SAP discovery system metadata
      type: object
      id: SapDiscoveryMetadata
    Operation:
      properties:
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        metadata:
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      id: Operation
    Location:
      id: Location
      type: object
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
      description: A resource that represents Google Cloud Platform location.
    OperationMetadata:
      properties:
        endTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The time the operation finished running.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          type: boolean
          readOnly: true
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
      id: OperationMetadata
      type: object
      description: Represents the metadata of the long-running operation.
    GceInstanceFilter:
      id: GceInstanceFilter
      type: object
      properties:
        serviceAccounts:
          items:
            type: string
          type: array
          description: Service account of compute engine
      description: Message describing compute engine instance filter
    ResourceStatus:
      id: ResourceStatus
      properties:
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
          type: string
          description: State of the resource
          enumDescriptions:
            - The state has not been populated in this message.
            - Resource has an active Create operation.
            - Resource has no outstanding operations on it or has active Update operations.
            - Resource has an active Delete operation.
        rulesNewerVersions:
          description: the new version of rule id if exists
          items:
            type: string
          type: array
      type: object
      description: Message describing resource status
    Status:
      id: Status
      type: object
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    SapDiscovery:
      id: SapDiscovery
      type: object
      description: The schema of SAP system discovery data.
      properties:
        systemId:
          type: string
          description: A combination of database SID, database instance URI and tenant DB name to make a unique identifier per-system.
        updateTime:
          description: Unix timestamp this system has been updated last.
          type: string
          format: google-datetime
        applicationLayer:
          $ref: '#/components/schemas/SapDiscoveryComponent'
          description: An SAP system may run without an application layer.
        databaseLayer:
          description: An SAP System must have a database.
          $ref: '#/components/schemas/SapDiscoveryComponent'
        metadata:
          $ref: '#/components/schemas/SapDiscoveryMetadata'
          description: The metadata for SAP system discovery data.
    SapValidationValidationDetail:
      type: object
      properties:
        sapValidationType:
          description: The SAP system that the validation data is from.
          enum:
            - SAP_VALIDATION_TYPE_UNSPECIFIED
            - SYSTEM
            - COROSYNC
            - PACEMAKER
            - HANA
            - NETWEAVER
          enumDescriptions:
            - Unspecified type.
            - The SAP system named SYSTEM.
            - The SAP system named COROSYNC.
            - The SAP system named PACEMAKER.
            - The SAP system named HANA.
            - The SAP system named NETWEAVER.
          type: string
        details:
          description: 'The pairs of metrics data: field name & field value.'
          type: object
          additionalProperties:
            type: string
      description: Message describing the SAP validation metrics.
      id: SapValidationValidationDetail
    WriteInsightRequest:
      description: Request for sending the data insights.
      properties:
        requestId:
          description: Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        insight:
          $ref: '#/components/schemas/Insight'
          description: Required. The metrics data details.
      id: WriteInsightRequest
      type: object
    ListLocationsResponse:
      properties:
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Locations.ListLocations.
      id: ListLocationsResponse
      type: object
    ResourceFilter:
      description: Message describing resource filters
      id: ResourceFilter
      properties:
        resourceIdPatterns:
          items:
            type: string
          type: array
          description: The id pattern for filter resource
        scopes:
          items:
            type: string
          description: The scopes of evaluation resource
          type: array
        gceInstanceFilter:
          description: Filter compute engine resource
          $ref: '#/components/schemas/GceInstanceFilter'
        inclusionLabels:
          description: The label used for filter resource
          type: object
          additionalProperties:
            type: string
      type: object
    SapValidation:
      description: A presentation of SAP workload insight. The schema of SAP workloads validation related data.
      type: object
      properties:
        validationDetails:
          description: A list of SAP validation metrics data.
          items:
            $ref: '#/components/schemas/SapValidationValidationDetail'
          type: array
      id: SapValidation
    ListEvaluationsResponse:
      type: object
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        evaluations:
          type: array
          description: The list of Evaluation
          items:
            $ref: '#/components/schemas/Evaluation'
      description: Message for response to listing Evaluations
      id: ListEvaluationsResponse
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
      description: The response message for Operations.ListOperations.
    WriteInsightResponse:
      id: WriteInsightResponse
      type: object
      properties: {}
      description: The response for write insights request.
    SapDiscoveryResource:
      type: object
      description: Message describing a resource.
      id: SapDiscoveryResource
      properties:
        resourceKind:
          description: ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc.
          type: string
        updateTime:
          type: string
          description: Unix timestamp of when this resource last had its discovery data updated.
          format: google-datetime
        resourceType:
          description: The type of this resource.
          enumDescriptions:
            - Undefined resource type.
            - This is a compute resource.
            - This a storage resource.
            - This is a network resource.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - COMPUTE
            - STORAGE
            - NETWORK
          type: string
        resourceUri:
          description: URI of the resource, includes project, location, and name.
          type: string
        relatedResources:
          items:
            type: string
          type: array
          description: A list of resource URIs related to this resource.
    CancelOperationRequest:
      id: CancelOperationRequest
      properties: {}
      type: object
      description: The request message for Operations.CancelOperation.
    Empty:
      id: Empty
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    Insight:
      description: A presentation of host resource usage where the workload runs.
      id: Insight
      type: object
      properties:
        sapDiscovery:
          description: The insights data for sap system discovery. This is a copy of SAP System proto and should get updated whenever that one changes.
          $ref: '#/components/schemas/SapDiscovery'
        sapValidation:
          $ref: '#/components/schemas/SapValidation'
          description: The insights data for the sap workload validation.
        sentTime:
          readOnly: true
          type: string
          description: Output only. [Output only] Create time stamp
          format: google-datetime
    Evaluation:
      properties:
        name:
          description: name of resource names have the form 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
          type: string
        resourceStatus:
          $ref: '#/components/schemas/ResourceStatus'
          readOnly: true
          description: Output only. [Output only] The updated rule ids if exist.
        createTime:
          description: Output only. [Output only] Create time stamp
          type: string
          format: google-datetime
          readOnly: true
        updateTime:
          description: Output only. [Output only] Update time stamp
          type: string
          readOnly: true
          format: google-datetime
        ruleVersions:
          type: array
          items:
            type: string
          description: Output only. [Output only] The updated rule ids if exist.
          readOnly: true
        ruleNames:
          description: the name of the rule
          items:
            type: string
          type: array
        description:
          type: string
          description: Description of the Evaluation
        resourceFilter:
          $ref: '#/components/schemas/ResourceFilter'
          description: annotations as key value pairs
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels as key value pairs
      id: Evaluation
      description: Message describing Evaluation object
      type: object
    SapDiscoveryComponent:
      type: object
      description: Message describing the system component.
      properties:
        sid:
          description: The sap identifier, used by the SAP software and helps differentiate systems for customers.
          type: string
        hostProject:
          description: Pantheon Project in which the resources reside.
          type: string
        resources:
          type: array
          description: The resources in a component.
          items:
            $ref: '#/components/schemas/SapDiscoveryResource'
        databaseType:
          description: The component is a SAP database.
          type: string
        applicationType:
          description: The component is a SAP application.
          type: string
      id: SapDiscoveryComponent
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    locations:
      id: google.workloadmanager.locations
      name: locations
      title: Locations
      methods:
        projects_locations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: locations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/projects_locations_list'
        insert: []
        update: []
        delete: []
    insights:
      id: google.workloadmanager.insights
      name: insights
      title: Insights
      methods:
        projects_locations_insights_writeInsight:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insights:writeInsight/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    evaluations:
      id: google.workloadmanager.evaluations
      name: evaluations
      title: Evaluations
      methods:
        projects_locations_evaluations_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_evaluations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_evaluations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/projects_locations_evaluations_get'
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/projects_locations_evaluations_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/projects_locations_evaluations_create'
        update: []
        delete: []
    operations:
      id: google.workloadmanager.operations
      name: operations
      title: Operations
      methods:
        projects_locations_operations_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_locations_operations_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: operations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/projects_locations_operations_delete'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/quotaUser'
    get:
      description: Gets information about a location.
      operationId: workloadmanager.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations:
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: workloadmanager.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/insights:writeInsight:
    parameters: *ref_1
    post:
      description: Write the data insights to workload manager data warehouse.
      operationId: workloadmanager.projects.locations.insights.writeInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteInsightRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteInsightResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations:
    parameters: *ref_1
    post:
      description: Creates a new Evaluation in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: evaluationId
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-verb: insert
    get:
      description: Lists Evaluations in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEvaluationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Evaluation.
      operationId: workloadmanager.projects.locations.evaluations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: workloadmanager.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: workloadmanager.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: workloadmanager.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: workloadmanager.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
