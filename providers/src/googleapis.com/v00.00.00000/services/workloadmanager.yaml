openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Workload Manager API
  description: Workload Manager is a service that provides tooling for enterprise workloads to automate the deployment and validation of your workloads against best practices and recommendations.
  version: v1
  x-discovery-doc-revision: '20230724'
  x-generated-date: '2023-08-10'
externalDocs:
  url: 'https://cloud.google.com/workload-manager/docs'
servers:
  - url: 'https://workloadmanager.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    GceInstanceFilter:
      id: GceInstanceFilter
      properties:
        serviceAccounts:
          type: array
          description: Service account of compute engine
          items:
            type: string
      type: object
      description: Message describing compute engine instance filter
    ListLocationsResponse:
      id: ListLocationsResponse
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Locations.ListLocations.
      type: object
    ScannedResource:
      properties:
        resource:
          type: string
          description: resource name
      type: object
      id: ScannedResource
      description: Message of scanned resource
    SapDiscovery:
      description: LINT.IfChange The schema of SAP system discovery data.
      type: object
      id: SapDiscovery
      properties:
        applicationLayer:
          description: An SAP system may run without an application layer.
          $ref: '#/components/schemas/SapDiscoveryComponent'
        updateTime:
          description: Unix timestamp this system has been updated last.
          type: string
          format: google-datetime
        systemId:
          type: string
          description: 'A combination of database SID, database instance URI and tenant DB name to make a unique identifier per-system.'
        databaseLayer:
          $ref: '#/components/schemas/SapDiscoveryComponent'
          description: An SAP System must have a database.
        metadata:
          $ref: '#/components/schemas/SapDiscoveryMetadata'
          description: The metadata for SAP system discovery data.
    Insight:
      properties:
        sapValidation:
          description: The insights data for the sap workload validation.
          $ref: '#/components/schemas/SapValidation'
        sentTime:
          readOnly: true
          type: string
          description: 'Output only. [Output only] Create time stamp'
          format: google-datetime
        instanceId:
          description: Required. The instance id where the insight is generated from
          type: string
        sapDiscovery:
          $ref: '#/components/schemas/SapDiscovery'
          description: The insights data for sap system discovery. This is a copy of SAP System proto and should get updated whenever that one changes.
        sqlserverValidation:
          $ref: '#/components/schemas/SqlserverValidation'
          description: The insights data for the sqlserver workload validation.
      type: object
      id: Insight
      description: A presentation of host resource usage where the workload runs.
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
      id: CancelOperationRequest
    SapDiscoveryMetadata:
      type: object
      properties:
        sapProduct:
          description: This sap product name
          type: string
        definedSystem:
          type: string
          description: 'Customer defined, something like "E-commerce pre prod"'
        environmentType:
          type: string
          description: 'Should be "prod", "QA", "dev", "staging", etc.'
        customerRegion:
          description: Customer region string for customer's use. Does not represent GCP region.
          type: string
      description: Message describing SAP discovery system metadata
      id: SapDiscoveryMetadata
    ExecutionResult:
      description: Message describing the result of an execution
      id: ExecutionResult
      type: object
      properties:
        violationDetails:
          $ref: '#/components/schemas/ViolationDetails'
          description: the details of violation in result
        resource:
          description: the violate resource
          $ref: '#/components/schemas/Resource'
        rule:
          type: string
          description: the rule which violate in execution
        violationMessage:
          type: string
          description: the violation message of an execution
        severity:
          type: string
          description: severity of violation
        documentationUrl:
          description: the document url of the rule
          type: string
    ResourceStatus:
      type: object
      id: ResourceStatus
      description: Message describing resource status
      properties:
        rulesNewerVersions:
          type: array
          description: 'Historical: Used before 2023-05-22 the new version of rule id if exists'
          items:
            type: string
          deprecated: true
        state:
          type: string
          description: State of the resource
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
          enumDescriptions:
            - The state has not been populated in this message.
            - Resource has an active Create operation.
            - Resource has no outstanding operations on it or has active Update operations.
            - Resource has an active Delete operation.
    Rule:
      properties:
        secondaryCategory:
          description: the secondary category
          type: string
        description:
          type: string
          description: descrite rule in plain language
        errorMessage:
          description: the message template for rule
          type: string
        primaryCategory:
          type: string
          description: the primary category
        severity:
          type: string
          description: the severity of the rule
        name:
          description: rule name
          type: string
        displayName:
          description: the name display in UI
          type: string
        uri:
          type: string
          description: the docuement url for the rule
        remediation:
          description: the remediation for the rule
          type: string
        revisionId:
          type: string
          readOnly: true
          description: Output only. the version of the rule
      id: Rule
      type: object
      description: Message represent a rule
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
      properties: {}
    Operation:
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        metadata:
          type: object
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        response:
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
    SapDiscoveryComponent:
      id: SapDiscoveryComponent
      type: object
      properties:
        resources:
          description: The resources in a component.
          items:
            $ref: '#/components/schemas/SapDiscoveryResource'
          type: array
        applicationProperties:
          description: Optional. The component is a SAP application.
          $ref: '#/components/schemas/SapDiscoveryComponentApplicationProperties'
        databaseProperties:
          description: Optional. The component is a SAP database.
          $ref: '#/components/schemas/SapDiscoveryComponentDatabaseProperties'
        sid:
          type: string
          description: 'The sap identifier, used by the SAP software and helps differentiate systems for customers.'
        hostProject:
          type: string
          description: Pantheon Project in which the resources reside.
      description: Message describing the system component.
    RunEvaluationRequest:
      id: RunEvaluationRequest
      description: Message for creating a Execution
      properties:
        executionId:
          type: string
          description: 'Required. Id of the requesting object If auto-generating Id server-side, remove this field and execution_id from the method_signature of Create RPC'
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
        execution:
          $ref: '#/components/schemas/Execution'
          description: Required. The resource being created
      type: object
    SqlserverValidationDetails:
      properties:
        fields:
          description: Required. Collected data is in format.
          additionalProperties:
            type: string
          type: object
      type: object
      id: SqlserverValidationDetails
      description: Message containing collected data names and values.
    SapDiscoveryComponentApplicationProperties:
      properties:
        applicationType:
          enum:
            - APPLICATION_TYPE_UNSPECIFIED
            - NETWEAVER
          description: 'Required. Type of the application. Netweaver, etc.'
          type: string
          enumDescriptions:
            - Unspecified application type
            - SAP Netweaver
        nfsUri:
          type: string
          description: Optional. Resource URI of the recognized shared NFS of the application. May be empty if the application server has only a single node.
        ascsUri:
          type: string
          description: Required. Resource URI of the recognized ASCS host of the application.
      type: object
      description: A set of properties describing an SAP Application layer.
      id: SapDiscoveryComponentApplicationProperties
    WriteInsightResponse:
      description: The response for write insights request.
      id: WriteInsightResponse
      type: object
      properties: {}
    Execution:
      properties:
        runType:
          enumDescriptions:
            - type of execution is unspecified
            - type of execution is one time
            - type of execution is scheduled
          description: type represent whether the execution executed directly by user or scheduled according evaluation.schedule field.
          enum:
            - TYPE_UNSPECIFIED
            - ONE_TIME
            - SCHEDULED
          type: string
        name:
          description: 'The name of execution resource. The format is projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}'
          type: string
        endTime:
          type: string
          readOnly: true
          format: google-datetime
          description: 'Output only. [Output only] End time stamp'
        evaluationId:
          readOnly: true
          description: 'Output only. [Output only] Evaluation ID'
          type: string
        startTime:
          format: google-datetime
          readOnly: true
          description: 'Output only. [Output only] Start time stamp'
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - FAILED
          type: string
          description: 'Output only. [Output only] State'
          readOnly: true
          enumDescriptions:
            - state of execution is unspecified
            - the execution is running in backend service
            - the execution run success
            - the execution run failed
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs
          type: object
        inventoryTime:
          format: google-datetime
          readOnly: true
          description: 'Output only. [Output only] Inventory time stamp'
          type: string
      id: Execution
      type: object
      description: Message describing Execution object
    ListExecutionsResponse:
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        executions:
          type: array
          description: The list of Execution
          items:
            $ref: '#/components/schemas/Execution'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
      id: ListExecutionsResponse
      type: object
      description: Message for response to listing Executions
    ListRulesResponse:
      type: object
      id: ListRulesResponse
      description: Mesesage of response of list rules
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        rules:
          type: array
          description: all rules in response
          items:
            $ref: '#/components/schemas/Rule'
    Evaluation:
      type: object
      description: LINT.IfChange Message describing Evaluation object
      id: Evaluation
      properties:
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: 'Output only. [Output only] Create time stamp'
        customRulesBucket:
          type: string
          description: The Cloud Storage bucket name for custom rules.
        resourceFilter:
          description: annotations as key value pairs
          $ref: '#/components/schemas/ResourceFilter'
        ruleVersions:
          readOnly: true
          description: 'Output only. [Output only] The updated rule ids if exist.'
          type: array
          items:
            type: string
        description:
          type: string
          description: Description of the Evaluation
        updateTime:
          format: google-datetime
          readOnly: true
          type: string
          description: 'Output only. [Output only] Update time stamp'
        schedule:
          description: 'crontab format schedule for scheduled evaluation, currently only support the following schedule: "0 */1 * * *", "0 */6 * * *", "0 */12 * * *", "0 0 */1 * *", "0 0 */7 * *",'
          type: string
        ruleNames:
          description: the name of the rule
          type: array
          items:
            type: string
        name:
          description: 'name of resource names have the form ''projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'''
          type: string
        resourceStatus:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: 'Output only. [Output only] The updated rule ids if exist.'
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
    ListExecutionResultsResponse:
      description: Message for response of list execution results
      type: object
      properties:
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        executionResults:
          items:
            $ref: '#/components/schemas/ExecutionResult'
          type: array
          description: The versions from the specified publisher.
      id: ListExecutionResultsResponse
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      type: object
      properties:
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          format: int32
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
    SapDiscoveryComponentDatabaseProperties:
      description: A set of properties describing an SAP Database layer.
      type: object
      properties:
        sharedNfsUri:
          description: Optional. URI of the recognized shared NFS of the database. May be empty if the database has only a single node.
          type: string
        databaseType:
          description: 'Required. Type of the database. HANA, DB2, etc.'
          type: string
          enumDescriptions:
            - Unspecified database type.
            - SAP HANA
            - SAP MAX_DB
            - IBM DB2
          enum:
            - DATABASE_TYPE_UNSPECIFIED
            - HANA
            - MAX_DB
            - DB2
        primaryInstanceUri:
          description: Required. URI of the recognized primary instance of the database.
          type: string
      id: SapDiscoveryComponentDatabaseProperties
    Location:
      description: A resource that represents a Google Cloud location.
      id: Location
      type: object
      properties:
        metadata:
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
    ListScannedResourcesResponse:
      id: ListScannedResourcesResponse
      type: object
      description: Message for response to list scanned resources
      properties:
        scannedResources:
          type: array
          items:
            $ref: '#/components/schemas/ScannedResource'
          description: All scanned resources in response
        nextPageToken:
          description: 'A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
    SapValidation:
      properties:
        validationDetails:
          description: A list of SAP validation metrics data.
          type: array
          items:
            $ref: '#/components/schemas/SapValidationValidationDetail'
      description: A presentation of SAP workload insight. The schema of SAP workloads validation related data.
      type: object
      id: SapValidation
    SqlserverValidation:
      properties:
        validationDetails:
          type: array
          items:
            $ref: '#/components/schemas/SqlserverValidationValidationDetail'
          description: A list of SqlServer validation metrics data.
        instance:
          type: string
          description: 'Required. The instance_name of the instance that the Insight data comes from. According to https://linter.aip.dev/122/name-suffix: field names should not use the _name suffix unless the field would be ambiguous without it.'
        agentVersion:
          description: The agent version collected this data point
          type: string
        projectId:
          description: Required. The project_id of the cloud project that the Insight data comes from.
          type: string
      type: object
      id: SqlserverValidation
      description: A presentation of SQLServer workload insight. The schema of SqlServer workloads validation related data.
    ListEvaluationsResponse:
      properties:
        evaluations:
          items:
            $ref: '#/components/schemas/Evaluation'
          description: The list of Evaluation
          type: array
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
      id: ListEvaluationsResponse
      description: Message for response to listing Evaluations
      type: object
    SapDiscoveryResource:
      type: object
      id: SapDiscoveryResource
      properties:
        resourceUri:
          type: string
          description: 'URI of the resource, includes project, location, and name.'
        updateTime:
          description: Unix timestamp of when this resource last had its discovery data updated.
          format: google-datetime
          type: string
        resourceKind:
          description: 'Required. ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc.'
          enum:
            - RESOURCE_KIND_UNSPECIFIED
            - RESOURCE_KIND_INSTANCE
            - RESOURCE_KIND_DISK
            - RESOURCE_KIND_ADDRESS
            - RESOURCE_KIND_FILESTORE
            - RESOURCE_KIND_HEALTH_CHECK
            - RESOURCE_KIND_FORWARDING_RULE
            - RESOURCE_KIND_BACKEND_SERVICE
            - RESOURCE_KIND_SUBNETWORK
            - RESOURCE_KIND_NETWORK
            - RESOURCE_KIND_PUBLIC_ADDRESS
            - RESOURCE_KIND_INSTANCE_GROUP
          type: string
          enumDescriptions:
            - Unspecified resource kind.
            - This is a compute instance.
            - This is a compute disk.
            - This is a compute address.
            - This is a filestore instance.
            - This is a compute health check.
            - This is a compute forwarding rule.
            - This is a compute backend service.
            - This is a compute subnetwork.
            - This is a compute network.
            - This is a public accessible IP Address.
            - This is a compute instance group.
        relatedResources:
          items:
            type: string
          description: A list of resource URIs related to this resource.
          type: array
        resourceType:
          enumDescriptions:
            - Undefined resource type.
            - This is a compute resource.
            - This a storage resource.
            - This is a network resource.
          type: string
          description: Required. The type of this resource.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_COMPUTE
            - RESOURCE_TYPE_STORAGE
            - RESOURCE_TYPE_NETWORK
      description: Message describing a resource.
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      type: object
      id: OperationMetadata
      properties:
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
        verb:
          type: string
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
        requestedCancellation:
          readOnly: true
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
        statusMessage:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
    ResourceFilter:
      description: Message describing resource filters
      properties:
        inclusionLabels:
          type: object
          description: The label used for filter resource
          additionalProperties:
            type: string
        gceInstanceFilter:
          description: Filter compute engine resource
          $ref: '#/components/schemas/GceInstanceFilter'
        scopes:
          items:
            type: string
          type: array
          description: The scopes of evaluation resource
        resourceIdPatterns:
          items:
            type: string
          type: array
          description: The id pattern for filter resource
      type: object
      id: ResourceFilter
    ViolationDetails:
      properties:
        serviceAccount:
          type: string
          description: the service account associate with resource
        asset:
          type: string
          description: the name of asset
        observed:
          type: object
          description: observed
          additionalProperties:
            type: string
      id: ViolationDetails
      type: object
      description: Message describing the violdation in execution result
    Resource:
      description: Message represent resource in execution result
      properties:
        serviceAccount:
          type: string
          description: the service account accosiate with resource
        name:
          description: the name of the resource
          type: string
        type:
          type: string
          description: the type of reresource
      id: Resource
      type: object
    WriteInsightRequest:
      type: object
      id: WriteInsightRequest
      properties:
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
        insight:
          $ref: '#/components/schemas/Insight'
          description: Required. The metrics data details.
      description: Request for sending the data insights.
    SapValidationValidationDetail:
      id: SapValidationValidationDetail
      properties:
        details:
          additionalProperties:
            type: string
          type: object
          description: 'The pairs of metrics data: field name & field value.'
        sapValidationType:
          description: The SAP system that the validation data is from.
          enumDescriptions:
            - Unspecified type.
            - The SAP system named SYSTEM.
            - The SAP system named COROSYNC.
            - The SAP system named PACEMAKER.
            - The SAP system named HANA.
            - The SAP system named NETWEAVER.
          type: string
          enum:
            - SAP_VALIDATION_TYPE_UNSPECIFIED
            - SYSTEM
            - COROSYNC
            - PACEMAKER
            - HANA
            - NETWEAVER
      type: object
      description: Message describing the SAP validation metrics.
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
      type: object
    SqlserverValidationValidationDetail:
      type: object
      id: SqlserverValidationValidationDetail
      description: Message describing the Sqlserver validation metrics.
      properties:
        details:
          items:
            $ref: '#/components/schemas/SqlserverValidationDetails'
          description: Required. Details wraps map that represents collected data names and values.
          type: array
        type:
          enum:
            - SQLSERVER_VALIDATION_TYPE_UNSPECIFIED
            - OS
            - DB_LOG_DISK_SEPARATION
            - DB_MAX_PARALLELISM
            - DB_CXPACKET_WAITS
            - DB_TRANSACTION_LOG_HANDLING
            - DB_VIRTUAL_LOG_FILE_COUNT
            - DB_BUFFER_POOL_EXTENSION
            - DB_MAX_SERVER_MEMORY
            - INSTANCE_METRICS
          description: The Sqlserver system that the validation data is from.
          enumDescriptions:
            - Unspecified type.
            - The Sqlserver system named OS.
            - The LOG_DISK_SEPARATION table.
            - The MAX_PARALLELISM table.
            - The CXPACKET_WAITS table.
            - The TRANSACTION_LOG_HANDLING table.
            - The VIRTUAL_LOG_FILE_COUNT table.
            - The BUFFER_POOL_EXTENSION table.
            - The MAX_SERVER_MEMORY table.
            - The INSTANCE_METRICS table.
          type: string
  parameters:
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.workloadmanager.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    insights:
      id: google.workloadmanager.insights
      name: insights
      title: Insights
      methods:
        write_insight:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insights:writeInsight/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    rules:
      id: google.workloadmanager.rules
      name: rules
      title: Rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rules
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rules/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.workloadmanager.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    evaluations:
      id: google.workloadmanager.evaluations
      name: evaluations
      title: Evaluations
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.evaluations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/create'
        update: []
        delete: []
    results:
      id: google.workloadmanager.results
      name: results
      title: Results
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}~1results/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executionResults
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}~1results/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/results/methods/list'
        insert: []
        update: []
        delete: []
    scanned_resources:
      id: google.workloadmanager.scanned_resources
      name: scanned_resources
      title: Scanned Resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}~1scannedResources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scannedResources
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}~1scannedResources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scanned_resources/methods/list'
        insert: []
        update: []
        delete: []
    executions:
      id: google.workloadmanager.executions
      name: executions
      title: Executions
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executions
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/list'
        insert: []
        update: []
        delete: []
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Gets information about a location.
      operationId: workloadmanager.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: workloadmanager.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/insights:writeInsight':
    parameters: *ref_1
    post:
      description: Write the data insights to workload manager data warehouse.
      operationId: workloadmanager.projects.locations.insights.writeInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteInsightRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteInsightResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: insights
      x-stackQL-method: write_insight
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/rules':
    parameters: *ref_1
    get:
      description: Lists rules in a given project.
      operationId: workloadmanager.projects.locations.rules.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: customRulesBucket
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: rules
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.rules
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: workloadmanager.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: workloadmanager.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: workloadmanager.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: workloadmanager.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/evaluations':
    parameters: *ref_1
    post:
      description: Creates a new Evaluation in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: evaluationId
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Evaluations in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEvaluationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.evaluations
  '/v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Evaluation.
      operationId: workloadmanager.projects.locations.evaluations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: evaluations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}/results':
    parameters: *ref_1
    get:
      description: List the running result of a single Execution.
      operationId: workloadmanager.projects.locations.evaluations.executions.results.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionResultsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: results
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.executionResults
  '/v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}/scannedResources':
    parameters: *ref_1
    get:
      description: List all scanned resources for a single Execution.
      operationId: workloadmanager.projects.locations.evaluations.executions.scannedResources.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScannedResourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: rule
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: scanned_resources
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.scannedResources
  '/v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions':
    parameters: *ref_1
    get:
      description: Lists Executions in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.executions.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: executions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.executions
  '/v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions:run':
    parameters: *ref_1
    post:
      description: Creates a new Execution in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.executions.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunEvaluationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: run
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Execution.
      operationId: workloadmanager.projects.locations.evaluations.executions.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-method: get
      x-stackQL-verb: exec
