openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Workload Manager API
  description: >-
    Workload Manager is a service that provides tooling for enterprise workloads
    to automate the deployment and validation of your workloads against best
    practices and recommendations.
  version: v1
  x-discovery-doc-revision: '20250813'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://cloud.google.com/workload-manager/docs
servers:
  - url: https://workloadmanager.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListEvaluationsResponse:
      id: ListEvaluationsResponse
      description: Message for response to listing Evaluations
      type: object
      properties:
        evaluations:
          description: The list of Evaluation
          type: array
          items:
            $ref: '#/components/schemas/Evaluation'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Evaluation:
      id: Evaluation
      description: Message describing Evaluation object
      type: object
      properties:
        name:
          description: >-
            name of resource names have the form
            'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
          type: string
        description:
          description: Description of the Evaluation
          type: string
        resourceFilter:
          description: annotations as key value pairs
          $ref: '#/components/schemas/ResourceFilter'
        ruleNames:
          description: the name of the rule
          type: array
          items:
            type: string
        ruleVersions:
          description: Output only. [Output only] The updated rule ids if exist.
          readOnly: true
          type: array
          items:
            type: string
        resourceStatus:
          description: Output only. [Output only] The updated rule ids if exist.
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
        createTime:
          description: Output only. [Output only] Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. [Output only] Update time stamp
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        schedule:
          description: >-
            crontab format schedule for scheduled evaluation, currently only
            support the following schedule: "0 */1 * * *", "0 */6 * * *", "0
            */12 * * *", "0 0 */1 * *", "0 0 */7 * *",
          type: string
        customRulesBucket:
          description: The Cloud Storage bucket name for custom rules.
          type: string
        evaluationType:
          description: Evaluation type
          type: string
          enumDescriptions:
            - Not specified
            - SAP best practices
            - SQL best practices
            - Customized best practices
            - SCC IaC (Infra as Code) best practices.
          enumDeprecated:
            - false
            - false
            - false
            - false
            - true
          enum:
            - EVALUATION_TYPE_UNSPECIFIED
            - SAP
            - SQL_SERVER
            - OTHER
            - SCC_IAC
        bigQueryDestination:
          description: Optional. BigQuery destination
          $ref: '#/components/schemas/BigQueryDestination'
        kmsKey:
          description: >-
            Optional. Immutable. Customer-managed encryption key name, in the
            format projects/*/locations/*/keyRings/*/cryptoKeys/*.
          type: string
    ResourceFilter:
      id: ResourceFilter
      description: Message describing resource filters
      type: object
      properties:
        scopes:
          description: The scopes of evaluation resource
          type: array
          items:
            type: string
        resourceIdPatterns:
          description: The id pattern for filter resource
          type: array
          items:
            type: string
        inclusionLabels:
          description: The label used for filter resource
          type: object
          additionalProperties:
            type: string
        gceInstanceFilter:
          description: Filter compute engine resource
          $ref: '#/components/schemas/GceInstanceFilter'
    GceInstanceFilter:
      id: GceInstanceFilter
      description: Message describing compute engine instance filter
      type: object
      properties:
        serviceAccounts:
          description: Service account of compute engine
          type: array
          items:
            type: string
    ResourceStatus:
      id: ResourceStatus
      description: Message describing resource status
      type: object
      properties:
        rulesNewerVersions:
          description: >-
            Historical: Used before 2023-05-22 the new version of rule id if
            exists
          deprecated: true
          type: array
          items:
            type: string
        state:
          description: State of the resource
          type: string
          enumDescriptions:
            - The state has not been populated in this message.
            - Resource has an active Create operation.
            - >-
              Resource has no outstanding operations on it or has active Update
              operations.
            - Resource has an active Delete operation.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - DELETING
    BigQueryDestination:
      id: BigQueryDestination
      description: Message describing big query destination
      type: object
      properties:
        destinationDataset:
          description: Optional. destination dataset to save evaluation results
          type: string
        createNewResultsTable:
          description: Optional. determine if results will be saved in a new table
          type: boolean
    ListExecutionsResponse:
      id: ListExecutionsResponse
      description: Message for response to listing Executions
      type: object
      properties:
        executions:
          description: The list of Execution
          type: array
          items:
            $ref: '#/components/schemas/Execution'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Execution:
      id: Execution
      description: Message describing Execution object
      type: object
      properties:
        name:
          description: >-
            The name of execution resource. The format is
            projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}
          type: string
        startTime:
          description: Output only. [Output only] Start time stamp
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. [Output only] End time stamp
          readOnly: true
          type: string
          format: google-datetime
        inventoryTime:
          description: Output only. [Output only] Inventory time stamp
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. [Output only] State
          readOnly: true
          type: string
          enumDescriptions:
            - state of execution is unspecified
            - the execution is running in backend service
            - the execution run success
            - the execution run failed
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - FAILED
        evaluationId:
          description: Output only. [Output only] Evaluation ID
          readOnly: true
          type: string
        labels:
          description: Labels as key value pairs
          type: object
          additionalProperties:
            type: string
        runType:
          description: >-
            type represent whether the execution executed directly by user or
            scheduled according evaluation.schedule field.
          type: string
          enumDescriptions:
            - type of execution is unspecified
            - type of execution is one time
            - type of execution is scheduled
          enum:
            - TYPE_UNSPECIFIED
            - ONE_TIME
            - SCHEDULED
        ruleResults:
          description: Output only. execution result summary per rule
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RuleExecutionResult'
        externalDataSources:
          description: Optional. External data sources
          type: array
          items:
            $ref: '#/components/schemas/ExternalDataSources'
        notices:
          description: Output only. Additional information generated by the execution
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Notice'
        engine:
          description: Optional. Engine
          type: string
          enumDescriptions:
            - The original CG
            - SlimCG / Scanner
            - Evaluation Engine V2
          enum:
            - ENGINE_UNSPECIFIED
            - ENGINE_SCANNER
            - V2
        resultSummary:
          description: Output only. [Output only] Result summary for the execution
          readOnly: true
          $ref: '#/components/schemas/Summary'
    RuleExecutionResult:
      id: RuleExecutionResult
      description: Message for execution result summary per rule
      type: object
      properties:
        rule:
          description: rule name
          type: string
        state:
          description: Output only. The execution status
          readOnly: true
          type: string
          enumDescriptions:
            - Unknown state
            - execution completed successfully
            - execution completed with failures
            - execution was not executed
          enum:
            - STATE_UNSPECIFIED
            - STATE_SUCCESS
            - STATE_FAILURE
            - STATE_SKIPPED
        message:
          description: Execution message, if any
          type: string
        resultCount:
          description: Number of violations
          type: string
          format: int64
        scannedResourceCount:
          description: Number of total scanned resources
          type: string
          format: int64
    ExternalDataSources:
      id: ExternalDataSources
      description: Message for external data sources
      type: object
      properties:
        name:
          description: >-
            Optional. Name of external data source. The name will be used inside
            the rego/sql to refer the external data
          type: string
        uri:
          description: >-
            Required. URI of external data source. example of bq table
            {project_ID}.{dataset_ID}.{table_ID}
          type: string
        type:
          description: Required. Type of external data source
          type: string
          enumDescriptions:
            - Unknown type
            - BigQuery table
          enum:
            - TYPE_UNSPECIFIED
            - BIG_QUERY_TABLE
        assetType:
          description: >-
            Required. The asset type of the external data source this can be one
            of go/cai-asset-types to override the default asset type or it can
            be a custom type defined by the user custom type must match the
            asset type in the rule
          type: string
    Notice:
      id: Notice
      description: Message for additional information generated by the execution
      type: object
      properties:
        message:
          description: Output only. Message of the notice
          readOnly: true
          type: string
    Summary:
      id: Summary
      description: Message for execution summary
      type: object
      properties:
        failures:
          description: Output only. Number of failures
          readOnly: true
          type: string
          format: int64
        newFailures:
          description: >-
            Output only. Number of new failures compared to the previous
            execution
          readOnly: true
          type: string
          format: int64
        newFixes:
          description: Output only. Number of new fixes compared to the previous execution
          readOnly: true
          type: string
          format: int64
    RunEvaluationRequest:
      id: RunEvaluationRequest
      description: Message for creating a Execution
      type: object
      properties:
        executionId:
          description: >-
            Required. Id of the requesting object If auto-generating Id
            server-side, remove this field and execution_id from the
            method_signature of Create RPC
          type: string
        execution:
          description: Required. The resource being created
          $ref: '#/components/schemas/Execution'
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    ListExecutionResultsResponse:
      id: ListExecutionResultsResponse
      description: Message for response of list execution results
      type: object
      properties:
        executionResults:
          description: The versions from the specified publisher.
          type: array
          items:
            $ref: '#/components/schemas/ExecutionResult'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    ExecutionResult:
      id: ExecutionResult
      description: Message describing the result of an execution
      type: object
      properties:
        violationMessage:
          description: The violation message of an execution.
          type: string
        severity:
          description: The severity of violation.
          type: string
        rule:
          description: The rule that is violated in an evaluation.
          type: string
        documentationUrl:
          description: The URL for the documentation of the rule.
          type: string
        resource:
          description: The resource that violates the rule.
          $ref: '#/components/schemas/Resource'
        violationDetails:
          description: The details of violation in an evaluation result.
          $ref: '#/components/schemas/ViolationDetails'
        commands:
          description: The commands to remediate the violation.
          type: array
          items:
            $ref: '#/components/schemas/Command'
        type:
          description: Execution result type of the scanned resource
          type: string
          enumDescriptions:
            - Unknown state
            - resource successfully passed the rule
            - resource violated the rule
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PASSED
            - TYPE_VIOLATED
    Resource:
      id: Resource
      description: Message represent resource in execution result
      type: object
      properties:
        type:
          description: The type of resource.
          type: string
        name:
          description: The name of the resource.
          type: string
        serviceAccount:
          description: The service account associated with the resource.
          type: string
    ViolationDetails:
      id: ViolationDetails
      description: Message describing the violation in an evaluation result.
      type: object
      properties:
        asset:
          description: The name of the asset.
          type: string
        serviceAccount:
          description: The service account associated with the resource.
          type: string
        observed:
          description: Details of the violation.
          type: object
          additionalProperties:
            type: string
    Command:
      id: Command
      description: '* Command specifies the type of command to execute.'
      type: object
      properties:
        agentCommand:
          description: >-
            AgentCommand specifies a one-time executable program for the agent
            to run.
          $ref: '#/components/schemas/AgentCommand'
        shellCommand:
          description: ShellCommand is invoked via the agent's command line executor.
          $ref: '#/components/schemas/ShellCommand'
    AgentCommand:
      id: AgentCommand
      description: >-
        * An AgentCommand specifies a one-time executable program for the agent
        to run.
      type: object
      properties:
        command:
          description: >-
            command is the name of the agent one-time executable that will be
            invoked.
          type: string
        parameters:
          description: >-
            parameters is a map of key/value pairs that can be used to specify
            additional one-time executable settings.
          type: object
          additionalProperties:
            type: string
    ShellCommand:
      id: ShellCommand
      description: '* A ShellCommand is invoked via the agent''s command line executor'
      type: object
      properties:
        command:
          description: command is the name of the command to be executed.
          type: string
        args:
          description: args is a string of arguments to be passed to the command.
          type: string
        timeoutSeconds:
          description: Optional. If not specified, the default timeout is 60 seconds.
          type: integer
          format: int32
    ListRulesResponse:
      id: ListRulesResponse
      description: Mesesage of response of list rules
      type: object
      properties:
        rules:
          description: all rules in response
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    Rule:
      id: Rule
      description: Message represent a rule
      type: object
      properties:
        name:
          description: rule name
          type: string
        revisionId:
          description: Output only. the version of the rule
          readOnly: true
          type: string
        displayName:
          description: the name display in UI
          type: string
        description:
          description: descrite rule in plain language
          type: string
        severity:
          description: the severity of the rule
          type: string
        primaryCategory:
          description: the primary category
          type: string
        secondaryCategory:
          description: the secondary category
          type: string
        errorMessage:
          description: the message template for rule
          type: string
        uri:
          description: the docuement url for the rule
          type: string
        remediation:
          description: the remediation for the rule
          type: string
        tags:
          description: List of user-defined tags
          type: array
          items:
            type: string
    ListScannedResourcesResponse:
      id: ListScannedResourcesResponse
      description: Message for response to list scanned resources
      type: object
      properties:
        scannedResources:
          description: All scanned resources in response
          type: array
          items:
            $ref: '#/components/schemas/ScannedResource'
        nextPageToken:
          description: >-
            A token, which can be sent as `page_token` to retrieve the next
            page. If this field is omitted, there are no subsequent pages.
          type: string
    ScannedResource:
      id: ScannedResource
      description: Message of scanned resource
      type: object
      properties:
        resource:
          description: resource name
          type: string
        type:
          description: resource type
          type: string
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    WriteInsightRequest:
      id: WriteInsightRequest
      description: Request for sending the data insights.
      type: object
      properties:
        insight:
          description: Required. The metrics data details.
          $ref: '#/components/schemas/Insight'
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        agentVersion:
          description: Optional. The agent version collected this data point.
          type: string
    Insight:
      id: Insight
      description: A presentation of host resource usage where the workload runs.
      type: object
      properties:
        sentTime:
          description: Output only. [Output only] Create time stamp
          readOnly: true
          type: string
          format: google-datetime
        sapValidation:
          description: The insights data for the SAP workload validation.
          $ref: '#/components/schemas/SapValidation'
        sapDiscovery:
          description: >-
            The insights data for SAP system discovery. This is a copy of SAP
            System proto and should get updated whenever that one changes.
          $ref: '#/components/schemas/SapDiscovery'
        sqlserverValidation:
          description: The insights data for the sqlserver workload validation.
          $ref: '#/components/schemas/SqlserverValidation'
        torsoValidation:
          description: The insights data for workload validation of torso workloads.
          $ref: '#/components/schemas/TorsoValidation'
        agentStatus:
          description: The insights data for the agent status.
          $ref: '#/components/schemas/AgentStatus'
        instanceId:
          description: Required. The instance id where the insight is generated from
          type: string
    SapValidation:
      id: SapValidation
      description: >-
        A presentation of SAP workload insight. The schema of SAP workloads
        validation related data.
      type: object
      properties:
        validationDetails:
          description: Optional. A list of SAP validation metrics data.
          type: array
          items:
            $ref: '#/components/schemas/SapValidationValidationDetail'
        projectId:
          description: >-
            Required. The project_id of the cloud project that the Insight data
            comes from.
          type: string
        zone:
          description: Optional. The zone of the instance that the Insight data comes from.
          type: string
    SapValidationValidationDetail:
      id: SapValidationValidationDetail
      description: Message describing the SAP validation metrics.
      type: object
      properties:
        sapValidationType:
          description: Optional. The SAP system that the validation data is from.
          type: string
          enumDescriptions:
            - Unspecified type.
            - >-
              The SYSTEM validation type collects underlying system data from
              the VM.
            - >-
              The COROSYNC validation type collects Corosync configuration and
              runtime data. Corosync enables servers to interact as a HA
              cluster.
            - >-
              The PACEMAKER validation type collects Pacemaker configuration
              data. Pacemaker is a high-availability cluster resource manager.
            - >-
              The HANA validation type collects HANA configuration data. SAP
              HANA is an in-memory, column-oriented, relational database
              management system.
            - >-
              The NETWEAVER validation type collects NetWeaver configuration
              data. SAP NetWeaver is a software stack for many of SAP SE's
              applications.
            - >-
              The HANA_SECURITY validation type collects HANA configuration data
              as it relates to SAP security best practices.
            - >-
              The CUSTOM validation type collects any customer-defined data that
              does not fall into any of the other categories of validations.
          enum:
            - SAP_VALIDATION_TYPE_UNSPECIFIED
            - SYSTEM
            - COROSYNC
            - PACEMAKER
            - HANA
            - NETWEAVER
            - HANA_SECURITY
            - CUSTOM
        details:
          description: 'Optional. The pairs of metrics data: field name & field value.'
          type: object
          additionalProperties:
            type: string
        isPresent:
          description: Optional. Was there a SAP system detected for this validation type.
          type: boolean
    SapDiscovery:
      id: SapDiscovery
      description: The schema of SAP system discovery data.
      type: object
      properties:
        metadata:
          description: Optional. The metadata for SAP system discovery data.
          $ref: '#/components/schemas/SapDiscoveryMetadata'
        databaseLayer:
          description: Required. An SAP System must have a database.
          $ref: '#/components/schemas/SapDiscoveryComponent'
        applicationLayer:
          description: Optional. An SAP system may run without an application layer.
          $ref: '#/components/schemas/SapDiscoveryComponent'
        systemId:
          description: >-
            Output only. A combination of database SID, database instance URI
            and tenant DB name to make a unique identifier per-system.
          readOnly: true
          type: string
        updateTime:
          description: Required. Unix timestamp this system has been updated last.
          type: string
          format: google-datetime
        projectNumber:
          description: Optional. The GCP project number that this SapSystem belongs to.
          type: string
        workloadProperties:
          description: Optional. The properties of the workload.
          $ref: '#/components/schemas/SapDiscoveryWorkloadProperties'
        useDrReconciliation:
          description: Optional. Whether to use DR reconciliation or not.
          type: boolean
    SapDiscoveryMetadata:
      id: SapDiscoveryMetadata
      description: Message describing SAP discovery system metadata
      type: object
      properties:
        definedSystem:
          description: Optional. Customer defined, something like "E-commerce pre prod"
          type: string
        sapProduct:
          description: Optional. This SAP product name
          type: string
        environmentType:
          description: Optional. Should be "prod", "QA", "dev", "staging", etc.
          type: string
        customerRegion:
          description: >-
            Optional. Customer region string for customer's use. Does not
            represent GCP region.
          type: string
    SapDiscoveryComponent:
      id: SapDiscoveryComponent
      description: Message describing the system component.
      type: object
      properties:
        resources:
          description: Optional. The resources in a component.
          type: array
          items:
            $ref: '#/components/schemas/SapDiscoveryResource'
        applicationProperties:
          description: Optional. The component is a SAP application.
          $ref: '#/components/schemas/SapDiscoveryComponentApplicationProperties'
        databaseProperties:
          description: Optional. The component is a SAP database.
          $ref: '#/components/schemas/SapDiscoveryComponentDatabaseProperties'
        hostProject:
          description: Required. Pantheon Project in which the resources reside.
          type: string
        sid:
          description: >-
            Optional. The SAP identifier, used by the SAP software and helps
            differentiate systems for customers.
          type: string
        topologyType:
          description: Optional. The detected topology of the component.
          type: string
          enumDescriptions:
            - Unspecified topology.
            - A scale-up single node system.
            - A scale-out multi-node system.
          enum:
            - TOPOLOGY_TYPE_UNSPECIFIED
            - TOPOLOGY_SCALE_UP
            - TOPOLOGY_SCALE_OUT
        haHosts:
          description: >-
            Optional. A list of host URIs that are part of the HA configuration
            if present. An empty list indicates the component is not configured
            for HA.
          type: array
          items:
            type: string
        replicationSites:
          description: >-
            Optional. A list of replication sites used in Disaster Recovery (DR)
            configurations.
          type: array
          items:
            $ref: '#/components/schemas/SapDiscoveryComponentReplicationSite'
        region:
          description: >-
            Optional. The region this component's resources are primarily
            located in.
          type: string
    SapDiscoveryResource:
      id: SapDiscoveryResource
      description: Message describing a resource.
      type: object
      properties:
        resourceType:
          description: Required. The type of this resource.
          type: string
          enumDescriptions:
            - Undefined resource type.
            - This is a compute resource.
            - This a storage resource.
            - This is a network resource.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - RESOURCE_TYPE_COMPUTE
            - RESOURCE_TYPE_STORAGE
            - RESOURCE_TYPE_NETWORK
        resourceKind:
          description: Required. ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc.
          type: string
          enumDescriptions:
            - Unspecified resource kind.
            - This is a compute instance.
            - This is a compute disk.
            - This is a compute address.
            - This is a filestore instance.
            - This is a compute health check.
            - This is a compute forwarding rule.
            - This is a compute backend service.
            - This is a compute subnetwork.
            - This is a compute network.
            - This is a public accessible IP Address.
            - This is a compute instance group.
          enum:
            - RESOURCE_KIND_UNSPECIFIED
            - RESOURCE_KIND_INSTANCE
            - RESOURCE_KIND_DISK
            - RESOURCE_KIND_ADDRESS
            - RESOURCE_KIND_FILESTORE
            - RESOURCE_KIND_HEALTH_CHECK
            - RESOURCE_KIND_FORWARDING_RULE
            - RESOURCE_KIND_BACKEND_SERVICE
            - RESOURCE_KIND_SUBNETWORK
            - RESOURCE_KIND_NETWORK
            - RESOURCE_KIND_PUBLIC_ADDRESS
            - RESOURCE_KIND_INSTANCE_GROUP
        resourceUri:
          description: Required. URI of the resource, includes project, location, and name.
          type: string
        relatedResources:
          description: Optional. A list of resource URIs related to this resource.
          type: array
          items:
            type: string
        updateTime:
          description: >-
            Required. Unix timestamp of when this resource last had its
            discovery data updated.
          type: string
          format: google-datetime
        instanceProperties:
          description: >-
            Optional. A set of properties only applying to instance type
            resources.
          $ref: '#/components/schemas/SapDiscoveryResourceInstanceProperties'
    SapDiscoveryResourceInstanceProperties:
      id: SapDiscoveryResourceInstanceProperties
      description: A set of properties only present for an instance type resource
      type: object
      properties:
        virtualHostname:
          description: Optional. A virtual hostname of the instance if it has one.
          type: string
        clusterInstances:
          description: >-
            Optional. A list of instance URIs that are part of a cluster with
            this one.
          type: array
          items:
            type: string
        instanceNumber:
          description: Optional. The VM's instance number.
          deprecated: true
          type: string
          format: int64
        instanceRole:
          description: >-
            Optional. Bitmask of instance role, a resource may have multiple
            roles at once.
          type: string
          enumDescriptions:
            - Unspecified instance role.
            - Application central services.
            - Enqueue replication server.
            - Application server.
            - Database node.
            - >-
              Combinations of roles. Application central services and enqueue
              replication server.
            - Application central services and application server.
            - Application central services and database.
            - Enqueue replication server and application server.
            - Enqueue replication server and database.
            - Application server and database.
            - >-
              Application central services, enqueue replication server and
              application server.
            - >-
              Application central services, enqueue replication server and
              database.
            - Application central services, application server and database.
            - Enqueue replication server, application server and database.
            - >-
              Application central services, enqueue replication server,
              application server and database.
          enum:
            - INSTANCE_ROLE_UNSPECIFIED
            - INSTANCE_ROLE_ASCS
            - INSTANCE_ROLE_ERS
            - INSTANCE_ROLE_APP_SERVER
            - INSTANCE_ROLE_DATABASE
            - INSTANCE_ROLE_ASCS_ERS
            - INSTANCE_ROLE_ASCS_APP_SERVER
            - INSTANCE_ROLE_ASCS_DATABASE
            - INSTANCE_ROLE_ERS_APP_SERVER
            - INSTANCE_ROLE_ERS_DATABASE
            - INSTANCE_ROLE_APP_SERVER_DATABASE
            - INSTANCE_ROLE_ASCS_ERS_APP_SERVER
            - INSTANCE_ROLE_ASCS_ERS_DATABASE
            - INSTANCE_ROLE_ASCS_APP_SERVER_DATABASE
            - INSTANCE_ROLE_ERS_APP_SERVER_DATABASE
            - INSTANCE_ROLE_ASCS_ERS_APP_SERVER_DATABASE
        appInstances:
          description: Optional. App server instances on the host
          type: array
          items:
            $ref: >-
              #/components/schemas/SapDiscoveryResourceInstancePropertiesAppInstance
        isDrSite:
          description: Optional. Instance is part of a DR site.
          type: boolean
        diskMounts:
          description: Optional. Disk mounts on the instance.
          type: array
          items:
            $ref: >-
              #/components/schemas/SapDiscoveryResourceInstancePropertiesDiskMount
        osKernelVersion:
          description: Optional. The kernel version of the instance.
          $ref: >-
            #/components/schemas/SapDiscoveryResourceInstancePropertiesKernelVersion
    SapDiscoveryResourceInstancePropertiesAppInstance:
      id: SapDiscoveryResourceInstancePropertiesAppInstance
      description: Fields to describe an SAP application server instance.
      type: object
      properties:
        name:
          description: Optional. Instance name of the SAP application instance.
          type: string
        number:
          description: Optional. Instance number of the SAP application instance.
          type: string
    SapDiscoveryResourceInstancePropertiesDiskMount:
      id: SapDiscoveryResourceInstancePropertiesDiskMount
      description: Disk mount on the instance.
      type: object
      properties:
        name:
          description: Optional. Name of the disk.
          type: string
        mountPoint:
          description: Optional. Filesystem mount point.
          type: string
        diskNames:
          description: Optional. Names of the disks providing this mount point.
          type: array
          items:
            type: string
    SapDiscoveryResourceInstancePropertiesKernelVersion:
      id: SapDiscoveryResourceInstancePropertiesKernelVersion
      description: KernelVersion encapsulates the kernel version data for the system.
      type: object
      properties:
        rawString:
          description: Optional. Raw string of the kernel version.
          type: string
        osKernel:
          description: >-
            Optional. Captures the OS-specific kernel version, the portion of
            the string up to the first dash.
          $ref: >-
            #/components/schemas/SapDiscoveryResourceInstancePropertiesKernelVersionVersion
        distroKernel:
          description: >-
            Optional. Captures the distro-specific kernel version, the portion
            of the string following the first dash.
          $ref: >-
            #/components/schemas/SapDiscoveryResourceInstancePropertiesKernelVersionVersion
    SapDiscoveryResourceInstancePropertiesKernelVersionVersion:
      id: SapDiscoveryResourceInstancePropertiesKernelVersionVersion
      description: Version is reported as Major.Minor.Build.Patch.
      type: object
      properties:
        major:
          description: Optional. The major version number.
          type: integer
          format: int32
        minor:
          description: Optional. The minor version number.
          type: integer
          format: int32
        build:
          description: Optional. The build version number.
          type: integer
          format: int32
        patch:
          description: Optional. The patch version number.
          type: integer
          format: int32
        remainder:
          description: >-
            Optional. A catch-all for any unparsed version components. This is
            in case the number of points in the version string exceeds the
            expected count of 4.
          type: string
    SapDiscoveryComponentApplicationProperties:
      id: SapDiscoveryComponentApplicationProperties
      description: A set of properties describing an SAP Application layer.
      type: object
      properties:
        applicationType:
          description: Required. Type of the application. Netweaver, etc.
          type: string
          enumDescriptions:
            - Unspecified application type
            - SAP Netweaver
            - SAP Netweaver ABAP
            - SAP Netweaver Java
          enum:
            - APPLICATION_TYPE_UNSPECIFIED
            - NETWEAVER
            - NETWEAVER_ABAP
            - NETWEAVER_JAVA
        ascsUri:
          description: >-
            Optional. Resource URI of the recognized ASCS host of the
            application.
          type: string
        nfsUri:
          description: >-
            Optional. Resource URI of the recognized shared NFS of the
            application. May be empty if the application server has only a
            single node.
          type: string
        kernelVersion:
          description: Optional. Kernel version for Netweaver running in the system.
          type: string
        abap:
          description: >-
            Optional. Deprecated: ApplicationType now tells you whether this is
            ABAP or Java.
          deprecated: true
          type: boolean
        appInstanceNumber:
          description: Optional. Instance number of the SAP application instance.
          type: string
        ascsInstanceNumber:
          description: Optional. Instance number of the ASCS instance.
          type: string
        ersInstanceNumber:
          description: Optional. Instance number of the ERS instance.
          type: string
    SapDiscoveryComponentDatabaseProperties:
      id: SapDiscoveryComponentDatabaseProperties
      description: A set of properties describing an SAP Database layer.
      type: object
      properties:
        databaseType:
          description: Required. Type of the database. HANA, DB2, etc.
          type: string
          enumDescriptions:
            - Unspecified database type.
            - SAP HANA
            - SAP MAX_DB
            - IBM DB2
            - Oracle Database
            - Microsoft SQL Server
            - SAP Sybase ASE
          enum:
            - DATABASE_TYPE_UNSPECIFIED
            - HANA
            - MAX_DB
            - DB2
            - ORACLE
            - SQLSERVER
            - ASE
        primaryInstanceUri:
          description: Required. URI of the recognized primary instance of the database.
          type: string
        sharedNfsUri:
          description: >-
            Optional. URI of the recognized shared NFS of the database. May be
            empty if the database has only a single node.
          type: string
        databaseVersion:
          description: >-
            Optional. The version of the database software running in the
            system.
          type: string
        instanceNumber:
          description: Optional. Instance number of the SAP instance.
          type: string
        databaseSid:
          description: Optional. SID of the system database.
          type: string
        landscapeId:
          description: Optional. Landscape ID from the HANA nameserver.
          type: string
    SapDiscoveryComponentReplicationSite:
      id: SapDiscoveryComponentReplicationSite
      description: A replication site used in Disaster Recovery (DR) configurations.
      type: object
      properties:
        sourceSite:
          description: >-
            Optional. The name of the source site from which this one
            replicates.
          type: string
        component:
          description: Optional. The system component for the site.
          $ref: '#/components/schemas/SapDiscoveryComponent'
    SapDiscoveryWorkloadProperties:
      id: SapDiscoveryWorkloadProperties
      description: A set of properties describing an SAP workload.
      type: object
      properties:
        productVersions:
          description: >-
            Optional. List of SAP Products and their versions running on the
            system.
          type: array
          items:
            $ref: '#/components/schemas/SapDiscoveryWorkloadPropertiesProductVersion'
        softwareComponentVersions:
          description: >-
            Optional. A list of SAP software components and their versions
            running on the system.
          type: array
          items:
            $ref: >-
              #/components/schemas/SapDiscoveryWorkloadPropertiesSoftwareComponentProperties
    SapDiscoveryWorkloadPropertiesProductVersion:
      id: SapDiscoveryWorkloadPropertiesProductVersion
      description: A product name and version.
      type: object
      properties:
        name:
          description: Optional. Name of the product.
          type: string
        version:
          description: Optional. Version of the product.
          type: string
    SapDiscoveryWorkloadPropertiesSoftwareComponentProperties:
      id: SapDiscoveryWorkloadPropertiesSoftwareComponentProperties
      description: A SAP software component name, version, and type.
      type: object
      properties:
        name:
          description: Optional. Name of the component.
          type: string
        version:
          description: Optional. The component's major version.
          type: string
        extVersion:
          description: Optional. The component's minor version.
          type: string
        type:
          description: Optional. The component's type.
          type: string
    SqlserverValidation:
      id: SqlserverValidation
      description: >-
        A presentation of SQLServer workload insight. The schema of SqlServer
        workloads validation related data.
      type: object
      properties:
        agentVersion:
          description: Optional. The agent version collected this data point
          type: string
        validationDetails:
          description: Optional. A list of SqlServer validation metrics data.
          type: array
          items:
            $ref: '#/components/schemas/SqlserverValidationValidationDetail'
        projectId:
          description: >-
            Required. The project_id of the cloud project that the Insight data
            comes from.
          type: string
        instance:
          description: >-
            Required. The instance_name of the instance that the Insight data
            comes from. According to https://linter.aip.dev/122/name-suffix:
            field names should not use the _name suffix unless the field would
            be ambiguous without it.
          type: string
    SqlserverValidationValidationDetail:
      id: SqlserverValidationValidationDetail
      description: Message describing the Sqlserver validation metrics.
      type: object
      properties:
        type:
          description: Optional. The Sqlserver system that the validation data is from.
          type: string
          enumDescriptions:
            - Unspecified type.
            - The Sqlserver system named OS.
            - The LOG_DISK_SEPARATION table.
            - The MAX_PARALLELISM table.
            - The CXPACKET_WAITS table.
            - The TRANSACTION_LOG_HANDLING table.
            - The VIRTUAL_LOG_FILE_COUNT table.
            - The BUFFER_POOL_EXTENSION table.
            - The MAX_SERVER_MEMORY table.
            - The INSTANCE_METRICS table.
            - The DB_INDEX_FRAGMENTATION table.
            - The DB_TABLE_INDEX_COMPRESSION table.
            - The DB_BACKUP_POLICY table.
          enum:
            - SQLSERVER_VALIDATION_TYPE_UNSPECIFIED
            - OS
            - DB_LOG_DISK_SEPARATION
            - DB_MAX_PARALLELISM
            - DB_CXPACKET_WAITS
            - DB_TRANSACTION_LOG_HANDLING
            - DB_VIRTUAL_LOG_FILE_COUNT
            - DB_BUFFER_POOL_EXTENSION
            - DB_MAX_SERVER_MEMORY
            - INSTANCE_METRICS
            - DB_INDEX_FRAGMENTATION
            - DB_TABLE_INDEX_COMPRESSION
            - DB_BACKUP_POLICY
        details:
          description: >-
            Required. Details wraps map that represents collected data names and
            values.
          type: array
          items:
            $ref: '#/components/schemas/SqlserverValidationDetails'
    SqlserverValidationDetails:
      id: SqlserverValidationDetails
      description: Message containing collected data names and values.
      type: object
      properties:
        fields:
          description: Required. Collected data is in format.
          type: object
          additionalProperties:
            type: string
    TorsoValidation:
      id: TorsoValidation
      description: The schema of torso workload validation data.
      type: object
      properties:
        workloadType:
          description: Required. workload_type specifies the type of torso workload.
          type: string
          enumDescriptions:
            - Unspecified workload type.
            - MySQL workload.
            - Oracle workload.
            - Redis workload.
          enum:
            - WORKLOAD_TYPE_UNSPECIFIED
            - MYSQL
            - ORACLE
            - REDIS
        validationDetails:
          description: >-
            Required. validation_details contains the pairs of validation data:
            field name & field value.
          type: object
          additionalProperties:
            type: string
        agentVersion:
          description: >-
            Required. agent_version lists the version of the agent that
            collected this data.
          type: string
        projectId:
          description: >-
            Required. project_id lists the human readable cloud project that the
            data comes from.
          type: string
        instanceName:
          description: >-
            Required. instance_name lists the human readable name of the
            instance that the data comes from.
          type: string
    AgentStatus:
      id: AgentStatus
      description: The schema of agent status data.
      type: object
      properties:
        installedVersion:
          description: Output only. The installed version of the agent on the host.
          readOnly: true
          type: string
        availableVersion:
          description: >-
            Output only. The available version of the agent in artifact
            registry.
          readOnly: true
          type: string
        systemdServiceEnabled:
          description: Output only. Whether the agent service is enabled in systemd.
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified and has not been checked yet.
            - The state is successful (enabled, granted, fully functional).
            - The state is failed (disabled, denied, not fully functional).
            - >-
              There was an internal error while checking the state, state is
              unknown.
          enum:
            - UNSPECIFIED_STATE
            - SUCCESS_STATE
            - FAILURE_STATE
            - ERROR_STATE
        systemdServiceRunning:
          description: Output only. Whether the agent service is running in systemd.
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified and has not been checked yet.
            - The state is successful (enabled, granted, fully functional).
            - The state is failed (disabled, denied, not fully functional).
            - >-
              There was an internal error while checking the state, state is
              unknown.
          enum:
            - UNSPECIFIED_STATE
            - SUCCESS_STATE
            - FAILURE_STATE
            - ERROR_STATE
        configurationFilePath:
          description: Output only. The path to the agent configuration file.
          readOnly: true
          type: string
        configurationValid:
          description: Output only. Whether the agent configuration is valid.
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified and has not been checked yet.
            - The state is successful (enabled, granted, fully functional).
            - The state is failed (disabled, denied, not fully functional).
            - >-
              There was an internal error while checking the state, state is
              unknown.
          enum:
            - UNSPECIFIED_STATE
            - SUCCESS_STATE
            - FAILURE_STATE
            - ERROR_STATE
        configurationErrorMessage:
          description: >-
            Output only. The error message for the agent configuration if
            invalid.
          readOnly: true
          type: string
        services:
          description: Output only. The services (process metrics, host metrics, etc.).
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AgentStatusServiceStatus'
        references:
          description: Output only. Optional references to public documentation.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AgentStatusReference'
        agentName:
          description: Output only. The name of the agent.
          readOnly: true
          type: string
        cloudApiAccessFullScopesGranted:
          description: Output only. Whether the agent has full access to Cloud APIs.
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified and has not been checked yet.
            - The state is successful (enabled, granted, fully functional).
            - The state is failed (disabled, denied, not fully functional).
            - >-
              There was an internal error while checking the state, state is
              unknown.
          enum:
            - UNSPECIFIED_STATE
            - SUCCESS_STATE
            - FAILURE_STATE
            - ERROR_STATE
        kernelVersion:
          description: Output only. The kernel version of the system.
          readOnly: true
          $ref: >-
            #/components/schemas/SapDiscoveryResourceInstancePropertiesKernelVersion
        instanceUri:
          description: >-
            Output only. The URI of the instance. Format:
            projects//zones//instances/
          readOnly: true
          type: string
    AgentStatusServiceStatus:
      id: AgentStatusServiceStatus
      description: The status of a service (process metrics, host metrics, etc.).
      type: object
      properties:
        name:
          description: Output only. The name of the service.
          readOnly: true
          type: string
        state:
          description: >-
            Output only. The state of the service (enabled or disabled in the
            configuration).
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified and has not been checked yet.
            - The state is successful (enabled, granted, fully functional).
            - The state is failed (disabled, denied, not fully functional).
            - >-
              There was an internal error while checking the state, state is
              unknown.
          enum:
            - UNSPECIFIED_STATE
            - SUCCESS_STATE
            - FAILURE_STATE
            - ERROR_STATE
        fullyFunctional:
          description: >-
            Output only. Whether the service is fully functional (all checks
            passed).
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified and has not been checked yet.
            - The state is successful (enabled, granted, fully functional).
            - The state is failed (disabled, denied, not fully functional).
            - >-
              There was an internal error while checking the state, state is
              unknown.
          enum:
            - UNSPECIFIED_STATE
            - SUCCESS_STATE
            - FAILURE_STATE
            - ERROR_STATE
        errorMessage:
          description: >-
            Output only. The error message for the service if it is not fully
            functional.
          readOnly: true
          type: string
        iamPermissions:
          description: Output only. The permissions required for the service.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AgentStatusIAMPermission'
        configValues:
          description: Output only. The configuration values for the service.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/AgentStatusConfigValue'
        unspecifiedStateMessage:
          description: >-
            Output only. The message to display when the service state is
            unspecified.
          readOnly: true
          type: string
    AgentStatusIAMPermission:
      id: AgentStatusIAMPermission
      description: The IAM permission status.
      type: object
      properties:
        name:
          description: Output only. The name of the permission.
          readOnly: true
          type: string
        granted:
          description: Output only. Whether the permission is granted.
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified and has not been checked yet.
            - The state is successful (enabled, granted, fully functional).
            - The state is failed (disabled, denied, not fully functional).
            - >-
              There was an internal error while checking the state, state is
              unknown.
          enum:
            - UNSPECIFIED_STATE
            - SUCCESS_STATE
            - FAILURE_STATE
            - ERROR_STATE
    AgentStatusConfigValue:
      id: AgentStatusConfigValue
      description: The configuration value.
      type: object
      properties:
        name:
          description: Output only. The name of the configuration value.
          readOnly: true
          type: string
        value:
          description: Output only. The value of the configuration value.
          readOnly: true
          type: string
        isDefault:
          description: >-
            Output only. Whether the configuration value is the default value or
            overridden.
          readOnly: true
          type: boolean
    AgentStatusReference:
      id: AgentStatusReference
      description: The reference to public documentation.
      type: object
      properties:
        name:
          description: Output only. The name of the reference.
          readOnly: true
          type: string
        url:
          description: Output only. The URL of the reference.
          readOnly: true
          type: string
    WriteInsightResponse:
      id: WriteInsightResponse
      description: The response for write insights request.
      type: object
      properties: {}
    ListDiscoveredProfilesResponse:
      id: ListDiscoveredProfilesResponse
      description: List discovered profile Response returns discovered profiles from agents
      type: object
      properties:
        workloadProfiles:
          description: Output only. The list of workload profiles
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/WorkloadProfile'
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          description: >-
            Output only. A token identifying a page of results the server should
            return
          readOnly: true
          type: string
    WorkloadProfile:
      id: WorkloadProfile
      description: workload resource
      type: object
      properties:
        name:
          description: >-
            Identifier. name of resource names have the form
            'projects/{project_id}/locations/{location}/workloadProfiles/{workload_id}'
          type: string
        labels:
          description: >-
            Optional. such as name, description, version. More example can be
            found in deployment
          type: object
          additionalProperties:
            type: string
        refreshedTime:
          description: Required. time when the workload data was refreshed
          type: string
          format: google-datetime
        workloadType:
          description: Required. The type of the workload
          type: string
          enumDescriptions:
            - unspecified workload type
            - running sap workload s4/hana
          enum:
            - WORKLOAD_TYPE_UNSPECIFIED
            - S4_HANA
        sapWorkload:
          description: The sap workload content
          $ref: '#/components/schemas/SapWorkload'
    SapWorkload:
      id: SapWorkload
      description: The body of sap workload
      type: object
      properties:
        metadata:
          description: Output only. The metadata for SAP workload.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        database:
          description: Output only. the database componment
          readOnly: true
          $ref: '#/components/schemas/SapComponent'
        application:
          description: Output only. the acsc componment
          readOnly: true
          $ref: '#/components/schemas/SapComponent'
        products:
          description: Output only. the products on this workload.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Product'
        architecture:
          description: Output only. the architecture
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified architecture.
            - Invaliad architecture.
            - A centralized system.
            - A distributed system.
            - A distributed with HA system.
            - A standalone database system.
            - A standalone database with HA system.
          enum:
            - ARCHITECTURE_UNSPECIFIED
            - INVALID
            - CENTRALIZED
            - DISTRIBUTED
            - DISTRIBUTED_HA
            - STANDALONE_DATABASE
            - STANDALONE_DATABASE_HA
    SapComponent:
      id: SapComponent
      description: The component of sap workload
      type: object
      properties:
        sid:
          description: Output only. sid is the sap component identificator
          readOnly: true
          type: string
        resources:
          description: Output only. resources in the component
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CloudResource'
        topologyType:
          description: The detected topology of the component.
          type: string
          enumDescriptions:
            - Unspecified topology.
            - A scale-up single node system.
            - A scale-out multi-node system.
          enum:
            - TOPOLOGY_TYPE_UNSPECIFIED
            - TOPOLOGY_SCALE_UP
            - TOPOLOGY_SCALE_OUT
        haHosts:
          description: >-
            A list of host URIs that are part of the HA configuration if
            present. An empty list indicates the component is not configured for
            HA.
          type: array
          items:
            type: string
        databaseProperties:
          description: Output only. All instance properties.
          readOnly: true
          $ref: '#/components/schemas/DatabaseProperties'
    CloudResource:
      id: CloudResource
      description: The resource on GCP
      type: object
      properties:
        name:
          description: Output only. resource name
          readOnly: true
          type: string
        kind:
          description: >-
            Output only. ComputeInstance, ComputeDisk, VPC, Bare Metal server,
            etc.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified resource kind.
            - This is a compute instance.
            - This is a compute disk.
            - This is a compute address.
            - This is a filestore instance.
            - This is a compute health check.
            - This is a compute forwarding rule.
            - This is a compute backend service.
            - This is a compute subnetwork.
            - This is a compute network.
            - This is a public accessible IP Address.
            - This is a compute instance group.
          enum:
            - RESOURCE_KIND_UNSPECIFIED
            - RESOURCE_KIND_INSTANCE
            - RESOURCE_KIND_DISK
            - RESOURCE_KIND_ADDRESS
            - RESOURCE_KIND_FILESTORE
            - RESOURCE_KIND_HEALTH_CHECK
            - RESOURCE_KIND_FORWARDING_RULE
            - RESOURCE_KIND_BACKEND_SERVICE
            - RESOURCE_KIND_SUBNETWORK
            - RESOURCE_KIND_NETWORK
            - RESOURCE_KIND_PUBLIC_ADDRESS
            - RESOURCE_KIND_INSTANCE_GROUP
        instanceProperties:
          description: Output only. All instance properties.
          readOnly: true
          $ref: '#/components/schemas/InstanceProperties'
    InstanceProperties:
      id: InstanceProperties
      description: Instance Properties.
      type: object
      properties:
        status:
          description: Optional. Instance status.
          type: string
        machineType:
          description: Optional. Instance machine type.
          type: string
        instanceNumber:
          description: Optional. Instance number.
          type: string
        upcomingMaintenanceEvent:
          description: Optional. the next maintenance event on VM
          $ref: '#/components/schemas/UpcomingMaintenanceEvent'
        sapInstanceProperties:
          description: Optional. SAP Instance properties.
          $ref: '#/components/schemas/SapInstanceProperties'
        roles:
          description: Optional. Instance roles.
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified role.
              - ASCS role.
              - ERS role.
              - APP server.
              - HANA primary role.
              - HANA secondary role.
            enum:
              - INSTANCE_ROLE_UNSPECIFIED
              - INSTANCE_ROLE_ASCS
              - INSTANCE_ROLE_ERS
              - INSTANCE_ROLE_APP_SERVER
              - INSTANCE_ROLE_HANA_PRIMARY
              - INSTANCE_ROLE_HANA_SECONDARY
    UpcomingMaintenanceEvent:
      id: UpcomingMaintenanceEvent
      description: Maintenance Event
      type: object
      properties:
        startTime:
          description: Optional. Start time
          type: string
          format: google-datetime
        endTime:
          description: Optional. End time
          type: string
          format: google-datetime
        maintenanceStatus:
          description: Optional. Maintenance status
          type: string
        type:
          description: Optional. Type
          type: string
        onHostMaintenance:
          description: >-
            Optional. Instance maintenance behavior. Could be "MIGRATE" or
            "TERMINATE".
          type: string
    SapInstanceProperties:
      id: SapInstanceProperties
      description: SAP instance properties.
      type: object
      properties:
        numbers:
          description: Optional. SAP Instance numbers. They are from '00' to '99'.
          type: array
          items:
            type: string
        agentStates:
          description: Optional. Sap Instance Agent status.
          $ref: '#/components/schemas/AgentStates'
    AgentStates:
      id: AgentStates
      description: Agent status.
      type: object
      properties:
        installedVersion:
          description: Optional. The installed version of the agent on the host.
          type: string
        availableVersion:
          description: Optional. The available version of the agent in artifact registry.
          type: string
        isFullyEnabled:
          description: >-
            Optional. Whether the agent is fully enabled. If false, the agent is
            has some issues.
          type: boolean
        processMetrics:
          description: Optional. The Process metrics of the agent.
          $ref: '#/components/schemas/ServiceStates'
        systemDiscovery:
          description: Optional. The System discovery metrics of the agent.
          $ref: '#/components/schemas/ServiceStates'
        hanaMonitoring:
          description: Optional. HANA monitoring metrics of the agent.
          $ref: '#/components/schemas/ServiceStates'
    ServiceStates:
      id: ServiceStates
      description: The state of the service.
      type: object
      properties:
        state:
          description: Output only. The overall state of the service.
          readOnly: true
          type: string
          enumDescriptions:
            - The state is unspecified.
            - The state means the service has config errors.
            - The state means the service has IAM permission errors.
            - The state means the service has functionality errors.
            - The state means the service has no error.
            - The state means the service disabled.
          enum:
            - STATE_UNSPECIFIED
            - CONFIG_FAILURE
            - IAM_FAILURE
            - FUNCTIONALITY_FAILURE
            - ENABLED
            - DISABLED
        iamPermissions:
          description: Optional. Output only. The IAM permissions for the service.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IAMPermission'
    IAMPermission:
      id: IAMPermission
      description: The IAM permission status.
      type: object
      properties:
        name:
          description: Output only. The name of the permission.
          readOnly: true
          type: string
        granted:
          description: Output only. Whether the permission is granted.
          readOnly: true
          type: boolean
    DatabaseProperties:
      id: DatabaseProperties
      description: Database Properties.
      type: object
      properties:
        backupProperties:
          description: Output only. Backup properties.
          readOnly: true
          $ref: '#/components/schemas/BackupProperties'
        databaseType:
          description: Output only. Type of the database. HANA, DB2, etc.
          readOnly: true
          type: string
          enumDescriptions:
            - unspecified
            - SAP HANA
            - SAP MAX_DB
            - IBM DB2
            - Oracle Database
            - Microsoft SQL Server
            - SAP Sybase ASE
          enum:
            - DATABASE_TYPE_UNSPECIFIED
            - HANA
            - MAX_DB
            - DB2
            - ORACLE
            - SQLSERVER
            - ASE
    BackupProperties:
      id: BackupProperties
      description: Backup properties.
      type: object
      properties:
        latestBackupTime:
          description: The time when the latest backup was performed.
          type: string
          format: google-datetime
        latestBackupStatus:
          description: Output only. The state of the latest backup.
          readOnly: true
          type: string
          enumDescriptions:
            - unspecified
            - SUCCESS state
            - FAILURE state
          enum:
            - BACKUP_STATE_UNSPECIFIED
            - BACKUP_STATE_SUCCESS
            - BACKUP_STATE_FAILURE
    Product:
      id: Product
      description: Product contains the details of a product.
      type: object
      properties:
        name:
          description: Optional. Name of the product.
          type: string
        version:
          description: Optional. Version of the product.
          type: string
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: google.workloadmanager.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: google.workloadmanager.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    evaluations:
      id: google.workloadmanager.evaluations
      name: evaluations
      title: Evaluations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.evaluations
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/get'
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/evaluations/methods/delete'
    executions:
      id: google.workloadmanager.executions
      name: executions
      title: Executions
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executions
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions:run/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/get'
          - $ref: '#/components/x-stackQL-resources/executions/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/executions/methods/delete'
    results:
      id: google.workloadmanager.results
      name: results
      title: Results
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}~1results/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.executionResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/results/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    scanned_resources:
      id: google.workloadmanager.scanned_resources
      name: scanned_resources
      title: Scanned_resources
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1evaluations~1{evaluationsId}~1executions~1{executionsId}~1scannedResources/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scannedResources
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scanned_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    rules:
      id: google.workloadmanager.rules
      name: rules
      title: Rules
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1rules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rules
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rules/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    insights:
      id: google.workloadmanager.insights
      name: insights
      title: Insights
      methods:
        write_insight:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insights:writeInsight/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1insights~1{insightsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/insights/methods/delete'
    discoveredprofiles:
      id: google.workloadmanager.discoveredprofiles
      name: discoveredprofiles
      title: Discoveredprofiles
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveredprofiles/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.workloadProfiles
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/discoveredprofiles/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: workloadmanager.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: workloadmanager.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: workloadmanager.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: workloadmanager.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: workloadmanager.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: workloadmanager.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations:
    parameters: *ref_1
    get:
      description: Lists Evaluations in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEvaluationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new Evaluation in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: evaluationId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Evaluation.
      operationId: workloadmanager.projects.locations.evaluations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single Evaluation.
      operationId: workloadmanager.projects.locations.evaluations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions:
    parameters: *ref_1
    get:
      description: Lists Executions in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.executions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}:
    parameters: *ref_1
    get:
      description: Gets details of a single Execution.
      operationId: workloadmanager.projects.locations.evaluations.executions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single Execution.
      operationId: workloadmanager.projects.locations.evaluations.executions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions:run:
    parameters: *ref_1
    post:
      description: Creates a new Execution in a given project and location.
      operationId: workloadmanager.projects.locations.evaluations.executions.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunEvaluationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}/results:
    parameters: *ref_1
    get:
      description: Lists the result of a single evaluation.
      operationId: workloadmanager.projects.locations.evaluations.executions.results.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionResultsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/evaluations/{evaluationsId}/executions/{executionsId}/scannedResources:
    parameters: *ref_1
    get:
      description: List all scanned resources for a single Execution.
      operationId: >-
        workloadmanager.projects.locations.evaluations.executions.scannedResources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScannedResourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: evaluationsId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: query
          name: rule
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/rules:
    parameters: *ref_1
    get:
      description: Lists rules in a given project.
      operationId: workloadmanager.projects.locations.rules.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: customRulesBucket
          schema:
            type: string
        - in: query
          name: evaluationType
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insights:writeInsight:
    parameters: *ref_1
    post:
      description: Write the data insights to workload manager data warehouse.
      operationId: workloadmanager.projects.locations.insights.writeInsight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteInsightRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteInsightResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/insights/{insightsId}:
    parameters: *ref_1
    delete:
      description: Delete the data insights from workload manager data warehouse.
      operationId: workloadmanager.projects.locations.insights.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: insightsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveredprofiles:
    parameters: *ref_1
    get:
      description: List discovered workload profiles
      operationId: workloadmanager.projects.locations.discoveredprofiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiscoveredProfilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
