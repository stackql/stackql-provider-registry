openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Migration Center API
  description: A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
  version: v1
  x-discovery-doc-revision: '20230725'
  x-generated-date: '2023-08-10'
externalDocs:
  url: 'https://cloud.google.com/migration-center'
servers:
  - url: 'https://migrationcenter.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ReportSummaryMachineSeriesAllocation:
      type: object
      description: Represents a data point tracking the count of assets allocated for a specific Machine Series.
      id: ReportSummaryMachineSeriesAllocation
      properties:
        allocatedAssetCount:
          format: int64
          description: Count of assets allocated to this machine series.
          type: string
        machineSeries:
          $ref: '#/components/schemas/MachineSeries'
          description: 'The Machine Series (e.g. "E2", "N2")'
    ComputeEngineShapeDescriptor:
      properties:
        memoryMb:
          format: int32
          description: Memory in mebibytes.
          type: integer
        series:
          type: string
          description: Compute Engine machine series.
        storage:
          description: Compute Engine storage. Never empty.
          type: array
          items:
            $ref: '#/components/schemas/ComputeStorageDescriptor'
        logicalCoreCount:
          format: int32
          description: Number of logical cores.
          type: integer
        machineType:
          description: Compute Engine machine type.
          type: string
        physicalCoreCount:
          type: integer
          description: Number of physical cores.
          format: int32
      description: Compute Engine target shape descriptor.
      type: object
      id: ComputeEngineShapeDescriptor
    AddAssetsToGroupRequest:
      id: AddAssetsToGroupRequest
      description: A request to add assets to a group.
      type: object
      properties:
        allowExisting:
          type: boolean
          description: 'Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.'
        assets:
          $ref: '#/components/schemas/AssetList'
          description: Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
    GuestInstalledApplication:
      type: object
      properties:
        version:
          description: Installed application version.
          type: string
        installTime:
          description: The time when the application was installed.
          format: google-datetime
          type: string
        vendor:
          description: Installed application vendor.
          type: string
        path:
          description: Source path.
          type: string
        applicationName:
          description: Installed application name.
          type: string
      description: Guest installed application information.
      id: GuestInstalledApplication
    AzureVmPlatformDetails:
      id: AzureVmPlatformDetails
      properties:
        provisioningState:
          type: string
          description: Azure platform's provisioning state.
        location:
          type: string
          description: The location of the machine in the Azure format.
        machineTypeLabel:
          description: Azure platform's machine type label.
          type: string
      description: Azure VM specific details.
      type: object
    NetworkAdapterDetails:
      properties:
        macAddress:
          type: string
          description: MAC address.
        adapterType:
          description: Network adapter type (e.g. VMXNET3).
          type: string
        addresses:
          description: NetworkAddressList
          $ref: '#/components/schemas/NetworkAddressList'
      id: NetworkAdapterDetails
      type: object
      description: Details of network adapter.
    GuestInstalledApplicationList:
      properties:
        entries:
          description: Application entries.
          type: array
          items:
            $ref: '#/components/schemas/GuestInstalledApplication'
      type: object
      id: GuestInstalledApplicationList
      description: Guest installed application list.
    ReportSummaryVmwareEngineFinding:
      properties:
        allocatedAssetCount:
          description: Count of assets which are allocated
          format: int64
          type: string
        nodeAllocations:
          type: array
          description: Set of per-nodetype allocation records
          items:
            $ref: '#/components/schemas/ReportSummaryVmwareNodeAllocation'
        allocatedRegions:
          type: array
          description: Set of regions in which the assets were allocated
          items:
            type: string
      description: A set of findings that applies to assets destined for VMWare Engine.
      id: ReportSummaryVmwareEngineFinding
      type: object
    HostsEntry:
      description: Single /etc/hosts entry.
      properties:
        ip:
          type: string
          description: 'IP (raw, IPv4/6 agnostic).'
        hostNames:
          description: List of host names / aliases.
          items:
            type: string
          type: array
      id: HostsEntry
      type: object
    ListErrorFramesResponse:
      description: A response for listing error frames.
      properties:
        errorFrames:
          type: array
          description: The list of error frames.
          items:
            $ref: '#/components/schemas/ErrorFrame'
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
      type: object
      id: ListErrorFramesResponse
    ListSourcesResponse:
      type: object
      description: Response message for listing sources.
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        sources:
          description: The list of sources.
          items:
            $ref: '#/components/schemas/Source'
          type: array
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
      id: ListSourcesResponse
    Report:
      type: object
      id: Report
      description: Report represents a point-in-time rendering of the ReportConfig results.
      properties:
        summary:
          readOnly: true
          $ref: '#/components/schemas/ReportSummary'
          description: Output only. Summary view of the Report.
        type:
          type: string
          description: Report type.
          enumDescriptions:
            - Default Report type.
            - Total cost of ownership Report type.
          enum:
            - TYPE_UNSPECIFIED
            - TOTAL_COST_OF_OWNERSHIP
        description:
          type: string
          description: Free-text description.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
          enumDescriptions:
            - Default Report creation state.
            - Creating Report.
            - Successfully created Report.
            - Failed to create Report.
          description: Report creation state.
          type: string
        name:
          description: Output only. Name of resource.
          readOnly: true
          type: string
        createTime:
          type: string
          description: Output only. Creation timestamp.
          readOnly: true
          format: google-datetime
        updateTime:
          format: google-datetime
          type: string
          description: Output only. Last update timestamp.
          readOnly: true
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
    HostsEntryList:
      id: HostsEntryList
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/HostsEntry'
          description: Hosts entries.
      description: Hosts content.
      type: object
    DailyResourceUsageAggregationNetwork:
      description: Statistical aggregation of network usage.
      id: DailyResourceUsageAggregationNetwork
      type: object
      properties:
        egressBps:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: Network egress in B/s.
        ingressBps:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: Network ingress in B/s.
    VmwarePlatformDetails:
      properties:
        osid:
          type: string
          description: 'VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.'
        vcenterFolder:
          type: string
          description: Folder name in vCenter where asset resides.
        vcenterVmId:
          description: vCenter VM ID.
          type: string
        esxVersion:
          type: string
          description: ESX version.
        vcenterVersion:
          type: string
          description: vCenter version.
        vcenterUri:
          type: string
          description: vCenter URI used in collection.
      description: VMware specific details.
      type: object
      id: VmwarePlatformDetails
    ListLocationsResponse:
      id: ListLocationsResponse
      type: object
      description: The response message for Locations.ListLocations.
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
    AssetFrame:
      properties:
        performanceSamples:
          description: Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.
          items:
            $ref: '#/components/schemas/PerformanceSample'
          type: array
        machineDetails:
          description: Asset information specific for virtual machines.
          $ref: '#/components/schemas/MachineDetails'
        traceToken:
          description: Optional. Trace token is optionally provided to assist with debugging and traceability.
          type: string
        reportTime:
          type: string
          description: The time the data was reported.
          format: google-datetime
        attributes:
          additionalProperties:
            type: string
          description: Generic asset attributes.
          type: object
        labels:
          type: object
          description: Labels as key value pairs.
          additionalProperties:
            type: string
      description: Contains data reported from an inventory source on an asset.
      type: object
      id: AssetFrame
    DailyResourceUsageAggregationStats:
      properties:
        median:
          format: float
          description: Median usage value.
          type: number
        average:
          description: Average usage value.
          type: number
          format: float
        ninteyFifthPercentile:
          description: 95th percentile usage value.
          format: float
          type: number
        peak:
          type: number
          description: Peak usage value.
          format: float
      description: Statistical aggregation of samples for a single resource usage.
      type: object
      id: DailyResourceUsageAggregationStats
    FstabEntryList:
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/FstabEntry'
          description: Fstab entries.
      description: Fstab content.
      type: object
      id: FstabEntryList
    OpenFileList:
      id: OpenFileList
      type: object
      description: Open file list.
      properties:
        entries:
          description: Open file details entries.
          items:
            $ref: '#/components/schemas/OpenFileDetails'
          type: array
    FstabEntry:
      type: object
      properties:
        mntops:
          type: string
          description: Mount options associated with the filesystem.
        passno:
          description: Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.
          type: integer
          format: int32
        freq:
          description: Used by dump to determine which filesystems need to be dumped.
          type: integer
          format: int32
        file:
          description: The mount point for the filesystem.
          type: string
        spec:
          type: string
          description: The block special device or remote filesystem to be mounted.
        vfstype:
          type: string
          description: The type of the filesystem.
      id: FstabEntry
      description: Single fstab entry.
    AggregationSum:
      type: object
      description: Sum of field values.
      id: AggregationSum
      properties: {}
    ImportDataFile:
      description: A resource that represents a payload file in an import job.
      type: object
      properties:
        createTime:
          description: Output only. The timestamp when the file was created.
          type: string
          format: google-datetime
          readOnly: true
        uploadFileInfo:
          description: Information about a file that is uploaded to a storage service.
          $ref: '#/components/schemas/UploadFileInfo'
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
        format:
          enumDescriptions:
            - Default value.
            - RVTools format (XLSX).
            - RVTools format (CSV).
            - CSV format exported from AWS using the AWS collection script.
            - CSV format exported from Azure using the Azure collection script.
            - 'CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables.'
          enum:
            - IMPORT_JOB_FORMAT_UNSPECIFIED
            - IMPORT_JOB_FORMAT_RVTOOLS_XLSX
            - IMPORT_JOB_FORMAT_RVTOOLS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV
            - IMPORT_JOB_FORMAT_STRATOZONE_CSV
          description: Required. The payload format.
          type: string
        name:
          description: Output only. The name of the file.
          readOnly: true
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
          enumDescriptions:
            - Default value.
            - The data file is being created.
            - The data file completed initialization.
          description: Output only. The state of the import data file.
          readOnly: true
          type: string
      id: ImportDataFile
    ComputeEngineMigrationTarget:
      description: Compute engine migration target.
      type: object
      properties:
        shape:
          description: Description of the suggested shape for the migration target.
          $ref: '#/components/schemas/ComputeEngineShapeDescriptor'
      id: ComputeEngineMigrationTarget
    Status:
      type: object
      id: Status
      properties:
        code:
          type: integer
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          format: int32
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    MachineDetails:
      type: object
      description: Details of a machine.
      id: MachineDetails
      properties:
        network:
          $ref: '#/components/schemas/MachineNetworkDetails'
          description: Network details.
        disks:
          $ref: '#/components/schemas/MachineDiskDetails'
          description: Disk details.
        createTime:
          format: google-datetime
          description: Machine creation time.
          type: string
        powerState:
          description: Power state of the machine.
          type: string
          enumDescriptions:
            - Power state is unknown.
            - 'The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state.'
            - The machine is active.
            - The machine is being turned off.
            - The machine is off.
            - The machine is being deleted from the hosting platform.
            - The machine is deleted from the hosting platform.
          enum:
            - POWER_STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - SUSPENDING
            - SUSPENDED
            - DELETING
            - DELETED
        platform:
          $ref: '#/components/schemas/PlatformDetails'
          description: Platform specific information.
        uuid:
          type: string
          description: Machine unique identifier.
        architecture:
          description: 'Architecture details (vendor, CPU architecture).'
          $ref: '#/components/schemas/MachineArchitectureDetails'
        memoryMb:
          type: integer
          format: int32
          description: The amount of memory in the machine. Must be non-negative.
        coreCount:
          format: int32
          description: Number of CPU cores in the machine. Must be non-negative.
          type: integer
        machineName:
          type: string
          description: Machine name.
        guestOs:
          description: Guest OS information.
          $ref: '#/components/schemas/GuestOsDetails'
    MachineSeries:
      description: A Compute Engine machine series.
      id: MachineSeries
      properties:
        code:
          type: string
          description: 'Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.'
      type: object
    CpuUsageSample:
      description: CPU usage sample.
      properties:
        utilizedPercentage:
          description: 'Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.'
          type: number
          format: float
      id: CpuUsageSample
      type: object
    ReportSummaryChartDataDataPoint:
      id: ReportSummaryChartDataDataPoint
      properties:
        value:
          format: double
          description: The Y-axis value for this data point.
          type: number
        label:
          description: The X-axis label for this data point.
          type: string
      type: object
      description: Describes a single data point in the Chart.
    AggregationResult:
      id: AggregationResult
      properties:
        count:
          $ref: '#/components/schemas/AggregationResultCount'
        frequency:
          $ref: '#/components/schemas/AggregationResultFrequency'
        field:
          type: string
        histogram:
          $ref: '#/components/schemas/AggregationResultHistogram'
        sum:
          $ref: '#/components/schemas/AggregationResultSum'
      type: object
      description: Message describing a result of an aggregation.
    AssetPerformanceData:
      id: AssetPerformanceData
      properties:
        dailyResourceUsageAggregations:
          type: array
          items:
            $ref: '#/components/schemas/DailyResourceUsageAggregation'
          description: 'Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.'
      description: Performance data for an asset.
      type: object
    FrameViolationEntry:
      id: FrameViolationEntry
      type: object
      description: A resource that contains a single violation of a reported `AssetFrame` resource.
      properties:
        field:
          type: string
          description: The field of the original frame where the violation occurred.
        violation:
          type: string
          description: A message describing the violation.
    ListAssetsResponse:
      id: ListAssetsResponse
      type: object
      properties:
        assets:
          description: A list of assets.
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
      description: Response message for listing assets.
    ReportSummaryUtilizationChartData:
      description: Utilization Chart is a specific type of visualization which displays a metric classified into "Used" and "Free" buckets.
      properties:
        free:
          type: string
          format: int64
          description: Aggregate value which falls into the "Free" bucket.
        used:
          description: Aggregate value which falls into the "Used" bucket.
          format: int64
          type: string
      type: object
      id: ReportSummaryUtilizationChartData
    RegionPreferences:
      id: RegionPreferences
      description: The user preferences relating to target regions.
      properties:
        preferredRegions:
          description: 'A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.'
          items:
            type: string
          type: array
      type: object
    NetworkAdapterList:
      id: NetworkAdapterList
      properties:
        entries:
          description: Network adapter entries.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAdapterDetails'
      type: object
      description: List of network adapters.
    SoleTenantNodeType:
      type: object
      properties:
        nodeName:
          type: string
          description: 'Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes'
      description: A Sole Tenant node type.
      id: SoleTenantNodeType
    ImportRowError:
      id: ImportRowError
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
          description: The list of errors detected in the row.
        rowNumber:
          format: int32
          description: The row number where the error was detected.
          deprecated: true
          type: integer
        vmUuid:
          type: string
          description: The VM UUID.
        vmName:
          description: The name of the VM in the row.
          type: string
      type: object
      description: A resource that reports the import job errors at row level.
    DiskEntry:
      type: object
      id: DiskEntry
      description: Single disk entry.
      properties:
        diskLabel:
          type: string
          description: Disk label.
        diskLabelType:
          description: Disk label type (e.g. BIOS/GPT)
          type: string
        hwAddress:
          description: 'Disk hardware address (e.g. 0:1 for SCSI).'
          type: string
        partitions:
          description: Partition layout.
          $ref: '#/components/schemas/DiskPartitionList'
        interfaceType:
          type: string
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - IDE
            - SATA
            - SAS
            - SCSI
            - NVME
            - FC
            - ISCSI
          enumDescriptions:
            - Interface type unknown or unspecified.
            - IDE interface type.
            - SATA interface type.
            - SAS interface type.
            - SCSI interface type.
            - NVME interface type.
            - FC interface type.
            - iSCSI interface type.
          description: Disks interface type.
        vmware:
          description: VMware disk details.
          $ref: '#/components/schemas/VmwareDiskConfig'
        capacityBytes:
          description: Disk capacity.
          format: int64
          type: string
        freeBytes:
          format: int64
          description: Disk free space.
          type: string
    ReportSummarySoleTenantFinding:
      type: object
      description: A set of findings that applies to assets destined for Sole-Tenant nodes.
      properties:
        nodeAllocations:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummarySoleTenantNodeAllocation'
          description: Set of per-nodetype allocation records
        allocatedRegions:
          description: Set of regions in which the assets are allocated
          items:
            type: string
          type: array
        allocatedAssetCount:
          format: int64
          type: string
          description: Count of assets which are allocated
      id: ReportSummarySoleTenantFinding
    AggregationHistogram:
      properties:
        lowerBounds:
          items:
            format: double
            type: number
          description: Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.
          type: array
      id: AggregationHistogram
      description: Histogram of bucketed assets counts by field value.
      type: object
    ValidationReport:
      description: A resource that aggregates errors across import job files.
      type: object
      properties:
        fileValidations:
          description: List of errors found in files.
          items:
            $ref: '#/components/schemas/FileValidationReport'
          type: array
        jobErrors:
          description: List of job level errors.
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
      id: ValidationReport
    MachineArchitectureDetails:
      description: Details of the machine architecture.
      type: object
      id: MachineArchitectureDetails
      properties:
        hyperthreading:
          enum:
            - CPU_HYPER_THREADING_UNSPECIFIED
            - DISABLED
            - ENABLED
          type: string
          enumDescriptions:
            - Unspecified or unknown.
            - Hyper-threading is disabled.
            - Hyper-threading is enabled.
          description: CPU hyper-threading support.
        firmwareType:
          enum:
            - FIRMWARE_TYPE_UNSPECIFIED
            - BIOS
            - EFI
          enumDescriptions:
            - Unspecified or unknown.
            - BIOS firmware.
            - EFI firmware.
          type: string
          description: Firmware type.
        cpuArchitecture:
          type: string
          description: 'CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.'
        vendor:
          type: string
          description: Hardware vendor.
        bios:
          description: BIOS Details.
          $ref: '#/components/schemas/BiosDetails'
        cpuThreadCount:
          description: Number of CPU threads allocated to the machine.
          type: integer
          format: int32
        cpuSocketCount:
          type: integer
          format: int32
          description: Number of processor sockets allocated to the machine.
        cpuName:
          description: 'CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.'
          type: string
    ReportSummaryChartData:
      type: object
      properties:
        dataPoints:
          description: 'Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.'
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryChartDataDataPoint'
      description: Describes a collection of data points rendered as a Chart.
      id: ReportSummaryChartData
    AggregateAssetsValuesResponse:
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AggregationResult'
          description: The aggregation results.
      type: object
      id: AggregateAssetsValuesResponse
      description: A response to a request to aggregated assets values.
    ImportJob:
      properties:
        createTime:
          description: Output only. The timestamp when the import job was created.
          type: string
          readOnly: true
          format: google-datetime
        state:
          enumDescriptions:
            - Default value.
            - The import job is pending.
            - The processing of the import job is ongoing.
            - The import job processing has completed.
            - The import job failed to be processed.
            - The import job is being validated.
            - The import job contains blocking errors.
            - The validation of the job completed with no blocking errors.
          readOnly: true
          description: Output only. The state of the import job.
          type: string
          enum:
            - IMPORT_JOB_STATE_UNSPECIFIED
            - IMPORT_JOB_STATE_PENDING
            - IMPORT_JOB_STATE_RUNNING
            - IMPORT_JOB_STATE_COMPLETED
            - IMPORT_JOB_STATE_FAILED
            - IMPORT_JOB_STATE_VALIDATING
            - IMPORT_JOB_STATE_FAILED_VALIDATION
            - IMPORT_JOB_STATE_READY
        updateTime:
          readOnly: true
          description: Output only. The timestamp when the import job was last updated.
          format: google-datetime
          type: string
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
        validationReport:
          $ref: '#/components/schemas/ValidationReport'
          description: Output only. The report with the validation results of the import job.
          readOnly: true
        executionReport:
          $ref: '#/components/schemas/ExecutionReport'
          description: Output only. The report with the results of running the import job.
          readOnly: true
        assetSource:
          type: string
          description: Required. Reference to a source.
        name:
          description: Output only. The full name of the import job.
          readOnly: true
          type: string
        completeTime:
          description: Output only. The timestamp when the import job was completed.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          description: Labels as key value pairs.
          additionalProperties:
            type: string
          type: object
      description: A resource that represents the background job that imports asset frames.
      type: object
      id: ImportJob
    ComputeStorageDescriptor:
      id: ComputeStorageDescriptor
      description: Compute Engine storage option descriptor.
      properties:
        sizeGb:
          description: Disk size in GiB.
          format: int32
          type: integer
        type:
          type: string
          description: Disk type backing the storage.
          enum:
            - PERSISTENT_DISK_TYPE_UNSPECIFIED
            - PERSISTENT_DISK_TYPE_STANDARD
            - PERSISTENT_DISK_TYPE_BALANCED
            - PERSISTENT_DISK_TYPE_SSD
          enumDescriptions:
            - Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
            - Standard HDD Persistent Disk.
            - Balanced Persistent Disk.
            - SSD Persistent Disk.
      type: object
    ReportSummaryVmwareNodeAllocation:
      id: ReportSummaryVmwareNodeAllocation
      properties:
        nodeCount:
          type: string
          description: Count of this node type to be provisioned
          format: int64
        allocatedAssetCount:
          format: int64
          description: Count of assets allocated to these nodes
          type: string
        vmwareNode:
          description: 'VMWare node type, e.g. "ve1-standard-72"'
          $ref: '#/components/schemas/ReportSummaryVmwareNode'
      description: Represents assets allocated to a specific VMWare Node type.
      type: object
    DailyResourceUsageAggregationCPU:
      description: Statistical aggregation of CPU usage.
      type: object
      properties:
        utilizationPercentage:
          description: CPU utilization percentage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
      id: DailyResourceUsageAggregationCPU
    GenericPlatformDetails:
      properties:
        location:
          description: Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.
          type: string
      type: object
      id: GenericPlatformDetails
      description: Generic platform details.
    PreferenceSet:
      properties:
        updateTime:
          description: Output only. The timestamp when the preference set was last updated.
          format: google-datetime
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. Name of the preference set.
        description:
          type: string
          description: A description of the preference set.
        virtualMachinePreferences:
          $ref: '#/components/schemas/VirtualMachinePreferences'
          description: A set of preferences that applies to all virtual machines in the context.
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp when the preference set was created.
          type: string
      description: The preferences that apply to all assets in a given context.
      id: PreferenceSet
      type: object
    RunningProcessList:
      properties:
        entries:
          description: Running process entries.
          items:
            $ref: '#/components/schemas/RunningProcess'
          type: array
      type: object
      description: List of running guest OS processes.
      id: RunningProcessList
    ListGroupsResponse:
      description: A response for listing groups.
      id: ListGroupsResponse
      properties:
        groups:
          type: array
          description: The list of Group
          items:
            $ref: '#/components/schemas/Group'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
      type: object
    DiskPartition:
      description: Disk Partition details.
      type: object
      properties:
        fileSystem:
          description: Partition file system.
          type: string
        capacityBytes:
          description: Partition capacity.
          type: string
          format: int64
        freeBytes:
          description: Partition free space.
          type: string
          format: int64
        uuid:
          type: string
          description: Partition UUID.
        type:
          type: string
          description: Partition type.
        subPartitions:
          description: Sub-partitions.
          $ref: '#/components/schemas/DiskPartitionList'
        mountPoint:
          type: string
          description: Mount pount (Linux/Windows) or drive letter (Windows).
      id: DiskPartition
    MigrationInsight:
      properties:
        computeEngineTarget:
          $ref: '#/components/schemas/ComputeEngineMigrationTarget'
          readOnly: true
          description: Output only. A Google Compute Engine target.
        fit:
          $ref: '#/components/schemas/FitDescriptor'
          description: Output only. Description of how well the asset this insight is associated with fits the proposed migration.
          readOnly: true
      type: object
      id: MigrationInsight
      description: An insight about potential migrations for an asset.
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      type: object
      id: CancelOperationRequest
      properties: {}
    AggregationFrequency:
      description: Frequency distribution of all field values.
      type: object
      properties: {}
      id: AggregationFrequency
    RunImportJobRequest:
      properties:
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
      type: object
      description: A request to run an import job.
      id: RunImportJobRequest
    ImportError:
      id: ImportError
      properties:
        severity:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The severity of the error.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          type: string
        errorDetails:
          description: The error information.
          type: string
      type: object
      description: A resource that reports the errors encountered while processing an import job.
    Date:
      type: object
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: Date
      properties:
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
          type: integer
        month:
          format: int32
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          type: integer
        year:
          format: int32
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
          type: integer
    MemoryUsageSample:
      properties:
        utilizedPercentage:
          description: 'Percentage of system memory utilized. Must be in the interval [0, 100].'
          format: float
          type: number
      type: object
      description: Memory usage sample.
      id: MemoryUsageSample
    AwsEc2PlatformDetails:
      type: object
      description: AWS EC2 specific details.
      id: AwsEc2PlatformDetails
      properties:
        location:
          type: string
          description: The location of the machine in the AWS format.
        machineTypeLabel:
          type: string
          description: AWS platform's machine type label.
    PhysicalPlatformDetails:
      type: object
      id: PhysicalPlatformDetails
      properties:
        location:
          description: Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.
          type: string
      description: Platform specific details for Physical Machines.
    Source:
      id: Source
      properties:
        managed:
          type: boolean
          description: 'If `true`, the source is managed by other service(s).'
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the source was last updated.
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETING
            - INVALID
          enumDescriptions:
            - Unspecified.
            - The source is active and ready to be used.
            - In the process of being deleted.
            - Source is in an invalid state. Asset frames reported to it will be ignored.
          description: Output only. The state of the source.
          readOnly: true
          type: string
        priority:
          type: integer
          description: 'The information confidence of the source. The higher the value, the higher the confidence.'
          format: int32
        createTime:
          description: Output only. The timestamp when the source was created.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: User-friendly display name.
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. The full name of the source.
        pendingFrameCount:
          type: integer
          description: Output only. Number of frames that are still being processed.
          format: int32
          readOnly: true
        description:
          type: string
          description: Free-text description.
        type:
          enumDescriptions:
            - Unspecified
            - Manually uploaded file (e.g. CSV)
            - Guest-level info
            - Inventory-level scan
            - Third-party owned sources.
          description: Data source type.
          type: string
          enum:
            - SOURCE_TYPE_UNKNOWN
            - SOURCE_TYPE_UPLOAD
            - SOURCE_TYPE_GUEST_OS_SCAN
            - SOURCE_TYPE_INVENTORY_SCAN
            - SOURCE_TYPE_CUSTOM
        errorFrameCount:
          format: int32
          type: integer
          readOnly: true
          description: Output only. The number of frames that were reported by the source and contained errors.
      description: Source represents an object from which asset information is streamed to Migration Center.
      type: object
    Settings:
      type: object
      description: Describes the Migration Center settings related to the project.
      properties:
        preferenceSet:
          type: string
          description: The preference set used by default for a project.
        name:
          type: string
          readOnly: true
          description: Output only. The name of the resource.
      id: Settings
    RunningService:
      id: RunningService
      properties:
        cmdline:
          type: string
          description: Service command line.
        pid:
          description: Service pid.
          type: string
          format: int64
        exePath:
          description: Service binary path.
          type: string
        serviceName:
          description: Service name.
          type: string
        startMode:
          description: Service start mode (OS-agnostic).
          type: string
          enum:
            - START_MODE_UNSPECIFIED
            - BOOT
            - SYSTEM
            - AUTO
            - MANUAL
            - DISABLED
          enumDescriptions:
            - Start mode unspecified.
            - The service is a device driver started by the system loader.
            - The service is a device driver started by the IOInitSystem function.
            - 'The service is started by the operating system, at system start-up'
            - 'The service is started only manually, by a user.'
            - The service is disabled.
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - STOPPED
          enumDescriptions:
            - Service state unspecified.
            - Service is active.
            - Service is paused.
            - Service is stopped.
          description: Service state (OS-agnostic).
          type: string
      description: Guest OS running service details.
      type: object
    DailyResourceUsageAggregationMemory:
      type: object
      properties:
        utilizationPercentage:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: Memory utilization percentage.
      id: DailyResourceUsageAggregationMemory
      description: Statistical aggregation of memory usage.
    FitDescriptor:
      type: object
      id: FitDescriptor
      description: Describes the fit level of an asset for migration to a specific target.
      properties:
        fitLevel:
          description: Fit level.
          enumDescriptions:
            - Not enough information.
            - Fit.
            - No Fit.
            - Fit with effort.
          enum:
            - FIT_LEVEL_UNSPECIFIED
            - FIT
            - NO_FIT
            - REQUIRES_EFFORT
          type: string
    ReportSummary:
      description: 'Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.'
      properties:
        groupFindings:
          items:
            $ref: '#/components/schemas/ReportSummaryGroupFinding'
          type: array
          description: Findings for each Group included in this report.
        allAssetsStats:
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
          description: Aggregate statistics for all the assets across all the groups.
      type: object
      id: ReportSummary
    Empty:
      id: Empty
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    DailyResourceUsageAggregation:
      id: DailyResourceUsageAggregation
      description: Usage data aggregation for a single day.
      properties:
        disk:
          description: Disk usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationDisk'
        network:
          $ref: '#/components/schemas/DailyResourceUsageAggregationNetwork'
          description: Network usage.
        cpu:
          description: CPU usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationCPU'
        date:
          description: Aggregation date. Day boundaries are at midnight UTC.
          $ref: '#/components/schemas/Date'
        memory:
          $ref: '#/components/schemas/DailyResourceUsageAggregationMemory'
          description: Memory usage.
      type: object
    AggregationResultCount:
      id: AggregationResultCount
      type: object
      properties:
        value:
          type: string
          format: int64
      description: The result of a count aggregation.
    Money:
      properties:
        units:
          type: string
          format: int64
          description: 'The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.'
        nanos:
          format: int32
          description: 'Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.'
          type: integer
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
      description: Represents an amount of money with its currency type.
      type: object
      id: Money
    ListPreferenceSetsResponse:
      properties:
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        preferenceSets:
          items:
            $ref: '#/components/schemas/PreferenceSet'
          description: The list of PreferenceSets
          type: array
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
      description: Response message for listing preference sets.
      type: object
      id: ListPreferenceSetsResponse
    ExecutionReport:
      properties:
        totalRowsCount:
          type: integer
          format: int32
          description: Total number of rows in the import job.
        framesReported:
          format: int32
          description: Total number of asset frames reported for the import job.
          type: integer
        executionErrors:
          description: Validation errors encountered during the execution of the import job.
          $ref: '#/components/schemas/ValidationReport'
      type: object
      id: ExecutionReport
      description: A resource that reports result of the import job execution.
    GuestRuntimeDetails:
      type: object
      properties:
        lastBootTime:
          description: Last time the OS was booted.
          type: string
          format: google-datetime
        openFileList:
          description: Open files information.
          $ref: '#/components/schemas/OpenFileList'
        domain:
          type: string
          description: 'Domain, e.g. c.stratozone-development.internal.'
        network:
          $ref: '#/components/schemas/RuntimeNetworkInfo'
          description: 'Runtime network information (connections, ports).'
        installedApps:
          description: Installed applications information.
          $ref: '#/components/schemas/GuestInstalledApplicationList'
        processes:
          $ref: '#/components/schemas/RunningProcessList'
          description: Running processes.
        services:
          description: Running background services.
          $ref: '#/components/schemas/RunningServiceList'
        machineName:
          description: Machine name.
          type: string
      id: GuestRuntimeDetails
      description: Guest OS runtime information.
    ListReportsResponse:
      id: ListReportsResponse
      type: object
      description: Response message for listing Reports.
      properties:
        reports:
          type: array
          description: The list of Reports.
          items:
            $ref: '#/components/schemas/Report'
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
    PerformanceSample:
      id: PerformanceSample
      type: object
      properties:
        memory:
          description: Memory usage sample.
          $ref: '#/components/schemas/MemoryUsageSample'
        sampleTime:
          type: string
          format: google-datetime
          description: 'Time the sample was If omitted, the frame report time will be used.'
        disk:
          $ref: '#/components/schemas/DiskUsageSample'
          description: Disk usage sample.
        network:
          description: Network usage sample.
          $ref: '#/components/schemas/NetworkUsageSample'
        cpu:
          $ref: '#/components/schemas/CpuUsageSample'
          description: CPU usage sample.
      description: Performance data sample.
    UploadFileInfo:
      id: UploadFileInfo
      description: A resource that contains a URI to which a data file can be uploaded.
      type: object
      properties:
        headers:
          type: object
          readOnly: true
          description: Output only. The headers that were used to sign the URI.
          additionalProperties:
            type: string
        uriExpirationTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. Expiration time of the upload URI.
        signedUri:
          description: Output only. Upload URI for the file.
          readOnly: true
          type: string
    ListImportDataFilesResponse:
      description: Response for listing payload files of an import job.
      properties:
        nextPageToken:
          description: 'A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        importDataFiles:
          items:
            $ref: '#/components/schemas/ImportDataFile'
          description: The list of import data files.
          type: array
      type: object
      id: ListImportDataFilesResponse
    Insight:
      properties:
        migrationInsight:
          readOnly: true
          $ref: '#/components/schemas/MigrationInsight'
          description: Output only. An insight about potential migrations for an asset.
      description: An insight about an asset.
      id: Insight
      type: object
    AggregationResultHistogramBucket:
      description: 'A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.'
      properties:
        lowerBound:
          format: double
          type: number
          description: Lower bound - inclusive.
        upperBound:
          format: double
          description: Upper bound - exclusive.
          type: number
        count:
          format: int64
          description: Count of items in the bucket.
          type: string
      id: AggregationResultHistogramBucket
      type: object
    ReportConfigGroupPreferenceSetAssignment:
      description: Represents a combination of a group with a preference set.
      id: ReportConfigGroupPreferenceSetAssignment
      properties:
        group:
          type: string
          description: Required. Name of the group.
        preferenceSet:
          type: string
          description: Required. Name of the Preference Set.
      type: object
    AssetList:
      properties:
        assetIds:
          type: array
          items:
            type: string
          description: Required. A list of asset IDs
      description: Lists the asset IDs of all assets.
      id: AssetList
      type: object
    GuestConfigDetails:
      description: Guest OS config information.
      type: object
      properties:
        hosts:
          description: Hosts file (/etc/hosts).
          $ref: '#/components/schemas/HostsEntryList'
        selinuxMode:
          description: Security-Enhanced Linux (SELinux) mode.
          type: string
          enumDescriptions:
            - SELinux mode unknown or unspecified.
            - SELinux is disabled.
            - SELinux permissive mode.
            - SELinux enforcing mode.
          enum:
            - SE_LINUX_MODE_UNSPECIFIED
            - SE_LINUX_MODE_DISABLED
            - SE_LINUX_MODE_PERMISSIVE
            - SE_LINUX_MODE_ENFORCING
        nfsExports:
          description: NFS exports.
          $ref: '#/components/schemas/NfsExportList'
        fstab:
          $ref: '#/components/schemas/FstabEntryList'
          description: Mount list (Linux fstab).
        issue:
          type: string
          description: OS issue (typically /etc/issue in Linux).
      id: GuestConfigDetails
    MachineNetworkDetails:
      properties:
        adapters:
          description: List of network adapters.
          $ref: '#/components/schemas/NetworkAdapterList'
        primaryIpAddress:
          description: The primary IP address of the machine.
          type: string
        primaryMacAddress:
          description: MAC address of the machine. This property is used to uniqly identify the machine.
          type: string
        publicIpAddress:
          description: The public IP address of the machine.
          type: string
      id: MachineNetworkDetails
      description: Details of network adapters and settings.
      type: object
    ReportSummaryComputeEngineFinding:
      properties:
        allocatedRegions:
          items:
            type: string
          description: Set of regions in which the assets were allocated.
          type: array
        allocatedDiskTypes:
          items:
            enum:
              - PERSISTENT_DISK_TYPE_UNSPECIFIED
              - PERSISTENT_DISK_TYPE_STANDARD
              - PERSISTENT_DISK_TYPE_BALANCED
              - PERSISTENT_DISK_TYPE_SSD
            type: string
            enumDescriptions:
              - Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
              - Standard HDD Persistent Disk.
              - Balanced Persistent Disk.
              - SSD Persistent Disk.
          type: array
          description: Set of disk types allocated to assets.
        machineSeriesAllocations:
          items:
            $ref: '#/components/schemas/ReportSummaryMachineSeriesAllocation'
          type: array
          description: Distribution of assets based on the Machine Series.
        allocatedAssetCount:
          format: int64
          type: string
          description: Count of assets which were allocated.
      description: A set of findings that applies to assets destined for Compute Engine.
      type: object
      id: ReportSummaryComputeEngineFinding
    RemoveAssetsFromGroupRequest:
      properties:
        assets:
          description: Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.
          $ref: '#/components/schemas/AssetList'
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
        allowMissing:
          description: 'Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.'
          type: boolean
      id: RemoveAssetsFromGroupRequest
      type: object
      description: A request to remove assets from a group.
    MachineDiskDetails:
      description: Details of machine disks.
      type: object
      properties:
        disks:
          description: List of disks.
          $ref: '#/components/schemas/DiskEntryList'
        totalCapacityBytes:
          description: Disk total Capacity.
          type: string
          format: int64
        totalFreeBytes:
          format: int64
          description: Total disk free space.
          type: string
      id: MachineDiskDetails
    ReportSummarySoleTenantNodeAllocation:
      description: Represents the assets allocated to a specific Sole-Tenant node type.
      id: ReportSummarySoleTenantNodeAllocation
      properties:
        allocatedAssetCount:
          type: string
          description: Count of assets allocated to these nodes
          format: int64
        nodeCount:
          type: string
          description: Count of this node type to be provisioned
          format: int64
        node:
          description: 'Sole Tenant node type, e.g. "m3-node-128-3904"'
          $ref: '#/components/schemas/SoleTenantNodeType'
      type: object
    OpenFileDetails:
      description: Open file Information.
      properties:
        user:
          type: string
          description: Opened file user.
        filePath:
          description: Opened file file path.
          type: string
        command:
          type: string
          description: Opened file command.
        fileType:
          type: string
          description: Opened file file type.
      id: OpenFileDetails
      type: object
    ReportSummaryGroupPreferenceSetFinding:
      type: object
      id: ReportSummaryGroupPreferenceSetFinding
      properties:
        monthlyCostNetworkEgress:
          description: Network Egress monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostCompute:
          $ref: '#/components/schemas/Money'
          description: Compute monthly cost for this preference set.
        monthlyCostStorage:
          $ref: '#/components/schemas/Money'
          description: Storage monthly cost for this preference set.
        monthlyCostOther:
          description: Miscellaneous monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        machinePreferences:
          $ref: '#/components/schemas/VirtualMachinePreferences'
          description: A set of preferences that applies to all machines in the context.
        vmwareEngineFinding:
          $ref: '#/components/schemas/ReportSummaryVmwareEngineFinding'
          description: A set of findings that applies to VMWare machines in the input.
        displayName:
          description: Display Name of the Preference Set
          type: string
        description:
          description: Description for the Preference Set.
          type: string
        soleTenantFinding:
          description: A set of findings that applies to Sole-Tenant machines in the input.
          $ref: '#/components/schemas/ReportSummarySoleTenantFinding'
        computeEngineFinding:
          description: A set of findings that applies to Compute Engine machines in the input.
          $ref: '#/components/schemas/ReportSummaryComputeEngineFinding'
        monthlyCostTotal:
          description: Total monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostOsLicense:
          description: Licensing monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
      description: Summary Findings for a specific Group/PreferenceSet combination.
    AggregationCount:
      description: Object count.
      properties: {}
      id: AggregationCount
      type: object
    Asset:
      description: An asset represents a resource in your environment. Asset types include virtual machines and databases.
      id: Asset
      type: object
      properties:
        sources:
          readOnly: true
          type: array
          description: Output only. The list of sources contributing to the asset.
          items:
            type: string
        machineDetails:
          $ref: '#/components/schemas/MachineDetails'
          description: Output only. Asset information specific for virtual and physical machines.
          readOnly: true
        updateTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when the asset was last updated.
        insightList:
          description: Output only. The list of insights associated with the asset.
          readOnly: true
          $ref: '#/components/schemas/InsightList'
        assignedGroups:
          readOnly: true
          type: array
          description: Output only. The list of groups that the asset is assigned to.
          items:
            type: string
        labels:
          type: object
          description: Labels as key value pairs.
          additionalProperties:
            type: string
        performanceData:
          $ref: '#/components/schemas/AssetPerformanceData'
          description: Output only. Performance data for the asset.
          readOnly: true
        createTime:
          readOnly: true
          type: string
          format: google-datetime
          description: Output only. The timestamp when the asset was created.
        name:
          description: Output only. The full name of the asset.
          type: string
          readOnly: true
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Generic asset attributes.
    NetworkUsageSample:
      type: object
      properties:
        averageEgressBps:
          type: number
          format: float
          description: Average network egress in B/s sampled over a short window. Must be non-negative.
        averageIngressBps:
          description: Average network ingress in B/s sampled over a short window. Must be non-negative.
          type: number
          format: float
      id: NetworkUsageSample
      description: Network usage sample. Values are across all network interfaces.
    ReportSummaryHistogramChartData:
      type: object
      properties:
        buckets:
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
          items:
            $ref: '#/components/schemas/ReportSummaryHistogramChartDataBucket'
          type: array
      id: ReportSummaryHistogramChartData
      description: 'A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.'
    Operation:
      properties:
        response:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
    MachinePreferences:
      description: The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
      type: object
      properties:
        allowedMachineSeries:
          items:
            $ref: '#/components/schemas/MachineSeries'
          type: array
          description: 'Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.'
      id: MachinePreferences
    DailyResourceUsageAggregationDisk:
      description: Statistical aggregation of disk usage.
      type: object
      id: DailyResourceUsageAggregationDisk
      properties:
        iops:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: Disk I/O operations per second.
    ReportConfig:
      description: The groups and associated preference sets on which we can generate reports.
      properties:
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
        groupPreferencesetAssignments:
          items:
            $ref: '#/components/schemas/ReportConfigGroupPreferenceSetAssignment'
          type: array
          description: Required. Collection of combinations of groups and preference sets.
        updateTime:
          description: Output only. The timestamp when the resource was last updated.
          format: google-datetime
          readOnly: true
          type: string
        createTime:
          readOnly: true
          type: string
          description: Output only. The timestamp when the resource was created.
          format: google-datetime
        description:
          description: Free-text description.
          type: string
        name:
          description: Output only. Name of resource.
          readOnly: true
          type: string
      type: object
      id: ReportConfig
    ValidateImportJobRequest:
      id: ValidateImportJobRequest
      properties:
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
      type: object
      description: A request to validate an import job.
    AggregationResultHistogram:
      properties:
        buckets:
          type: array
          items:
            $ref: '#/components/schemas/AggregationResultHistogramBucket'
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
      id: AggregationResultHistogram
      type: object
      description: The result of a bucketed histogram aggregation.
    PlatformDetails:
      type: object
      id: PlatformDetails
      description: Information about the platform.
      properties:
        awsEc2Details:
          $ref: '#/components/schemas/AwsEc2PlatformDetails'
          description: AWS EC2 specific details.
        vmwareDetails:
          description: VMware specific details.
          $ref: '#/components/schemas/VmwarePlatformDetails'
        genericDetails:
          $ref: '#/components/schemas/GenericPlatformDetails'
          description: Generic platform details.
        azureVmDetails:
          description: Azure VM specific details.
          $ref: '#/components/schemas/AzureVmPlatformDetails'
        physicalDetails:
          $ref: '#/components/schemas/PhysicalPlatformDetails'
          description: Physical machines platform details.
    ReportSummaryGroupFinding:
      id: ReportSummaryGroupFinding
      properties:
        assetAggregateStats:
          description: Summary statistics for all the assets in this group.
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
        displayName:
          description: Display Name for the Group.
          type: string
        preferenceSetFindings:
          description: Findings for each of the PreferenceSets for this group.
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryGroupPreferenceSetFinding'
        description:
          type: string
          description: Description for the Group.
        overlappingAssetCount:
          type: string
          format: int64
          description: Count of the number of assets in this group which are also included in another group within the same report.
      description: Summary Findings for a specific Group.
      type: object
    NetworkAddressList:
      properties:
        entries:
          description: Network address entries.
          items:
            $ref: '#/components/schemas/NetworkAddress'
          type: array
      description: List of allocated/assigned network addresses.
      id: NetworkAddressList
      type: object
    ListImportJobsResponse:
      id: ListImportJobsResponse
      type: object
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        importJobs:
          type: array
          description: The list of import jobs.
          items:
            $ref: '#/components/schemas/ImportJob'
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
      description: A response for listing import jobs.
    OperationMetadata:
      properties:
        apiVersion:
          type: string
          readOnly: true
          description: Output only. API version used to start the operation.
        verb:
          readOnly: true
          description: Output only. Name of the verb executed by the operation.
          type: string
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        statusMessage:
          description: 'Output only. Human-readable status of the operation, if any.'
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          type: string
          format: google-datetime
          readOnly: true
        requestedCancellation:
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
          type: boolean
        createTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. The time the operation was created.
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
      type: object
    Group:
      description: 'A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.'
      id: Group
      properties:
        updateTime:
          readOnly: true
          description: Output only. The timestamp when the group was last updated.
          type: string
          format: google-datetime
        name:
          description: Output only. The name of the group.
          type: string
          readOnly: true
        description:
          description: The description of the resource.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the group was created.
        displayName:
          type: string
          description: User-friendly display name.
      type: object
    VmwareEnginePreferences:
      type: object
      description: The user preferences relating to Google Cloud VMware Engine target platform.
      properties:
        commitmentPlan:
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment (monthly payments).
            - 3 year commitment (monthly payments).
            - 1 year commitment (upfront payment).
            - 3 years commitment (upfront payment).
          type: string
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_1_YEAR_UPFRONT_PAYMENT
            - COMMITMENT_3_YEAR_UPFRONT_PAYMENT
        storageDeduplicationCompressionRatio:
          format: double
          description: 'The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.'
          type: number
        cpuOvercommitRatio:
          type: number
          format: double
          description: 'CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.'
        memoryOvercommitRatio:
          type: number
          description: 'Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.'
          format: double
      id: VmwareEnginePreferences
    DiskUsageSample:
      type: object
      id: DiskUsageSample
      description: Disk usage sample. Values are across all disks.
      properties:
        averageIops:
          description: Average IOPS sampled over a short window. Must be non-negative.
          format: float
          type: number
    RunningProcess:
      id: RunningProcess
      type: object
      properties:
        exePath:
          description: Process binary path.
          type: string
        user:
          type: string
          description: User running the process.
        attributes:
          description: Process extended attributes.
          type: object
          additionalProperties:
            type: string
        pid:
          format: int64
          type: string
          description: Process ID.
        cmdline:
          type: string
          description: Process full command line.
      description: Guest OS running process details.
    ErrorFrame:
      properties:
        ingestionTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Frame ingestion time.
        name:
          type: string
          description: Output only. The identifier of the ErrorFrame.
          readOnly: true
        originalFrame:
          description: Output only. The frame that was originally reported.
          readOnly: true
          $ref: '#/components/schemas/AssetFrame'
        violations:
          description: Output only. All the violations that were detected for the frame.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FrameViolationEntry'
      id: ErrorFrame
      description: Message representing a frame which failed to be processed due to an error.
      type: object
    UpdateAssetRequest:
      type: object
      properties:
        updateMask:
          description: 'Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.'
          format: google-fieldmask
          type: string
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
        asset:
          description: Required. The resource being updated.
          $ref: '#/components/schemas/Asset'
      id: UpdateAssetRequest
      description: A request to update an asset.
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
        labels:
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          additionalProperties:
            type: string
          type: object
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
      type: object
      id: Location
    BatchUpdateAssetsRequest:
      id: BatchUpdateAssetsRequest
      properties:
        requests:
          description: Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.
          type: array
          items:
            $ref: '#/components/schemas/UpdateAssetRequest'
      description: A request to update a list of assets.
      type: object
    NetworkConnection:
      properties:
        localPort:
          description: Local port.
          format: int32
          type: integer
        remotePort:
          type: integer
          format: int32
          description: Remote port.
        processName:
          description: Process or service name.
          type: string
        protocol:
          description: Connection protocol (e.g. TCP/UDP).
          type: string
        pid:
          format: int64
          type: string
          description: Process ID.
        localIpAddress:
          description: Local IP address.
          type: string
        state:
          type: string
          description: Network connection state.
          enum:
            - STATE_UNSPECIFIED
            - OPENING
            - OPEN
            - LISTEN
            - CLOSING
            - CLOSED
          enumDescriptions:
            - Connection state is unknown or unspecified.
            - The connection is being opened.
            - The connection is open.
            - Listening for incoming connections.
            - The connection is being closed.
            - The connection is closed.
        remoteIpAddress:
          type: string
          description: Remote IP address.
      type: object
      id: NetworkConnection
    ComputeEnginePreferences:
      type: object
      properties:
        licenseType:
          enum:
            - LICENSE_TYPE_UNSPECIFIED
            - LICENSE_TYPE_DEFAULT
            - LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
          type: string
          enumDescriptions:
            - Unspecified (default value).
            - Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.
            - Bring-your-own-license (BYOL) plan. User provides the OS license.
          description: 'License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.'
        machinePreferences:
          description: Preferences concerning the machine types to consider on Compute Engine.
          $ref: '#/components/schemas/MachinePreferences'
      description: The user preferences relating to Compute Engine target platform.
      id: ComputeEnginePreferences
    Aggregation:
      properties:
        field:
          description: The name of the field on which to aggregate.
          type: string
        sum:
          description: Sum over a numeric field.
          $ref: '#/components/schemas/AggregationSum'
        frequency:
          $ref: '#/components/schemas/AggregationFrequency'
          description: Creates a frequency distribution of all field values.
        histogram:
          $ref: '#/components/schemas/AggregationHistogram'
          description: Creates a bucketed histogram of field values.
        count:
          description: Count the number of matching objects.
          $ref: '#/components/schemas/AggregationCount'
      type: object
      description: 'Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.'
      id: Aggregation
    FileValidationReport:
      properties:
        fileName:
          type: string
          description: The name of the file.
        fileErrors:
          description: List of file level errors.
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
        partialReport:
          type: boolean
          description: Flag indicating that processing was aborted due to maximum number of errors.
        rowErrors:
          description: Partial list of rows that encountered validation error.
          items:
            $ref: '#/components/schemas/ImportRowError'
          type: array
      type: object
      description: A resource that aggregates the validation errors found in an import job file.
      id: FileValidationReport
    BiosDetails:
      description: Details about the BIOS.
      id: BiosDetails
      properties:
        smbiosUuid:
          description: SMBIOS UUID.
          type: string
        manufacturer:
          type: string
          description: BIOS manufacturer.
        biosName:
          description: BIOS name. This fields is deprecated. Please use the `id` field instead.
          type: string
          deprecated: true
        id:
          description: BIOS ID.
          type: string
        version:
          type: string
          description: BIOS version.
        releaseDate:
          $ref: '#/components/schemas/Date'
          description: BIOS release date.
      type: object
    ListReportConfigsResponse:
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        reportConfigs:
          description: A list of report configs.
          type: array
          items:
            $ref: '#/components/schemas/ReportConfig'
      type: object
      id: ListReportConfigsResponse
      description: Response message for listing report configs.
    RunningServiceList:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/RunningService'
          type: array
          description: Running service entries.
      description: List of running guest OS services.
      type: object
      id: RunningServiceList
    NfsExport:
      properties:
        exportDirectory:
          type: string
          description: The directory being exported.
        hosts:
          description: The hosts or networks to which the export is being shared.
          type: array
          items:
            type: string
      id: NfsExport
      description: NFS export.
      type: object
    AggregateAssetsValuesRequest:
      id: AggregateAssetsValuesRequest
      properties:
        filter:
          type: string
          description: The aggregation will be performed on assets that match the provided filter.
        aggregations:
          description: Array of aggregations to perform. Up to 25 aggregations can be defined.
          items:
            $ref: '#/components/schemas/Aggregation'
          type: array
      description: A request to aggregate one or more values.
      type: object
    InsightList:
      properties:
        updateTime:
          description: Output only. Update timestamp.
          format: google-datetime
          readOnly: true
          type: string
        insights:
          description: Output only. Insights of the list.
          items:
            $ref: '#/components/schemas/Insight'
          readOnly: true
          type: array
      type: object
      id: InsightList
      description: Message containing insights list.
    ListOperationsResponse:
      id: ListOperationsResponse
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Operations.ListOperations.
      type: object
    ReportAssetFramesResponse:
      properties: {}
      id: ReportAssetFramesResponse
      description: A response to a call to `ReportAssetFrame`.
      type: object
    AggregationResultFrequency:
      description: The result of a frequency distribution aggregation.
      properties:
        values:
          additionalProperties:
            format: int64
            type: string
          type: object
      type: object
      id: AggregationResultFrequency
    ReportSummaryVmwareNode:
      id: ReportSummaryVmwareNode
      description: A VMWare Engine Node
      properties:
        code:
          type: string
          description: 'Code to identify VMware Engine node series, e.g. "ve1-standard-72". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes'
      type: object
    RuntimeNetworkInfo:
      properties:
        connections:
          $ref: '#/components/schemas/NetworkConnectionList'
          description: Network connections.
        scanTime:
          type: string
          description: Time of the last network scan.
          format: google-datetime
      description: Runtime networking information.
      id: RuntimeNetworkInfo
      type: object
    AggregationResultSum:
      id: AggregationResultSum
      type: object
      description: The result of a sum aggregation.
      properties:
        value:
          format: double
          type: number
    VmwareDiskConfig:
      description: VMware disk config details.
      properties:
        rdmCompatibility:
          type: string
          enum:
            - RDM_COMPATIBILITY_UNSPECIFIED
            - PHYSICAL_COMPATIBILITY
            - VIRTUAL_COMPATIBILITY
          description: RDM compatibility mode.
          enumDescriptions:
            - Compatibility mode unspecified or unknown.
            - Physical compatibility mode.
            - Virtual compatibility mode.
        shared:
          type: boolean
          description: Is VMDK shared with other VMs.
        backingType:
          type: string
          enum:
            - BACKING_TYPE_UNSPECIFIED
            - BACKING_TYPE_FLAT_V1
            - BACKING_TYPE_FLAT_V2
            - BACKING_TYPE_PMEM
            - BACKING_TYPE_RDM_V1
            - BACKING_TYPE_RDM_V2
            - BACKING_TYPE_SESPARSE
            - BACKING_TYPE_SESPARSE_V1
            - BACKING_TYPE_SESPARSE_V2
          enumDescriptions:
            - Default value.
            - Flat v1.
            - Flat v2.
            - 'Persistent memory, also known as Non-Volatile Memory (NVM).'
            - Raw Disk Memory v1.
            - Raw Disk Memory v2.
            - SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.
            - SEsparse v1.
            - SEsparse v1.
          description: VMDK backing type.
        vmdkMode:
          enum:
            - VMDK_MODE_UNSPECIFIED
            - DEPENDENT
            - INDEPENDENT_PERSISTENT
            - INDEPENDENT_NONPERSISTENT
          description: VMDK disk mode.
          enumDescriptions:
            - VMDK disk mode unspecified or unknown.
            - Dependent disk mode.
            - Independent - Persistent disk mode.
            - Independent - Nonpersistent disk mode.
          type: string
      type: object
      id: VmwareDiskConfig
    NetworkAddress:
      properties:
        fqdn:
          type: string
          description: Fully qualified domain name.
        assignment:
          description: Whether DHCP is used to assign addresses.
          type: string
          enum:
            - ADDRESS_ASSIGNMENT_UNSPECIFIED
            - ADDRESS_ASSIGNMENT_STATIC
            - ADDRESS_ASSIGNMENT_DHCP
          enumDescriptions:
            - Unknown (default value).
            - Staticly assigned IP.
            - Dynamically assigned IP (DHCP).
        bcast:
          type: string
          description: Broadcast address.
        subnetMask:
          description: Subnet mask.
          type: string
        ipAddress:
          type: string
          description: Assigned or configured IP Address.
      type: object
      id: NetworkAddress
      description: Details of network address.
    SoleTenancyPreferences:
      id: SoleTenancyPreferences
      description: Preferences concerning Sole Tenancy nodes and VMs.
      type: object
      properties:
        nodeTypes:
          description: A list of sole tenant node types. An empty list means that all possible node types will be considered.
          type: array
          items:
            $ref: '#/components/schemas/SoleTenantNodeType'
        hostMaintenancePolicy:
          description: Sole Tenancy nodes maintenance policy.
          enum:
            - HOST_MAINTENANCE_POLICY_UNSPECIFIED
            - HOST_MAINTENANCE_POLICY_DEFAULT
            - HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
            - HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
          enumDescriptions:
            - Unspecified host maintenance policy.
            - Default host maintenance policy.
            - Restart in place host maintenance policy.
            - Migrate within node group host maintenance policy.
          type: string
        cpuOvercommitRatio:
          description: CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
          format: double
          type: number
        commitmentPlan:
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment.
            - 3 years commitment.
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR
            - COMMITMENT_3_YEAR
          type: string
    DiskPartitionList:
      type: object
      properties:
        entries:
          items:
            $ref: '#/components/schemas/DiskPartition'
          type: array
          description: Partition entries.
      description: Disk partition list.
      id: DiskPartitionList
    BatchUpdateAssetsResponse:
      id: BatchUpdateAssetsResponse
      properties:
        assets:
          items:
            $ref: '#/components/schemas/Asset'
          type: array
          description: Update asset content. The content only includes values after field mask being applied.
      type: object
      description: Response for updating a list of assets.
    ReportSummaryAssetAggregateStats:
      type: object
      description: Aggregate statistics for a collection of assets.
      properties:
        totalAssets:
          format: int64
          description: Count of the number of unique assets in this collection.
          type: string
        totalCores:
          type: string
          description: Sum of the CPU core count of all the assets in this collection.
          format: int64
        operatingSystem:
          $ref: '#/components/schemas/ReportSummaryChartData'
          description: Count of assets grouped by Operating System families.
        storageBytesHistogram:
          description: Histogram showing a distribution of memory sizes.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        memoryBytesHistogram:
          description: Histogram showing a distribution of memory sizes.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        coreCountHistogram:
          description: Histogram showing a distribution of CPU core counts.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        totalMemoryBytes:
          format: int64
          type: string
          description: Sum of the memory in bytes of all the assets in this collection.
        memoryUtilizationChart:
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
          description: Total memory split into Used/Free buckets.
        storageUtilizationChart:
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
          description: Total memory split into Used/Free buckets.
        totalStorageBytes:
          type: string
          format: int64
          description: Sum of persistent storage in bytes of all the assets in this collection.
      id: ReportSummaryAssetAggregateStats
    NfsExportList:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/NfsExport'
          description: NFS export entries.
          type: array
      id: NfsExportList
      description: NFS exports.
      type: object
    ReportSummaryHistogramChartDataBucket:
      type: object
      properties:
        count:
          format: int64
          type: string
          description: Count of items in the bucket.
        lowerBound:
          type: string
          description: Lower bound - inclusive.
          format: int64
        upperBound:
          format: int64
          type: string
          description: Upper bound - exclusive.
      description: 'A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.'
      id: ReportSummaryHistogramChartDataBucket
    GuestOsDetails:
      type: object
      description: Information from Guest-level collections.
      id: GuestOsDetails
      properties:
        config:
          description: OS and app configuration.
          $ref: '#/components/schemas/GuestConfigDetails'
        osName:
          type: string
          description: The name of the operating system.
        family:
          type: string
          description: 'What family the OS belong to, if known.'
          enum:
            - OS_FAMILY_UNKNOWN
            - OS_FAMILY_WINDOWS
            - OS_FAMILY_LINUX
            - OS_FAMILY_UNIX
          enumDescriptions:
            - ''
            - Microsoft Windows Server and Desktop.
            - Various Linux flavors.
            - Non-Linux Unix flavors.
        runtime:
          description: Runtime information.
          $ref: '#/components/schemas/GuestRuntimeDetails'
        version:
          type: string
          description: The version of the operating system.
    Frames:
      type: object
      description: Collection of frame data.
      id: Frames
      properties:
        framesData:
          type: array
          items:
            $ref: '#/components/schemas/AssetFrame'
          description: A repeated field of asset data.
    DiskEntryList:
      type: object
      properties:
        entries:
          type: array
          description: Disk entries.
          items:
            $ref: '#/components/schemas/DiskEntry'
      id: DiskEntryList
      description: VM disks.
    BatchDeleteAssetsRequest:
      properties:
        names:
          type: array
          items:
            type: string
          description: 'Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.'
        allowMissing:
          type: boolean
          description: 'Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.'
      id: BatchDeleteAssetsRequest
      description: A request to delete a list of asset.
      type: object
    NetworkConnectionList:
      type: object
      id: NetworkConnectionList
      description: Network connection list.
      properties:
        entries:
          type: array
          description: Network connection entries.
          items:
            $ref: '#/components/schemas/NetworkConnection'
    VirtualMachinePreferences:
      properties:
        targetProduct:
          enum:
            - COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
            - COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
          enumDescriptions:
            - Unspecified (default value).
            - Prefer to migrate to Google Cloud Compute Engine.
            - Prefer to migrate to Google Cloud VMware Engine.
            - Prefer to migrate to Google Cloud Sole Tenant Nodes.
          description: 'Target product for assets using this preference set. Specify either target product or business goal, but not both.'
          type: string
        computeEnginePreferences:
          description: Compute Engine preferences concern insights and recommendations for Compute Engine target.
          $ref: '#/components/schemas/ComputeEnginePreferences'
        commitmentPlan:
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan.
            - 1 year commitment.
            - 3 years commitment.
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - COMMITMENT_PLAN_NONE
            - COMMITMENT_PLAN_ONE_YEAR
            - COMMITMENT_PLAN_THREE_YEARS
          type: string
        sizingOptimizationStrategy:
          description: 'Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.'
          enum:
            - SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
            - SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
            - SIZING_OPTIMIZATION_STRATEGY_MODERATE
            - SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
          type: string
          enumDescriptions:
            - Unspecified (default value).
            - 'No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.'
            - 'Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.'
            - 'Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.'
        vmwareEnginePreferences:
          $ref: '#/components/schemas/VmwareEnginePreferences'
          description: Preferences concerning insights and recommendations for Google Cloud VMware Engine.
        soleTenancyPreferences:
          $ref: '#/components/schemas/SoleTenancyPreferences'
          description: Preferences concerning Sole Tenant nodes and virtual machines.
        regionPreferences:
          $ref: '#/components/schemas/RegionPreferences'
          description: 'Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.'
      description: 'VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.'
      type: object
      id: VirtualMachinePreferences
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  x-stackQL-resources:
    locations:
      id: google.migrationcenter.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    settings:
      id: google.migrationcenter.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
    operations:
      id: google.migrationcenter.operations
      name: operations
      title: Operations
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    assets:
      id: google.migrationcenter.assets
      name: assets
      title: Assets
      methods:
        batch_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchUpdate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        aggregate_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:aggregateValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        report_asset_frames:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:reportAssetFrames/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/delete'
    sources:
      id: google.migrationcenter.sources
      name: sources
      title: Sources
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sources
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources/methods/get'
          - $ref: '#/components/x-stackQL-resources/sources/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sources/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sources/methods/delete'
    error_frames:
      id: google.migrationcenter.error_frames
      name: error_frames
      title: Error Frames
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.errorFrames
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames~1{errorFramesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/list'
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/get'
        insert: []
        update: []
        delete: []
    preference_sets:
      id: google.migrationcenter.preference_sets
      name: preference_sets
      title: Preference Sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.preferenceSets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/list'
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/delete'
    report_configs:
      id: google.migrationcenter.report_configs
      name: report_configs
      title: Report Configs
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reportConfigs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/list'
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/delete'
    reports:
      id: google.migrationcenter.reports
      name: reports
      title: Reports
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reports
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
          - $ref: '#/components/x-stackQL-resources/reports/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/reports/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reports/methods/delete'
    import_jobs:
      id: google.migrationcenter.import_jobs
      name: import_jobs
      title: Import Jobs
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/delete'
    import_data_files:
      id: google.migrationcenter.import_data_files
      name: import_data_files
      title: Import Data Files
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importDataFiles
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/delete'
    groups_assets:
      id: google.migrationcenter.groups_assets
      name: groups_assets
      title: Groups Assets
      methods:
        remove_assets:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:removeAssets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_assets:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:addAssets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    groups:
      id: google.migrationcenter.groups
      name: groups
      title: Groups
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
    get:
      description: Gets information about a location.
      operationId: migrationcenter.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: *ref_1
    patch:
      description: Updates the regional-level project settings.
      operationId: migrationcenter.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets the details of regional settings.
      operationId: migrationcenter.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: migrationcenter.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: migrationcenter.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: migrationcenter.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: migrationcenter.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: migrationcenter.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate':
    parameters: *ref_1
    post:
      description: Updates the parameters of a list of assets.
      operationId: migrationcenter.projects.locations.assets.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateAssetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: batch_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete':
    parameters: *ref_1
    post:
      description: Deletes list of Assets.
      operationId: migrationcenter.projects.locations.assets.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteAssetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: batch_delete
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues':
    parameters: *ref_1
    post:
      description: Aggregates the requested fields based on provided function.
      operationId: migrationcenter.projects.locations.assets.aggregateValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateAssetsValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateAssetsValuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: aggregate_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets':
    parameters: *ref_1
    get:
      description: Lists all the assets in a given project and location.
      operationId: migrationcenter.projects.locations.assets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.assets
  '/v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}':
    parameters: *ref_1
    delete:
      description: Deletes an asset.
      operationId: migrationcenter.projects.locations.assets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of an asset.
      operationId: migrationcenter.projects.locations.assets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates the parameters of an asset.
      operationId: migrationcenter.projects.locations.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames':
    parameters: *ref_1
    post:
      description: Reports a set of frames.
      operationId: migrationcenter.projects.locations.assets.reportAssetFrames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frames'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportAssetFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: report_asset_frames
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a source.
      operationId: migrationcenter.projects.locations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets the details of a source.
      operationId: migrationcenter.projects.locations.sources.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a source.
      operationId: migrationcenter.projects.locations.sources.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/sources':
    parameters: *ref_1
    get:
      description: Lists all the sources in a given project and location.
      operationId: migrationcenter.projects.locations.sources.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sources
    post:
      description: Creates a new source in a given project and location.
      operationId: migrationcenter.projects.locations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sourceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames':
    parameters: *ref_1
    get:
      description: Lists all error frames in a given source and location.
      operationId: migrationcenter.projects.locations.sources.errorFrames.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListErrorFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: error_frames
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.errorFrames
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}':
    parameters: *ref_1
    get:
      description: Gets the details of an error frame.
      operationId: migrationcenter.projects.locations.sources.errorFrames.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorFrame'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: errorFramesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: error_frames
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/preferenceSets':
    parameters: *ref_1
    get:
      description: Lists all the preference sets in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPreferenceSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.preferenceSets
    post:
      description: Creates a new preference set in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: preferenceSetId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}':
    parameters: *ref_1
    get:
      description: Gets the details of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferenceSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs':
    parameters: *ref_1
    post:
      description: Creates a report configuration.
      operationId: migrationcenter.projects.locations.reportConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: reportConfigId
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists ReportConfigs in a given project and location.
      operationId: migrationcenter.projects.locations.reportConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: report_configs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.reportConfigs
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}':
    parameters: *ref_1
    delete:
      description: Deletes a ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports':
    parameters: *ref_1
    post:
      description: Creates a report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: reportId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists Reports in a given ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.reports
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}':
    parameters: *ref_1
    delete:
      description: Deletes an import job.
      operationId: migrationcenter.projects.locations.importJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of an import job.
      operationId: migrationcenter.projects.locations.importJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: get
      x-stackQL-verb: exec
    patch:
      description: Updates an import job.
      operationId: migrationcenter.projects.locations.importJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs':
    parameters: *ref_1
    get:
      description: Lists all import jobs.
      operationId: migrationcenter.projects.locations.importJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.importJobs
    post:
      description: Creates an import job.
      operationId: migrationcenter.projects.locations.importJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: importJobId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate':
    parameters: *ref_1
    post:
      description: Validates an import job.
      operationId: migrationcenter.projects.locations.importJobs.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateImportJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: validate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run':
    parameters: *ref_1
    post:
      description: Runs an import job.
      operationId: migrationcenter.projects.locations.importJobs.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunImportJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: run
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}':
    parameters: *ref_1
    get:
      description: Gets an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportDataFile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Delete an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles':
    parameters: *ref_1
    post:
      description: Creates an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDataFile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: importDataFileId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: List import data files.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportDataFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.importDataFiles
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets':
    parameters: *ref_1
    post:
      description: Removes assets from a group.
      operationId: migrationcenter.projects.locations.groups.removeAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAssetsFromGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_assets
      x-stackQL-method: remove_assets
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups':
    parameters: *ref_1
    post:
      description: Creates a new group in a given project and location.
      operationId: migrationcenter.projects.locations.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all groups in a given project and location.
      operationId: migrationcenter.projects.locations.groups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.groups
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a group.
      operationId: migrationcenter.projects.locations.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a group.
      operationId: migrationcenter.projects.locations.groups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a group.
      operationId: migrationcenter.projects.locations.groups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: get
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets':
    parameters: *ref_1
    post:
      description: Adds assets to a group.
      operationId: migrationcenter.projects.locations.groups.addAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAssetsToGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_assets
      x-stackQL-method: add_assets
      x-stackQL-verb: exec
