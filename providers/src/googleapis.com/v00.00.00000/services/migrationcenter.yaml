openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Migration Center API
  description: A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
  version: v1
  x-discovery-doc-revision: '20230811'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/migration-center'
servers:
  - url: 'https://migrationcenter.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    ComputeEngineShapeDescriptor:
      properties:
        memoryMb:
          description: Memory in mebibytes.
          type: integer
          format: int32
        series:
          description: Compute Engine machine series.
          type: string
        physicalCoreCount:
          format: int32
          description: Number of physical cores.
          type: integer
        logicalCoreCount:
          format: int32
          description: Number of logical cores.
          type: integer
        storage:
          description: Compute Engine storage. Never empty.
          type: array
          items:
            $ref: '#/components/schemas/ComputeStorageDescriptor'
        machineType:
          type: string
          description: Compute Engine machine type.
      description: Compute Engine target shape descriptor.
      id: ComputeEngineShapeDescriptor
      type: object
    DiskPartition:
      properties:
        fileSystem:
          type: string
          description: Partition file system.
        mountPoint:
          description: Mount pount (Linux/Windows) or drive letter (Windows).
          type: string
        type:
          description: Partition type.
          type: string
        freeBytes:
          type: string
          format: int64
          description: Partition free space.
        capacityBytes:
          format: int64
          type: string
          description: Partition capacity.
        subPartitions:
          $ref: '#/components/schemas/DiskPartitionList'
          description: Sub-partitions.
        uuid:
          description: Partition UUID.
          type: string
      id: DiskPartition
      description: Disk Partition details.
      type: object
    ReportSummarySoleTenantFinding:
      properties:
        nodeAllocations:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummarySoleTenantNodeAllocation'
          description: Set of per-nodetype allocation records
        allocatedRegions:
          description: Set of regions in which the assets are allocated
          items:
            type: string
          type: array
        allocatedAssetCount:
          format: int64
          description: Count of assets which are allocated
          type: string
      type: object
      id: ReportSummarySoleTenantFinding
      description: A set of findings that applies to assets destined for Sole-Tenant nodes.
    Location:
      type: object
      description: A resource that represents a Google Cloud location.
      id: Location
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        displayName:
          type: string
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
        metadata:
          type: object
          description: Service-specific metadata. For example the available capacity at the given location.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
    ErrorFrame:
      type: object
      id: ErrorFrame
      properties:
        name:
          description: Output only. The identifier of the ErrorFrame.
          type: string
          readOnly: true
        violations:
          description: Output only. All the violations that were detected for the frame.
          readOnly: true
          items:
            $ref: '#/components/schemas/FrameViolationEntry'
          type: array
        originalFrame:
          $ref: '#/components/schemas/AssetFrame'
          description: Output only. The frame that was originally reported.
          readOnly: true
        ingestionTime:
          description: Output only. Frame ingestion time.
          type: string
          format: google-datetime
          readOnly: true
      description: Message representing a frame which failed to be processed due to an error.
    DiskUsageSample:
      description: Disk usage sample. Values are across all disks.
      id: DiskUsageSample
      type: object
      properties:
        averageIops:
          type: number
          format: float
          description: Average IOPS sampled over a short window. Must be non-negative.
    Report:
      description: Report represents a point-in-time rendering of the ReportConfig results.
      id: Report
      type: object
      properties:
        summary:
          readOnly: true
          description: Output only. Summary view of the Report.
          $ref: '#/components/schemas/ReportSummary'
        name:
          type: string
          description: Output only. Name of resource.
          readOnly: true
        description:
          type: string
          description: Free-text description.
        type:
          enum:
            - TYPE_UNSPECIFIED
            - TOTAL_COST_OF_OWNERSHIP
          type: string
          description: Report type.
          enumDescriptions:
            - Default Report type.
            - Total cost of ownership Report type.
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
          description: Report creation state.
          enumDescriptions:
            - Default Report creation state.
            - Creating Report.
            - Successfully created Report.
            - Failed to create Report.
          type: string
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        createTime:
          format: google-datetime
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
        updateTime:
          type: string
          format: google-datetime
          description: Output only. Last update timestamp.
          readOnly: true
    AggregationFrequency:
      description: Frequency distribution of all field values.
      id: AggregationFrequency
      type: object
      properties: {}
    ReportSummaryGroupPreferenceSetFinding:
      description: Summary Findings for a specific Group/PreferenceSet combination.
      type: object
      properties:
        soleTenantFinding:
          description: A set of findings that applies to Sole-Tenant machines in the input.
          $ref: '#/components/schemas/ReportSummarySoleTenantFinding'
        monthlyCostCompute:
          description: Compute monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        machinePreferences:
          description: A set of preferences that applies to all machines in the context.
          $ref: '#/components/schemas/VirtualMachinePreferences'
        vmwareEngineFinding:
          $ref: '#/components/schemas/ReportSummaryVmwareEngineFinding'
          description: A set of findings that applies to VMWare machines in the input.
        monthlyCostOther:
          $ref: '#/components/schemas/Money'
          description: Miscellaneous monthly cost for this preference set.
        displayName:
          description: Display Name of the Preference Set
          type: string
        computeEngineFinding:
          $ref: '#/components/schemas/ReportSummaryComputeEngineFinding'
          description: A set of findings that applies to Compute Engine machines in the input.
        monthlyCostTotal:
          description: Total monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostNetworkEgress:
          $ref: '#/components/schemas/Money'
          description: Network Egress monthly cost for this preference set.
        description:
          type: string
          description: Description for the Preference Set.
        monthlyCostStorage:
          description: Storage monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostOsLicense:
          description: Licensing monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
      id: ReportSummaryGroupPreferenceSetFinding
    AggregationResultSum:
      type: object
      description: The result of a sum aggregation.
      properties:
        value:
          type: number
          format: double
      id: AggregationResultSum
    ImportJob:
      description: A resource that represents the background job that imports asset frames.
      type: object
      properties:
        labels:
          additionalProperties:
            type: string
          description: Labels as key value pairs.
          type: object
        validationReport:
          readOnly: true
          $ref: '#/components/schemas/ValidationReport'
          description: Output only. The report with the validation results of the import job.
        assetSource:
          type: string
          description: Required. Reference to a source.
        state:
          enumDescriptions:
            - Default value.
            - The import job is pending.
            - The processing of the import job is ongoing.
            - The import job processing has completed.
            - The import job failed to be processed.
            - The import job is being validated.
            - The import job contains blocking errors.
            - The validation of the job completed with no blocking errors.
          enum:
            - IMPORT_JOB_STATE_UNSPECIFIED
            - IMPORT_JOB_STATE_PENDING
            - IMPORT_JOB_STATE_RUNNING
            - IMPORT_JOB_STATE_COMPLETED
            - IMPORT_JOB_STATE_FAILED
            - IMPORT_JOB_STATE_VALIDATING
            - IMPORT_JOB_STATE_FAILED_VALIDATION
            - IMPORT_JOB_STATE_READY
          readOnly: true
          description: Output only. The state of the import job.
          type: string
        executionReport:
          $ref: '#/components/schemas/ExecutionReport'
          description: Output only. The report with the results of running the import job.
          readOnly: true
        name:
          type: string
          readOnly: true
          description: Output only. The full name of the import job.
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
        completeTime:
          readOnly: true
          description: Output only. The timestamp when the import job was completed.
          format: google-datetime
          type: string
        updateTime:
          readOnly: true
          description: Output only. The timestamp when the import job was last updated.
          format: google-datetime
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the import job was created.
      id: ImportJob
    ExecutionReport:
      description: A resource that reports result of the import job execution.
      properties:
        executionErrors:
          $ref: '#/components/schemas/ValidationReport'
          description: Validation errors encountered during the execution of the import job.
        totalRowsCount:
          format: int32
          type: integer
          description: Output only. Total number of rows in the import job.
          readOnly: true
        framesReported:
          type: integer
          description: Total number of asset frames reported for the import job.
          format: int32
      id: ExecutionReport
      type: object
    AssetPerformanceData:
      type: object
      properties:
        dailyResourceUsageAggregations:
          type: array
          description: 'Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.'
          items:
            $ref: '#/components/schemas/DailyResourceUsageAggregation'
      description: Performance data for an asset.
      id: AssetPerformanceData
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      type: object
      properties:
        operations:
          type: array
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    RunImportJobRequest:
      description: A request to run an import job.
      id: RunImportJobRequest
      type: object
      properties:
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
    BiosDetails:
      properties:
        releaseDate:
          $ref: '#/components/schemas/Date'
          description: BIOS release date.
        biosName:
          deprecated: true
          description: BIOS name. This fields is deprecated. Please use the `id` field instead.
          type: string
        version:
          type: string
          description: BIOS version.
        id:
          description: BIOS ID.
          type: string
        smbiosUuid:
          type: string
          description: SMBIOS UUID.
        manufacturer:
          description: BIOS manufacturer.
          type: string
      type: object
      id: BiosDetails
      description: Details about the BIOS.
    ListErrorFramesResponse:
      type: object
      id: ListErrorFramesResponse
      description: A response for listing error frames.
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        errorFrames:
          items:
            $ref: '#/components/schemas/ErrorFrame'
          description: The list of error frames.
          type: array
    ListLocationsResponse:
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      id: ListLocationsResponse
      type: object
      description: The response message for Locations.ListLocations.
    AggregationResultHistogramBucket:
      id: AggregationResultHistogramBucket
      properties:
        count:
          format: int64
          description: Count of items in the bucket.
          type: string
        upperBound:
          description: Upper bound - exclusive.
          type: number
          format: double
        lowerBound:
          description: Lower bound - inclusive.
          format: double
          type: number
      type: object
      description: 'A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.'
    BatchUpdateAssetsResponse:
      type: object
      id: BatchUpdateAssetsResponse
      description: Response for updating a list of assets.
      properties:
        assets:
          description: Update asset content. The content only includes values after field mask being applied.
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    ReportSummary:
      type: object
      properties:
        groupFindings:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryGroupFinding'
          description: Findings for each Group included in this report.
        allAssetsStats:
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
          description: Aggregate statistics for all the assets across all the groups.
      description: 'Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.'
      id: ReportSummary
    MemoryUsageSample:
      properties:
        utilizedPercentage:
          type: number
          format: float
          description: 'Percentage of system memory utilized. Must be in the interval [0, 100].'
      id: MemoryUsageSample
      description: Memory usage sample.
      type: object
    ListPreferenceSetsResponse:
      type: object
      id: ListPreferenceSetsResponse
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        preferenceSets:
          description: The list of PreferenceSets
          items:
            $ref: '#/components/schemas/PreferenceSet'
          type: array
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
      description: Response message for listing preference sets.
    ComputeStorageDescriptor:
      type: object
      properties:
        type:
          type: string
          enum:
            - PERSISTENT_DISK_TYPE_UNSPECIFIED
            - PERSISTENT_DISK_TYPE_STANDARD
            - PERSISTENT_DISK_TYPE_BALANCED
            - PERSISTENT_DISK_TYPE_SSD
          description: Disk type backing the storage.
          enumDescriptions:
            - Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
            - Standard HDD Persistent Disk.
            - Balanced Persistent Disk.
            - SSD Persistent Disk.
        sizeGb:
          format: int32
          type: integer
          description: Disk size in GiB.
      description: Compute Engine storage option descriptor.
      id: ComputeStorageDescriptor
    AggregationResultHistogram:
      description: The result of a bucketed histogram aggregation.
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/AggregationResultHistogramBucket'
          type: array
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
      type: object
      id: AggregationResultHistogram
    AwsEc2PlatformDetails:
      description: AWS EC2 specific details.
      id: AwsEc2PlatformDetails
      properties:
        machineTypeLabel:
          type: string
          description: AWS platform's machine type label.
        location:
          description: The location of the machine in the AWS format.
          type: string
      type: object
    VmwareDiskConfig:
      description: VMware disk config details.
      properties:
        shared:
          description: Is VMDK shared with other VMs.
          type: boolean
        rdmCompatibility:
          enumDescriptions:
            - Compatibility mode unspecified or unknown.
            - Physical compatibility mode.
            - Virtual compatibility mode.
          type: string
          enum:
            - RDM_COMPATIBILITY_UNSPECIFIED
            - PHYSICAL_COMPATIBILITY
            - VIRTUAL_COMPATIBILITY
          description: RDM compatibility mode.
        backingType:
          enumDescriptions:
            - Default value.
            - Flat v1.
            - Flat v2.
            - 'Persistent memory, also known as Non-Volatile Memory (NVM).'
            - Raw Disk Memory v1.
            - Raw Disk Memory v2.
            - SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.
            - SEsparse v1.
            - SEsparse v1.
          description: VMDK backing type.
          type: string
          enum:
            - BACKING_TYPE_UNSPECIFIED
            - BACKING_TYPE_FLAT_V1
            - BACKING_TYPE_FLAT_V2
            - BACKING_TYPE_PMEM
            - BACKING_TYPE_RDM_V1
            - BACKING_TYPE_RDM_V2
            - BACKING_TYPE_SESPARSE
            - BACKING_TYPE_SESPARSE_V1
            - BACKING_TYPE_SESPARSE_V2
        vmdkMode:
          enumDescriptions:
            - VMDK disk mode unspecified or unknown.
            - Dependent disk mode.
            - Independent - Persistent disk mode.
            - Independent - Nonpersistent disk mode.
          enum:
            - VMDK_MODE_UNSPECIFIED
            - DEPENDENT
            - INDEPENDENT_PERSISTENT
            - INDEPENDENT_NONPERSISTENT
          description: VMDK disk mode.
          type: string
      id: VmwareDiskConfig
      type: object
    FstabEntry:
      properties:
        mntops:
          description: Mount options associated with the filesystem.
          type: string
        file:
          description: The mount point for the filesystem.
          type: string
        freq:
          description: Used by dump to determine which filesystems need to be dumped.
          type: integer
          format: int32
        spec:
          description: The block special device or remote filesystem to be mounted.
          type: string
        passno:
          type: integer
          description: Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.
          format: int32
        vfstype:
          type: string
          description: The type of the filesystem.
      type: object
      description: Single fstab entry.
      id: FstabEntry
    ListSourcesResponse:
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        sources:
          items:
            $ref: '#/components/schemas/Source'
          type: array
          description: The list of sources.
      type: object
      description: Response message for listing sources.
      id: ListSourcesResponse
    NetworkConnectionList:
      type: object
      id: NetworkConnectionList
      description: Network connection list.
      properties:
        entries:
          items:
            $ref: '#/components/schemas/NetworkConnection'
          type: array
          description: Network connection entries.
    FileValidationReport:
      description: A resource that aggregates the validation errors found in an import job file.
      id: FileValidationReport
      type: object
      properties:
        partialReport:
          description: Flag indicating that processing was aborted due to maximum number of errors.
          type: boolean
        fileName:
          type: string
          description: The name of the file.
        rowErrors:
          items:
            $ref: '#/components/schemas/ImportRowError'
          type: array
          description: Partial list of rows that encountered validation error.
        fileErrors:
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
          description: List of file level errors.
    HostsEntryList:
      type: object
      description: Hosts content.
      properties:
        entries:
          items:
            $ref: '#/components/schemas/HostsEntry'
          type: array
          description: Hosts entries.
      id: HostsEntryList
    AggregateAssetsValuesRequest:
      properties:
        filter:
          type: string
          description: The aggregation will be performed on assets that match the provided filter.
        aggregations:
          description: Array of aggregations to perform. Up to 25 aggregations can be defined.
          items:
            $ref: '#/components/schemas/Aggregation'
          type: array
      type: object
      description: A request to aggregate one or more values.
      id: AggregateAssetsValuesRequest
    ReportSummaryVmwareNodeAllocation:
      id: ReportSummaryVmwareNodeAllocation
      description: Represents assets allocated to a specific VMWare Node type.
      type: object
      properties:
        vmwareNode:
          $ref: '#/components/schemas/ReportSummaryVmwareNode'
          description: 'VMWare node type, e.g. "ve1-standard-72"'
        allocatedAssetCount:
          format: int64
          type: string
          description: Count of assets allocated to these nodes
        nodeCount:
          format: int64
          description: Count of this node type to be provisioned
          type: string
    SoleTenancyPreferences:
      type: object
      properties:
        commitmentPlan:
          type: string
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR
            - COMMITMENT_3_YEAR
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment.
            - 3 years commitment.
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
        hostMaintenancePolicy:
          enumDescriptions:
            - Unspecified host maintenance policy.
            - Default host maintenance policy.
            - Restart in place host maintenance policy.
            - Migrate within node group host maintenance policy.
          enum:
            - HOST_MAINTENANCE_POLICY_UNSPECIFIED
            - HOST_MAINTENANCE_POLICY_DEFAULT
            - HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
            - HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
          type: string
          description: Sole Tenancy nodes maintenance policy.
        nodeTypes:
          description: A list of sole tenant node types. An empty list means that all possible node types will be considered.
          items:
            $ref: '#/components/schemas/SoleTenantNodeType'
          type: array
        cpuOvercommitRatio:
          format: double
          description: CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
          type: number
      id: SoleTenancyPreferences
      description: Preferences concerning Sole Tenancy nodes and VMs.
    DailyResourceUsageAggregationMemory:
      type: object
      id: DailyResourceUsageAggregationMemory
      properties:
        utilizationPercentage:
          description: Memory utilization percentage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
      description: Statistical aggregation of memory usage.
    CpuUsageSample:
      type: object
      id: CpuUsageSample
      properties:
        utilizedPercentage:
          format: float
          description: 'Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.'
          type: number
      description: CPU usage sample.
    GenericPlatformDetails:
      id: GenericPlatformDetails
      type: object
      description: Generic platform details.
      properties:
        location:
          description: Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.
          type: string
    VmwareEnginePreferences:
      properties:
        storageDeduplicationCompressionRatio:
          format: double
          type: number
          description: 'The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.'
        commitmentPlan:
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_1_YEAR_UPFRONT_PAYMENT
            - COMMITMENT_3_YEAR_UPFRONT_PAYMENT
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment (monthly payments).
            - 3 year commitment (monthly payments).
            - 1 year commitment (upfront payment).
            - 3 years commitment (upfront payment).
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          type: string
        memoryOvercommitRatio:
          description: 'Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.'
          format: double
          type: number
        cpuOvercommitRatio:
          type: number
          format: double
          description: 'CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.'
      type: object
      description: The user preferences relating to Google Cloud VMware Engine target platform.
      id: VmwareEnginePreferences
    ReportSummaryHistogramChartData:
      id: ReportSummaryHistogramChartData
      type: object
      description: 'A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.'
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/ReportSummaryHistogramChartDataBucket'
          type: array
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
    Status:
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      type: object
      properties:
        details:
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
        message:
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
          type: string
        code:
          type: integer
          format: int32
          description: 'The status code, which should be an enum value of google.rpc.Code.'
    GuestInstalledApplicationList:
      id: GuestInstalledApplicationList
      properties:
        entries:
          items:
            $ref: '#/components/schemas/GuestInstalledApplication'
          type: array
          description: Application entries.
      description: Guest installed application list.
      type: object
    MachineSeries:
      description: A Compute Engine machine series.
      id: MachineSeries
      properties:
        code:
          description: 'Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.'
          type: string
      type: object
    NetworkAddress:
      id: NetworkAddress
      description: Details of network address.
      properties:
        ipAddress:
          description: Assigned or configured IP Address.
          type: string
        assignment:
          enumDescriptions:
            - Unknown (default value).
            - Staticly assigned IP.
            - Dynamically assigned IP (DHCP).
          description: Whether DHCP is used to assign addresses.
          type: string
          enum:
            - ADDRESS_ASSIGNMENT_UNSPECIFIED
            - ADDRESS_ASSIGNMENT_STATIC
            - ADDRESS_ASSIGNMENT_DHCP
        fqdn:
          type: string
          description: Fully qualified domain name.
        subnetMask:
          description: Subnet mask.
          type: string
        bcast:
          type: string
          description: Broadcast address.
      type: object
    ValidateImportJobRequest:
      description: A request to validate an import job.
      id: ValidateImportJobRequest
      type: object
      properties:
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
    MachineDiskDetails:
      properties:
        totalCapacityBytes:
          format: int64
          description: Disk total Capacity.
          type: string
        disks:
          description: List of disks.
          $ref: '#/components/schemas/DiskEntryList'
        totalFreeBytes:
          format: int64
          description: Total disk free space.
          type: string
      id: MachineDiskDetails
      description: Details of machine disks.
      type: object
    ValidationReport:
      properties:
        jobErrors:
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
          description: List of job level errors.
        fileValidations:
          description: List of errors found in files.
          items:
            $ref: '#/components/schemas/FileValidationReport'
          type: array
      description: A resource that aggregates errors across import job files.
      type: object
      id: ValidationReport
    PlatformDetails:
      description: Information about the platform.
      type: object
      properties:
        physicalDetails:
          $ref: '#/components/schemas/PhysicalPlatformDetails'
          description: Physical machines platform details.
        awsEc2Details:
          $ref: '#/components/schemas/AwsEc2PlatformDetails'
          description: AWS EC2 specific details.
        vmwareDetails:
          $ref: '#/components/schemas/VmwarePlatformDetails'
          description: VMware specific details.
        genericDetails:
          $ref: '#/components/schemas/GenericPlatformDetails'
          description: Generic platform details.
        azureVmDetails:
          $ref: '#/components/schemas/AzureVmPlatformDetails'
          description: Azure VM specific details.
      id: PlatformDetails
    ReportSummaryChartDataDataPoint:
      type: object
      properties:
        label:
          type: string
          description: The X-axis label for this data point.
        value:
          format: double
          description: The Y-axis value for this data point.
          type: number
      description: Describes a single data point in the Chart.
      id: ReportSummaryChartDataDataPoint
    DailyResourceUsageAggregationNetwork:
      description: Statistical aggregation of network usage.
      id: DailyResourceUsageAggregationNetwork
      type: object
      properties:
        egressBps:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: Network egress in B/s.
        ingressBps:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: Network ingress in B/s.
    MigrationInsight:
      properties:
        fit:
          readOnly: true
          $ref: '#/components/schemas/FitDescriptor'
          description: Output only. Description of how well the asset this insight is associated with fits the proposed migration.
        computeEngineTarget:
          $ref: '#/components/schemas/ComputeEngineMigrationTarget'
          description: Output only. A Google Compute Engine target.
          readOnly: true
      id: MigrationInsight
      type: object
      description: An insight about potential migrations for an asset.
    RunningServiceList:
      description: List of running guest OS services.
      id: RunningServiceList
      type: object
      properties:
        entries:
          type: array
          description: Running service entries.
          items:
            $ref: '#/components/schemas/RunningService'
    ReportConfig:
      id: ReportConfig
      type: object
      properties:
        groupPreferencesetAssignments:
          description: Required. Collection of combinations of groups and preference sets.
          items:
            $ref: '#/components/schemas/ReportConfigGroupPreferenceSetAssignment'
          type: array
        name:
          type: string
          readOnly: true
          description: Output only. Name of resource.
        updateTime:
          readOnly: true
          type: string
          description: Output only. The timestamp when the resource was last updated.
          format: google-datetime
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          format: google-datetime
          type: string
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        description:
          type: string
          description: Free-text description.
      description: The groups and associated preference sets on which we can generate reports.
    UploadFileInfo:
      type: object
      description: A resource that contains a URI to which a data file can be uploaded.
      properties:
        headers:
          readOnly: true
          type: object
          description: Output only. The headers that were used to sign the URI.
          additionalProperties:
            type: string
        signedUri:
          type: string
          description: Output only. Upload URI for the file.
          readOnly: true
        uriExpirationTime:
          type: string
          description: Output only. Expiration time of the upload URI.
          format: google-datetime
          readOnly: true
      id: UploadFileInfo
    AggregationCount:
      description: Object count.
      id: AggregationCount
      type: object
      properties: {}
    ReportSummaryHistogramChartDataBucket:
      type: object
      id: ReportSummaryHistogramChartDataBucket
      properties:
        lowerBound:
          format: int64
          type: string
          description: Lower bound - inclusive.
        upperBound:
          type: string
          format: int64
          description: Upper bound - exclusive.
        count:
          description: Count of items in the bucket.
          type: string
          format: int64
      description: 'A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.'
    MachineNetworkDetails:
      type: object
      properties:
        primaryMacAddress:
          description: MAC address of the machine. This property is used to uniqly identify the machine.
          type: string
        primaryIpAddress:
          type: string
          description: The primary IP address of the machine.
        adapters:
          $ref: '#/components/schemas/NetworkAdapterList'
          description: List of network adapters.
        publicIpAddress:
          description: The public IP address of the machine.
          type: string
      description: Details of network adapters and settings.
      id: MachineNetworkDetails
    RunningProcess:
      id: RunningProcess
      type: object
      description: Guest OS running process details.
      properties:
        cmdline:
          description: Process full command line.
          type: string
        user:
          description: User running the process.
          type: string
        pid:
          format: int64
          description: Process ID.
          type: string
        exePath:
          description: Process binary path.
          type: string
        attributes:
          description: Process extended attributes.
          type: object
          additionalProperties:
            type: string
    FrameViolationEntry:
      id: FrameViolationEntry
      type: object
      properties:
        field:
          type: string
          description: The field of the original frame where the violation occurred.
        violation:
          type: string
          description: A message describing the violation.
      description: A resource that contains a single violation of a reported `AssetFrame` resource.
    Source:
      properties:
        type:
          description: Data source type.
          enumDescriptions:
            - Unspecified
            - Manually uploaded file (e.g. CSV)
            - Guest-level info
            - Inventory-level scan
            - Third-party owned sources.
          type: string
          enum:
            - SOURCE_TYPE_UNKNOWN
            - SOURCE_TYPE_UPLOAD
            - SOURCE_TYPE_GUEST_OS_SCAN
            - SOURCE_TYPE_INVENTORY_SCAN
            - SOURCE_TYPE_CUSTOM
        state:
          enumDescriptions:
            - Unspecified.
            - The source is active and ready to be used.
            - In the process of being deleted.
            - Source is in an invalid state. Asset frames reported to it will be ignored.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETING
            - INVALID
          readOnly: true
          description: Output only. The state of the source.
          type: string
        displayName:
          description: User-friendly display name.
          type: string
        name:
          readOnly: true
          type: string
          description: Output only. The full name of the source.
        description:
          type: string
          description: Free-text description.
        errorFrameCount:
          format: int32
          description: Output only. The number of frames that were reported by the source and contained errors.
          type: integer
          readOnly: true
        managed:
          description: 'If `true`, the source is managed by other service(s).'
          type: boolean
        createTime:
          readOnly: true
          type: string
          description: Output only. The timestamp when the source was created.
          format: google-datetime
        priority:
          type: integer
          format: int32
          description: 'The information confidence of the source. The higher the value, the higher the confidence.'
        pendingFrameCount:
          type: integer
          readOnly: true
          description: Output only. Number of frames that are still being processed.
          format: int32
        updateTime:
          type: string
          format: google-datetime
          description: Output only. The timestamp when the source was last updated.
          readOnly: true
      description: Source represents an object from which asset information is streamed to Migration Center.
      id: Source
      type: object
    Empty:
      type: object
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
    DailyResourceUsageAggregation:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/Date'
          description: Aggregation date. Day boundaries are at midnight UTC.
        cpu:
          description: CPU usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationCPU'
        network:
          description: Network usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationNetwork'
        disk:
          description: Disk usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationDisk'
        memory:
          $ref: '#/components/schemas/DailyResourceUsageAggregationMemory'
          description: Memory usage.
      id: DailyResourceUsageAggregation
      description: Usage data aggregation for a single day.
    GuestOsDetails:
      id: GuestOsDetails
      type: object
      description: Information from Guest-level collections.
      properties:
        version:
          type: string
          description: The version of the operating system.
        config:
          description: OS and app configuration.
          $ref: '#/components/schemas/GuestConfigDetails'
        family:
          enum:
            - OS_FAMILY_UNKNOWN
            - OS_FAMILY_WINDOWS
            - OS_FAMILY_LINUX
            - OS_FAMILY_UNIX
          type: string
          enumDescriptions:
            - ''
            - Microsoft Windows Server and Desktop.
            - Various Linux flavors.
            - Non-Linux Unix flavors.
          description: 'What family the OS belong to, if known.'
        runtime:
          description: Runtime information.
          $ref: '#/components/schemas/GuestRuntimeDetails'
        osName:
          type: string
          description: The name of the operating system.
    AggregateAssetsValuesResponse:
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AggregationResult'
          description: The aggregation results.
      id: AggregateAssetsValuesResponse
      description: A response to a request to aggregated assets values.
      type: object
    PreferenceSet:
      description: The preferences that apply to all assets in a given context.
      type: object
      id: PreferenceSet
      properties:
        description:
          description: A description of the preference set.
          type: string
        createTime:
          format: google-datetime
          description: Output only. The timestamp when the preference set was created.
          readOnly: true
          type: string
        updateTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the preference set was last updated.
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
        name:
          readOnly: true
          type: string
          description: Output only. Name of the preference set.
        virtualMachinePreferences:
          description: A set of preferences that applies to all virtual machines in the context.
          $ref: '#/components/schemas/VirtualMachinePreferences'
    ImportRowError:
      description: A resource that reports the import job errors at row level.
      type: object
      properties:
        rowNumber:
          format: int32
          description: The row number where the error was detected.
          type: integer
          deprecated: true
        vmUuid:
          description: The VM UUID.
          type: string
        vmName:
          description: The name of the VM in the row.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ImportError'
          description: The list of errors detected in the row.
      id: ImportRowError
    Frames:
      id: Frames
      properties:
        framesData:
          description: A repeated field of asset data.
          type: array
          items:
            $ref: '#/components/schemas/AssetFrame'
      type: object
      description: Collection of frame data.
    BatchUpdateAssetsRequest:
      description: A request to update a list of assets.
      type: object
      id: BatchUpdateAssetsRequest
      properties:
        requests:
          items:
            $ref: '#/components/schemas/UpdateAssetRequest'
          type: array
          description: Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.
    HostsEntry:
      properties:
        hostNames:
          description: List of host names / aliases.
          items:
            type: string
          type: array
        ip:
          type: string
          description: 'IP (raw, IPv4/6 agnostic).'
      type: object
      description: Single /etc/hosts entry.
      id: HostsEntry
    BatchDeleteAssetsRequest:
      type: object
      description: A request to delete a list of asset.
      properties:
        names:
          type: array
          items:
            type: string
          description: 'Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.'
        allowMissing:
          type: boolean
          description: 'Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.'
      id: BatchDeleteAssetsRequest
    AddAssetsToGroupRequest:
      description: A request to add assets to a group.
      id: AddAssetsToGroupRequest
      properties:
        allowExisting:
          type: boolean
          description: 'Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.'
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
        assets:
          $ref: '#/components/schemas/AssetList'
          description: Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.
      type: object
    RunningService:
      type: object
      id: RunningService
      description: Guest OS running service details.
      properties:
        serviceName:
          description: Service name.
          type: string
        cmdline:
          description: Service command line.
          type: string
        startMode:
          type: string
          enum:
            - START_MODE_UNSPECIFIED
            - BOOT
            - SYSTEM
            - AUTO
            - MANUAL
            - DISABLED
          description: Service start mode (OS-agnostic).
          enumDescriptions:
            - Start mode unspecified.
            - The service is a device driver started by the system loader.
            - The service is a device driver started by the IOInitSystem function.
            - 'The service is started by the operating system, at system start-up'
            - 'The service is started only manually, by a user.'
            - The service is disabled.
        pid:
          format: int64
          description: Service pid.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - STOPPED
          description: Service state (OS-agnostic).
          enumDescriptions:
            - Service state unspecified.
            - Service is active.
            - Service is paused.
            - Service is stopped.
          type: string
        exePath:
          type: string
          description: Service binary path.
    PhysicalPlatformDetails:
      description: Platform specific details for Physical Machines.
      id: PhysicalPlatformDetails
      properties:
        location:
          description: Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.
          type: string
      type: object
    ComputeEnginePreferences:
      id: ComputeEnginePreferences
      type: object
      properties:
        licenseType:
          type: string
          description: 'License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.'
          enum:
            - LICENSE_TYPE_UNSPECIFIED
            - LICENSE_TYPE_DEFAULT
            - LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
          enumDescriptions:
            - Unspecified (default value).
            - Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.
            - Bring-your-own-license (BYOL) plan. User provides the OS license.
        machinePreferences:
          description: Preferences concerning the machine types to consider on Compute Engine.
          $ref: '#/components/schemas/MachinePreferences'
      description: The user preferences relating to Compute Engine target platform.
    UpdateAssetRequest:
      description: A request to update an asset.
      id: UpdateAssetRequest
      properties:
        updateMask:
          format: google-fieldmask
          type: string
          description: 'Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.'
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
        asset:
          description: Required. The resource being updated.
          $ref: '#/components/schemas/Asset'
      type: object
    ListImportJobsResponse:
      description: A response for listing import jobs.
      id: ListImportJobsResponse
      type: object
      properties:
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          type: array
          description: Locations that could not be reached.
          items:
            type: string
        importJobs:
          type: array
          description: The list of import jobs.
          items:
            $ref: '#/components/schemas/ImportJob'
    ReportSummaryAssetAggregateStats:
      id: ReportSummaryAssetAggregateStats
      type: object
      properties:
        totalMemoryBytes:
          type: string
          format: int64
          description: Sum of the memory in bytes of all the assets in this collection.
        totalStorageBytes:
          description: Sum of persistent storage in bytes of all the assets in this collection.
          format: int64
          type: string
        storageUtilizationChart:
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
          description: Total memory split into Used/Free buckets.
        memoryBytesHistogram:
          description: Histogram showing a distribution of memory sizes.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        memoryUtilizationChart:
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
          description: Total memory split into Used/Free buckets.
        totalCores:
          description: Sum of the CPU core count of all the assets in this collection.
          type: string
          format: int64
        operatingSystem:
          $ref: '#/components/schemas/ReportSummaryChartData'
          description: Count of assets grouped by Operating System families.
        storageBytesHistogram:
          description: Histogram showing a distribution of memory sizes.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        totalAssets:
          format: int64
          description: Count of the number of unique assets in this collection.
          type: string
        coreCountHistogram:
          description: Histogram showing a distribution of CPU core counts.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
      description: Aggregate statistics for a collection of assets.
    ReportSummaryGroupFinding:
      properties:
        overlappingAssetCount:
          format: int64
          description: Count of the number of assets in this group which are also included in another group within the same report.
          type: string
        preferenceSetFindings:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryGroupPreferenceSetFinding'
          description: Findings for each of the PreferenceSets for this group.
        displayName:
          type: string
          description: Display Name for the Group.
        description:
          description: Description for the Group.
          type: string
        assetAggregateStats:
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
          description: Summary statistics for all the assets in this group.
      description: Summary Findings for a specific Group.
      id: ReportSummaryGroupFinding
      type: object
    OpenFileList:
      description: Open file list.
      id: OpenFileList
      properties:
        entries:
          description: Open file details entries.
          type: array
          items:
            $ref: '#/components/schemas/OpenFileDetails'
      type: object
    RunningProcessList:
      description: List of running guest OS processes.
      type: object
      id: RunningProcessList
      properties:
        entries:
          items:
            $ref: '#/components/schemas/RunningProcess'
          type: array
          description: Running process entries.
    RuntimeNetworkInfo:
      properties:
        scanTime:
          description: Time of the last network scan.
          type: string
          format: google-datetime
        connections:
          $ref: '#/components/schemas/NetworkConnectionList'
          description: Network connections.
      description: Runtime networking information.
      type: object
      id: RuntimeNetworkInfo
    AggregationSum:
      properties: {}
      description: Sum of field values.
      id: AggregationSum
      type: object
    AggregationResult:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/AggregationResultCount'
        field:
          type: string
        histogram:
          $ref: '#/components/schemas/AggregationResultHistogram'
        sum:
          $ref: '#/components/schemas/AggregationResultSum'
        frequency:
          $ref: '#/components/schemas/AggregationResultFrequency'
      description: Message describing a result of an aggregation.
      id: AggregationResult
    ReportSummarySoleTenantNodeAllocation:
      type: object
      properties:
        allocatedAssetCount:
          format: int64
          description: Count of assets allocated to these nodes
          type: string
        nodeCount:
          format: int64
          description: Count of this node type to be provisioned
          type: string
        node:
          $ref: '#/components/schemas/SoleTenantNodeType'
          description: 'Sole Tenant node type, e.g. "m3-node-128-3904"'
      id: ReportSummarySoleTenantNodeAllocation
      description: Represents the assets allocated to a specific Sole-Tenant node type.
    DailyResourceUsageAggregationDisk:
      description: Statistical aggregation of disk usage.
      properties:
        iops:
          description: Disk I/O operations per second.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
      id: DailyResourceUsageAggregationDisk
      type: object
    VmwarePlatformDetails:
      type: object
      id: VmwarePlatformDetails
      description: VMware specific details.
      properties:
        vcenterVersion:
          type: string
          description: vCenter version.
        vcenterFolder:
          description: Folder name in vCenter where asset resides.
          type: string
        esxVersion:
          description: ESX version.
          type: string
        vcenterVmId:
          description: vCenter VM ID.
          type: string
        osid:
          description: 'VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.'
          type: string
        vcenterUri:
          type: string
          description: vCenter URI used in collection.
    ListReportConfigsResponse:
      description: Response message for listing report configs.
      id: ListReportConfigsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
        reportConfigs:
          type: array
          description: A list of report configs.
          items:
            $ref: '#/components/schemas/ReportConfig'
    ReportSummaryVmwareNode:
      id: ReportSummaryVmwareNode
      type: object
      description: A VMWare Engine Node
      properties:
        code:
          type: string
          description: 'Code to identify VMware Engine node series, e.g. "ve1-standard-72". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes'
    MachinePreferences:
      id: MachinePreferences
      properties:
        allowedMachineSeries:
          items:
            $ref: '#/components/schemas/MachineSeries'
          type: array
          description: 'Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.'
      description: The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
      type: object
    InsightList:
      id: InsightList
      type: object
      properties:
        insights:
          readOnly: true
          description: Output only. Insights of the list.
          items:
            $ref: '#/components/schemas/Insight'
          type: array
        updateTime:
          description: Output only. Update timestamp.
          format: google-datetime
          readOnly: true
          type: string
      description: Message containing insights list.
    NetworkAdapterDetails:
      description: Details of network adapter.
      properties:
        addresses:
          $ref: '#/components/schemas/NetworkAddressList'
          description: NetworkAddressList
        macAddress:
          type: string
          description: MAC address.
        adapterType:
          description: Network adapter type (e.g. VMXNET3).
          type: string
      type: object
      id: NetworkAdapterDetails
    DailyResourceUsageAggregationCPU:
      id: DailyResourceUsageAggregationCPU
      properties:
        utilizationPercentage:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: CPU utilization percentage.
      type: object
      description: Statistical aggregation of CPU usage.
    ListAssetsResponse:
      properties:
        assets:
          description: A list of assets.
          items:
            $ref: '#/components/schemas/Asset'
          type: array
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
      id: ListAssetsResponse
      description: Response message for listing assets.
    ImportError:
      description: A resource that reports the errors encountered while processing an import job.
      id: ImportError
      properties:
        severity:
          description: The severity of the error.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        errorDetails:
          type: string
          description: The error information.
      type: object
    Asset:
      id: Asset
      properties:
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        assignedGroups:
          items:
            type: string
          readOnly: true
          description: Output only. The list of groups that the asset is assigned to.
          type: array
        updateTime:
          type: string
          readOnly: true
          description: Output only. The timestamp when the asset was last updated.
          format: google-datetime
        machineDetails:
          readOnly: true
          description: Output only. Asset information specific for virtual and physical machines.
          $ref: '#/components/schemas/MachineDetails'
        sources:
          readOnly: true
          description: Output only. The list of sources contributing to the asset.
          items:
            type: string
          type: array
        attributes:
          additionalProperties:
            type: string
          type: object
          description: Generic asset attributes.
        insightList:
          $ref: '#/components/schemas/InsightList'
          readOnly: true
          description: Output only. The list of insights associated with the asset.
        performanceData:
          $ref: '#/components/schemas/AssetPerformanceData'
          readOnly: true
          description: Output only. Performance data for the asset.
        name:
          type: string
          description: Output only. The full name of the asset.
          readOnly: true
        createTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp when the asset was created.
      description: An asset represents a resource in your environment. Asset types include virtual machines and databases.
      type: object
    OperationMetadata:
      type: object
      properties:
        verb:
          description: Output only. Name of the verb executed by the operation.
          type: string
          readOnly: true
        apiVersion:
          readOnly: true
          description: Output only. API version used to start the operation.
          type: string
        requestedCancellation:
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
        target:
          type: string
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        statusMessage:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
        endTime:
          type: string
          description: Output only. The time the operation finished running.
          readOnly: true
          format: google-datetime
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
    ImportDataFile:
      properties:
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
        name:
          readOnly: true
          description: Output only. The name of the file.
          type: string
        state:
          enumDescriptions:
            - Default value.
            - The data file is being created.
            - The data file completed initialization.
          description: Output only. The state of the import data file.
          readOnly: true
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
          type: string
        format:
          enum:
            - IMPORT_JOB_FORMAT_UNSPECIFIED
            - IMPORT_JOB_FORMAT_RVTOOLS_XLSX
            - IMPORT_JOB_FORMAT_RVTOOLS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV
            - IMPORT_JOB_FORMAT_STRATOZONE_CSV
          description: Required. The payload format.
          type: string
          enumDescriptions:
            - Default value.
            - RVTools format (XLSX).
            - RVTools format (CSV).
            - CSV format exported from AWS using the AWS collection script.
            - CSV format exported from Azure using the Azure collection script.
            - 'CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables.'
        uploadFileInfo:
          description: Information about a file that is uploaded to a storage service.
          $ref: '#/components/schemas/UploadFileInfo'
        createTime:
          type: string
          format: google-datetime
          readOnly: true
          description: Output only. The timestamp when the file was created.
      id: ImportDataFile
      description: A resource that represents a payload file in an import job.
      type: object
    FitDescriptor:
      id: FitDescriptor
      type: object
      description: Describes the fit level of an asset for migration to a specific target.
      properties:
        fitLevel:
          enumDescriptions:
            - Not enough information.
            - Fit.
            - No Fit.
            - Fit with effort.
          enum:
            - FIT_LEVEL_UNSPECIFIED
            - FIT
            - NO_FIT
            - REQUIRES_EFFORT
          type: string
          description: Fit level.
    RemoveAssetsFromGroupRequest:
      description: A request to remove assets from a group.
      type: object
      id: RemoveAssetsFromGroupRequest
      properties:
        allowMissing:
          type: boolean
          description: 'Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.'
        assets:
          $ref: '#/components/schemas/AssetList'
          description: Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
    ReportConfigGroupPreferenceSetAssignment:
      id: ReportConfigGroupPreferenceSetAssignment
      type: object
      description: Represents a combination of a group with a preference set.
      properties:
        group:
          description: Required. Name of the group.
          type: string
        preferenceSet:
          type: string
          description: Required. Name of the Preference Set.
    AssetList:
      id: AssetList
      properties:
        assetIds:
          description: Required. A list of asset IDs
          type: array
          items:
            type: string
      type: object
      description: Lists the asset IDs of all assets.
    FstabEntryList:
      type: object
      description: Fstab content.
      id: FstabEntryList
      properties:
        entries:
          description: Fstab entries.
          type: array
          items:
            $ref: '#/components/schemas/FstabEntry'
    ReportSummaryComputeEngineFinding:
      description: A set of findings that applies to assets destined for Compute Engine.
      id: ReportSummaryComputeEngineFinding
      properties:
        machineSeriesAllocations:
          description: Distribution of assets based on the Machine Series.
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryMachineSeriesAllocation'
        allocatedRegions:
          type: array
          description: Set of regions in which the assets were allocated.
          items:
            type: string
        allocatedAssetCount:
          type: string
          format: int64
          description: Count of assets which were allocated.
        allocatedDiskTypes:
          description: Set of disk types allocated to assets.
          items:
            enum:
              - PERSISTENT_DISK_TYPE_UNSPECIFIED
              - PERSISTENT_DISK_TYPE_STANDARD
              - PERSISTENT_DISK_TYPE_BALANCED
              - PERSISTENT_DISK_TYPE_SSD
            type: string
            enumDescriptions:
              - Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
              - Standard HDD Persistent Disk.
              - Balanced Persistent Disk.
              - SSD Persistent Disk.
          type: array
      type: object
    Settings:
      properties:
        name:
          readOnly: true
          description: Output only. The name of the resource.
          type: string
        preferenceSet:
          description: The preference set used by default for a project.
          type: string
      id: Settings
      description: Describes the Migration Center settings related to the project.
      type: object
    ReportAssetFramesResponse:
      type: object
      description: A response to a call to `ReportAssetFrame`.
      id: ReportAssetFramesResponse
      properties: {}
    ReportSummaryChartData:
      type: object
      properties:
        dataPoints:
          type: array
          description: 'Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.'
          items:
            $ref: '#/components/schemas/ReportSummaryChartDataDataPoint'
      description: Describes a collection of data points rendered as a Chart.
      id: ReportSummaryChartData
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
      id: CancelOperationRequest
    NetworkUsageSample:
      id: NetworkUsageSample
      type: object
      description: Network usage sample. Values are across all network interfaces.
      properties:
        averageIngressBps:
          format: float
          type: number
          description: Average network ingress in B/s sampled over a short window. Must be non-negative.
        averageEgressBps:
          format: float
          description: Average network egress in B/s sampled over a short window. Must be non-negative.
          type: number
    GuestRuntimeDetails:
      description: Guest OS runtime information.
      id: GuestRuntimeDetails
      type: object
      properties:
        services:
          $ref: '#/components/schemas/RunningServiceList'
          description: Running background services.
        machineName:
          description: Machine name.
          type: string
        network:
          description: 'Runtime network information (connections, ports).'
          $ref: '#/components/schemas/RuntimeNetworkInfo'
        lastBootTime:
          format: google-datetime
          description: Last time the OS was booted.
          type: string
        domain:
          description: 'Domain, e.g. c.stratozone-development.internal.'
          type: string
        processes:
          description: Running processes.
          $ref: '#/components/schemas/RunningProcessList'
        installedApps:
          $ref: '#/components/schemas/GuestInstalledApplicationList'
          description: Installed applications information.
        openFileList:
          description: Open files information.
          $ref: '#/components/schemas/OpenFileList'
    NetworkAddressList:
      properties:
        entries:
          description: Network address entries.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAddress'
      type: object
      id: NetworkAddressList
      description: List of allocated/assigned network addresses.
    DiskPartitionList:
      description: Disk partition list.
      id: DiskPartitionList
      properties:
        entries:
          description: Partition entries.
          items:
            $ref: '#/components/schemas/DiskPartition'
          type: array
      type: object
    RegionPreferences:
      properties:
        preferredRegions:
          description: 'A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.'
          type: array
          items:
            type: string
      id: RegionPreferences
      description: The user preferences relating to target regions.
      type: object
    Date:
      properties:
        month:
          format: int32
          type: integer
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
        day:
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          format: int32
          type: integer
        year:
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
          type: integer
          format: int32
      id: Date
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
    Insight:
      id: Insight
      description: An insight about an asset.
      type: object
      properties:
        genericInsight:
          readOnly: true
          description: Output only. A generic insight about an asset
          $ref: '#/components/schemas/GenericInsight'
        migrationInsight:
          $ref: '#/components/schemas/MigrationInsight'
          readOnly: true
          description: Output only. An insight about potential migrations for an asset.
    ReportSummaryVmwareEngineFinding:
      properties:
        allocatedAssetCount:
          format: int64
          type: string
          description: Count of assets which are allocated
        nodeAllocations:
          description: Set of per-nodetype allocation records
          items:
            $ref: '#/components/schemas/ReportSummaryVmwareNodeAllocation'
          type: array
        allocatedRegions:
          description: Set of regions in which the assets were allocated
          items:
            type: string
          type: array
      id: ReportSummaryVmwareEngineFinding
      type: object
      description: A set of findings that applies to assets destined for VMWare Engine.
    Money:
      type: object
      description: Represents an amount of money with its currency type.
      properties:
        units:
          description: 'The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.'
          type: string
          format: int64
        nanos:
          format: int32
          description: 'Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.'
          type: integer
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
      id: Money
    PerformanceSample:
      type: object
      description: Performance data sample.
      id: PerformanceSample
      properties:
        network:
          description: Network usage sample.
          $ref: '#/components/schemas/NetworkUsageSample'
        sampleTime:
          description: 'Time the sample was If omitted, the frame report time will be used.'
          type: string
          format: google-datetime
        memory:
          $ref: '#/components/schemas/MemoryUsageSample'
          description: Memory usage sample.
        cpu:
          description: CPU usage sample.
          $ref: '#/components/schemas/CpuUsageSample'
        disk:
          $ref: '#/components/schemas/DiskUsageSample'
          description: Disk usage sample.
    SoleTenantNodeType:
      type: object
      properties:
        nodeName:
          description: 'Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes'
          type: string
      id: SoleTenantNodeType
      description: A Sole Tenant node type.
    AggregationResultFrequency:
      id: AggregationResultFrequency
      properties:
        values:
          additionalProperties:
            type: string
            format: int64
          type: object
      type: object
      description: The result of a frequency distribution aggregation.
    VirtualMachinePreferences:
      properties:
        computeEnginePreferences:
          description: Compute Engine preferences concern insights and recommendations for Compute Engine target.
          $ref: '#/components/schemas/ComputeEnginePreferences'
        targetProduct:
          description: 'Target product for assets using this preference set. Specify either target product or business goal, but not both.'
          type: string
          enum:
            - COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
            - COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
          enumDescriptions:
            - Unspecified (default value).
            - Prefer to migrate to Google Cloud Compute Engine.
            - Prefer to migrate to Google Cloud VMware Engine.
            - Prefer to migrate to Google Cloud Sole Tenant Nodes.
        sizingOptimizationStrategy:
          enumDescriptions:
            - Unspecified (default value).
            - 'No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.'
            - 'Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.'
            - 'Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.'
          enum:
            - SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
            - SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
            - SIZING_OPTIMIZATION_STRATEGY_MODERATE
            - SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
          description: 'Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.'
          type: string
        regionPreferences:
          description: 'Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.'
          $ref: '#/components/schemas/RegionPreferences'
        commitmentPlan:
          type: string
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - COMMITMENT_PLAN_NONE
            - COMMITMENT_PLAN_ONE_YEAR
            - COMMITMENT_PLAN_THREE_YEARS
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan.
            - 1 year commitment.
            - 3 years commitment.
        soleTenancyPreferences:
          $ref: '#/components/schemas/SoleTenancyPreferences'
          description: Preferences concerning Sole Tenant nodes and virtual machines.
        vmwareEnginePreferences:
          $ref: '#/components/schemas/VmwareEnginePreferences'
          description: Preferences concerning insights and recommendations for Google Cloud VMware Engine.
      type: object
      id: VirtualMachinePreferences
      description: 'VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.'
    ComputeEngineMigrationTarget:
      type: object
      id: ComputeEngineMigrationTarget
      description: Compute engine migration target.
      properties:
        shape:
          $ref: '#/components/schemas/ComputeEngineShapeDescriptor'
          description: Description of the suggested shape for the migration target.
    AggregationHistogram:
      id: AggregationHistogram
      description: Histogram of bucketed assets counts by field value.
      type: object
      properties:
        lowerBounds:
          description: Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.
          type: array
          items:
            format: double
            type: number
    AggregationResultCount:
      properties:
        value:
          type: string
          format: int64
      type: object
      description: The result of a count aggregation.
      id: AggregationResultCount
    AssetFrame:
      id: AssetFrame
      type: object
      properties:
        traceToken:
          description: Optional. Trace token is optionally provided to assist with debugging and traceability.
          type: string
        labels:
          description: Labels as key value pairs.
          additionalProperties:
            type: string
          type: object
        attributes:
          description: Generic asset attributes.
          type: object
          additionalProperties:
            type: string
        reportTime:
          type: string
          description: The time the data was reported.
          format: google-datetime
        machineDetails:
          $ref: '#/components/schemas/MachineDetails'
          description: Asset information specific for virtual machines.
        performanceSamples:
          type: array
          description: Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.
          items:
            $ref: '#/components/schemas/PerformanceSample'
      description: Contains data reported from an inventory source on an asset.
    ListReportsResponse:
      description: Response message for listing Reports.
      type: object
      id: ListReportsResponse
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
          description: The list of Reports.
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    ReportSummaryUtilizationChartData:
      id: ReportSummaryUtilizationChartData
      type: object
      properties:
        free:
          format: int64
          type: string
          description: Aggregate value which falls into the "Free" bucket.
        used:
          type: string
          description: Aggregate value which falls into the "Used" bucket.
          format: int64
      description: Utilization Chart is a specific type of visualization which displays a metric classified into "Used" and "Free" buckets.
    DiskEntry:
      type: object
      properties:
        freeBytes:
          format: int64
          type: string
          description: Disk free space.
        partitions:
          description: Partition layout.
          $ref: '#/components/schemas/DiskPartitionList'
        capacityBytes:
          format: int64
          type: string
          description: Disk capacity.
        diskLabel:
          description: Disk label.
          type: string
        interfaceType:
          type: string
          enumDescriptions:
            - Interface type unknown or unspecified.
            - IDE interface type.
            - SATA interface type.
            - SAS interface type.
            - SCSI interface type.
            - NVME interface type.
            - FC interface type.
            - iSCSI interface type.
          description: Disks interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - IDE
            - SATA
            - SAS
            - SCSI
            - NVME
            - FC
            - ISCSI
        hwAddress:
          type: string
          description: 'Disk hardware address (e.g. 0:1 for SCSI).'
        diskLabelType:
          description: Disk label type (e.g. BIOS/GPT)
          type: string
        vmware:
          $ref: '#/components/schemas/VmwareDiskConfig'
          description: VMware disk details.
      description: Single disk entry.
      id: DiskEntry
    GuestConfigDetails:
      properties:
        fstab:
          $ref: '#/components/schemas/FstabEntryList'
          description: Mount list (Linux fstab).
        issue:
          description: OS issue (typically /etc/issue in Linux).
          type: string
        hosts:
          description: Hosts file (/etc/hosts).
          $ref: '#/components/schemas/HostsEntryList'
        selinuxMode:
          type: string
          enumDescriptions:
            - SELinux mode unknown or unspecified.
            - SELinux is disabled.
            - SELinux permissive mode.
            - SELinux enforcing mode.
          enum:
            - SE_LINUX_MODE_UNSPECIFIED
            - SE_LINUX_MODE_DISABLED
            - SE_LINUX_MODE_PERMISSIVE
            - SE_LINUX_MODE_ENFORCING
          description: Security-Enhanced Linux (SELinux) mode.
        nfsExports:
          $ref: '#/components/schemas/NfsExportList'
          description: NFS exports.
      id: GuestConfigDetails
      description: Guest OS config information.
      type: object
    GenericInsight:
      properties:
        additionalInformation:
          type: array
          readOnly: true
          description: 'Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links'
          items:
            type: string
        defaultMessage:
          readOnly: true
          description: Output only. In case message_code is not yet known by the client default_message will be the message to be used instead.
          type: string
        messageId:
          format: int64
          readOnly: true
          type: string
          description: 'Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.'
      description: An insight about an asset (experimental insight)
      id: GenericInsight
      type: object
    MachineArchitectureDetails:
      description: Details of the machine architecture.
      id: MachineArchitectureDetails
      properties:
        cpuName:
          type: string
          description: 'CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.'
        hyperthreading:
          enumDescriptions:
            - Unspecified or unknown.
            - Hyper-threading is disabled.
            - Hyper-threading is enabled.
          description: CPU hyper-threading support.
          enum:
            - CPU_HYPER_THREADING_UNSPECIFIED
            - DISABLED
            - ENABLED
          type: string
        firmwareType:
          description: Firmware type.
          enum:
            - FIRMWARE_TYPE_UNSPECIFIED
            - BIOS
            - EFI
          type: string
          enumDescriptions:
            - Unspecified or unknown.
            - BIOS firmware.
            - EFI firmware.
        vendor:
          description: Hardware vendor.
          type: string
        cpuThreadCount:
          type: integer
          format: int32
          description: Number of CPU threads allocated to the machine.
        cpuSocketCount:
          format: int32
          type: integer
          description: Number of processor sockets allocated to the machine.
        bios:
          description: BIOS Details.
          $ref: '#/components/schemas/BiosDetails'
        cpuArchitecture:
          description: 'CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.'
          type: string
      type: object
    NetworkConnection:
      type: object
      id: NetworkConnection
      properties:
        pid:
          type: string
          description: Process ID.
          format: int64
        state:
          enum:
            - STATE_UNSPECIFIED
            - OPENING
            - OPEN
            - LISTEN
            - CLOSING
            - CLOSED
          type: string
          description: Network connection state.
          enumDescriptions:
            - Connection state is unknown or unspecified.
            - The connection is being opened.
            - The connection is open.
            - Listening for incoming connections.
            - The connection is being closed.
            - The connection is closed.
        processName:
          type: string
          description: Process or service name.
        localPort:
          description: Local port.
          type: integer
          format: int32
        remotePort:
          type: integer
          format: int32
          description: Remote port.
        protocol:
          description: Connection protocol (e.g. TCP/UDP).
          type: string
        remoteIpAddress:
          type: string
          description: Remote IP address.
        localIpAddress:
          type: string
          description: Local IP address.
    GuestInstalledApplication:
      type: object
      properties:
        path:
          description: Source path.
          type: string
        applicationName:
          description: Installed application name.
          type: string
        vendor:
          type: string
          description: Installed application vendor.
        installTime:
          format: google-datetime
          type: string
          description: The time when the application was installed.
        version:
          description: Installed application version.
          type: string
      id: GuestInstalledApplication
      description: Guest installed application information.
    ListImportDataFilesResponse:
      description: Response for listing payload files of an import job.
      properties:
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        importDataFiles:
          items:
            $ref: '#/components/schemas/ImportDataFile'
          type: array
          description: The list of import data files.
        nextPageToken:
          type: string
          description: 'A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
      id: ListImportDataFilesResponse
      type: object
    OpenFileDetails:
      description: Open file Information.
      type: object
      id: OpenFileDetails
      properties:
        command:
          type: string
          description: Opened file command.
        user:
          description: Opened file user.
          type: string
        filePath:
          description: Opened file file path.
          type: string
        fileType:
          description: Opened file file type.
          type: string
    ListGroupsResponse:
      description: A response for listing groups.
      type: object
      id: ListGroupsResponse
      properties:
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
        groups:
          type: array
          description: The list of Group
          items:
            $ref: '#/components/schemas/Group'
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
    AzureVmPlatformDetails:
      id: AzureVmPlatformDetails
      description: Azure VM specific details.
      properties:
        machineTypeLabel:
          type: string
          description: Azure platform's machine type label.
        provisioningState:
          description: Azure platform's provisioning state.
          type: string
        location:
          description: The location of the machine in the Azure format.
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      id: Operation
      properties:
        done:
          type: boolean
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
        name:
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
          type: string
        metadata:
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
      type: object
    NetworkAdapterList:
      type: object
      description: List of network adapters.
      id: NetworkAdapterList
      properties:
        entries:
          items:
            $ref: '#/components/schemas/NetworkAdapterDetails'
          type: array
          description: Network adapter entries.
    NfsExport:
      description: NFS export.
      type: object
      properties:
        hosts:
          description: The hosts or networks to which the export is being shared.
          items:
            type: string
          type: array
        exportDirectory:
          description: The directory being exported.
          type: string
      id: NfsExport
    Group:
      description: 'A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.'
      type: object
      id: Group
      properties:
        createTime:
          format: google-datetime
          description: Output only. The timestamp when the group was created.
          readOnly: true
          type: string
        description:
          description: The description of the resource.
          type: string
        displayName:
          description: User-friendly display name.
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: Labels as key value pairs.
        name:
          description: Output only. The name of the group.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the group was last updated.
          format: google-datetime
          readOnly: true
          type: string
    NfsExportList:
      type: object
      id: NfsExportList
      description: NFS exports.
      properties:
        entries:
          items:
            $ref: '#/components/schemas/NfsExport'
          description: NFS export entries.
          type: array
    Aggregation:
      type: object
      id: Aggregation
      properties:
        field:
          type: string
          description: The name of the field on which to aggregate.
        sum:
          description: Sum over a numeric field.
          $ref: '#/components/schemas/AggregationSum'
        histogram:
          description: Creates a bucketed histogram of field values.
          $ref: '#/components/schemas/AggregationHistogram'
        count:
          description: Count the number of matching objects.
          $ref: '#/components/schemas/AggregationCount'
        frequency:
          description: Creates a frequency distribution of all field values.
          $ref: '#/components/schemas/AggregationFrequency'
      description: 'Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.'
    DailyResourceUsageAggregationStats:
      id: DailyResourceUsageAggregationStats
      description: Statistical aggregation of samples for a single resource usage.
      properties:
        ninteyFifthPercentile:
          format: float
          type: number
          description: 95th percentile usage value.
        average:
          format: float
          type: number
          description: Average usage value.
        median:
          description: Median usage value.
          type: number
          format: float
        peak:
          format: float
          description: Peak usage value.
          type: number
      type: object
    MachineDetails:
      properties:
        architecture:
          $ref: '#/components/schemas/MachineArchitectureDetails'
          description: 'Architecture details (vendor, CPU architecture).'
        network:
          $ref: '#/components/schemas/MachineNetworkDetails'
          description: Network details.
        guestOs:
          description: Guest OS information.
          $ref: '#/components/schemas/GuestOsDetails'
        disks:
          description: Disk details.
          $ref: '#/components/schemas/MachineDiskDetails'
        powerState:
          description: Power state of the machine.
          enum:
            - POWER_STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - SUSPENDING
            - SUSPENDED
            - DELETING
            - DELETED
          enumDescriptions:
            - Power state is unknown.
            - 'The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state.'
            - The machine is active.
            - The machine is being turned off.
            - The machine is off.
            - The machine is being deleted from the hosting platform.
            - The machine is deleted from the hosting platform.
          type: string
        uuid:
          type: string
          description: Machine unique identifier.
        coreCount:
          description: Number of CPU cores in the machine. Must be non-negative.
          format: int32
          type: integer
        createTime:
          description: Machine creation time.
          type: string
          format: google-datetime
        machineName:
          type: string
          description: Machine name.
        memoryMb:
          type: integer
          description: The amount of memory in the machine. Must be non-negative.
          format: int32
        platform:
          $ref: '#/components/schemas/PlatformDetails'
          description: Platform specific information.
      type: object
      description: Details of a machine.
      id: MachineDetails
    ReportSummaryMachineSeriesAllocation:
      type: object
      id: ReportSummaryMachineSeriesAllocation
      description: Represents a data point tracking the count of assets allocated for a specific Machine Series.
      properties:
        machineSeries:
          $ref: '#/components/schemas/MachineSeries'
          description: 'The Machine Series (e.g. "E2", "N2")'
        allocatedAssetCount:
          type: string
          format: int64
          description: Count of assets allocated to this machine series.
    DiskEntryList:
      properties:
        entries:
          type: array
          description: Disk entries.
          items:
            $ref: '#/components/schemas/DiskEntry'
      description: VM disks.
      type: object
      id: DiskEntryList
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  x-stackQL-resources:
    locations:
      id: google.migrationcenter.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
        insert: []
        update: []
        delete: []
    settings:
      id: google.migrationcenter.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
    error_frames:
      id: google.migrationcenter.error_frames
      name: error_frames
      title: Error Frames
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames~1{errorFramesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.errorFrames
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/get'
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/list'
        insert: []
        update: []
        delete: []
    sources:
      id: google.migrationcenter.sources
      name: sources
      title: Sources
      methods:
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sources
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources/methods/get'
          - $ref: '#/components/x-stackQL-resources/sources/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sources/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sources/methods/delete'
    preference_sets:
      id: google.migrationcenter.preference_sets
      name: preference_sets
      title: Preference Sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.preferenceSets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/list'
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/delete'
    reports:
      id: google.migrationcenter.reports
      name: reports
      title: Reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reports
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
          - $ref: '#/components/x-stackQL-resources/reports/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/reports/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reports/methods/delete'
    report_configs:
      id: google.migrationcenter.report_configs
      name: report_configs
      title: Report Configs
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reportConfigs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/delete'
    groups_assets:
      id: google.migrationcenter.groups_assets
      name: groups_assets
      title: Groups Assets
      methods:
        remove_assets:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:removeAssets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_assets:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:addAssets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    groups:
      id: google.migrationcenter.groups
      name: groups
      title: Groups
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    assets:
      id: google.migrationcenter.assets
      name: assets
      title: Assets
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        report_asset_frames:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:reportAssetFrames/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchUpdate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        aggregate_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:aggregateValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/get'
          - $ref: '#/components/x-stackQL-resources/assets/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/delete'
    import_jobs:
      id: google.migrationcenter.import_jobs
      name: import_jobs
      title: Import Jobs
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/list'
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/delete'
    import_data_files:
      id: google.migrationcenter.import_data_files
      name: import_data_files
      title: Import Data Files
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importDataFiles
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/list'
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/delete'
    operations:
      id: google.migrationcenter.operations
      name: operations
      title: Operations
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations':
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: Lists information about the supported locations for this service.
      operationId: migrationcenter.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: *ref_1
    patch:
      description: Updates the regional-level project settings.
      operationId: migrationcenter.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets the details of regional settings.
      operationId: migrationcenter.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: migrationcenter.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}':
    parameters: *ref_1
    get:
      description: Gets the details of an error frame.
      operationId: migrationcenter.projects.locations.sources.errorFrames.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorFrame'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: errorFramesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: error_frames
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames':
    parameters: *ref_1
    get:
      description: Lists all error frames in a given source and location.
      operationId: migrationcenter.projects.locations.sources.errorFrames.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListErrorFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: error_frames
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.errorFrames
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a source.
      operationId: migrationcenter.projects.locations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a source.
      operationId: migrationcenter.projects.locations.sources.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a source.
      operationId: migrationcenter.projects.locations.sources.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources':
    parameters: *ref_1
    post:
      description: Creates a new source in a given project and location.
      operationId: migrationcenter.projects.locations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sourceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all the sources in a given project and location.
      operationId: migrationcenter.projects.locations.sources.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sources
  '/v1/projects/{projectsId}/locations/{locationsId}/preferenceSets':
    parameters: *ref_1
    get:
      description: Lists all the preference sets in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPreferenceSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: preference_sets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.preferenceSets
    post:
      description: Creates a new preference set in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: preferenceSetId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferenceSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports':
    parameters: *ref_1
    get:
      description: Lists Reports in a given ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: reports
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.reports
    post:
      description: Creates a report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: reportId
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs':
    parameters: *ref_1
    post:
      description: Creates a report configuration.
      operationId: migrationcenter.projects.locations.reportConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: reportConfigId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists ReportConfigs in a given project and location.
      operationId: migrationcenter.projects.locations.reportConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.reportConfigs
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets':
    parameters: *ref_1
    post:
      description: Removes assets from a group.
      operationId: migrationcenter.projects.locations.groups.removeAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAssetsFromGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_assets
      x-stackQL-method: remove_assets
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}':
    parameters: *ref_1
    get:
      description: Gets the details of a group.
      operationId: migrationcenter.projects.locations.groups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a group.
      operationId: migrationcenter.projects.locations.groups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of a group.
      operationId: migrationcenter.projects.locations.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets':
    parameters: *ref_1
    post:
      description: Adds assets to a group.
      operationId: migrationcenter.projects.locations.groups.addAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAssetsToGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_assets
      x-stackQL-method: add_assets
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups':
    parameters: *ref_1
    get:
      description: Lists all groups in a given project and location.
      operationId: migrationcenter.projects.locations.groups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.groups
    post:
      description: Creates a new group in a given project and location.
      operationId: migrationcenter.projects.locations.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}':
    parameters: *ref_1
    delete:
      description: Deletes an asset.
      operationId: migrationcenter.projects.locations.assets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    patch:
      description: Updates the parameters of an asset.
      operationId: migrationcenter.projects.locations.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets the details of an asset.
      operationId: migrationcenter.projects.locations.assets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames':
    parameters: *ref_1
    post:
      description: Reports a set of frames.
      operationId: migrationcenter.projects.locations.assets.reportAssetFrames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frames'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportAssetFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: report_asset_frames
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate':
    parameters: *ref_1
    post:
      description: Updates the parameters of a list of assets.
      operationId: migrationcenter.projects.locations.assets.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateAssetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: batch_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete':
    parameters: *ref_1
    post:
      description: Deletes list of Assets.
      operationId: migrationcenter.projects.locations.assets.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteAssetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: batch_delete
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets':
    parameters: *ref_1
    get:
      description: Lists all the assets in a given project and location.
      operationId: migrationcenter.projects.locations.assets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: assets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.assets
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues':
    parameters: *ref_1
    post:
      description: Aggregates the requested fields based on provided function.
      operationId: migrationcenter.projects.locations.assets.aggregateValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateAssetsValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateAssetsValuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: aggregate_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs':
    parameters: *ref_1
    post:
      description: Creates an import job.
      operationId: migrationcenter.projects.locations.importJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: importJobId
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all import jobs.
      operationId: migrationcenter.projects.locations.importJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: import_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.importJobs
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}':
    parameters: *ref_1
    patch:
      description: Updates an import job.
      operationId: migrationcenter.projects.locations.importJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: patch
      x-stackQL-verb: exec
    get:
      description: Gets the details of an import job.
      operationId: migrationcenter.projects.locations.importJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes an import job.
      operationId: migrationcenter.projects.locations.importJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
      x-stackQL-resource: import_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate':
    parameters: *ref_1
    post:
      description: Validates an import job.
      operationId: migrationcenter.projects.locations.importJobs.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateImportJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: validate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run':
    parameters: *ref_1
    post:
      description: Runs an import job.
      operationId: migrationcenter.projects.locations.importJobs.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunImportJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: run
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles':
    parameters: *ref_1
    post:
      description: Creates an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDataFile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: importDataFileId
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: List import data files.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportDataFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: import_data_files
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.importDataFiles
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}':
    parameters: *ref_1
    get:
      description: Gets an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportDataFile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Delete an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: migrationcenter.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: migrationcenter.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: migrationcenter.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: migrationcenter.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
