openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: 'https://github.com/stackql/google-discovery-to-openapi'
    email: info@stackql.io
  title: Migration Center API
  description: A unified platform that helps you accelerate your end-to-end cloud journey from your current on-premises or cloud environments to Google Cloud.
  version: v1
  x-discovery-doc-revision: '20230811'
  x-generated-date: '2023-08-23'
externalDocs:
  url: 'https://cloud.google.com/migration-center'
servers:
  - url: 'https://migrationcenter.googleapis.com'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes: &ref_0
            'https://www.googleapis.com/auth/cloud-platform': 'See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.'
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes: *ref_0
  schemas:
    FileValidationReport:
      type: object
      description: A resource that aggregates the validation errors found in an import job file.
      properties:
        fileErrors:
          description: List of file level errors.
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
        fileName:
          description: The name of the file.
          type: string
        partialReport:
          type: boolean
          description: Flag indicating that processing was aborted due to maximum number of errors.
        rowErrors:
          description: Partial list of rows that encountered validation error.
          items:
            $ref: '#/components/schemas/ImportRowError'
          type: array
      id: FileValidationReport
    ComputeEnginePreferences:
      type: object
      properties:
        licenseType:
          type: string
          enumDescriptions:
            - Unspecified (default value).
            - Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with.
            - Bring-your-own-license (BYOL) plan. User provides the OS license.
          description: 'License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.'
          enum:
            - LICENSE_TYPE_UNSPECIFIED
            - LICENSE_TYPE_DEFAULT
            - LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
        machinePreferences:
          description: Preferences concerning the machine types to consider on Compute Engine.
          $ref: '#/components/schemas/MachinePreferences'
      description: The user preferences relating to Compute Engine target platform.
      id: ComputeEnginePreferences
    AssetList:
      description: Lists the asset IDs of all assets.
      type: object
      properties:
        assetIds:
          description: Required. A list of asset IDs
          items:
            type: string
          type: array
      id: AssetList
    BatchDeleteAssetsRequest:
      properties:
        names:
          description: 'Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.'
          items:
            type: string
          type: array
        allowMissing:
          type: boolean
          description: 'Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.'
      type: object
      description: A request to delete a list of asset.
      id: BatchDeleteAssetsRequest
    InsightList:
      properties:
        updateTime:
          readOnly: true
          description: Output only. Update timestamp.
          type: string
          format: google-datetime
        insights:
          items:
            $ref: '#/components/schemas/Insight'
          description: Output only. Insights of the list.
          type: array
          readOnly: true
      id: InsightList
      type: object
      description: Message containing insights list.
    NetworkAdapterDetails:
      properties:
        adapterType:
          description: Network adapter type (e.g. VMXNET3).
          type: string
        macAddress:
          type: string
          description: MAC address.
        addresses:
          description: NetworkAddressList
          $ref: '#/components/schemas/NetworkAddressList'
      type: object
      description: Details of network adapter.
      id: NetworkAdapterDetails
    DiskEntryList:
      type: object
      description: VM disks.
      properties:
        entries:
          items:
            $ref: '#/components/schemas/DiskEntry'
          description: Disk entries.
          type: array
      id: DiskEntryList
    VmwareEnginePreferences:
      type: object
      description: The user preferences relating to Google Cloud VMware Engine target platform.
      properties:
        cpuOvercommitRatio:
          type: number
          format: double
          description: 'CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.'
        commitmentPlan:
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_1_YEAR_UPFRONT_PAYMENT
            - COMMITMENT_3_YEAR_UPFRONT_PAYMENT
          type: string
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment (monthly payments).
            - 3 year commitment (monthly payments).
            - 1 year commitment (upfront payment).
            - 3 years commitment (upfront payment).
        memoryOvercommitRatio:
          type: number
          description: 'Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.'
          format: double
        storageDeduplicationCompressionRatio:
          type: number
          format: double
          description: 'The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.'
      id: VmwareEnginePreferences
    BatchUpdateAssetsRequest:
      id: BatchUpdateAssetsRequest
      properties:
        requests:
          items:
            $ref: '#/components/schemas/UpdateAssetRequest'
          description: Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.
          type: array
      type: object
      description: A request to update a list of assets.
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    ComputeEngineMigrationTarget:
      type: object
      description: Compute engine migration target.
      properties:
        shape:
          $ref: '#/components/schemas/ComputeEngineShapeDescriptor'
          description: Description of the suggested shape for the migration target.
      id: ComputeEngineMigrationTarget
    AggregationResultHistogram:
      type: object
      properties:
        buckets:
          items:
            $ref: '#/components/schemas/AggregationResultHistogramBucket'
          type: array
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
      description: The result of a bucketed histogram aggregation.
      id: AggregationResultHistogram
    ReportSummaryVmwareNode:
      description: A VMWare Engine Node
      id: ReportSummaryVmwareNode
      properties:
        code:
          type: string
          description: 'Code to identify VMware Engine node series, e.g. "ve1-standard-72". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes'
      type: object
    UpdateAssetRequest:
      type: object
      properties:
        updateMask:
          description: 'Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.'
          type: string
          format: google-fieldmask
        asset:
          $ref: '#/components/schemas/Asset'
          description: Required. The resource being updated.
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
      description: A request to update an asset.
      id: UpdateAssetRequest
    NetworkAdapterList:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/NetworkAdapterDetails'
          description: Network adapter entries.
          type: array
      description: List of network adapters.
      type: object
      id: NetworkAdapterList
    ReportSummary:
      type: object
      properties:
        groupFindings:
          type: array
          description: Findings for each Group included in this report.
          items:
            $ref: '#/components/schemas/ReportSummaryGroupFinding'
        allAssetsStats:
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
          description: Aggregate statistics for all the assets across all the groups.
      id: ReportSummary
      description: 'Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.'
    ComputeEngineShapeDescriptor:
      description: Compute Engine target shape descriptor.
      id: ComputeEngineShapeDescriptor
      type: object
      properties:
        physicalCoreCount:
          format: int32
          type: integer
          description: Number of physical cores.
        machineType:
          type: string
          description: Compute Engine machine type.
        memoryMb:
          description: Memory in mebibytes.
          type: integer
          format: int32
        storage:
          description: Compute Engine storage. Never empty.
          type: array
          items:
            $ref: '#/components/schemas/ComputeStorageDescriptor'
        series:
          type: string
          description: Compute Engine machine series.
        logicalCoreCount:
          description: Number of logical cores.
          type: integer
          format: int32
    AggregationSum:
      properties: {}
      description: Sum of field values.
      id: AggregationSum
      type: object
    DiskUsageSample:
      properties:
        averageIops:
          description: Average IOPS sampled over a short window. Must be non-negative.
          type: number
          format: float
      description: Disk usage sample. Values are across all disks.
      type: object
      id: DiskUsageSample
    DiskPartition:
      id: DiskPartition
      type: object
      properties:
        type:
          description: Partition type.
          type: string
        uuid:
          type: string
          description: Partition UUID.
        capacityBytes:
          description: Partition capacity.
          type: string
          format: int64
        mountPoint:
          description: Mount pount (Linux/Windows) or drive letter (Windows).
          type: string
        fileSystem:
          type: string
          description: Partition file system.
        subPartitions:
          description: Sub-partitions.
          $ref: '#/components/schemas/DiskPartitionList'
        freeBytes:
          type: string
          format: int64
          description: Partition free space.
      description: Disk Partition details.
    ListSourcesResponse:
      type: object
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        sources:
          description: The list of sources.
          type: array
          items:
            $ref: '#/components/schemas/Source'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
      id: ListSourcesResponse
      description: Response message for listing sources.
    PreferenceSet:
      id: PreferenceSet
      description: The preferences that apply to all assets in a given context.
      properties:
        description:
          type: string
          description: A description of the preference set.
        name:
          type: string
          readOnly: true
          description: Output only. Name of the preference set.
        createTime:
          type: string
          description: Output only. The timestamp when the preference set was created.
          readOnly: true
          format: google-datetime
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The timestamp when the preference set was last updated.
          readOnly: true
        virtualMachinePreferences:
          description: A set of preferences that applies to all virtual machines in the context.
          $ref: '#/components/schemas/VirtualMachinePreferences'
      type: object
    Frames:
      id: Frames
      type: object
      description: Collection of frame data.
      properties:
        framesData:
          items:
            $ref: '#/components/schemas/AssetFrame'
          description: A repeated field of asset data.
          type: array
    MachineArchitectureDetails:
      properties:
        firmwareType:
          enumDescriptions:
            - Unspecified or unknown.
            - BIOS firmware.
            - EFI firmware.
          description: Firmware type.
          enum:
            - FIRMWARE_TYPE_UNSPECIFIED
            - BIOS
            - EFI
          type: string
        hyperthreading:
          enum:
            - CPU_HYPER_THREADING_UNSPECIFIED
            - DISABLED
            - ENABLED
          enumDescriptions:
            - Unspecified or unknown.
            - Hyper-threading is disabled.
            - Hyper-threading is enabled.
          description: CPU hyper-threading support.
          type: string
        cpuThreadCount:
          type: integer
          format: int32
          description: Number of CPU threads allocated to the machine.
        vendor:
          description: Hardware vendor.
          type: string
        cpuSocketCount:
          description: Number of processor sockets allocated to the machine.
          type: integer
          format: int32
        cpuName:
          description: 'CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.'
          type: string
        bios:
          description: BIOS Details.
          $ref: '#/components/schemas/BiosDetails'
        cpuArchitecture:
          description: 'CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.'
          type: string
      type: object
      id: MachineArchitectureDetails
      description: Details of the machine architecture.
    ExecutionReport:
      properties:
        executionErrors:
          description: Validation errors encountered during the execution of the import job.
          $ref: '#/components/schemas/ValidationReport'
        totalRowsCount:
          format: int32
          readOnly: true
          description: Output only. Total number of rows in the import job.
          type: integer
        framesReported:
          format: int32
          description: Total number of asset frames reported for the import job.
          type: integer
      type: object
      description: A resource that reports result of the import job execution.
      id: ExecutionReport
    FstabEntry:
      properties:
        vfstype:
          description: The type of the filesystem.
          type: string
        file:
          type: string
          description: The mount point for the filesystem.
        mntops:
          type: string
          description: Mount options associated with the filesystem.
        freq:
          format: int32
          description: Used by dump to determine which filesystems need to be dumped.
          type: integer
        passno:
          description: Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.
          type: integer
          format: int32
        spec:
          type: string
          description: The block special device or remote filesystem to be mounted.
      id: FstabEntry
      description: Single fstab entry.
      type: object
    ReportConfig:
      id: ReportConfig
      description: The groups and associated preference sets on which we can generate reports.
      type: object
      properties:
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        name:
          readOnly: true
          type: string
          description: Output only. Name of resource.
        description:
          description: Free-text description.
          type: string
        updateTime:
          type: string
          readOnly: true
          format: google-datetime
          description: Output only. The timestamp when the resource was last updated.
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when the resource was created.
        groupPreferencesetAssignments:
          items:
            $ref: '#/components/schemas/ReportConfigGroupPreferenceSetAssignment'
          description: Required. Collection of combinations of groups and preference sets.
          type: array
    GuestInstalledApplicationList:
      description: Guest installed application list.
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/GuestInstalledApplication'
          description: Application entries.
      id: GuestInstalledApplicationList
      type: object
    ImportRowError:
      description: A resource that reports the import job errors at row level.
      properties:
        errors:
          description: The list of errors detected in the row.
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
        vmUuid:
          description: The VM UUID.
          type: string
        rowNumber:
          deprecated: true
          type: integer
          description: The row number where the error was detected.
          format: int32
        vmName:
          description: The name of the VM in the row.
          type: string
      id: ImportRowError
      type: object
    Empty:
      properties: {}
      id: Empty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    ListLocationsResponse:
      id: ListLocationsResponse
      type: object
      properties:
        locations:
          type: array
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Locations.ListLocations.
    AggregationFrequency:
      id: AggregationFrequency
      properties: {}
      description: Frequency distribution of all field values.
      type: object
    ReportSummaryComputeEngineFinding:
      description: A set of findings that applies to assets destined for Compute Engine.
      properties:
        machineSeriesAllocations:
          items:
            $ref: '#/components/schemas/ReportSummaryMachineSeriesAllocation'
          description: Distribution of assets based on the Machine Series.
          type: array
        allocatedRegions:
          items:
            type: string
          description: Set of regions in which the assets were allocated.
          type: array
        allocatedDiskTypes:
          type: array
          items:
            type: string
            enum:
              - PERSISTENT_DISK_TYPE_UNSPECIFIED
              - PERSISTENT_DISK_TYPE_STANDARD
              - PERSISTENT_DISK_TYPE_BALANCED
              - PERSISTENT_DISK_TYPE_SSD
            enumDescriptions:
              - Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
              - Standard HDD Persistent Disk.
              - Balanced Persistent Disk.
              - SSD Persistent Disk.
          description: Set of disk types allocated to assets.
        allocatedAssetCount:
          format: int64
          description: Count of assets which were allocated.
          type: string
      id: ReportSummaryComputeEngineFinding
      type: object
    AggregateAssetsValuesRequest:
      description: A request to aggregate one or more values.
      properties:
        aggregations:
          type: array
          description: Array of aggregations to perform. Up to 25 aggregations can be defined.
          items:
            $ref: '#/components/schemas/Aggregation'
        filter:
          description: The aggregation will be performed on assets that match the provided filter.
          type: string
      type: object
      id: AggregateAssetsValuesRequest
    FitDescriptor:
      description: Describes the fit level of an asset for migration to a specific target.
      id: FitDescriptor
      type: object
      properties:
        fitLevel:
          enumDescriptions:
            - Not enough information.
            - Fit.
            - No Fit.
            - Fit with effort.
          type: string
          enum:
            - FIT_LEVEL_UNSPECIFIED
            - FIT
            - NO_FIT
            - REQUIRES_EFFORT
          description: Fit level.
    ListErrorFramesResponse:
      description: A response for listing error frames.
      type: object
      id: ListErrorFramesResponse
      properties:
        errorFrames:
          type: array
          items:
            $ref: '#/components/schemas/ErrorFrame'
          description: The list of error frames.
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          items:
            type: string
          description: Locations that could not be reached.
          type: array
    BatchUpdateAssetsResponse:
      id: BatchUpdateAssetsResponse
      description: Response for updating a list of assets.
      properties:
        assets:
          items:
            $ref: '#/components/schemas/Asset'
          type: array
          description: Update asset content. The content only includes values after field mask being applied.
      type: object
    DailyResourceUsageAggregation:
      id: DailyResourceUsageAggregation
      type: object
      properties:
        date:
          $ref: '#/components/schemas/Date'
          description: Aggregation date. Day boundaries are at midnight UTC.
        disk:
          $ref: '#/components/schemas/DailyResourceUsageAggregationDisk'
          description: Disk usage.
        cpu:
          $ref: '#/components/schemas/DailyResourceUsageAggregationCPU'
          description: CPU usage.
        memory:
          description: Memory usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationMemory'
        network:
          description: Network usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationNetwork'
      description: Usage data aggregation for a single day.
    NfsExportList:
      description: NFS exports.
      id: NfsExportList
      type: object
      properties:
        entries:
          type: array
          description: NFS export entries.
          items:
            $ref: '#/components/schemas/NfsExport'
    OperationMetadata:
      type: object
      properties:
        statusMessage:
          readOnly: true
          description: 'Output only. Human-readable status of the operation, if any.'
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          type: string
          readOnly: true
        requestedCancellation:
          type: boolean
          description: 'Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
          readOnly: true
        target:
          readOnly: true
          description: Output only. Server-defined resource path for the target of the operation.
          type: string
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        endTime:
          format: google-datetime
          readOnly: true
          description: Output only. The time the operation finished running.
          type: string
      description: Represents the metadata of the long-running operation.
      id: OperationMetadata
    RunningProcessList:
      type: object
      id: RunningProcessList
      properties:
        entries:
          items:
            $ref: '#/components/schemas/RunningProcess'
          description: Running process entries.
          type: array
      description: List of running guest OS processes.
    BiosDetails:
      type: object
      properties:
        releaseDate:
          $ref: '#/components/schemas/Date'
          description: BIOS release date.
        version:
          description: BIOS version.
          type: string
        manufacturer:
          type: string
          description: BIOS manufacturer.
        id:
          description: BIOS ID.
          type: string
        smbiosUuid:
          type: string
          description: SMBIOS UUID.
        biosName:
          description: BIOS name. This fields is deprecated. Please use the `id` field instead.
          deprecated: true
          type: string
      description: Details about the BIOS.
      id: BiosDetails
    MachineNetworkDetails:
      id: MachineNetworkDetails
      type: object
      description: Details of network adapters and settings.
      properties:
        adapters:
          $ref: '#/components/schemas/NetworkAdapterList'
          description: List of network adapters.
        primaryIpAddress:
          description: The primary IP address of the machine.
          type: string
        publicIpAddress:
          description: The public IP address of the machine.
          type: string
        primaryMacAddress:
          type: string
          description: MAC address of the machine. This property is used to uniqly identify the machine.
    GuestOsDetails:
      description: Information from Guest-level collections.
      id: GuestOsDetails
      properties:
        config:
          $ref: '#/components/schemas/GuestConfigDetails'
          description: OS and app configuration.
        osName:
          description: The name of the operating system.
          type: string
        family:
          enumDescriptions:
            - ''
            - Microsoft Windows Server and Desktop.
            - Various Linux flavors.
            - Non-Linux Unix flavors.
          description: 'What family the OS belong to, if known.'
          enum:
            - OS_FAMILY_UNKNOWN
            - OS_FAMILY_WINDOWS
            - OS_FAMILY_LINUX
            - OS_FAMILY_UNIX
          type: string
        version:
          type: string
          description: The version of the operating system.
        runtime:
          description: Runtime information.
          $ref: '#/components/schemas/GuestRuntimeDetails'
      type: object
    ImportJob:
      properties:
        executionReport:
          description: Output only. The report with the results of running the import job.
          readOnly: true
          $ref: '#/components/schemas/ExecutionReport'
        state:
          enumDescriptions:
            - Default value.
            - The import job is pending.
            - The processing of the import job is ongoing.
            - The import job processing has completed.
            - The import job failed to be processed.
            - The import job is being validated.
            - The import job contains blocking errors.
            - The validation of the job completed with no blocking errors.
          type: string
          description: Output only. The state of the import job.
          readOnly: true
          enum:
            - IMPORT_JOB_STATE_UNSPECIFIED
            - IMPORT_JOB_STATE_PENDING
            - IMPORT_JOB_STATE_RUNNING
            - IMPORT_JOB_STATE_COMPLETED
            - IMPORT_JOB_STATE_FAILED
            - IMPORT_JOB_STATE_VALIDATING
            - IMPORT_JOB_STATE_FAILED_VALIDATION
            - IMPORT_JOB_STATE_READY
        createTime:
          readOnly: true
          description: Output only. The timestamp when the import job was created.
          format: google-datetime
          type: string
        assetSource:
          description: Required. Reference to a source.
          type: string
        updateTime:
          readOnly: true
          description: Output only. The timestamp when the import job was last updated.
          format: google-datetime
          type: string
        validationReport:
          $ref: '#/components/schemas/ValidationReport'
          readOnly: true
          description: Output only. The report with the validation results of the import job.
        completeTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when the import job was completed.
        labels:
          additionalProperties:
            type: string
          type: object
          description: Labels as key value pairs.
        name:
          type: string
          description: Output only. The full name of the import job.
          readOnly: true
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
      id: ImportJob
      type: object
      description: A resource that represents the background job that imports asset frames.
    ListImportDataFilesResponse:
      properties:
        nextPageToken:
          description: 'A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.'
          type: string
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        importDataFiles:
          type: array
          description: The list of import data files.
          items:
            $ref: '#/components/schemas/ImportDataFile'
      id: ListImportDataFilesResponse
      description: Response for listing payload files of an import job.
      type: object
    FstabEntryList:
      properties:
        entries:
          description: Fstab entries.
          items:
            $ref: '#/components/schemas/FstabEntry'
          type: array
      id: FstabEntryList
      type: object
      description: Fstab content.
    PhysicalPlatformDetails:
      id: PhysicalPlatformDetails
      description: Platform specific details for Physical Machines.
      type: object
      properties:
        location:
          type: string
          description: Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.
    ReportSummaryGroupFinding:
      properties:
        assetAggregateStats:
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
          description: Summary statistics for all the assets in this group.
        displayName:
          description: Display Name for the Group.
          type: string
        preferenceSetFindings:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryGroupPreferenceSetFinding'
          description: Findings for each of the PreferenceSets for this group.
        overlappingAssetCount:
          format: int64
          type: string
          description: Count of the number of assets in this group which are also included in another group within the same report.
        description:
          type: string
          description: Description for the Group.
      id: ReportSummaryGroupFinding
      type: object
      description: Summary Findings for a specific Group.
    GuestRuntimeDetails:
      type: object
      properties:
        machineName:
          type: string
          description: Machine name.
        processes:
          $ref: '#/components/schemas/RunningProcessList'
          description: Running processes.
        lastBootTime:
          format: google-datetime
          description: Last time the OS was booted.
          type: string
        domain:
          description: 'Domain, e.g. c.stratozone-development.internal.'
          type: string
        installedApps:
          $ref: '#/components/schemas/GuestInstalledApplicationList'
          description: Installed applications information.
        services:
          $ref: '#/components/schemas/RunningServiceList'
          description: Running background services.
        network:
          $ref: '#/components/schemas/RuntimeNetworkInfo'
          description: 'Runtime network information (connections, ports).'
        openFileList:
          $ref: '#/components/schemas/OpenFileList'
          description: Open files information.
      id: GuestRuntimeDetails
      description: Guest OS runtime information.
    ComputeStorageDescriptor:
      description: Compute Engine storage option descriptor.
      type: object
      id: ComputeStorageDescriptor
      properties:
        type:
          enumDescriptions:
            - Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with.
            - Standard HDD Persistent Disk.
            - Balanced Persistent Disk.
            - SSD Persistent Disk.
          enum:
            - PERSISTENT_DISK_TYPE_UNSPECIFIED
            - PERSISTENT_DISK_TYPE_STANDARD
            - PERSISTENT_DISK_TYPE_BALANCED
            - PERSISTENT_DISK_TYPE_SSD
          type: string
          description: Disk type backing the storage.
        sizeGb:
          type: integer
          description: Disk size in GiB.
          format: int32
    RuntimeNetworkInfo:
      description: Runtime networking information.
      type: object
      properties:
        scanTime:
          description: Time of the last network scan.
          format: google-datetime
          type: string
        connections:
          description: Network connections.
          $ref: '#/components/schemas/NetworkConnectionList'
      id: RuntimeNetworkInfo
    GenericInsight:
      id: GenericInsight
      description: An insight about an asset (experimental insight)
      type: object
      properties:
        additionalInformation:
          readOnly: true
          items:
            type: string
          type: array
          description: 'Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links'
        defaultMessage:
          type: string
          description: Output only. In case message_code is not yet known by the client default_message will be the message to be used instead.
          readOnly: true
        messageId:
          description: 'Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.'
          type: string
          readOnly: true
          format: int64
    AggregationResultCount:
      properties:
        value:
          format: int64
          type: string
      id: AggregationResultCount
      description: The result of a count aggregation.
      type: object
    RunningServiceList:
      description: List of running guest OS services.
      id: RunningServiceList
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/RunningService'
          description: Running service entries.
      type: object
    NfsExport:
      type: object
      id: NfsExport
      description: NFS export.
      properties:
        exportDirectory:
          type: string
          description: The directory being exported.
        hosts:
          description: The hosts or networks to which the export is being shared.
          items:
            type: string
          type: array
    UploadFileInfo:
      description: A resource that contains a URI to which a data file can be uploaded.
      properties:
        headers:
          type: object
          additionalProperties:
            type: string
          readOnly: true
          description: Output only. The headers that were used to sign the URI.
        uriExpirationTime:
          format: google-datetime
          readOnly: true
          type: string
          description: Output only. Expiration time of the upload URI.
        signedUri:
          readOnly: true
          description: Output only. Upload URI for the file.
          type: string
      type: object
      id: UploadFileInfo
    ReportSummaryChartDataDataPoint:
      id: ReportSummaryChartDataDataPoint
      type: object
      description: Describes a single data point in the Chart.
      properties:
        label:
          type: string
          description: The X-axis label for this data point.
        value:
          format: double
          description: The Y-axis value for this data point.
          type: number
    Group:
      type: object
      id: Group
      description: 'A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.'
      properties:
        description:
          type: string
          description: The description of the resource.
        name:
          type: string
          readOnly: true
          description: Output only. The name of the group.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels as key value pairs.
        updateTime:
          format: google-datetime
          description: Output only. The timestamp when the group was last updated.
          readOnly: true
          type: string
        displayName:
          description: User-friendly display name.
          type: string
        createTime:
          description: Output only. The timestamp when the group was created.
          type: string
          format: google-datetime
          readOnly: true
    OpenFileDetails:
      type: object
      id: OpenFileDetails
      properties:
        command:
          description: Opened file command.
          type: string
        fileType:
          description: Opened file file type.
          type: string
        filePath:
          description: Opened file file path.
          type: string
        user:
          type: string
          description: Opened file user.
      description: Open file Information.
    PlatformDetails:
      id: PlatformDetails
      description: Information about the platform.
      type: object
      properties:
        azureVmDetails:
          $ref: '#/components/schemas/AzureVmPlatformDetails'
          description: Azure VM specific details.
        awsEc2Details:
          description: AWS EC2 specific details.
          $ref: '#/components/schemas/AwsEc2PlatformDetails'
        physicalDetails:
          description: Physical machines platform details.
          $ref: '#/components/schemas/PhysicalPlatformDetails'
        vmwareDetails:
          description: VMware specific details.
          $ref: '#/components/schemas/VmwarePlatformDetails'
        genericDetails:
          $ref: '#/components/schemas/GenericPlatformDetails'
          description: Generic platform details.
    ReportSummaryChartData:
      description: Describes a collection of data points rendered as a Chart.
      id: ReportSummaryChartData
      properties:
        dataPoints:
          description: 'Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.'
          items:
            $ref: '#/components/schemas/ReportSummaryChartDataDataPoint'
          type: array
      type: object
    ReportSummaryHistogramChartData:
      description: 'A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.'
      id: ReportSummaryHistogramChartData
      properties:
        buckets:
          type: array
          description: Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
          items:
            $ref: '#/components/schemas/ReportSummaryHistogramChartDataBucket'
      type: object
    ReportSummarySoleTenantNodeAllocation:
      properties:
        node:
          description: 'Sole Tenant node type, e.g. "m3-node-128-3904"'
          $ref: '#/components/schemas/SoleTenantNodeType'
        allocatedAssetCount:
          type: string
          format: int64
          description: Count of assets allocated to these nodes
        nodeCount:
          type: string
          format: int64
          description: Count of this node type to be provisioned
      description: Represents the assets allocated to a specific Sole-Tenant node type.
      id: ReportSummarySoleTenantNodeAllocation
      type: object
    ListAssetsResponse:
      description: Response message for listing assets.
      type: object
      id: ListAssetsResponse
      properties:
        assets:
          items:
            $ref: '#/components/schemas/Asset'
          description: A list of assets.
          type: array
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
    DailyResourceUsageAggregationDisk:
      properties:
        iops:
          description: Disk I/O operations per second.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
      description: Statistical aggregation of disk usage.
      id: DailyResourceUsageAggregationDisk
      type: object
    GuestConfigDetails:
      description: Guest OS config information.
      type: object
      id: GuestConfigDetails
      properties:
        issue:
          description: OS issue (typically /etc/issue in Linux).
          type: string
        nfsExports:
          $ref: '#/components/schemas/NfsExportList'
          description: NFS exports.
        selinuxMode:
          enumDescriptions:
            - SELinux mode unknown or unspecified.
            - SELinux is disabled.
            - SELinux permissive mode.
            - SELinux enforcing mode.
          enum:
            - SE_LINUX_MODE_UNSPECIFIED
            - SE_LINUX_MODE_DISABLED
            - SE_LINUX_MODE_PERMISSIVE
            - SE_LINUX_MODE_ENFORCING
          type: string
          description: Security-Enhanced Linux (SELinux) mode.
        fstab:
          $ref: '#/components/schemas/FstabEntryList'
          description: Mount list (Linux fstab).
        hosts:
          $ref: '#/components/schemas/HostsEntryList'
          description: Hosts file (/etc/hosts).
    ReportSummaryMachineSeriesAllocation:
      id: ReportSummaryMachineSeriesAllocation
      description: Represents a data point tracking the count of assets allocated for a specific Machine Series.
      properties:
        machineSeries:
          description: 'The Machine Series (e.g. "E2", "N2")'
          $ref: '#/components/schemas/MachineSeries'
        allocatedAssetCount:
          description: Count of assets allocated to this machine series.
          format: int64
          type: string
      type: object
    MigrationInsight:
      description: An insight about potential migrations for an asset.
      properties:
        computeEngineTarget:
          $ref: '#/components/schemas/ComputeEngineMigrationTarget'
          description: Output only. A Google Compute Engine target.
          readOnly: true
        fit:
          description: Output only. Description of how well the asset this insight is associated with fits the proposed migration.
          readOnly: true
          $ref: '#/components/schemas/FitDescriptor'
      type: object
      id: MigrationInsight
    AzureVmPlatformDetails:
      properties:
        machineTypeLabel:
          type: string
          description: Azure platform's machine type label.
        location:
          type: string
          description: The location of the machine in the Azure format.
        provisioningState:
          type: string
          description: Azure platform's provisioning state.
      description: Azure VM specific details.
      type: object
      id: AzureVmPlatformDetails
    RunImportJobRequest:
      id: RunImportJobRequest
      properties:
        requestId:
          type: string
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
      description: A request to run an import job.
      type: object
    Date:
      properties:
        year:
          description: 'Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.'
          format: int32
          type: integer
        month:
          format: int32
          description: 'Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.'
          type: integer
        day:
          format: int32
          description: 'Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn''t significant.'
          type: integer
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: Date
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      id: Operation
      properties:
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        done:
          description: 'If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.'
          type: boolean
        name:
          type: string
          description: 'The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.'
        metadata:
          description: 'Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.'
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
        response:
          description: 'The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.'
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    ReportSummaryAssetAggregateStats:
      type: object
      id: ReportSummaryAssetAggregateStats
      properties:
        storageBytesHistogram:
          description: Histogram showing a distribution of memory sizes.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        totalMemoryBytes:
          type: string
          format: int64
          description: Sum of the memory in bytes of all the assets in this collection.
        totalStorageBytes:
          format: int64
          description: Sum of persistent storage in bytes of all the assets in this collection.
          type: string
        storageUtilizationChart:
          description: Total memory split into Used/Free buckets.
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
        memoryBytesHistogram:
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
          description: Histogram showing a distribution of memory sizes.
        coreCountHistogram:
          description: Histogram showing a distribution of CPU core counts.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        totalAssets:
          type: string
          format: int64
          description: Count of the number of unique assets in this collection.
        totalCores:
          description: Sum of the CPU core count of all the assets in this collection.
          format: int64
          type: string
        memoryUtilizationChart:
          description: Total memory split into Used/Free buckets.
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
        operatingSystem:
          description: Count of assets grouped by Operating System families.
          $ref: '#/components/schemas/ReportSummaryChartData'
      description: Aggregate statistics for a collection of assets.
    DailyResourceUsageAggregationStats:
      id: DailyResourceUsageAggregationStats
      type: object
      description: Statistical aggregation of samples for a single resource usage.
      properties:
        peak:
          format: float
          type: number
          description: Peak usage value.
        median:
          description: Median usage value.
          type: number
          format: float
        average:
          description: Average usage value.
          type: number
          format: float
        ninteyFifthPercentile:
          description: 95th percentile usage value.
          format: float
          type: number
    HostsEntryList:
      properties:
        entries:
          items:
            $ref: '#/components/schemas/HostsEntry'
          type: array
          description: Hosts entries.
      type: object
      description: Hosts content.
      id: HostsEntryList
    RemoveAssetsFromGroupRequest:
      type: object
      properties:
        assets:
          $ref: '#/components/schemas/AssetList'
          description: Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.
        allowMissing:
          type: boolean
          description: 'Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.'
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
      id: RemoveAssetsFromGroupRequest
      description: A request to remove assets from a group.
    AggregationResultFrequency:
      id: AggregationResultFrequency
      type: object
      properties:
        values:
          additionalProperties:
            type: string
            format: int64
          type: object
      description: The result of a frequency distribution aggregation.
    ListReportsResponse:
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        reports:
          items:
            $ref: '#/components/schemas/Report'
          type: array
          description: The list of Reports.
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
      type: object
      id: ListReportsResponse
      description: Response message for listing Reports.
    RegionPreferences:
      description: The user preferences relating to target regions.
      properties:
        preferredRegions:
          description: 'A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.'
          items:
            type: string
          type: array
      id: RegionPreferences
      type: object
    HostsEntry:
      properties:
        ip:
          description: 'IP (raw, IPv4/6 agnostic).'
          type: string
        hostNames:
          type: array
          items:
            type: string
          description: List of host names / aliases.
      type: object
      description: Single /etc/hosts entry.
      id: HostsEntry
    NetworkUsageSample:
      description: Network usage sample. Values are across all network interfaces.
      id: NetworkUsageSample
      type: object
      properties:
        averageEgressBps:
          description: Average network egress in B/s sampled over a short window. Must be non-negative.
          format: float
          type: number
        averageIngressBps:
          format: float
          type: number
          description: Average network ingress in B/s sampled over a short window. Must be non-negative.
    VmwarePlatformDetails:
      properties:
        esxVersion:
          type: string
          description: ESX version.
        osid:
          description: 'VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.'
          type: string
        vcenterUri:
          description: vCenter URI used in collection.
          type: string
        vcenterVersion:
          type: string
          description: vCenter version.
        vcenterFolder:
          description: Folder name in vCenter where asset resides.
          type: string
        vcenterVmId:
          description: vCenter VM ID.
          type: string
      type: object
      description: VMware specific details.
      id: VmwarePlatformDetails
    VmwareDiskConfig:
      type: object
      id: VmwareDiskConfig
      description: VMware disk config details.
      properties:
        vmdkMode:
          type: string
          enum:
            - VMDK_MODE_UNSPECIFIED
            - DEPENDENT
            - INDEPENDENT_PERSISTENT
            - INDEPENDENT_NONPERSISTENT
          enumDescriptions:
            - VMDK disk mode unspecified or unknown.
            - Dependent disk mode.
            - Independent - Persistent disk mode.
            - Independent - Nonpersistent disk mode.
          description: VMDK disk mode.
        shared:
          description: Is VMDK shared with other VMs.
          type: boolean
        rdmCompatibility:
          enumDescriptions:
            - Compatibility mode unspecified or unknown.
            - Physical compatibility mode.
            - Virtual compatibility mode.
          enum:
            - RDM_COMPATIBILITY_UNSPECIFIED
            - PHYSICAL_COMPATIBILITY
            - VIRTUAL_COMPATIBILITY
          description: RDM compatibility mode.
          type: string
        backingType:
          enum:
            - BACKING_TYPE_UNSPECIFIED
            - BACKING_TYPE_FLAT_V1
            - BACKING_TYPE_FLAT_V2
            - BACKING_TYPE_PMEM
            - BACKING_TYPE_RDM_V1
            - BACKING_TYPE_RDM_V2
            - BACKING_TYPE_SESPARSE
            - BACKING_TYPE_SESPARSE_V1
            - BACKING_TYPE_SESPARSE_V2
          enumDescriptions:
            - Default value.
            - Flat v1.
            - Flat v2.
            - 'Persistent memory, also known as Non-Volatile Memory (NVM).'
            - Raw Disk Memory v1.
            - Raw Disk Memory v2.
            - SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.
            - SEsparse v1.
            - SEsparse v1.
          description: VMDK backing type.
          type: string
    DiskPartitionList:
      id: DiskPartitionList
      properties:
        entries:
          description: Partition entries.
          items:
            $ref: '#/components/schemas/DiskPartition'
          type: array
      type: object
      description: Disk partition list.
    MachineDiskDetails:
      properties:
        disks:
          description: List of disks.
          $ref: '#/components/schemas/DiskEntryList'
        totalFreeBytes:
          type: string
          description: Total disk free space.
          format: int64
        totalCapacityBytes:
          type: string
          description: Disk total Capacity.
          format: int64
      type: object
      description: Details of machine disks.
      id: MachineDiskDetails
    AddAssetsToGroupRequest:
      description: A request to add assets to a group.
      properties:
        assets:
          $ref: '#/components/schemas/AssetList'
          description: Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.
        allowExisting:
          type: boolean
          description: 'Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.'
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
      id: AddAssetsToGroupRequest
      type: object
    ReportSummaryGroupPreferenceSetFinding:
      properties:
        computeEngineFinding:
          $ref: '#/components/schemas/ReportSummaryComputeEngineFinding'
          description: A set of findings that applies to Compute Engine machines in the input.
        description:
          description: Description for the Preference Set.
          type: string
        monthlyCostOsLicense:
          $ref: '#/components/schemas/Money'
          description: Licensing monthly cost for this preference set.
        monthlyCostNetworkEgress:
          $ref: '#/components/schemas/Money'
          description: Network Egress monthly cost for this preference set.
        monthlyCostTotal:
          $ref: '#/components/schemas/Money'
          description: Total monthly cost for this preference set.
        monthlyCostStorage:
          $ref: '#/components/schemas/Money'
          description: Storage monthly cost for this preference set.
        displayName:
          type: string
          description: Display Name of the Preference Set
        monthlyCostOther:
          $ref: '#/components/schemas/Money'
          description: Miscellaneous monthly cost for this preference set.
        monthlyCostCompute:
          description: Compute monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        vmwareEngineFinding:
          $ref: '#/components/schemas/ReportSummaryVmwareEngineFinding'
          description: A set of findings that applies to VMWare machines in the input.
        soleTenantFinding:
          description: A set of findings that applies to Sole-Tenant machines in the input.
          $ref: '#/components/schemas/ReportSummarySoleTenantFinding'
        machinePreferences:
          description: A set of preferences that applies to all machines in the context.
          $ref: '#/components/schemas/VirtualMachinePreferences'
      type: object
      id: ReportSummaryGroupPreferenceSetFinding
      description: Summary Findings for a specific Group/PreferenceSet combination.
    ReportSummaryVmwareEngineFinding:
      id: ReportSummaryVmwareEngineFinding
      properties:
        nodeAllocations:
          description: Set of per-nodetype allocation records
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryVmwareNodeAllocation'
        allocatedRegions:
          type: array
          description: Set of regions in which the assets were allocated
          items:
            type: string
        allocatedAssetCount:
          description: Count of assets which are allocated
          format: int64
          type: string
      type: object
      description: A set of findings that applies to assets destined for VMWare Engine.
    Source:
      properties:
        errorFrameCount:
          type: integer
          format: int32
          readOnly: true
          description: Output only. The number of frames that were reported by the source and contained errors.
        managed:
          description: 'If `true`, the source is managed by other service(s).'
          type: boolean
        priority:
          type: integer
          format: int32
          description: 'The information confidence of the source. The higher the value, the higher the confidence.'
        updateTime:
          format: google-datetime
          type: string
          description: Output only. The timestamp when the source was last updated.
          readOnly: true
        pendingFrameCount:
          description: Output only. Number of frames that are still being processed.
          format: int32
          type: integer
          readOnly: true
        state:
          type: string
          description: Output only. The state of the source.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETING
            - INVALID
          enumDescriptions:
            - Unspecified.
            - The source is active and ready to be used.
            - In the process of being deleted.
            - Source is in an invalid state. Asset frames reported to it will be ignored.
          readOnly: true
        displayName:
          type: string
          description: User-friendly display name.
        type:
          description: Data source type.
          enumDescriptions:
            - Unspecified
            - Manually uploaded file (e.g. CSV)
            - Guest-level info
            - Inventory-level scan
            - Third-party owned sources.
          enum:
            - SOURCE_TYPE_UNKNOWN
            - SOURCE_TYPE_UPLOAD
            - SOURCE_TYPE_GUEST_OS_SCAN
            - SOURCE_TYPE_INVENTORY_SCAN
            - SOURCE_TYPE_CUSTOM
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. The full name of the source.
        description:
          type: string
          description: Free-text description.
        createTime:
          format: google-datetime
          type: string
          readOnly: true
          description: Output only. The timestamp when the source was created.
      description: Source represents an object from which asset information is streamed to Migration Center.
      id: Source
      type: object
    Location:
      type: object
      properties:
        displayName:
          description: 'The friendly name for this location, typically a nearby city name. For example, "Tokyo".'
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        metadata:
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
      description: A resource that represents a Google Cloud location.
      id: Location
    AggregateAssetsValuesResponse:
      id: AggregateAssetsValuesResponse
      type: object
      properties:
        results:
          description: The aggregation results.
          items:
            $ref: '#/components/schemas/AggregationResult'
          type: array
      description: A response to a request to aggregated assets values.
    NetworkAddressList:
      type: object
      properties:
        entries:
          items:
            $ref: '#/components/schemas/NetworkAddress'
          description: Network address entries.
          type: array
      description: List of allocated/assigned network addresses.
      id: NetworkAddressList
    VirtualMachinePreferences:
      type: object
      id: VirtualMachinePreferences
      description: 'VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.'
      properties:
        targetProduct:
          enum:
            - COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
            - COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
          description: 'Target product for assets using this preference set. Specify either target product or business goal, but not both.'
          enumDescriptions:
            - Unspecified (default value).
            - Prefer to migrate to Google Cloud Compute Engine.
            - Prefer to migrate to Google Cloud VMware Engine.
            - Prefer to migrate to Google Cloud Sole Tenant Nodes.
          type: string
        regionPreferences:
          description: 'Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.'
          $ref: '#/components/schemas/RegionPreferences'
        soleTenancyPreferences:
          description: Preferences concerning Sole Tenant nodes and virtual machines.
          $ref: '#/components/schemas/SoleTenancyPreferences'
        computeEnginePreferences:
          description: Compute Engine preferences concern insights and recommendations for Compute Engine target.
          $ref: '#/components/schemas/ComputeEnginePreferences'
        sizingOptimizationStrategy:
          enumDescriptions:
            - Unspecified (default value).
            - 'No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data.'
            - 'Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with.'
            - 'Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs.'
          enum:
            - SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
            - SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
            - SIZING_OPTIMIZATION_STRATEGY_MODERATE
            - SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
          type: string
          description: 'Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.'
        vmwareEnginePreferences:
          description: Preferences concerning insights and recommendations for Google Cloud VMware Engine.
          $ref: '#/components/schemas/VmwareEnginePreferences'
        commitmentPlan:
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan.
            - 1 year commitment.
            - 3 years commitment.
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - COMMITMENT_PLAN_NONE
            - COMMITMENT_PLAN_ONE_YEAR
            - COMMITMENT_PLAN_THREE_YEARS
          type: string
    ImportError:
      properties:
        severity:
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: The severity of the error.
          type: string
        errorDetails:
          type: string
          description: The error information.
      type: object
      id: ImportError
      description: A resource that reports the errors encountered while processing an import job.
    ListGroupsResponse:
      id: ListGroupsResponse
      properties:
        groups:
          type: array
          description: The list of Group
          items:
            $ref: '#/components/schemas/Group'
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
      description: A response for listing groups.
      type: object
    DailyResourceUsageAggregationNetwork:
      description: Statistical aggregation of network usage.
      id: DailyResourceUsageAggregationNetwork
      properties:
        ingressBps:
          description: Network ingress in B/s.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
        egressBps:
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
          description: Network egress in B/s.
      type: object
    ErrorFrame:
      properties:
        originalFrame:
          description: Output only. The frame that was originally reported.
          $ref: '#/components/schemas/AssetFrame'
          readOnly: true
        ingestionTime:
          readOnly: true
          description: Output only. Frame ingestion time.
          format: google-datetime
          type: string
        violations:
          type: array
          description: Output only. All the violations that were detected for the frame.
          items:
            $ref: '#/components/schemas/FrameViolationEntry'
          readOnly: true
        name:
          readOnly: true
          type: string
          description: Output only. The identifier of the ErrorFrame.
      description: Message representing a frame which failed to be processed due to an error.
      type: object
      id: ErrorFrame
    ReportConfigGroupPreferenceSetAssignment:
      id: ReportConfigGroupPreferenceSetAssignment
      type: object
      description: Represents a combination of a group with a preference set.
      properties:
        group:
          type: string
          description: Required. Name of the group.
        preferenceSet:
          description: Required. Name of the Preference Set.
          type: string
    GenericPlatformDetails:
      type: object
      description: Generic platform details.
      properties:
        location:
          type: string
          description: Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.
      id: GenericPlatformDetails
    NetworkConnectionList:
      type: object
      id: NetworkConnectionList
      description: Network connection list.
      properties:
        entries:
          description: Network connection entries.
          items:
            $ref: '#/components/schemas/NetworkConnection'
          type: array
    NetworkAddress:
      type: object
      description: Details of network address.
      properties:
        ipAddress:
          description: Assigned or configured IP Address.
          type: string
        bcast:
          description: Broadcast address.
          type: string
        assignment:
          type: string
          description: Whether DHCP is used to assign addresses.
          enumDescriptions:
            - Unknown (default value).
            - Staticly assigned IP.
            - Dynamically assigned IP (DHCP).
          enum:
            - ADDRESS_ASSIGNMENT_UNSPECIFIED
            - ADDRESS_ASSIGNMENT_STATIC
            - ADDRESS_ASSIGNMENT_DHCP
        subnetMask:
          description: Subnet mask.
          type: string
        fqdn:
          description: Fully qualified domain name.
          type: string
      id: NetworkAddress
    PerformanceSample:
      type: object
      properties:
        network:
          description: Network usage sample.
          $ref: '#/components/schemas/NetworkUsageSample'
        disk:
          description: Disk usage sample.
          $ref: '#/components/schemas/DiskUsageSample'
        cpu:
          $ref: '#/components/schemas/CpuUsageSample'
          description: CPU usage sample.
        memory:
          $ref: '#/components/schemas/MemoryUsageSample'
          description: Memory usage sample.
        sampleTime:
          format: google-datetime
          type: string
          description: 'Time the sample was If omitted, the frame report time will be used.'
      description: Performance data sample.
      id: PerformanceSample
    MachineSeries:
      properties:
        code:
          description: 'Code to identify a Compute Engine machine series. Consult https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison for more details on the available series.'
          type: string
      id: MachineSeries
      description: A Compute Engine machine series.
      type: object
    MachinePreferences:
      properties:
        allowedMachineSeries:
          description: 'Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.'
          type: array
          items:
            $ref: '#/components/schemas/MachineSeries'
      type: object
      description: The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
      id: MachinePreferences
    DailyResourceUsageAggregationCPU:
      description: Statistical aggregation of CPU usage.
      properties:
        utilizationPercentage:
          description: CPU utilization percentage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
      type: object
      id: DailyResourceUsageAggregationCPU
    ListReportConfigsResponse:
      description: Response message for listing report configs.
      properties:
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        reportConfigs:
          type: array
          items:
            $ref: '#/components/schemas/ReportConfig'
          description: A list of report configs.
      type: object
      id: ListReportConfigsResponse
    ImportDataFile:
      properties:
        format:
          enum:
            - IMPORT_JOB_FORMAT_UNSPECIFIED
            - IMPORT_JOB_FORMAT_RVTOOLS_XLSX
            - IMPORT_JOB_FORMAT_RVTOOLS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV
            - IMPORT_JOB_FORMAT_STRATOZONE_CSV
          enumDescriptions:
            - Default value.
            - RVTools format (XLSX).
            - RVTools format (CSV).
            - CSV format exported from AWS using the AWS collection script.
            - CSV format exported from Azure using the Azure collection script.
            - 'CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables.'
          description: Required. The payload format.
          type: string
        createTime:
          readOnly: true
          format: google-datetime
          type: string
          description: Output only. The timestamp when the file was created.
        name:
          description: Output only. The name of the file.
          type: string
          readOnly: true
        uploadFileInfo:
          description: Information about a file that is uploaded to a storage service.
          $ref: '#/components/schemas/UploadFileInfo'
        state:
          type: string
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
          enumDescriptions:
            - Default value.
            - The data file is being created.
            - The data file completed initialization.
          readOnly: true
          description: Output only. The state of the import data file.
        displayName:
          type: string
          description: User-friendly display name. Maximum length is 63 characters.
      id: ImportDataFile
      description: A resource that represents a payload file in an import job.
      type: object
    CpuUsageSample:
      description: CPU usage sample.
      properties:
        utilizedPercentage:
          type: number
          description: 'Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.'
          format: float
      type: object
      id: CpuUsageSample
    AggregationResultSum:
      type: object
      properties:
        value:
          format: double
          type: number
      description: The result of a sum aggregation.
      id: AggregationResultSum
    SoleTenancyPreferences:
      type: object
      id: SoleTenancyPreferences
      description: Preferences concerning Sole Tenancy nodes and VMs.
      properties:
        commitmentPlan:
          description: 'Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.'
          type: string
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR
            - COMMITMENT_3_YEAR
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment.
            - 3 years commitment.
        nodeTypes:
          items:
            $ref: '#/components/schemas/SoleTenantNodeType'
          type: array
          description: A list of sole tenant node types. An empty list means that all possible node types will be considered.
        hostMaintenancePolicy:
          enumDescriptions:
            - Unspecified host maintenance policy.
            - Default host maintenance policy.
            - Restart in place host maintenance policy.
            - Migrate within node group host maintenance policy.
          type: string
          enum:
            - HOST_MAINTENANCE_POLICY_UNSPECIFIED
            - HOST_MAINTENANCE_POLICY_DEFAULT
            - HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
            - HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
          description: Sole Tenancy nodes maintenance policy.
        cpuOvercommitRatio:
          type: number
          format: double
          description: CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
    AggregationResultHistogramBucket:
      properties:
        upperBound:
          format: double
          type: number
          description: Upper bound - exclusive.
        lowerBound:
          type: number
          format: double
          description: Lower bound - inclusive.
        count:
          format: int64
          type: string
          description: Count of items in the bucket.
      type: object
      id: AggregationResultHistogramBucket
      description: 'A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.'
    AssetFrame:
      type: object
      properties:
        traceToken:
          type: string
          description: Optional. Trace token is optionally provided to assist with debugging and traceability.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels as key value pairs.
        machineDetails:
          $ref: '#/components/schemas/MachineDetails'
          description: Asset information specific for virtual machines.
        performanceSamples:
          items:
            $ref: '#/components/schemas/PerformanceSample'
          type: array
          description: Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Generic asset attributes.
        reportTime:
          description: The time the data was reported.
          type: string
          format: google-datetime
      description: Contains data reported from an inventory source on an asset.
      id: AssetFrame
    FrameViolationEntry:
      type: object
      id: FrameViolationEntry
      description: A resource that contains a single violation of a reported `AssetFrame` resource.
      properties:
        violation:
          description: A message describing the violation.
          type: string
        field:
          type: string
          description: The field of the original frame where the violation occurred.
    ReportSummaryVmwareNodeAllocation:
      id: ReportSummaryVmwareNodeAllocation
      type: object
      properties:
        allocatedAssetCount:
          format: int64
          type: string
          description: Count of assets allocated to these nodes
        vmwareNode:
          description: 'VMWare node type, e.g. "ve1-standard-72"'
          $ref: '#/components/schemas/ReportSummaryVmwareNode'
        nodeCount:
          format: int64
          description: Count of this node type to be provisioned
          type: string
      description: Represents assets allocated to a specific VMWare Node type.
    ValidationReport:
      description: A resource that aggregates errors across import job files.
      id: ValidationReport
      type: object
      properties:
        fileValidations:
          type: array
          items:
            $ref: '#/components/schemas/FileValidationReport'
          description: List of errors found in files.
        jobErrors:
          items:
            $ref: '#/components/schemas/ImportError'
          type: array
          description: List of job level errors.
    ValidateImportJobRequest:
      description: A request to validate an import job.
      type: object
      id: ValidateImportJobRequest
      properties:
        requestId:
          description: 'Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).'
          type: string
    MachineDetails:
      properties:
        platform:
          description: Platform specific information.
          $ref: '#/components/schemas/PlatformDetails'
        machineName:
          description: Machine name.
          type: string
        guestOs:
          $ref: '#/components/schemas/GuestOsDetails'
          description: Guest OS information.
        memoryMb:
          description: The amount of memory in the machine. Must be non-negative.
          format: int32
          type: integer
        network:
          $ref: '#/components/schemas/MachineNetworkDetails'
          description: Network details.
        createTime:
          description: Machine creation time.
          format: google-datetime
          type: string
        uuid:
          type: string
          description: Machine unique identifier.
        powerState:
          type: string
          enum:
            - POWER_STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - SUSPENDING
            - SUSPENDED
            - DELETING
            - DELETED
          enumDescriptions:
            - Power state is unknown.
            - 'The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state.'
            - The machine is active.
            - The machine is being turned off.
            - The machine is off.
            - The machine is being deleted from the hosting platform.
            - The machine is deleted from the hosting platform.
          description: Power state of the machine.
        coreCount:
          format: int32
          type: integer
          description: Number of CPU cores in the machine. Must be non-negative.
        disks:
          description: Disk details.
          $ref: '#/components/schemas/MachineDiskDetails'
        architecture:
          description: 'Architecture details (vendor, CPU architecture).'
          $ref: '#/components/schemas/MachineArchitectureDetails'
      description: Details of a machine.
      id: MachineDetails
      type: object
    Settings:
      description: Describes the Migration Center settings related to the project.
      type: object
      properties:
        name:
          description: Output only. The name of the resource.
          type: string
          readOnly: true
        preferenceSet:
          description: The preference set used by default for a project.
          type: string
      id: Settings
    AggregationHistogram:
      properties:
        lowerBounds:
          description: Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.
          type: array
          items:
            format: double
            type: number
      type: object
      description: Histogram of bucketed assets counts by field value.
      id: AggregationHistogram
    DiskEntry:
      properties:
        hwAddress:
          type: string
          description: 'Disk hardware address (e.g. 0:1 for SCSI).'
        interfaceType:
          description: Disks interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - IDE
            - SATA
            - SAS
            - SCSI
            - NVME
            - FC
            - ISCSI
          enumDescriptions:
            - Interface type unknown or unspecified.
            - IDE interface type.
            - SATA interface type.
            - SAS interface type.
            - SCSI interface type.
            - NVME interface type.
            - FC interface type.
            - iSCSI interface type.
          type: string
        vmware:
          $ref: '#/components/schemas/VmwareDiskConfig'
          description: VMware disk details.
        diskLabelType:
          type: string
          description: Disk label type (e.g. BIOS/GPT)
        diskLabel:
          description: Disk label.
          type: string
        capacityBytes:
          type: string
          format: int64
          description: Disk capacity.
        freeBytes:
          type: string
          format: int64
          description: Disk free space.
        partitions:
          $ref: '#/components/schemas/DiskPartitionList'
          description: Partition layout.
      type: object
      description: Single disk entry.
      id: DiskEntry
    Insight:
      type: object
      id: Insight
      properties:
        genericInsight:
          description: Output only. A generic insight about an asset
          $ref: '#/components/schemas/GenericInsight'
          readOnly: true
        migrationInsight:
          $ref: '#/components/schemas/MigrationInsight'
          description: Output only. An insight about potential migrations for an asset.
          readOnly: true
      description: An insight about an asset.
    ListPreferenceSetsResponse:
      id: ListPreferenceSetsResponse
      description: Response message for listing preference sets.
      properties:
        preferenceSets:
          items:
            $ref: '#/components/schemas/PreferenceSet'
          type: array
          description: The list of PreferenceSets
        nextPageToken:
          type: string
          description: A token identifying a page of results the server should return.
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
      type: object
    Money:
      properties:
        nanos:
          type: integer
          description: 'Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.'
          format: int32
        currencyCode:
          type: string
          description: The three-letter currency code defined in ISO 4217.
        units:
          type: string
          format: int64
          description: 'The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.'
      id: Money
      type: object
      description: Represents an amount of money with its currency type.
    ReportAssetFramesResponse:
      id: ReportAssetFramesResponse
      properties: {}
      description: A response to a call to `ReportAssetFrame`.
      type: object
    DailyResourceUsageAggregationMemory:
      type: object
      properties:
        utilizationPercentage:
          description: Memory utilization percentage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
      description: Statistical aggregation of memory usage.
      id: DailyResourceUsageAggregationMemory
    MemoryUsageSample:
      id: MemoryUsageSample
      type: object
      properties:
        utilizedPercentage:
          format: float
          description: 'Percentage of system memory utilized. Must be in the interval [0, 100].'
          type: number
      description: Memory usage sample.
    NetworkConnection:
      properties:
        localIpAddress:
          description: Local IP address.
          type: string
        pid:
          type: string
          description: Process ID.
          format: int64
        processName:
          type: string
          description: Process or service name.
        remotePort:
          format: int32
          type: integer
          description: Remote port.
        state:
          type: string
          description: Network connection state.
          enumDescriptions:
            - Connection state is unknown or unspecified.
            - The connection is being opened.
            - The connection is open.
            - Listening for incoming connections.
            - The connection is being closed.
            - The connection is closed.
          enum:
            - STATE_UNSPECIFIED
            - OPENING
            - OPEN
            - LISTEN
            - CLOSING
            - CLOSED
        remoteIpAddress:
          type: string
          description: Remote IP address.
        protocol:
          type: string
          description: Connection protocol (e.g. TCP/UDP).
        localPort:
          format: int32
          type: integer
          description: Local port.
      type: object
      id: NetworkConnection
    AwsEc2PlatformDetails:
      properties:
        machineTypeLabel:
          type: string
          description: AWS platform's machine type label.
        location:
          description: The location of the machine in the AWS format.
          type: string
      id: AwsEc2PlatformDetails
      description: AWS EC2 specific details.
      type: object
    RunningService:
      id: RunningService
      properties:
        serviceName:
          type: string
          description: Service name.
        exePath:
          description: Service binary path.
          type: string
        pid:
          description: Service pid.
          format: int64
          type: string
        cmdline:
          description: Service command line.
          type: string
        state:
          description: Service state (OS-agnostic).
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - STOPPED
          enumDescriptions:
            - Service state unspecified.
            - Service is active.
            - Service is paused.
            - Service is stopped.
        startMode:
          description: Service start mode (OS-agnostic).
          enumDescriptions:
            - Start mode unspecified.
            - The service is a device driver started by the system loader.
            - The service is a device driver started by the IOInitSystem function.
            - 'The service is started by the operating system, at system start-up'
            - 'The service is started only manually, by a user.'
            - The service is disabled.
          type: string
          enum:
            - START_MODE_UNSPECIFIED
            - BOOT
            - SYSTEM
            - AUTO
            - MANUAL
            - DISABLED
      type: object
      description: Guest OS running service details.
    Asset:
      type: object
      description: An asset represents a resource in your environment. Asset types include virtual machines and databases.
      id: Asset
      properties:
        machineDetails:
          $ref: '#/components/schemas/MachineDetails'
          description: Output only. Asset information specific for virtual and physical machines.
          readOnly: true
        updateTime:
          description: Output only. The timestamp when the asset was last updated.
          type: string
          readOnly: true
          format: google-datetime
        name:
          description: Output only. The full name of the asset.
          readOnly: true
          type: string
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        assignedGroups:
          items:
            type: string
          description: Output only. The list of groups that the asset is assigned to.
          type: array
          readOnly: true
        attributes:
          description: Generic asset attributes.
          additionalProperties:
            type: string
          type: object
        performanceData:
          $ref: '#/components/schemas/AssetPerformanceData'
          readOnly: true
          description: Output only. Performance data for the asset.
        createTime:
          format: google-datetime
          description: Output only. The timestamp when the asset was created.
          type: string
          readOnly: true
        insightList:
          description: Output only. The list of insights associated with the asset.
          $ref: '#/components/schemas/InsightList'
          readOnly: true
        sources:
          items:
            type: string
          readOnly: true
          type: array
          description: Output only. The list of sources contributing to the asset.
    ReportSummaryHistogramChartDataBucket:
      description: 'A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.'
      type: object
      properties:
        lowerBound:
          format: int64
          type: string
          description: Lower bound - inclusive.
        upperBound:
          format: int64
          type: string
          description: Upper bound - exclusive.
        count:
          format: int64
          type: string
          description: Count of items in the bucket.
      id: ReportSummaryHistogramChartDataBucket
    OpenFileList:
      description: Open file list.
      properties:
        entries:
          description: Open file details entries.
          items:
            $ref: '#/components/schemas/OpenFileDetails'
          type: array
      type: object
      id: OpenFileList
    ListOperationsResponse:
      id: ListOperationsResponse
      type: object
      properties:
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Operations.ListOperations.
    Report:
      description: Report represents a point-in-time rendering of the ReportConfig results.
      properties:
        updateTime:
          type: string
          description: Output only. Last update timestamp.
          format: google-datetime
          readOnly: true
        name:
          type: string
          description: Output only. Name of resource.
          readOnly: true
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        state:
          type: string
          enumDescriptions:
            - Default Report creation state.
            - Creating Report.
            - Successfully created Report.
            - Failed to create Report.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
          description: Report creation state.
        summary:
          description: Output only. Summary view of the Report.
          readOnly: true
          $ref: '#/components/schemas/ReportSummary'
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          format: google-datetime
          type: string
        type:
          enum:
            - TYPE_UNSPECIFIED
            - TOTAL_COST_OF_OWNERSHIP
          enumDescriptions:
            - Default Report type.
            - Total cost of ownership Report type.
          description: Report type.
          type: string
        description:
          type: string
          description: Free-text description.
      id: Report
      type: object
    AggregationCount:
      description: Object count.
      type: object
      properties: {}
      id: AggregationCount
    GuestInstalledApplication:
      description: Guest installed application information.
      type: object
      properties:
        installTime:
          format: google-datetime
          type: string
          description: The time when the application was installed.
        version:
          description: Installed application version.
          type: string
        vendor:
          description: Installed application vendor.
          type: string
        path:
          type: string
          description: Source path.
        applicationName:
          type: string
          description: Installed application name.
      id: GuestInstalledApplication
    ReportSummarySoleTenantFinding:
      description: A set of findings that applies to assets destined for Sole-Tenant nodes.
      id: ReportSummarySoleTenantFinding
      type: object
      properties:
        allocatedAssetCount:
          format: int64
          description: Count of assets which are allocated
          type: string
        nodeAllocations:
          type: array
          items:
            $ref: '#/components/schemas/ReportSummarySoleTenantNodeAllocation'
          description: Set of per-nodetype allocation records
        allocatedRegions:
          type: array
          items:
            type: string
          description: Set of regions in which the assets are allocated
    ListImportJobsResponse:
      type: object
      id: ListImportJobsResponse
      description: A response for listing import jobs.
      properties:
        importJobs:
          items:
            $ref: '#/components/schemas/ImportJob'
          description: The list of import jobs.
          type: array
        unreachable:
          items:
            type: string
          type: array
          description: Locations that could not be reached.
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
    Aggregation:
      properties:
        histogram:
          $ref: '#/components/schemas/AggregationHistogram'
          description: Creates a bucketed histogram of field values.
        sum:
          description: Sum over a numeric field.
          $ref: '#/components/schemas/AggregationSum'
        field:
          type: string
          description: The name of the field on which to aggregate.
        count:
          description: Count the number of matching objects.
          $ref: '#/components/schemas/AggregationCount'
        frequency:
          description: Creates a frequency distribution of all field values.
          $ref: '#/components/schemas/AggregationFrequency'
      type: object
      id: Aggregation
      description: 'Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.'
    ReportSummaryUtilizationChartData:
      id: ReportSummaryUtilizationChartData
      properties:
        used:
          description: Aggregate value which falls into the "Used" bucket.
          format: int64
          type: string
        free:
          description: Aggregate value which falls into the "Free" bucket.
          type: string
          format: int64
      type: object
      description: Utilization Chart is a specific type of visualization which displays a metric classified into "Used" and "Free" buckets.
    Status:
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      type: object
      properties:
        message:
          type: string
          description: 'A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.'
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          description: 'The status code, which should be an enum value of google.rpc.Code.'
          type: integer
          format: int32
    RunningProcess:
      id: RunningProcess
      properties:
        attributes:
          description: Process extended attributes.
          type: object
          additionalProperties:
            type: string
        user:
          type: string
          description: User running the process.
        pid:
          description: Process ID.
          format: int64
          type: string
        exePath:
          description: Process binary path.
          type: string
        cmdline:
          type: string
          description: Process full command line.
      description: Guest OS running process details.
      type: object
    AssetPerformanceData:
      type: object
      id: AssetPerformanceData
      properties:
        dailyResourceUsageAggregations:
          items:
            $ref: '#/components/schemas/DailyResourceUsageAggregation'
          type: array
          description: 'Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.'
      description: Performance data for an asset.
    SoleTenantNodeType:
      id: SoleTenantNodeType
      properties:
        nodeName:
          type: string
          description: 'Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes'
      description: A Sole Tenant node type.
      type: object
    AggregationResult:
      properties:
        sum:
          $ref: '#/components/schemas/AggregationResultSum'
        histogram:
          $ref: '#/components/schemas/AggregationResultHistogram'
        field:
          type: string
        frequency:
          $ref: '#/components/schemas/AggregationResultFrequency'
        count:
          $ref: '#/components/schemas/AggregationResultCount'
      description: Message describing a result of an aggregation.
      type: object
      id: AggregationResult
  parameters:
    uploadType:
      description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
      in: query
      name: quotaUser
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: 'Upload protocol for media (e.g. "raw", "multipart").'
      in: query
      name: upload_protocol
      schema:
        type: string
  x-stackQL-resources:
    settings:
      id: google.migrationcenter.settings
      name: settings
      title: Settings
      methods:
        update_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_settings:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
    locations:
      id: google.migrationcenter.locations
      name: locations
      title: Locations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    error_frames:
      id: google.migrationcenter.error_frames
      name: error_frames
      title: Error Frames
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.errorFrames
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames~1{errorFramesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/list'
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/get'
        insert: []
        update: []
        delete: []
    sources:
      id: google.migrationcenter.sources
      name: sources
      title: Sources
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sources
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources/methods/list'
          - $ref: '#/components/x-stackQL-resources/sources/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/sources/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sources/methods/delete'
    report_configs:
      id: google.migrationcenter.report_configs
      name: report_configs
      title: Report Configs
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reportConfigs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/list'
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/delete'
    reports:
      id: google.migrationcenter.reports
      name: reports
      title: Reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reports
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
          - $ref: '#/components/x-stackQL-resources/reports/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/reports/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reports/methods/delete'
    operations:
      id: google.migrationcenter.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    assets:
      id: google.migrationcenter.assets
      name: assets
      title: Assets
      methods:
        report_asset_frames:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:reportAssetFrames/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        aggregate_values:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:aggregateValues/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchUpdate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/get'
          - $ref: '#/components/x-stackQL-resources/assets/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/delete'
    import_jobs:
      id: google.migrationcenter.import_jobs
      name: import_jobs
      title: Import Jobs
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importJobs
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:run/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/delete'
    import_data_files:
      id: google.migrationcenter.import_data_files
      name: import_data_files
      title: Import Data Files
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importDataFiles
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/delete'
    groups_assets:
      id: google.migrationcenter.groups_assets
      name: groups_assets
      title: Groups Assets
      methods:
        add_assets:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:addAssets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_assets:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:removeAssets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    groups:
      id: google.migrationcenter.groups
      name: groups
      title: Groups
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    preference_sets:
      id: google.migrationcenter.preference_sets
      name: preference_sets
      title: Preference Sets
      methods:
        create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.preferenceSets
        _list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/list'
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/delete'
paths:
  '/v1/projects/{projectsId}/locations/{locationsId}/settings':
    parameters: &ref_1
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
    patch:
      description: Updates the regional-level project settings.
      operationId: migrationcenter.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: update_settings
      x-stackQL-verb: exec
    get:
      description: Gets the details of regional settings.
      operationId: migrationcenter.projects.locations.getSettings
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-method: get_settings
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}':
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: migrationcenter.projects.locations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations':
    parameters: *ref_1
    get:
      description: Lists information about the supported locations for this service.
      operationId: migrationcenter.projects.locations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.locations
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames':
    parameters: *ref_1
    get:
      description: Lists all error frames in a given source and location.
      operationId: migrationcenter.projects.locations.sources.errorFrames.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListErrorFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: error_frames
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.errorFrames
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}':
    parameters: *ref_1
    get:
      description: Gets the details of an error frame.
      operationId: migrationcenter.projects.locations.sources.errorFrames.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorFrame'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: errorFramesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: error_frames
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/sources':
    parameters: *ref_1
    get:
      description: Lists all the sources in a given project and location.
      operationId: migrationcenter.projects.locations.sources.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.sources
    post:
      description: Creates a new source in a given project and location.
      operationId: migrationcenter.projects.locations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sourceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a source.
      operationId: migrationcenter.projects.locations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a source.
      operationId: migrationcenter.projects.locations.sources.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a source.
      operationId: migrationcenter.projects.locations.sources.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
      x-stackQL-resource: sources
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs':
    parameters: *ref_1
    post:
      description: Creates a report configuration.
      operationId: migrationcenter.projects.locations.reportConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: reportConfigId
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists ReportConfigs in a given project and location.
      operationId: migrationcenter.projects.locations.reportConfigs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.reportConfigs
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}':
    parameters: *ref_1
    get:
      description: Gets details of a single ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: get
      x-stackQL-verb: select
    delete:
      description: Deletes a ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: report_configs
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports':
    parameters: *ref_1
    get:
      description: Lists Reports in a given ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.reports
    post:
      description: Creates a report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: reportId
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}':
    parameters: *ref_1
    delete:
      description: Deletes a Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets details of a single Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: reports
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations':
    parameters: *ref_1
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`.'
      operationId: migrationcenter.projects.locations.operations.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.operations
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}':
    parameters: *ref_1
    delete:
      description: 'Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.'
      operationId: migrationcenter.projects.locations.operations.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: migrationcenter.projects.locations.operations.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel':
    parameters: *ref_1
    post:
      description: 'Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn''t support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.'
      operationId: migrationcenter.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-method: cancel
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames':
    parameters: *ref_1
    post:
      description: Reports a set of frames.
      operationId: migrationcenter.projects.locations.assets.reportAssetFrames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frames'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportAssetFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: report_asset_frames
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}':
    parameters: *ref_1
    get:
      description: Gets the details of an asset.
      operationId: migrationcenter.projects.locations.assets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of an asset.
      operationId: migrationcenter.projects.locations.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes an asset.
      operationId: migrationcenter.projects.locations.assets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues':
    parameters: *ref_1
    post:
      description: Aggregates the requested fields based on provided function.
      operationId: migrationcenter.projects.locations.assets.aggregateValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateAssetsValuesRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateAssetsValuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: aggregate_values
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets':
    parameters: *ref_1
    get:
      description: Lists all the assets in a given project and location.
      operationId: migrationcenter.projects.locations.assets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: assets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.assets
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate':
    parameters: *ref_1
    post:
      description: Updates the parameters of a list of assets.
      operationId: migrationcenter.projects.locations.assets.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateAssetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: batch_update
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete':
    parameters: *ref_1
    post:
      description: Deletes list of Assets.
      operationId: migrationcenter.projects.locations.assets.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteAssetsRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: assets
      x-stackQL-method: batch_delete
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}':
    parameters: *ref_1
    delete:
      description: Deletes an import job.
      operationId: migrationcenter.projects.locations.importJobs.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of an import job.
      operationId: migrationcenter.projects.locations.importJobs.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates an import job.
      operationId: migrationcenter.projects.locations.importJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs':
    parameters: *ref_1
    get:
      description: Lists all import jobs.
      operationId: migrationcenter.projects.locations.importJobs.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.importJobs
    post:
      description: Creates an import job.
      operationId: migrationcenter.projects.locations.importJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: importJobId
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: create
      x-stackQL-verb: insert
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run':
    parameters: *ref_1
    post:
      description: Runs an import job.
      operationId: migrationcenter.projects.locations.importJobs.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunImportJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: run
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate':
    parameters: *ref_1
    post:
      description: Validates an import job.
      operationId: migrationcenter.projects.locations.importJobs.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateImportJobRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_jobs
      x-stackQL-method: validate
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}':
    parameters: *ref_1
    delete:
      description: Delete an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportDataFile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: get
      x-stackQL-verb: select
  '/v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles':
    parameters: *ref_1
    post:
      description: Creates an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDataFile'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: importDataFileId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: List import data files.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportDataFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: import_data_files
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.importDataFiles
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets':
    parameters: *ref_1
    post:
      description: Adds assets to a group.
      operationId: migrationcenter.projects.locations.groups.addAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAssetsToGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_assets
      x-stackQL-method: add_assets
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups':
    parameters: *ref_1
    post:
      description: Creates a new group in a given project and location.
      operationId: migrationcenter.projects.locations.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all groups in a given project and location.
      operationId: migrationcenter.projects.locations.groups.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.groups
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}':
    parameters: *ref_1
    delete:
      description: Deletes a group.
      operationId: migrationcenter.projects.locations.groups.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a group.
      operationId: migrationcenter.projects.locations.groups.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: get
      x-stackQL-verb: select
    patch:
      description: Updates the parameters of a group.
      operationId: migrationcenter.projects.locations.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-method: patch
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets':
    parameters: *ref_1
    post:
      description: Removes assets from a group.
      operationId: migrationcenter.projects.locations.groups.removeAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAssetsFromGroupRequest'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_assets
      x-stackQL-method: remove_assets
      x-stackQL-verb: exec
  '/v1/projects/{projectsId}/locations/{locationsId}/preferenceSets':
    parameters: *ref_1
    post:
      description: Creates a new preference set in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: preferenceSetId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: create
      x-stackQL-verb: insert
    get:
      description: Lists all the preference sets in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.list
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPreferenceSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: orderBy
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.preferenceSets
  '/v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}':
    parameters: *ref_1
    patch:
      description: Updates the parameters of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: patch
      x-stackQL-verb: exec
    delete:
      description: Deletes a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.delete
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      description: Gets the details of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.get
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
          Oauth2c:
            - 'https://www.googleapis.com/auth/cloud-platform'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferenceSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
      x-stackQL-resource: preference_sets
      x-stackQL-method: get
      x-stackQL-verb: select
