openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Migration Center API
  description: >-
    A unified platform that helps you accelerate your end-to-end cloud journey
    from your current on-premises or cloud environments to Google Cloud.
  version: v1
  x-discovery-doc-revision: '20240523'
  x-generated-date: '2024-06-03'
externalDocs:
  url: https://cloud.google.com/migration-center
servers:
  - url: https://migrationcenter.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListAssetsResponse:
      id: ListAssetsResponse
      description: Response message for listing assets.
      type: object
      properties:
        assets:
          description: A list of assets.
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Asset:
      id: Asset
      description: >-
        An asset represents a resource in your environment. Asset types include
        virtual machines and databases.
      type: object
      properties:
        name:
          description: Output only. The full name of the asset.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the asset was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the asset was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        attributes:
          description: Generic asset attributes.
          type: object
          additionalProperties:
            type: string
        machineDetails:
          description: >-
            Output only. Asset information specific for virtual and physical
            machines.
          readOnly: true
          $ref: '#/components/schemas/MachineDetails'
        insightList:
          description: Output only. The list of insights associated with the asset.
          readOnly: true
          $ref: '#/components/schemas/InsightList'
        performanceData:
          description: Output only. Performance data for the asset.
          readOnly: true
          $ref: '#/components/schemas/AssetPerformanceData'
        sources:
          description: Output only. The list of sources contributing to the asset.
          readOnly: true
          type: array
          items:
            type: string
        assignedGroups:
          description: Output only. The list of groups that the asset is assigned to.
          readOnly: true
          type: array
          items:
            type: string
    MachineDetails:
      id: MachineDetails
      description: Details of a machine.
      type: object
      properties:
        uuid:
          description: Machine unique identifier.
          type: string
        machineName:
          description: Machine name.
          type: string
        createTime:
          description: Machine creation time.
          type: string
          format: google-datetime
        coreCount:
          description: Number of CPU cores in the machine. Must be non-negative.
          type: integer
          format: int32
        memoryMb:
          description: The amount of memory in the machine. Must be non-negative.
          type: integer
          format: int32
        powerState:
          description: Power state of the machine.
          type: string
          enumDescriptions:
            - Power state is unknown.
            - >-
              The machine is preparing to enter the ACTIVE state. An instance
              may enter the PENDING state when it launches for the first time,
              or when it is started after being in the SUSPENDED state.
            - The machine is active.
            - The machine is being turned off.
            - The machine is off.
            - The machine is being deleted from the hosting platform.
            - The machine is deleted from the hosting platform.
          enum:
            - POWER_STATE_UNSPECIFIED
            - PENDING
            - ACTIVE
            - SUSPENDING
            - SUSPENDED
            - DELETING
            - DELETED
        architecture:
          description: Architecture details (vendor, CPU architecture).
          $ref: '#/components/schemas/MachineArchitectureDetails'
        guestOs:
          description: Guest OS information.
          $ref: '#/components/schemas/GuestOsDetails'
        network:
          description: Network details.
          $ref: '#/components/schemas/MachineNetworkDetails'
        disks:
          description: Disk details.
          $ref: '#/components/schemas/MachineDiskDetails'
        platform:
          description: Platform specific information.
          $ref: '#/components/schemas/PlatformDetails'
    MachineArchitectureDetails:
      id: MachineArchitectureDetails
      description: Details of the machine architecture.
      type: object
      properties:
        cpuArchitecture:
          description: CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.
          type: string
        cpuName:
          description: CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.
          type: string
        vendor:
          description: Hardware vendor.
          type: string
        cpuThreadCount:
          description: Number of CPU threads allocated to the machine.
          type: integer
          format: int32
        cpuSocketCount:
          description: Number of processor sockets allocated to the machine.
          type: integer
          format: int32
        bios:
          description: BIOS Details.
          $ref: '#/components/schemas/BiosDetails'
        firmwareType:
          description: Firmware type.
          type: string
          enumDescriptions:
            - Unspecified or unknown.
            - BIOS firmware.
            - EFI firmware.
          enum:
            - FIRMWARE_TYPE_UNSPECIFIED
            - BIOS
            - EFI
        hyperthreading:
          description: CPU hyper-threading support.
          type: string
          enumDescriptions:
            - Unspecified or unknown.
            - Hyper-threading is disabled.
            - Hyper-threading is enabled.
          enum:
            - CPU_HYPER_THREADING_UNSPECIFIED
            - DISABLED
            - ENABLED
    BiosDetails:
      id: BiosDetails
      description: Details about the BIOS.
      type: object
      properties:
        biosName:
          description: >-
            BIOS name. This fields is deprecated. Please use the `id` field
            instead.
          deprecated: true
          type: string
        id:
          description: BIOS ID.
          type: string
        manufacturer:
          description: BIOS manufacturer.
          type: string
        version:
          description: BIOS version.
          type: string
        releaseDate:
          description: BIOS release date.
          $ref: '#/components/schemas/Date'
        smbiosUuid:
          description: SMBIOS UUID.
          type: string
    Date:
      id: Date
      description: >-
        Represents a whole or partial calendar date, such as a birthday. The
        time of day and time zone are either specified elsewhere or are
        insignificant. The date is relative to the Gregorian Calendar. This can
        represent one of the following: * A full date, with non-zero year,
        month, and day values. * A month and day, with a zero year (for example,
        an anniversary). * A year on its own, with a zero month and a zero day.
        * A year and month, with a zero day (for example, a credit card
        expiration date). Related types: * google.type.TimeOfDay *
        google.type.DateTime * google.protobuf.Timestamp
      type: object
      properties:
        year:
          description: >-
            Year of the date. Must be from 1 to 9999, or 0 to specify a date
            without a year.
          type: integer
          format: int32
        month:
          description: >-
            Month of a year. Must be from 1 to 12, or 0 to specify a year
            without a month and day.
          type: integer
          format: int32
        day:
          description: >-
            Day of a month. Must be from 1 to 31 and valid for the year and
            month, or 0 to specify a year by itself or a year and month where
            the day isn't significant.
          type: integer
          format: int32
    GuestOsDetails:
      id: GuestOsDetails
      description: Information from Guest-level collections.
      type: object
      properties:
        osName:
          description: The name of the operating system.
          type: string
        family:
          description: What family the OS belong to, if known.
          type: string
          enumDescriptions:
            - ''
            - Microsoft Windows Server and Desktop.
            - Various Linux flavors.
            - Non-Linux Unix flavors.
          enum:
            - OS_FAMILY_UNKNOWN
            - OS_FAMILY_WINDOWS
            - OS_FAMILY_LINUX
            - OS_FAMILY_UNIX
        version:
          description: The version of the operating system.
          type: string
        config:
          description: OS and app configuration.
          $ref: '#/components/schemas/GuestConfigDetails'
        runtime:
          description: Runtime information.
          $ref: '#/components/schemas/GuestRuntimeDetails'
    GuestConfigDetails:
      id: GuestConfigDetails
      description: Guest OS config information.
      type: object
      properties:
        issue:
          description: OS issue (typically /etc/issue in Linux).
          type: string
        fstab:
          description: Mount list (Linux fstab).
          $ref: '#/components/schemas/FstabEntryList'
        hosts:
          description: Hosts file (/etc/hosts).
          $ref: '#/components/schemas/HostsEntryList'
        nfsExports:
          description: NFS exports.
          $ref: '#/components/schemas/NfsExportList'
        selinuxMode:
          description: Security-Enhanced Linux (SELinux) mode.
          type: string
          enumDescriptions:
            - SELinux mode unknown or unspecified.
            - SELinux is disabled.
            - SELinux permissive mode.
            - SELinux enforcing mode.
          enum:
            - SE_LINUX_MODE_UNSPECIFIED
            - SE_LINUX_MODE_DISABLED
            - SE_LINUX_MODE_PERMISSIVE
            - SE_LINUX_MODE_ENFORCING
    FstabEntryList:
      id: FstabEntryList
      description: Fstab content.
      type: object
      properties:
        entries:
          description: Fstab entries.
          type: array
          items:
            $ref: '#/components/schemas/FstabEntry'
    FstabEntry:
      id: FstabEntry
      description: Single fstab entry.
      type: object
      properties:
        spec:
          description: The block special device or remote filesystem to be mounted.
          type: string
        file:
          description: The mount point for the filesystem.
          type: string
        vfstype:
          description: The type of the filesystem.
          type: string
        mntops:
          description: Mount options associated with the filesystem.
          type: string
        freq:
          description: Used by dump to determine which filesystems need to be dumped.
          type: integer
          format: int32
        passno:
          description: >-
            Used by the fsck(8) program to determine the order in which
            filesystem checks are done at reboot time.
          type: integer
          format: int32
    HostsEntryList:
      id: HostsEntryList
      description: Hosts content.
      type: object
      properties:
        entries:
          description: Hosts entries.
          type: array
          items:
            $ref: '#/components/schemas/HostsEntry'
    HostsEntry:
      id: HostsEntry
      description: Single /etc/hosts entry.
      type: object
      properties:
        ip:
          description: IP (raw, IPv4/6 agnostic).
          type: string
        hostNames:
          description: List of host names / aliases.
          type: array
          items:
            type: string
    NfsExportList:
      id: NfsExportList
      description: NFS exports.
      type: object
      properties:
        entries:
          description: NFS export entries.
          type: array
          items:
            $ref: '#/components/schemas/NfsExport'
    NfsExport:
      id: NfsExport
      description: NFS export.
      type: object
      properties:
        exportDirectory:
          description: The directory being exported.
          type: string
        hosts:
          description: The hosts or networks to which the export is being shared.
          type: array
          items:
            type: string
    GuestRuntimeDetails:
      id: GuestRuntimeDetails
      description: Guest OS runtime information.
      type: object
      properties:
        services:
          description: Running background services.
          $ref: '#/components/schemas/RunningServiceList'
        processes:
          description: Running processes.
          $ref: '#/components/schemas/RunningProcessList'
        network:
          description: Runtime network information (connections, ports).
          $ref: '#/components/schemas/RuntimeNetworkInfo'
        lastBootTime:
          description: Last time the OS was booted.
          type: string
          format: google-datetime
        domain:
          description: Domain, e.g. c.stratozone-development.internal.
          type: string
        machineName:
          description: Machine name.
          type: string
        installedApps:
          description: Installed applications information.
          $ref: '#/components/schemas/GuestInstalledApplicationList'
        openFileList:
          description: Open files information.
          $ref: '#/components/schemas/OpenFileList'
    RunningServiceList:
      id: RunningServiceList
      description: List of running guest OS services.
      type: object
      properties:
        entries:
          description: Running service entries.
          type: array
          items:
            $ref: '#/components/schemas/RunningService'
    RunningService:
      id: RunningService
      description: Guest OS running service details.
      type: object
      properties:
        serviceName:
          description: Service name.
          type: string
        state:
          description: Service state (OS-agnostic).
          type: string
          enumDescriptions:
            - Service state unspecified.
            - Service is active.
            - Service is paused.
            - Service is stopped.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - PAUSED
            - STOPPED
        startMode:
          description: Service start mode (OS-agnostic).
          type: string
          enumDescriptions:
            - Start mode unspecified.
            - The service is a device driver started by the system loader.
            - >-
              The service is a device driver started by the IOInitSystem
              function.
            - The service is started by the operating system, at system start-up
            - The service is started only manually, by a user.
            - The service is disabled.
          enum:
            - START_MODE_UNSPECIFIED
            - BOOT
            - SYSTEM
            - AUTO
            - MANUAL
            - DISABLED
        exePath:
          description: Service binary path.
          type: string
        cmdline:
          description: Service command line.
          type: string
        pid:
          description: Service pid.
          type: string
          format: int64
    RunningProcessList:
      id: RunningProcessList
      description: List of running guest OS processes.
      type: object
      properties:
        entries:
          description: Running process entries.
          type: array
          items:
            $ref: '#/components/schemas/RunningProcess'
    RunningProcess:
      id: RunningProcess
      description: Guest OS running process details.
      type: object
      properties:
        pid:
          description: Process ID.
          type: string
          format: int64
        exePath:
          description: Process binary path.
          type: string
        cmdline:
          description: Process full command line.
          type: string
        user:
          description: User running the process.
          type: string
        attributes:
          description: Process extended attributes.
          type: object
          additionalProperties:
            type: string
    RuntimeNetworkInfo:
      id: RuntimeNetworkInfo
      description: Runtime networking information.
      type: object
      properties:
        scanTime:
          description: Time of the last network scan.
          type: string
          format: google-datetime
        connections:
          description: Network connections.
          $ref: '#/components/schemas/NetworkConnectionList'
    NetworkConnectionList:
      id: NetworkConnectionList
      description: Network connection list.
      type: object
      properties:
        entries:
          description: Network connection entries.
          type: array
          items:
            $ref: '#/components/schemas/NetworkConnection'
    NetworkConnection:
      id: NetworkConnection
      type: object
      properties:
        protocol:
          description: Connection protocol (e.g. TCP/UDP).
          type: string
        localIpAddress:
          description: Local IP address.
          type: string
        localPort:
          description: Local port.
          type: integer
          format: int32
        remoteIpAddress:
          description: Remote IP address.
          type: string
        remotePort:
          description: Remote port.
          type: integer
          format: int32
        state:
          description: Network connection state.
          type: string
          enumDescriptions:
            - Connection state is unknown or unspecified.
            - The connection is being opened.
            - The connection is open.
            - Listening for incoming connections.
            - The connection is being closed.
            - The connection is closed.
          enum:
            - STATE_UNSPECIFIED
            - OPENING
            - OPEN
            - LISTEN
            - CLOSING
            - CLOSED
        pid:
          description: Process ID.
          type: string
          format: int64
        processName:
          description: Process or service name.
          type: string
    GuestInstalledApplicationList:
      id: GuestInstalledApplicationList
      description: Guest installed application list.
      type: object
      properties:
        entries:
          description: Application entries.
          type: array
          items:
            $ref: '#/components/schemas/GuestInstalledApplication'
    GuestInstalledApplication:
      id: GuestInstalledApplication
      description: Guest installed application information.
      type: object
      properties:
        applicationName:
          description: Installed application name.
          type: string
        vendor:
          description: Installed application vendor.
          type: string
        installTime:
          description: The time when the application was installed.
          type: string
          format: google-datetime
        path:
          description: Source path.
          type: string
        version:
          description: Installed application version.
          type: string
        licenses:
          description: License strings associated with the installed application.
          type: array
          items:
            type: string
    OpenFileList:
      id: OpenFileList
      description: Open file list.
      type: object
      properties:
        entries:
          description: Open file details entries.
          type: array
          items:
            $ref: '#/components/schemas/OpenFileDetails'
    OpenFileDetails:
      id: OpenFileDetails
      description: Open file Information.
      type: object
      properties:
        command:
          description: Opened file command.
          type: string
        user:
          description: Opened file user.
          type: string
        fileType:
          description: Opened file file type.
          type: string
        filePath:
          description: Opened file file path.
          type: string
    MachineNetworkDetails:
      id: MachineNetworkDetails
      description: Details of network adapters and settings.
      type: object
      properties:
        primaryIpAddress:
          description: The primary IP address of the machine.
          type: string
        publicIpAddress:
          description: The public IP address of the machine.
          type: string
        primaryMacAddress:
          description: >-
            MAC address of the machine. This property is used to uniqly identify
            the machine.
          type: string
        adapters:
          description: List of network adapters.
          $ref: '#/components/schemas/NetworkAdapterList'
    NetworkAdapterList:
      id: NetworkAdapterList
      description: List of network adapters.
      type: object
      properties:
        entries:
          description: Network adapter entries.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAdapterDetails'
    NetworkAdapterDetails:
      id: NetworkAdapterDetails
      description: Details of network adapter.
      type: object
      properties:
        adapterType:
          description: Network adapter type (e.g. VMXNET3).
          type: string
        macAddress:
          description: MAC address.
          type: string
        addresses:
          description: NetworkAddressList
          $ref: '#/components/schemas/NetworkAddressList'
    NetworkAddressList:
      id: NetworkAddressList
      description: List of allocated/assigned network addresses.
      type: object
      properties:
        entries:
          description: Network address entries.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAddress'
    NetworkAddress:
      id: NetworkAddress
      description: Details of network address.
      type: object
      properties:
        ipAddress:
          description: Assigned or configured IP Address.
          type: string
        subnetMask:
          description: Subnet mask.
          type: string
        bcast:
          description: Broadcast address.
          type: string
        fqdn:
          description: Fully qualified domain name.
          type: string
        assignment:
          description: Whether DHCP is used to assign addresses.
          type: string
          enumDescriptions:
            - Unknown (default value).
            - Staticly assigned IP.
            - Dynamically assigned IP (DHCP).
          enum:
            - ADDRESS_ASSIGNMENT_UNSPECIFIED
            - ADDRESS_ASSIGNMENT_STATIC
            - ADDRESS_ASSIGNMENT_DHCP
    MachineDiskDetails:
      id: MachineDiskDetails
      description: Details of machine disks.
      type: object
      properties:
        totalCapacityBytes:
          description: Disk total Capacity.
          type: string
          format: int64
        totalFreeBytes:
          description: Total disk free space.
          type: string
          format: int64
        disks:
          description: List of disks.
          $ref: '#/components/schemas/DiskEntryList'
    DiskEntryList:
      id: DiskEntryList
      description: VM disks.
      type: object
      properties:
        entries:
          description: Disk entries.
          type: array
          items:
            $ref: '#/components/schemas/DiskEntry'
    DiskEntry:
      id: DiskEntry
      description: Single disk entry.
      type: object
      properties:
        capacityBytes:
          description: Disk capacity.
          type: string
          format: int64
        freeBytes:
          description: Disk free space.
          type: string
          format: int64
        diskLabel:
          description: Disk label.
          type: string
        diskLabelType:
          description: Disk label type (e.g. BIOS/GPT)
          type: string
        interfaceType:
          description: Disks interface type.
          type: string
          enumDescriptions:
            - Interface type unknown or unspecified.
            - IDE interface type.
            - SATA interface type.
            - SAS interface type.
            - SCSI interface type.
            - NVME interface type.
            - FC interface type.
            - iSCSI interface type.
          enum:
            - INTERFACE_TYPE_UNSPECIFIED
            - IDE
            - SATA
            - SAS
            - SCSI
            - NVME
            - FC
            - ISCSI
        partitions:
          description: Partition layout.
          $ref: '#/components/schemas/DiskPartitionList'
        hwAddress:
          description: Disk hardware address (e.g. 0:1 for SCSI).
          type: string
        vmware:
          description: VMware disk details.
          $ref: '#/components/schemas/VmwareDiskConfig'
    DiskPartitionList:
      id: DiskPartitionList
      description: Disk partition list.
      type: object
      properties:
        entries:
          description: Partition entries.
          type: array
          items:
            $ref: '#/components/schemas/DiskPartition'
    DiskPartition:
      id: DiskPartition
      description: Disk Partition details.
      type: object
      properties:
        type:
          description: Partition type.
          type: string
        fileSystem:
          description: Partition file system.
          type: string
        mountPoint:
          description: Mount pount (Linux/Windows) or drive letter (Windows).
          type: string
        capacityBytes:
          description: Partition capacity.
          type: string
          format: int64
        freeBytes:
          description: Partition free space.
          type: string
          format: int64
        uuid:
          description: Partition UUID.
          type: string
        subPartitions:
          description: Sub-partitions.
          $ref: '#/components/schemas/DiskPartitionList'
    VmwareDiskConfig:
      id: VmwareDiskConfig
      description: VMware disk config details.
      type: object
      properties:
        backingType:
          description: VMDK backing type.
          type: string
          enumDescriptions:
            - Default value.
            - Flat v1.
            - Flat v2.
            - Persistent memory, also known as Non-Volatile Memory (NVM).
            - Raw Disk Memory v1.
            - Raw Disk Memory v2.
            - >-
              SEsparse is a snapshot format introduced in vSphere 5.5 for large
              disks.
            - SEsparse v1.
            - SEsparse v1.
          enum:
            - BACKING_TYPE_UNSPECIFIED
            - BACKING_TYPE_FLAT_V1
            - BACKING_TYPE_FLAT_V2
            - BACKING_TYPE_PMEM
            - BACKING_TYPE_RDM_V1
            - BACKING_TYPE_RDM_V2
            - BACKING_TYPE_SESPARSE
            - BACKING_TYPE_SESPARSE_V1
            - BACKING_TYPE_SESPARSE_V2
        shared:
          description: Is VMDK shared with other VMs.
          type: boolean
        vmdkMode:
          description: VMDK disk mode.
          type: string
          enumDescriptions:
            - VMDK disk mode unspecified or unknown.
            - Dependent disk mode.
            - Independent - Persistent disk mode.
            - Independent - Nonpersistent disk mode.
          enum:
            - VMDK_MODE_UNSPECIFIED
            - DEPENDENT
            - INDEPENDENT_PERSISTENT
            - INDEPENDENT_NONPERSISTENT
        rdmCompatibility:
          description: RDM compatibility mode.
          type: string
          enumDescriptions:
            - Compatibility mode unspecified or unknown.
            - Physical compatibility mode.
            - Virtual compatibility mode.
          enum:
            - RDM_COMPATIBILITY_UNSPECIFIED
            - PHYSICAL_COMPATIBILITY
            - VIRTUAL_COMPATIBILITY
    PlatformDetails:
      id: PlatformDetails
      description: Information about the platform.
      type: object
      properties:
        vmwareDetails:
          description: VMware specific details.
          $ref: '#/components/schemas/VmwarePlatformDetails'
        awsEc2Details:
          description: AWS EC2 specific details.
          $ref: '#/components/schemas/AwsEc2PlatformDetails'
        azureVmDetails:
          description: Azure VM specific details.
          $ref: '#/components/schemas/AzureVmPlatformDetails'
        genericDetails:
          description: Generic platform details.
          $ref: '#/components/schemas/GenericPlatformDetails'
        physicalDetails:
          description: Physical machines platform details.
          $ref: '#/components/schemas/PhysicalPlatformDetails'
    VmwarePlatformDetails:
      id: VmwarePlatformDetails
      description: VMware specific details.
      type: object
      properties:
        vcenterVersion:
          description: vCenter version.
          type: string
        esxVersion:
          description: ESX version.
          type: string
        osid:
          description: >-
            VMware os enum -
            https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.
          type: string
        vcenterFolder:
          description: Folder name in vCenter where asset resides.
          type: string
        vcenterUri:
          description: vCenter URI used in collection.
          type: string
        vcenterVmId:
          description: vCenter VM ID.
          type: string
    AwsEc2PlatformDetails:
      id: AwsEc2PlatformDetails
      description: AWS EC2 specific details.
      type: object
      properties:
        machineTypeLabel:
          description: AWS platform's machine type label.
          type: string
        location:
          description: The location of the machine in the AWS format.
          type: string
    AzureVmPlatformDetails:
      id: AzureVmPlatformDetails
      description: Azure VM specific details.
      type: object
      properties:
        machineTypeLabel:
          description: Azure platform's machine type label.
          type: string
        location:
          description: The location of the machine in the Azure format.
          type: string
        provisioningState:
          description: Azure platform's provisioning state.
          type: string
    GenericPlatformDetails:
      id: GenericPlatformDetails
      description: Generic platform details.
      type: object
      properties:
        location:
          description: >-
            Free text representation of the machine location. The format of this
            field should not be relied on. Different VMs in the same location
            may have different string values for this field.
          type: string
    PhysicalPlatformDetails:
      id: PhysicalPlatformDetails
      description: Platform specific details for Physical Machines.
      type: object
      properties:
        location:
          description: >-
            Free text representation of the machine location. The format of this
            field should not be relied on. Different machines in the same
            location may have different string values for this field.
          type: string
    InsightList:
      id: InsightList
      description: Message containing insights list.
      type: object
      properties:
        insights:
          description: Output only. Insights of the list.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Insight'
        updateTime:
          description: Output only. Update timestamp.
          readOnly: true
          type: string
          format: google-datetime
    Insight:
      id: Insight
      description: An insight about an asset.
      type: object
      properties:
        migrationInsight:
          description: Output only. An insight about potential migrations for an asset.
          readOnly: true
          $ref: '#/components/schemas/MigrationInsight'
        genericInsight:
          description: Output only. A generic insight about an asset
          readOnly: true
          $ref: '#/components/schemas/GenericInsight'
    MigrationInsight:
      id: MigrationInsight
      description: An insight about potential migrations for an asset.
      type: object
      properties:
        fit:
          description: >-
            Output only. Description of how well the asset this insight is
            associated with fits the proposed migration.
          readOnly: true
          $ref: '#/components/schemas/FitDescriptor'
        computeEngineTarget:
          description: Output only. A Google Compute Engine target.
          readOnly: true
          $ref: '#/components/schemas/ComputeEngineMigrationTarget'
    FitDescriptor:
      id: FitDescriptor
      description: Describes the fit level of an asset for migration to a specific target.
      type: object
      properties:
        fitLevel:
          description: Fit level.
          type: string
          enumDescriptions:
            - Not enough information.
            - Fit.
            - No Fit.
            - Fit with effort.
          enum:
            - FIT_LEVEL_UNSPECIFIED
            - FIT
            - NO_FIT
            - REQUIRES_EFFORT
    ComputeEngineMigrationTarget:
      id: ComputeEngineMigrationTarget
      description: Compute engine migration target.
      type: object
      properties:
        shape:
          description: Description of the suggested shape for the migration target.
          $ref: '#/components/schemas/ComputeEngineShapeDescriptor'
    ComputeEngineShapeDescriptor:
      id: ComputeEngineShapeDescriptor
      description: Compute Engine target shape descriptor.
      type: object
      properties:
        memoryMb:
          description: Memory in mebibytes.
          type: integer
          format: int32
        physicalCoreCount:
          description: Number of physical cores.
          type: integer
          format: int32
        logicalCoreCount:
          description: Number of logical cores.
          type: integer
          format: int32
        series:
          description: Compute Engine machine series.
          type: string
        machineType:
          description: Compute Engine machine type.
          type: string
        storage:
          description: Compute Engine storage. Never empty.
          type: array
          items:
            $ref: '#/components/schemas/ComputeStorageDescriptor'
    ComputeStorageDescriptor:
      id: ComputeStorageDescriptor
      description: Compute Engine storage option descriptor.
      type: object
      properties:
        type:
          description: Disk type backing the storage.
          type: string
          enumDescriptions:
            - >-
              Unspecified (default value). Selecting this value allows the
              system to use any disk type according to reported usage. This a
              good value to start with.
            - Standard HDD Persistent Disk.
            - Balanced Persistent Disk.
            - SSD Persistent Disk.
          enum:
            - PERSISTENT_DISK_TYPE_UNSPECIFIED
            - PERSISTENT_DISK_TYPE_STANDARD
            - PERSISTENT_DISK_TYPE_BALANCED
            - PERSISTENT_DISK_TYPE_SSD
        sizeGb:
          description: Disk size in GiB.
          type: integer
          format: int32
    GenericInsight:
      id: GenericInsight
      description: A generic insight about an asset.
      type: object
      properties:
        messageId:
          description: >-
            Output only. Represents a globally unique message id for this
            insight, can be used for localization purposes, in case message_code
            is not yet known by the client use default_message instead.
          readOnly: true
          type: string
          format: int64
        defaultMessage:
          description: >-
            Output only. In case message_code is not yet known by the client
            default_message will be the message to be used instead.
          readOnly: true
          type: string
        additionalInformation:
          description: >-
            Output only. Additional information about the insight, each entry
            can be a logical entry and must make sense if it is displayed with
            line breaks between each entry. Text can contain md style links.
          readOnly: true
          type: array
          items:
            type: string
    AssetPerformanceData:
      id: AssetPerformanceData
      description: Performance data for an asset.
      type: object
      properties:
        dailyResourceUsageAggregations:
          description: >-
            Daily resource usage aggregations. Contains all of the data
            available for an asset, up to the last 420 days. Aggregations are
            sorted from oldest to most recent.
          type: array
          items:
            $ref: '#/components/schemas/DailyResourceUsageAggregation'
    DailyResourceUsageAggregation:
      id: DailyResourceUsageAggregation
      description: Usage data aggregation for a single day.
      type: object
      properties:
        date:
          description: Aggregation date. Day boundaries are at midnight UTC.
          $ref: '#/components/schemas/Date'
        cpu:
          description: CPU usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationCPU'
        memory:
          description: Memory usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationMemory'
        network:
          description: Network usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationNetwork'
        disk:
          description: Disk usage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationDisk'
    DailyResourceUsageAggregationCPU:
      id: DailyResourceUsageAggregationCPU
      description: Statistical aggregation of CPU usage.
      type: object
      properties:
        utilizationPercentage:
          description: CPU utilization percentage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
    DailyResourceUsageAggregationStats:
      id: DailyResourceUsageAggregationStats
      description: Statistical aggregation of samples for a single resource usage.
      type: object
      properties:
        average:
          description: Average usage value.
          type: number
          format: float
        median:
          description: Median usage value.
          type: number
          format: float
        ninteyFifthPercentile:
          description: 95th percentile usage value.
          type: number
          format: float
        peak:
          description: Peak usage value.
          type: number
          format: float
    DailyResourceUsageAggregationMemory:
      id: DailyResourceUsageAggregationMemory
      description: Statistical aggregation of memory usage.
      type: object
      properties:
        utilizationPercentage:
          description: Memory utilization percentage.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
    DailyResourceUsageAggregationNetwork:
      id: DailyResourceUsageAggregationNetwork
      description: Statistical aggregation of network usage.
      type: object
      properties:
        ingressBps:
          description: Network ingress in B/s.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
        egressBps:
          description: Network egress in B/s.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
    DailyResourceUsageAggregationDisk:
      id: DailyResourceUsageAggregationDisk
      description: Statistical aggregation of disk usage.
      type: object
      properties:
        iops:
          description: Disk I/O operations per second.
          $ref: '#/components/schemas/DailyResourceUsageAggregationStats'
    BatchUpdateAssetsRequest:
      id: BatchUpdateAssetsRequest
      description: A request to update a list of assets.
      type: object
      properties:
        requests:
          description: >-
            Required. The request message specifying the resources to update. A
            maximum of 1000 assets can be modified in a batch.
          type: array
          items:
            $ref: '#/components/schemas/UpdateAssetRequest'
    UpdateAssetRequest:
      id: UpdateAssetRequest
      description: A request to update an asset.
      type: object
      properties:
        updateMask:
          description: >-
            Required. Field mask is used to specify the fields to be overwritten
            in the `Asset` resource by the update. The values specified in the
            `update_mask` field are relative to the resource, not the full
            request. A field will be overwritten if it is in the mask. A single
            * value in the mask lets you to overwrite all fields.
          type: string
          format: google-fieldmask
        asset:
          description: Required. The resource being updated.
          $ref: '#/components/schemas/Asset'
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes since the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    BatchUpdateAssetsResponse:
      id: BatchUpdateAssetsResponse
      description: Response for updating a list of assets.
      type: object
      properties:
        assets:
          description: >-
            Update asset content. The content only includes values after field
            mask being applied.
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    BatchDeleteAssetsRequest:
      id: BatchDeleteAssetsRequest
      description: A request to delete a list of asset.
      type: object
      properties:
        names:
          description: >-
            Required. The IDs of the assets to delete. A maximum of 1000 assets
            can be deleted in a batch. Format:
            projects/{project}/locations/{location}/assets/{name}.
          type: array
          items:
            type: string
        allowMissing:
          description: >-
            Optional. When this value is set to `true` the request is a no-op
            for non-existing assets. See
            https://google.aip.dev/135#delete-if-existing for additional
            details. Default value is `false`.
          type: boolean
    Frames:
      id: Frames
      description: Collection of frame data.
      type: object
      properties:
        framesData:
          description: A repeated field of asset data.
          type: array
          items:
            $ref: '#/components/schemas/AssetFrame'
    AssetFrame:
      id: AssetFrame
      description: Contains data reported from an inventory source on an asset.
      type: object
      properties:
        machineDetails:
          description: Asset information specific for virtual machines.
          $ref: '#/components/schemas/MachineDetails'
        reportTime:
          description: The time the data was reported.
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        attributes:
          description: Generic asset attributes.
          type: object
          additionalProperties:
            type: string
        performanceSamples:
          description: >-
            Asset performance data samples. Samples that are from more than 40
            days ago or after tomorrow are ignored.
          type: array
          items:
            $ref: '#/components/schemas/PerformanceSample'
        traceToken:
          description: >-
            Optional. Trace token is optionally provided to assist with
            debugging and traceability.
          type: string
        collectionType:
          description: >-
            Optional. Frame collection type, if not specified the collection
            type will be based on the source type of the source the frame was
            reported on.
          type: string
          enumDescriptions:
            - Unspecified
            - Manually uploaded file (e.g. CSV)
            - Guest-level info
            - Inventory-level scan
            - Third-party owned sources.
            - Discovery clients
          enum:
            - SOURCE_TYPE_UNKNOWN
            - SOURCE_TYPE_UPLOAD
            - SOURCE_TYPE_GUEST_OS_SCAN
            - SOURCE_TYPE_INVENTORY_SCAN
            - SOURCE_TYPE_CUSTOM
            - SOURCE_TYPE_DISCOVERY_CLIENT
    PerformanceSample:
      id: PerformanceSample
      description: Performance data sample.
      type: object
      properties:
        sampleTime:
          description: >-
            Time the sample was collected. If omitted, the frame report time
            will be used.
          type: string
          format: google-datetime
        memory:
          description: Memory usage sample.
          $ref: '#/components/schemas/MemoryUsageSample'
        cpu:
          description: CPU usage sample.
          $ref: '#/components/schemas/CpuUsageSample'
        network:
          description: Network usage sample.
          $ref: '#/components/schemas/NetworkUsageSample'
        disk:
          description: Disk usage sample.
          $ref: '#/components/schemas/DiskUsageSample'
    MemoryUsageSample:
      id: MemoryUsageSample
      description: Memory usage sample.
      type: object
      properties:
        utilizedPercentage:
          description: >-
            Percentage of system memory utilized. Must be in the interval [0,
            100].
          type: number
          format: float
    CpuUsageSample:
      id: CpuUsageSample
      description: CPU usage sample.
      type: object
      properties:
        utilizedPercentage:
          description: >-
            Percentage of total CPU capacity utilized. Must be in the interval
            [0, 100]. On most systems can be calculated using 100 - idle
            percentage.
          type: number
          format: float
    NetworkUsageSample:
      id: NetworkUsageSample
      description: Network usage sample. Values are across all network interfaces.
      type: object
      properties:
        averageIngressBps:
          description: >-
            Average network ingress in B/s sampled over a short window. Must be
            non-negative.
          type: number
          format: float
        averageEgressBps:
          description: >-
            Average network egress in B/s sampled over a short window. Must be
            non-negative.
          type: number
          format: float
    DiskUsageSample:
      id: DiskUsageSample
      description: Disk usage sample. Values are across all disks.
      type: object
      properties:
        averageIops:
          description: Average IOPS sampled over a short window. Must be non-negative.
          type: number
          format: float
    ReportAssetFramesResponse:
      id: ReportAssetFramesResponse
      description: A response to a call to `ReportAssetFrame`.
      type: object
      properties: {}
    AggregateAssetsValuesRequest:
      id: AggregateAssetsValuesRequest
      description: A request to aggregate one or more values.
      type: object
      properties:
        aggregations:
          description: >-
            Array of aggregations to perform. Up to 25 aggregations can be
            defined.
          type: array
          items:
            $ref: '#/components/schemas/Aggregation'
        filter:
          description: >-
            Optional. The aggregation will be performed on assets that match the
            provided filter.
          type: string
    Aggregation:
      id: Aggregation
      description: >-
        Message describing an aggregation. The message includes the aggregation
        type, parameters, and the field on which to perform the aggregation.
      type: object
      properties:
        field:
          description: The name of the field on which to aggregate.
          type: string
        count:
          description: Count the number of matching objects.
          $ref: '#/components/schemas/AggregationCount'
        sum:
          description: Sum over a numeric field.
          $ref: '#/components/schemas/AggregationSum'
        histogram:
          description: Creates a bucketed histogram of field values.
          $ref: '#/components/schemas/AggregationHistogram'
        frequency:
          description: Creates a frequency distribution of all field values.
          $ref: '#/components/schemas/AggregationFrequency'
    AggregationCount:
      id: AggregationCount
      description: Object count.
      type: object
      properties: {}
    AggregationSum:
      id: AggregationSum
      description: Sum of field values.
      type: object
      properties: {}
    AggregationHistogram:
      id: AggregationHistogram
      description: Histogram of bucketed assets counts by field value.
      type: object
      properties:
        lowerBounds:
          description: >-
            Lower bounds of buckets. The response will contain `n+1` buckets for
            `n` bounds. The first bucket will count all assets for which the
            field value is smaller than the first bound. Subsequent buckets will
            count assets for which the field value is greater or equal to a
            lower bound and smaller than the next one. The last bucket will
            count assets for which the field value is greater or equal to the
            final lower bound. You can define up to 20 lower bounds.
          type: array
          items:
            type: number
            format: double
    AggregationFrequency:
      id: AggregationFrequency
      description: Frequency distribution of all field values.
      type: object
      properties: {}
    AggregateAssetsValuesResponse:
      id: AggregateAssetsValuesResponse
      description: A response to a request to aggregated assets values.
      type: object
      properties:
        results:
          description: The aggregation results.
          type: array
          items:
            $ref: '#/components/schemas/AggregationResult'
    AggregationResult:
      id: AggregationResult
      description: Message describing a result of an aggregation.
      type: object
      properties:
        field:
          type: string
        count:
          $ref: '#/components/schemas/AggregationResultCount'
        sum:
          $ref: '#/components/schemas/AggregationResultSum'
        histogram:
          $ref: '#/components/schemas/AggregationResultHistogram'
        frequency:
          $ref: '#/components/schemas/AggregationResultFrequency'
    AggregationResultCount:
      id: AggregationResultCount
      description: The result of a count aggregation.
      type: object
      properties:
        value:
          type: string
          format: int64
    AggregationResultSum:
      id: AggregationResultSum
      description: The result of a sum aggregation.
      type: object
      properties:
        value:
          type: number
          format: double
    AggregationResultHistogram:
      id: AggregationResultHistogram
      description: The result of a bucketed histogram aggregation.
      type: object
      properties:
        buckets:
          description: >-
            Buckets in the histogram. There will be `n+1` buckets matching `n`
            lower bounds in the request. The first bucket will be from -infinity
            to the first bound. Subsequent buckets will be between one bound and
            the next. The final bucket will be from the final bound to infinity.
          type: array
          items:
            $ref: '#/components/schemas/AggregationResultHistogramBucket'
    AggregationResultHistogramBucket:
      id: AggregationResultHistogramBucket
      description: >-
        A histogram bucket with a lower and upper bound, and a count of items
        with a field value between those bounds. The lower bound is inclusive
        and the upper bound is exclusive. Lower bound may be -infinity and upper
        bound may be infinity.
      type: object
      properties:
        lowerBound:
          description: Lower bound - inclusive.
          type: number
          format: double
        upperBound:
          description: Upper bound - exclusive.
          type: number
          format: double
        count:
          description: Count of items in the bucket.
          type: string
          format: int64
    AggregationResultFrequency:
      id: AggregationResultFrequency
      description: The result of a frequency distribution aggregation.
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            type: string
            format: int64
    ImportJob:
      id: ImportJob
      description: A resource that represents the background job that imports asset frames.
      type: object
      properties:
        name:
          description: Output only. The full name of the import job.
          readOnly: true
          type: string
        displayName:
          description: >-
            Optional. User-friendly display name. Maximum length is 256
            characters.
          type: string
        createTime:
          description: Output only. The timestamp when the import job was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the import job was last updated.
          readOnly: true
          type: string
          format: google-datetime
        completeTime:
          description: Output only. The timestamp when the import job was completed.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The state of the import job.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value.
            - The import job is pending.
            - The processing of the import job is ongoing.
            - The import job processing has completed.
            - The import job failed to be processed.
            - The import job is being validated.
            - The import job contains blocking errors.
            - The validation of the job completed with no blocking errors.
          enum:
            - IMPORT_JOB_STATE_UNSPECIFIED
            - IMPORT_JOB_STATE_PENDING
            - IMPORT_JOB_STATE_RUNNING
            - IMPORT_JOB_STATE_COMPLETED
            - IMPORT_JOB_STATE_FAILED
            - IMPORT_JOB_STATE_VALIDATING
            - IMPORT_JOB_STATE_FAILED_VALIDATION
            - IMPORT_JOB_STATE_READY
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        assetSource:
          description: Required. Reference to a source.
          type: string
        validationReport:
          description: >-
            Output only. The report with the validation results of the import
            job.
          readOnly: true
          $ref: '#/components/schemas/ValidationReport'
        executionReport:
          description: Output only. The report with the results of running the import job.
          readOnly: true
          $ref: '#/components/schemas/ExecutionReport'
    ValidationReport:
      id: ValidationReport
      description: A resource that aggregates errors across import job files.
      type: object
      properties:
        fileValidations:
          description: List of errors found in files.
          type: array
          items:
            $ref: '#/components/schemas/FileValidationReport'
        jobErrors:
          description: List of job level errors.
          type: array
          items:
            $ref: '#/components/schemas/ImportError'
    FileValidationReport:
      id: FileValidationReport
      description: >-
        A resource that aggregates the validation errors found in an import job
        file.
      type: object
      properties:
        fileName:
          description: The name of the file.
          type: string
        rowErrors:
          description: Partial list of rows that encountered validation error.
          type: array
          items:
            $ref: '#/components/schemas/ImportRowError'
        partialReport:
          description: >-
            Flag indicating that processing was aborted due to maximum number of
            errors.
          type: boolean
        fileErrors:
          description: List of file level errors.
          type: array
          items:
            $ref: '#/components/schemas/ImportError'
    ImportRowError:
      id: ImportRowError
      description: A resource that reports the import job errors at row level.
      type: object
      properties:
        rowNumber:
          description: The row number where the error was detected.
          deprecated: true
          type: integer
          format: int32
        vmName:
          description: The name of the VM in the row.
          type: string
        vmUuid:
          description: The VM UUID.
          type: string
        errors:
          description: The list of errors detected in the row.
          type: array
          items:
            $ref: '#/components/schemas/ImportError'
    ImportError:
      id: ImportError
      description: >-
        A resource that reports the errors encountered while processing an
        import job.
      type: object
      properties:
        errorDetails:
          description: The error information.
          type: string
        severity:
          description: The severity of the error.
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
    ExecutionReport:
      id: ExecutionReport
      description: A resource that reports result of the import job execution.
      type: object
      properties:
        framesReported:
          description: Total number of asset frames reported for the import job.
          type: integer
          format: int32
        executionErrors:
          description: >-
            Validation errors encountered during the execution of the import
            job.
          $ref: '#/components/schemas/ValidationReport'
        totalRowsCount:
          description: Output only. Total number of rows in the import job.
          readOnly: true
          type: integer
          format: int32
    ListImportJobsResponse:
      id: ListImportJobsResponse
      description: A response for listing import jobs.
      type: object
      properties:
        importJobs:
          description: The list of import jobs.
          type: array
          items:
            $ref: '#/components/schemas/ImportJob'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ValidateImportJobRequest:
      id: ValidateImportJobRequest
      description: A request to validate an import job.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    RunImportJobRequest:
      id: RunImportJobRequest
      description: A request to run an import job.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
    ImportDataFile:
      id: ImportDataFile
      description: A resource that represents a payload file in an import job.
      type: object
      properties:
        name:
          description: Output only. The name of the file.
          readOnly: true
          type: string
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        format:
          description: Required. The payload format.
          type: string
          enumDescriptions:
            - Default value.
            - RVTools format (XLSX).
            - RVTools format (CSV).
            - CSV format exported from AWS using the AWS collection script.
            - CSV format exported from Azure using the Azure collection script.
            - >-
              CSV format created manually and following the StratoZone format.
              For more information, see Manually create and upload data tables.
          enum:
            - IMPORT_JOB_FORMAT_UNSPECIFIED
            - IMPORT_JOB_FORMAT_RVTOOLS_XLSX
            - IMPORT_JOB_FORMAT_RVTOOLS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV
            - IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV
            - IMPORT_JOB_FORMAT_STRATOZONE_CSV
        createTime:
          description: Output only. The timestamp when the file was created.
          readOnly: true
          type: string
          format: google-datetime
        state:
          description: Output only. The state of the import data file.
          readOnly: true
          type: string
          enumDescriptions:
            - Default value.
            - The data file is being created.
            - The data file completed initialization.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
        uploadFileInfo:
          description: Information about a file that is uploaded to a storage service.
          $ref: '#/components/schemas/UploadFileInfo'
    UploadFileInfo:
      id: UploadFileInfo
      description: A resource that contains a URI to which a data file can be uploaded.
      type: object
      properties:
        signedUri:
          description: Output only. Upload URI for the file.
          readOnly: true
          type: string
        headers:
          description: Output only. The headers that were used to sign the URI.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        uriExpirationTime:
          description: Output only. Expiration time of the upload URI.
          readOnly: true
          type: string
          format: google-datetime
    ListImportDataFilesResponse:
      id: ListImportDataFilesResponse
      description: Response for listing payload files of an import job.
      type: object
      properties:
        importDataFiles:
          description: The list of import data files.
          type: array
          items:
            $ref: '#/components/schemas/ImportDataFile'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ListGroupsResponse:
      id: ListGroupsResponse
      description: A response for listing groups.
      type: object
      properties:
        groups:
          description: The list of Group
          type: array
          items:
            $ref: '#/components/schemas/Group'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Group:
      id: Group
      description: >-
        A resource that represents an asset group. The purpose of an asset group
        is to bundle a set of assets that have something in common, while
        allowing users to add annotations to the group. An asset can belong to
        multiple groups.
      type: object
      properties:
        name:
          description: Output only. The name of the group.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the group was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the group was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        displayName:
          description: Optional. User-friendly display name.
          type: string
        description:
          description: Optional. The description of the group.
          type: string
    AddAssetsToGroupRequest:
      id: AddAssetsToGroupRequest
      description: A request to add assets to a group.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        assets:
          description: >-
            Required. List of assets to be added. The maximum number of assets
            that can be added in a single request is 1000.
          $ref: '#/components/schemas/AssetList'
        allowExisting:
          description: >-
            Optional. When this value is set to `false` and one of the given
            assets is already an existing member of the group, the operation
            fails with an `Already Exists` error. When set to `true` this
            situation is silently ignored by the server. Default value is
            `false`.
          type: boolean
    AssetList:
      id: AssetList
      description: Lists the asset IDs of all assets.
      type: object
      properties:
        assetIds:
          description: Required. A list of asset IDs
          type: array
          items:
            type: string
    RemoveAssetsFromGroupRequest:
      id: RemoveAssetsFromGroupRequest
      description: A request to remove assets from a group.
      type: object
      properties:
        requestId:
          description: >-
            Optional. An optional request ID to identify requests. Specify a
            unique request ID so that if you must retry your request, the server
            will know to ignore the request if it has already been completed.
            The server will guarantee that for at least 60 minutes after the
            first request. For example, consider a situation where you make an
            initial request and the request times out. If you make the request
            again with the same request ID, the server can check if original
            operation with the same request ID was received, and if so, will
            ignore the second request. This prevents clients from accidentally
            creating duplicate commitments. The request ID must be a valid UUID
            with the exception that zero UUID is not supported
            (00000000-0000-0000-0000-000000000000).
          type: string
        assets:
          description: >-
            Required. List of assets to be removed. The maximum number of assets
            that can be removed in a single request is 1000.
          $ref: '#/components/schemas/AssetList'
        allowMissing:
          description: >-
            Optional. When this value is set to `false` and one of the given
            assets is not an existing member of the group, the operation fails
            with a `Not Found` error. When set to `true` this situation is
            silently ignored by the server. Default value is `false`.
          type: boolean
    ListErrorFramesResponse:
      id: ListErrorFramesResponse
      description: A response for listing error frames.
      type: object
      properties:
        errorFrames:
          description: The list of error frames.
          type: array
          items:
            $ref: '#/components/schemas/ErrorFrame'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    ErrorFrame:
      id: ErrorFrame
      description: >-
        Message representing a frame which failed to be processed due to an
        error.
      type: object
      properties:
        name:
          description: Output only. The identifier of the ErrorFrame.
          readOnly: true
          type: string
        violations:
          description: Output only. All the violations that were detected for the frame.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FrameViolationEntry'
        originalFrame:
          description: Output only. The frame that was originally reported.
          readOnly: true
          $ref: '#/components/schemas/AssetFrame'
        ingestionTime:
          description: Output only. Frame ingestion time.
          readOnly: true
          type: string
          format: google-datetime
    FrameViolationEntry:
      id: FrameViolationEntry
      description: >-
        A resource that contains a single violation of a reported `AssetFrame`
        resource.
      type: object
      properties:
        field:
          description: The field of the original frame where the violation occurred.
          type: string
        violation:
          description: A message describing the violation.
          type: string
    ListSourcesResponse:
      id: ListSourcesResponse
      description: Response message for listing sources.
      type: object
      properties:
        sources:
          description: The list of sources.
          type: array
          items:
            $ref: '#/components/schemas/Source'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Source:
      id: Source
      description: >-
        Source represents an object from which asset information is streamed to
        Migration Center.
      type: object
      properties:
        name:
          description: Output only. The full name of the source.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the source was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the source was last updated.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: User-friendly display name.
          type: string
        description:
          description: Free-text description.
          type: string
        type:
          description: Data source type.
          type: string
          enumDescriptions:
            - Unspecified
            - Manually uploaded file (e.g. CSV)
            - Guest-level info
            - Inventory-level scan
            - Third-party owned sources.
            - Discovery clients
          enum:
            - SOURCE_TYPE_UNKNOWN
            - SOURCE_TYPE_UPLOAD
            - SOURCE_TYPE_GUEST_OS_SCAN
            - SOURCE_TYPE_INVENTORY_SCAN
            - SOURCE_TYPE_CUSTOM
            - SOURCE_TYPE_DISCOVERY_CLIENT
        priority:
          description: >-
            The information confidence of the source. The higher the value, the
            higher the confidence.
          type: integer
          format: int32
        managed:
          description: If `true`, the source is managed by other service(s).
          type: boolean
        pendingFrameCount:
          description: Output only. Number of frames that are still being processed.
          readOnly: true
          type: integer
          format: int32
        errorFrameCount:
          description: >-
            Output only. The number of frames that were reported by the source
            and contained errors.
          readOnly: true
          type: integer
          format: int32
        state:
          description: Output only. The state of the source.
          readOnly: true
          type: string
          enumDescriptions:
            - Unspecified.
            - The source is active and ready to be used.
            - In the process of being deleted.
            - >-
              Source is in an invalid state. Asset frames reported to it will be
              ignored.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETING
            - INVALID
    ListPreferenceSetsResponse:
      id: ListPreferenceSetsResponse
      description: Response message for listing preference sets.
      type: object
      properties:
        preferenceSets:
          description: The list of PreferenceSets
          type: array
          items:
            $ref: '#/components/schemas/PreferenceSet'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    PreferenceSet:
      id: PreferenceSet
      description: The preferences that apply to all assets in a given context.
      type: object
      properties:
        name:
          description: Output only. Name of the preference set.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the preference set was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the preference set was last updated.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        description:
          description: A description of the preference set.
          type: string
        virtualMachinePreferences:
          description: >-
            Optional. A set of preferences that applies to all virtual machines
            in the context.
          $ref: '#/components/schemas/VirtualMachinePreferences'
    VirtualMachinePreferences:
      id: VirtualMachinePreferences
      description: >-
        VirtualMachinePreferences enables you to create sets of assumptions, for
        example, a geographical location and pricing track, for your migrated
        virtual machines. The set of preferences influence recommendations for
        migrating virtual machine assets.
      type: object
      properties:
        targetProduct:
          description: >-
            Target product for assets using this preference set. Specify either
            target product or business goal, but not both.
          type: string
          enumDescriptions:
            - Unspecified (default value).
            - Prefer to migrate to Google Cloud Compute Engine.
            - Prefer to migrate to Google Cloud VMware Engine.
            - Prefer to migrate to Google Cloud Sole Tenant Nodes.
          enum:
            - COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED
            - COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE
            - COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY
        regionPreferences:
          description: >-
            Region preferences for assets using this preference set. If you are
            unsure which value to set, the migration service API region is often
            a good value to start with.
          $ref: '#/components/schemas/RegionPreferences'
        commitmentPlan:
          description: >-
            Commitment plan to consider when calculating costs for virtual
            machine insights and recommendations. If you are unsure which value
            to set, a 3 year commitment plan is often a good value to start
            with.
          type: string
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan.
            - 1 year commitment.
            - 3 years commitment.
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - COMMITMENT_PLAN_NONE
            - COMMITMENT_PLAN_ONE_YEAR
            - COMMITMENT_PLAN_THREE_YEARS
        sizingOptimizationStrategy:
          description: >-
            Sizing optimization strategy specifies the preferred strategy used
            when extrapolating usage data to calculate insights and
            recommendations for a virtual machine. If you are unsure which value
            to set, a moderate sizing optimization strategy is often a good
            value to start with.
          type: string
          enumDescriptions:
            - Unspecified (default value).
            - >-
              No optimization applied. Virtual machine sizing matches as closely
              as possible the machine shape on the source site, not considering
              any actual performance data.
            - >-
              Virtual machine sizing will match the reported usage and shape,
              with some slack. This a good value to start with.
            - >-
              Virtual machine sizing will match the reported usage, with little
              slack. Using this option can help reduce costs.
          enum:
            - SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED
            - SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE
            - SIZING_OPTIMIZATION_STRATEGY_MODERATE
            - SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE
        computeEnginePreferences:
          description: >-
            Compute Engine preferences concern insights and recommendations for
            Compute Engine target.
          $ref: '#/components/schemas/ComputeEnginePreferences'
        vmwareEnginePreferences:
          description: >-
            Preferences concerning insights and recommendations for Google Cloud
            VMware Engine.
          $ref: '#/components/schemas/VmwareEnginePreferences'
        soleTenancyPreferences:
          description: Preferences concerning Sole Tenant nodes and virtual machines.
          $ref: '#/components/schemas/SoleTenancyPreferences'
    RegionPreferences:
      id: RegionPreferences
      description: The user preferences relating to target regions.
      type: object
      properties:
        preferredRegions:
          description: >-
            A list of preferred regions, ordered by the most preferred region
            first. Set only valid Google Cloud region names. See
            https://cloud.google.com/compute/docs/regions-zones for available
            regions.
          type: array
          items:
            type: string
    ComputeEnginePreferences:
      id: ComputeEnginePreferences
      description: The user preferences relating to Compute Engine target platform.
      type: object
      properties:
        persistentDiskType:
          description: >-
            Persistent disk type to use. If unspecified (default), all types are
            considered, based on available usage data.
          type: string
          enumDescriptions:
            - >-
              Unspecified (default value). Selecting this value allows the
              system to use any disk type according to reported usage. This a
              good value to start with.
            - Standard HDD Persistent Disk.
            - Balanced Persistent Disk.
            - SSD Persistent Disk.
          enum:
            - PERSISTENT_DISK_TYPE_UNSPECIFIED
            - PERSISTENT_DISK_TYPE_STANDARD
            - PERSISTENT_DISK_TYPE_BALANCED
            - PERSISTENT_DISK_TYPE_SSD
        machinePreferences:
          description: >-
            Preferences concerning the machine types to consider on Compute
            Engine.
          $ref: '#/components/schemas/MachinePreferences'
        licenseType:
          description: >-
            License type to consider when calculating costs for virtual machine
            insights and recommendations. If unspecified, costs are calculated
            based on the default licensing plan.
          type: string
          enumDescriptions:
            - Unspecified (default value).
            - >-
              Default Google Cloud licensing plan. Licensing is charged per
              usage. This a good value to start with.
            - Bring-your-own-license (BYOL) plan. User provides the OS license.
          enum:
            - LICENSE_TYPE_UNSPECIFIED
            - LICENSE_TYPE_DEFAULT
            - LICENSE_TYPE_BRING_YOUR_OWN_LICENSE
    MachinePreferences:
      id: MachinePreferences
      description: >-
        The type of machines to consider when calculating virtual machine
        migration insights and recommendations. Not all machine types are
        available in all zones and regions.
      type: object
      properties:
        allowedMachineSeries:
          description: >-
            Compute Engine machine series to consider for insights and
            recommendations. If empty, no restriction is applied on the machine
            series.
          type: array
          items:
            $ref: '#/components/schemas/MachineSeries'
    MachineSeries:
      id: MachineSeries
      description: >-
        A machine series, for a target product (e.g. Compute Engine, Google
        Cloud VMware Engine).
      type: object
      properties:
        code:
          description: >-
            Code to identify a machine series. Consult this for more details on
            the available series for Compute Engine:
            https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison
            Consult this for more details on the available series for Google
            Cloud VMware Engine: https://cloud.google.com/vmware-engine/pricing
          type: string
    VmwareEnginePreferences:
      id: VmwareEnginePreferences
      description: >-
        The user preferences relating to Google Cloud VMware Engine target
        platform.
      type: object
      properties:
        cpuOvercommitRatio:
          description: >-
            CPU overcommit ratio. Acceptable values are between 1.0 and 8.0,
            with 0.1 increment.
          type: number
          format: double
        memoryOvercommitRatio:
          description: >-
            Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75
            and 2.0.
          type: number
          format: double
        storageDeduplicationCompressionRatio:
          description: >-
            The Deduplication and Compression ratio is based on the logical
            (Used Before) space required to store data before applying
            deduplication and compression, in relation to the physical (Used
            After) space required after applying deduplication and compression.
            Specifically, the ratio is the Used Before space divided by the Used
            After space. For example, if the Used Before space is 3 GB, but the
            physical Used After space is 1 GB, the deduplication and compression
            ratio is 3x. Acceptable values are between 1.0 and 4.0.
          type: number
          format: double
        commitmentPlan:
          description: >-
            Commitment plan to consider when calculating costs for virtual
            machine insights and recommendations. If you are unsure which value
            to set, a 3 year commitment plan is often a good value to start
            with.
          type: string
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment (monthly payments).
            - 3 year commitment (monthly payments).
            - 1 year commitment (upfront payment).
            - 3 years commitment (upfront payment).
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_3_YEAR_MONTHLY_PAYMENTS
            - COMMITMENT_1_YEAR_UPFRONT_PAYMENT
            - COMMITMENT_3_YEAR_UPFRONT_PAYMENT
    SoleTenancyPreferences:
      id: SoleTenancyPreferences
      description: Preferences concerning Sole Tenancy nodes and VMs.
      type: object
      properties:
        cpuOvercommitRatio:
          description: >-
            CPU overcommit ratio. Acceptable values are between 1.0 and 2.0
            inclusive.
          type: number
          format: double
        hostMaintenancePolicy:
          description: Sole Tenancy nodes maintenance policy.
          type: string
          enumDescriptions:
            - Unspecified host maintenance policy.
            - Default host maintenance policy.
            - Restart in place host maintenance policy.
            - Migrate within node group host maintenance policy.
          enum:
            - HOST_MAINTENANCE_POLICY_UNSPECIFIED
            - HOST_MAINTENANCE_POLICY_DEFAULT
            - HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE
            - HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP
        commitmentPlan:
          description: >-
            Commitment plan to consider when calculating costs for virtual
            machine insights and recommendations. If you are unsure which value
            to set, a 3 year commitment plan is often a good value to start
            with.
          type: string
          enumDescriptions:
            - Unspecified commitment plan.
            - No commitment plan (on-demand usage).
            - 1 year commitment.
            - 3 years commitment.
          enum:
            - COMMITMENT_PLAN_UNSPECIFIED
            - ON_DEMAND
            - COMMITMENT_1_YEAR
            - COMMITMENT_3_YEAR
        nodeTypes:
          description: >-
            A list of sole tenant node types. An empty list means that all
            possible node types will be considered.
          type: array
          items:
            $ref: '#/components/schemas/SoleTenantNodeType'
    SoleTenantNodeType:
      id: SoleTenantNodeType
      description: A Sole Tenant node type.
      type: object
      properties:
        nodeName:
          description: >-
            Name of the Sole Tenant node. Consult
            https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes
          type: string
    Settings:
      id: Settings
      description: Describes the Migration Center settings related to the project.
      type: object
      properties:
        name:
          description: Output only. The name of the resource.
          readOnly: true
          type: string
        preferenceSet:
          description: The preference set used by default for a project.
          type: string
        disableCloudLogging:
          description: >-
            Disable Cloud Logging for the Migration Center API. Users are billed
            for the logs.
          type: boolean
    ReportConfig:
      id: ReportConfig
      description: >-
        The groups and associated preference sets on which we can generate
        reports.
      type: object
      properties:
        name:
          description: Output only. Name of resource.
          readOnly: true
          type: string
        createTime:
          description: Output only. The timestamp when the resource was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. The timestamp when the resource was last updated.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        description:
          description: Free-text description.
          type: string
        groupPreferencesetAssignments:
          description: Required. Collection of combinations of groups and preference sets.
          type: array
          items:
            $ref: '#/components/schemas/ReportConfigGroupPreferenceSetAssignment'
    ReportConfigGroupPreferenceSetAssignment:
      id: ReportConfigGroupPreferenceSetAssignment
      description: Represents a combination of a group with a preference set.
      type: object
      properties:
        group:
          description: Required. Name of the group.
          type: string
        preferenceSet:
          description: Required. Name of the Preference Set.
          type: string
    ListReportConfigsResponse:
      id: ListReportConfigsResponse
      description: Response message for listing report configs.
      type: object
      properties:
        reportConfigs:
          description: A list of report configs.
          type: array
          items:
            $ref: '#/components/schemas/ReportConfig'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Report:
      id: Report
      description: Report represents a point-in-time rendering of the ReportConfig results.
      type: object
      properties:
        name:
          description: Output only. Name of resource.
          readOnly: true
          type: string
        createTime:
          description: Output only. Creation timestamp.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Last update timestamp.
          readOnly: true
          type: string
          format: google-datetime
        displayName:
          description: User-friendly display name. Maximum length is 63 characters.
          type: string
        description:
          description: Free-text description.
          type: string
        type:
          description: Report type.
          type: string
          enumDescriptions:
            - Default Report type.
            - Total cost of ownership Report type.
          enum:
            - TYPE_UNSPECIFIED
            - TOTAL_COST_OF_OWNERSHIP
        state:
          description: Report creation state.
          type: string
          enumDescriptions:
            - Default Report creation state.
            - Creating Report.
            - Successfully created Report.
            - Failed to create Report.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
        summary:
          description: Output only. Summary view of the Report.
          readOnly: true
          $ref: '#/components/schemas/ReportSummary'
    ReportSummary:
      id: ReportSummary
      description: >-
        Describes the Summary view of a Report, which contains aggregated values
        for all the groups and preference sets included in this Report.
      type: object
      properties:
        allAssetsStats:
          description: Aggregate statistics for all the assets across all the groups.
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
        groupFindings:
          description: Findings for each Group included in this report.
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryGroupFinding'
    ReportSummaryAssetAggregateStats:
      id: ReportSummaryAssetAggregateStats
      description: Aggregate statistics for a collection of assets.
      type: object
      properties:
        totalMemoryBytes:
          description: Sum of the memory in bytes of all the assets in this collection.
          type: string
          format: int64
        totalStorageBytes:
          description: >-
            Sum of persistent storage in bytes of all the assets in this
            collection.
          type: string
          format: int64
        totalCores:
          description: Sum of the CPU core count of all the assets in this collection.
          type: string
          format: int64
        totalAssets:
          description: Count of the number of unique assets in this collection.
          type: string
          format: int64
        memoryUtilizationChart:
          description: Total memory split into Used/Free buckets.
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
        storageUtilizationChart:
          description: Total memory split into Used/Free buckets.
          $ref: '#/components/schemas/ReportSummaryUtilizationChartData'
        operatingSystem:
          description: Count of assets grouped by Operating System families.
          $ref: '#/components/schemas/ReportSummaryChartData'
        coreCountHistogram:
          description: Histogram showing a distribution of CPU core counts.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        memoryBytesHistogram:
          description: Histogram showing a distribution of memory sizes.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
        storageBytesHistogram:
          description: Histogram showing a distribution of storage sizes.
          $ref: '#/components/schemas/ReportSummaryHistogramChartData'
    ReportSummaryUtilizationChartData:
      id: ReportSummaryUtilizationChartData
      description: >-
        Utilization Chart is a specific type of visualization which displays a
        metric classified into "Used" and "Free" buckets.
      type: object
      properties:
        used:
          description: Aggregate value which falls into the "Used" bucket.
          type: string
          format: int64
        free:
          description: Aggregate value which falls into the "Free" bucket.
          type: string
          format: int64
    ReportSummaryChartData:
      id: ReportSummaryChartData
      description: Describes a collection of data points rendered as a Chart.
      type: object
      properties:
        dataPoints:
          description: >-
            Each data point in the chart is represented as a name-value pair
            with the name being the x-axis label, and the value being the y-axis
            value.
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryChartDataDataPoint'
    ReportSummaryChartDataDataPoint:
      id: ReportSummaryChartDataDataPoint
      description: Describes a single data point in the Chart.
      type: object
      properties:
        label:
          description: The X-axis label for this data point.
          type: string
        value:
          description: The Y-axis value for this data point.
          type: number
          format: double
    ReportSummaryHistogramChartData:
      id: ReportSummaryHistogramChartData
      description: >-
        A Histogram Chart shows a distribution of values into buckets, showing a
        count of values which fall into a bucket.
      type: object
      properties:
        buckets:
          description: >-
            Buckets in the histogram. There will be `n+1` buckets matching `n`
            lower bounds in the request. The first bucket will be from -infinity
            to the first bound. Subsequent buckets will be between one bound and
            the next. The final bucket will be from the final bound to infinity.
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryHistogramChartDataBucket'
    ReportSummaryHistogramChartDataBucket:
      id: ReportSummaryHistogramChartDataBucket
      description: >-
        A histogram bucket with a lower and upper bound, and a count of items
        with a field value between those bounds. The lower bound is inclusive
        and the upper bound is exclusive. Lower bound may be -infinity and upper
        bound may be infinity.
      type: object
      properties:
        lowerBound:
          description: Lower bound - inclusive.
          type: string
          format: int64
        upperBound:
          description: Upper bound - exclusive.
          type: string
          format: int64
        count:
          description: Count of items in the bucket.
          type: string
          format: int64
    ReportSummaryGroupFinding:
      id: ReportSummaryGroupFinding
      description: Summary Findings for a specific Group.
      type: object
      properties:
        displayName:
          description: Display Name for the Group.
          type: string
        description:
          description: Description for the Group.
          type: string
        assetAggregateStats:
          description: Summary statistics for all the assets in this group.
          $ref: '#/components/schemas/ReportSummaryAssetAggregateStats'
        overlappingAssetCount:
          description: This field is deprecated, do not rely on it having a value.
          deprecated: true
          type: string
          format: int64
        preferenceSetFindings:
          description: Findings for each of the PreferenceSets for this group.
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryGroupPreferenceSetFinding'
    ReportSummaryGroupPreferenceSetFinding:
      id: ReportSummaryGroupPreferenceSetFinding
      description: Summary Findings for a specific Group/PreferenceSet combination.
      type: object
      properties:
        displayName:
          description: Display Name of the Preference Set
          type: string
        description:
          description: Description for the Preference Set.
          type: string
        machinePreferences:
          description: A set of preferences that applies to all machines in the context.
          $ref: '#/components/schemas/VirtualMachinePreferences'
        monthlyCostTotal:
          description: Total monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostCompute:
          description: Compute monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostOsLicense:
          description: Licensing monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostNetworkEgress:
          description: Network Egress monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostStorage:
          description: Storage monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        monthlyCostOther:
          description: Miscellaneous monthly cost for this preference set.
          $ref: '#/components/schemas/Money'
        computeEngineFinding:
          description: >-
            A set of findings that applies to Compute Engine machines in the
            input.
          $ref: '#/components/schemas/ReportSummaryComputeEngineFinding'
        vmwareEngineFinding:
          description: A set of findings that applies to VMWare machines in the input.
          $ref: '#/components/schemas/ReportSummaryVmwareEngineFinding'
        soleTenantFinding:
          description: A set of findings that applies to Sole-Tenant machines in the input.
          $ref: '#/components/schemas/ReportSummarySoleTenantFinding'
    Money:
      id: Money
      description: Represents an amount of money with its currency type.
      type: object
      properties:
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        units:
          description: >-
            The whole units of the amount. For example if `currencyCode` is
            `"USD"`, then 1 unit is one US dollar.
          type: string
          format: int64
        nanos:
          description: >-
            Number of nano (10^-9) units of the amount. The value must be
            between -999,999,999 and +999,999,999 inclusive. If `units` is
            positive, `nanos` must be positive or zero. If `units` is zero,
            `nanos` can be positive, zero, or negative. If `units` is negative,
            `nanos` must be negative or zero. For example $-1.75 is represented
            as `units`=-1 and `nanos`=-750,000,000.
          type: integer
          format: int32
    ReportSummaryComputeEngineFinding:
      id: ReportSummaryComputeEngineFinding
      description: A set of findings that applies to assets destined for Compute Engine.
      type: object
      properties:
        allocatedRegions:
          description: Set of regions in which the assets were allocated.
          type: array
          items:
            type: string
        allocatedAssetCount:
          description: Count of assets which were allocated.
          type: string
          format: int64
        machineSeriesAllocations:
          description: Distribution of assets based on the Machine Series.
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryMachineSeriesAllocation'
        allocatedDiskTypes:
          description: Set of disk types allocated to assets.
          type: array
          items:
            type: string
            enumDescriptions:
              - >-
                Unspecified (default value). Selecting this value allows the
                system to use any disk type according to reported usage. This a
                good value to start with.
              - Standard HDD Persistent Disk.
              - Balanced Persistent Disk.
              - SSD Persistent Disk.
            enum:
              - PERSISTENT_DISK_TYPE_UNSPECIFIED
              - PERSISTENT_DISK_TYPE_STANDARD
              - PERSISTENT_DISK_TYPE_BALANCED
              - PERSISTENT_DISK_TYPE_SSD
    ReportSummaryMachineSeriesAllocation:
      id: ReportSummaryMachineSeriesAllocation
      description: >-
        Represents a data point tracking the count of assets allocated for a
        specific Machine Series.
      type: object
      properties:
        machineSeries:
          description: The Machine Series (e.g. "E2", "N2")
          $ref: '#/components/schemas/MachineSeries'
        allocatedAssetCount:
          description: Count of assets allocated to this machine series.
          type: string
          format: int64
    ReportSummaryVmwareEngineFinding:
      id: ReportSummaryVmwareEngineFinding
      description: A set of findings that applies to assets destined for VMWare Engine.
      type: object
      properties:
        allocatedRegions:
          description: Set of regions in which the assets were allocated
          type: array
          items:
            type: string
        allocatedAssetCount:
          description: Count of assets which are allocated
          type: string
          format: int64
        nodeAllocations:
          description: Set of per-nodetype allocation records
          type: array
          items:
            $ref: '#/components/schemas/ReportSummaryVmwareNodeAllocation'
    ReportSummaryVmwareNodeAllocation:
      id: ReportSummaryVmwareNodeAllocation
      description: Represents assets allocated to a specific VMWare Node type.
      type: object
      properties:
        vmwareNode:
          description: VMWare node type, e.g. "ve1-standard-72"
          $ref: '#/components/schemas/ReportSummaryVmwareNode'
        nodeCount:
          description: Count of this node type to be provisioned
          type: string
          format: int64
        allocatedAssetCount:
          description: Count of assets allocated to these nodes
          type: string
          format: int64
    ReportSummaryVmwareNode:
      id: ReportSummaryVmwareNode
      description: A VMWare Engine Node
      type: object
      properties:
        code:
          description: >-
            Code to identify VMware Engine node series, e.g. "ve1-standard-72".
            Based on the displayName of
            cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes
          type: string
    ReportSummarySoleTenantFinding:
      id: ReportSummarySoleTenantFinding
      description: A set of findings that applies to assets destined for Sole-Tenant nodes.
      type: object
      properties:
        allocatedRegions:
          description: Set of regions in which the assets are allocated
          type: array
          items:
            type: string
        allocatedAssetCount:
          description: Count of assets which are allocated
          type: string
          format: int64
        nodeAllocations:
          description: Set of per-nodetype allocation records
          type: array
          items:
            $ref: '#/components/schemas/ReportSummarySoleTenantNodeAllocation'
    ReportSummarySoleTenantNodeAllocation:
      id: ReportSummarySoleTenantNodeAllocation
      description: Represents the assets allocated to a specific Sole-Tenant node type.
      type: object
      properties:
        node:
          description: Sole Tenant node type, e.g. "m3-node-128-3904"
          $ref: '#/components/schemas/SoleTenantNodeType'
        nodeCount:
          description: Count of this node type to be provisioned
          type: string
          format: int64
        allocatedAssetCount:
          description: Count of assets allocated to these nodes
          type: string
          format: int64
    ListReportsResponse:
      id: ListReportsResponse
      description: Response message for listing Reports.
      type: object
      properties:
        reports:
          description: The list of Reports.
          type: array
          items:
            $ref: '#/components/schemas/Report'
        nextPageToken:
          description: A token identifying a page of results the server should return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    DiscoveryClient:
      id: DiscoveryClient
      description: Represents an installed Migration Center Discovery Client instance.
      type: object
      properties:
        name:
          description: Output only. Identifier. Full name of this discovery client.
          readOnly: true
          type: string
        createTime:
          description: Output only. Time when the discovery client was first created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: >-
            Output only. Time when the discovery client was last updated. This
            value is not updated by heartbeats, to view the last heartbeat time
            please refer to the `heartbeat_time` field.
          readOnly: true
          type: string
          format: google-datetime
        source:
          description: >-
            Required. Immutable. Full name of the source object associated with
            this discovery client.
          type: string
        serviceAccount:
          description: >-
            Required. Service account used by the discovery client for various
            operation.
          type: string
        signalsEndpoint:
          description: Output only. This field is intended for internal use.
          readOnly: true
          type: string
        displayName:
          description: Optional. Free text display name. Maximum length is 63 characters.
          type: string
        description:
          description: Optional. Free text description. Maximum length is 1000 characters.
          type: string
        labels:
          description: Optional. Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        state:
          description: Output only. Current state of the discovery client.
          readOnly: true
          type: string
          enumDescriptions:
            - Client state is unspecified.
            - Client is active.
            - Client is offline.
            - Client is in a degraded state. See the `errors` field for details.
            - Client has expired. See the expire_time field for the expire time.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - OFFLINE
            - DEGRADED
            - EXPIRED
        version:
          description: Output only. Client version, as reported in recent heartbeat.
          readOnly: true
          type: string
        errors:
          description: Output only. Errors affecting client functionality.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Status'
        heartbeatTime:
          description: >-
            Output only. Last heartbeat time. Healthy clients are expected to
            send heartbeats regularly (normally every few minutes).
          readOnly: true
          type: string
          format: google-datetime
        expireTime:
          description: >-
            Optional. Client expiration time in UTC. If specified, the backend
            will not accept new frames after this time.
          type: string
          format: google-datetime
        ttl:
          description: >-
            Optional. Input only. Client time-to-live. If specified, the backend
            will not accept new frames after this time. This field is input
            only. The derived expiration time is provided as output through the
            `expire_time` field.
          type: string
          format: google-duration
    ListDiscoveryClientsResponse:
      id: ListDiscoveryClientsResponse
      description: Response message for listing discovery clients.
      type: object
      properties:
        discoveryClients:
          description: List of discovery clients.
          type: array
          items:
            $ref: '#/components/schemas/DiscoveryClient'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    SendDiscoveryClientHeartbeatRequest:
      id: SendDiscoveryClientHeartbeatRequest
      description: A request to send a discovery client heartbeat.
      type: object
      properties:
        version:
          description: Optional. Client application version.
          type: string
        errors:
          description: Optional. Errors affecting client functionality.
          type: array
          items:
            $ref: '#/components/schemas/Status'
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of the long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    settings:
      id: google.migrationcenter.settings
      name: settings
      title: Settings
      methods:
        get_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_settings:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1settings/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/get_settings'
        insert: []
        update: []
        delete: []
    locations:
      id: google.migrationcenter.locations
      name: locations
      title: Locations
      methods:
        _list:
          operation: &ref_1
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response: &ref_2
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        list:
          operation: *ref_1
          response: *ref_2
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: google.migrationcenter.operations
      name: operations
      title: Operations
      methods:
        _list:
          operation: &ref_3
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response: &ref_4
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        list:
          operation: *ref_3
          response: *ref_4
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    assets:
      id: google.migrationcenter.assets
      name: assets
      title: Assets
      methods:
        _list:
          operation: &ref_5
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets/get
          response: &ref_6
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.assets
        list:
          operation: *ref_5
          response: *ref_6
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets~1{assetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchUpdate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:batchDelete/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        report_asset_frames:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:reportAssetFrames/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        aggregate_values:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1assets:aggregateValues/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/get'
          - $ref: '#/components/x-stackQL-resources/assets/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/assets/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/delete'
    import_jobs:
      id: google.migrationcenter.import_jobs
      name: import_jobs
      title: Import_jobs
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_7
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs/get
          response: &ref_8
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importJobs
        list:
          operation: *ref_7
          response: *ref_8
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:validate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}:run/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/import_jobs/methods/delete'
    import_data_files:
      id: google.migrationcenter.import_data_files
      name: import_data_files
      title: Import_data_files
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles~1{importDataFilesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_9
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/get
          response: &ref_10
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.importDataFiles
        list:
          operation: *ref_9
          response: *ref_10
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1importJobs~1{importJobsId}~1importDataFiles/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_data_files/methods/delete'
    groups:
      id: google.migrationcenter.groups
      name: groups
      title: Groups
      methods:
        _list:
          operation: &ref_11
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/get
          response: &ref_12
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.groups
        list:
          operation: *ref_11
          response: *ref_12
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/groups/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
    groups_assets:
      id: google.migrationcenter.groups_assets
      name: groups_assets
      title: Groups_assets
      methods:
        add_assets:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:addAssets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_assets:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1groups~1{groupsId}:removeAssets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    sources:
      id: google.migrationcenter.sources
      name: sources
      title: Sources
      methods:
        _list:
          operation: &ref_13
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/get
          response: &ref_14
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sources
        list:
          operation: *ref_13
          response: *ref_14
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sources/methods/get'
          - $ref: '#/components/x-stackQL-resources/sources/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sources/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/sources/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/sources/methods/delete'
    error_frames:
      id: google.migrationcenter.error_frames
      name: error_frames
      title: Error_frames
      methods:
        _list:
          operation: &ref_15
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames/get
          response: &ref_16
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.errorFrames
        list:
          operation: *ref_15
          response: *ref_16
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1sources~1{sourcesId}~1errorFrames~1{errorFramesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/get'
          - $ref: '#/components/x-stackQL-resources/error_frames/methods/list'
        insert: []
        update: []
        delete: []
    preference_sets:
      id: google.migrationcenter.preference_sets
      name: preference_sets
      title: Preference_sets
      methods:
        _list:
          operation: &ref_17
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/get
          response: &ref_18
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.preferenceSets
        list:
          operation: *ref_17
          response: *ref_18
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1preferenceSets~1{preferenceSetsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/preference_sets/methods/delete'
    report_configs:
      id: google.migrationcenter.report_configs
      name: report_configs
      title: Report_configs
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_19
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs/get
          response: &ref_20
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reportConfigs
        list:
          operation: *ref_19
          response: *ref_20
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/report_configs/methods/delete'
    reports:
      id: google.migrationcenter.reports
      name: reports
      title: Reports
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_21
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports/get
          response: &ref_22
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.reports
        list:
          operation: *ref_21
          response: *ref_22
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1reportConfigs~1{reportConfigsId}~1reports~1{reportsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/reports/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/reports/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reports/methods/delete'
    discovery_clients:
      id: google.migrationcenter.discovery_clients
      name: discovery_clients
      title: Discovery_clients
      methods:
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveryClients/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        _list:
          operation: &ref_23
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveryClients/get
          response: &ref_24
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.discoveryClients
        list:
          operation: *ref_23
          response: *ref_24
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveryClients~1{discoveryClientsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveryClients~1{discoveryClientsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveryClients~1{discoveryClientsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_heartbeat:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1discoveryClients~1{discoveryClientsId}:sendHeartbeat/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/discovery_clients/methods/get'
          - $ref: '#/components/x-stackQL-resources/discovery_clients/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/discovery_clients/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/discovery_clients/methods/patch'
        delete:
          - $ref: '#/components/x-stackQL-resources/discovery_clients/methods/delete'
paths:
  /v1/projects/{projectsId}/locations/{locationsId}/settings:
    parameters: &ref_25
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets the details of regional settings.
      operationId: migrationcenter.projects.locations.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the regional-level project settings.
      operationId: migrationcenter.projects.locations.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations:
    parameters: *ref_25
    get:
      description: Lists information about the supported locations for this service.
      operationId: migrationcenter.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_25
    get:
      description: Gets information about a location.
      operationId: migrationcenter.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_25
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: migrationcenter.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_25
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: migrationcenter.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: migrationcenter.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_25
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        1, corresponding to `Code.CANCELLED`.
      operationId: migrationcenter.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assets:
    parameters: *ref_25
    get:
      description: Lists all the assets in a given project and location.
      operationId: migrationcenter.projects.locations.assets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assets/{assetsId}:
    parameters: *ref_25
    get:
      description: Gets the details of an asset.
      operationId: migrationcenter.projects.locations.assets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    patch:
      description: Updates the parameters of an asset.
      operationId: migrationcenter.projects.locations.assets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes an asset.
      operationId: migrationcenter.projects.locations.assets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: assetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assets:batchUpdate:
    parameters: *ref_25
    post:
      description: Updates the parameters of a list of assets.
      operationId: migrationcenter.projects.locations.assets.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateAssetsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUpdateAssetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assets:batchDelete:
    parameters: *ref_25
    post:
      description: Deletes list of Assets.
      operationId: migrationcenter.projects.locations.assets.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteAssetsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assets:reportAssetFrames:
    parameters: *ref_25
    post:
      description: Reports a set of frames.
      operationId: migrationcenter.projects.locations.assets.reportAssetFrames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frames'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportAssetFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: source
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/assets:aggregateValues:
    parameters: *ref_25
    post:
      description: Aggregates the requested fields based on provided function.
      operationId: migrationcenter.projects.locations.assets.aggregateValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateAssetsValuesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateAssetsValuesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/importJobs:
    parameters: *ref_25
    post:
      description: Creates an import job.
      operationId: migrationcenter.projects.locations.importJobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: importJobId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists all import jobs.
      operationId: migrationcenter.projects.locations.importJobs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportJobsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:
    parameters: *ref_25
    get:
      description: Gets the details of an import job.
      operationId: migrationcenter.projects.locations.importJobs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes an import job.
      operationId: migrationcenter.projects.locations.importJobs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
    patch:
      description: Updates an import job.
      operationId: migrationcenter.projects.locations.importJobs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportJob'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:validate:
    parameters: *ref_25
    post:
      description: Validates an import job.
      operationId: migrationcenter.projects.locations.importJobs.validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateImportJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}:run:
    parameters: *ref_25
    post:
      description: Runs an import job.
      operationId: migrationcenter.projects.locations.importJobs.run
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunImportJobRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles/{importDataFilesId}:
    parameters: *ref_25
    get:
      description: Gets an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportDataFile'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
    delete:
      description: Delete an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: path
          name: importDataFilesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/importJobs/{importJobsId}/importDataFiles:
    parameters: *ref_25
    get:
      description: List import data files.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportDataFilesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates an import data file.
      operationId: migrationcenter.projects.locations.importJobs.importDataFiles.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDataFile'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: importJobsId
          required: true
          schema:
            type: string
        - in: query
          name: importDataFileId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/groups:
    parameters: *ref_25
    get:
      description: Lists all groups in a given project and location.
      operationId: migrationcenter.projects.locations.groups.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new group in a given project and location.
      operationId: migrationcenter.projects.locations.groups.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: groupId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:
    parameters: *ref_25
    get:
      description: Gets the details of a group.
      operationId: migrationcenter.projects.locations.groups.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a group.
      operationId: migrationcenter.projects.locations.groups.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a group.
      operationId: migrationcenter.projects.locations.groups.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:addAssets:
    parameters: *ref_25
    post:
      description: Adds assets to a group.
      operationId: migrationcenter.projects.locations.groups.addAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAssetsToGroupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/groups/{groupsId}:removeAssets:
    parameters: *ref_25
    post:
      description: Removes assets from a group.
      operationId: migrationcenter.projects.locations.groups.removeAssets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAssetsFromGroupRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: groupsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/sources:
    parameters: *ref_25
    get:
      description: Lists all the sources in a given project and location.
      operationId: migrationcenter.projects.locations.sources.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSourcesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new source in a given project and location.
      operationId: migrationcenter.projects.locations.sources.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: sourceId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}:
    parameters: *ref_25
    get:
      description: Gets the details of a source.
      operationId: migrationcenter.projects.locations.sources.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a source.
      operationId: migrationcenter.projects.locations.sources.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a source.
      operationId: migrationcenter.projects.locations.sources.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames:
    parameters: *ref_25
    get:
      description: Lists all error frames in a given source and location.
      operationId: migrationcenter.projects.locations.sources.errorFrames.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListErrorFramesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/sources/{sourcesId}/errorFrames/{errorFramesId}:
    parameters: *ref_25
    get:
      description: Gets the details of an error frame.
      operationId: migrationcenter.projects.locations.sources.errorFrames.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorFrame'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: sourcesId
          required: true
          schema:
            type: string
        - in: path
          name: errorFramesId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/preferenceSets:
    parameters: *ref_25
    get:
      description: Lists all the preference sets in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPreferenceSetsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
    post:
      description: Creates a new preference set in a given project and location.
      operationId: migrationcenter.projects.locations.preferenceSets.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: preferenceSetId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/preferenceSets/{preferenceSetsId}:
    parameters: *ref_25
    get:
      description: Gets the details of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferenceSet'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the parameters of a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceSet'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a preference set.
      operationId: migrationcenter.projects.locations.preferenceSets.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: preferenceSetsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/reportConfigs:
    parameters: *ref_25
    post:
      description: Creates a report configuration.
      operationId: migrationcenter.projects.locations.reportConfigs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: reportConfigId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists ReportConfigs in a given project and location.
      operationId: migrationcenter.projects.locations.reportConfigs.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}:
    parameters: *ref_25
    get:
      description: Gets details of a single ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports:
    parameters: *ref_25
    post:
      description: Creates a report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: reportId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists Reports in a given ReportConfig.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/reportConfigs/{reportConfigsId}/reports/{reportsId}:
    parameters: *ref_25
    get:
      description: Gets details of a single Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
    delete:
      description: Deletes a Report.
      operationId: migrationcenter.projects.locations.reportConfigs.reports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: reportConfigsId
          required: true
          schema:
            type: string
        - in: path
          name: reportsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveryClients:
    parameters: *ref_25
    post:
      description: Creates a new discovery client.
      operationId: migrationcenter.projects.locations.discoveryClients.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryClient'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: discoveryClientId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
    get:
      description: Lists all the discovery clients in a given project and location.
      operationId: migrationcenter.projects.locations.discoveryClients.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiscoveryClientsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveryClients/{discoveryClientsId}:
    parameters: *ref_25
    get:
      description: Gets the details of a discovery client.
      operationId: migrationcenter.projects.locations.discoveryClients.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryClient'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveryClientsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a discovery client.
      operationId: migrationcenter.projects.locations.discoveryClients.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryClient'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveryClientsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
    delete:
      description: Deletes a discovery client.
      operationId: migrationcenter.projects.locations.discoveryClients.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveryClientsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/discoveryClients/{discoveryClientsId}:sendHeartbeat:
    parameters: *ref_25
    post:
      description: >-
        Sends a discovery client heartbeat. Healthy clients are expected to send
        heartbeats regularly (normally every few minutes).
      operationId: migrationcenter.projects.locations.discoveryClients.sendHeartbeat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendDiscoveryClientHeartbeatRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: discoveryClientsId
          required: true
          schema:
            type: string
